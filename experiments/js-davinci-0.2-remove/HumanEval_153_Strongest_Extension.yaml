name: HumanEval_153_Strongest_Extension
language: js
prompt: "//You will be given the name of a class (a string) and a list of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ list.\n// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n//\
  \ return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\nfunction Strongest_Extension(class_name,\
  \ extensions){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = Strongest_Extension;\n  assert.deepEqual(candidate(\"Watashi\", [\"tEN\", \"\
  niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else if(extensions[i][j] >= 'a' &&\
    \ extensions[i][j] <= 'z'){\n                sm++;\n            }\n        }\n\
    \        let strength = cap - sm;\n        if(strength > strongest_extension_strength){\n\
    \            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    for(let i = 1; i < extensions.length;\
    \ i++){\n        let curr = extensions[i];\n        let strongest_strength = strength(strongest);\n\
    \        let curr_strength = strength(curr);\n        if(curr_strength > strongest_strength){\n\
    \            strongest = curr;\n        }\n    }\n    return class_name + \".\"\
    \ + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_ext\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else if(extensions[i][j] >= 'a' &&\
    \ extensions[i][j] <= 'z'){\n                sm++;\n            }\n        }\n\
    \        if(cap - sm > strongest){\n            strongest = cap - sm;\n      \
    \      strongest_ext = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_ext;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }else{\n                sm++;\n            }\n\
    \        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   let strongest = 0;\n    let strongest_extension = '';\n    for(let i = 0;\
    \ i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n  \
    \      for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        let\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let extension_strength = 0;\n     \
    \   for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                extension_strength++;\n\
    \            }\n            else if(extensions[i][j] >= 'a' && extensions[i][j]\
    \ <= 'z'){\n                extension_strength--;\n            }\n        }\n\
    \        if(extension_strength > strongest_extension_strength){\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest_extension;\n}", "   \
    \ let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n   \
    \             strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z'){\n                cap++;\n            }\n            else{\n       \
    \         sm++;\n            }\n        }\n        var strength = cap - sm;\n\
    \        if(strength > strongest){\n            strongest = strength;\n      \
    \      strongest_ext = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_ext;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongestStrength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongestStrength){\n       \
    \     strongestStrength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest_extension\
    \ = '';\n    let strongest_extension_strength = 0;\n    let current_extension_strength\
    \ = 0;\n    let current_extension_cap = 0;\n    let current_extension_sm = 0;\n\
    \    for(let i = 0; i < extensions.length; i++){\n        current_extension_cap\
    \ = 0;\n        current_extension_sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                current_extension_cap++;\n            }\n            else{\n\
    \                current_extension_sm++;\n            }\n        }\n        current_extension_strength\
    \ = current_extension_cap - current_extension_sm;\n        if(current_extension_strength\
    \ > strongest_extension_strength){\n            strongest_extension_strength =\
    \ current_extension_strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   var strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0;\
    \ i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n  \
    \      for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strongest){\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }", "    let strongest = 0;\n    let strongest_ext = '';\n    for(let i = 0; i\
    \ < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n    \
    \    for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                cap++;\n            }\n\
    \            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n  \
    \              sm++;\n            }\n        }\n        let strength = cap - sm;\n\
    \        if(strength > strongest){\n            strongest = strength;\n      \
    \      strongest_ext = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_ext;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = 0;\n    var strongest_extension = '';\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                cap++;\n            }\n\
    \            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n  \
    \              sm++;\n            }\n        }\n        if(cap - sm > strongest){\n\
    \            strongest = cap - sm;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   var strongest = extensions[0];\n    var strength = 0;\n    for(var i = 0;\
    \ i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n  \
    \      for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strength){\n            strength = cap - sm;\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength += 1;\n     \
    \       }\n            else{\n                strength -= 1;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = 0;\n    var strongest_extension = '';\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strongest){\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ for(let i = 1; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ 0){\n            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for(var j = 0; j < extension.length;\
    \ j++){\n            var letter = extension[j];\n            if(letter.toUpperCase()\
    \ == letter){\n                strength++;\n            }\n            else{\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_ext\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest_ext;\n}", "    let strongest = extensions[0];\n\
    \    let strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n    \
    \    let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strength){\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = 0;\n    let strongest_extension = '';\n    for(let i\
    \ = 0; i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n\
    \        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        let\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongestStrength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongestStrength){\n\
    \            strongestStrength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = 0;\n    let strongest_ext\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n       \
    \ let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_ext\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest_ext;\n}", "    var strongest = 0;\n\
    \    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var strength = 0;\n        for(var j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n   \
    \             strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = 0;\n \
    \       for(let j = 0; j < extension.length; j++){\n            if(extension[j]\
    \ === extension[j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest = extension;\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    extensions.forEach(extension => {\n        let strength = 0;\n   \
    \     for(let i = 0; i < extension.length; i++){\n            if(extension[i]\
    \ === extension[i].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extension;\n        }\n    });\n    return class_name\
    \ + '.' + strongest;\n}", "    let strongest = extensions[0];\n    let strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }else{\n                sm++;\n            }\n\
    \        }\n        if(cap - sm > strength){\n            strength = cap - sm;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strongest){\n            strongest = cap\
    \ - sm;\n            strongest_extension = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_extension;\n}", "    let strongest =\
    \ extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    var strongest = extensions[0];\n \
    \   var strongest_strength = 0;\n    for(var i = 0; i < extensions.length; i++){\n\
    \        var strength = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_ext = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ class_name = class_name;\n    var extensions = extensions;\n    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var extension = extensions[i];\n        var strength = 0;\n \
    \       for(var j = 0; j < extension.length; j++){\n            var letter = extension[j];\n\
    \            if(letter === letter.toUpperCase()){\n                strength +=\
    \ 1;\n            }\n            else{\n                strength -= 1;\n     \
    \       }\n        }\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + '.' + strongest_extension;\n}", "    let strongest =\
    \ extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let current_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                current_strength++;\n            }\n            else{\n     \
    \           current_strength--;\n            }\n        }\n        if(current_strength\
    \ > strongest_strength){\n            strongest_strength = current_strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = extensions[i].match(/[A-Z]/g).length;\n        let\
    \ sm = extensions[i].match(/[a-z]/g).length;\n        let strength = cap - sm;\n\
    \        if(strength > strongest){\n            strongest = strength;\n      \
    \      strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}", "    let strongest = extensions[0];\n    let\
    \ strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n \
    \       let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = 0;\n \
    \       for(let j = 0; j < extension.length; j++){\n            let char = extension[j];\n\
    \            if(char.toUpperCase() === char){\n                strength++;\n \
    \           }\n            else{\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest\
    \ = extension;\n            strongest_strength = strength;\n        }\n    }\n\
    \    return class_name + \".\" + strongest;\n}", "    var strongest = 0;\n   \
    \ var strongest_ext = '';\n    for(var i = 0; i < extensions.length; i++){\n \
    \       var cap = 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = 0;\n \
    \   let strongest_extension = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n        let\
    \ sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n          \
    \  if(extensions[i][j] === extensions[i][j].toUpperCase()){\n                cap++;\n\
    \            }\n            else{\n                sm++;\n            }\n    \
    \    }\n        let strength = cap - sm;\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return `${class_name}.${strongest}`;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = 0;\n    var strongest_extension = '';\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strongest){\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    var strongest\
    \ = extensions[0];\n    var strength = 0;\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest_extension = '';\n  \
    \  let strongest_extension_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let extension_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                extension_strength++;\n            }\n            else{\n   \
    \             extension_strength--;\n            }\n        }\n        if(extension_strength\
    \ > strongest_extension_strength){\n            strongest_extension_strength =\
    \ extension_strength;\n            strongest_extension = extensions[i];\n    \
    \    }\n    }\n    return class_name + '.' + strongest_extension;\n}", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    var strongest = 0;\n    var strongest_ext = '';\n\
    \    for(var i = 0; i < extensions.length; i++){\n        var strength = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest){\n            strongest = strength;\n  \
    \          strongest_ext = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_ext;\n}", "    let strongest = extensions[0];\n    let strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = extensions[0];\n   \
    \ var strength = 0;\n    for(var i = 0; i < extensions.length; i++){\n       \
    \ var ext = extensions[i];\n        var cap = 0;\n        var sm = 0;\n      \
    \  for(var j = 0; j < ext.length; j++){\n            if(ext[j] == ext[j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = ext;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest_extension = extensions[0];\n  \
    \  let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else{\n                strength--;\n            }\n        }\n   \
    \     if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}", "    let strongest = 0;\n    let strongest_extension = \"\"\
    ;\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n   \
    \     let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n  \
    \          if(extensions[i][j] === extensions[i][j].toUpperCase()){\n        \
    \        cap++;\n            }else{\n                sm++;\n            }\n  \
    \      }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else{\n                strength--;\n            }\n        }\n   \
    \     if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    var strongest = extensions[0];\n    var strength\
    \ = 0;\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = 0;\n    var strongest_extension = '';\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strongest){\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = 0;\n    var strongest_extension = '';\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strongest){\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strength = 0;\n    for(let i\
    \ = 0; i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n\
    \        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strength){\n            strength = cap - sm;\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }", "    let strongest = 0;\n    let strongest_extension = '';\n    for(let i\
    \ = 0; i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n\
    \        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }else{\n\
    \                sm++;\n            }\n        }\n        let strength = cap -\
    \ sm;\n        if(strength > strongest){\n            strongest = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var CAP = 0;\n        var SM = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                CAP++;\n            }\n            else{\n                SM++;\n\
    \            }\n        }\n        if(CAP - SM > strongest){\n            strongest\
    \ = CAP - SM;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = 0;\n \
    \   let strongest_extension = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongestStrength = getStrength(strongest);\n    for(let i = 1; i < extensions.length;\
    \ i++){\n        let strength = getStrength(extensions[i]);\n        if(strength\
    \ > strongestStrength){\n            strongest = extensions[i];\n            strongestStrength\
    \ = strength;\n        }\n    }\n    return class_name + '.' + strongest;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let extension_strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                extension_strength++;\n\
    \            }\n            else if(extensions[i][j] >= 'a' && extensions[i][j]\
    \ <= 'z'){\n                extension_strength--;\n            }\n        }\n\
    \        if(extension_strength > strongest_extension_strength){\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest_extension;\n}", "   \
    \ let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for(let j = 0; j < extension.length; j++){\n\
    \            let char = extension[j];\n            if(char.toUpperCase() === char){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i <\
    \ extensions.length; i++){\n        var strength = 0;\n        for(var j = 0;\
    \ j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z'){\n                strength++;\n            }\n            else{\n  \
    \              strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else{\n                strength--;\n            }\n        }\n   \
    \     if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let current_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                current_strength++;\n            }\n            else{\n     \
    \           current_strength--;\n            }\n        }\n        if(current_strength\
    \ > strongest_strength){\n            strongest_strength = current_strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest = extensions[0];\n    let strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = extensions[0];\n    var strength = 0;\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strength){\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_ext\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }", "    var strongest = 0;\n    var strongest_extension = '';\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = 0;\n \
    \   let strongest_extension = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = extensions[0];\n    var strength = 0;\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }else{\n\
    \                sm++;\n            }\n        }\n        if(cap - sm > strength){\n\
    \            strength = cap - sm;\n            strongest = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }else{\n                strength--;\n    \
    \        }\n        }\n        if(strength > strongest_strength){\n          \
    \  strongest_strength = strength;\n            strongest = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_extension = \"\";\n    var strength = 0;\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm =\
    \ 0;\n        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        strength\
    \ = cap - sm;\n        if(strength > strongest){\n            strongest = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}", "    var strongest = extensions[0];\n\
    \    var strongest_strength = 0;\n    for(var i = 0; i < extensions.length; i++){\n\
    \        var strength = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strength){\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else if(extensions[i][j] >= 'a' &&\
    \ extensions[i][j] <= 'z'){\n                sm++;\n            }\n        }\n\
    \        if(cap - sm > strongest){\n            strongest = cap - sm;\n      \
    \      strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}", "    let strongest = extensions[0];\n    let\
    \ strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n \
    \       let current_extension = extensions[i];\n        let current_strength =\
    \ 0;\n        for(let j = 0; j < current_extension.length; j++){\n           \
    \ let current_char = current_extension[j];\n            if(current_char.toUpperCase()\
    \ === current_char){\n                current_strength++;\n            }\n   \
    \         else{\n                current_strength--;\n            }\n        }\n\
    \        if(current_strength > strongest_strength){\n            strongest = current_extension;\n\
    \            strongest_strength = current_strength;\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }else{\n                strength--;\n    \
    \        }\n        }\n        if(strength > strongest_strength){\n          \
    \  strongest_strength = strength;\n            strongest = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = 0;\n    let strongest_ext = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = 0;\n \
    \   let strongest_extension = '';\n    extensions.forEach(extension => {\n   \
    \     let cap = extension.match(/[A-Z]/g).length;\n        let sm = extension.match(/[a-z]/g).length;\n\
    \        let strength = cap - sm;\n        if(strength > strongest){\n       \
    \     strongest = strength;\n            strongest_extension = extension;\n  \
    \      }\n    });\n    return `${class_name}.${strongest_extension}`;\n}", " \
    \   let strongest = extensions[0];\n    let strength = 0;\n    for(let i = 0;\
    \ i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n  \
    \      for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strength){\n            strength = cap - sm;\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + '.' + strongest;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let extension = extensions[i];\n  \
    \      let strength = 0;\n        for(let j = 0; j < extension.length; j++){\n\
    \            let char = extension[j];\n            if(char.toUpperCase() === char){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z'){\n                cap++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                sm++;\n            }\n\
    \        }\n        var strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_ext = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_ext;\n}", "    var\
    \ strongest = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_ext\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else if(extensions[i][j] >= 'a' &&\
    \ extensions[i][j] <= 'z'){\n                sm++;\n            }\n        }\n\
    \        var strength = cap - sm;\n        if(strength > strongest){\n       \
    \     strongest = strength;\n            strongest_ext = extensions[i];\n    \
    \    }\n    }\n    return class_name + '.' + strongest_ext;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z'){\n                cap++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                sm++;\n            }\n\
    \        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest_extension = extensions[0];\n  \
    \  let strongest_extension_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let extension_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                extension_strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                extension_strength--;\n\
    \            }\n        }\n        if(extension_strength > strongest_extension_strength){\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    var strongest = extensions[0];\n    var strength = 0;\n    for(var i\
    \ = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strength){\n            strength = cap - sm;\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    var strongest\
    \ = 0;\n    var strongest_ext = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest_ext;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    extensions.forEach(ext => {\n \
    \       let cap = ext.replace(/[^A-Z]/g, '').length;\n        let sm = ext.replace(/[^a-z]/g,\
    \ '').length;\n        let curr_strength = cap - sm;\n        if(curr_strength\
    \ > strength){\n            strength = curr_strength;\n            strongest =\
    \ ext;\n        }\n    });\n    return class_name + '.' + strongest;\n}", "  \
    \  let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for(let i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for(let j = 0; j < extension.length; j++){\n\
    \            let char = extension[j];\n            if(char >= 'A' && char <= 'Z'){\n\
    \                strength++;\n            }else if(char >= 'a' && char <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}", "    let strongest = extensions[0];\n    let\
    \ strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n \
    \       let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest_strength){\n            strongest_strength = strength;\n       \
    \     strongest = extensions[i];\n        }\n    }\n    return class_name + \"\
    .\" + strongest;\n}", "  let strongest = extensions[0];\n  let strongestStrength\
    \ = 0;\n  for(let i = 0; i < extensions.length; i++){\n    let strength = 0;\n\
    \    for(let j = 0; j < extensions[i].length; j++){\n      if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n        strength++;\n      }\n      else{\n\
    \        strength--;\n      }\n    }\n    if(strength > strongestStrength){\n\
    \      strongestStrength = strength;\n      strongest = extensions[i];\n    }\n\
    \  }\n  return class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let extension = extensions[i];\n        let strength = 0;\n        for(let\
    \ j = 0; j < extension.length; j++){\n            let char = extension[j];\n \
    \           if(char.match(/[A-Z]/)){\n                strength++;\n          \
    \  }else if(char.match(/[a-z]/)){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest\
    \ = extension;\n            strongest_strength = strength;\n        }\n    }\n\
    \    return class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    var strongest = 0;\n    var strongest_ext\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else if(extensions[i][j] >= 'a' &&\
    \ extensions[i][j] <= 'z'){\n                sm++;\n            }\n        }\n\
    \        var strength = cap - sm;\n        if(strength > strongest){\n       \
    \     strongest = strength;\n            strongest_ext = extensions[i];\n    \
    \    }\n    }\n    return class_name + \".\" + strongest_ext;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z'){\n                cap++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                sm++;\n            }\n\
    \        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

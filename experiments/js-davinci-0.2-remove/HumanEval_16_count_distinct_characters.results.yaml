language: js
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var count = 0;\n    var arr = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(arr.indexOf(string[i]) === -1){\n\
    \            arr.push(string[i]);\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var chars = string.toLowerCase().split(\"\");\n    var charMap\
    \ = {};\n    for(var i = 0; i < chars.length; i++){\n        if(!charMap[chars[i]]){\n\
    \            charMap[chars[i]] = true;\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar seen = {};\n\tfor (var i = 0; i < string.length; i++) {\n\t\
    \tif (!seen[string[i].toLowerCase()]) {\n\t\t\tseen[string[i].toLowerCase()] =\
    \ true;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ string.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp1ylek741.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ylek741.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string_array = string.split(\"\");\n    var distinct_characters = [];\n    for(var\
    \ i = 0; i < string_array.length; i++){\n        if(distinct_characters.indexOf(string_array[i].toLowerCase())\
    \ === -1){\n            distinct_characters.push(string_array[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (unique.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ char_count = {};\n    for (var i = 0; i < string.length; i++) {\n        var\
    \ char = string[i].toLowerCase();\n        if (char_count[char]) {\n         \
    \   char_count[char]++;\n        } else {\n            char_count[char] = 1;\n\
    \        }\n    }\n    return Object.keys(char_count).length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = 0;\n    var characters = string.toLowerCase().split(\"\
    \");\n    var unique_characters = characters.filter(function(item, i, ar){ return\
    \ ar.indexOf(item) === i; });\n    return unique_characters.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = {};\n    for (var i = 0; i < string.length; i++) {\n        var char\
    \ = string[i].toLowerCase();\n        if (distinct[char] === undefined) {\n  \
    \          distinct[char] = 1;\n        }\n    }\n    return Object.keys(distinct).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var unique = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(unique.indexOf(string[i].toLowerCase()) == -1){\n            unique\
    \ += string[i].toLowerCase();\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = [];\n    for(var i = 0; i < string.length; i++){\n        if(distinct.indexOf(string[i].toLowerCase())\
    \ == -1){\n            distinct.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ characters = string.toLowerCase().split('');\n    var distinct_characters =\
    \ [];\n    for(var i = 0; i < characters.length; i++){\n        if(distinct_characters.indexOf(characters[i])\
    \ === -1){\n            distinct_characters.push(characters[i]);\n        }\n\
    \    }\n    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var array = string.split(\"\");\n    var\
    \ unique = [];\n    for(var i = 0; i < array.length; i++){\n        if(unique.indexOf(array[i])\
    \ === -1){\n            unique.push(array[i]);\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i]) === i){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbm7bw2dx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbm7bw2dx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_count = {};\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char_count[string[i].toLowerCase()] == undefined){\n     \
    \       char_count[string[i].toLowerCase()] = 1;\n            count++;\n     \
    \   }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //TODO:\
    \ implement this function\n    var count = 0;\n    var string = string.toLowerCase();\n\
    \    var stringArray = string.split(\"\");\n    var stringArrayUnique = stringArray.filter(function(item,\
    \ pos) {\n        return stringArray.indexOf(item) == pos;\n    })\n    count\
    \ = stringArrayUnique.length;\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var char_count = {};\n  for (var i = 0; i < string.length; i++)\
    \ {\n    if (char_count[string[i].toLowerCase()] === undefined) {\n      char_count[string[i].toLowerCase()]\
    \ = 1;\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var count = 0;\n    var array = [];\n  \
    \  for(var i = 0; i < string.length; i++){\n        if(array.indexOf(string[i])\
    \ == -1){\n            array.push(string[i]);\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.lastIndexOf(string[i]) == string.indexOf(string[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm1vmcz7_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm1vmcz7_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var result = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(result.indexOf(arr[i].toLowerCase()) == -1){\n           \
    \ result.push(arr[i].toLowerCase());\n        }\n    }\n    return result.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ chars = string.toLowerCase().split('');\n  let distinct = chars.filter((char,\
    \ index) => chars.indexOf(char) === index);\n  return distinct.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar array = string.split(\"\");\n\tvar newArray = [];\n\tfor(var\
    \ i = 0; i < array.length; i++){\n\t\tif(newArray.indexOf(array[i].toLowerCase())\
    \ == -1){\n\t\t\tnewArray.push(array[i].toLowerCase());\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i < str.length;\
    \ i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (unique.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string_lower = string.toLowerCase();\n    for (var i = 0;\
    \ i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i < str.length;\
    \ i++){\n        if(str.indexOf(str[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ lowerCaseString = string.toLowerCase();\n    var distinctCharacters = [];\n\
    \    for(var i = 0; i < lowerCaseString.length; i++){\n        if(distinctCharacters.indexOf(lowerCaseString[i])\
    \ === -1){\n            distinctCharacters.push(lowerCaseString[i]);\n       \
    \ }\n    }\n    return distinctCharacters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ unique = new Set(string.toLowerCase());\n    return unique.size;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n  \
    \  for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.lastIndexOf(string[i]) == string.indexOf(string[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm1vmcz7_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm1vmcz7_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = [];\n    for(var i = 0; i < string.length; i++){\n        if(distinct.indexOf(string[i].toLowerCase())\
    \ === -1){\n            distinct.push(string[i].toLowerCase());\n        }\n \
    \   }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var distinct = [];\n    for(var i = 0; i < string.length; i++){\n\
    \        if(distinct.indexOf(string[i].toLowerCase()) == -1){\n            distinct.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.lastIndexOf(string[i]) == string.indexOf(string[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm1vmcz7_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm1vmcz7_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var arr2 = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr2.indexOf(arr[i].toLowerCase())\
    \ == -1){\n            arr2.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var distinct = [];\n  for (var i = 0; i < string.length; i++)\
    \ {\n    if (distinct.indexOf(string[i].toLowerCase()) === -1) {\n      distinct.push(string[i].toLowerCase());\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ char_count = {};\n\tfor (var i = 0; i < string.length; i++) {\n\t\tvar char\
    \ = string[i].toLowerCase();\n\t\tif (char_count[char]) {\n\t\t\tchar_count[char]\
    \ += 1;\n\t\t} else {\n\t\t\tchar_count[char] = 1;\n\t\t}\n\t}\n\treturn Object.keys(char_count).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = [];\n    for(var i = 0; i < string.length; i++){\n        if(distinct.indexOf(string[i].toLowerCase())\
    \ == -1){\n            distinct.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ distinct_characters = [];\n    for(let i = 0; i < string.length; i++){\n   \
    \     if(!distinct_characters.includes(string[i].toLowerCase())){\n          \
    \  distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n    return\
    \ distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ chars = string.toLowerCase().split('');\n    var distinct = chars.filter(function(char,\
    \ index){\n        return chars.indexOf(char) == index;\n    });\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string_lower = string.toLowerCase();\n    for (var i = 0;\
    \ i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ count = 0;\n    let char_set = new Set();\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ str = string.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length;\
    \ i++){\n        if(str.indexOf(str[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ unique = new Set(string.toLowerCase());\n    return unique.size;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var unique = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(unique.indexOf(string[i].toLowerCase()) == -1){\n            unique\
    \ += string[i].toLowerCase();\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar string = string.toLowerCase();\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string.indexOf(string[i]) == i){\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ chars = string.toLowerCase().split('');\n    var unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ chars = string.toLowerCase().split('');\n    var unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n  \
    \  for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ unique = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if (unique.indexOf(string[i].toLowerCase())\
    \ == -1) {\n      unique += string[i];\n    }\n  }\n  return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpptxg67v1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpptxg67v1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = 0;\n    for(var i = 0; i < string.length; i++){\n        var char\
    \ = string.charAt(i);\n        if(string.indexOf(char) == i){\n            distinct++;\n\
    \        }\n    }\n    return distinct;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp25ktd017.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp25ktd017.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ == -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ count = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
    \ = [...new Set(chars)];\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ distinct = new Set();\n    for(let i = 0; i < string.length; i++){\n       \
    \ distinct.add(string[i].toLowerCase());\n    }\n    return distinct.size;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var char = arr[i].toLowerCase();\n        if(arr.indexOf(char)\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var result = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(result.indexOf(arr[i].toLowerCase()) == -1){\n           \
    \ result.push(arr[i].toLowerCase());\n        }\n    }\n    return result.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n  \
    \  for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ == -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var result = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(result.indexOf(arr[i].toLowerCase()) == -1){\n           \
    \ result.push(arr[i].toLowerCase());\n        }\n    }\n    return result.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ arr = string.split('');\n  var newArr = [];\n  for(var i = 0; i < arr.length;\
    \ i++){\n    if(newArr.indexOf(arr[i].toLowerCase()) === -1){\n      newArr.push(arr[i].toLowerCase());\n\
    \    }\n  }\n  return newArr.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var distinct = [];\n    for(var i = 0; i\
    \ < string.length; i++){\n        if(distinct.indexOf(string[i]) === -1){\n  \
    \          distinct.push(string[i]);\n        }\n    }\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.lastIndexOf(string[i]) == string.indexOf(string[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm1vmcz7_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm1vmcz7_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var string = string.toLowerCase();\n  for (var i = 0; i < string.length;\
    \ i++) {\n    if (string.indexOf(string[i]) == i) {\n      count++;\n    }\n \
    \ }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    var arr = string.split(\"\
    \");\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n       \
    \ if(newArr.indexOf(arr[i]) === -1){\n            newArr.push(arr[i]);\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var unique = array.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    count = unique.length;\n   \
    \ return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpt8kwycdx.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt8kwycdx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i].toLowerCase()) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var characters = {};\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(characters[string[i].toLowerCase()] === undefined){\n    \
    \        characters[string[i].toLowerCase()] = 1;\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var newArr = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(newArr.indexOf(arr[i].toLowerCase()) === -1){\n          \
    \  newArr.push(arr[i].toLowerCase());\n        }\n    }\n    return newArr.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar array = string.split(\"\");\n\tvar newArray = [];\n\tfor(var\
    \ i = 0; i < array.length; i++){\n\t\tif(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n\t\t\tnewArray.push(array[i].toLowerCase());\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (unique.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ chars = string.toLowerCase().split('');\n    let unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var distinct = [];\n    for(var i = 0; i < string.length; i++){\n\
    \        if(!distinct.includes(string[i].toLowerCase())){\n            distinct.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ string_lower = string.toLowerCase();\n    let string_array = string_lower.split(\"\
    \");\n    let unique_array = [];\n    for (let i = 0; i < string_array.length;\
    \ i++){\n        if (unique_array.indexOf(string_array[i]) === -1){\n        \
    \    unique_array.push(string_array[i]);\n        }\n    }\n    return unique_array.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ characters = string.toLowerCase().split('');\n  var uniqueCharacters = characters.filter(function(character,\
    \ index){\n    return characters.indexOf(character) === index;\n  });\n  return\
    \ uniqueCharacters.length;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var arr2 = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr2.indexOf(arr[i].toLowerCase())\
    \ == -1){\n            arr2.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ distinct = [];\n  for (var i = 0; i < string.length; i++) {\n    if (distinct.indexOf(string[i].toLowerCase())\
    \ === -1) {\n      distinct.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ distinct.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ charSet = new Set();\n    for(let i = 0; i < string.length; i++){\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    return charSet.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var distinct = [];\n    for(var i = 0; i < string.length; i++){\n\
    \        if(distinct.indexOf(string[i].toLowerCase()) == -1){\n            distinct.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ array = string.split('');\n    let count = 0;\n    for(let i = 0; i < array.length;\
    \ i++){\n        if(array.indexOf(array[i]) === i){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmph7r615fl.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph7r615fl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var arr = string.split(\"\");\n    var count\
    \ = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr.indexOf(arr[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.toLowerCase().split('').filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; }).length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.toLowerCase().split('').filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; }).length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ unique = [];\n  var string = string.toLowerCase();\n  for (var i = 0; i < string.length;\
    \ i++) {\n    if (unique.indexOf(string[i]) === -1) {\n      unique.push(string[i]);\n\
    \    }\n  }\n  return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var distinct = [];\n    for(var i = 0; i < string.length; i++){\n\
    \        if(distinct.indexOf(string[i].toLowerCase()) == -1){\n            distinct.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ unique = new Set(string.toLowerCase());\n    return unique.size;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var count = 0;\n    var array = [];\n  \
    \  for(var i = 0; i < string.length; i++){\n        if(array.indexOf(string[i])\
    \ === -1){\n            array.push(string[i]);\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.lastIndexOf(string[i]) == string.indexOf(string[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm1vmcz7_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm1vmcz7_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i].toLowerCase()) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var obj = {};\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(obj[arr[i].toLowerCase()] === undefined){\n\
    \            obj[arr[i].toLowerCase()] = 1;\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (unique.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i]) === -1){\n            arr.push(string[i]);\n\
    \        }\n    }\n    return arr.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = {};\n    for (var i = 0; i < string.length; i++) {\n \
    \       var character = string[i].toLowerCase();\n        if (distinct_characters[character]\
    \ === undefined) {\n            distinct_characters[character] = 1;\n        }\n\
    \    }\n    return Object.keys(distinct_characters).length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ count = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
    \ = chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n \
    \   return unique.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var unique = array.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbum0wp78.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbum0wp78.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var arr2 = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr2.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            arr2.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string_lower = string.toLowerCase();\n    for (var i = 0;\
    \ i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_count = {};\n    for(var i = 0; i < string.length;\
    \ i++){\n        var c = string[i].toLowerCase();\n        if(char_count[c] ===\
    \ undefined){\n            char_count[c] = 1;\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var array = string.split(\"\");\n  var newArray = [];\n  for(var\
    \ i = 0; i < array.length; i++){\n    if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n      newArray.push(array[i].toLowerCase());\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var unique = \"\";\n  for (var i = 0; i < string.length; i++)\
    \ {\n    if (unique.indexOf(string[i].toLowerCase()) == -1) {\n      unique +=\
    \ string[i].toLowerCase();\n      count++;\n    }\n  }\n  return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2uyududw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2uyududw.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ string_lower = string.toLowerCase();\n    let string_array = string_lower.split(\"\
    \");\n    let unique_array = [];\n    for (let i = 0; i < string_array.length;\
    \ i++){\n        if (unique_array.indexOf(string_array[i]) === -1){\n        \
    \    unique_array.push(string_array[i]);\n        }\n    }\n    return unique_array.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var unique = arr.filter(function(item, i, ar){\
    \ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpaftdd1hn.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaftdd1hn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    var string_array = string.split(\"\");\n    for(var\
    \ i = 0; i < string_array.length; i++){\n        if(distinct_characters.indexOf(string_array[i].toLowerCase())\
    \ === -1){\n            distinct_characters.push(string_array[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var characters = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        characters.push(string[i].toLowerCase());\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var obj = {};\n  for (var i = 0; i < string.length; i++) {\n \
    \   if (obj[string[i].toLowerCase()] === undefined) {\n      obj[string[i].toLowerCase()]\
    \ = 1;\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string_array = string.split(\"\");\n    var distinct_characters\
    \ = [];\n    for(var i = 0; i < string_array.length; i++){\n        if(distinct_characters.indexOf(string_array[i].toLowerCase())\
    \ == -1){\n            distinct_characters.push(string_array[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n  \
    \  for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var string_array = string.split(\"\");\n\
    \    var string_array_unique = string_array.filter(function(item, pos) {\n   \
    \     return string_array.indexOf(item) == pos;\n    })\n    return string_array_unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n \
    \   for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(characters[char]){\n            continue;\n        }\n        characters[char]\
    \ = true;\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var arr = string.split(\"\");\n  var newArr = [];\n  for(var i\
    \ = 0; i < arr.length; i++){\n    if(newArr.indexOf(arr[i].toLowerCase()) ===\
    \ -1){\n      newArr.push(arr[i].toLowerCase());\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ chars = string.toLowerCase().split('');\n    var distinct = chars.filter(function(char,\
    \ index){\n        return chars.indexOf(char) == index;\n    });\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = [];\n    for(var i = 0; i < string.length; i++){\n        if(distinct.indexOf(string[i].toLowerCase())\
    \ == -1){\n            distinct.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ char_count = {};\n  for (var i = 0; i < string.length; i++) {\n    var char\
    \ = string[i].toLowerCase();\n    if (char_count[char]) {\n      char_count[char]++;\n\
    \    } else {\n      char_count[char] = 1;\n    }\n  }\n  return Object.keys(char_count).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ distinct_characters = [];\n    for(let i = 0; i < string.length; i++){\n   \
    \     if(!distinct_characters.includes(string[i].toLowerCase())){\n          \
    \  distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n    return\
    \ distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = [];\n    for(var i = 0; i < string.length; i++){\n        if(distinct.indexOf(string[i].toLowerCase())\
    \ === -1){\n            distinct.push(string[i].toLowerCase());\n        }\n \
    \   }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n  \
    \  for(var i = 0; i < array.length; i++){\n        if(!newArray.includes(array[i].toLowerCase())){\n\
    \            newArray.push(array[i].toLowerCase());\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ string = string.toLowerCase();\n\tvar count = 0;\n\tvar char_count = {};\n\t\
    for (var i = 0; i < string.length; i++) {\n\t\tif(char_count[string[i]] === undefined){\n\
    \t\t\tchar_count[string[i]] = 1;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ str = string.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length;\
    \ i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ chars = {};\n    for(var i = 0; i < string.length; i++){\n        var char =\
    \ string[i].toLowerCase();\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ distinct = [];\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(distinct.indexOf(string[i].toLowerCase())\
    \ === -1){\n\t\t\tdistinct.push(string[i].toLowerCase());\n\t\t}\n\t}\n\treturn\
    \ distinct.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var unique = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(unique.indexOf(string[i].toLowerCase()) == -1){\n            unique\
    \ += string[i].toLowerCase();\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var count = 0;\n    var arr = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(arr.indexOf(string[i]) == -1){\n\
    \            arr.push(string[i]);\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //your\
    \ code here\n    var count = 0;\n    var str = string.toLowerCase();\n    for(var\
    \ i = 0; i < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ distinct = 0;\n\tvar arr = string.split(\"\");\n\tvar obj = {};\n\tfor(var i\
    \ = 0; i < arr.length; i++){\n\t\tif(obj[arr[i].toLowerCase()] === undefined){\n\
    \t\t\tobj[arr[i].toLowerCase()] = 1;\n\t\t\tdistinct++;\n\t\t}\n\t}\n\treturn\
    \ distinct;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var obj = {};\n    for(var i = 0; i < string.length; i++){\n\
    \        if(!obj[string[i].toLowerCase()]){\n            obj[string[i].toLowerCase()]\
    \ = 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var unique = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(unique.indexOf(string[i].toLowerCase()) == -1){\n            unique\
    \ += string[i].toLowerCase();\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i < str.length;\
    \ i++){\n        if(str.indexOf(str[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar characters = {};\n\tfor(var i = 0; i < string.length; i++){\n\
    \t\tif(!characters[string[i].toLowerCase()]){\n\t\t\tcharacters[string[i].toLowerCase()]\
    \ = true;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ str = string.toLowerCase();\n    var arr = str.split('');\n    var result =\
    \ [];\n    for(var i = 0; i < arr.length; i++){\n        if(result.indexOf(arr[i])\
    \ == -1){\n            result.push(arr[i]);\n        }\n    }\n    return result.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var char_set = new Set();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(!char_set.has(string[i].toLowerCase())){\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string_lower = string.toLowerCase();\n    for (var i = 0;\
    \ i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ characters = string.split(\"\");\n\tvar distinct_characters = [];\n\tfor(var\
    \ i = 0; i < characters.length; i++){\n\t\tif(distinct_characters.indexOf(characters[i].toLowerCase())\
    \ == -1){\n\t\t\tdistinct_characters.push(characters[i].toLowerCase());\n\t\t\
    }\n\t}\n\treturn distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var newArr = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(newArr.indexOf(arr[i].toLowerCase()) === -1){\n          \
    \  newArr.push(arr[i].toLowerCase());\n        }\n    }\n    return newArr.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n    \
    \        distinct_characters.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (unique.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var arr = string.split(\"\");\n  for(var i = 0; i < arr.length;\
    \ i++){\n    if(arr.indexOf(arr[i].toLowerCase()) === i){\n      count++;\n  \
    \  }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ string = string.toLowerCase();\n\tvar count = 0;\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string.indexOf(string[i]) === i){\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ str = string.toLowerCase();\n    var count = 0;\n    var arr = [];\n    for(var\
    \ i = 0; i < str.length; i++){\n        if(arr.indexOf(str[i]) === -1){\n    \
    \        arr.push(str[i]);\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var distinct = [];\n    for(var i = 0; i\
    \ < string.length; i++){\n        if(distinct.indexOf(string[i]) == -1){\n   \
    \         distinct.push(string[i]);\n        }\n    }\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i < array.length;\
    \ i++){\n        if(array.indexOf(array[i]) === i){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbjez0d7j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbjez0d7j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

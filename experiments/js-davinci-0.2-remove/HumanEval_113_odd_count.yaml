name: HumanEval_113_odd_count
language: js
prompt: "//Given a list of strings, where each string consists of only digits, return\
  \ a list.\n// Each element i of the output should be \"the number of odd elements\
  \ in the\n// string i of the input.\" where all the i's should be replaced by the\
  \ number\n// of odd digits in the i'th string of the input.\nfunction odd_count(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = odd_count;\n  assert.deepEqual(candidate([\"1234567\"]),[\"the number of odd\
  \ elements 4n the str4ng 4 of the 4nput.\"]);\n  assert.deepEqual(candidate([\"\
  3\", \"11111111\"]),[\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
  , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n  assert.deepEqual(candidate([\"\
  271\", \"137\", \"314\"]),[\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
  , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
  \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\n\ntest();"
completions: ["  return lst.map(function(x){\n    var count = 0;\n    for (var i =\
    \ 0; i < x.length; i++) {\n      if (x[i] % 2 === 1) {\n        count++;\n   \
    \   }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(digit){\n      return digit % 2 !==\
    \ 0;\n    }).length;\n  });\n}\n", "    return lst.map(function(x){\n        var\
    \ count = 0;\n        for(var i = 0; i < x.length; i++){\n            if(x[i]\
    \ % 2 != 0){\n                count++;\n            }\n        }\n        return\
    \ count;\n    });\n}\n", "  return lst.map(function(num){\n    return num.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 == 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 != 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    var count = 0;\n    for(var i = 0; i < str.length; i++){\n      if(parseInt(str[i])\
    \ % 2 !== 0){\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(function(e){\n    return e.split('').filter(function(e){\n   \
    \   return e % 2 != 0;\n    }).length;\n  });\n}\n", "  return lst.map(x => x.split('').filter(y\
    \ => y % 2 !== 0).length);\n}\n", "  return lst.map(function(x){\n    var count\
    \ = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n\
    \        count++;\n      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n   \
    \   return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str)\
    \ {\n    return str.split('').filter(function(num) {\n      return num % 2 ===\
    \ 1;\n    }).length;\n  });\n}\n", "  var count = 0;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] % 2 !==\
    \ 0){\n        count++;\n      }\n    }\n    lst[i] = count;\n    count = 0;\n\
    \  }\n  return lst;\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(x =>\
    \ x.split('').filter(y => y % 2).length);\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n   \
    \   return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  let result = [];\n\
    \  for (let i = 0; i < lst.length; i++) {\n    let count = 0;\n    for (let j\
    \ = 0; j < lst[i].length; j++) {\n      if (lst[i][j] % 2 !== 0) {\n        count++;\n\
    \      }\n    }\n    result.push(count);\n  }\n  return result;\n}\n", "  return\
    \ lst.map(function(x){\n    var count = 0;\n    for (var i = 0; i < x.length;\
    \ i++) {\n      if (x[i] % 2 !== 0) {\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "  return lst.map(function(num){\n    return num.split('').filter(function(digit){\n\
    \      return digit % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  let oddCount = 0;\n  let oddNums = [];\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    for (let j = 0; j < lst[i].length; j++)\
    \ {\n      if (lst[i][j] % 2 !== 0) {\n        oddCount++;\n      }\n    }\n \
    \   oddNums.push(oddCount);\n    oddCount = 0;\n  }\n  return oddNums;\n}\n",
  "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n}\n", "  return\
    \ lst.map(function(str){\n    var count = 0;\n    for(var i = 0; i < str.length;\
    \ i++){\n      if(str[i] % 2 === 1){\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  let result = [];\n  for (let i = 0; i < lst.length; i++) {\n\
    \    let count = 0;\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    result.push(count);\n  }\n\
    \  return result;\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2).length);\n\
    }\n", "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(item){\n    var count = 0;\n    for(var\
    \ i = 0; i < item.length; i++){\n      if(item[i] % 2 !== 0){\n        count++;\n\
    \      }\n    }\n    return count;\n  });\n}\n", "  let oddCount = 0;\n  let oddArr\
    \ = [];\n  for (let i = 0; i < lst.length; i++) {\n    for (let j = 0; j < lst[i].length;\
    \ j++) {\n      if (lst[i][j] % 2 !== 0) {\n        oddCount++;\n      }\n   \
    \ }\n    oddArr.push(oddCount);\n    oddCount = 0;\n  }\n  return oddArr;\n}\n",
  "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "    return lst.map(x\
    \ => x.split('').filter(y => y % 2 !== 0).length)\n}\n", "    return lst.map(x\
    \ => x.split('').filter(y => y % 2 !== 0).length)\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2).length);\n\
    }\n", "    return lst.map(function(x){\n        return x.split('').filter(function(y){\n\
    \            return y % 2 == 1;\n        }).length;\n    });\n}\n", "    return\
    \ lst.map(function(x){\n        return x.split('').filter(function(y){\n     \
    \       return y % 2 !== 0;\n        }).length;\n    });\n}\n", "  return lst.map(x\
    \ => x.split('').filter(y => y % 2 != 0).length);\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n\
    }\n", "    return lst.map(function(x){\n        return x.split('').filter(function(y){\n\
    \            return y % 2 != 0;\n        }).length;\n    });\n}\n", "  return\
    \ lst.map(function(x){\n    return x.split('').filter(function(y){\n      return\
    \ y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 === 1;\n\
    \    }).length;\n  });\n}\n", "    return lst.map(function(x){\n        var count\
    \ = 0;\n        for(var i = 0; i < x.length; i++){\n            if(x[i] % 2 !==\
    \ 0){\n                count++;\n            }\n        }\n        return count;\n\
    \    });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n}\n", "  return\
    \ lst.map(function(x){\n    return x.split('').filter(function(y){\n      return\
    \ y % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 != 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    var count = 0;\n    for (var\
    \ i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n        count++;\n\
    \      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    var count = 0;\n    for (var\
    \ i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n        count++;\n\
    \      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(x =>\
    \ x.split('').filter(y => y % 2 !== 0).length);\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 == 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 == 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(x =>\
    \ x.split('').filter(x => x % 2 !== 0).length)\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  let oddCount = 0;\n\
    \  let oddArray = [];\n  for (let i = 0; i < lst.length; i++) {\n    let currentString\
    \ = lst[i].toString();\n    for (let j = 0; j < currentString.length; j++) {\n\
    \      if (currentString[j] % 2 !== 0) {\n        oddCount++;\n      }\n    }\n\
    \    oddArray.push(oddCount);\n    oddCount = 0;\n  }\n  return oddArray;\n}\n",
  "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(digit){\n      return digit % 2 !==\
    \ 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n    return\
    \ str.split('').filter(function(num){\n      return num % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(e => e.split('').filter(e => e % 2 === 1).length);\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(x =>\
    \ x.split('').filter(y => y % 2 === 1).length);\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){return y%2==1}).length\n  })\n}\n",
  "  return lst.map(function(str){\n    var count = 0;\n    for(var i = 0; i < str.length;\
    \ i++){\n      if(str[i] % 2 !== 0){\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "  return lst.map(function(x){\n    var count = 0;\n  \
    \  for (var i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n       \
    \ count++;\n      }\n    }\n    return count;\n  });\n}\n", "    return lst.map(x\
    \ => x.split('').filter(y => y % 2 != 0).length);\n}\n", "    return lst.map(function(x){\n\
    \        return x.split('').filter(function(y){\n            return y % 2 !==\
    \ 0;\n        }).length;\n    });\n}\n", "    let result = [];\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        let count = 0;\n        for (let j = 0;\
    \ j < lst[i].length; j++) {\n            if (lst[i][j] % 2 !== 0) {\n        \
    \        count++;\n            }\n        }\n        result.push(count);\n   \
    \ }\n    return result;\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(x =>\
    \ x.split('').filter(y => y % 2).length);\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "    return lst.map(x => x.split('').filter(y => y % 2 !== 0).length)\n}\n", " \
    \ return lst.map(function(x){\n    var count = 0;\n    for (var i = 0; i < x.length;\
    \ i++) {\n      if (x[i] % 2 != 0) {\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "  return lst.map(function(str){\n    var count = 0;\n\
    \    for(var i = 0; i < str.length; i++){\n      if(str[i] % 2 !== 0){\n     \
    \   count++;\n      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(str)\
    \ {\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n      if\
    \ (str[i] % 2 === 1) {\n        count++;\n      }\n    }\n    return count;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(x => x.split('').filter(y => y % 2).length);\n}\n", "  return\
    \ lst.map(function(str){\n    var count = 0;\n    for(var i = 0; i < str.length;\
    \ i++){\n      if(str[i] % 2 !== 0){\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "    return lst.map(x => x.split('').filter(y => y % 2\
    \ !== 0).length)\n}\n", "    return lst.map(x => x.split('').filter(y => y % 2\
    \ !== 0).length)\n}\n", "  let oddCount = 0;\n  let oddList = [];\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    for (let j = 0; j < lst[i].length; j++) {\n\
    \      if (lst[i][j] % 2 !== 0) {\n        oddCount++;\n      }\n    }\n    oddList.push(oddCount);\n\
    \    oddCount = 0;\n  }\n  return oddList;\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    var count = 0;\n    for (var\
    \ i = 0; i < x.length; i++) {\n      if (x[i] % 2 === 1) {\n        count++;\n\
    \      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  //your code here\n\
    \  return lst.map(x => x.split('').filter(y => y % 2 !== 0).length);\n}\n", " \
    \ return lst.map(function(x){\n    return x.split('').filter(function(y){\n  \
    \    return y % 2 == 1;\n    }).length;\n  });\n}\n", "    return lst.map(function(str){\n\
    \        return str.split('').filter(function(num){\n            return num %\
    \ 2 !== 0;\n        }).length;\n    });\n}\n", "  return lst.map(function(str){\n\
    \    var count = 0;\n    for(var i = 0; i < str.length; i++){\n      if(str[i]\
    \ % 2 === 1){\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n   \
    \   return y % 2 == 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 == 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(x => x.split('').filter(y => y % 2).length);\n}\n", "  return\
    \ lst.map(function(x){\n    var count = 0;\n    for (var i = 0; i < x.length;\
    \ i++) {\n      if (x[i] % 2 === 1) {\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "    return lst.map(x => x.split('').filter(y => y % 2\
    \ != 0).length);\n}\n", "  return lst.map(function(x){\n    var count = 0;\n \
    \   for (var i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n      \
    \  count++;\n      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "    return lst.map(x => x.split('').filter(y => y % 2 !== 0).length)\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(x => x.split('').filter(y => y % 2 != 0).length);\n\
    }\n", "  return lst.map(x => x.split('').filter(y => y % 2).length);\n}\n", " \
    \ return lst.map(function(x){\n    var count = 0;\n    for (var i = 0; i < x.length;\
    \ i++) {\n      if (x[i] % 2 !== 0) {\n        count++;\n      }\n    }\n    return\
    \ count;\n  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(x =>\
    \ x.split('').filter(y => y % 2 != 0).length);\n}\n", "  return lst.map(x => x.split('').filter(y\
    \ => y % 2 !== 0).length);\n}\n", "  return lst.map(function(str){\n    return\
    \ str.split('').filter(function(num){\n      return num % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 != 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(elem){\n    return elem.split('').filter(function(elem){\n\
    \      return elem % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 != 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "    return lst.map(function(x){\n        return\
    \ x.split('').filter(function(y){\n            return y % 2 != 0;\n        }).length;\n\
    \    });\n}\n", "  let count = 0;\n  let result = [];\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] %\
    \ 2 !== 0) {\n        count++;\n      }\n    }\n    result.push(count);\n    count\
    \ = 0;\n  }\n  return result;\n}\n", "  return lst.map(function(str) {\n    return\
    \ str.split('').filter(function(num) {\n      return num % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    var count = 0;\n    for (var\
    \ i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n        count++;\n\
    \      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(function(str){\n    var count\
    \ = 0;\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] % 2 !== 0)\
    \ {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n", "  return\
    \ lst.map(function(x){\n    return x.split('').filter(function(y){\n      return\
    \ y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    var count = 0;\n    for (var\
    \ i = 0; i < x.length; i++) {\n      if (x[i] % 2 !== 0) {\n        count++;\n\
    \      }\n    }\n    return count;\n  });\n}\n", "  return lst.map(x => x.split('').filter(y\
    \ => y % 2 === 1).length);\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(x\
    \ => x.split('').filter(y => y % 2 !== 0).length);\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 == 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(x => x.split('').filter(y => y\
    \ % 2).length);\n}\n", "  return lst.map(function(str) {\n    var count = 0;\n\
    \    for (var i = 0; i < str.length; i++) {\n      if (parseInt(str[i]) % 2 !==\
    \ 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n", "  return\
    \ lst.map(function(x){\n    return x.split('').filter(function(y){\n      return\
    \ y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(function(str){\n    return str.split('').filter(function(num){\n\
    \      return num % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "    return lst.map(function(x){\n        return x.split('').filter(function(y){\n\
    \            return y % 2 === 1;\n        }).length;\n    });\n}\n", "  return\
    \ lst.map(function(x){\n    return x.split('').filter(function(y){\n      return\
    \ y % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 !== 0;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str){\n\
    \    return str.split('').filter(function(num){\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n   \
    \   return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  let count = 0;\n  let\
    \ result = [];\n  for (let i = 0; i < lst.length; i++) {\n    for (let j = 0;\
    \ j < lst[i].length; j++) {\n      if (lst[i][j] % 2 !== 0) {\n        count++;\n\
    \      }\n    }\n    result.push(count);\n    count = 0;\n  }\n  return result;\n\
    }\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (parseInt(x[i])\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n",
  "  return lst.map(x => x.split('').filter(y => y % 2).length);\n}\n", "  return\
    \ lst.map(function(x){\n    return x.split('').filter(function(y){\n      return\
    \ y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(str) {\n\
    \    return str.split('').filter(function(num) {\n      return num % 2 !== 0;\n\
    \    }).length;\n  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 === 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(str) {\n    return str.split('').filter(function(num)\
    \ {\n      return num % 2 === 1;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    return x.split('').filter(function(y){\n      return y % 2 == 1;\n    }).length;\n\
    \  });\n}\n", "  return lst.map(function(x){\n    return x.split('').filter(function(y){\n\
    \      return y % 2 !== 0;\n    }).length;\n  });\n}\n", "  return lst.map(function(x){\n\
    \    var count = 0;\n    for (var i = 0; i < x.length; i++) {\n      if (x[i]\
    \ % 2 !== 0) {\n        count++;\n      }\n    }\n    return count;\n  });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

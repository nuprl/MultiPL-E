language: js
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var flipped_string = \"\";\n \
    \ for(var i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      flipped_string += string[i].toLowerCase();\n    }\n    else{\n      flipped_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return flipped_string;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar new_string = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\
    \t\t\tnew_string += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnew_string\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar newString = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\
    \t\t\tnewString += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnewString\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] == string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    let newString = '';\n    for(let\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        } else {\n       \
    \     newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar new_string = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\
    \t\t\tnew_string += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnew_string\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    } else {\n      newString +=\
    \ string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped_string = \"\";\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            flipped_string += string[i].toUpperCase();\n        }\n    }\n  \
    \  return flipped_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar new_string = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\
    \t\t\tnew_string += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnew_string\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    } else {\n      newString +=\
    \ string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var flipped = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      flipped += string[i].toLowerCase();\n    }\n    else{\n      flipped +=\
    \ string[i].toUpperCase();\n    }\n  }\n  return flipped;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }else{\n        \
    \    new_string += string[i].toUpperCase();\n        }\n    }\n    return new_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    return string.split('').map(function(char){\n\
    \        if(char.toUpperCase() === char){\n            return char.toLowerCase();\n\
    \        }\n        else{\n            return char.toUpperCase();\n        }\n\
    \    }).join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped_string = \"\";\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            flipped_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            flipped_string += string[i].toUpperCase();\n        }\n    }\n  \
    \  return flipped_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] == string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    return string.split('').map(function(char){\n\
    \        if(char.match(/[a-z]/)){\n            return char.toUpperCase();\n  \
    \      } else if(char.match(/[A-Z]/)){\n            return char.toLowerCase();\n\
    \        } else {\n            return char;\n        }\n    }).join('');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar new_string = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] == string[i].toUpperCase()){\n\
    \t\t\tnew_string += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnew_string\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    } else {\n      newString +=\
    \ string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        } else {\n       \
    \     newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] == string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar newString = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] == string[i].toUpperCase()){\n\
    \t\t\tnewString += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnewString\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn newString;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    } else {\n      newString +=\
    \ string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var result = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            result += string[i].toLowerCase();\n        }\n        else{\n  \
    \          result += string[i].toUpperCase();\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        } else {\n       \
    \     newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar new_string = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] == string[i].toUpperCase()){\n\
    \t\t\tnew_string += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnew_string\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        } else {\n      \
    \      new_string += string[i].toUpperCase();\n        }\n    }\n    return new_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar new_string = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\
    \t\t\tnew_string += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tnew_string\
    \ += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var newString = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      newString += string[i].toLowerCase();\n    }\n    else{\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var flipped = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      flipped += string[i].toLowerCase();\n    }\n    else{\n      flipped +=\
    \ string[i].toUpperCase();\n    }\n  }\n  return flipped;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        } else {\n      \
    \      new_string += string[i].toUpperCase();\n        }\n    }\n    return new_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n\tvar flipped = \"\";\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string[i] === string[i].toUpperCase()){\n\
    \t\t\tflipped += string[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tflipped +=\
    \ string[i].toUpperCase();\n\t\t}\n\t}\n\treturn flipped;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else if(string[i]\
    \ === string[i].toLowerCase()){\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }else{\n         \
    \   newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var flipped = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            flipped += string[i].toLowerCase();\n        }\n        else{\n \
    \           flipped += string[i].toUpperCase();\n        }\n    }\n    return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var newString = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        else{\n\
    \            newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n  var new_string = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      new_string += string[i].toLowerCase();\n    }\n    else{\n      new_string\
    \ += string[i].toUpperCase();\n    }\n  }\n  return new_string;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\nfunction flip_case(string){\n    var new_string = \"\";\n   \
    \ for(var i = 0; i < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else{\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

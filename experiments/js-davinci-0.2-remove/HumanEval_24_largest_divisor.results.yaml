language: js
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ != 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ != 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i\
    \ !== 0){\n        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i!==0){\n\
    \        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n - 1;\n  while(n\
    \ % divisor !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n - 1;\n  while(n\
    \ % divisor !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n;\n    while(divisor\
    \ > 0){\n        if(n % divisor == 0){\n            return divisor;\n        }\n\
    \        divisor--;\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn2530tu1.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn2530tu1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 2; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = n - 1;\n\twhile\
    \ (n % divisor !== 0){\n\t\tdivisor--;\n\t}\n\treturn divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(i>0){\n\
    \        if(n%i==0){\n            return i;\n        }\n        i--;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 2; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i--;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n - 1;\n  while(n\
    \ % divisor !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar largest_divisor = 1;\n\t\
    for(var i = 2; i < n; i++){\n\t\tif(n % i == 0){\n\t\t\tlargest_divisor = i;\n\
    \t\t}\n\t}\n\treturn largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i >= 1; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 1;\n    for(var\
    \ i = 2; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar i = n-1;\n\twhile(i > 0){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t\ti--;\n\t}\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = n - 1;\n\twhile(n\
    \ % divisor !== 0){\n\t\tdivisor--;\n\t}\n\treturn divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 2; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ != 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ != 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i--;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = n-1;\n\twhile(n%divisor\
    \ !== 0){\n\t\tdivisor--;\n\t}\n\treturn divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ != 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar i = n - 1;\n\twhile(n %\
    \ i !== 0){\n\t\ti--;\n\t}\n\treturn i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(divisor\
    \ > 0){\n        if(n % divisor == 0){\n            return divisor;\n        }\n\
    \        divisor--;\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i\
    \ !== 0){\n        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            max = i;\n       \
    \ }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ != 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i--;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i\
    \ !== 0){\n        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(i>0){\n\
    \        if(n%i == 0){\n            return i;\n        }\n        i--;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i--;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n - 1;\n  while(n\
    \ % divisor !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = n-1;\n\twhile\
    \ (n%divisor !== 0){\n\t\tdivisor--;\n\t}\n\treturn divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i >= 1; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n - 1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i--;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(n % divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

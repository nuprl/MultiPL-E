language: js
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a <= 0 || h <= 0){\n        return \"Nieprawid\u0142\
    owe dane\";\n    }\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a <= 0 || h <= 0){\n        return \"Nieprawid\u0142\
    owe dane\";\n    }\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

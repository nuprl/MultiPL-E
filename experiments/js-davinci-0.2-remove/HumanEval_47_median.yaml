name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1]\
    \ + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m\
    \ = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\t\
    else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar len = l.length;\n\tif(len%2\
    \ == 0){\n\t\treturn (l[len/2] + l[len/2-1])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(len/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n \
    \       return l[Math.floor(m)];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m]+l[m-1])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n",
  "\tvar n = l.length;\n\tif(n == 0) return 0;\n\tif(n == 1) return l[0];\n\tif(n\
    \ == 2) return (l[0] + l[1])/2;\n\tl.sort(function(a,b){return a-b});\n\tif(n%2\
    \ == 0) return (l[n/2-1] + l[n/2])/2;\n\telse return l[(n-1)/2];\n}\n", "    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if(len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "\t\
    var sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\t\
    if(len%2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2-1])/2;\n\t}else{\n\t\
    \treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar i = 0;\n\tvar j\
    \ = 0;\n\tvar k = 0;\n\tvar m = 0;\n\tvar n = 0;\n\tvar o = 0;\n\tvar p = 0;\n\
    \tvar q = 0;\n\tvar r = 0;\n\tvar s = 0;\n\tvar t = 0;\n\tvar u = 0;\n\tvar v\
    \ = 0;\n\tvar w = 0;\n\tvar x = 0;\n\tvar y = 0;\n\tvar z = 0;\n\tvar aa = 0;\n\
    \tvar ab = 0;\n\tvar ac = 0;\n\tvar ad = 0;\n\tvar ae = 0;\n\tvar af = 0;\n\t\
    var ag = 0;\n\tvar ah = 0;\n\tvar ai = 0;\n\tvar aj = 0;\n\tvar ak = 0;\n\tvar\
    \ al = 0;\n\tvar am = 0;\n\tvar an = 0;\n\tvar ao = 0;\n\tvar ap = 0;\n\tvar aq\
    \ = 0;\n\tvar ar = 0;\n\tvar as = 0;\n\tvar at = 0;\n\tvar au = 0;\n\tvar av =\
    \ 0;\n\tvar aw = 0;\n\tvar ax = 0;\n\tvar ay = 0;\n\tvar az = 0;\n\tvar ba = 0;\n\
    \tvar bb = 0;\n\tvar bc = 0;\n\tvar bd = 0;\n\tvar be = 0;\n\tvar bf = 0;\n\t\
    var bg = 0;\n\tvar bh = 0;\n\tvar bi = 0;\n\tvar bj = 0;\n\tvar bk = 0;\n\tvar\
    \ bl = 0;\n\tvar bm = 0;\n\tvar bn = 0;\n\tvar bo = 0;\n\tvar bp = 0;\n\tvar bq\
    \ = 0;\n\tvar br = 0;\n\tvar bs = 0;\n\tvar bt = 0;\n\tvar bu = 0;\n\tvar bv =\
    \ 0;\n\tvar bw = 0;\n\tvar bx = 0;\n\tvar by = 0;\n\tvar bz = 0;\n\tvar ca = 0",
  "  var m = l.length/2;\n  if(l.length%2==0){\n    return (l[m]+l[m-1])/2;\n  }\n\
    \  else{\n    return l[Math.floor(m)];\n  }\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar half = Math.floor(l.length/2);\n\tif(l.length % 2)\n\t\treturn\
    \ l[half];\n\telse\n\t\treturn (l[half-1] + l[half]) / 2.0;\n}\n", "\tvar m =\
    \ l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}else{\n\
    \t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    var m = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n \
    \   }\n}\n", "\tvar l = l.sort(function(a,b){return a-b});\n\tvar l_len = l.length;\n\
    \tif(l_len%2 == 0){\n\t\treturn (l[l_len/2] + l[l_len/2-1])/2;\n\t}\n\telse{\n\
    \t\treturn l[Math.floor(l_len/2)];\n\t}\n}\n", "    var m = l.length / 2;\n  \
    \  return (l.length % 2) ? l[m] : (l[m-1] + l[m]) / 2;\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[m];\n\t}\n}\n", "\tl.sort(function(a,b){return a-b});\n\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[m];\n\t}\n}\n", "\treturn l[Math.floor(l.length/2)];\n}\n", "  var m = l.length/2;\n\
    \  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }\n  else{\n    return\
    \ l[Math.floor(m)];\n  }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "    return l[Math.floor(l.length/2)];\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len%2 == 0){\n\t\treturn (sorted[len/2]\
    \ + sorted[len/2-1])/2;\n\t}else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar mid = Math.floor(sorted.length/2);\n\
    \tif(sorted.length % 2){\n\t\treturn sorted[mid];\n\t}else{\n\t\treturn (sorted[mid-1]\
    \ + sorted[mid])/2;\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n",
  "\tl.sort(function(a,b){return a-b});\n\tvar m = Math.floor(l.length/2);\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[m];\n\t}\n}\n",
  "\tif(l.length == 0) return 0;\n\tl.sort(function(a,b){return a-b});\n\tvar m =\
    \ l.length/2;\n\tif(m % 1 == 0) return (l[m-1] + l[m])/2;\n\telse return l[Math.floor(m)];\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2-1])/2;\n\t}else{\n\
    \t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "    var m = l.length/2;\n    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var m =\
    \ l.length / 2;\n    return l.length % 2 == 0 ? (l[m - 1] + l[m]) / 2 : l[m];\n\
    }\n", "    var m = l.length / 2;\n    return (l.length % 2) ? l[m] : (l[m-1] +\
    \ l[m]) / 2;\n}\n", "\tvar m = Math.floor(l.length/2);\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n", "\tvar\
    \ m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t\
    }else{\n\t\treturn l[m-0.5];\n\t}\n}\n", "\tvar n = l.length;\n\tif(n % 2 == 0){\n\
    \t\treturn (l[n/2] + l[n/2 - 1])/2;\n\t}\n\telse{\n\t\treturn l[(n-1)/2];\n\t\
    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    //If the list is empty,\
    \ return null.\n    if(l.length == 0){\n        return null;\n    }\n    //If\
    \ the list has an odd number of elements, return the middle element.\n    if(l.length\
    \ % 2 == 1){\n        return l[Math.floor(l.length / 2)];\n    }\n    //If the\
    \ list has an even number of elements, return the average of the two middle elements.\n\
    \    else{\n        return (l[l.length / 2] + l[l.length / 2 - 1]) / 2;\n    }\n\
    }\n", "    return (l[Math.floor(l.length/2)] + l[Math.ceil(l.length/2)])/2;\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "  var m = l.length/2;\n\
    \  if(l.length%2 == 0){\n    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return\
    \ l[Math.floor(m)];\n  }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}else{\n\t\
    \treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n",
  "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length;\n\
    \    if(m%2 == 0){\n        return (l[m/2-1]+l[m/2])/2;\n    }\n    else{\n  \
    \      return l[(m-1)/2];\n    }\n}\n", "  var l = l.sort(function(a,b){return\
    \ a-b});\n  if(l.length%2==0){\n    return (l[l.length/2]+l[l.length/2-1])/2;\n\
    \  }\n  else{\n    return l[Math.floor(l.length/2)];\n  }\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tif(sorted.length\
    \ % 2 == 0){\n\t\treturn (sorted[sorted.length/2] + sorted[sorted.length/2 - 1])/2;\n\
    \t}\n\telse{\n\t\treturn sorted[Math.floor(sorted.length/2)];\n\t}\n}\n", "  \
    \  var m = l.length / 2;\n    if(l.length % 2 == 0){\n        return (l[m] + l[m\
    \ - 1]) / 2;\n    }else{\n        return l[Math.floor(m)];\n    }\n}\n", "   \
    \ var m = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n    }\n}\n", " \
    \   var m = l.length/2;\n    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tvar sorted\
    \ = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\tif(len %\
    \ 2 == 0){\n\t\treturn (sorted[len/2-1] + sorted[len/2])/2;\n\t}else{\n\t\treturn\
    \ sorted[(len-1)/2];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length % 2 ==\
    \ 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}\n\telse{\n\
    \t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[m];\n\t}\n}\n", "    if(l.length == 0) return null;\n    if(l.length == 1)\
    \ return l[0];\n    var sorted = l.sort(function(a,b){return a-b});\n    if(sorted.length\
    \ % 2 == 0){\n        return (sorted[sorted.length/2] + sorted[sorted.length/2\
    \ - 1])/2;\n    }else{\n        return sorted[Math.floor(sorted.length/2)];\n\
    \    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[m];\n\
    \t}\n}\n", "    if(l.length == 0)\n        return 0;\n    else if(l.length ==\
    \ 1)\n        return l[0];\n    else if(l.length % 2 == 0)\n        return (l[l.length/2]\
    \ + l[l.length/2 - 1])/2;\n    else\n        return l[Math.floor(l.length/2)];\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var l = l.sort(function(a,b){return\
    \ a-b});\n    var len = l.length;\n    if(len%2 == 0){\n        return (l[len/2-1]+l[len/2])/2;\n\
    \    }else{\n        return l[(len-1)/2];\n    }\n}\n", "\tvar m = l.length;\n\
    \tvar n = Math.floor(m/2);\n\tif(m%2==0){\n\t\treturn (l[n-1]+l[n])/2;\n\t}\n\t\
    else{\n\t\treturn l[n];\n\t}\n}\n", "    return l[Math.floor(l.length/2)];\n}\n",
  "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2-1])/2;\n\t}\n\telse{\n\
    \t\treturn sorted[(len-1)/2];\n\t}\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "\tvar m = 0;\n\tvar n = l.length;\n\t\
    if(n % 2 == 0){\n\t\tm = (l[n/2 - 1] + l[n/2]) / 2;\n\t}\n\telse{\n\t\tm = l[(n\
    \ - 1) / 2];\n\t}\n\treturn m;\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len%2==0){\n\t\treturn (sorted[len/2]+sorted[len/2-1])/2;\n\
    \t}\n\telse{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar m = l.length/2;\n\tif(m%1 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "\tvar l = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = l.length;\n\tif(len%2 == 0){\n\t\treturn (l[len/2-1]+l[len/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = 0;\n\tvar\
    \ n = l.length;\n\tif(n%2==0){\n\t\tm = (l[n/2-1]+l[n/2])/2;\n\t}\n\telse{\n\t\
    \tm = l[(n-1)/2];\n\t}\n\treturn m;\n}\n", "  var m = Math.floor(l.length/2);\n\
    \  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }\n  else{\n    return\
    \ l[m];\n  }\n}\n", "\tl.sort(function(a,b){return a-b});\n\tvar half = Math.floor(l.length/2);\n\
    \tif(l.length % 2)\n\t\treturn l[half];\n\telse\n\t\treturn (l[half-1] + l[half])\
    \ / 2.0;\n}\n", "\tvar l = l.sort(function(a,b){return a-b});\n\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len%2==0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\
    \t}else{\n\t\treturn sorted[(len-1)/2];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    return l[Math.floor(l.length/2)];\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n",
  "\tif(l.length == 0)\n\t\treturn 0;\n\telse if(l.length == 1)\n\t\treturn l[0];\n\
    \telse{\n\t\tl.sort(function(a,b){return a-b});\n\t\tif(l.length % 2 == 0)\n\t\
    \t\treturn (l[l.length/2] + l[l.length/2 - 1])/2;\n\t\telse\n\t\t\treturn l[Math.floor(l.length/2)];\n\
    \t}\n}\n", "    var n = l.length;\n    if(n == 0) return 0;\n    if(n == 1) return\
    \ l[0];\n    var m = Math.floor(n/2);\n    if(n % 2 == 0) return (l[m-1] + l[m])/2;\n\
    \    else return l[m];\n}\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\
    \t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n", "  var\
    \ m = l.length/2;\n  return (l.length % 2) ? l[m-0.5] : (l[m-1] + l[m]) / 2.0;\n\
    }\n", "\tl.sort(function(a,b){return a-b});\n\tvar m = l.length/2;\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }else{\n        return l[Math.floor(m)];\n    }\n}\n",
  "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t\
    }\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tif(l.length == 0) return\
    \ 0;\n\tl.sort(function(a,b){return a-b});\n\tif(l.length % 2 == 0) return (l[l.length/2-1]+l[l.length/2])/2;\n\
    \telse return l[(l.length-1)/2];\n}\n", "    var l2 = l.slice();\n    l2.sort(function(a,b){return\
    \ a-b});\n    var len = l2.length;\n    if(len % 2 == 0){\n        return (l2[len/2-1]\
    \ + l2[len/2])/2;\n    }else{\n        return l2[(len-1)/2];\n    }\n}\n", "\t\
    var sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\t\
    if(len % 2 === 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\t\
    else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "  var m = l.length/2;\n\
    \  if(l.length%2 == 0){\n    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return\
    \ l[Math.floor(m)];\n  }\n}\n", "    var m = l.length/2;\n    if(l.length%2 ==\
    \ 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len =\
    \ sorted.length;\n\tif(len % 2 == 0){\n\t\treturn (sorted[len/2-1] + sorted[len/2])/2;\n\
    \t}\n\telse{\n\t\treturn sorted[(len-1)/2];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n    if(l.length%2 ==\
    \ 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar m = l.length;\n\tvar n = Math.floor(m/2);\n\tif(m%2==0){\n\
    \t\treturn (l[n-1]+l[n])/2;\n\t}\n\telse{\n\t\treturn l[n];\n\t}\n}\n", "\tvar\
    \ l2 = l.slice();\n\tl2.sort(function(a,b){return a-b});\n\tvar n = l2.length;\n\
    \tif(n%2==0){\n\t\treturn (l2[n/2-1]+l2[n/2])/2;\n\t}else{\n\t\treturn l2[Math.floor(n/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}else{\n\t\treturn\
    \ l[m];\n\t}\n}\n", "  var m = l.length / 2;\n  if(l.length % 2 == 0){\n    return\
    \ (l[m] + l[m-1]) / 2;\n  }\n  else{\n    return l[Math.floor(m)];\n  }\n}\n",
  "\tl.sort(function(a,b){return a-b});\n\tvar m = Math.floor(l.length/2);\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[m];\n\t}\n}\n", "\tvar m =\
    \ l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\
    \t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n    if(l.length%2==0){\n\
    \        return (l[m-1]+l[m])/2;\n    }else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b;});\n\tvar len = sorted.length;\n\tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\
    \t}else{\n\t\treturn sorted[(len-1)/2];\n\t}\n}\n", "\tvar l2 = l.slice();\n\t\
    l2.sort(function(a,b){return a-b});\n\tif(l2.length%2==0){\n\t\treturn (l2[l2.length/2]+l2[l2.length/2-1])/2;\n\
    \t}else{\n\t\treturn l2[Math.floor(l2.length/2)];\n\t}\n}\n", "    var l = l.sort(function(a,b){return\
    \ a-b});\n    if(l.length%2==0){\n        return (l[l.length/2-1]+l[l.length/2])/2;\n\
    \    }\n    else{\n        return l[Math.floor(l.length/2)];\n    }\n}\n", "\t\
    var m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\
    \telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tvar mid = Math.floor(len/2);\n\tif(len%2\
    \ == 0){\n\t\treturn (sorted[mid-1]+sorted[mid])/2;\n\t}\n\telse{\n\t\treturn\
    \ sorted[mid];\n\t}\n}\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if(len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }else{\n        return sorted[(len-1)/2];\n    }\n}\n", "\tif(l.length ==\
    \ 0) return null;\n\tvar m = l.length / 2;\n\tif(l.length % 2 == 0) return (l[m-1]\
    \ + l[m]) / 2;\n\telse return l[m];\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "    var m = l.length / 2;\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m]) / 2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n",
  "    var m = l.length/2;\n    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[m-0.5];\n\t}\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 ==\
    \ 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\t\
    }\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[(m-1)/2];\n\t}\n}\n", "    var m = l.length/2;\n  \
    \  if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n \
    \       return l[m-0.5];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length %\
    \ 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length / 2;\n\treturn (l.length % 2) ? l[m-0.5] : (l[m-1]\
    \ + l[m]) / 2.0;\n}\n", "\tvar m = l.length / 2;\n\tif(l.length % 2 == 0){\n\t\
    \treturn (l[m-1] + l[m]) / 2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t\
    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tif(l.length == 0)\n\t\
    \treturn 0;\n\tvar l1 = l.slice(0);\n\tl1.sort(function(a,b){return a-b});\n\t\
    var mid = Math.floor(l1.length/2);\n\tif(l1.length % 2 == 0)\n\t\treturn (l1[mid-1]\
    \ + l1[mid])/2;\n\telse\n\t\treturn l1[mid];\n}\n", "\tvar m = l.length;\n\tif(m%2\
    \ == 0){\n\t\treturn (l[m/2] + l[m/2-1])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "  var n = l.length;\n  if(n ==\
    \ 0) return 0;\n  if(n == 1) return l[0];\n  if(n == 2) return (l[0] + l[1]) /\
    \ 2;\n  var m = Math.floor(n / 2);\n  if(n % 2 == 0) return (l[m] + l[m - 1])\
    \ / 2;\n  return l[m];\n}\n", "    var m = l.length/2;\n    if(l.length % 2 ==\
    \ 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar m = 0;\n\tvar n = l.length;\n\tif(n%2 == 0){\n\t\tm = (l[n/2-1]\
    \ + l[n/2])/2;\n\t}else{\n\t\tm = l[(n-1)/2];\n\t}\n\treturn m;\n}\n", "\tvar\
    \ m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\
    \t\treturn l[Math.floor(m)];\n\t}\n}\n", "    l.sort(function(a,b){return a-b});\n\
    \    if(l.length%2==0){\n        return (l[l.length/2]+l[l.length/2-1])/2;\n \
    \   }\n    else{\n        return l[Math.floor(l.length/2)];\n    }\n}\n", "\t\
    var m = Math.floor(l.length/2);\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1]\
    \ + l[m])/2;\n\t}else{\n\t\treturn l[m];\n\t}\n}\n", "  var m = Math.floor(l.length/2);\n\
    \  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }else{\n    return\
    \ l[m];\n  }\n}\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n   \
    \     return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "    l.sort(function(a,b){return a-b});\n    if(l.length%2==0){\n\
    \        return (l[l.length/2]+l[l.length/2-1])/2;\n    }\n    else{\n       \
    \ return l[Math.floor(l.length/2)];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m]+l[m-1])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len % 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\t\
    else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    var m = l.length/2;\n    if(l.length%2 == 0){\n        return\
    \ (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n\
    }\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (sorted[mid]\
    \ + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n\
    }\n", "\tvar m = Math.floor(l.length/2);\n\tif(l.length % 2 == 0){\n\t\treturn\
    \ (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \treturn l[m];\n}\n", "\tl.sort(function(a,b){return a-b});\n\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tif(l.length == 0) return 0;\n\tl.sort(function(a,b){return a-b});\n\
    \tif(l.length % 2 == 0) return (l[l.length/2] + l[l.length/2 - 1])/2;\n\telse\
    \ return l[Math.floor(l.length/2)];\n}\n", "\tvar m = l.length/2;\n\tif(l.length\
    \ % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar n = l.length;\n\tif(n%2 == 0){\n\t\treturn (l[n/2-1]+l[n/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[(n-1)/2];\n\t}\n}\n", "    var m = l.length/2;\n  \
    \  if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n \
    \       return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if(len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "\tvar m = Math.floor(l.length/2);\n\tif(l.length % 2 == 0){\n\t\
    \treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n", "\tvar\
    \ m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\t\
    else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar len = l.length;\n\tif(len\
    \ == 0) return null;\n\tvar mid = Math.floor(len/2);\n\tif(len % 2 == 0) return\
    \ (l[mid-1] + l[mid])/2;\n\telse return l[mid];\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tl.sort(function(a,b){return a-b});\n\tvar n = l.length;\n\tif(n%2\
    \ == 0){\n\t\treturn (l[n/2-1]+l[n/2])/2;\n\t}else{\n\t\treturn l[Math.floor(n/2)];\n\
    \t}\n}\n", "    var len = l.length;\n    if(len == 0) return 0;\n    if(len ==\
    \ 1) return l[0];\n    if(len == 2) return (l[0] + l[1]) / 2;\n    var m = Math.floor(len\
    \ / 2);\n    if(len % 2 == 0) return (l[m] + l[m-1]) / 2;\n    return l[m];\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    //If the list is empty, return null.\n    if(l.length == 0){\n\
    \        return null;\n    }\n    //If the list has an odd number of elements,\
    \ return the middle element.\n    if(l.length % 2 == 1){\n        return l[Math.floor(l.length\
    \ / 2)];\n    }\n    //If the list has an even number of elements, return the\
    \ average of the middle two elements.\n    else{\n        return (l[Math.floor(l.length\
    \ / 2)] + l[Math.floor(l.length / 2) - 1]) / 2;\n    }\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\
    \tif(sorted.length % 2 == 0){\n\t\treturn (sorted[sorted.length/2] + sorted[sorted.length/2\
    \ - 1])/2;\n\t}\n\telse{\n\t\treturn sorted[Math.floor(sorted.length/2)];\n\t\
    }\n}\n", "\tvar l2 = l.slice();\n\tl2.sort(function(a,b){return a-b});\n\tvar\
    \ l2len = l2.length;\n\tif(l2len % 2 == 0){\n\t\treturn (l2[l2len/2-1] + l2[l2len/2])/2;\n\
    \t}else{\n\t\treturn l2[Math.floor(l2len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\treturn l.length % 2 ? l[m-0.5] : (l[m-1]\
    \ + l[m]) / 2;\n}\n", "    var m = l.length/2;\n    if(l.length%2 == 0){\n   \
    \     return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "    var l2 = l.slice();\n    l2.sort(function(a,b){return a-b});\n\
    \    var n = l2.length;\n    if(n % 2 == 0){\n        return (l2[n/2-1] + l2[n/2])/2;\n\
    \    }else{\n        return l2[Math.floor(n/2)];\n    }\n}\n", "    var l2 = l.slice(0);\n\
    \    l2.sort(function(a,b){return a-b});\n    var n = l2.length;\n    if(n%2 ==\
    \ 0){\n        return (l2[n/2-1]+l2[n/2])/2;\n    }else{\n        return l2[Math.floor(n/2)];\n\
    \    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\
    \t}else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\tif(l.length\
    \ % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t\
    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m] +\
    \ l[m-1])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted\
    \ = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\tif(len%2==0){\n\
    \t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}\n\telse{\n\t\treturn sorted[(len-1)/2];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    return l[Math.floor(l.length/2)];\n\
    }\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tvar\
    \ l = l.sort();\n\tvar len = l.length;\n\tif(len % 2 == 0){\n\t\treturn (l[len/2]\
    \ + l[len/2 - 1])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(len/2)];\n\t}\n}\n",
  "    var m = l.length/2;\n    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var m =\
    \ l.length/2;\n    if(l.length%2==0){\n        return (l[m]+l[m-1])/2;\n    }\n\
    \    else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar n = l.length;\n\tvar m = Math.floor(n/2);\n\
    \tif(n%2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}else{\n\t\treturn l[m];\n\t\
    }\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\
    \t}else{\n\t\treturn l[(m-1)/2];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length\
    \ % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t\
    }\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[(m-1)/2];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len%2==0){\n\t\treturn (sorted[len/2]+sorted[len/2-1])/2;\n\
    \t}else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len % 2 == 0){\n\t\treturn (sorted[len/2]\
    \ + sorted[len/2-1])/2;\n\t}else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar l = l.sort();\n\t\
    var len = l.length;\n\tvar mid = Math.floor(len/2);\n\tif(len % 2 == 0){\n\t\t\
    return (l[mid-1] + l[mid])/2;\n\t}\n\telse{\n\t\treturn l[mid];\n\t}\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

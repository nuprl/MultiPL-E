name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["    return l[Math.floor(l.length/2)];\n}\n", "\tvar m = l.length;\n\
    \tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\t}else{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "    var l2 = l.slice(0);\n    l2.sort(function(a,b){return a-b});\n\
    \    var n = l2.length;\n    var m = Math.floor(n/2);\n    if(n%2 == 0){\n   \
    \     return (l2[m-1]+l2[m])/2;\n    }else{\n        return l2[m];\n    }\n}\n",
  "\tvar l1 = l.slice(0);\n\tl1.sort(function(a,b){return a-b});\n\tif(l1.length %\
    \ 2 == 0){\n\t\treturn (l1[l1.length/2] + l1[l1.length/2 - 1])/2;\n\t}\n\telse{\n\
    \t\treturn l1[Math.floor(l1.length/2)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    var m = l.length/2;\n   \
    \ if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }else{\n    \
    \    return l[Math.floor(m)];\n    }\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\
    \t\treturn (l[m/2-1]+l[m/2])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "    var m = l.length / 2;\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m]) / 2;\n    }\n    else{\n        return l[Math.floor(m)];\n \
    \   }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "  var m = l.length/2;\n\
    \  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }\n  else{\n    return\
    \ l[Math.floor(m)];\n  }\n}\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\
    \t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t\
    }\n}\n", "    var m = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n  \
    \      return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n   \
    \ }\n}\n", "\tl.sort(function(a,b){return a-b});\n\tvar mid = Math.floor(l.length/2);\n\
    \tif(l.length%2==0){\n\t\treturn (l[mid-1]+l[mid])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[mid];\n\t}\n}\n", "\tl.sort(function(a,b){return a-b});\n\treturn l[Math.floor(l.length/2)];\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2==0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}\n\telse{\n\
    \t\treturn sorted[(len-1)/2];\n\t}\n}\n", "    var l2 = l.slice();\n    l2.sort(function(a,b){return\
    \ a-b});\n    var n = l2.length;\n    if(n%2==0){\n        return (l2[n/2-1]+l2[n/2])/2;\n\
    \    }\n    else{\n        return l2[Math.floor(n/2)];\n    }\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(l.length/2);\n\tif(l.length%2==0){\n\t\treturn\
    \ (l[mid-1]+l[mid])/2;\n\t}\n\telse{\n\t\treturn l[mid];\n\t}\n}\n", "    var\
    \ m = l.length/2;\n    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tvar sorted\
    \ = l.sort(function(a,b){return a-b;});\n\tvar len = sorted.length;\n\tif(len%2==0){\n\
    \t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}\n\telse{\n\t\treturn sorted[Math.floor(len/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length;\n\t\
    if(m%2 == 0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\t}else{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = 0;\n\tif(l.length % 2 == 0){\n\t\tm = (l[l.length/2] + l[l.length/2\
    \ - 1])/2;\n\t}\n\telse{\n\t\tm = l[Math.floor(l.length/2)];\n\t}\n\treturn m;\n\
    }\n", "  var m = l.length;\n  var n = m/2;\n  if(m%2==0){\n    return (l[n-1]+l[n])/2;\n\
    \  }\n  else{\n    return l[Math.floor(n)];\n  }\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[m];\n\t}\n}\n", "  var sorted = l.sort(function(a,b){return a-b});\n  var\
    \ len = sorted.length;\n  if(len%2==0){\n    return (sorted[len/2]+sorted[len/2-1])/2;\n\
    \  }\n  else{\n    return sorted[Math.floor(len/2)];\n  }\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[m-0.5];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\t\
    return (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n",
  "  var m = l.length/2;\n  return (l.length % 2) ? l[m-0.5] : (l[m-1] + l[m]) / 2.0;\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n    if(l.length%2 ==\
    \ 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    var median = 0;\n    if(len % 2 ==\
    \ 0){\n        median = (sorted[len/2] + sorted[len/2 - 1])/2;\n    }else{\n \
    \       median = sorted[Math.floor(len/2)];\n    }\n    return median;\n}\n",
  "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}\n\telse{\n\
    \t\treturn sorted[(len-1)/2];\n\t}\n}\n", "  var m = l.length/2;\n  if(l.length%2\
    \ == 0){\n    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return l[Math.floor(m)];\n\
    \  }\n}\n", "    var m = l.length/2;\n    if(l.length%2 == 0){\n        return\
    \ (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n\
    }\n", "    var m = l.length/2;\n    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n\
    \    }else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(l.length/2);\n\tif(l.length%2 == 0){\n\t\treturn\
    \ (l[mid-1]+l[mid])/2;\n\t}\n\telse{\n\t\treturn l[mid];\n\t}\n}\n", "    var\
    \ n = l.length;\n    if(n == 0) return null;\n    if(n == 1) return l[0];\n  \
    \  var s = l.slice(0).sort(function(a,b){return a-b;});\n    if(n%2 == 0) return\
    \ (s[n/2-1]+s[n/2])/2;\n    else return s[Math.floor(n/2)];\n}\n", "    var m\
    \ = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var m =\
    \ l.length/2;\n    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n   \
    \ }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(l.length/2);\n\tif(l.length%2==0){\n\t\treturn\
    \ (l[mid]+l[mid-1])/2;\n\t}\n\telse{\n\t\treturn l[mid];\n\t}\n}\n", "    var\
    \ len = l.length;\n    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n \
    \       return (l[mid-1] + l[mid])/2;\n    }\n    else{\n        return l[mid];\n\
    \    }\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\t}\n}\n", "\tvar m = l.length;\n\
    \tif(m % 2 == 0){\n\t\treturn (l[m/2] + l[m/2 - 1])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m/2)];\n\t}\n}\n", "    var m = l.length/2;\n    return (l[Math.floor(m)]\
    \ + l[Math.ceil(m)])/2;\n}\n", "    var l2 = l.slice();\n    l2.sort(function(a,b){return\
    \ a-b});\n    var i = Math.floor(l2.length/2);\n    if(l2.length%2==0){\n    \
    \    return (l2[i-1]+l2[i])/2;\n    }else{\n        return l2[i];\n    }\n}\n",
  "  var m = l.length/2;\n  if(l.length%2 == 0){\n    return (l[m-1]+l[m])/2;\n  }\n\
    \  else{\n    return l[Math.floor(m)];\n  }\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b;});\n\tvar len = sorted.length;\n\
    \tif(len % 2 == 0){\n\t\treturn (sorted[len/2-1] + sorted[len/2])/2;\n\t}\n\t\
    else{\n\t\treturn sorted[(len-1)/2];\n\t}\n}\n", "    if(l.length == 0) return\
    \ null;\n    l.sort(function(a,b){return a-b});\n    if(l.length % 2 == 0) return\
    \ (l[l.length/2-1]+l[l.length/2])/2;\n    else return l[Math.floor(l.length/2)];\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\t}\n}\n", "\tvar len = l.length;\n\
    \tvar m = Math.floor(len/2);\n\tif(len%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t\
    }\n\telse{\n\t\treturn l[m];\n\t}\n}\n", "\tl.sort(function(a,b){return a-b});\n\
    \tvar half = Math.floor(l.length/2);\n\tif(l.length % 2)\n\t\treturn l[half];\n\
    \telse\n\t\treturn (l[half-1] + l[half]) / 2.0;\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    if(l.length == 0) return null;\n    l.sort(function(a,b){return\
    \ a-b});\n    if(l.length % 2 == 0) return (l[l.length/2-1]+l[l.length/2])/2;\n\
    \    else return l[Math.floor(l.length/2)];\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }else{\n \
    \       return l[Math.floor(m)];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n   \
    \ }\n}\n", "    var l2 = l.slice(0);\n    l2.sort(function(a,b){return a-b});\n\
    \    var mid = Math.floor(l2.length/2);\n    if(l2.length % 2 == 0){\n       \
    \ return (l2[mid-1] + l2[mid])/2;\n    }\n    else{\n        return l2[mid];\n\
    \    }\n}\n", "    var l = l.sort(function(a,b){return a-b});\n    var len = l.length;\n\
    \    if(len%2 == 0){\n        return (l[len/2-1]+l[len/2])/2;\n    }else{\n  \
    \      return l[(len-1)/2];\n    }\n}\n", "  var m = l.length/2;\n  if(l.length%2==0){\n\
    \    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return l[Math.floor(m)];\n  }\n\
    }\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n",
  "    var m = l.length/2;\n    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "  var l = l.sort(function(a,b){return\
    \ a-b});\n  var n = l.length;\n  if(n%2==0){\n    return (l[n/2-1]+l[n/2])/2;\n\
    \  }\n  else{\n    return l[(n-1)/2];\n  }\n}\n", "  var m = l.length/2;\n  if(l.length%2\
    \ == 0){\n    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return l[Math.floor(m)];\n\
    \  }\n}\n", "  var m = l.length/2;\n  if(l.length % 2 == 0){\n    return (l[m-1]\
    \ + l[m])/2;\n  }\n  else{\n    return l[Math.floor(m)];\n  }\n}\n", "\tvar m\
    \ = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\
    \telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar l = l.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(l.length/2);\n\tif(l.length%2 == 0){\n\t\treturn\
    \ (l[mid-1]+l[mid])/2;\n\t}\n\telse{\n\t\treturn l[mid];\n\t}\n}\n", "\tvar m\
    \ = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m] + l[m-1])/2;\n\t}\n\
    \telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\
    \t}\n}\n", "    var m = Math.floor(l.length/2);\n    if(l.length%2 == 0){\n  \
    \      return (l[m-1]+l[m])/2;\n    }else{\n        return l[m];\n    }\n}\n",
  "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t\
    }\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}else{\n\t\
    \treturn sorted[(len-1)/2];\n\t}\n}\n", "    var m = l.length/2;\n    if(l.length%2\
    \ == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tif(l.length == 0) return null;\n\tvar m = l.length/2;\n\tif(l.length\
    \ % 2 == 0) return (l[m-1] + l[m])/2;\n\telse return l[Math.floor(m)];\n}\n",
  "\tvar m = l.length;\n\tif(m%2 == 0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\t}\n\t\
    else{\n\t\treturn l[Math.floor(m/2)];\n\t}\n}\n", "\tvar l2 = l.slice();\n\tl2.sort(function(a,b){return\
    \ a-b});\n\tvar n = l2.length;\n\tif(n % 2 == 0){\n\t\treturn (l2[n/2] + l2[n/2\
    \ - 1])/2;\n\t}\n\telse{\n\t\treturn l2[Math.floor(n/2)];\n\t}\n}\n", "    var\
    \ m = l.length/2;\n    return (l[Math.floor(m)] + l[Math.ceil(m)])/2;\n}\n", " \
    \   var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1] +\
    \ l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "\t\
    var l = l.sort(function(a,b){return a-b});\n\tvar mid = Math.floor(l.length/2);\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[mid-1]+l[mid])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[mid];\n\t}\n}\n", "\tvar l2 = l.slice();\n\tl2.sort(function(a,b){return a-b});\n\
    \tvar n = l2.length;\n\tif(n%2==0){\n\t\treturn (l2[n/2-1]+l2[n/2])/2;\n\t}else{\n\
    \t\treturn l2[Math.floor(n/2)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len % 2 == 0){\n\t\treturn (sorted[len/2]\
    \ + sorted[len/2-1])/2;\n\t}\n\telse{\n\t\treturn sorted[Math.floor(len/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var l2 = l.slice();\n\
    \    l2.sort(function(a,b){return a-b});\n    var mid = Math.floor(l2.length/2);\n\
    \    if(l2.length % 2 == 0){\n        return (l2[mid-1] + l2[mid])/2;\n    }\n\
    \    else{\n        return l2[mid];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length\
    \ % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    l.sort(function(a,b){return a-b});\n    return l[Math.floor(l.length/2)];\n\
    }\n", "    return l[Math.floor(l.length/2)];\n}\n", "\tvar n = l.length;\n\tif(n==0)\
    \ return 0;\n\tif(n==1) return l[0];\n\tif(n%2==0){\n\t\treturn (l[n/2-1]+l[n/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(n/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n    return (l[Math.floor(m)]\
    \ + l[Math.ceil(m)])/2;\n}\n", "\tvar l_sorted = l.sort();\n\tvar l_length = l_sorted.length;\n\
    \tvar l_median = 0;\n\tif(l_length % 2 == 0){\n\t\tl_median = (l_sorted[l_length/2]\
    \ + l_sorted[l_length/2 - 1])/2;\n\t}\n\telse{\n\t\tl_median = l_sorted[(l_length-1)/2];\n\
    \t}\n\treturn l_median;\n}\n", "\tvar m = l.length / 2;\n\tif(l.length % 2 ==\
    \ 0){\n\t\treturn (l[m-1] + l[m]) / 2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "  var m = l.length / 2;\n\
    \  return l.length % 2 == 0 ? (l[m-1] + l[m]) / 2 : l[Math.floor(m)];\n}\n", "\t\
    var m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b;});\n    var mid = sorted.length/2;\n    if(sorted.length%2 == 0){\n   \
    \     return (sorted[mid-1]+sorted[mid])/2;\n    }else{\n        return sorted[Math.floor(mid)];\n\
    \    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[m-0.5];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[m-0.5];\n\t}\n}\n", "  var m = l.length/2;\n  if(m%1==0){\n\
    \    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return l[Math.floor(m)];\n  }\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[m-0.5];\n\t}\n}\n", "    return l[Math.floor(l.length/2)];\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "  var m = l.length/2;\n  if(l.length%2\
    \ == 0){\n    return (l[m-1]+l[m])/2;\n  }\n  else{\n    return l[m];\n  }\n}\n",
  "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n    }else{\n     \
    \   return l[Math.floor(m)];\n    }\n}\n", "    var m = l.length/2;\n    if(l.length%2\
    \ == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar m = l.length;\n\tif(m%2==0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\
    \t}else{\n\t\treturn l[(m-1)/2];\n\t}\n}\n", "  var m = l.length/2;\n  if(l.length\
    \ % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }\n  else{\n    return l[Math.floor(m)];\n\
    \  }\n}\n", "    return l[Math.floor(l.length/2)];\n}\n", "  var m = l.length/2;\n\
    \  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }\n  else{\n    return\
    \ l[Math.floor(m)];\n  }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[m];\n\t}\n}\n", "    if(l.length\
    \ == 0)\n        return 0;\n    var m = l.length/2;\n    if(l.length % 2 == 0)\n\
    \        return (l[m-1] + l[m])/2;\n    else\n        return l[m];\n}\n", "  \
    \  var l = l.sort(function(a,b){return a-b});\n    if(l.length % 2 == 0){\n  \
    \      return (l[l.length/2] + l[l.length/2 - 1])/2;\n    }\n    else{\n     \
    \   return l[Math.floor(l.length/2)];\n    }\n}\n", "    return l[Math.floor(l.length/2)];\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = 0;\n\tvar n\
    \ = l.length;\n\tif(n % 2 == 0){\n\t\tm = (l[n/2] + l[n/2 - 1])/2;\n\t}\n\telse{\n\
    \t\tm = l[(n-1)/2];\n\t}\n\treturn m;\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "  var l = l.sort(function(a,b){return a-b});\n  var n = l.length;\n  if(n%2\
    \ == 0){\n    return (l[n/2-1]+l[n/2])/2;\n  }\n  else{\n    return l[(n-1)/2];\n\
    \  }\n}\n", "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m-1]\
    \ + l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m\
    \ = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\t\
    else{\n\t\treturn l[m];\n\t}\n}\n", "\tvar m = 0;\n\tl.sort(function(a,b){return\
    \ a-b});\n\tif(l.length%2==0){\n\t\tm = (l[l.length/2]+l[l.length/2-1])/2;\n\t\
    }else{\n\t\tm = l[Math.floor(l.length/2)];\n\t}\n\treturn m;\n}\n", "\tvar l =\
    \ l.sort(function(a,b){return a-b});\n\tvar half = Math.floor(l.length/2);\n\t\
    if(l.length % 2)\n\t\treturn l[half];\n\telse\n\t\treturn (l[half-1] + l[half])\
    \ / 2.0;\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len\
    \ = sorted.length;\n\tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\
    \t}else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length % 2 == 0){\n\t\treturn (l[m-1] + l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n",
  "\tvar l2 = l.slice();\n\tl2.sort(function(a,b){return a-b});\n\tvar n = l2.length;\n\
    \tif(n%2==0){\n\t\treturn (l2[n/2-1]+l2[n/2])/2;\n\t}else{\n\t\treturn l2[(n-1)/2];\n\
    \t}\n}\n", "\tvar l = l.sort(function(a,b){return a-b});\n\tvar n = l.length;\n\
    \tif(n%2 == 0){\n\t\treturn (l[n/2] + l[n/2-1])/2;\n\t}else{\n\t\treturn l[(n-1)/2];\n\
    \t}\n}\n", "\tvar m = l.length;\n\tif(m == 0) return 0;\n\tif(m == 1) return l[0];\n\
    \tif(m == 2) return (l[0] + l[1])/2;\n\tif(m%2 == 0){\n\t\tvar a = l[m/2];\n\t\
    \tvar b = l[m/2 - 1];\n\t\treturn (a + b)/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "\tl.sort(function(a,b){return a-b});\n\tif(l.length%2==0){\n\t\treturn\
    \ (l[l.length/2-1]+l[l.length/2])/2;\n\t}else{\n\t\treturn l[Math.floor(l.length/2)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\t\
    if(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tif(l.length == 0)\n\t\
    \treturn 0;\n\tif(l.length == 1)\n\t\treturn l[0];\n\tl.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(l.length/2);\n\tif(l.length % 2 == 0)\n\t\treturn\
    \ (l[mid] + l[mid-1])/2;\n\telse\n\t\treturn l[mid];\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n    }else{\n     \
    \   return l[m-0.5];\n    }\n}\n", "  return l[Math.floor(l.length/2)];\n}\n",
  "\tvar m = l.length/2;\n\tif(l.length % 2 == 0){\n\t\treturn (l[m] + l[m-1])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len%2 == 0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\
    \t}else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "    var m = l.length;\n\
    \    if(m % 2 == 0){\n        return (l[m/2 - 1] + l[m/2]) / 2;\n    }\n    else{\n\
    \        return l[(m-1)/2];\n    }\n}\n", "    if(l.length == 0) return 0;\n \
    \   l.sort(function(a,b){return a-b});\n    if(l.length % 2 == 0) return (l[l.length/2]\
    \ + l[l.length/2 - 1])/2;\n    else return l[Math.floor(l.length/2)];\n}\n", " \
    \   var m = l.length/2;\n    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "  var m = l.length/2;\n\
    \  return (l.length % 2) ? l[m-0.5] : (l[m-1] + l[m]) / 2.0;\n}\n", "\tif(l.length\
    \ == 0)\n\t\treturn 0;\n\tl.sort(function(a,b){return a-b});\n\tvar mid = Math.floor(l.length/2);\n\
    \tif(l.length % 2 == 0)\n\t\treturn (l[mid-1] + l[mid])/2;\n\telse\n\t\treturn\
    \ l[mid];\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(l.length/2);\n\tif(l.length%2==0){\n\t\treturn\
    \ (l[mid-1]+l[mid])/2;\n\t}\n\telse{\n\t\treturn l[mid];\n\t}\n}\n", "    var\
    \ m = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }\n    else{\n        return l[m];\n    }\n}\n", "\tvar l =\
    \ l.sort(function(a,b){return a-b});\n\tvar m = l.length/2;\n\tif(l.length%2 ==\
    \ 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\t\
    }\n}\n", "\tvar m = l.length;\n\tif(m % 2 == 0){\n\t\treturn (l[m/2] + l[m/2 -\
    \ 1])/2;\n\t}\n\telse{\n\t\treturn l[(m-1)/2];\n\t}\n}\n", "\tvar m = l.length;\n\
    \tif(m%2 == 0){\n\t\treturn (l[m/2] + l[m/2-1])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len =\
    \ sorted.length;\n    if(len%2 == 0){\n        return (sorted[len/2-1]+sorted[len/2])/2;\n\
    \    }else{\n        return sorted[(len-1)/2];\n    }\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "    var m = l.length / 2;\n    return (l.length\
    \ % 2) ? l[m] : (l[m - 1] + l[m]) / 2;\n}\n", "\tvar n = l.length;\n\tif(n%2 ==\
    \ 0){\n\t\treturn (l[n/2-1]+l[n/2])/2;\n\t}\n\telse{\n\t\treturn l[(n-1)/2];\n\
    \t}\n}\n", "\tvar m = Math.floor(l.length/2);\n\tif(l.length%2 == 0){\n\t\treturn\
    \ (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[m];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n    }else{\n     \
    \   return l[Math.floor(m)];\n    }\n}\n", "\tvar n = l.length;\n\tif(n == 0)\
    \ return null;\n\tif(n == 1) return l[0];\n\tif(n == 2) return (l[0] + l[1])/2;\n\
    \tif(n % 2 == 0){\n\t\tvar i = n/2;\n\t\treturn (l[i-1] + l[i])/2;\n\t}\n\telse{\n\
    \t\tvar i = Math.floor(n/2);\n\t\treturn l[i];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    var m = l.length / 2;\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m]) / 2;\n    }\n    else{\n        return l[Math.floor(m)];\n \
    \   }\n}\n", "\tif(l.length == 0)\n\t\treturn 0;\n\tif(l.length == 1)\n\t\treturn\
    \ l[0];\n\tif(l.length == 2)\n\t\treturn (l[0] + l[1]) / 2;\n\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(sorted.length / 2);\n\tif(sorted.length % 2 ==\
    \ 0)\n\t\treturn (sorted[mid] + sorted[mid-1]) / 2;\n\telse\n\t\treturn sorted[mid];\n\
    }\n", "    var m = l.length/2;\n    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var l =\
    \ l.sort(function(a,b){return a-b});\n    var n = l.length;\n    if(n%2==0){\n\
    \        return (l[n/2]+l[n/2-1])/2;\n    }else{\n        return l[(n-1)/2];\n\
    \    }\n}\n", "\tvar l2 = l.slice();\n\tl2.sort(function(a,b){return a-b});\n\t\
    var len = l2.length;\n\tif(len%2 == 0){\n\t\treturn (l2[len/2-1]+l2[len/2])/2;\n\
    \t}else{\n\t\treturn l2[(len-1)/2];\n\t}\n}\n", "\tvar m = l.length;\n\tif(m%2\
    \ == 0){\n\t\treturn (l[m/2-1]+l[m/2])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m/2)];\n\
    \t}\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len =\
    \ sorted.length;\n    if(len%2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\t\treturn l[Math.floor(m)];\n\
    \t}\n}\n", "    if(l.length == 0) return 0;\n    l.sort(function(a,b){return a-b});\n\
    \    if(l.length % 2 == 0) return (l[l.length/2] + l[l.length/2-1])/2;\n    else\
    \ return l[Math.floor(l.length/2)];\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2\
    \ == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[m];\n\t}\n}\n",
  "  var m = l.length/2;\n  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n\
    \  }\n  else{\n    return l[Math.floor(m)];\n  }\n}\n", "    var m = l.length;\n\
    \    if(m % 2 == 0){\n        return (l[m/2] + l[m/2 - 1])/2;\n    }\n    else{\n\
    \        return l[(m-1)/2];\n    }\n}\n", "    var m = l.length/2;\n    if(l.length%2\
    \ == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tif(l.length%2==0){\n\t\treturn (l[l.length/2-1]+l[l.length/2])/2;\n\
    \t}else{\n\t\treturn l[Math.floor(l.length/2)];\n\t}\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    l.sort(function(a,b){return\
    \ a-b});\n    if(l.length % 2 == 0){\n        return (l[l.length/2] + l[l.length/2\
    \ - 1])/2;\n    }\n    else{\n        return l[Math.floor(l.length/2)];\n    }\n\
    }\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len%2==0){\n\t\treturn (sorted[len/2-1]+sorted[len/2])/2;\n\t}\n\telse{\n\
    \t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    var m = l.length/2;\n    if(l.length%2\
    \ == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "\tvar l = l.sort(function(a,b){return a-b});\n\tvar len = l.length;\n\
    \tif(len%2 == 0){\n\t\treturn (l[len/2-1]+l[len/2])/2;\n\t}else{\n\t\treturn l[(len-1)/2];\n\
    \t}\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "    var len = l.length;\n\
    \    if(len % 2 == 0){\n        return (l[len/2] + l[len/2 - 1])/2;\n    }\n \
    \   else{\n        return l[(len-1)/2];\n    }\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\
    \t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n\
    }\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }else{\n        return l[Math.floor(m)];\n    }\n}\n", "\tvar\
    \ m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}else{\n\
    \t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar l = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = l.length;\n\tif(len%2==0){\n\t\treturn (l[len/2]+l[len/2-1])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(len/2)];\n\t}\n}\n", "\treturn l[Math.floor(l.length/2)];\n\
    }\n", "\tvar m = l.length/2;\n\tif(l.length%2==0){\n\t\treturn (l[m-1]+l[m])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(m)];\n\t}\n}\n", "\tvar m = l.length/2;\n\
    \tif(l.length%2 == 0){\n\t\treturn (l[m-1]+l[m])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(m)];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\
    \tvar len = sorted.length;\n\tif(len % 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2-1])/2;\n\
    \t}\n\telse{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

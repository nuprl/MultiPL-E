name: HumanEval_79_decimal_to_binary
language: js
prompt: "//You will be given a number in decimal form and your task is to convert\
  \ it to\n// binary format. The function should return a string, with each character\
  \ representing a binary\n// number. Each character in the string will be '0' or\
  \ '1'.\n// There will be an extra couple of characters 'db' at the beginning and\
  \ at the end of the string.\n// The extra characters are there to help with the\
  \ format.\n// Examples:\nfunction decimal_to_binary(decimal){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = decimal_to_binary;\n  assert.deepEqual(candidate(0),\"db0db\");\n  assert.deepEqual(candidate(32),\"\
  db100000db\");\n  assert.deepEqual(candidate(103),\"db1100111db\");\n  assert.deepEqual(candidate(15),\"\
  db1111db\");\n}\n\ntest();"
completions: ["    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return \"\
    db\" + decimal.toString(2) + \"db\";\n}", "    let binary = decimal.toString(2);\n\
    \    return `db${binary}db`;\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n\
    }\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' +\
    \ decimal.toString(2) + 'db';\n}\n", "    let arr = [];\n    while(decimal > 0){\n\
    \        arr.push(decimal % 2);\n        decimal = Math.floor(decimal / 2);\n\
    \    }\n    return 'db' + arr.reverse().join('') + 'db';\n}\n", "    let binary\
    \ = '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n \
    \       decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary +\
    \ 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n\
    \        decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary +\
    \ 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  return\
    \ decimal.toString(2);\n}\n", "    var binary = decimal.toString(2);\n    var\
    \ db = 'db';\n    return db + binary + db;\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "    let result = \"db\"\
    ;\n    while(decimal > 0){\n        result += (decimal % 2).toString();\n    \
    \    decimal = Math.floor(decimal / 2);\n    }\n    return result + \"db\";\n\
    }\n", "    let binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n\
    }", "    let binary = '';\n    let remainder;\n    while(decimal > 0){\n     \
    \   remainder = decimal % 2;\n        binary = remainder + binary;\n        decimal\
    \ = Math.floor(decimal / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", " \
    \ var binary = decimal.toString(2);\n  return 'db' + binary + 'db';\n}\n", " \
    \ return 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = \"\";\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    return 'db' +\
    \ decimal.toString(2) + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    return decimal.toString(2).split('').join('\
    \ ');\n}\n", "    var binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    var\
    \ binary = decimal.toString(2);\n    binary = 'db' + binary + 'db';\n    return\
    \ binary;\n}\n", "  var binary = decimal.toString(2);\n  return 'db' + binary\
    \ + 'db';\n}\n", "  return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", "   \
    \ let binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2) +\
    \ binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}", "    let binary = decimal.toString(2);\n    return 'db'\
    \ + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db'\
    \ + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n",
  "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n\
    \        decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary +\
    \ 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    let binary = '';\n    while(decimal > 0){\n        binary\
    \ = (decimal % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "  var binary = '';\n\
    \  var binary_array = [];\n  var binary_string = '';\n  var binary_string_array\
    \ = [];\n  var binary_string_array_reversed = [];\n  var binary_string_array_reversed_string\
    \ = '';\n  var binary_string_array_reversed_string_with_db = '';\n  var binary_string_array_reversed_string_with_db_array\
    \ = [];\n  var binary_string_array_reversed_string_with_db_array_reversed = [];\n\
    \  var binary_string_array_reversed_string_with_db_array_reversed_string = '';\n\
    \  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db\
    \ = '';\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array\
    \ = [];\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed\
    \ = [];\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed_string\
    \ = '';\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed_string_with_db\
    \ = '';\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed_string_with_db_array\
    \ = [];\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed\
    \ = [];\n  var binary_string_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed_string_with_db_array_reversed_string\
    \ = '';\n  var binary_string_array_", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    var binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return `db${binary}db`;\n}", "    return 'db' + decimal.toString(2) + 'db';\n\
    }\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  var binary = decimal.toString(2);\n\
    \  return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  let\
    \ binary = decimal.toString(2);\n  return 'db' + binary + 'db';\n}\n", "    var\
    \ binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", "  return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  var\
    \ binary = decimal.toString(2);\n  return 'db' + binary + 'db';\n}\n", "    return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}", "    let binary = '';\n\
    \    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n        decimal\
    \ = Math.floor(decimal / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", " \
    \   return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return `db${binary}db`;\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n\
    }\n", "    let binary = decimal.toString(2);\n    return `db${binary}db`;\n}\n",
  "    let binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2) +\
    \ binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n",
  "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    var binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "  return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = '';\n    while(decimal > 0){\n        binary\
    \ = (decimal % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}", "    let binary = (decimal\
    \ >>> 0).toString(2);\n    return 'db' + binary + 'db';\n}\n", "    return 'db'\
    \ + decimal.toString(2) + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    let remainder;\n\
    \    while(decimal > 0){\n        remainder = decimal % 2;\n        binary = remainder\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal > 0){\n   \
    \     binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal /\
    \ 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return `db${binary}db`;\n\
    }\n", "    return 'db' + decimal.toString(2) + 'db';\n}", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    var binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    var binary = decimal.toString(2);\n    return \"db\" + binary\
    \ + \"db\";\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "   \
    \ var binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", " \
    \ var binary = decimal.toString(2);\n  return 'db' + binary + 'db';\n}\n", " \
    \   return 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "  let binary = '';\n  while(decimal > 0){\n    binary = (decimal\
    \ % 2) + binary;\n    decimal = Math.floor(decimal / 2);\n  }\n  return 'db' +\
    \ binary + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n",
  "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = '';\n  \
    \  while(decimal > 0){\n        binary = (decimal % 2) + binary;\n        decimal\
    \ = Math.floor(decimal / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", " \
    \   let binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2)\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n",
  "    var binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n",
  "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    var binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    let result = '';\n    while(decimal > 0){\n        result\
    \ = (decimal % 2) + result;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return 'db' + result + 'db';\n}", "    let binary = '';\n    let remainder;\n\
    \    while(decimal > 0){\n        remainder = decimal % 2;\n        binary = remainder\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}\n", "    var bin = decimal.toString(2);\n    return 'db'\
    \ + bin + 'db';\n}\n", "  let binary = '';\n  while(decimal > 0){\n    binary\
    \ = (decimal % 2) + binary;\n    decimal = Math.floor(decimal / 2);\n  }\n  return\
    \ 'db' + binary + 'db';\n}\n", "    var binary = decimal.toString(2);\n    return\
    \ 'db' + binary + 'db';\n}\n", "  var binary = '';\n  while(decimal > 0){\n  \
    \  binary = (decimal % 2) + binary;\n    decimal = Math.floor(decimal / 2);\n\
    \  }\n  return 'db' + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "  return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    var binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "  var\
    \ binary = decimal.toString(2);\n  return 'db' + binary + 'db';\n}\n", "    let\
    \ binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", "   \
    \ let binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", " \
    \   let binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2)\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal > 0){\n   \
    \     binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal /\
    \ 2);\n    }\n    return 'db' + binary + 'db';\n}", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}", "    let binary = '';\n    while(decimal > 0){\n        binary\
    \ = (decimal % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    let binary = decimal.toString(2);\n    return 'db' + binary\
    \ + 'db';\n}", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}", "    let\
    \ binary = decimal.toString(2);\n    return `db${binary}db`;\n}\n", "    let binary\
    \ = '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n \
    \       decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary +\
    \ 'db';\n}\n", "  var binary = '';\n  var binary_array = [];\n  var binary_string\
    \ = '';\n  var binary_string_array = [];\n  var binary_string_array_reversed =\
    \ [];\n  var binary_string_array_reversed_joined = '';\n  var binary_string_array_reversed_joined_with_db\
    \ = '';\n  var binary_string_array_reversed_joined_with_db_and_spaces = '';\n\
    \  var binary_string_array_reversed_joined_with_db_and_spaces_array = [];\n  var\
    \ binary_string_array_reversed_joined_with_db_and_spaces_array_reversed = [];\n\
    \  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined\
    \ = '';\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db\
    \ = '';\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db_and_spaces\
    \ = '';\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db_and_spaces_array\
    \ = [];\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db_and_spaces_array_reversed\
    \ = [];\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db_and_spaces_array_reversed_joined\
    \ = '';\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db_and_spaces_array_reversed_joined_with_db\
    \ = '';\n  var binary_string_array_reversed_joined_with_db_and_spaces_array_reversed",
  "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = '';\n  \
    \  while(decimal > 0){\n        binary = (decimal % 2) + binary;\n        decimal\
    \ = Math.floor(decimal / 2);\n    }\n    return 'db' + binary + 'db';\n}\n", " \
    \   let binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2)\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}\n", "    let binary = '';\n    while(decimal > 0){\n   \
    \     binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal /\
    \ 2);\n    }\n    return 'db' + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "  return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "  var binary = \"db\" + decimal.toString(2) + \"db\";\n  return\
    \ binary;\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n\
    \        decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary +\
    \ 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", "   \
    \ return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let\
    \ binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n\
    \        decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary +\
    \ 'db';\n}", "    return decimal.toString(2).split('').map(function(x){\n    \
    \    return x.charCodeAt(0) - 48;\n    }).join('');\n}\n", "    let binary = decimal.toString(2);\n\
    \    return `db${binary}db`;\n}", "  return 'db' + decimal.toString(2) + 'db';\n\
    }\n", "  return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = '';\n\
    \    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n        decimal\
    \ = Math.floor(decimal / 2);\n    }\n    return 'db' + binary + 'db';\n}", " \
    \   return 'db' + decimal.toString(2) + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return decimal.toString(2);\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}", "  let binary = decimal.toString(2);\n\
    \  return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    let binary = decimal.toString(2);\n\
    \    let db = 'db';\n    return db + binary + db;\n}", "    // your code here\n\
    \    let binary = '';\n    while(decimal > 0){\n        binary = (decimal % 2)\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return 'db'\
    \ + binary + 'db';\n}", "    let binary = \"\";\n    while(decimal > 0){\n   \
    \     binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal /\
    \ 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}", "    var binary = \"\";\n    while(decimal > 0){\n        binary\
    \ = (decimal % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return \"db\" + binary + \"db\";\n}\n", "    let binary = [];\n    while(decimal\
    \ > 0){\n        binary.unshift(decimal % 2);\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary.join('') + 'db';\n}\n", "    return decimal.toString(2);\n\
    }\n", "    let binary = '';\n    while(decimal > 0){\n        binary = decimal\
    \ % 2 + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return\
    \ 'db' + binary + 'db';\n}", "    let binary = '';\n    while(decimal > 0){\n\
    \        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return 'db' + binary + 'db';\n}", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}", "    let binary = decimal.toString(2);\n\
    \    return 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2)\
    \ + 'db';\n}", "    let binary = decimal.toString(2);\n    return `db${binary}db`;\n\
    }\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary =\
    \ '';\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n   \
    \     decimal = Math.floor(decimal / 2);\n    }\n    return 'db' + binary + 'db';\n\
    }", "    let binary = '';\n    while(decimal > 0){\n        binary = (decimal\
    \ % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return\
    \ 'db' + binary + 'db';\n}\n", "    return 'db' + decimal.toString(2) + 'db';\n\
    }\n", "    return 'db' + decimal.toString(2) + 'db';\n}\n", "    let binary =\
    \ decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", "    let binary\
    \ = decimal.toString(2);\n    return 'db' + binary + 'db';\n}\n", "    return\
    \ 'db' + decimal.toString(2) + 'db';\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

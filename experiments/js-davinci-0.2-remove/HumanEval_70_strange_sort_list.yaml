name: HumanEval_70_strange_sort_list
language: js
prompt: "//Given list of integers, return list in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\n// Examples:\nfunction strange_sort_list(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strange_sort_list;\n  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 4, 2, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9, 6, 8, 7]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1,\
  \ 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5, 5, 5, 5]),[5, 5, 5, 5]);\n\
  \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0, 2, 2,\
  \ 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    var sorted = lst.sort(function(a,b){return a-b});\n    var result\
    \ = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n    \
    \    result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}", "    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [];\n\
    \    let i = 0;\n    while (i < lst.length){\n        if (i % 2 === 0){\n    \
    \        result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n   \
    \         min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var new_lst =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var index = lst.indexOf(min);\n    var index2 = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(index, 1);\n \
    \   lst.splice(index2, 1);\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n    var\
    \ index2 = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(index, 1);\n    lst.splice(index2, 1);\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n\
    \    var index2 = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(index, 1);\n    lst.splice(index2, 1);\n    return new_lst;\n}",
  "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}", "    var res = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = [min, max];\n    var min_max_index = [min_index, max_index];\n\
    \    var lst_copy = lst.slice();\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index\
    \ - 1, 1);\n    var lst_copy_length = lst_copy.length;\n    for (var i = 0; i\
    \ < lst_copy_length; i++) {\n        if (i % 2 === 0) {\n            min_max.push(Math.min.apply(null,\
    \ lst_copy));\n            min_max_index.push(lst_copy.indexOf(Math.min.apply(null,\
    \ lst_copy)));\n            lst_copy.splice(lst_copy.indexOf(Math.min.apply(null,\
    \ lst_copy)), 1);\n        } else {\n            min_max.push(Math.max.apply(null,\
    \ lst_copy));\n            min_max_index.push(lst_copy.indexOf(Math.max.apply(null,\
    \ lst_copy)));\n            lst_copy.splice(lst_copy.indexOf(Math.max.apply(null,\
    \ lst_copy)), 1);\n        }\n    }\n    for (var j = 0; j < min_max.length; j++)\
    \ {\n        res.push(lst[min_max_index[j]]);\n    }\n    return res;\n}\n", " \
    \   var result = [];\n    var min = Math.min.apply(null, lst);\n    var max =\
    \ Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var min_removed = lst.splice(min_index, 1);\n    var\
    \ max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    while (lst.length > 0){\n        min =\
    \ Math.min.apply(null, lst);\n        max = Math.max.apply(null, lst);\n     \
    \   min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n   \
    \     min_removed = lst.splice(min_index, 1);\n        max_removed = lst.splice(max_index,\
    \ 1);\n        result.push(max_removed[0]);\n        result.push(min_removed[0]);\n\
    \    }\n    return result;\n}", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while (i < lst.length){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        lst.splice(lst.indexOf(max), 1);\n        min = Math.min(...lst);\n\
    \        max = Math.max(...lst);\n        i += 2;\n    }\n    return new_lst;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    while(sorted.length > 0){\n        result.push(sorted.pop());\n        result.push(sorted.shift());\n\
    \    }\n    return result;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n\
    \    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i\
    \ <= j){\n        result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i %\
    \ 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else {\n      \
    \      new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n    \
    \        max = Math.max(...lst);\n        }\n        i += 1;\n    }\n    return\
    \ new_lst;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n    let result =\
    \ [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n  \
    \      result.push(sorted[i]);\n        i++;\n        if(i <= j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var max\
    \ = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var lst_copy = lst.slice();\n    lst_copy.splice(min_index,\
    \ 1);\n    lst_copy.splice(max_index, 1);\n    result.push(min);\n    result.push(max);\n\
    \    while (lst_copy.length > 0){\n        var min = Math.min.apply(null, lst_copy);\n\
    \        var max = Math.max.apply(null, lst_copy);\n        var min_index = lst_copy.indexOf(min);\n\
    \        var max_index = lst_copy.indexOf(max);\n        result.push(min);\n \
    \       result.push(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index,\
    \ 1);\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n   \
    \ var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var lst1 = lst.slice();\n\
    \    var lst2 = lst.slice();\n    var lst3 = [];\n    var lst4 = [];\n    var\
    \ lst5 = [];\n    var lst6 = [];\n    var lst7 = [];\n    var lst8 = [];\n   \
    \ var lst9 = [];\n    var lst10 = [];\n    var lst11 = [];\n    var lst12 = [];\n\
    \    var lst13 = [];\n    var lst14 = [];\n    var lst15 = [];\n    var lst16\
    \ = [];\n    var lst17 = [];\n    var lst18 = [];\n    var lst19 = [];\n    var\
    \ lst20 = [];\n    var lst21 = [];\n    var lst22 = [];\n    var lst23 = [];\n\
    \    var lst24 = [];\n    var lst25 = [];\n    var lst26 = [];\n    var lst27\
    \ = [];\n    var lst28 = [];\n    var lst29 = [];\n    var lst30 = [];\n    var\
    \ lst31 = [];\n    var lst32 = [];\n    var lst33 = [];\n    var lst34 = [];\n\
    \    var lst35 = [];\n    var lst36 = [];\n    var lst37 = [];\n    var lst38\
    \ = [];\n    var lst39 = [];\n    var lst40 = [];\n    var lst41 = [];\n    var\
    \ lst42 = [];\n    var lst43 = [];\n    var lst44 = [];\n    var lst45 = [];\n\
    \    var lst46 = [];\n    var lst47 = [];\n    var lst48 = [];\n    var lst49\
    \ = [];\n    var lst50 = [];\n    var lst51 = [];\n    var lst52 = [];\n    var\
    \ lst53 = [];\n    var lst54 = [];\n    var lst55 = [];\n    var lst56 = [];\n\
    \    var lst57 = [];\n    var lst58 = [];\n    var lst59 = [];\n    var lst60\
    \ = [];\n    var lst61 = [];\n    var lst62 = [];\n    var lst63 = [];", "   \
    \ var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n  \
    \  var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var result = [];\n\
    \    var sorted = lst.sort(function(a,b){return a-b});\n    var min = sorted[0];\n\
    \    var max = sorted[sorted.length-1];\n    var min_index = 0;\n    var max_index\
    \ = sorted.length-1;\n    while(min_index<=max_index){\n        result.push(min);\n\
    \        min_index++;\n        if(min_index<=max_index){\n            result.push(max);\n\
    \            max_index--;\n        }\n        min = sorted[min_index];\n     \
    \   max = sorted[max_index];\n    }\n    return result;\n}", "    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    while (lst.length\
    \ > 0){\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n\
    \        new_lst.push(max);\n        lst.splice(lst.indexOf(max), 1);\n      \
    \  min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n    return\
    \ new_lst;\n}", "    var sorted = lst.sort(function(a,b){return a-b});\n    var\
    \ result = [];\n    var min = 0;\n    var max = sorted.length-1;\n    while(min<=max){\n\
    \        result.push(sorted[min]);\n        min++;\n        if(min<=max){\n  \
    \          result.push(sorted[max]);\n            max--;\n        }\n    }\n \
    \   return result;\n}", "    var new_lst = [];\n    var lst_copy = lst.slice();\n\
    \    while(lst_copy.length > 0){\n        var min = Math.min.apply(null, lst_copy);\n\
    \        var max = Math.max.apply(null, lst_copy);\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst_copy.splice(lst_copy.indexOf(min), 1);\n\
    \        lst_copy.splice(lst_copy.indexOf(max), 1);\n    }\n    return new_lst;\n\
    }", "    let sorted = lst.sort((a,b) => a-b);\n    let result = [];\n    let i\
    \ = 0;\n    let j = sorted.length - 1;\n    while(i < j){\n        result.push(sorted[i]);\n\
    \        result.push(sorted[j]);\n        i++;\n        j--;\n    }\n    if(i\
    \ === j){\n        result.push(sorted[i]);\n    }\n    return result;\n}\n", " \
    \   var lst = lst.sort(function(a,b){return a-b});\n    var new_lst = [];\n  \
    \  var i = 0;\n    while(lst.length > 0){\n        if(i%2 == 0){\n           \
    \ new_lst.push(lst.shift());\n        }\n        else{\n            new_lst.push(lst.pop());\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(i % 2 === 0){\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n    }\n    return result;\n\
    }\n", "    var sorted = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    sorted.push(min);\n    sorted.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    while(lst.length\
    \ > 0){\n        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        sorted.push(min);\n        sorted.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index, 1);\n    }\n    return sorted;\n}", "   \
    \ var lst2 = lst.slice();\n    var lst3 = [];\n    var lst4 = [];\n    var lst5\
    \ = [];\n    var lst6 = [];\n    var lst7 = [];\n    var lst8 = [];\n    var lst9\
    \ = [];\n    var lst10 = [];\n    var lst11 = [];\n    var lst12 = [];\n    var\
    \ lst13 = [];\n    var lst14 = [];\n    var lst15 = [];\n    var lst16 = [];\n\
    \    var lst17 = [];\n    var lst18 = [];\n    var lst19 = [];\n    var lst20\
    \ = [];\n    var lst21 = [];\n    var lst22 = [];\n    var lst23 = [];\n    var\
    \ lst24 = [];\n    var lst25 = [];\n    var lst26 = [];\n    var lst27 = [];\n\
    \    var lst28 = [];\n    var lst29 = [];\n    var lst30 = [];\n    var lst31\
    \ = [];\n    var lst32 = [];\n    var lst33 = [];\n    var lst34 = [];\n    var\
    \ lst35 = [];\n    var lst36 = [];\n    var lst37 = [];\n    var lst38 = [];\n\
    \    var lst39 = [];\n    var lst40 = [];\n    var lst41 = [];\n    var lst42\
    \ = [];\n    var lst43 = [];\n    var lst44 = [];\n    var lst45 = [];\n    var\
    \ lst46 = [];\n    var lst47 = [];\n    var lst48 = [];\n    var lst49 = [];\n\
    \    var lst50 = [];\n    var lst51 = [];\n    var lst52 = [];\n    var lst53\
    \ = [];\n    var lst54 = [];\n    var lst55 = [];\n    var lst56 = [];\n    var\
    \ lst57 = [];\n    var lst58 = [];\n    var lst59 = [];\n    var lst60 = [];\n\
    \    var lst61 = [];\n    var lst62 = [];\n    var lst63 = [];\n    var lst64\
    \ = [];\n    var l", "    var new_lst = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index_min = lst.indexOf(min);\n\
    \    var index_max = lst.indexOf(max);\n    new_lst.push(min);\n    lst.splice(index_min,\
    \ 1);\n    new_lst.push(max);\n    lst.splice(index_max, 1);\n    while (lst.length\
    \ > 0){\n        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        index_min = lst.indexOf(min);\n        index_max = lst.indexOf(max);\n\
    \        new_lst.push(min);\n        lst.splice(index_min, 1);\n        new_lst.push(max);\n\
    \        lst.splice(index_max, 1);\n    }\n    return new_lst;\n}\n", "    var\
    \ result = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_array = lst.slice(0, min_index);\n    var max_array = lst.slice(min_index\
    \ + 1, max_index);\n    var min_array_reversed = min_array.reverse();\n    var\
    \ max_array_reversed = max_array.reverse();\n    var min_array_reversed_length\
    \ = min_array_reversed.length;\n    var max_array_reversed_length = max_array_reversed.length;\n\
    \    var min_array_reversed_index = 0;\n    var max_array_reversed_index = 0;\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (i % 2 === 0) {\n    \
    \        result.push(min_array_reversed[min_array_reversed_index]);\n        \
    \    min_array_reversed_index++;\n        } else {\n            result.push(max_array_reversed[max_array_reversed_index]);\n\
    \            max_array_reversed_index++;\n        }\n    }\n    return result;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    while(sorted.length > 0){\n        if(i % 2 == 0){\n    \
    \        result.push(sorted.shift());\n        }else{\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_list = [];\n    while (lst.length\
    \ > 0){\n        new_list.push(min);\n        lst.splice(lst.indexOf(min), 1);\n\
    \        new_list.push(max);\n        lst.splice(lst.indexOf(max), 1);\n     \
    \   min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n    return\
    \ new_list;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n  \
    \  var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}", "    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result = [];\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}", "    var lst_sorted =\
    \ lst.sort(function(a,b){return a-b});\n    var lst_strange = [];\n    var i =\
    \ 0;\n    var j = lst_sorted.length-1;\n    while(i<=j){\n        lst_strange.push(lst_sorted[i]);\n\
    \        if(i!=j){\n            lst_strange.push(lst_sorted[j]);\n        }\n\
    \        i++;\n        j--;\n    }\n    return lst_strange;\n}\n", "    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst = [];\n\
    \    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n     \
    \       new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n   \
    \         min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var new_lst = [];\n    var i = 0;\n    while(sorted.length>0){\n\
    \        if(i%2==0){\n            new_lst.push(sorted.shift());\n        }\n \
    \       else{\n            new_lst.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return new_lst;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let newLst = [];\n    let i = 0;\n    while(newLst.length !== lst.length){\n\
    \        if(i % 2 === 0){\n            newLst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            newLst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return newLst;\n}\n", "    var lst_sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var lst_strange = [];\n    var lst_max\
    \ = lst_sorted.length;\n    var lst_min = 0;\n    var lst_count = 0;\n    while\
    \ (lst_count < lst_max){\n        lst_strange.push(lst_sorted[lst_min]);\n   \
    \     lst_strange.push(lst_sorted[lst_max-1]);\n        lst_min++;\n        lst_max--;\n\
    \        lst_count++;\n    }\n    return lst_strange;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (new_lst.length < lst.length){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while (new_lst.length < lst.length){\n\
    \        if (i % 2 === 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    let sorted = lst.sort((a,b) => a-b);\n    let result = [];\n    let\
    \ i = 0;\n    while(sorted.length > 0){\n        if(i%2 === 0){\n            result.push(sorted.shift());\n\
    \        }else{\n            result.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    var max_lst = lst.sort(function(a,b){return\
    \ a-b});\n    var min_lst = lst.sort(function(a,b){return b-a});\n    var new_lst\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2 == 0){\n \
    \           new_lst.push(min_lst.shift());\n        }\n        else{\n       \
    \     new_lst.push(max_lst.shift());\n        }\n    }\n    return new_lst;\n\
    }\n", "    var result = [];\n    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var i = 0;\n    var j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}", "    var res = [];\n   \
    \ var max = Math.max.apply(null, lst);\n    var min = Math.min.apply(null, lst);\n\
    \    var max_index = lst.indexOf(max);\n    var min_index = lst.indexOf(min);\n\
    \    var max_removed = lst.splice(max_index, 1);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    res.push(min_removed[0]);\n    res.push(max_removed[0]);\n    while\
    \ (lst.length > 0){\n        var max = Math.max.apply(null, lst);\n        var\
    \ min = Math.min.apply(null, lst);\n        var max_index = lst.indexOf(max);\n\
    \        var min_index = lst.indexOf(min);\n        var max_removed = lst.splice(max_index,\
    \ 1);\n        var min_removed = lst.splice(min_index, 1);\n        res.push(min_removed[0]);\n\
    \        res.push(max_removed[0]);\n    }\n    return res;\n}\n", "    var new_lst\
    \ = [];\n    var max = Math.max.apply(null, lst);\n    var min = Math.min.apply(null,\
    \ lst);\n    var max_index = lst.indexOf(max);\n    var min_index = lst.indexOf(min);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(max_index, 1);\n\
    \    lst.splice(min_index, 1);\n    while (lst.length > 0){\n        max = Math.max.apply(null,\
    \ lst);\n        min = Math.min.apply(null, lst);\n        max_index = lst.indexOf(max);\n\
    \        min_index = lst.indexOf(min);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(max_index, 1);\n        lst.splice(min_index, 1);\n    }\n\
    \    return new_lst;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while (new_lst.length < lst.length){\n\
    \        if (i%2==0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max),1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(i\
    \ < lst.length){\n        if(i % 2 === 0){\n            result.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n       \
    \ if(i%2 === 0){\n            result.push(sorted.shift());\n        }else{\n \
    \           result.push(sorted.pop());\n        }\n        i++;\n    }\n    return\
    \ result;\n}", "    var result = [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_max = [min, max];\n    var\
    \ min_max_index = [min_index, max_index];\n    var min_max_index_sorted = min_max_index.sort();\n\
    \    var min_max_sorted = min_max.sort();\n    var min_max_index_sorted_reversed\
    \ = min_max_index_sorted.reverse();\n    var min_max_sorted_reversed = min_max_sorted.reverse();\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (i % 2 === 0) {\n    \
    \        result.push(min_max_sorted[0]);\n            lst.splice(min_max_index_sorted[0],\
    \ 1);\n        } else {\n            result.push(min_max_sorted[1]);\n       \
    \     lst.splice(min_max_index_sorted[1], 1);\n        }\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 ===\
    \ 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n    lst.splice(index,\
    \ 1);\n    result.push(min);\n    while(lst.length > 0){\n        var min = Math.min.apply(null,\
    \ lst);\n        var max = Math.max.apply(null, lst);\n        var index = lst.indexOf(max);\n\
    \        lst.splice(index, 1);\n        result.push(max);\n        if(lst.length\
    \ > 0){\n            var min = Math.min.apply(null, lst);\n            var max\
    \ = Math.max.apply(null, lst);\n            var index = lst.indexOf(min);\n  \
    \          lst.splice(index, 1);\n            result.push(min);\n        }\n \
    \   }\n    return result;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<j){\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if(i===j){\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n\
    \        if(i % 2 == 0){\n            result.push(sorted.shift());\n        }else{\n\
    \            result.push(sorted.pop());\n        }\n        i++;\n    }\n    return\
    \ result;\n}", "    let res = [];\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 === 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n       \
    \ if(i%2 == 0){\n            result.push(sorted.shift());\n        }else{\n  \
    \          result.push(sorted.pop());\n        }\n        i++;\n    }\n    return\
    \ result;\n}", "    var sorted = lst.sort(function(a,b){return a-b});\n    var\
    \ result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var i = 0;\n    while(lst.length > 0){\n\
    \        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }else{\n        \
    \    result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n       \
    \     max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while (result.length < lst.length){\n\
    \        if (i % 2 === 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var res = [];\n\
    \    var lst_copy = lst.slice();\n    while(lst_copy.length > 0){\n        var\
    \ min = Math.min.apply(null, lst_copy);\n        var max = Math.max.apply(null,\
    \ lst_copy);\n        res.push(min);\n        res.push(max);\n        lst_copy.splice(lst_copy.indexOf(min),\
    \ 1);\n        lst_copy.splice(lst_copy.indexOf(max), 1);\n    }\n    return res;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    var new_lst2\
    \ = [];\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] != min\
    \ && lst[i] != max){\n            new_lst2.push(lst[i]);\n        }\n    }\n \
    \   var min2 = Math.min(...new_lst2);\n    var max2 = Math.max(...new_lst2);\n\
    \    new_lst.push(min2);\n    new_lst.push(max2);\n    var new_lst3 = [];\n  \
    \  for (var i = 0; i < new_lst2.length; i++){\n        if (new_lst2[i] != min2\
    \ && new_lst2[i] != max2){\n            new_lst3.push(new_lst2[i]);\n        }\n\
    \    }\n    var min3 = Math.min(...new_lst3);\n    var max3 = Math.max(...new_lst3);\n\
    \    new_lst.push(min3);\n    new_lst.push(max3);\n    var new_lst4 = [];\n  \
    \  for (var i = 0; i < new_lst3.length; i++){\n        if (new_lst3[i] != min3\
    \ && new_lst3[i] != max3){\n            new_lst4.push(new_lst3[i]);\n        }\n\
    \    }\n    var min4 = Math.min(...new_lst4);\n    var max4 = Math.max(...new_lst4);\n\
    \    new_lst.push(min4);\n    new_lst.push(max4);\n    var new_lst5 = [];\n  \
    \  for (var i = 0; i < new_lst4.length; i++){\n        if (new_lst4[i", "    let\
    \ new_lst = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index, 1);\n    while (lst.length > 0){\n        min = Math.min(...lst);\n\
    \        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n    \
    \    max_index = lst.indexOf(max);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return new_lst;\n}", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_strange = [];\n    var i = 0;\n    var j = lst_sorted.length-1;\n\
    \    while(i<=j){\n        lst_strange.push(lst_sorted[i]);\n        if(i!=j){\n\
    \            lst_strange.push(lst_sorted[j]);\n        }\n        i++;\n     \
    \   j--;\n    }\n    return lst_strange;\n}", "    var sorted = lst.sort(function(a,b){\n\
    \        return a-b;\n    });\n    var result = [];\n    var i = 0;\n    while(sorted.length\
    \ > 0){\n        result.push(sorted.shift());\n        result.push(sorted.pop());\n\
    \    }\n    return result;\n}", "    let sorted = lst.sort((a,b) => a-b);\n  \
    \  let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i\
    \ <= j){\n        result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}", "    var\
    \ sorted_list = [];\n    var sorted_list_length = 0;\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_list = lst.slice();\n    while\
    \ (sorted_list_length < lst.length){\n        sorted_list.push(min);\n       \
    \ sorted_list_length += 1;\n        new_list.splice(min_index, 1);\n        min\
    \ = Math.min.apply(null, new_list);\n        min_index = new_list.indexOf(min);\n\
    \        sorted_list.push(max);\n        sorted_list_length += 1;\n        new_list.splice(max_index,\
    \ 1);\n        max = Math.max.apply(null, new_list);\n        max_index = new_list.indexOf(max);\n\
    \    }\n    return sorted_list;\n}", "    let sorted = lst.sort((a,b) => a-b);\n\
    \    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i\
    \ < j){\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n  \
    \      i++;\n        j--;\n    }\n    if(i === j){\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n\
    \        if(i%2 == 0){\n            result.push(sorted.shift());\n        }\n\
    \        else{\n            result.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n\
    \    let result = [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n\
    \        result.push(sorted.pop());\n    }\n    return result;\n}", "    var lst_sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange = [];\n \
    \   var lst_sorted_strange_max = [];\n    var lst_sorted_strange_min = [];\n \
    \   var lst_sorted_strange_max_min = [];\n    var lst_sorted_strange_min_max =\
    \ [];\n    var lst_sorted_strange_max_min_max = [];\n    var lst_sorted_strange_min_max_min\
    \ = [];\n    var lst_sorted_strange_max_min_max_min = [];\n    var lst_sorted_strange_min_max_min_max\
    \ = [];\n    var lst_sorted_strange_max_min_max_min_max = [];\n    var lst_sorted_strange_min_max_min_max_min\
    \ = [];\n    var lst_sorted_strange_max_min_max_min_max_min = [];\n    var lst_sorted_strange_min_max_min_max_min_max\
    \ = [];\n    var lst_sorted_strange_max_min_max_min_max_min_max = [];\n    var\
    \ lst_sorted_strange_min_max_min_max_min_max_min = [];\n    var lst_sorted_strange_max_min_max_min_max_min_max_min\
    \ = [];\n    var lst_sorted_strange_min_max_min_max_min_max_min_max = [];\n  \
    \  var lst_sorted_strange_max_min_max_min_max_min_max_min_max = [];\n    var lst_sorted_strange_min_max_min_max_min_max_min_max_min\
    \ = [];\n    var lst_sorted_strange_max_min_max_min_max_min_max_min_max_min =\
    \ [];\n    var lst_sorted_strange_min_max_min_max_min_max_min_max", "    var lst_sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var lst_strange = [];\n    var lst_strange_reverse\
    \ = [];\n    var lst_strange_final = [];\n    var lst_strange_final_reverse =\
    \ [];\n    var lst_strange_final_final = [];\n    var lst_strange_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final = [];\n    var lst_strange_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final = [];\n    var lst_strange_final_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final_final = [];\n    var lst_strange_final_final_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final_final_final = [];\n    var\
    \ lst_strange_final_final_final_final_final_final_reverse = [];\n    var lst_strange_final_final_final_final_final_final_final\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_final =\
    \ [];\n    var lst_strange_final_final_final_final_final_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_final_final\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_final_final_final\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_final_final_final_reverse\
    \ = [];\n    var lst_strange_final_final_final_final_final_final_final_final_",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        if(i!=j){\n            result.push(sorted[j]);\n        }\n        i++;\n\
    \        j--;\n    }\n    return result;\n}", "    var sorted = [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var i = 0;\n    while(lst.length > 0){\n        if(i % 2 === 0){\n         \
    \   sorted.push(min);\n            lst.splice(lst.indexOf(min), 1);\n        \
    \    min = Math.min.apply(null, lst);\n        } else {\n            sorted.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return sorted;\n}\n", "    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst = [];\n\
    \    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n     \
    \       new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n   \
    \         min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var result =\
    \ [];\n    var sorted = lst.sort(function(a,b){return a-b});\n    var i = 0;\n\
    \    while(sorted.length > 0){\n        if(i%2 == 0){\n            result.push(sorted.shift());\n\
    \        }else{\n            result.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    sorted.push(min_removed[0]);\n\
    \    sorted.push(max_removed[0]);\n    if (lst.length > 0) {\n        return sorted.concat(strange_sort_list(lst));\n\
    \    } else {\n        return sorted;\n    }\n}\n", "    var result = [];\n  \
    \  var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_count = 0;\n    var max_count = 0;\n    while (lst.length > 0){\n\
    \        if (min_count < max_count){\n            result.push(min);\n        \
    \    lst.splice(min_index, 1);\n            min = Math.min.apply(null, lst);\n\
    \            min_index = lst.indexOf(min);\n            min_count += 1;\n    \
    \    }\n        else{\n            result.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \            max_count += 1;\n        }\n    }\n    return result;\n}", "    var\
    \ new_lst = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var i = 0;\n    while (i < lst.length){\n        if (i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min.apply(null, lst);\n        }\n        else{\n    \
    \        new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n  \
    \          max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}", "    let sorted = lst.sort((a,b) => a-b);\n    let result\
    \ = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n\
    \        result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var odd = lst.filter(function(x, i){return i % 2 == 0});\n    var even = lst.filter(function(x,\
    \ i){return i % 2 == 1});\n    return odd.concat(even.reverse());\n}\n", "   \
    \ var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    while (lst.length > 0){\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        new_lst.push(max);\n        lst.splice(lst.indexOf(max), 1);\n\
    \        min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n   \
    \ return new_lst;\n}\n", "  var result = [];\n  var min = Math.min.apply(null,\
    \ lst);\n  var max = Math.max.apply(null, lst);\n  var min_index = lst.indexOf(min);\n\
    \  var max_index = lst.indexOf(max);\n  var min_count = 0;\n  var max_count =\
    \ 0;\n  var min_max = 0;\n  var max_min = 0;\n  var min_max_count = 0;\n  var\
    \ max_min_count = 0;\n  var min_max_index = 0;\n  var max_min_index = 0;\n  var\
    \ min_max_min = 0;\n  var max_min_max = 0;\n  var min_max_min_index = 0;\n  var\
    \ max_min_max_index = 0;\n  var min_max_min_count = 0;\n  var max_min_max_count\
    \ = 0;\n  var min_max_min_max = 0;\n  var max_min_max_min = 0;\n  var min_max_min_max_index\
    \ = 0;\n  var max_min_max_min_index = 0;\n  var min_max_min_max_count = 0;\n \
    \ var max_min_max_min_count = 0;\n  var min_max_min_max_min = 0;\n  var max_min_max_min_max\
    \ = 0;\n  var min_max_min_max_min_index = 0;\n  var max_min_max_min_max_index\
    \ = 0;\n  var min_max_min_max_min_count = 0;\n  var max_min_max_min_max_count\
    \ = 0;\n  var min_max_min_max_min_max = 0;\n  var max_min_max_min_max_min = 0;\n\
    \  var min_max_min_max_min_max_index = 0;\n  var max_min_max_min_max_min_index\
    \ = 0;\n  var min_max_min_max_min_max_count = 0;\n  var max_min_max_min_max_min_",
  "    let res = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let i = 0;\n    while(lst.length > 0){\n        if(i % 2 === 0){\n      \
    \      res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n        \
    \    min = Math.min(...lst);\n        } else {\n            res.push(max);\n \
    \           lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n   \
    \ }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ index_min = lst.indexOf(min);\n    var index_max = lst.indexOf(max);\n    var\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(index_min,\
    \ 1);\n    lst.splice(index_max - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ result = [];\n    while (lst.length > 0){\n        result.push(min);\n     \
    \   lst.splice(lst.indexOf(min), 1);\n        if (lst.length > 0){\n         \
    \   result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    min = Math.min(...lst);\n            max = Math.max(...lst);\n        }\n\
    \    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while (lst.length\
    \ > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n   \
    \     }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var result = [];\n    var min_max = [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max_index = [];\n    var min_max_index_sorted = [];\n    var min_max_sorted\
    \ = [];\n    var lst_sorted = [];\n    var lst_index_sorted = [];\n    var lst_index_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted = [];\n    var lst_index_sorted_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted_sorted = [];\n    var lst_index_sorted_sorted_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted_sorted_sorted = [];\n    var lst_index_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted_sorted_sorted_sorted = [];\n    var lst_index_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var\
    \ lst_index_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var lst_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    var lst_index_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted =\
    \ [];\n    var lst_index_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    var lst_sorted_sorted_sorted_sorted_sorted_s", "    if(lst.length\
    \ == 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var min = lst[0];\n\
    \    var max = lst[0];\n    var min_index = 0;\n    var max_index = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < min){\n            min = lst[i];\n\
    \            min_index = i;\n        }\n        if(lst[i] > max){\n          \
    \  max = lst[i];\n            max_index = i;\n        }\n    }\n    var new_lst\
    \ = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    for(var i = 0; i\
    \ < lst.length; i++){\n        if(i != min_index && i != max_index){\n       \
    \     new_lst.push(lst[i]);\n        }\n    }\n    return new_lst;\n}", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        if(i!=j){\n            result.push(sorted[j]);\n        }\n        i++;\n\
    \        j--;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n\
    \        if(i % 2 == 0){\n            result.push(sorted.shift());\n        }\n\
    \        else{\n            result.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n\
    \    let result = [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n\
    \        result.push(sorted.pop());\n    }\n    return result;\n}", "    var lst_sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var lst_strange = [];\n    var lst_strange_index\
    \ = 0;\n    var lst_sorted_index = 0;\n    var lst_sorted_length = lst_sorted.length;\n\
    \    var lst_sorted_length_half = Math.floor(lst_sorted_length/2);\n    var lst_sorted_length_half_index\
    \ = lst_sorted_length_half;\n    var lst_sorted_length_half_index_dec = lst_sorted_length_half;\n\
    \    var lst_sorted_length_half_index_inc = lst_sorted_length_half;\n    var lst_sorted_length_half_index_inc_max\
    \ = lst_sorted_length;\n    var lst_sorted_length_half_index_dec_min = 0;\n  \
    \  var lst_sorted_length_half_index_dec_min_inc = 0;\n    var lst_sorted_length_half_index_dec_min_inc_max\
    \ = 0;\n    var lst_sorted_length_half_index_dec_min_inc_max_dec = 0;\n    var\
    \ lst_sorted_length_half_index_dec_min_inc_max_dec_inc = 0;\n    var lst_sorted_length_half_index_dec_min_inc_max_dec_inc_max\
    \ = 0;\n    var lst_sorted_length_half_index_dec_min_inc_max_dec_inc_max_dec =\
    \ 0;\n    var lst_sorted_length_half_index_dec_min_inc_max_dec_inc_max_dec_inc\
    \ = 0;\n    var lst_sorted_length_half_index_dec_min_inc_max_dec_inc_max_dec_inc_max\
    \ = 0;\n    var lst_sorted_length_half_index_dec_min_inc_max_dec_inc_max_dec_inc_max_dec\
    \ = 0", "    var result = [];\n    var lst_copy = lst.slice();\n    var min =\
    \ Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null, lst_copy);\n\
    \    var min_index = lst_copy.indexOf(min);\n    var max_index = lst_copy.indexOf(max);\n\
    \    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index, 1);\n    result.push(min);\n\
    \    result.push(max);\n    while (lst_copy.length > 0){\n        var min = Math.min.apply(null,\
    \ lst_copy);\n        var max = Math.max.apply(null, lst_copy);\n        var min_index\
    \ = lst_copy.indexOf(min);\n        var max_index = lst_copy.indexOf(max);\n \
    \       lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index, 1);\n\
    \        result.push(min);\n        result.push(max);\n    }\n    return result;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(i\
    \ < lst.length){\n        result.push(min);\n        result.push(max);\n     \
    \   i++;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 === 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}", "    var result = [];\n\
    \    var max = Math.max.apply(null, lst);\n    var min = Math.min.apply(null,\
    \ lst);\n    var max_index = lst.indexOf(max);\n    var min_index = lst.indexOf(min);\n\
    \    var max_removed = lst.splice(max_index, 1);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  if (lst.length > 0) {\n        return result.concat(strange_sort_list(lst));\n\
    \    } else {\n        return result;\n    }\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var res = [];\n  \
    \  var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    res.push(min);\n    res.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    while(lst.length > 0){\n        min = Math.min.apply(null, lst);\n\
    \        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        res.push(min);\n        res.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return res;\n}", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var lst_min = lst.slice(0, min_index);\n\
    \    var lst_max = lst.slice(min_index + 1, max_index);\n    var lst_min_max =\
    \ lst.slice(max_index + 1);\n    var lst_max_min = lst.slice(min_index + 1, max_index);\n\
    \    var lst_min_max_min = lst.slice(max_index + 1);\n    var lst_max_min_max\
    \ = lst.slice(min_index + 1, max_index);\n    var lst_min_max_min_max = lst.slice(max_index\
    \ + 1);\n    var lst_max_min_max_min = lst.slice(min_index + 1, max_index);\n\
    \    var lst_min_max_min_max_min = lst.slice(max_index + 1);\n    var lst_max_min_max_min_max\
    \ = lst.slice(min_index + 1, max_index);\n    var lst_min_max_min_max_min_max\
    \ = lst.slice(max_index + 1);\n    var lst_max_min_max_min_max_min = lst.slice(min_index\
    \ + 1, max_index);\n    var lst_min_max_min_max_min_max_min = lst.slice(max_index\
    \ + 1);\n    var lst_max_min_max_min_max_min_max = lst.slice(min_index + 1, max_index);\n\
    \    var lst_min_max_min_max_min_max_min_max = lst.slice(max_index + 1);\n   \
    \ var lst_max_min_max_min_max_min_max_min = lst.slice(min_index + 1,", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_sorted_reverse = lst_sorted.reverse();\n    var lst_strange\
    \ = [];\n    for (var i = 0; i < lst.length; i++){\n        if (i % 2 == 0){\n\
    \            lst_strange.push(lst_sorted[i/2]);\n        }\n        else {\n \
    \           lst_strange.push(lst_sorted_reverse[(i-1)/2]);\n        }\n    }\n\
    \    return lst_strange;\n}", "    var min = Math.min(...lst);\n    var max =\
    \ Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while (lst.length\
    \ > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n   \
    \     }\n        else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var lst_sorted = lst.sort((a,b) => a-b);\n   \
    \ var lst_strange = [];\n    while(lst_sorted.length > 0){\n        lst_strange.push(lst_sorted.shift());\n\
    \        lst_strange.push(lst_sorted.pop());\n    }\n    return lst_strange;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        if(i!=j){\n            result.push(sorted[j]);\n        }\n        i++;\n\
    \        j--;\n    }\n    return result;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (new_lst.length < lst.length){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var sorted_lst = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted_lst.length - 1;\n  \
    \  while(i <= j){\n        result.push(sorted_lst[i]);\n        if(i != j){\n\
    \            result.push(sorted_lst[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 ==\
    \ 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var new_lst = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    while (lst.length > 0){\n        new_lst.push(min);\n\
    \        lst.splice(lst.indexOf(min), 1);\n        if (lst.length > 0){\n    \
    \        new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n  \
    \          min = Math.min.apply(null, lst);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n    }\n    return new_lst;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    let sorted = lst.sort((a,b) => a-b);\n    let result\
    \ = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i <= j){\n        \
    \    result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var result = [];\n\
    \    var sorted = lst.sort(function(a,b){return a-b});\n    var max = sorted.length-1;\n\
    \    var min = 0;\n    while(result.length < lst.length){\n        result.push(sorted[min]);\n\
    \        if(result.length < lst.length){\n            result.push(sorted[max]);\n\
    \        }\n        min++;\n        max--;\n    }\n    return result;\n}\n", " \
    \   var result = [];\n    var min = Math.min.apply(null, lst);\n    var max =\
    \ Math.max.apply(null, lst);\n    var index = 0;\n    var i = 0;\n    while(i\
    \ < lst.length){\n        if(index % 2 === 0){\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        }\n        else{\n            result.push(max);\n           \
    \ lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null, lst);\n\
    \        }\n        index++;\n        i++;\n    }\n    return result;\n}", " \
    \   var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n\
    \        if(i % 2 == 0){\n            result.push(sorted.shift());\n        }else{\n\
    \            result.push(sorted.pop());\n        }\n        i++;\n    }\n    return\
    \ result;\n}\n", "    var res = [];\n    var max = Math.max.apply(null, lst);\n\
    \    var min = Math.min.apply(null, lst);\n    var max_index = lst.indexOf(max);\n\
    \    var min_index = lst.indexOf(min);\n    var i = 0;\n    while (i < lst.length){\n\
    \        res.push(min);\n        res.push(max);\n        i += 2;\n        lst.splice(max_index,\
    \ 1);\n        lst.splice(min_index, 1);\n        max = Math.max.apply(null, lst);\n\
    \        min = Math.min.apply(null, lst);\n        max_index = lst.indexOf(max);\n\
    \        min_index = lst.indexOf(min);\n    }\n    return res;\n}\n", "    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    while (new_lst.length < lst.length){\n        if (i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    return result;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    var res = [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n  \
    \          max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return res;\n}", "    let sorted = lst.sort((a,b) => a-b);\n    let result\
    \ = [];\n    let min = 0;\n    let max = sorted.length - 1;\n    while (min <=\
    \ max){\n        result.push(sorted[min]);\n        if (min !== max){\n      \
    \      result.push(sorted[max]);\n        }\n        min++;\n        max--;\n\
    \    }\n    return result;\n}", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var res = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n         \
    \   max = Math.max(...lst);\n        }\n        i++;\n    }\n    return res;\n\
    }", "    var result = [];\n    var max = Math.max.apply(null, lst);\n    var min\
    \ = Math.min.apply(null, lst);\n    var max_index = lst.indexOf(max);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_removed = lst.splice(max_index, 1);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed_index =\
    \ lst.indexOf(max_removed);\n    var min_removed_index = lst.indexOf(min_removed);\n\
    \    var max_removed_removed = lst.splice(max_removed_index, 1);\n    var min_removed_removed\
    \ = lst.splice(min_removed_index, 1);\n    result.push(min);\n    result.push(max);\n\
    \    result.push(min_removed);\n    result.push(max_removed);\n    result.push(min_removed_removed);\n\
    \    result.push(max_removed_removed);\n    return result;\n}", "    let lst_copy\
    \ = lst.slice();\n    let sorted_lst = [];\n    while(lst_copy.length > 0){\n\
    \        let min = Math.min(...lst_copy);\n        let max = Math.max(...lst_copy);\n\
    \        sorted_lst.push(min);\n        sorted_lst.push(max);\n        lst_copy.splice(lst_copy.indexOf(min),\
    \ 1);\n        lst_copy.splice(lst_copy.indexOf(max), 1);\n    }\n    return sorted_lst;\n\
    }\n", "    var new_lst = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var lst_length = lst.length;\n    var\
    \ i = 0;\n    while (i < lst_length){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min.apply(null,\
    \ lst);\n            min_index = lst.indexOf(min);\n        }\n        else{\n\
    \            new_lst.push(max);\n            lst.splice(max_index, 1);\n     \
    \       max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var result =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var lst_min = lst.slice(0, min_index);\n    var lst_max = lst.slice(min_index\
    \ + 1, max_index);\n    var lst_min_max = lst.slice(max_index + 1);\n    var lst_max_min\
    \ = lst.slice(min_index + 1, max_index + 1);\n    lst_max_min.reverse();\n   \
    \ result = result.concat(min, lst_max, max, lst_min, lst_max_min, lst_min_max);\n\
    \    return result;\n}", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n\
    \    var lst_result = [];\n    var lst_length = lst_sorted.length;\n    var lst_length_half\
    \ = Math.floor(lst_length/2);\n    var lst_length_half_plus = lst_length_half\
    \ + 1;\n    var lst_length_half_minus = lst_length_half - 1;\n    var lst_length_minus\
    \ = lst_length - 1;\n    var lst_length_minus_half = lst_length_minus - lst_length_half;\n\
    \    var lst_length_minus_half_plus = lst_length_minus_half + 1;\n    var lst_length_minus_half_minus\
    \ = lst_length_minus_half - 1;\n    var lst_length_minus_half_minus_plus = lst_length_minus_half_minus\
    \ + 1;\n    var lst_length_minus_half_minus_minus = lst_length_minus_half_minus\
    \ - 1;\n    var lst_length_minus_half_minus_minus_plus = lst_length_minus_half_minus_minus\
    \ + 1;\n    var lst_length_minus_half_minus_minus_minus = lst_length_minus_half_minus_minus\
    \ - 1;\n    var lst_length_minus_half_minus_minus_minus_plus = lst_length_minus_half_minus_minus_minus\
    \ + 1;\n    var lst_length_minus_half_minus_minus_minus_minus = lst_length_minus_half_minus_minus_minus\
    \ - 1;\n    var lst_length_minus_half_minus_minus_minus_minus_plus = lst_length_minus_half_minus_minus_minus_minus\
    \ + 1;\n    var lst_length_minus_half_minus_minus_minus_minus_minus = lst_length_minus_half_minus_minus_minus_minus\
    \ - 1;\n    var lst_length_minus_half_minus_minus_minus_minus_minus_plus = lst",
  "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    var j = lst.length - 1;\n    while (i < lst.length){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        i += 1;\n   \
    \     j -= 1;\n    }\n    return new_lst;\n}", "    var result = [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = [min, max];\n    var max_min = [max, min];\n    var min_max_index\
    \ = [min_index, max_index];\n    var max_min_index = [max_index, min_index];\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n     \
    \       result.push(min_max[i]);\n        } else {\n            result.push(max_min[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(i % 2 === 0){\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n    }\n    return result;\n\
    }", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i %\
    \ 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else {\n      \
    \      new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n    \
    \        max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ != min && lst[i] != max){\n            new_lst.push(lst[i]);\n        }\n  \
    \  }\n    return new_lst;\n}", "    var lst_copy = lst.slice();\n    var result\
    \ = [];\n    while(lst_copy.length > 0){\n        var min = Math.min.apply(null,\
    \ lst_copy);\n        var max = Math.max.apply(null, lst_copy);\n        result.push(min);\n\
    \        result.push(max);\n        lst_copy.splice(lst_copy.indexOf(min), 1);\n\
    \        lst_copy.splice(lst_copy.indexOf(max), 1);\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i%2 ==\
    \ 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }", "    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_max = [min, max];\n    let max_min = [max, min];\n    let lst_min_max\
    \ = lst.slice(min_index, max_index);\n    let lst_max_min = lst.slice(max_index,\
    \ min_index);\n    if (lst.length % 2 === 0){\n        result = [...min_max, ...lst_min_max,\
    \ ...max_min, ...lst_max_min];\n    } else {\n        result = [...min_max, ...lst_min_max,\
    \ ...max_min, ...lst_max_min, min];\n    }\n    return result;\n}\n", "    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    while (i < lst.length){\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(lst.indexOf(min), 1);\n      \
    \  lst.splice(lst.indexOf(max), 1);\n        min = Math.min(...lst);\n       \
    \ max = Math.max(...lst);\n        i += 2;\n    }\n    return new_lst;\n}", " \
    \   var sorted = lst.sort((a,b) => a-b);\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_strange = [];\n    var lst_strange_index = 0;\n    var lst_sorted_index\
    \ = 0;\n    var lst_sorted_index_max = lst_sorted.length - 1;\n    var lst_sorted_index_min\
    \ = 0;\n    var lst_sorted_index_min_max = lst_sorted.length - 1;\n    while (lst_sorted_index_min\
    \ < lst_sorted_index_min_max){\n        lst_strange[lst_strange_index] = lst_sorted[lst_sorted_index_min];\n\
    \        lst_strange_index++;\n        lst_sorted_index_min++;\n        lst_strange[lst_strange_index]\
    \ = lst_sorted[lst_sorted_index_min_max];\n        lst_strange_index++;\n    \
    \    lst_sorted_index_min_max--;\n    }\n    return lst_strange;\n}", "    var\
    \ result = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = [min, max];\n    var min_max_index = [min_index, max_index];\n\
    \    var min_max_index_sorted = min_max_index.sort();\n    var min_max_sorted\
    \ = min_max.sort();\n    var min_max_index_sorted_length = min_max_index_sorted.length;\n\
    \    var min_max_sorted_length = min_max_sorted.length;\n    var min_max_index_sorted_length_half\
    \ = min_max_index_sorted_length / 2;\n    var min_max_sorted_length_half = min_max_sorted_length\
    \ / 2;\n    var min_max_index_sorted_length_half_floor = Math.floor(min_max_index_sorted_length_half);\n\
    \    var min_max_sorted_length_half_floor = Math.floor(min_max_sorted_length_half);\n\
    \    var min_max_index_sorted_length_half_ceil = Math.ceil(min_max_index_sorted_length_half);\n\
    \    var min_max_sorted_length_half_ceil = Math.ceil(min_max_sorted_length_half);\n\
    \    var min_max_index_sorted_length_half_floor_plus_one = min_max_index_sorted_length_half_floor\
    \ + 1;\n    var min_max_sorted_length_half_floor_plus_one = min_max_sorted_length_half_floor\
    \ + 1;\n    var min_max_index_sorted_length_half_floor_minus_one = min_max_index_sorted_length_half_floor\
    \ - 1;\n    var min_max_sorted_length_half_floor_minus_one = min_max_sorted_length_",
  "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange\
    \ = [];\n    var lst_sorted_strange_even = [];\n    var lst_sorted_strange_odd\
    \ = [];\n    for (var i = 0; i < lst_sorted.length; i++){\n        if (i % 2 ==\
    \ 0){\n            lst_sorted_strange_even.push(lst_sorted[i]);\n        }\n \
    \       else{\n            lst_sorted_strange_odd.push(lst_sorted[i]);\n     \
    \   }\n    }\n    lst_sorted_strange_odd.reverse();\n    for (var i = 0; i < lst_sorted_strange_even.length;\
    \ i++){\n        lst_sorted_strange.push(lst_sorted_strange_even[i]);\n      \
    \  lst_sorted_strange.push(lst_sorted_strange_odd[i]);\n    }\n    return lst_sorted_strange;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var max = sorted.length-1;\n    var min = 0;\n    while(min<=max){\n    \
    \    result.push(sorted[max]);\n        max--;\n        if(min<=max){\n      \
    \      result.push(sorted[min]);\n            min++;\n        }\n    }\n    return\
    \ result;\n}", "    var max = Math.max.apply(null, lst);\n    var min = Math.min.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    var j = lst.length - 1;\n\
    \    while (i < lst.length){\n        if (i % 2 === 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        }\n        else{\n            new_lst.push(max);\n          \
    \  lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null, lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    while(lst.length\
    \ > 0){\n        var min = Math.min.apply(null, lst);\n        var max = Math.max.apply(null,\
    \ lst);\n        var min_index = lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n\
    \        result.push(min);\n        result.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index, 1);\n    }\n    return result;\n}\n", " \
    \   var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange\
    \ = [];\n    var lst_sorted_strange_min = [];\n    var lst_sorted_strange_max\
    \ = [];\n    for (var i = 0; i < lst_sorted.length; i++){\n        if (i % 2 ==\
    \ 0){\n            lst_sorted_strange_min.push(lst_sorted[i]);\n        } else\
    \ {\n            lst_sorted_strange_max.push(lst_sorted[i]);\n        }\n    }\n\
    \    lst_sorted_strange_max.reverse();\n    lst_sorted_strange = lst_sorted_strange_min.concat(lst_sorted_strange_max);\n\
    \    return lst_sorted_strange;\n}\n", "    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let i = 0;\n    while (i < lst.length){\n\
    \        if (i % 2 === 0){\n            result.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min(...lst);\n            min_index = lst.indexOf(min);\n\
    \        } else {\n            result.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max(...lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n\
    \    var lst_sorted_reversed = lst_sorted.reverse();\n    var lst_strange = [];\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (i % 2 == 0){\n       \
    \     lst_strange.push(lst_sorted[i/2]);\n        }\n        else{\n         \
    \   lst_strange.push(lst_sorted_reversed[(i-1)/2]);\n        }\n    }\n    return\
    \ lst_strange;\n}", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    result.push(min);\n    while(lst.length > 0){\n\
    \        var min = Math.min.apply(null, lst);\n        var max = Math.max.apply(null,\
    \ lst);\n        var index = lst.indexOf(max);\n        lst.splice(index, 1);\n\
    \        result.push(max);\n        if(lst.length > 0){\n            var min =\
    \ Math.min.apply(null, lst);\n            var max = Math.max.apply(null, lst);\n\
    \            var index = lst.indexOf(min);\n            lst.splice(index, 1);\n\
    \            result.push(min);\n        }\n    }\n    return result;\n}\n", " \
    \   var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_strange\
    \ = [];\n    var lst_strange_max = [];\n    var lst_strange_min = [];\n    for\
    \ (var i = 0; i < lst_sorted.length; i++) {\n        if (i % 2 == 0) {\n     \
    \       lst_strange_min.push(lst_sorted[i]);\n        } else {\n            lst_strange_max.push(lst_sorted[i]);\n\
    \        }\n    }\n    lst_strange_max.reverse();\n    lst_strange = lst_strange_min.concat(lst_strange_max);\n\
    \    return lst_strange;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_max = [min, max];\n    var\
    \ min_max_index = [min_index, max_index];\n    var min_max_index_sorted = min_max_index.sort();\n\
    \    var min_max_sorted = min_max.sort();\n    var min_max_index_sorted_reverse\
    \ = min_max_index_sorted.reverse();\n    var min_max_sorted_reverse = min_max_sorted.reverse();\n\
    \    var min_max_index_sorted_reverse_length = min_max_index_sorted_reverse.length;\n\
    \    var min_max_sorted_reverse_length = min_max_sorted_reverse.length;\n    for\
    \ (var i = 0; i < min_max_index_sorted_reverse_length; i++) {\n        result.push(min_max_sorted_reverse[i]);\n\
    \    }\n    for (var i = 0; i < min_max_index_sorted_reverse_length; i++) {\n\
    \        lst.splice(min_max_index_sorted_reverse[i], 1);\n    }\n    var min_max_index_sorted_length\
    \ = min_max_index_sorted.length;\n    var min_max_sorted_length = min_max_sorted.length;\n\
    \    for (var i = 0; i < min_max_index_sorted_length; i++) {\n        result.push(min_max_sorted[i]);\n\
    \    }\n    for (var i = 0; i < min_max_index_sorted_length; i++) {\n        lst.splice(min_max_index_sorted[i],\
    \ 1);\n    }\n    var lst_length = lst.length;\n    for (var i = 0; i < lst_length;\
    \ i++) {\n        result.push(lst", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_sorted_strange = [];\n    var lst_sorted_strange_even =\
    \ [];\n    var lst_sorted_strange_odd = [];\n    for (var i = 0; i < lst_sorted.length;\
    \ i++){\n        if (i % 2 == 0){\n            lst_sorted_strange_even.push(lst_sorted[i]);\n\
    \        }\n        else{\n            lst_sorted_strange_odd.push(lst_sorted[i]);\n\
    \        }\n    }\n    lst_sorted_strange_odd.reverse();\n    lst_sorted_strange\
    \ = lst_sorted_strange_even.concat(lst_sorted_strange_odd);\n    return lst_sorted_strange;\n\
    }", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n\
    \    var lst_strange = [];\n    var lst_strange_max = [];\n    var lst_strange_min\
    \ = [];\n    for (var i = 0; i < lst_sorted.length; i++){\n        if (i % 2 ==\
    \ 0){\n            lst_strange_min.push(lst_sorted[i]);\n        }\n        else{\n\
    \            lst_strange_max.push(lst_sorted[i]);\n        }\n    }\n    lst_strange_max.reverse();\n\
    \    lst_strange = lst_strange_min.concat(lst_strange_max);\n    return lst_strange;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n      \
    \  result.push(sorted[i]);\n        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    let new_list\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let index = lst.indexOf(min);\n    new_list.push(min);\n    lst.splice(index,\
    \ 1);\n    while(lst.length > 0){\n        let min = Math.min(...lst);\n     \
    \   let max = Math.max(...lst);\n        let index = lst.indexOf(max);\n     \
    \   new_list.push(max);\n        lst.splice(index, 1);\n        if(lst.length\
    \ > 0){\n            let min = Math.min(...lst);\n            let max = Math.max(...lst);\n\
    \            let index = lst.indexOf(min);\n            new_list.push(min);\n\
    \            lst.splice(index, 1);\n        }\n    }\n    return new_list;\n}\n",
  "    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_removed = lst.splice(min_index, 1);\n    let max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  while (lst.length > 0){\n        let min = Math.min(...lst);\n        let max\
    \ = Math.max(...lst);\n        let min_index = lst.indexOf(min);\n        let\
    \ max_index = lst.indexOf(max);\n        let min_removed = lst.splice(min_index,\
    \ 1);\n        let max_removed = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n\
    \        result.push(min_removed[0]);\n    }\n    return result;\n}", "    var\
    \ result = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 === 0){\n\
    \            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min.apply(null, lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return result;\n}", "    var result\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    result.push(min);\n\
    \    result.push(max);\n    while(lst.length > 0){\n        min = Math.min.apply(null,\
    \ lst);\n        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        lst.splice(min_index, 1);\n  \
    \      lst.splice(max_index, 1);\n        result.push(max);\n        result.push(min);\n\
    \    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while (lst.length\
    \ > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n   \
    \     }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var new_lst = [];\n    var max_val = Math.max.apply(null,\
    \ lst);\n    var min_val = Math.min.apply(null, lst);\n    var max_index = lst.indexOf(max_val);\n\
    \    var min_index = lst.indexOf(min_val);\n    var i = 0;\n    while (i < lst.length){\n\
    \        new_lst.push(min_val);\n        new_lst.push(max_val);\n        lst.splice(max_index,\
    \ 1);\n        lst.splice(min_index, 1);\n        max_val = Math.max.apply(null,\
    \ lst);\n        min_val = Math.min.apply(null, lst);\n        max_index = lst.indexOf(max_val);\n\
    \        min_index = lst.indexOf(min_val);\n        i += 2;\n    }\n    return\
    \ new_lst;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n   \
    \ var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }", "    var new_lst = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length\
    \ > 0){\n        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return new_lst;\n}",
  "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var result = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var lst_copy = lst.slice();\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index\
    \ - 1, 1);\n    result.push(min);\n    result.push(max);\n    while (lst_copy.length\
    \ > 0){\n        var min = Math.min.apply(null, lst_copy);\n        var max =\
    \ Math.max.apply(null, lst_copy);\n        var min_index = lst_copy.indexOf(min);\n\
    \        var max_index = lst_copy.indexOf(max);\n        result.push(min);\n \
    \       result.push(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index\
    \ - 1, 1);\n    }\n    return result;\n}\n", "    if(lst.length === 0) return\
    \ [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n\
    }\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_sorted_reverse\
    \ = lst_sorted.reverse();\n    var lst_sorted_final = [];\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (i % 2 == 0){\n            lst_sorted_final.push(lst_sorted[i/2]);\n\
    \        }\n        else{\n            lst_sorted_final.push(lst_sorted_reverse[(i-1)/2]);\n\
    \        }\n    }\n    return lst_sorted_final;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let min_removed = lst.splice(min_index, 1);\n\
    \    let max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    for (let i = 0; i < lst.length; i++) {\n\
    \        let min = Math.min(...lst);\n        let max = Math.max(...lst);\n  \
    \      let min_index = lst.indexOf(min);\n        let max_index = lst.indexOf(max);\n\
    \        let min_removed = lst.splice(min_index, 1);\n        let max_removed\
    \ = lst.splice(max_index, 1);\n        result.push(min_removed[0]);\n        result.push(max_removed[0]);\n\
    \    }\n    return result;\n}", "    let sorted = lst.sort((a,b) => a-b);\n  \
    \  let result = [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n\
    \        result.push(sorted.pop());\n    }\n    return result;\n}", "    var new_lst\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var index = lst.indexOf(min);\n    lst.splice(index, 1);\n    new_lst.push(min);\n\
    \    while(lst.length > 0){\n        var min = Math.min.apply(null, lst);\n  \
    \      var max = Math.max.apply(null, lst);\n        var index = lst.indexOf(max);\n\
    \        lst.splice(index, 1);\n        new_lst.push(max);\n        if(lst.length\
    \ > 0){\n            var min = Math.min.apply(null, lst);\n            var max\
    \ = Math.max.apply(null, lst);\n            var index = lst.indexOf(min);\n  \
    \          lst.splice(index, 1);\n            new_lst.push(min);\n        }\n\
    \    }\n    return new_lst;\n}", "    let sorted = lst.sort((a,b) => a-b);\n \
    \   let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i\
    \ <= j){\n        result.push(sorted[i]);\n        i++;\n        if(i <= j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while (lst.length > 0){\n        if\
    \ (i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i <= j){\n    \
    \    result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}", "    var\
    \ new_lst = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var i = 0;\n    while (i < lst.length){\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(lst.indexOf(min), 1);\n      \
    \  lst.splice(lst.indexOf(max), 1);\n        min = Math.min.apply(null, lst);\n\
    \        max = Math.max.apply(null, lst);\n        i += 2;\n    }\n    return\
    \ new_lst;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n   \
    \ var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n  \
    \  var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    for(var i = 0; i < sorted.length; i++){\n\
    \        if(i % 2 === 0){\n            result.push(sorted[i]);\n        }else{\n\
    \            result.unshift(sorted[i]);\n        }\n    }\n    return result;\n\
    }", "    let sorted = lst.sort((a,b) => a-b);\n    let result = [];\n    let i\
    \ = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var min = 0;\n    var max = sorted.length-1;\n\
    \    while(min<=max){\n        result.push(sorted[min]);\n        min++;\n   \
    \     if(min<=max){\n            result.push(sorted[max]);\n            max--;\n\
    \        }\n    }\n    return result;\n}", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    for(var i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 === 0){\n            new_lst.push(min);\n            min = Math.min(...lst.filter(x\
    \ => x > min));\n        }\n        else{\n            new_lst.push(max);\n  \
    \          max = Math.max(...lst.filter(x => x < max));\n        }\n    }\n  \
    \  return new_lst;\n}", "    var lst_copy = lst.slice();\n    var result = [];\n\
    \    var min = Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null,\
    \ lst_copy);\n    var min_index = lst_copy.indexOf(min);\n    var max_index =\
    \ lst_copy.indexOf(max);\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index,\
    \ 1);\n    result.push(min);\n    result.push(max);\n    while (lst_copy.length\
    \ > 0){\n        min = Math.min.apply(null, lst_copy);\n        max = Math.max.apply(null,\
    \ lst_copy);\n        min_index = lst_copy.indexOf(min);\n        max_index =\
    \ lst_copy.indexOf(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index,\
    \ 1);\n        result.push(max);\n        result.push(min);\n    }\n    return\
    \ result;\n}", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    while(lst.length > 0){\n        result.push(min);\n\
    \        lst.splice(lst.indexOf(min), 1);\n        result.push(max);\n       \
    \ lst.splice(lst.indexOf(max), 1);\n        min = Math.min(...lst);\n        max\
    \ = Math.max(...lst);\n    }\n    return result;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_70_strange_sort_list
language: js
prompt: "//Given list of integers, return list in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\nfunction strange_sort_list(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strange_sort_list;\n  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 4, 2, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9, 6, 8, 7]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1,\
  \ 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5, 5, 5, 5]),[5, 5, 5, 5]);\n\
  \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0, 2, 2,\
  \ 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n\
    \        if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    var result = [];\n    var max = Math.max.apply(null, lst);\n    var\
    \ min = Math.min.apply(null, lst);\n    var max_index = lst.indexOf(max);\n  \
    \  var min_index = lst.indexOf(min);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    var min_removed = lst.splice(min_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    while(lst.length > 0){\n        var max\
    \ = Math.max.apply(null, lst);\n        var min = Math.min.apply(null, lst);\n\
    \        var max_index = lst.indexOf(max);\n        var min_index = lst.indexOf(min);\n\
    \        var max_removed = lst.splice(max_index, 1);\n        var min_removed\
    \ = lst.splice(min_index, 1);\n        result.push(min_removed[0]);\n        result.push(max_removed[0]);\n\
    \    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var res = [];\n    var lst_copy = lst.slice();\n\
    \    var min = Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null,\
    \ lst_copy);\n    var min_idx = lst_copy.indexOf(min);\n    var max_idx = lst_copy.indexOf(max);\n\
    \    lst_copy.splice(min_idx, 1);\n    lst_copy.splice(max_idx, 1);\n    res.push(min);\n\
    \    res.push(max);\n    while(lst_copy.length > 0){\n        min = Math.min.apply(null,\
    \ lst_copy);\n        max = Math.max.apply(null, lst_copy);\n        min_idx =\
    \ lst_copy.indexOf(min);\n        max_idx = lst_copy.indexOf(max);\n        lst_copy.splice(min_idx,\
    \ 1);\n        lst_copy.splice(max_idx, 1);\n        res.push(min);\n        res.push(max);\n\
    \    }\n    return res;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_strange =\
    \ [];\n    var lst_min = lst_sorted.slice(0,lst_sorted.length/2);\n    var lst_max\
    \ = lst_sorted.slice(lst_sorted.length/2,lst_sorted.length);\n    for (var i =\
    \ 0; i < lst_min.length; i++){\n        lst_strange.push(lst_min[i]);\n      \
    \  lst_strange.push(lst_max[lst_max.length-1-i]);\n    }\n    if (lst_max.length\
    \ > lst_min.length){\n        lst_strange.push(lst_max[lst_max.length-1-i]);\n\
    \    }\n    return lst_strange;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    while(lst.length > 0){\n        min = Math.min.apply(null,\
    \ lst);\n        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        min_removed = lst.splice(min_index,\
    \ 1);\n        max_removed = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n\
    \        result.push(min_removed[0]);\n    }\n    return result;\n}\n", "    lst.sort(function(a,b){return\
    \ a-b});\n    var res = [];\n    var i = 0;\n    var j = lst.length-1;\n    while(i<=j){\n\
    \        res.push(lst[i]);\n        i++;\n        if(i<=j){\n            res.push(lst[j]);\n\
    \            j--;\n        }\n    }\n    return res;\n}\n", "    var result =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    result.push(min);\n\
    \    result.push(max);\n    while(lst.length > 0){\n        min = Math.min.apply(null,\
    \ lst);\n        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        lst.splice(min_index, 1);\n  \
    \      lst.splice(max_index, 1);\n        result.push(max);\n        result.push(min);\n\
    \    }\n    return result;\n}\n", "    var lst_copy = lst.slice();\n    var result\
    \ = [];\n    while(lst_copy.length > 0){\n        result.push(Math.min.apply(null,\
    \ lst_copy));\n        lst_copy.splice(lst_copy.indexOf(Math.min.apply(null, lst_copy)),\
    \ 1);\n        if(lst_copy.length > 0){\n            result.push(Math.max.apply(null,\
    \ lst_copy));\n            lst_copy.splice(lst_copy.indexOf(Math.max.apply(null,\
    \ lst_copy)), 1);\n        }\n    }\n    return result;\n}\n", "    var lst =\
    \ lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = lst.length-1;\n    while(i<=j){\n        result.push(lst[i]);\n \
    \       if(i!=j){\n            result.push(lst[j]);\n        }\n        i++;\n\
    \        j--;\n    }\n    return result;\n}\n", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_strange = [];\n    var lst_strange_1 = [];\n    var lst_strange_2\
    \ = [];\n    for (var i = 0; i < lst_sorted.length; i++){\n        if (i % 2 ==\
    \ 0){\n            lst_strange_1.push(lst_sorted[i]);\n        }\n        else{\n\
    \            lst_strange_2.push(lst_sorted[i]);\n        }\n    }\n    lst_strange_2.reverse();\n\
    \    lst_strange = lst_strange_1.concat(lst_strange_2);\n    return lst_strange;\n\
    }\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_strange\
    \ = [];\n    var i = 0;\n    var j = lst_sorted.length-1;\n    while(i<=j){\n\
    \        if(i==j){\n            lst_strange.push(lst_sorted[i]);\n           \
    \ break;\n        }\n        lst_strange.push(lst_sorted[i]);\n        lst_strange.push(lst_sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    return lst_strange;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i <= j){\n        result.push(sorted[i]);\n        if(i != j){\n  \
    \          result.push(sorted[j]);\n        }\n        i++;\n        j--;\n  \
    \  }\n    return result;\n}\n", "  var sorted = [];\n  var min = Math.min.apply(null,\
    \ lst);\n  var max = Math.max.apply(null, lst);\n  var min_index = lst.indexOf(min);\n\
    \  var max_index = lst.indexOf(max);\n  var new_lst = lst.slice(0);\n  new_lst.splice(min_index,\
    \ 1);\n  new_lst.splice(max_index, 1);\n  sorted.push(min);\n  sorted.push(max);\n\
    \  while (new_lst.length > 0){\n    min = Math.min.apply(null, new_lst);\n   \
    \ max = Math.max.apply(null, new_lst);\n    min_index = new_lst.indexOf(min);\n\
    \    max_index = new_lst.indexOf(max);\n    new_lst.splice(min_index, 1);\n  \
    \  new_lst.splice(max_index, 1);\n    sorted.push(min);\n    sorted.push(max);\n\
    \  }\n  return sorted;\n}\n", "    var sorted = [];\n    var sorted_lst = lst.sort(function(a,b){return\
    \ a-b});\n    var min = sorted_lst[0];\n    var max = sorted_lst[sorted_lst.length-1];\n\
    \    var i = 1;\n    var j = sorted_lst.length-2;\n    while(sorted.length < sorted_lst.length){\n\
    \        if(i < j){\n            sorted.push(min);\n            sorted.push(max);\n\
    \            min = sorted_lst[i];\n            max = sorted_lst[j];\n        \
    \    i++;\n            j--;\n        }\n        else{\n            sorted.push(min);\n\
    \            break;\n        }\n    }\n    return sorted;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    while(sorted.length > 0){\n        result.push(sorted.shift());\n       \
    \ if(sorted.length > 0){\n            result.push(sorted.pop());\n        }\n\
    \    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n      \
    \  result.push(sorted[i]);\n        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "  var lst_copy = lst.slice();\n\
    \  var min_idx = 0;\n  var max_idx = 0;\n  var result = [];\n  for (var i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < lst[min_idx]) {\n      min_idx = i;\n\
    \    }\n    if (lst[i] > lst[max_idx]) {\n      max_idx = i;\n    }\n  }\n  result.push(lst[min_idx]);\n\
    \  lst_copy.splice(min_idx, 1);\n  result.push(lst[max_idx]);\n  lst_copy.splice(max_idx\
    \ - 1, 1);\n  for (var i = 0; i < lst_copy.length; i++) {\n    if (i % 2 === 0)\
    \ {\n      min_idx = 0;\n      for (var j = 0; j < lst_copy.length; j++) {\n \
    \       if (lst_copy[j] < lst_copy[min_idx]) {\n          min_idx = j;\n     \
    \   }\n      }\n      result.push(lst_copy[min_idx]);\n      lst_copy.splice(min_idx,\
    \ 1);\n    } else {\n      max_idx = 0;\n      for (var j = 0; j < lst_copy.length;\
    \ j++) {\n        if (lst_copy[j] > lst_copy[max_idx]) {\n          max_idx =\
    \ j;\n        }\n      }\n      result.push(lst_copy[max_idx]);\n      lst_copy.splice(max_idx,\
    \ 1);\n    }\n  }\n  return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var new_lst = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n\
    \        }\n        else {\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n    }\n    return new_lst;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    while(sorted.length > 0){\n        if(i % 2 == 0){\n\
    \            result.push(sorted.shift());\n        }\n        else{\n        \
    \    result.push(sorted.pop());\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let sorted = lst.sort((a,b) => a-b);\n    let\
    \ min = sorted.shift();\n    let max = sorted.pop();\n    while(sorted.length\
    \ > 0){\n        result.push(min);\n        result.push(max);\n        min = sorted.shift();\n\
    \        max = sorted.pop();\n    }\n    if(min){\n        result.push(min);\n\
    \    }\n    if(max){\n        result.push(max);\n    }\n    return result;\n}\n",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   var i = 0;\n    while(sorted.length > 0){\n        if(i%2 == 0){\n       \
    \     result.push(sorted.shift());\n        }\n        else{\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    sorted.push(min);\n    index = lst.indexOf(max);\n\
    \    lst.splice(index, 1);\n    sorted.push(max);\n    while(lst.length > 0){\n\
    \        min = Math.min.apply(null, lst);\n        index = lst.indexOf(min);\n\
    \        lst.splice(index, 1);\n        sorted.push(min);\n        max = Math.max.apply(null,\
    \ lst);\n        index = lst.indexOf(max);\n        lst.splice(index, 1);\n  \
    \      sorted.push(max);\n    }\n    return sorted;\n}\n", "    var lst_sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange = [];\n \
    \   var lst_sorted_strange_min = [];\n    var lst_sorted_strange_max = [];\n \
    \   for (var i = 0; i < lst_sorted.length; i++){\n        if (i % 2 == 0){\n \
    \           lst_sorted_strange_min.push(lst_sorted[i]);\n        }\n        else{\n\
    \            lst_sorted_strange_max.push(lst_sorted[i]);\n        }\n    }\n \
    \   lst_sorted_strange_max.reverse();\n    lst_sorted_strange = lst_sorted_strange_min.concat(lst_sorted_strange_max);\n\
    \    return lst_sorted_strange;\n}\n", "    var lst_copy = lst.slice();\n    var\
    \ sorted_list = [];\n    while(lst_copy.length > 0){\n        var min = Math.min.apply(null,\
    \ lst_copy);\n        var max = Math.max.apply(null, lst_copy);\n        sorted_list.push(min);\n\
    \        sorted_list.push(max);\n        lst_copy.splice(lst_copy.indexOf(min),\
    \ 1);\n        lst_copy.splice(lst_copy.indexOf(max), 1);\n    }\n    return sorted_list;\n\
    }\n", "    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_max = [min, max];\n    let min_max_index = [min_index, max_index];\n\
    \    let min_max_index_sorted = min_max_index.sort((a, b) => a - b);\n    let\
    \ min_max_sorted = min_max_index_sorted.map(i => min_max[i]);\n    let lst_sorted\
    \ = lst.sort((a, b) => a - b);\n    let lst_sorted_without_min_max = lst_sorted.filter(i\
    \ => i !== min && i !== max);\n    let lst_sorted_without_min_max_reversed = lst_sorted_without_min_max.reverse();\n\
    \    let lst_sorted_without_min_max_reversed_with_min_max = [...min_max_sorted,\
    \ ...lst_sorted_without_min_max_reversed];\n    let lst_sorted_without_min_max_reversed_with_min_max_reversed\
    \ = lst_sorted_without_min_max_reversed_with_min_max.reverse();\n    let lst_sorted_without_min_max_reversed_with_min_max_reversed_without_min_max\
    \ = lst_sorted_without_min_max_reversed_with_min_max_reversed.filter(i => i !==\
    \ min && i !== max);\n    let lst_sorted_without_min_max_reversed_with_min_max_reversed_without_min_max_with_min_max\
    \ = [...min_max_sorted, ...lst_sorted_without_min_max_reversed_with_min_max_reversed_without_min_max];\n\
    \    let lst_sorted_", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_strange\
    \ = [];\n    var i = 0;\n    var j = lst_sorted.length-1;\n    while(i<=j){\n\
    \        lst_strange.push(lst_sorted[i]);\n        if(i!=j){\n            lst_strange.push(lst_sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return lst_strange;\n}\n",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   var i = 0;\n    while(sorted.length > 0){\n        if(i%2 == 0){\n       \
    \     result.push(sorted.shift());\n        }\n        else{\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var min = 0;\n    var max = sorted.length-1;\n\
    \    var i = 0;\n    while(min<=max){\n        if(i%2==0){\n            result.push(sorted[min]);\n\
    \            min++;\n        }\n        else{\n            result.push(sorted[max]);\n\
    \            max--;\n        }\n        i++;\n    }\n    return result;\n}\n",
  "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    while(i < lst.length){\n        if(i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var sorted =\
    \ lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n      \
    \  result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result\
    \ = [];\n    var i = 0;\n    while(i < lst.length){\n        if(i % 2 == 0){\n\
    \            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    let sorted = lst.sort((a,b) => a-b);\n    let left = 0;\n    let right =\
    \ sorted.length - 1;\n    while(left <= right){\n        result.push(sorted[left]);\n\
    \        if(left !== right){\n            result.push(sorted[right]);\n      \
    \  }\n        left++;\n        right--;\n    }\n    return result;\n}\n", "  \
    \  var result = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  if (lst.length > 0) {\n        result = result.concat(strange_sort_list(lst));\n\
    \    }\n    return result;\n}\n", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_sorted_strange = [];\n    var lst_sorted_strange_len = 0;\n\
    \    var lst_sorted_len = lst_sorted.length;\n    var lst_sorted_strange_len_half\
    \ = Math.floor(lst_sorted_len/2);\n    var lst_sorted_strange_len_half_plus =\
    \ Math.ceil(lst_sorted_len/2);\n    var lst_sorted_strange_len_half_minus = Math.floor(lst_sorted_len/2);\n\
    \    var lst_sorted_strange_len_half_plus_minus = Math.ceil(lst_sorted_len/2);\n\
    \    if (lst_sorted_len % 2 == 0){\n        for (var i = 0; i < lst_sorted_strange_len_half;\
    \ i++){\n            lst_sorted_strange.push(lst_sorted[i]);\n            lst_sorted_strange.push(lst_sorted[lst_sorted_len\
    \ - 1 - i]);\n        }\n    }\n    else{\n        for (var i = 0; i < lst_sorted_strange_len_half_plus;\
    \ i++){\n            lst_sorted_strange.push(lst_sorted[i]);\n            lst_sorted_strange.push(lst_sorted[lst_sorted_len\
    \ - 1 - i]);\n        }\n        lst_sorted_strange.push(lst_sorted[lst_sorted_strange_len_half_plus]);\n\
    \    }\n    return lst_sorted_strange;\n}\n", "    var lst_copy = lst.slice();\n\
    \    var sorted_list = [];\n    while(lst_copy.length > 0){\n        var min =\
    \ Math.min.apply(null, lst_copy);\n        var max = Math.max.apply(null, lst_copy);\n\
    \        sorted_list.push(min);\n        sorted_list.push(max);\n        lst_copy.splice(lst_copy.indexOf(min),\
    \ 1);\n        lst_copy.splice(lst_copy.indexOf(max), 1);\n    }\n    return sorted_list;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ res = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n\
    \            res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n  \
    \          min = Math.min(...lst);\n        }\n        else{\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    let sorted = lst.sort((a,b)\
    \ => a-b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length -\
    \ 1;\n    while(i <= j){\n        result.push(sorted[i]);\n        if(i !== j){\n\
    \            result.push(sorted[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return result;\n}\n", "    var new_lst = [];\n    var lst_copy = lst.slice();\n\
    \    var min = Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null,\
    \ lst_copy);\n    while (lst_copy.length > 0){\n        new_lst.push(min);\n \
    \       lst_copy.splice(lst_copy.indexOf(min), 1);\n        if (lst_copy.length\
    \ > 0){\n            new_lst.push(max);\n            lst_copy.splice(lst_copy.indexOf(max),\
    \ 1);\n            min = Math.min.apply(null, lst_copy);\n            max = Math.max.apply(null,\
    \ lst_copy);\n        }\n    }\n    return new_lst;\n}\n", "    var result = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  while(lst.length > 0){\n        var min = Math.min.apply(null, lst);\n    \
    \    var max = Math.max.apply(null, lst);\n        var min_index = lst.indexOf(min);\n\
    \        var max_index = lst.indexOf(max);\n        var min_removed = lst.splice(min_index,\
    \ 1);\n        var max_removed = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n\
    \        result.push(min_removed[0]);\n    }\n    return result;\n}\n", "    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    while (lst.length > 0){\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        new_lst.push(max);\n        lst.splice(lst.indexOf(max), 1);\n\
    \        min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n   \
    \ return new_lst;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    sorted.push(min_removed[0]);\n\
    \    sorted.push(max_removed[0]);\n    while(lst.length > 0){\n        min = Math.min.apply(null,\
    \ lst);\n        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        min_removed = lst.splice(min_index,\
    \ 1);\n        max_removed = lst.splice(max_index, 1);\n        sorted.push(min_removed[0]);\n\
    \        sorted.push(max_removed[0]);\n    }\n    return sorted;\n}\n", "    var\
    \ new_list = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n\
    \            new_list.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min.apply(null, lst);\n        }\n        else {\n   \
    \         new_list.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_list;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    while(lst.length > 0){\n        min = Math.min.apply(null,\
    \ lst);\n        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        min_removed = lst.splice(min_index,\
    \ 1);\n        max_removed = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n\
    \        result.push(min_removed[0]);\n    }\n    return result;\n}\n", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<j){\n        result.push(sorted[i]);\n\
    \        result.push(sorted[j]);\n        i++;\n        j--;\n    }\n    if(i==j){\n\
    \        result.push(sorted[i]);\n    }\n    return result;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <=\
    \ j){\n        result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}", "    let\
    \ res = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_max = [min, max];\n    let min_max_index = [min_index, max_index];\n\
    \    let lst_copy = lst.slice();\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index-1,\
    \ 1);\n    while (lst_copy.length > 0){\n        min = Math.min(...lst_copy);\n\
    \        max = Math.max(...lst_copy);\n        min_index = lst_copy.indexOf(min);\n\
    \        max_index = lst_copy.indexOf(max);\n        min_max.push(min);\n    \
    \    min_max.push(max);\n        min_max_index.push(min_index);\n        min_max_index.push(max_index);\n\
    \        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index-1,\
    \ 1);\n    }\n    for (let i = 0; i < min_max.length; i++){\n        res.push(min_max[i]);\n\
    \    }\n    return res;\n}\n", "    var lst_sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var lst_sorted_strange = [];\n    var i = 0;\n    while(lst_sorted.length\
    \ > 0){\n        if(i%2 == 0){\n            lst_sorted_strange.push(lst_sorted.shift());\n\
    \        }\n        else{\n            lst_sorted_strange.push(lst_sorted.pop());\n\
    \        }\n        i++;\n    }\n    return lst_sorted_strange;\n}\n", "  var\
    \ result = [];\n  var max = Math.max.apply(null, lst);\n  var min = Math.min.apply(null,\
    \ lst);\n  var max_index = lst.indexOf(max);\n  var min_index = lst.indexOf(min);\n\
    \  var max_removed = lst.splice(max_index, 1);\n  var min_removed = lst.splice(min_index,\
    \ 1);\n  result.push(min_removed[0]);\n  result.push(max_removed[0]);\n  while\
    \ (lst.length > 0) {\n    max = Math.max.apply(null, lst);\n    min = Math.min.apply(null,\
    \ lst);\n    max_index = lst.indexOf(max);\n    min_index = lst.indexOf(min);\n\
    \    max_removed = lst.splice(max_index, 1);\n    min_removed = lst.splice(min_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  }\n\
    \  return result;\n}\n", "    var sorted = lst.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(result.length < lst.length){\n\
    \        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n      \
    \  result.push(sorted[i]);\n        if(i!=j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result\
    \ = [];\n    while(lst.length > 0){\n        result.push(min);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        if(lst.length > 0){\n            result.push(max);\n          \
    \  lst.splice(lst.indexOf(max), 1);\n        }\n        min = Math.min(...lst);\n\
    \        max = Math.max(...lst);\n    }\n    return result;\n}\n", "    var sorted_list\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var index = lst.indexOf(min);\n    lst.splice(index, 1);\n    sorted_list.push(min);\n\
    \    while(lst.length > 0){\n        var min = Math.min.apply(null, lst);\n  \
    \      var max = Math.max.apply(null, lst);\n        var index = lst.indexOf(max);\n\
    \        lst.splice(index, 1);\n        sorted_list.push(max);\n        if(lst.length\
    \ > 0){\n            var index = lst.indexOf(min);\n            lst.splice(index,\
    \ 1);\n            sorted_list.push(min);\n        }\n    }\n    return sorted_list;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n\
    \        if(sorted.length > 0){\n            result.push(sorted.pop());\n    \
    \    }\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n  \
    \  var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i%2 == 0){\n            new_lst.push(min);\n    \
    \        lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    sorted.push(min);\n    sorted.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    while(lst.length\
    \ > 0){\n        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        sorted.push(min);\n        sorted.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index, 1);\n    }\n    return sorted;\n}\n", " \
    \   var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var res = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    res.push(min_removed);\n\
    \    res.push(max_removed);\n    return res;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n\
    \    var lst_result = [];\n    var lst_min = [];\n    var lst_max = [];\n    while(lst_sorted.length\
    \ > 0){\n        lst_min.push(lst_sorted.shift());\n        lst_max.push(lst_sorted.pop());\n\
    \    }\n    while(lst_min.length > 0){\n        lst_result.push(lst_min.shift());\n\
    \        lst_result.push(lst_max.shift());\n    }\n    return lst_result;\n}\n",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   var i = 0;\n    while(sorted.length > 0){\n        if(i%2 == 0){\n       \
    \     result.push(sorted.shift());\n        }else{\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var res = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var i = 0;\n    while(i < lst.length){\n        if(i % 2 == 0){\n       \
    \     res.push(min);\n            lst.splice(min_index, 1);\n            min =\
    \ Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n    \
    \    }\n        else{\n            res.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2 ==\
    \ 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n    }\n    return new_lst;\n}\n",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   while(sorted.length > 0){\n        result.push(sorted.pop());\n        result.push(sorted.shift());\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let min_flag = true;\n    let max_flag =\
    \ true;\n    while(lst.length > 0){\n        if(min_flag){\n            result.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min(...lst);\n\
    \            min_index = lst.indexOf(min);\n            min_flag = false;\n  \
    \          max_flag = true;\n        }\n        if(max_flag){\n            result.push(max);\n\
    \            lst.splice(max_index, 1);\n            max = Math.max(...lst);\n\
    \            max_index = lst.indexOf(max);\n            max_flag = false;\n  \
    \          min_flag = true;\n        }\n    }\n    return result;\n}\n", "   \
    \ var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result\
    \ = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n\
    \            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    sorted.push(min);\n    sorted.push(max);\n    while(lst.length > 0){\n\
    \        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n      \
    \  sorted.push(min);\n        sorted.push(max);\n    }\n    return sorted;\n}\n",
  "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange\
    \ = [];\n    var lst_sorted_strange_reverse = [];\n    var lst_sorted_strange_final\
    \ = [];\n    for (var i = 0; i < lst_sorted.length; i++){\n        if (i % 2 ==\
    \ 0){\n            lst_sorted_strange.push(lst_sorted[i]);\n        }\n      \
    \  else{\n            lst_sorted_strange_reverse.push(lst_sorted[i]);\n      \
    \  }\n    }\n    lst_sorted_strange_reverse.reverse();\n    for (var i = 0; i\
    \ < lst_sorted_strange.length; i++){\n        lst_sorted_strange_final.push(lst_sorted_strange[i]);\n\
    \        lst_sorted_strange_final.push(lst_sorted_strange_reverse[i]);\n    }\n\
    \    return lst_sorted_strange_final;\n}\n", "    var res = [];\n    var min =\
    \ Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ min_max = [min, max];\n    var max_min = [max, min];\n    var min_max_index\
    \ = [min_index, max_index];\n    var max_min_index = [max_index, min_index];\n\
    \    var min_max_index_sorted = min_max_index.sort();\n    var max_min_index_sorted\
    \ = max_min_index.sort();\n    var min_max_sorted = min_max.sort();\n    var max_min_sorted\
    \ = max_min.sort();\n    var min_max_index_sorted_reverse = min_max_index_sorted.reverse();\n\
    \    var max_min_index_sorted_reverse = max_min_index_sorted.reverse();\n    var\
    \ min_max_sorted_reverse = min_max_sorted.reverse();\n    var max_min_sorted_reverse\
    \ = max_min_sorted.reverse();\n    var lst_sorted = lst.sort();\n    var lst_sorted_reverse\
    \ = lst_sorted.reverse();\n    var lst_sorted_reverse_min_max = lst_sorted_reverse.splice(min_max_index_sorted_reverse[0],\
    \ 2, min_max_sorted_reverse[0], min_max_sorted_reverse[1]);\n    var lst_sorted_reverse_max_min\
    \ = lst_sorted_reverse_min_max.splice(max_min_index_sorted_reverse[0], 2, max_min_sorted_reverse[0],\
    \ max_min_sorted_reverse[1]);\n    var lst_sorted_reverse_max_min_min_max = lst_sorted_reverse_max_min.splice(min_max_index_sorted[0],\
    \ 2, min_max_sorted[0], min", "    let sorted = lst.sort((a,b) => a-b);\n    let\
    \ result = [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n\
    \        result.push(sorted.pop());\n    }\n    return result;\n}\n", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ start = 0;\n    var end = sorted.length-1;\n    while(start<=end){\n       \
    \ result.push(sorted[start]);\n        if(start!=end){\n            result.push(sorted[end]);\n\
    \        }\n        start++;\n        end--;\n    }\n    return result;\n}\n",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   var i = 0;\n    while(sorted.length > 0){\n        if(i%2 == 0){\n       \
    \     result.push(sorted.shift());\n        }else{\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<j){\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if(i==j){\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    while(lst.length > 0){\n        var min\
    \ = Math.min.apply(null, lst);\n        var max = Math.max.apply(null, lst);\n\
    \        var min_index = lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n\
    \        var min_removed = lst.splice(min_index, 1);\n        var max_removed\
    \ = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n        result.push(min_removed[0]);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.splice(min_index,\
    \ 1);\n    var max_removed = lst.splice(max_index, 1);\n    result.push(min_removed[0]);\n\
    \    result.push(max_removed[0]);\n    while(lst.length > 0){\n        var min\
    \ = Math.min.apply(null, lst);\n        var max = Math.max.apply(null, lst);\n\
    \        var min_index = lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n\
    \        var min_removed = lst.splice(min_index, 1);\n        var max_removed\
    \ = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n        result.push(min_removed[0]);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let sorted = lst.sort((a,b)\
    \ => a-b);\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n\
    \        if(i === j){\n            result.push(sorted[i]);\n            break;\n\
    \        }\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    return result;\n}", "    var result =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = Math.min(min_index, max_index);\n    var max_min = Math.max(min_index,\
    \ max_index);\n    var min_max_lst = lst.slice(min_max, max_min + 1);\n    var\
    \ max_min_lst = lst.slice(max_min + 1).concat(lst.slice(0, min_max));\n    var\
    \ min_max_lst_sorted = min_max_lst.sort(function(a, b){return a - b});\n    var\
    \ max_min_lst_sorted = max_min_lst.sort(function(a, b){return a - b});\n    var\
    \ min_max_lst_sorted_reversed = min_max_lst_sorted.reverse();\n    var max_min_lst_sorted_reversed\
    \ = max_min_lst_sorted.reverse();\n    var min_max_lst_sorted_reversed_odd = min_max_lst_sorted_reversed.filter(function(item,\
    \ index){\n        return index % 2 === 0;\n    });\n    var max_min_lst_sorted_reversed_odd\
    \ = max_min_lst_sorted_reversed.filter(function(item, index){\n        return\
    \ index % 2 === 0;\n    });\n    var min_max_lst_sorted_reversed_even = min_max_lst_sorted_reversed.filter(function(item,\
    \ index){\n        return index % 2 !== 0;\n    });\n    var max_min_lst_sorted_reversed_even\
    \ = max_min_lst_sorted_reversed.filter(function(item, index){\n        return\
    \ index % 2 !== 0;\n    });\n    var min_max_l", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_strange\
    \ = [];\n    var i = 0;\n    while(lst_sorted.length > 0){\n        if(i%2 ==\
    \ 0){\n            lst_strange.push(lst_sorted.shift());\n        }\n        else{\n\
    \            lst_strange.push(lst_sorted.pop());\n        }\n        i++;\n  \
    \  }\n    return lst_strange;\n}\n", "    var sorted = lst.sort(function(a,b){\n\
    \        return a-b;\n    });\n    var result = [];\n    var i = 0;\n    var j\
    \ = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n    \
    \    i++;\n        if(i<=j){\n            result.push(sorted[j]);\n          \
    \  j--;\n        }\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    sorted.push(min);\n    index = lst.indexOf(max);\n\
    \    lst.splice(index, 1);\n    sorted.push(max);\n    while(lst.length > 0){\n\
    \        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        index = lst.indexOf(min);\n        lst.splice(index, 1);\n  \
    \      sorted.push(min);\n        index = lst.indexOf(max);\n        lst.splice(index,\
    \ 1);\n        sorted.push(max);\n    }\n    return sorted;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var min =\
    \ 0;\n    var max = sorted.length-1;\n    while(min<=max){\n        result.push(sorted[min]);\n\
    \        min++;\n        if(min<=max){\n            result.push(sorted[max]);\n\
    \            max--;\n        }\n    }\n    return result;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n\
    \        if(i % 2 === 0){\n            result.push(sorted.shift());\n        }\n\
    \        else{\n            result.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "  var sorted = [];\n  var min = Math.min.apply(null,\
    \ lst);\n  var max = Math.max.apply(null, lst);\n  var min_index = lst.indexOf(min);\n\
    \  var max_index = lst.indexOf(max);\n  var min_removed = lst.splice(min_index,\
    \ 1);\n  var max_removed = lst.splice(max_index, 1);\n  sorted.push(min_removed[0]);\n\
    \  sorted.push(max_removed[0]);\n  var min = Math.min.apply(null, lst);\n  var\
    \ max = Math.max.apply(null, lst);\n  var min_index = lst.indexOf(min);\n  var\
    \ max_index = lst.indexOf(max);\n  var min_removed = lst.splice(min_index, 1);\n\
    \  var max_removed = lst.splice(max_index, 1);\n  sorted.push(min_removed[0]);\n\
    \  sorted.push(max_removed[0]);\n  var min = Math.min.apply(null, lst);\n  var\
    \ max = Math.max.apply(null, lst);\n  var min_index = lst.indexOf(min);\n  var\
    \ max_index = lst.indexOf(max);\n  var min_removed = lst.splice(min_index, 1);\n\
    \  var max_removed = lst.splice(max_index, 1);\n  sorted.push(min_removed[0]);\n\
    \  sorted.push(max_removed[0]);\n  return sorted;\n}\n", "    var lst_sorted =\
    \ lst.sort(function(a,b){return a-b});\n    var lst_strange = [];\n    var lst_length\
    \ = lst_sorted.length;\n    var lst_length_half = Math.floor(lst_length/2);\n\
    \    var lst_length_half_plus = lst_length_half + 1;\n    var lst_length_half_minus\
    \ = lst_length_half - 1;\n    var lst_length_half_minus_plus = lst_length_half_minus\
    \ + 1;\n    var lst_length_half_minus_minus = lst_length_half_minus - 1;\n   \
    \ var lst_length_half_minus_minus_plus = lst_length_half_minus_minus + 1;\n  \
    \  var lst_length_half_minus_minus_minus = lst_length_half_minus_minus - 1;\n\
    \    var lst_length_half_minus_minus_minus_plus = lst_length_half_minus_minus_minus\
    \ + 1;\n    var lst_length_half_minus_minus_minus_minus = lst_length_half_minus_minus_minus\
    \ - 1;\n    var lst_length_half_minus_minus_minus_minus_plus = lst_length_half_minus_minus_minus_minus\
    \ + 1;\n    var lst_length_half_minus_minus_minus_minus_minus = lst_length_half_minus_minus_minus_minus\
    \ - 1;\n    var lst_length_half_minus_minus_minus_minus_minus_plus = lst_length_half_minus_minus_minus_minus_minus\
    \ + 1;\n    var lst_length_half_minus_minus_minus_minus_minus_minus = lst_length_half_minus_minus_minus_minus_minus\
    \ - 1;\n    var lst_length_half_minus_minus_minus_minus_minus_minus_plus = lst_length_half_minus_minus_minus_minus_minus_minus\
    \ + 1;\n    var lst_length_half_minus_minus_minus_minus_minus_minus_minus", " \
    \   var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    while(sorted.length > 0){\n        if(i%2 == 0){\n      \
    \      result.push(sorted.shift());\n        }else{\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var result = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_count = 0;\n    var max_count = 0;\n    var min_max = true;\n   \
    \ while(min_count < lst.length){\n        if(min_max){\n            result.push(min);\n\
    \            min_count++;\n            min_max = false;\n        }\n        else{\n\
    \            result.push(max);\n            max_count++;\n            min_max\
    \ = true;\n        }\n    }\n    return result;\n}\n", "    var sorted = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = [];\n    var max_min = [];\n    var min_max_min = [];\n   \
    \ var max_min_max = [];\n    var min_max_min_max = [];\n    var max_min_max_min\
    \ = [];\n    var min_max_min_max_min = [];\n    var max_min_max_min_max = [];\n\
    \    var min_max_min_max_min_max = [];\n    var max_min_max_min_max_min = [];\n\
    \    var min_max_min_max_min_max_min = [];\n    var max_min_max_min_max_min_max\
    \ = [];\n    var min_max_min_max_min_max_min_max = [];\n    var max_min_max_min_max_min_max_min\
    \ = [];\n    var min_max_min_max_min_max_min_max_min = [];\n    var max_min_max_min_max_min_max_min_max\
    \ = [];\n    var min_max_min_max_min_max_min_max_min_max = [];\n    var max_min_max_min_max_min_max_min_max_min\
    \ = [];\n    var min_max_min_max_min_max_min_max_min_max_min = [];\n    var max_min_max_min_max_min_max_min_max_min_max\
    \ = [];\n    var min_max_min_max_min_max_min_max_min_max_min_max = [];\n    var\
    \ max_min_max_min_max_min_max_min_max_min_max_min = [];\n    var min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = [];\n    var max_min_max_min_max_min_max_min", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<j){\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if(i==j){\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    var sorted_lst = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_max_lst = lst.slice(min_index,\
    \ max_index + 1);\n    var max_min_lst = lst.slice(max_index, min_index + 1);\n\
    \    var min_max_lst_sorted = min_max_lst.sort(function(a, b){return a - b});\n\
    \    var max_min_lst_sorted = max_min_lst.sort(function(a, b){return b - a});\n\
    \    var min_max_lst_sorted_reversed = min_max_lst_sorted.reverse();\n    var\
    \ max_min_lst_sorted_reversed = max_min_lst_sorted.reverse();\n    var min_max_lst_sorted_reversed_max\
    \ = min_max_lst_sorted_reversed.pop();\n    var max_min_lst_sorted_reversed_min\
    \ = max_min_lst_sorted_reversed.shift();\n    var min_max_lst_sorted_reversed_max_min\
    \ = min_max_lst_sorted_reversed_max.concat(max_min_lst_sorted_reversed_min);\n\
    \    var max_min_lst_sorted_reversed_max_min_sorted = min_max_lst_sorted_reversed_max_min.sort(function(a,\
    \ b){return a - b});\n    var max_min_lst_sorted_reversed_max_min_sorted_reversed\
    \ = max_min_lst_sorted_reversed_max_min_sorted.reverse();\n    var max_min_lst_sorted_reversed_max_min_sorted_reversed_max\
    \ = max_min_l", "    var sorted = lst.sort(function(a,b){return a-b});\n    var\
    \ result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2\
    \ == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }", "    var result = [];\n    var max = Math.max.apply(null, lst);\n    var min\
    \ = Math.min.apply(null, lst);\n    var max_index = lst.indexOf(max);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_removed = lst.splice(max_index, 1);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed_index =\
    \ lst.indexOf(max_removed);\n    var min_removed_index = lst.indexOf(min_removed);\n\
    \    result.push(min_removed);\n    result.push(max_removed);\n    return result;\n\
    }\n", "    let sorted = lst.sort((a,b) => a-b);\n    let result = [];\n    let\
    \ i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}\n", "    var sorted = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n\
    \            sorted.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min.apply(null, lst);\n        }\n        else{\n    \
    \        sorted.push(max);\n            lst.splice(lst.indexOf(max), 1);\n   \
    \         max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n \
    \   return sorted;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2\
    \ == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    var sorted = [];\n    var sorted_lst = lst.sort(function(a,b){return\
    \ a-b});\n    var max = sorted_lst.length-1;\n    var min = 0;\n    while(sorted.length\
    \ < sorted_lst.length){\n        sorted.push(sorted_lst[min]);\n        sorted.push(sorted_lst[max]);\n\
    \        min++;\n        max--;\n    }\n    return sorted;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var min =\
    \ 0;\n    var max = sorted.length-1;\n    var i = 0;\n    while(i<sorted.length){\n\
    \        if(i%2 == 0){\n            result.push(sorted[min]);\n            min++;\n\
    \        }\n        else{\n            result.push(sorted[max]);\n           \
    \ max--;\n        }\n        i++;\n    }\n    return result;\n}\n", "    var lst_sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange = [];\n \
    \   var i = 0;\n    var j = lst_sorted.length-1;\n    while(i<=j){\n        lst_sorted_strange.push(lst_sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            lst_sorted_strange.push(lst_sorted[j]);\n\
    \            j--;\n        }\n    }\n    return lst_sorted_strange;\n}\n", " \
    \   let sorted = lst.sort((a,b) => a-b);\n    let result = [];\n    let i = 0;\n\
    \    let j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}\n", "    var result = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  while(lst.length > 0){\n        min = Math.min.apply(null, lst);\n        max\
    \ = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n      \
    \  max_index = lst.indexOf(max);\n        min_removed = lst.splice(min_index,\
    \ 1);\n        max_removed = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n\
    \        result.push(min_removed[0]);\n    }\n    return result;\n}\n", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ max = sorted.length-1;\n    var min = 0;\n    while(max>=min){\n        result.push(sorted[max]);\n\
    \        max--;\n        if(max>=min){\n            result.push(sorted[min]);\n\
    \            min++;\n        }\n    }\n    return result;\n}\n", "    var result\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = [];\n    var max_min = [];\n    var min_max_index = [];\n \
    \   var max_min_index = [];\n    var min_max_index_max = [];\n    var max_min_index_min\
    \ = [];\n    var min_max_index_max_min = [];\n    var max_min_index_min_max =\
    \ [];\n    var min_max_index_max_min_index = [];\n    var max_min_index_min_max_index\
    \ = [];\n    var min_max_index_max_min_index_max = [];\n    var max_min_index_min_max_index_min\
    \ = [];\n    var min_max_index_max_min_index_max_min = [];\n    var max_min_index_min_max_index_min_max\
    \ = [];\n    var min_max_index_max_min_index_max_min_index = [];\n    var max_min_index_min_max_index_min_max_index\
    \ = [];\n    var min_max_index_max_min_index_max_min_index_max = [];\n    var\
    \ max_min_index_min_max_index_min_max_index_min = [];\n    var min_max_index_max_min_index_max_min_index_max_min\
    \ = [];\n    var max_min_index_min_max_index_min_max_index_min_max = [];\n   \
    \ var min_max_index_max_min_index_max_min_index_max_min_index = [];\n    var max_min_index_min_max_index_min_max_index_min_max_index\
    \ = [];\n    var min_max_index_max_min_index_max_min_index_max_min_index_max =\
    \ [];\n    var max_min_index_min_max_index_min_max", "    var res = [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n         \
    \   min = Math.min.apply(null, lst);\n        }\n        else{\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return res;\n}\n", "    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var lst_sorted =\
    \ lst.sort(function(a,b){return a-b});\n    var lst_sorted_reversed = lst_sorted.reverse();\n\
    \    var lst_strange = [];\n    for (var i = 0; i < lst.length; i++){\n      \
    \  if (i % 2 == 0){\n            lst_strange.push(lst_sorted[i/2]);\n        }\n\
    \        else{\n            lst_strange.push(lst_sorted_reversed[(i-1)/2]);\n\
    \        }\n    }\n    return lst_strange;\n}\n", "    var sorted = [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_max = [min, max];\n    sorted.push(min_max[0]);\n    sorted.push(min_max[1]);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    while(lst.length\
    \ != 0){\n        var min = Math.min.apply(null, lst);\n        var max = Math.max.apply(null,\
    \ lst);\n        var min_index = lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n\
    \        var min_max = [min, max];\n        sorted.push(min_max[0]);\n       \
    \ sorted.push(min_max[1]);\n        lst.splice(min_index, 1);\n        lst.splice(max_index,\
    \ 1);\n    }\n    return sorted;\n}\n", "    let sorted = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let min_max = [min, max];\n    let max_min\
    \ = [max, min];\n    let min_max_index = [min_index, max_index];\n    let max_min_index\
    \ = [max_index, min_index];\n    let min_max_max_min = [min, max, max, min];\n\
    \    let max_min_min_max = [max, min, min, max];\n    let min_max_max_min_index\
    \ = [min_index, max_index, max_index, min_index];\n    let max_min_min_max_index\
    \ = [max_index, min_index, min_index, max_index];\n    let min_max_min_max = [min,\
    \ max, min, max];\n    let max_min_max_min = [max, min, max, min];\n    let min_max_min_max_index\
    \ = [min_index, max_index, min_index, max_index];\n    let max_min_max_min_index\
    \ = [max_index, min_index, max_index, min_index];\n    let min_max_min_max_max_min\
    \ = [min, max, min, max, max, min];\n    let max_min_max_min_min_max = [max, min,\
    \ max, min, min, max];\n    let min_max_min_max_max_min_index = [min_index, max_index,\
    \ min_index, max_index, max_index, min_index];\n    let max_min_max_min_min_max_index\
    \ = [max_index, min_index, max_index, min_index, min_index, max_index];\n    let\
    \ min_max_max_min_min_max = [min, max, max, min, min, max];\n    let max_min_min_max_max_min\
    \ = [max, min, min,", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n\
    \        if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ result = [];\n    let i = 0;\n    while(lst.length > 0){\n        if(i % 2 ===\
    \ 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    let sorted = lst.sort((a,b)\
    \ => a-b);\n    let result = [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n\
    \        result.push(sorted.pop());\n    }\n    return result;\n}\n", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        if(i!=j){\n            result.push(sorted[j]);\n        }\n        i++;\n\
    \        j--;\n    }\n    return result;\n}\n", "    var res = [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    res.push(min);\n\
    \    res.push(max);\n    while(lst.length > 0){\n        var min = Math.min.apply(null,\
    \ lst);\n        var max = Math.max.apply(null, lst);\n        var min_index =\
    \ lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index, 1);\n        res.push(max);\n        res.push(min);\n\
    \    }\n    return res;\n}\n", "    var min = Math.min(...lst);\n    var max =\
    \ Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var min_max = [min, max];\n    var min_max_index\
    \ = [min_index, max_index];\n    var lst_copy = lst.slice();\n    var lst_copy_index\
    \ = lst.slice();\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index\
    \ - 1, 1);\n    lst_copy_index.splice(min_index, 1);\n    lst_copy_index.splice(max_index\
    \ - 1, 1);\n    var min_max_index_copy = min_max_index.slice();\n    var lst_copy_index_copy\
    \ = lst_copy_index.slice();\n    var min_max_copy = min_max.slice();\n    var\
    \ lst_copy_copy = lst_copy.slice();\n    while (lst_copy.length > 0) {\n     \
    \   min = Math.min.apply(null, lst_copy);\n        max = Math.max.apply(null,\
    \ lst_copy);\n        min_index = lst_copy_index.indexOf(min);\n        max_index\
    \ = lst_copy_index.indexOf(max);\n        min_max.push(min);\n        min_max.push(max);\n\
    \        min_max_index.push(min_index);\n        min_max_index.push(max_index);\n\
    \        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index - 1,\
    \ 1);\n        lst_copy_index.splice(min_index, 1);\n        lst_copy_index.splice(max_index\
    \ - 1, 1);\n    }\n    for (var i = 0; i < min_max_index.length; i++) {\n    \
    \    result.push(min_max[min_max", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return result;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(i < lst.length){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n   \
    \     if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var min = 0;\n    var max = sorted.length-1;\n    while(min<=max){\n\
    \        result.push(sorted[min]);\n        min++;\n        if(min<=max){\n  \
    \          result.push(sorted[max]);\n            max--;\n        }\n    }\n \
    \   return result;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var min = 0;\n    var max = sorted.length-1;\n    while(min<=max){\n\
    \        result.push(sorted[min]);\n        min++;\n        if(min<=max){\n  \
    \          result.push(sorted[max]);\n            max--;\n        }\n    }\n \
    \   return result;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n    let result\
    \ = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n\
    \        result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ let sorted = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     sorted.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min(...lst);\n        }\n        else{\n            sorted.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return sorted;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_strange\
    \ = [];\n    var i = 0;\n    while(lst_sorted.length > 0){\n        if(i%2 ==\
    \ 0){\n            lst_strange.push(lst_sorted.shift());\n        }\n        else{\n\
    \            lst_strange.push(lst_sorted.pop());\n        }\n        i++;\n  \
    \  }\n    return lst_strange;\n}\n", "    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i%2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n \
    \       result.push(sorted.pop());\n    }\n    return result;\n}\n", "    var\
    \ sorted = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var lst_copy = lst.slice();\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index,\
    \ 1);\n    sorted.push(min);\n    sorted.push(max);\n    while(lst_copy.length\
    \ > 0){\n        var min = Math.min.apply(null, lst_copy);\n        var max =\
    \ Math.max.apply(null, lst_copy);\n        var min_index = lst_copy.indexOf(min);\n\
    \        var max_index = lst_copy.indexOf(max);\n        sorted.push(min);\n \
    \       sorted.push(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index,\
    \ 1);\n    }\n    return sorted;\n}\n", "    var min = Math.min(...lst);\n   \
    \ var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    while(sorted.length > 0){\n        result.push(sorted.shift());\n \
    \       result.push(sorted.pop());\n    }\n    return result;\n}\n", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    let sorted = lst.sort((a,b)\
    \ => a-b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length -\
    \ 1;\n    while(i <= j){\n        result.push(sorted[i]);\n        if(i !== j){\n\
    \            result.push(sorted[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var sorted = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    sorted.push(min);\n    sorted.push(max);\n    while(lst.length > 0){\n\
    \        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n        min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n      \
    \  sorted.push(min);\n        sorted.push(max);\n    }\n    return sorted;\n}\n",
  "    let sorted = lst.sort((a,b) => a-b);\n    let result = [];\n    let i = 0;\n\
    \    let j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var res = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i %\
    \ 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n         \
    \   max = Math.max(...lst);\n        }\n        i++;\n    }\n    return res;\n\
    }\n", "    var lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange\
    \ = [];\n    var i = 0;\n    while(lst_sorted.length > 0){\n        if(i%2 ==\
    \ 0){\n            lst_sorted_strange.push(lst_sorted.shift());\n        }\n \
    \       else{\n            lst_sorted_strange.push(lst_sorted.pop());\n      \
    \  }\n        i++;\n    }\n    return lst_sorted_strange;\n}\n", "    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst = [];\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n     \
    \       min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n\
    \        new_lst.push(max);\n        lst.splice(lst.indexOf(max), 1);\n      \
    \  min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n    return\
    \ new_lst;\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var new_lst = [];\n    var lst_len = lst.length;\n    var min_idx =\
    \ 0;\n    var max_idx = 0;\n    var min = lst[0];\n    var max = lst[0];\n   \
    \ var i = 0;\n    while(i < lst_len){\n        for(var j = 0; j < lst.length;\
    \ j++){\n            if(lst[j] < min){\n                min = lst[j];\n      \
    \          min_idx = j;\n            }\n            if(lst[j] > max){\n      \
    \          max = lst[j];\n                max_idx = j;\n            }\n      \
    \  }\n        new_lst.push(min);\n        lst.splice(min_idx, 1);\n        min\
    \ = lst[0];\n        new_lst.push(max);\n        lst.splice(max_idx, 1);\n   \
    \     max = lst[0];\n        i += 2;\n    }\n    return new_lst;\n}\n", "    var\
    \ sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n      \
    \      j--;\n        }\n    }\n    return result;\n}\n", "    var result = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  while(lst.length > 0){\n        min = Math.min.apply(null, lst);\n        max\
    \ = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n      \
    \  max_index = lst.indexOf(max);\n        min_removed = lst.splice(min_index,\
    \ 1);\n        max_removed = lst.splice(max_index, 1);\n        result.push(max_removed[0]);\n\
    \        result.push(min_removed[0]);\n    }\n    return result;\n}\n", "    var\
    \ lst_sorted = lst.sort(function(a,b){return a-b});\n    var lst_sorted_strange\
    \ = [];\n    var i = 0;\n    var j = lst_sorted.length-1;\n    while(i <= j){\n\
    \        lst_sorted_strange.push(lst_sorted[i]);\n        if(i != j){\n      \
    \      lst_sorted_strange.push(lst_sorted[j]);\n        }\n        i++;\n    \
    \    j--;\n    }\n    return lst_sorted_strange;\n}\n", "    var result = [];\n\
    \    var sorted = lst.sort(function(a,b){return a-b;});\n    var i = 0;\n    while(sorted.length\
    \ > 0){\n        if(i % 2 === 0){\n            result.push(sorted.shift());\n\
    \        }else{\n            result.push(sorted.pop());\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n      \
    \  result.push(sorted[i]);\n        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    var res =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n\
    \            res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n  \
    \          min = Math.min.apply(null, lst);\n        }\n        else{\n      \
    \      res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ res;\n}\n", "    var res = [];\n    var lst_copy = lst.slice();\n    var min\
    \ = Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null, lst_copy);\n\
    \    var min_index = lst_copy.indexOf(min);\n    var max_index = lst_copy.indexOf(max);\n\
    \    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index, 1);\n    res.push(min);\n\
    \    res.push(max);\n    while(lst_copy.length > 0){\n        min = Math.min.apply(null,\
    \ lst_copy);\n        max = Math.max.apply(null, lst_copy);\n        min_index\
    \ = lst_copy.indexOf(min);\n        max_index = lst_copy.indexOf(max);\n     \
    \   lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index, 1);\n \
    \       res.push(min);\n        res.push(max);\n    }\n    return res;\n}\n",
  "    var sorted = lst.sort(function(a,b){return a-b});\n    var result = [];\n \
    \   var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n        result.push(sorted[i]);\n\
    \        if(i!=j){\n            result.push(sorted[j]);\n        }\n        i++;\n\
    \        j--;\n    }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a,b){return a-b});\n    var result =\
    \ [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n      \
    \  result.push(sorted[i]);\n        i++;\n        if(i<=j){\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    var res =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    res.push(min);\n\
    \    res.push(max);\n    while(lst.length > 0){\n        min = Math.min.apply(null,\
    \ lst);\n        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        lst.splice(min_index, 1);\n  \
    \      lst.splice(max_index, 1);\n        res.push(max);\n        res.push(min);\n\
    \    }\n    return res;\n}\n", "    let sorted = lst.sort((a,b) => a-b);\n   \
    \ let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i\
    \ <= j){\n        result.push(sorted[i]);\n        if(i !== j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result\
    \ = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n\
    \            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var result = [];\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var index = 0;\n    var i = 0;\n    while(i < lst.length){\n    \
    \    if(index % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        index++;\n \
    \       i++;\n    }\n    return result;\n}", "    var sorted = [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   var min_max = [min, max];\n    var max_min = [max, min];\n    var min_max_index\
    \ = [min_index, max_index];\n    var max_min_index = [max_index, min_index];\n\
    \    var min_max_min_max = [min, max, min, max];\n    var max_min_max_min = [max,\
    \ min, max, min];\n    var min_max_min_max_index = [min_index, max_index, min_index,\
    \ max_index];\n    var max_min_max_min_index = [max_index, min_index, max_index,\
    \ min_index];\n    var min_max_min_max_min_max = [min, max, min, max, min, max];\n\
    \    var max_min_max_min_max_min = [max, min, max, min, max, min];\n    var min_max_min_max_min_max_index\
    \ = [min_index, max_index, min_index, max_index, min_index, max_index];\n    var\
    \ max_min_max_min_max_min_index = [max_index, min_index, max_index, min_index,\
    \ max_index, min_index];\n    var min_max_min_max_min_max_min_max = [min, max,\
    \ min, max, min, max, min, max];\n    var max_min_max_min_max_min_max_min = [max,\
    \ min, max, min, max, min, max, min];\n    var min_max_min_max_min_max_min_max_index\
    \ = [min_index, max_index, min_index, max_index, min_index, max_index, min_index,\
    \ max_index];\n    var max_min_max_min_max_min_max_min", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n       \
    \ if(i%2 == 0){\n            result.push(sorted.shift());\n        }\n       \
    \ else{\n            result.push(sorted.pop());\n        }\n        i++;\n   \
    \ }\n    return result;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        if(i!=j){\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    var res = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    res.push(min);\n    while(lst.length > 0){\n \
    \       min = Math.min.apply(null, lst);\n        max = Math.max.apply(null, lst);\n\
    \        index = lst.indexOf(max);\n        lst.splice(index, 1);\n        res.push(max);\n\
    \        if(lst.length > 0){\n            index = lst.indexOf(min);\n        \
    \    lst.splice(index, 1);\n            res.push(min);\n        }\n    }\n   \
    \ return res;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n    while(i<=j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    var new_lst = [];\n    var max = Math.max.apply(null, lst);\n    var\
    \ min = Math.min.apply(null, lst);\n    var max_index = lst.indexOf(max);\n  \
    \  var min_index = lst.indexOf(min);\n    var i = 0;\n    while (i < lst.length){\n\
    \        if (i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var sorted =\
    \ [];\n    var max = Math.max.apply(null, lst);\n    var min = Math.min.apply(null,\
    \ lst);\n    var max_index = lst.indexOf(max);\n    var min_index = lst.indexOf(min);\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i%2 == 0){\n         \
    \   sorted.push(min);\n            lst.splice(min_index, 1);\n            min\
    \ = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n  \
    \      }\n        else{\n            sorted.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return sorted;\n}\n", "    var sorted = lst.sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length-1;\n\
    \    while(i<=j){\n        result.push(sorted[i]);\n        i++;\n        if(i<=j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    var sorted = lst.sort(function(a,b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    while(sorted.length > 0){\n       \
    \ if(i % 2 == 0){\n            result.push(sorted.shift());\n        }\n     \
    \   else{\n            result.push(sorted.pop());\n        }\n        i++;\n \
    \   }\n    return result;\n}\n", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    var i = 0;\n    while(new_lst.length < lst.length){\n        if(i % 2 ==\
    \ 0){\n            var min = Math.min(...lst);\n            new_lst.push(min);\n\
    \        }\n        else{\n            var max = Math.max(...lst);\n         \
    \   new_lst.push(max);\n        }\n        i++;\n    }\n    return new_lst;\n}",
  "    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result\
    \ = [];\n    let i = 0;\n    while(lst.length > 0){\n        if(i % 2 === 0){\n\
    \            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    let sorted = lst.sort((a,b)\
    \ => a-b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length -\
    \ 1;\n    while(i <= j){\n        result.push(sorted[i]);\n        if(i !== j){\n\
    \            result.push(sorted[j]);\n        }\n        i++;\n        j--;\n\
    \    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var new_lst = [];\n    while (lst.length > 0){\n  \
    \      new_lst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n        if\
    \ (lst.length > 0){\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return new_lst;\n}\n", "    var min = Math.min(...lst);\n    var max\
    \ = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i%2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

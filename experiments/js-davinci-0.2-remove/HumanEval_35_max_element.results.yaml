language: js
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(a, b){\n        return a > b ? a : b;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp288eid8e.js:3\n    return reduce(l, function(a, b){\n    ^\n\n\
    ReferenceError: reduce is not defined\n    at max_element (/tmp/tmp288eid8e.js:3:5)\n\
    \    at test (/tmp/tmp288eid8e.js:13:20)\n    at Object.<anonymous> (/tmp/tmp288eid8e.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ foldl(function(a,b){\n        if(a>b){\n            return a;\n        }\n \
    \       else{\n            return b;\n        }\n    },l[0],l);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmtbr0192.js:3\n    return foldl(function(a,b){\n    ^\n\nReferenceError:\
    \ foldl is not defined\n    at max_element (/tmp/tmpmtbr0192.js:3:5)\n    at test\
    \ (/tmp/tmpmtbr0192.js:18:20)\n    at Object.<anonymous> (/tmp/tmpmtbr0192.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){return x > y ? x : y;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpauhdn86s.js:3\n    return reduce(l, function(x,y){return x > y\
    \ ? x : y;});\n    ^\n\nReferenceError: reduce is not defined\n    at max_element\
    \ (/tmp/tmpauhdn86s.js:3:5)\n    at test (/tmp/tmpauhdn86s.js:11:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpauhdn86s.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(l, function(x,y){return x>y?x:y;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4xold32n.js:3\n\treturn reduce(l, function(x,y){return x>y?x:y;});\n\
    \t^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmp4xold32n.js:3:2)\n\
    \    at test (/tmp/tmp4xold32n.js:11:20)\n    at Object.<anonymous> (/tmp/tmp4xold32n.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ foldl(function(x,y){return x>y?x:y;},l[0],l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5hmg7n2o.js:3\n    return foldl(function(x,y){return x>y?x:y;},l[0],l);\n\
    \    ^\n\nReferenceError: foldl is not defined\n    at max_element (/tmp/tmp5hmg7n2o.js:3:5)\n\
    \    at test (/tmp/tmp5hmg7n2o.js:11:20)\n    at Object.<anonymous> (/tmp/tmp5hmg7n2o.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    if(l.length\
    \ === 0){\n        return null;\n    }\n    var max = l[0];\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n    \
    \    }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    if(l.length\
    \ === 0){\n        return 0;\n    }\n    var max = l[0];\n    for(var i = 1; i\
    \ < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n      \
    \  }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(function(a,b){return a>b?a:b;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp57e5asrx.js:3\n\treturn reduce(function(a,b){return a>b?a:b;},l);\n\
    \t^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmp57e5asrx.js:3:2)\n\
    \    at test (/tmp/tmp57e5asrx.js:11:20)\n    at Object.<anonymous> (/tmp/tmp57e5asrx.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(function(x,y){\n        return x>y?x:y;\n    },l);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqm0xzn9r.js:3\n    return reduce(function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmpqm0xzn9r.js:3:5)\n    at\
    \ test (/tmp/tmpqm0xzn9r.js:13:20)\n    at Object.<anonymous> (/tmp/tmpqm0xzn9r.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(function(x,y){return x > y ? x : y;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp19qfhq4p.js:3\n    return reduce(function(x,y){return x > y ? x\
    \ : y;},l);\n    ^\n\nReferenceError: reduce is not defined\n    at max_element\
    \ (/tmp/tmp19qfhq4p.js:3:5)\n    at test (/tmp/tmp19qfhq4p.js:11:20)\n    at Object.<anonymous>\
    \ (/tmp/tmp19qfhq4p.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){\n        return x > y ? x : y;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp94t2eqg0.js:3\n    return reduce(l, function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp94t2eqg0.js:3:5)\n    at\
    \ test (/tmp/tmp94t2eqg0.js:13:20)\n    at Object.<anonymous> (/tmp/tmp94t2eqg0.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tif(l.length\
    \ == 0){\n\t\treturn null;\n\t}\n\tvar max = l[0];\n\tfor(var i = 1; i < l.length;\
    \ i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(function(a,b){return a>b?a:b;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp57e5asrx.js:3\n\treturn reduce(function(a,b){return a>b?a:b;},l);\n\
    \t^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmp57e5asrx.js:3:2)\n\
    \    at test (/tmp/tmp57e5asrx.js:11:20)\n    at Object.<anonymous> (/tmp/tmp57e5asrx.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(function(a,b){return a>b?a:b;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpb0y2v0bs.js:3\n    return reduce(function(a,b){return a>b?a:b;},l);\n\
    \    ^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmpb0y2v0bs.js:3:5)\n\
    \    at test (/tmp/tmpb0y2v0bs.js:11:20)\n    at Object.<anonymous> (/tmp/tmpb0y2v0bs.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(function(x,y){\n        return x > y ? x : y;\n    }, l);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprqqn5hdt.js:3\n    return reduce(function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmprqqn5hdt.js:3:5)\n    at\
    \ test (/tmp/tmprqqn5hdt.js:13:20)\n    at Object.<anonymous> (/tmp/tmprqqn5hdt.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tif(l.length\
    \ == 0){\n\t\treturn null;\n\t}\n\tvar max = l[0];\n\tfor(var i = 1; i < l.length;\
    \ i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ foldl(function(a,b){\n\t\treturn a > b ? a : b;\n\t}, l[0], l);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9ju8kog8.js:3\n\treturn foldl(function(a,b){\n\t^\n\nReferenceError:\
    \ foldl is not defined\n    at max_element (/tmp/tmp9ju8kog8.js:3:2)\n    at test\
    \ (/tmp/tmp9ju8kog8.js:13:20)\n    at Object.<anonymous> (/tmp/tmp9ju8kog8.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return a>b?a:b;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(function(a,b){\n        return a>b?a:b;\n    },l);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6h6z_cy5.js:3\n    return reduce(function(a,b){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp6h6z_cy5.js:3:5)\n    at\
    \ test (/tmp/tmp6h6z_cy5.js:13:20)\n    at Object.<anonymous> (/tmp/tmp6h6z_cy5.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(l, function(a,b){return a>b?a:b;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1957ufzp.js:3\n\treturn reduce(l, function(a,b){return a>b?a:b;});\n\
    \t^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmp1957ufzp.js:3:2)\n\
    \    at test (/tmp/tmp1957ufzp.js:11:20)\n    at Object.<anonymous> (/tmp/tmp1957ufzp.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ foldl(function(a,b){return Math.max(a,b);},l[0],l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpubxbnj3_.js:3\n    return foldl(function(a,b){return Math.max(a,b);},l[0],l);\n\
    \    ^\n\nReferenceError: foldl is not defined\n    at max_element (/tmp/tmpubxbnj3_.js:3:5)\n\
    \    at test (/tmp/tmpubxbnj3_.js:11:20)\n    at Object.<anonymous> (/tmp/tmpubxbnj3_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return a>b?a:b;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n  var\
    \ max = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] > max){\n   \
    \   max = l[i];\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n  if(l.length\
    \ == 0){\n    return null;\n  }\n  var max = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] > max){\n      max = l[i];\n    }\n  }\n  return max;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){\n        return x > y ? x : y;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp94t2eqg0.js:3\n    return reduce(l, function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp94t2eqg0.js:3:5)\n    at\
    \ test (/tmp/tmp94t2eqg0.js:13:20)\n    at Object.<anonymous> (/tmp/tmp94t2eqg0.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ foldl(function(a,b){return a>b?a:b;},l[0],l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpybg47te_.js:3\n\treturn foldl(function(a,b){return a>b?a:b;},l[0],l);\n\
    \t^\n\nReferenceError: foldl is not defined\n    at max_element (/tmp/tmpybg47te_.js:3:2)\n\
    \    at test (/tmp/tmpybg47te_.js:11:20)\n    at Object.<anonymous> (/tmp/tmpybg47te_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(function(a,b){\n\t\treturn a > b ? a : b;\n\t},l);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpxj_bo81q.js:3\n\treturn reduce(function(a,b){\n\t^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmpxj_bo81q.js:3:2)\n    at\
    \ test (/tmp/tmpxj_bo81q.js:13:20)\n    at Object.<anonymous> (/tmp/tmpxj_bo81q.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){\n        return (x>y)?x:y;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpm80ow8qt.js:3\n    return reduce(l, function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmpm80ow8qt.js:3:5)\n    at\
    \ test (/tmp/tmpm80ow8qt.js:13:20)\n    at Object.<anonymous> (/tmp/tmpm80ow8qt.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ foldl(function(a,b){\n        if(a>b){\n            return a;\n        }\n \
    \       else{\n            return b;\n        }\n    },l[0],l);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmtbr0192.js:3\n    return foldl(function(a,b){\n    ^\n\nReferenceError:\
    \ foldl is not defined\n    at max_element (/tmp/tmpmtbr0192.js:3:5)\n    at test\
    \ (/tmp/tmpmtbr0192.js:18:20)\n    at Object.<anonymous> (/tmp/tmpmtbr0192.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    if(l.length\
    \ == 0){\n        return null;\n    }\n    var max = l[0];\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n    \
    \    }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){\n\t\treturn Math.max(a,b);\n\t});\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tif(l.length\
    \ == 0){\n\t\treturn null;\n\t}\n\tvar max = l[0];\n\tfor(var i = 1; i < l.length;\
    \ i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){return x>y?x:y;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvbo6zrum.js:3\n    return reduce(l, function(x,y){return x>y?x:y;});\n\
    \    ^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmpvbo6zrum.js:3:5)\n\
    \    at test (/tmp/tmpvbo6zrum.js:11:20)\n    at Object.<anonymous> (/tmp/tmpvbo6zrum.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    if(l.length\
    \ == 0){\n        return null;\n    }\n    var max = l[0];\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n    \
    \    }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ Math.max.apply(null, l);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(function(a,b){\n\t\treturn a>b?a:b;\n\t},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw48b212_.js:3\n\treturn reduce(function(a,b){\n\t^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmpw48b212_.js:3:2)\n    at\
    \ test (/tmp/tmpw48b212_.js:13:20)\n    at Object.<anonymous> (/tmp/tmpw48b212_.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return a>b?a:b;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return a>b?a:b;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){return x>y?x:y;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvbo6zrum.js:3\n    return reduce(l, function(x,y){return x>y?x:y;});\n\
    \    ^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmpvbo6zrum.js:3:5)\n\
    \    at test (/tmp/tmpvbo6zrum.js:11:20)\n    at Object.<anonymous> (/tmp/tmpvbo6zrum.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){\n        return x > y ? x : y;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp94t2eqg0.js:3\n    return reduce(l, function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp94t2eqg0.js:3:5)\n    at\
    \ test (/tmp/tmp94t2eqg0.js:13:20)\n    at Object.<anonymous> (/tmp/tmp94t2eqg0.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){return x>y?x:y;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvbo6zrum.js:3\n    return reduce(l, function(x,y){return x>y?x:y;});\n\
    \    ^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmpvbo6zrum.js:3:5)\n\
    \    at test (/tmp/tmpvbo6zrum.js:11:20)\n    at Object.<anonymous> (/tmp/tmpvbo6zrum.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return a>b?a:b;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(l, function(x,y){\n\t\treturn x > y ? x : y;\n\t});\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nzzo8x7.js:3\n\treturn reduce(l, function(x,y){\n\t^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp7nzzo8x7.js:3:2)\n    at\
    \ test (/tmp/tmp7nzzo8x7.js:13:20)\n    at Object.<anonymous> (/tmp/tmp7nzzo8x7.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){return Math.max(a,b)});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(function(a,b){return a>b?a:b;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpb0y2v0bs.js:3\n    return reduce(function(a,b){return a>b?a:b;},l);\n\
    \    ^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmpb0y2v0bs.js:3:5)\n\
    \    at test (/tmp/tmpb0y2v0bs.js:11:20)\n    at Object.<anonymous> (/tmp/tmpb0y2v0bs.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\treturn\
    \ reduce(function(a,b){return a>b?a:b;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp57e5asrx.js:3\n\treturn reduce(function(a,b){return a>b?a:b;},l);\n\
    \t^\n\nReferenceError: reduce is not defined\n    at max_element (/tmp/tmp57e5asrx.js:3:2)\n\
    \    at test (/tmp/tmp57e5asrx.js:11:20)\n    at Object.<anonymous> (/tmp/tmp57e5asrx.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    if(l.length\
    \ == 0){\n        return undefined;\n    }\n    var max = l[0];\n    for(var i\
    \ = 1; i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(x,y){\n        return x > y ? x : y;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp94t2eqg0.js:3\n    return reduce(l, function(x,y){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp94t2eqg0.js:3:5)\n    at\
    \ test (/tmp/tmp94t2eqg0.js:13:20)\n    at Object.<anonymous> (/tmp/tmp94t2eqg0.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n  return\
    \ reduce(l, function(a,b){\n    return a > b ? a : b;\n  });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpur40svq1.js:3\n  return reduce(l, function(a,b){\n  ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmpur40svq1.js:3:3)\n    at\
    \ test (/tmp/tmpur40svq1.js:13:20)\n    at Object.<anonymous> (/tmp/tmpur40svq1.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    if(l.length\
    \ == 0){\n        return null;\n    }\n    var max = l[0];\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n    \
    \    }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ reduce(l, function(a,b){\n        return a > b ? a : b;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp88b6o00d.js:3\n    return reduce(l, function(a,b){\n    ^\n\nReferenceError:\
    \ reduce is not defined\n    at max_element (/tmp/tmp88b6o00d.js:3:5)\n    at\
    \ test (/tmp/tmp88b6o00d.js:13:20)\n    at Object.<anonymous> (/tmp/tmp88b6o00d.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tif(l.length\
    \ == 0){\n\t\treturn null;\n\t}\n\tvar max = l[0];\n\tfor(var i = 1; i < l.length;\
    \ i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    return\
    \ l.reduce(function(a,b){\n        return Math.max(a,b);\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n    var\
    \ max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_element;\n\
    \  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return maximum element in the list.\nfunction max_element(l){\n\tvar\
    \ max = l[0];\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\
    \tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1,\
    \ 2, 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]),124);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

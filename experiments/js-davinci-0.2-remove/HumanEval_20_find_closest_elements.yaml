name: HumanEval_20_find_closest_elements
language: js
prompt: "//From a supplied list of numbers (of length at least two) select and return\
  \ two that are the closest to each\n// other and return them in order (smaller number,\
  \ larger number).\nfunction find_closest_elements(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
  \ 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
  \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
  \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1,\
  \ 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
completions: ["    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    let min = Math.abs(numbers[0] - numbers[1]);\n    let result = [numbers[0],\
    \ numbers[1]];\n    for (let i = 0; i < numbers.length; i++) {\n        for (let\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length - 1; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var difference\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < difference) {\n                closest\
    \ = [numbers[i], numbers[j]];\n                difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = 0;\n    for(var i = 0; i < numbers.length\
    \ - 1; i++){\n        if(Math.abs(numbers[i] - numbers[i + 1]) < min){\n     \
    \       min = Math.abs(numbers[i] - numbers[i + 1]);\n            min_index =\
    \ i;\n        }\n    }\n    var result = [];\n    result.push(numbers[min_index]);\n\
    \    result.push(numbers[min_index + 1]);\n    return result;\n}\n", "    var\
    \ minDiff = Math.abs(numbers[0] - numbers[1]);\n    var minPair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < minDiff) {\n                minDiff =\
    \ diff;\n                minPair = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return minPair;\n}\n", "    var min = numbers[0] - numbers[1];\n\
    \    var min_index = [0,1];\n    for(var i = 0; i < numbers.length; i++){\n  \
    \      for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i,j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var distance = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < distance){\n             \
    \   distance = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Number.MAX_VALUE;\n\
    \    var min_index = 0;\n    var max_index = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if(diff < min){\n   \
    \             min = diff;\n                min_index = i;\n                max_index\
    \ = j;\n            }\n        }\n    }\n    return [numbers[min_index], numbers[max_index]];\n\
    }\n", "    var closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n\
    \                min = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "\tvar min = numbers[0];\n\tvar max = numbers[0];\n\tvar min_index = 0;\n\
    \tvar max_index = 0;\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < min){\n\t\t\tmin = numbers[i];\n\t\t\tmin_index = i;\n\t\t}\n\t\tif(numbers[i]\
    \ > max){\n\t\t\tmax = numbers[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\tvar min_diff\
    \ = max - min;\n\tvar min_diff_index = [min_index, max_index];\n\tfor(var i =\
    \ 0; i < numbers.length; i++){\n\t\tfor(var j = 0; j < numbers.length; j++){\n\
    \t\t\tif(i != j){\n\t\t\t\tvar diff = Math.abs(numbers[i] - numbers[j]);\n\t\t\
    \t\tif(diff < min_diff){\n\t\t\t\t\tmin_diff = diff;\n\t\t\t\t\tmin_diff_index\
    \ = [i, j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(numbers[min_diff_index[0]] >\
    \ numbers[min_diff_index[1]]){\n\t\tvar temp = min_diff_index[0];\n\t\tmin_diff_index[0]\
    \ = min_diff_index[1];\n\t\tmin_diff_index[1] = temp;\n\t}\n\treturn [numbers[min_diff_index[0]],\
    \ numbers[min_diff_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length; j++)\
    \ {\n            if (Math.abs(numbers[i] - numbers[j]) < distance) {\n       \
    \         closest = [numbers[i], numbers[j]];\n                distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min){\n            min = numbers[i];\n      \
    \  }\n        if(numbers[i] > max){\n            max = numbers[i];\n        }\n\
    \    }\n    return [min, max];\n}\n", "    var closest = Math.abs(numbers[0] -\
    \ numbers[1]);\n    var closest_pair = [numbers[0], numbers[1]];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < closest){\n     \
    \           closest = Math.abs(numbers[i] - numbers[j]);\n                closest_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n\
    }\n", "    var min = numbers[0] - numbers[1];\n    var min_index = 0;\n    for(var\
    \ i = 0; i < numbers.length - 1; i++){\n        var diff = numbers[i] - numbers[i\
    \ + 1];\n        if(Math.abs(diff) < Math.abs(min)){\n            min = diff;\n\
    \            min_index = i;\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length - 1; i++)\
    \ {\n        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n       \
    \         closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n   \
    \ var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length; j++)\
    \ {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n            if\
    \ (diff < closest_diff) {\n                closest_diff = diff;\n            \
    \    closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n  \
    \  return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest_elements\
    \ = [];\n    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var difference = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (difference < closest_difference) {\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n", "    var\
    \ closest = [numbers[0], numbers[1]];\n    var smallest_difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < smallest_difference){\n       \
    \         smallest_difference = difference;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [];\n    var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if(diff < smallestDiff){\n                smallestDiff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = numbers[1] - numbers[0];\n    var closest_pair\
    \ = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n\
    \        for (var j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [];\n    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var smallest\
    \ = 0;\n    var largest = 0;\n    var distance = 0;\n    var smallest_distance\
    \ = 0;\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = 0; j\
    \ < numbers.length; j++){\n            if(i != j){\n                distance =\
    \ Math.abs(numbers[i] - numbers[j]);\n                if(distance < smallest_distance\
    \ || smallest_distance == 0){\n                    smallest_distance = distance;\n\
    \                    smallest = numbers[i];\n                    largest = numbers[j];\n\
    \                }\n            }\n        }\n    }\n    closest.push(smallest);\n\
    \    closest.push(largest);\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var smallestDiff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < smallestDiff) {\n                smallestDiff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "\tvar closest = Math.abs(numbers[0] - numbers[1]);\n\
    \tvar closest_pair = [numbers[0], numbers[1]];\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tfor(var j = i + 1; j < numbers.length; j++){\n\t\t\tif(Math.abs(numbers[i]\
    \ - numbers[j]) < closest){\n\t\t\t\tclosest = Math.abs(numbers[i] - numbers[j]);\n\
    \t\t\t\tclosest_pair = [numbers[i], numbers[j]];\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ closest_pair;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n   \
    \ var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n  \
    \      for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var index = 0;\n    for(var\
    \ i = 0; i < numbers.length - 1; i++){\n        if(Math.abs(numbers[i] - numbers[i\
    \ + 1]) < min){\n            min = Math.abs(numbers[i] - numbers[i + 1]);\n  \
    \          index = i;\n        }\n    }\n    return [numbers[index], numbers[index\
    \ + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n\
    \    var minIndex = 0;\n    for(var i = 0; i < numbers.length - 1; i++){\n   \
    \     var diff = numbers[i] - numbers[i + 1];\n        if(diff < min){\n     \
    \       min = diff;\n            minIndex = i;\n        }\n    }\n    return [numbers[minIndex],\
    \ numbers[minIndex + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_elements = [numbers[0], numbers[1]];\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < min_diff) {\n                min_diff = diff;\n              \
    \  min_elements = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return min_elements;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length - 1; i++)\
    \ {\n        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = 0;\n    var closest_pair\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = i +\
    \ 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if(diff < closest || closest === 0){\n                closest = diff;\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var min = numbers[0];\n \
    \   var max = numbers[0];\n    var min_index = 0;\n    var max_index = 0;\n  \
    \  for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] < min){\n \
    \           min = numbers[i];\n            min_index = i;\n        }\n       \
    \ if(numbers[i] > max){\n            max = numbers[i];\n            max_index\
    \ = i;\n        }\n    }\n    var min_diff = max - min;\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = 0; j < numbers.length; j++){\n\
    \            if(i != j){\n                if(Math.abs(numbers[i] - numbers[j])\
    \ < min_diff){\n                    min_diff = Math.abs(numbers[i] - numbers[j]);\n\
    \                    min_index = i;\n                    max_index = j;\n    \
    \            }\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[max_index]];\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    let minDiff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let minPair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < minDiff)\
    \ {\n                minDiff = diff;\n                minPair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return minPair;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = Infinity;\n    for (var i = 0; i < numbers.length; i++){\n  \
    \      for (var j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n \
    \   var min_index = [0,1];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i,j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest_elements = [];\n    var closest_difference\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var difference = Math.abs(numbers[i] - numbers[j]);\n            if (difference\
    \ < closest_difference) {\n                closest_difference = difference;\n\
    \                closest_elements = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest_elements;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "  var sorted = numbers.sort(function(a,b){return\
    \ a-b});\n  var min = sorted[1] - sorted[0];\n  var min_pair = [sorted[0], sorted[1]];\n\
    \  for(var i = 1; i < sorted.length - 1; i++){\n    var diff = sorted[i+1] - sorted[i];\n\
    \    if(diff < min){\n      min = diff;\n      min_pair = [sorted[i], sorted[i+1]];\n\
    \    }\n  }\n  return min_pair;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < min_diff){\n                min_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          diff = Math.abs(numbers[i] - numbers[j]);\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n            }\n   \
    \     }\n    }\n    return closest;\n}\n", "  var closest = Math.abs(numbers[0]\
    \ - numbers[1]);\n  var closest_pair = [numbers[0], numbers[1]];\n  for (var i\
    \ = 0; i < numbers.length; i++) {\n    for (var j = 0; j < numbers.length; j++)\
    \ {\n      if (Math.abs(numbers[i] - numbers[j]) < closest && i != j) {\n    \
    \    closest = Math.abs(numbers[i] - numbers[j]);\n        closest_pair = [numbers[i],\
    \ numbers[j]];\n      }\n    }\n  }\n  return closest_pair.sort(function(a, b){return\
    \ a-b});\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index\
    \ = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < smallestDiff) {\n                smallestDiff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min = numbers[0]\
    \ - numbers[1];\n    var min_index = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = i;\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = numbers[0] - numbers[1];\n    var min_index =\
    \ [0,1];\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = i+1;\
    \ j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        min_index = [i,j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var result\
    \ = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    let closest = [numbers[0], numbers[1]];\n\
    \    let smallestDiff = Math.abs(numbers[0] - numbers[1]);\n    for(let i = 0;\
    \ i < numbers.length; i++){\n        for(let j = i + 1; j < numbers.length; j++){\n\
    \            let diff = Math.abs(numbers[i] - numbers[j]);\n            if(diff\
    \ < smallestDiff){\n                smallestDiff = diff;\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n     \
    \           closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          diff = Math.abs(numbers[i] - numbers[j]);\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n            }\n   \
    \     }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min1\
    \ = numbers[0];\n    var min2 = numbers[1];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i+1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min1 = numbers[i];\n                min2 = numbers[j];\n    \
    \        }\n        }\n    }\n    return [min1, min2];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = numbers[1] - numbers[0];\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = numbers[1] - numbers[0];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = numbers[j] - numbers[i];\n            if (diff < closest_diff){\n   \
    \             closest_diff = diff;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [];\n    var closest_diff = numbers[1] - numbers[0];\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = numbers[j] - numbers[i];\n            if (diff < closest_diff){\n\
    \                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = Number.MAX_VALUE;\n    var min_i = 0;\n    var min_j = 0;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if(diff < min){\n                min = diff;\n                min_i = i;\n\
    \                min_j = j;\n            }\n        }\n    }\n    return [numbers[min_i],\
    \ numbers[min_j]];\n}\n", "    var min = numbers[0] - numbers[1];\n    var min_index\
    \ = 0;\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = i +\
    \ 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        min_index = i;\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if(diff < closest_diff){\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n\
    \    var min_index = 0;\n    for(var i = 0; i < numbers.length - 1; i++){\n  \
    \      if(Math.abs(numbers[i] - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            min_index = i;\n        }\n    }\n    return\
    \ [numbers[min_index], numbers[min_index + 1]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                index = [i, j];\n            }\n        }\n\
    \    }\n    return [numbers[index[0]], numbers[index[1]]];\n}\n", "    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest[0] = numbers[i];\n\
    \                closest[1] = numbers[j];\n            }\n        }\n    }\n \
    \   return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min_diff = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < min_diff){\n                min_diff\
    \ = diff;\n                min_pair = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return min_pair;\n}\n", "    var minDiff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var minIndex = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if(diff < minDiff){\n\
    \                minDiff = diff;\n                minIndex = i;\n            }\n\
    \        }\n    }\n    return [numbers[minIndex], numbers[minIndex + 1]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          diff = Math.abs(numbers[i] - numbers[j]);\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n            }\n   \
    \     }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length - 1; i++) {\n        for (var j = i +\
    \ 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_nums = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n\
    \                min_diff = diff;\n                min_nums = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return min_nums;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                min_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "  var closest = [];\n  var closest_diff = numbers[1] - numbers[0];\n  for (var\
    \ i = 0; i < numbers.length; i++) {\n    for (var j = i + 1; j < numbers.length;\
    \ j++) {\n      var diff = numbers[j] - numbers[i];\n      if (diff < closest_diff)\
    \ {\n        closest_diff = diff;\n        closest = [numbers[i], numbers[j]];\n\
    \      }\n    }\n  }\n  return closest;\n}\n", "  var closest = [numbers[0], numbers[1]];\n\
    \  var smallest_diff = Math.abs(numbers[0] - numbers[1]);\n  for (var i = 0; i\
    \ < numbers.length; i++) {\n    for (var j = i + 1; j < numbers.length; j++) {\n\
    \      var diff = Math.abs(numbers[i] - numbers[j]);\n      if (diff < smallest_diff)\
    \ {\n        closest = [numbers[i], numbers[j]];\n        smallest_diff = diff;\n\
    \      }\n    }\n  }\n  return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var difference = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < difference) {\n\
    \                closest = [numbers[i], numbers[j]];\n                difference\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    let min = Math.abs(numbers[0] - numbers[1]);\n    let min_index\
    \ = [0, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        for (let\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [];\n    var closest_diff =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index\
    \ = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length - 1; i++) {\n        for (var j = i +\
    \ 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n    var\
    \ min_index = [0,1];\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        min_index = [i,j];\n            }\n        }\n    }\n    if(numbers[min_index[0]]\
    \ > numbers[min_index[1]]){\n        return [numbers[min_index[1]], numbers[min_index[0]]];\n\
    \    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "  \
    \  let closest = [];\n    let min = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < min) {\n                min = diff;\n                closest =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var min = numbers[0] - numbers[1];\n    var min_index = 0;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                min_index = i;\n\
    \            }\n        }\n    }\n    return [numbers[min_index], numbers[min_index\
    \ + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var index = 0;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                index = i;\n\
    \            }\n        }\n    }\n    return [numbers[index], numbers[index +\
    \ 1]];\n}\n", "    var smallest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest_elements = [numbers[0], numbers[1]];\n    for (var i = 0; i <\
    \ numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var difference = Math.abs(numbers[i] - numbers[j]);\n           \
    \ if (difference < smallest_difference){\n                smallest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n", "    let\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    let closest = [numbers[0], numbers[1]];\n\
    \    for (let i = 0; i < numbers.length; i++){\n        for (let j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n   \
    \ var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_distance\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var distance = Math.abs(numbers[i] - numbers[j]);\n            if (distance\
    \ < closest_distance) {\n                closest_distance = distance;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest_pair\
    \ = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance){\n            \
    \    closest_distance = distance;\n                closest_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [];\n    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \    }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \        }\n    }\n    closest.push(smallest);\n    closest.push(largest);\n \
    \   return closest;\n}\n", "    var closest = [];\n    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    let smallestDiff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let closestElements = [numbers[0], numbers[1]];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length; j++)\
    \ {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n            if\
    \ (diff < smallestDiff) {\n                smallestDiff = diff;\n            \
    \    closestElements = [numbers[i], numbers[j]];\n            }\n        }\n \
    \   }\n    return closestElements;\n}\n", "    let closest = Math.abs(numbers[0]\
    \ - numbers[1]);\n    let closestPair = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < closest) {\n   \
    \             closest = Math.abs(numbers[i] - numbers[j]);\n                closestPair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closestPair;\n\
    }\n", "    var closest = [];\n    var smallest = numbers[0];\n    var largest\
    \ = numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ < smallest){\n            smallest = numbers[i];\n        }\n        if(numbers[i]\
    \ > largest){\n            largest = numbers[i];\n        }\n    }\n    closest.push(smallest);\n\
    \    closest.push(largest);\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n   \
    \ var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length; j++)\
    \ {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n            if\
    \ (diff < closest_diff) {\n                closest_diff = diff;\n            \
    \    closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n  \
    \  return closest;\n}\n", "    //TODO: Implement this function\n    var min =\
    \ Math.abs(numbers[0] - numbers[1]);\n    var index = 0;\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                index = i;\n         \
    \   }\n        }\n    }\n    return [numbers[index], numbers[index + 1]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length - 1; i++) {\n        for (var j = i +\
    \ 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var smallest_difference\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var smallest_difference_index = 0;\n\
    \    for(var i = 0; i < numbers.length - 1; i++){\n        if(Math.abs(numbers[i]\
    \ - numbers[i + 1]) < smallest_difference){\n            smallest_difference =\
    \ Math.abs(numbers[i] - numbers[i + 1]);\n            smallest_difference_index\
    \ = i;\n        }\n    }\n    return [numbers[smallest_difference_index], numbers[smallest_difference_index\
    \ + 1]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index\
    \ = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index\
    \ = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var num1 = numbers[0];\n    var num2 = numbers[1];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                num1 = numbers[i];\n \
    \               num2 = numbers[j];\n            }\n        }\n    }\n    return\
    \ [num1, num2];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n   \
    \ var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n  \
    \      for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Number.MAX_VALUE;\n\
    \    var min_index = 0;\n    var max_index = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if(diff < min){\n   \
    \             min = diff;\n                min_index = i;\n                max_index\
    \ = j;\n            }\n        }\n    }\n    return [numbers[min_index], numbers[max_index]];\n\
    }\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0,\
    \ 1];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i\
    \ + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var min_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < min_distance) {\n                min_distance = distance;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var smallest = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < smallest){\n             \
    \   smallest = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            var currentDiff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (currentDiff < smallestDiff) {\n            \
    \    smallestDiff = currentDiff;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = numbers[1] - numbers[0];\n    var closest_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n  \
    \              closest_pair = [numbers[i], numbers[j]];\n            }\n     \
    \   }\n    }\n    return closest_pair;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var smallest = numbers[0];\n    var largest = numbers[0];\n    var smallest_index\
    \ = 0;\n    var largest_index = 0;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] < smallest){\n            smallest = numbers[i];\n    \
    \        smallest_index = i;\n        }\n        if(numbers[i] > largest){\n \
    \           largest = numbers[i];\n            largest_index = i;\n        }\n\
    \    }\n    var difference = largest - smallest;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = 0; j < numbers.length; j++){\n            if(numbers[i]\
    \ - numbers[j] < difference && numbers[i] - numbers[j] > 0){\n               \
    \ smallest = numbers[j];\n                largest = numbers[i];\n            \
    \    difference = numbers[i] - numbers[j];\n            }\n        }\n    }\n\
    \    return [smallest, largest];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var closest_diff = Number.MAX_VALUE;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if(diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [];\n    var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n \
    \   for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if(diff < smallestDiff){\n                smallestDiff = diff;\n         \
    \       closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

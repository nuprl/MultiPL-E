name: HumanEval_20_find_closest_elements
language: js
prompt: "//From a supplied list of numbers (of length at least two) select and return\
  \ two that are the closest to each\n// other and return them in order (smaller number,\
  \ larger number).\nfunction find_closest_elements(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
  \ 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
  \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
  \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1,\
  \ 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
completions: ["    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var\
    \ diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var smallest = Math.abs(numbers[0] - numbers[1]);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j]) < smallest){\n\
    \                smallest = Math.abs(numbers[i] - numbers[j]);\n             \
    \   closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n   \
    \ return closest;\n}\n", "    var closest = [];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "  var closest =\
    \ [numbers[0], numbers[1]];\n  var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \  for (var i = 0; i < numbers.length; i++) {\n    for (var j = i + 1; j < numbers.length;\
    \ j++) {\n      if (Math.abs(numbers[i] - numbers[j]) < diff) {\n        closest\
    \ = [numbers[i], numbers[j]];\n        diff = Math.abs(numbers[i] - numbers[j]);\n\
    \      }\n    }\n  }\n  return closest;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    let\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    let min_index = [0, 1];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                min_index\
    \ = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n        if(numbers[i] > max){\n   \
    \         max = numbers[i];\n        }\n    }\n    return [min, max];\n}\n", " \
    \   var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n       \
    \         closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < min_diff){\n                min_diff = diff;\n       \
    \         min_pair = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return min_pair;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length - 1; i++)\
    \ {\n        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "  var smallest_diff = Math.abs(numbers[0] -\
    \ numbers[1]);\n  var closest_elements = [numbers[0], numbers[1]];\n  for (var\
    \ i = 0; i < numbers.length; i++) {\n    for (var j = i + 1; j < numbers.length;\
    \ j++) {\n      var diff = Math.abs(numbers[i] - numbers[j]);\n      if (diff\
    \ < smallest_diff) {\n        smallest_diff = diff;\n        closest_elements\
    \ = [numbers[i], numbers[j]];\n      }\n    }\n  }\n  return closest_elements;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var smallest_difference\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ difference = Math.abs(numbers[i] - numbers[j]);\n            if (difference\
    \ < smallest_difference){\n                smallest_difference = difference;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var min = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if(diff < min){\n                min = diff;\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_distance =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var distance = Math.abs(numbers[i] - numbers[j]);\n            if (distance\
    \ < closest_distance) {\n                closest_distance = distance;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                min_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n\
    }\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    var closest = [];\n    var min = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if(diff < min){\n                min = diff;\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < min_diff){\n                min_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = numbers[0]\
    \ - numbers[1];\n    var min_index = [0,1];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i,j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    let min = numbers[0]\
    \ - numbers[1];\n    let min_index = [0, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [];\n    var\
    \ diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n       \
    \         closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = numbers[0];\n    var\
    \ max = numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min){\n            min = numbers[i];\n        }\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n    }\n    return [min, max];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = 0;\n    for(var i = 1; i < numbers.length\
    \ - 1; i++){\n        var diff = Math.abs(numbers[i] - numbers[i + 1]);\n    \
    \    if(diff < min){\n            min = diff;\n            min_index = i;\n  \
    \      }\n    }\n    return [numbers[min_index], numbers[min_index + 1]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var difference = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < difference) {\n\
    \                closest = [numbers[i], numbers[j]];\n                difference\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length - 1; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          diff = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0,\
    \ 1];\n    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i\
    \ + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n\
    \    var min_index = 0;\n    for(var i = 0; i < numbers.length - 1; i++){\n  \
    \      if(Math.abs(numbers[i] - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            min_index = i;\n        }\n    }\n    return\
    \ [numbers[min_index], numbers[min_index + 1]];\n}\n", "    let closest = [numbers[0],\
    \ numbers[1]];\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (let i = 0; i < numbers.length; i++){\n        for (let j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min_diff){\n    \
    \            min_diff = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length - 1; i++)\
    \ {\n        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var index = 0;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                index = i;\n            }\n        }\n    }\n    return [numbers[index],\
    \ numbers[index + 1]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var smallestDiff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < smallestDiff) {\n                smallestDiff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var smallest_difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest_numbers = [numbers[0], numbers[1]];\n    for\
    \ (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n   \
    \         if (difference < smallest_difference){\n                smallest_difference\
    \ = difference;\n                closest_numbers = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_numbers;\n}\n", "    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                min_index\
    \ = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var min = numbers[0] - numbers[1];\n   \
    \ var min_index = 0;\n    var max_index = 1;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = i;\n                max_index = j;\n            }\n\
    \        }\n    }\n    return [numbers[min_index], numbers[max_index]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n\
    \    var min_index = 0;\n    for(var i = 0; i < numbers.length - 1; i++){\n  \
    \      if(Math.abs(numbers[i] - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            min_index = i;\n        }\n    }\n    return\
    \ [numbers[min_index], numbers[min_index + 1]];\n}\n", "    var closest = [];\n\
    \    var closest_diff = 0;\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     for(var j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if(closest.length == 0 || diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                min_index\
    \ = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_index = [0, 1];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        for (let j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest_elements = [];\n    var min_distance\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if(distance < min_distance){\n                min_distance\
    \ = distance;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n", "    var\
    \ closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n \
    \   for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = 0; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min && i != j){\n                min = Math.abs(numbers[i] -\
    \ numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var minDiff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < minDiff)\
    \ {\n                minDiff = diff;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [];\n    var difference = [];\n    var smallest = 0;\n    var smallestIndex\
    \ = 0;\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = 0; j\
    \ < numbers.length; j++){\n            if(i != j){\n                difference.push(Math.abs(numbers[i]\
    \ - numbers[j]));\n            }\n        }\n        smallest = difference[0];\n\
    \        for(var k = 0; k < difference.length; k++){\n            if(difference[k]\
    \ < smallest){\n                smallest = difference[k];\n                smallestIndex\
    \ = k;\n            }\n        }\n        closest.push(smallest);\n        difference\
    \ = [];\n    }\n    var index = closest.indexOf(Math.min.apply(null, closest));\n\
    \    var first = numbers[index];\n    var second = numbers[index + 1];\n    if(first\
    \ > second){\n        var temp = first;\n        first = second;\n        second\
    \ = temp;\n    }\n    return [first, second];\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n       \
    \         closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closestDistance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closestDistance) {\n                closestDistance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var index1 = 0;\n    var index2 = 1;\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                index1 = i;\n        \
    \        index2 = j;\n            }\n        }\n    }\n    return [numbers[index1],\
    \ numbers[index2]];\n}\n", "    var closest = [];\n    var minDiff = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if(diff < minDiff){\n                minDiff = diff;\n          \
    \      closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [];\n    var smallest = numbers[0];\n\
    \    var largest = numbers[0];\n    var smallest_index = 0;\n    var largest_index\
    \ = 0;\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] <\
    \ smallest){\n            smallest = numbers[i];\n            smallest_index =\
    \ i;\n        }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n\
    \            largest_index = i;\n        }\n    }\n    closest.push(smallest);\n\
    \    closest.push(largest);\n    return closest;\n}\n", "    let closest = [];\n\
    \    let min = Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min = numbers[0]\
    \ - numbers[1];\n    var min_index = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = i;\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var distance\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < distance) {\n                closest\
    \ = [numbers[i], numbers[j]];\n                distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = 0; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min && i != j){\n\
    \                min = Math.abs(numbers[i] - numbers[j]);\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n            }\n   \
    \     }\n    }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i+1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                min_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n\
    }\n", "    var closest = [];\n    var distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j <\
    \ numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j]) < distance){\n\
    \                distance = Math.abs(numbers[i] - numbers[j]);\n             \
    \   closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n   \
    \ return closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    //TODO: implement this function\n    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min) {\n       \
    \         min = Math.abs(numbers[i] - numbers[j]);\n                min_index\
    \ = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var closest = [];\n \
    \   var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "  var closest = [numbers[0], numbers[1]];\n\
    \  var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  for (var i = 0; i\
    \ < numbers.length; i++) {\n    for (var j = i + 1; j < numbers.length; j++) {\n\
    \      var diff = Math.abs(numbers[i] - numbers[j]);\n      if (diff < closest_diff)\
    \ {\n        closest_diff = diff;\n        closest = [numbers[i], numbers[j]];\n\
    \      }\n    }\n  }\n  return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [];\n    var closest_distance\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var distance = Math.abs(numbers[i] - numbers[j]);\n            if (distance\
    \ < closest_distance) {\n                closest_distance = distance;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [];\n    var diff = [];\n \
    \   for(var i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            diff.push(Math.abs(numbers[i] - numbers[j]));\n        }\n\
    \    }\n    var min = Math.min.apply(null, diff);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) == min){\n                closest.push(numbers[i]);\n        \
    \        closest.push(numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index\
    \ = [0, 1];\n    for (var i = 0; i < numbers.length - 1; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var index = 0;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                index = i;\n            }\n        }\n    }\n    return [numbers[index],\
    \ numbers[index + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n \
    \   var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_elements = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_elements = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_elements;\n}\n",
  "    var min = numbers[0] - numbers[1];\n    var min_index = 0;\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                min_index = i;\n\
    \            }\n        }\n    }\n    return [numbers[min_index], numbers[min_index\
    \ + 1]];\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var distance = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < distance) {\n  \
    \              closest = [numbers[i], numbers[j]];\n                distance =\
    \ Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var smallestDiff = numbers[1] -\
    \ numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n        for(var j\
    \ = i + 1; j < numbers.length; j++){\n            var diff = numbers[j] - numbers[i];\n\
    \            if(diff < smallestDiff){\n                smallestDiff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var closest_elements\
    \ = [];\n    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var difference = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (difference < closest_difference) {\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n", "    var\
    \ closest = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n       \
    \         closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [];\n    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [];\n    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    let closest = Math.abs(numbers[0] - numbers[1]);\n\
    \    let closest_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++){\n        for (let j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var min = numbers[1]\
    \ - numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n \
    \   var minIndex = 0;\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n        \
    \        minIndex = i;\n            }\n        }\n    }\n    return [numbers[minIndex],\
    \ numbers[minIndex + 1]];\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_diff_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++)\
    \ {\n        for (var j = i + 1; j < numbers.length; j++) {\n            var diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff) {\n \
    \               min_diff = diff;\n                min_diff_index = [i, j];\n \
    \           }\n        }\n    }\n    return [numbers[min_diff_index[0]], numbers[min_diff_index[1]]];\n\
    }\n", "  var closest = Math.abs(numbers[0] - numbers[1]);\n  var closest_index\
    \ = [0, 1];\n  for (var i = 0; i < numbers.length; i++) {\n    for (var j = i\
    \ + 1; j < numbers.length; j++) {\n      if (Math.abs(numbers[i] - numbers[j])\
    \ < closest) {\n        closest = Math.abs(numbers[i] - numbers[j]);\n       \
    \ closest_index = [i, j];\n      }\n    }\n  }\n  return [numbers[closest_index[0]],\
    \ numbers[closest_index[1]]];\n}\n", "    var closest = Math.abs(numbers[0] -\
    \ numbers[1]);\n    var closest_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < closest) {\n                closest\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest_index = [i, j];\n\
    \            }\n        }\n    }\n    return [numbers[closest_index[0]], numbers[closest_index[1]]];\n\
    }\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Infinity;\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < min_diff){\n                min_diff = diff;\n       \
    \         closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = 0;\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = i;\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min){\n            min = numbers[i];\n        }\n      \
    \  if(numbers[i] > max){\n            max = numbers[i];\n        }\n    }\n  \
    \  var min_diff = max - min;\n    var min_num = min;\n    var max_num = max;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = 0; j < numbers.length;\
    \ j++){\n            if(numbers[i] != numbers[j]){\n                var diff =\
    \ Math.abs(numbers[i] - numbers[j]);\n                if(diff < min_diff){\n \
    \                   min_diff = diff;\n                    min_num = numbers[i];\n\
    \                    max_num = numbers[j];\n                }\n            }\n\
    \        }\n    }\n    return [min_num, max_num];\n}\n", "    var closest = [];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var difference\
    \ = numbers[1] - numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n \
    \       for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < difference){\n                difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min){\n            min = numbers[i];\n      \
    \  }\n        if(numbers[i] > max){\n            max = numbers[i];\n        }\n\
    \    }\n    return [min, max];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n       \
    \         min_index = [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff)\
    \ {\n                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = numbers[0] - numbers[1];\n    var min_index = 0;\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                min_index = i;\n\
    \            }\n        }\n    }\n    return [numbers[min_index], numbers[min_index\
    \ + 1]];\n}\n", "    var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n     \
    \           closest = [numbers[i], numbers[j]];\n            }\n        }\n  \
    \  }\n    return closest;\n}\n", "    let smallestDiff = Math.abs(numbers[0] -\
    \ numbers[1]);\n    let closestElements = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < smallestDiff) {\n                smallestDiff = diff;\n      \
    \          closestElements = [numbers[i], numbers[j]];\n            }\n      \
    \  }\n    }\n    return closestElements;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff) {\n                closest[0] = numbers[i];\n        \
    \        closest[1] = numbers[j];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var result =\
    \ [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff) {\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j <\
    \ numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var smallest = numbers[0];\n    var largest\
    \ = numbers[0];\n    var smallest_index = 0;\n    var largest_index = 0;\n   \
    \ for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n\
    \            smallest = numbers[i];\n            smallest_index = i;\n       \
    \ }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n  \
    \          largest_index = i;\n        }\n    }\n    var closest = largest - smallest;\n\
    \    var closest_index1 = smallest_index;\n    var closest_index2 = largest_index;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = 0; j < numbers.length;\
    \ j++){\n            if(i != j){\n                if(Math.abs(numbers[i] - numbers[j])\
    \ < closest){\n                    closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                    closest_index1 = i;\n                    closest_index2 =\
    \ j;\n                }\n            }\n        }\n    }\n    if(numbers[closest_index1]\
    \ > numbers[closest_index2]){\n        var temp = closest_index1;\n        closest_index1\
    \ = closest_index2;\n        closest_index2 = temp;\n    }\n    return [numbers[closest_index1],\
    \ numbers[closest_index2]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        for (var j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < diff) {\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var diff = Math.abs(numbers[0] -\
    \ numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for (var\
    \ j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff) {\n                diff = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min = numbers[0]\
    \ - numbers[1];\n    var min_index = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = i;\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n", "    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let closest = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++){\n        for (let j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < diff) {\n      \
    \          closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < closest) {\n                closest\
    \ = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < diff) {\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n                diff = Math.abs(numbers[i] - numbers[j]);\n \
    \           }\n        }\n    }\n    return closest;\n}\n", "    var closest =\
    \ [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_145_order_by_points
language: js
prompt: "//Write a function which sorts the given list of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ list.\n// For example:\nfunction order_by_points(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11,\
  \ 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423,\
  \ 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
  \ 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => +a + +b);\n        let sumB = b.toString().split('').reduce((a, b) =>\
    \ +a + +b);\n        return sumA - sumB;\n    });\n}\n", "    // your code here\n\
    \    var sum = 0;\n    var sum_arr = [];\n    var result = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    var min = Math.min.apply(null, sum_arr);\n\
    \    var max = Math.max.apply(null, sum_arr);\n    for(var k = min; k <= max;\
    \ k++){\n        for(var l = 0; l < sum_arr.length; l++){\n            if(sum_arr[l]\
    \ === k){\n                result.push(nums[l]);\n            }\n        }\n \
    \   }\n    return result;\n}\n", "    let sum = 0;\n    let result = [];\n   \
    \ for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let j =\
    \ 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push({\n            num: nums[i],\n            sum:\
    \ sum\n        });\n    }\n    result.sort((a, b) => {\n        if(a.sum > b.sum){\n\
    \            return 1;\n        }\n        if(a.sum < b.sum){\n            return\
    \ -1;\n        }\n        if(a.sum === b.sum){\n            return a.num - b.num;\n\
    \        }\n    });\n    return result.map(x => x.num);\n}\n", "    var nums_sum\
    \ = [];\n    for (var i = 0; i < nums.length; i++) {\n        var sum = 0;\n \
    \       var num = nums[i];\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num = Math.floor(num / 10);\n        }\n        nums_sum.push(sum);\n\
    \    }\n    var result = [];\n    for (var i = 0; i < nums.length; i++) {\n  \
    \      var min = Math.min.apply(null, nums_sum);\n        var index = nums_sum.indexOf(min);\n\
    \        result.push(nums[index]);\n        nums_sum.splice(index, 1);\n     \
    \   nums.splice(index, 1);\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => sum(a) - sum(b) || a - b);\n}\n", "    return nums.sort((a, b) => {\n\
    \        let aSum = a.toString().split('').reduce((a, b) => a + +b, 0);\n    \
    \    let bSum = b.toString().split('').reduce((a, b) => a + +b, 0);\n        return\
    \ aSum - bSum;\n    });\n}\n", "    function sum(num){\n        let sum = 0;\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        return sum;\n    }\n    return nums.sort((a, b) =>\
    \ sum(a) - sum(b) || a - b);\n}\n", "    return nums.sort((a, b) => {\n      \
    \  let aSum = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "    let arr\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        let sum = 0;\n \
    \       let num = nums[i];\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num = Math.floor(num / 10);\n        }\n        arr.push({\n\
    \            index: i,\n            sum: sum,\n            num: nums[i]\n    \
    \    });\n    }\n    arr.sort((a, b) => {\n        if (a.sum > b.sum) {\n    \
    \        return 1;\n        } else if (a.sum < b.sum) {\n            return -1;\n\
    \        } else {\n            return a.index - b.index;\n        }\n    });\n\
    \    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        result.push(arr[i].num);\n\
    \    }\n    return result;\n}", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((a, b) => +a + +b);\n        let sumB =\
    \ b.toString().split('').reduce((a, b) => +a + +b);\n        return sumA - sumB;\n\
    \    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    let arr2 = [];\n    for(let i = 0; i < arr.length; i++){\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             let temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                let temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n     \
    \   let aSum = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        let bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((sum, item) => sum +\
    \ Number(item), 0);\n        let sumB = b.toString().split('').reduce((sum, item)\
    \ => sum + Number(item), 0);\n        return sumA - sumB;\n    });\n}\n", "  \
    \  let sum = 0;\n    let result = [];\n    let obj = {};\n    for(let i = 0; i\
    \ < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    obj[nums[i]] = sum;\n    }\n    let arr = Object.entries(obj);\n    arr.sort((a,\
    \ b) => a[1] - b[1]);\n    for(let i = 0; i < arr.length; i++){\n        result.push(parseInt(arr[i][0]));\n\
    \    }\n    return result;\n}\n", "    var arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var sum = 0;\n        var str = nums[i].toString();\n       \
    \ for(var j = 0; j < str.length; j++){\n            sum += parseInt(str[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    for(var i = 0; i < arr.length;\
    \ i++){\n        for(var j = 0; j < arr.length; j++){\n            if(arr[i] <\
    \ arr[j]){\n                var temp = arr[i];\n                arr[i] = arr[j];\n\
    \                arr[j] = temp;\n                var temp2 = nums[i];\n      \
    \          nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n\
    \        }\n    }\n    return nums;\n}", "    var result = nums.map(function(num,\
    \ index){\n        return {\n            index: index,\n            sum: num.toString().split('').reduce(function(sum,\
    \ digit){\n                return sum + parseInt(digit);\n            }, 0)\n\
    \        };\n    });\n    result.sort(function(a, b){\n        return a.sum -\
    \ b.sum;\n    });\n    return result.map(function(item){\n        return nums[item.index];\n\
    \    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = nums.map(function(num){\n        return num.toString().split('').reduce(function(a,b){\n\
    \            return parseInt(a) + parseInt(b);\n        })\n    })\n    let sorted\
    \ = sum.slice().sort(function(a,b){\n        return a-b;\n    })\n    let result\
    \ = [];\n    for(let i = 0; i < sorted.length; i++){\n        let index = sum.indexOf(sorted[i]);\n\
    \        result.push(nums[index]);\n        sum[index] = -1;\n    }\n    return\
    \ result;\n}\n", "    var newArr = [];\n    var sum = 0;\n    for(var i = 0; i\
    \ < nums.length; i++){\n        var num = nums[i];\n        while(num > 0){\n\
    \            sum += num % 10;\n            num = Math.floor(num / 10);\n     \
    \   }\n        newArr.push(sum);\n        sum = 0;\n    }\n    var sorted = newArr.slice().sort(function(a,b){return\
    \ a-b});\n    var result = [];\n    for(var j = 0; j < sorted.length; j++){\n\
    \        var index = newArr.indexOf(sorted[j]);\n        result.push(nums[index]);\n\
    \        newArr[index] = -1;\n    }\n    return result;\n}", "    var arr = [];\n\
    \    for(var i = 0; i < nums.length; i++){\n        var sum = 0;\n        var\
    \ num = nums[i];\n        while(num > 0){\n            sum += num % 10;\n    \
    \        num = Math.floor(num / 10);\n        }\n        arr.push({\n        \
    \    index: i,\n            sum: sum,\n            num: nums[i]\n        });\n\
    \    }\n    arr.sort(function(a, b){\n        if(a.sum === b.sum){\n         \
    \   return a.index - b.index;\n        }\n        return a.sum - b.sum;\n    });\n\
    \    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        result.push(arr[i].num);\n\
    \    }\n    return result;\n}\n", "    let sum = 0;\n    let arr = [];\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    let arr2 = [];\n    for(let i =\
    \ 0; i < arr.length; i++){\n        for(let j = 0; j < arr.length; j++){\n   \
    \         if(arr[i] < arr[j]){\n                let temp = arr[i];\n         \
    \       arr[i] = arr[j];\n                arr[j] = temp;\n                let\
    \ temp2 = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp2;\n            }\n        }\n    }\n    return nums;\n}", "    let result\
    \ = [];\n    let sum = 0;\n    let obj = {};\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    obj[nums[i]] = sum;\n    }\n    let sorted = Object.keys(obj).sort((a,b)\
    \ => obj[a] - obj[b]);\n    for(let i = 0; i < sorted.length; i++){\n        result.push(parseInt(sorted[i]));\n\
    \    }\n    return result;\n}\n", "    // your code here\n    var sum = 0;\n \
    \   var result = [];\n    for(var i = 0; i < nums.length; i++){\n        sum =\
    \ 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n          \
    \  sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push([sum,\
    \ i]);\n    }\n    result.sort(function(a, b){\n        if(a[0] < b[0]){\n   \
    \         return -1;\n        }\n        if(a[0] > b[0]){\n            return\
    \ 1;\n        }\n        if(a[0] === b[0]){\n            if(a[1] < b[1]){\n  \
    \              return -1;\n            }\n            if(a[1] > b[1]){\n     \
    \           return 1;\n            }\n        }\n        return 0;\n    });\n\
    \    var final = [];\n    for(var i = 0; i < result.length; i++){\n        final.push(nums[result[i][1]]);\n\
    \    }\n    return final;\n}\n", "    let sum = 0;\n    let result = [];\n   \
    \ let sorted = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    for(let i = 0; i < result.length; i++){\n        for(let j = 0; j\
    \ < result.length; j++){\n            if(result[i] < result[j]){\n           \
    \     let temp = result[i];\n                result[i] = result[j];\n        \
    \        result[j] = temp;\n                let temp2 = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n  \
    \      }\n    }\n    return nums;\n}", "    let arr = [];\n    for (let i = 0;\
    \ i < nums.length; i++) {\n        let sum = 0;\n        let num = nums[i];\n\
    \        while (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        arr.push({\n            index: i,\n            sum:\
    \ sum,\n            num: nums[i]\n        });\n    }\n    arr.sort((a, b) => {\n\
    \        if (a.sum > b.sum) {\n            return 1;\n        } else if (a.sum\
    \ < b.sum) {\n            return -1;\n        } else {\n            return a.index\
    \ - b.index;\n        }\n    });\n    return arr.map(x => x.num);\n}\n", "   \
    \ let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push([nums[i],\
    \ sum]);\n    }\n    result.sort(function(a, b){\n        if(a[1] === b[1]){\n\
    \            return a[0] - b[0];\n        }\n        return a[1] - b[1];\n   \
    \ });\n    for(let i = 0; i < result.length; i++){\n        result[i] = result[i][0];\n\
    \    }\n    return result;\n}", "    let sum = nums.map(num => {\n        let\
    \ sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = Math.floor(num / 10);\n        }\n        return sum;\n    });\n  \
    \  let result = [];\n    for (let i = 0; i < sum.length; i++) {\n        let min\
    \ = Math.min(...sum);\n        let index = sum.indexOf(min);\n        result.push(nums[index]);\n\
    \        sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result = nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        if (sumA === sumB) {\n         \
    \   return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return sumA\
    \ - sumB;\n    });\n    return result;\n}\n", "    return nums.sort((a, b) =>\
    \ {\n        let sumA = a.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let result = nums.map(function(num,\
    \ index){\n        return {\n            index: index,\n            sum: num.toString().split('').reduce(function(sum,\
    \ digit){\n                return sum + parseInt(digit);\n            }, 0)\n\
    \        }\n    });\n    result.sort(function(a, b){\n        if(a.sum === b.sum){\n\
    \            return a.index - b.index;\n        }\n        return a.sum - b.sum;\n\
    \    });\n    return result.map(function(item){\n        return nums[item.index];\n\
    \    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }", "    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    result.push({\n            num: nums[i],\n            sum: sum\n        });\n\
    \    }\n    result.sort((a, b) => {\n        if(a.sum === b.sum){\n          \
    \  return a.num - b.num;\n        }\n        return a.sum - b.sum;\n    });\n\
    \    return result.map(x => x.num);\n}\n", "    var arr = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        var sum = 0;\n        var num = nums[i];\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        arr.push([sum, i]);\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a[0] === b[0]){\n            return a[1] - b[1];\n        }\n\
    \        return a[0] - b[0];\n    });\n    var result = [];\n    for(var i = 0;\
    \ i < arr.length; i++){\n        result.push(nums[arr[i][1]]);\n    }\n    return\
    \ result;\n}", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => +a + +b);\n        let sumB = b.toString().split('').reduce((a, b) =>\
    \ +a + +b);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n \
    \   let result = [];\n    for(let i = 0; i < nums.length; i++){\n        sum =\
    \ 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n          \
    \  sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push({\n\
    \            num: nums[i],\n            sum: sum\n        });\n    }\n    result.sort((a,\
    \ b) => {\n        if(a.sum > b.sum){\n            return 1;\n        }\n    \
    \    if(a.sum < b.sum){\n            return -1;\n        }\n        if(a.sum ===\
    \ b.sum){\n            return a.num - b.num;\n        }\n    });\n    return result.map(x\
    \ => x.num);\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    // your code here\n    var arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var sum = 0;\n        var num = nums[i];\n        while(num >\
    \ 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        arr.push({\n            index: i,\n            sum: sum,\n\
    \            num: nums[i]\n        });\n    }\n    arr.sort(function(a, b){\n\
    \        if(a.sum === b.sum){\n            return a.index - b.index;\n       \
    \ }\n        return a.sum - b.sum;\n    });\n    var res = [];\n    for(var i\
    \ = 0; i < arr.length; i++){\n        res.push(arr[i].num);\n    }\n    return\
    \ res;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n        return aSum - bSum;\n    });\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "   \
    \ var result = [];\n    var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push([sum,\
    \ i]);\n    }\n    result.sort(function(a, b){\n        if(a[0] === b[0]){\n \
    \           return a[1] - b[1];\n        }\n        return a[0] - b[0];\n    });\n\
    \    for(var i = 0; i < result.length; i++){\n        result[i] = nums[result[i][1]];\n\
    \    }\n    return result;\n}", "    let sum = 0;\n    let result = [];\n    let\
    \ arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n   \
    \     for(let j = 0; j < nums[i].toString().length; j++){\n            sum +=\
    \ +nums[i].toString()[j];\n        }\n        arr.push(sum);\n    }\n    for(let\
    \ i = 0; i < arr.length; i++){\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[i] < arr[j]){\n                let temp = arr[i];\n      \
    \          arr[i] = arr[j];\n                arr[j] = temp;\n                let\
    \ temp2 = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp2;\n            }\n        }\n    }\n    return nums;\n}", "    return\
    \ nums.sort((a, b) => sumDigits(a) - sumDigits(b));\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([nums[i],\
    \ sum, i]);\n    }\n    arr.sort(function(a, b){\n        if(a[1] === b[1]){\n\
    \            return a[2] - b[2];\n        }\n        return a[1] - b[1];\n   \
    \ });\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n      \
    \  result.push(arr[i][0]);\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a, b)\
    \ => parseInt(a) + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n        return aSum - bSum;\n    });\n}\n", "    let\
    \ sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n   \
    \     sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([sum,\
    \ i]);\n    }\n    arr.sort(function(a, b){\n        if(a[0] < b[0]){\n      \
    \      return -1;\n        }\n        if(a[0] > b[0]){\n            return 1;\n\
    \        }\n        if(a[0] === b[0]){\n            if(a[1] < b[1]){\n       \
    \         return -1;\n            }\n            if(a[1] > b[1]){\n          \
    \      return 1;\n            }\n        }\n        return 0;\n    });\n    let\
    \ result = [];\n    for(let i = 0; i < arr.length; i++){\n        result.push(nums[arr[i][1]]);\n\
    \    }\n    return result;\n}", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let sumB = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = a.toString().split('').reduce((sum, num) => sum + Number(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + Number(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    for(let i = 0; i < nums.length; i++){\n        for(let j =\
    \ 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push([nums[i], sum]);\n        sum = 0;\n    }\n  \
    \  result.sort(function(a, b){\n        if(a[1] === b[1]){\n            return\
    \ a[0] - b[0];\n        }\n        return a[1] - b[1];\n    });\n    for(let i\
    \ = 0; i < result.length; i++){\n        result[i] = result[i][0];\n    }\n  \
    \  return result;\n}", "    let sum = 0;\n    let arr = [];\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(let i = 0; i < arr.length; i++){\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             let temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                let temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n", "    let result = nums.sort((a, b) => {\n\
    \        let aSum = a.toString().split('').reduce((acc, curr) => acc + +curr,\
    \ 0);\n        let bSum = b.toString().split('').reduce((acc, curr) => acc + +curr,\
    \ 0);\n        return aSum - bSum;\n    });\n    return result;\n}", "    return\
    \ nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n      \
    \  let sum = 0;\n        let num = nums[i];\n        while (num > 0) {\n     \
    \       sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n\
    \        arr.push({\n            index: i,\n            sum: sum,\n          \
    \  num: nums[i]\n        });\n    }\n    arr.sort((a, b) => {\n        if (a.sum\
    \ === b.sum) {\n            return a.index - b.index;\n        }\n        return\
    \ a.sum - b.sum;\n    });\n    return arr.map(x => x.num);\n}", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc, curr) =>\
    \ acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    let sum = nums.map(function(num){\n\
    \        return num.toString().split('').reduce(function(a,b){\n            return\
    \ parseInt(a) + parseInt(b);\n        });\n    });\n    let result = [];\n   \
    \ for(let i = 0; i < sum.length; i++){\n        let min = Math.min(...sum);\n\
    \        let index = sum.indexOf(min);\n        result.push(nums[index]);\n  \
    \      sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => +a + +b, 0);\n        let sumB = b.toString().split('').reduce((a, b)\
    \ => +a + +b, 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n", " \
    \   var nums_sum = nums.map(function(num){\n        var sum = 0;\n        num.toString().split('').forEach(function(digit){\n\
    \            sum += parseInt(digit);\n        });\n        return sum;\n    });\n\
    \    var sorted_nums = [];\n    for(var i = 0; i < nums.length; i++){\n      \
    \  var min = Math.min.apply(null, nums_sum);\n        var index = nums_sum.indexOf(min);\n\
    \        sorted_nums.push(nums[index]);\n        nums_sum[index] = Infinity;\n\
    \    }\n    return sorted_nums;\n}\n", "    let sum = 0;\n    let sum_arr = [];\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    let arr = [];\n    for(let\
    \ i = 0; i < sum_arr.length; i++){\n        for(let j = 0; j < sum_arr.length;\
    \ j++){\n            if(sum_arr[i] < sum_arr[j]){\n                let temp =\
    \ sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n                sum_arr[j]\
    \ = temp;\n                temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}", "    let sum = 0;\n    let arr = [];\n    let arr2 = [];\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        for(let j = i + 1; j < arr.length; j++){\n            if(arr[i]\
    \ > arr[j]){\n                let temp = arr[i];\n                arr[i] = arr[j];\n\
    \                arr[j] = temp;\n                temp = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp;\n            }\n   \
    \     }\n    }\n    return nums;\n}", "    return nums.sort((a, b) => {\n    \
    \    let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var result = [];\n    var sorted = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    result.push(sum);\n    }\n    for(var k = 0; k < result.length; k++){\n \
    \       var min = Math.min.apply(null, result);\n        sorted.push(nums[result.indexOf(min)]);\n\
    \        result[result.indexOf(min)] = Infinity;\n    }\n    return sorted;\n\
    }\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => +a + +b);\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ +a + +b);\n        return aSum - bSum;\n    });\n}\n", "    var arr = [];\n\
    \    for(var i = 0; i < nums.length; i++){\n        var sum = 0;\n        var\
    \ num = nums[i];\n        while(num > 0){\n            sum += num % 10;\n    \
    \        num = Math.floor(num / 10);\n        }\n        arr.push({\n        \
    \    sum: sum,\n            index: i\n        });\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a.sum === b.sum){\n            return a.index - b.index;\n \
    \       }\n        return a.sum - b.sum;\n    });\n    var result = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        result.push(nums[arr[i].index]);\n   \
    \ }\n    return result;\n}", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n        let\
    \ bSum = b.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n     \
    \   return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b) => {\n  \
    \      let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc, curr)\
    \ => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n", "  \
    \  return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let nums_sum = [];\n    for (let i = 0; i < nums.length; i++) {\n        let\
    \ sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n  \
    \          sum += parseInt(nums[i].toString()[j]);\n        }\n        nums_sum.push(sum);\n\
    \    }\n    let sorted_nums = [];\n    let sorted_nums_sum = nums_sum.slice().sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < nums_sum.length; i++) {\n        for\
    \ (let j = 0; j < nums_sum.length; j++) {\n            if (nums_sum[j] === sorted_nums_sum[i])\
    \ {\n                sorted_nums.push(nums[j]);\n                nums_sum[j] =\
    \ null;\n                break;\n            }\n        }\n    }\n    return sorted_nums;\n\
    }", "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push([sum, i]);\n    }\n    arr.sort(function(a, b){\n        if(a[0]\
    \ < b[0]){\n            return -1;\n        }\n        if(a[0] > b[0]){\n    \
    \        return 1;\n        }\n        if(a[0] === b[0]){\n            if(a[1]\
    \ < b[1]){\n                return -1;\n            }\n            if(a[1] > b[1]){\n\
    \                return 1;\n            }\n        }\n        return 0;\n    });\n\
    \    for(let i = 0; i < arr.length; i++){\n        arr[i] = nums[arr[i][1]];\n\
    \    }\n    return arr;\n}", "    let result = [];\n    let sum = 0;\n    let\
    \ sum_arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    let min = sum_arr[0];\n    let min_index = 0;\n    for(let i = 0;\
    \ i < sum_arr.length; i++){\n        min = sum_arr[i];\n        min_index = i;\n\
    \        for(let j = i; j < sum_arr.length; j++){\n            if(sum_arr[j] <\
    \ min){\n                min = sum_arr[j];\n                min_index = j;\n \
    \           }\n        }\n        let temp = sum_arr[i];\n        sum_arr[i] =\
    \ sum_arr[min_index];\n        sum_arr[min_index] = temp;\n        temp = nums[i];\n\
    \        nums[i] = nums[min_index];\n        nums[min_index] = temp;\n    }\n\
    \    return nums;\n}", "    let result = nums.sort((a, b) => {\n        let sumA\
    \ = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n \
    \       let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        if (sumA === sumB) {\n            return nums.indexOf(a) - nums.indexOf(b);\n\
    \        }\n        return sumA - sumB;\n    });\n    return result;\n}\n", " \
    \   return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + +b, 0);\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ a + +b, 0);\n        return aSum - bSum;\n    });\n}\n", "    var sum = 0;\n\
    \    var result = [];\n    for(var i = 0; i < nums.length; i++){\n        sum\
    \ = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push([nums[i],\
    \ sum, i]);\n    }\n    result.sort(function(a, b){\n        if(a[1] < b[1]){\n\
    \            return -1;\n        }\n        if(a[1] > b[1]){\n            return\
    \ 1;\n        }\n        if(a[1] === b[1]){\n            if(a[2] < b[2]){\n  \
    \              return -1;\n            }\n            if(a[2] > b[2]){\n     \
    \           return 1;\n            }\n        }\n    });\n    var final = [];\n\
    \    for(var i = 0; i < result.length; i++){\n        final.push(result[i][0]);\n\
    \    }\n    return final;\n}\n", "    let result = nums.map(function(num, index){\n\
    \        return {\n            num: num,\n            index: index,\n        \
    \    sum: num.toString().split('').reduce(function(a, b){\n                return\
    \ parseInt(a) + parseInt(b);\n            }, 0)\n        }\n    });\n    result.sort(function(a,\
    \ b){\n        if(a.sum === b.sum){\n            return a.index - b.index;\n \
    \       }\n        return a.sum - b.sum;\n    });\n    return result.map(function(item){\n\
    \        return item.num;\n    });\n}\n", "    let sum = 0;\n    let arr = [];\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push([nums[i], sum]);\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a[1] > b[1]){\n            return 1;\n        }\n        if(a[1]\
    \ < b[1]){\n            return -1;\n        }\n        if(a[1] === b[1]){\n  \
    \          if(a[0] > b[0]){\n                return 1;\n            }\n      \
    \      if(a[0] < b[0]){\n                return -1;\n            }\n        }\n\
    \    });\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n   \
    \     result.push(arr[i][0]);\n    }\n    return result;\n}", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var nums_sum = [];\n    for (var i = 0; i < nums.length; i++) {\n        var\
    \ sum = 0;\n        var num_str = nums[i].toString();\n        for (var j = 0;\
    \ j < num_str.length; j++) {\n            sum += parseInt(num_str[j]);\n     \
    \   }\n        nums_sum.push(sum);\n    }\n    var nums_copy = nums.slice();\n\
    \    var nums_sum_copy = nums_sum.slice();\n    nums_sum_copy.sort(function(a,\
    \ b){return a-b});\n    var result = [];\n    for (var i = 0; i < nums_sum_copy.length;\
    \ i++) {\n        var index = nums_sum.indexOf(nums_sum_copy[i]);\n        result.push(nums_copy[index]);\n\
    \        nums_sum.splice(index, 1);\n        nums_copy.splice(index, 1);\n   \
    \ }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let sumB = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return sumA - sumB;\n    });\n}\n", "  return nums.sort((a, b) => {\n\
    \    let aSum = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n    if (aSum === bSum) {\n      return nums.indexOf(a) - nums.indexOf(b);\n\
    \    }\n    return aSum - bSum;\n  });\n}\n", "    let sum = 0;\n    let result\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push([nums[i], sum]);\n    }\n    result.sort(function(a,\
    \ b){\n        if(a[1] === b[1]){\n            return a[0] - b[0];\n        }\n\
    \        return a[1] - b[1];\n    });\n    for(let i = 0; i < result.length; i++){\n\
    \        result[i] = result[i][0];\n    }\n    return result;\n}", "    let result\
    \ = [];\n    let sum = 0;\n    let obj = {};\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    obj[nums[i]] = sum;\n    }\n    let sorted = Object.keys(obj).sort((a,b)\
    \ => obj[a] - obj[b]);\n    for(let i = 0; i < sorted.length; i++){\n        result.push(parseInt(sorted[i]));\n\
    \    }\n    return result;\n}\n", "    var arr = [];\n    var sum = 0;\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    var arr2 = [];\n    for(var i =\
    \ 0; i < arr.length; i++){\n        var min = Math.min.apply(null, arr);\n   \
    \     var index = arr.indexOf(min);\n        arr2.push(nums[index]);\n       \
    \ arr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return arr2;\n\
    }", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}",
  "    var sum = 0;\n    var newArray = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        newArray.push(sum);\n\
    \    }\n    for(var i = 0; i < newArray.length; i++){\n        for(var j = i +\
    \ 1; j < newArray.length; j++){\n            if(newArray[i] > newArray[j]){\n\
    \                var temp = newArray[i];\n                newArray[i] = newArray[j];\n\
    \                newArray[j] = temp;\n                var temp2 = nums[i];\n \
    \               nums[i] = nums[j];\n                nums[j] = temp2;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n", " \
    \   return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    // your code here\n    return nums.sort((a,b)=>{\n        let sumA = a.toString().split('').reduce((acc,cur)=>acc+parseInt(cur),0);\n\
    \        let sumB = b.toString().split('').reduce((acc,cur)=>acc+parseInt(cur),0);\n\
    \        return sumA - sumB;\n    })\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = a.toString().split('').reduce((a, b) => +a + +b);\n      \
    \  let sumB = b.toString().split('').reduce((a, b) => +a + +b);\n        return\
    \ sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n     \
    \   let sumB = b.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n\
    \        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let arr =\
    \ [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push([sum, nums[i]]);\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a[0] === b[0]){\n            return a[1] - b[1];\n        }\n\
    \        return a[0] - b[0];\n    });\n    for(let i = 0; i < arr.length; i++){\n\
    \        arr[i] = arr[i][1];\n    }\n    return arr;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return aSum - bSum;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((sum,\
    \ num) => sum + Number(num), 0);\n        let bSum = b.toString().split('').reduce((sum,\
    \ num) => sum + Number(num), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    let sorted = arr.slice().sort((a,b) => a - b);\n    let result = [];\n\
    \    for(let i = 0; i < sorted.length; i++){\n        result.push(nums[arr.indexOf(sorted[i])]);\n\
    \    }\n    return result;\n}", "    var nums_sorted = nums.sort(function(a, b){\n\
    \        var a_sum = sum_digits(a);\n        var b_sum = sum_digits(b);\n    \
    \    if (a_sum < b_sum) {\n            return -1;\n        }\n        if (a_sum\
    \ > b_sum) {\n            return 1;\n        }\n        return 0;\n    });\n \
    \   return nums_sorted;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n\
    \        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    var nums_arr = nums.split(\"\
    ,\");\n    var nums_arr_int = [];\n    for (var i = 0; i < nums_arr.length; i++)\
    \ {\n        nums_arr_int.push(parseInt(nums_arr[i]));\n    }\n    var nums_arr_int_sorted\
    \ = nums_arr_int.sort(function(a, b){return a-b});\n    var nums_arr_int_sorted_str\
    \ = nums_arr_int_sorted.toString();\n    var nums_arr_int_sorted_str_arr = nums_arr_int_sorted_str.split(\"\
    ,\");\n    var nums_arr_int_sorted_str_arr_int = [];\n    for (var i = 0; i <\
    \ nums_arr_int_sorted_str_arr.length; i++) {\n        nums_arr_int_sorted_str_arr_int.push(parseInt(nums_arr_int_sorted_str_arr[i]));\n\
    \    }\n    var nums_arr_int_sorted_str_arr_int_sorted = nums_arr_int_sorted_str_arr_int.sort(function(a,\
    \ b){return a-b});\n    var nums_arr_int_sorted_str_arr_int_sorted_str = nums_arr_int_sorted_str_arr_int_sorted.toString();\n\
    \    var nums_arr_int_sorted_str_arr_int_sorted_str_arr = nums_arr_int_sorted_str_arr_int_sorted_str.split(\"\
    ,\");\n    var nums_arr_int_sorted_str_arr_int_sorted_str_arr_int = [];\n    for\
    \ (var i = 0; i < nums_arr_int_sorted_str_arr_int_sorted_str_arr.length; i++)\
    \ {\n        nums_arr_int_sorted_str_arr_int_sorted_str_arr_int.push(parseInt(nums_arr_",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        if (sumA === sumB) {\n           \
    \ return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return sumA -\
    \ sumB;\n    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA =\
    \ a.toString().split('').reduce((sum, num) => sum + Number(num), 0);\n       \
    \ let sumB = b.toString().split('').reduce((sum, num) => sum + Number(num), 0);\n\
    \        return sumA - sumB;\n    });\n}", "    var nums_str = nums.map(String);\n\
    \    var nums_sum = nums_str.map(function(num){\n        var sum = 0;\n      \
    \  for(var i = 0; i < num.length; i++){\n            sum += parseInt(num[i]);\n\
    \        }\n        return sum;\n    });\n    var nums_sum_sorted = nums_sum.slice().sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var nums_sorted = [];\n    for(var\
    \ i = 0; i < nums_sum_sorted.length; i++){\n        var index = nums_sum.indexOf(nums_sum_sorted[i]);\n\
    \        nums_sorted.push(nums[index]);\n        nums_sum[index] = -1;\n    }\n\
    \    return nums_sorted;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ aSum = a.toString().split('').reduce((a, b) => a + +b, 0);\n        let bSum\
    \ = b.toString().split('').reduce((a, b) => a + +b, 0);\n        return aSum -\
    \ bSum;\n    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA =\
    \ a.toString().split('').reduce((sum, num) => sum + parseInt(num), 0);\n     \
    \   let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    let result2 = [];\n    let result3 = [];\n    let result4\
    \ = [];\n    let result5 = [];\n    let result6 = [];\n    let result7 = [];\n\
    \    let result8 = [];\n    let result9 = [];\n    let result10 = [];\n    let\
    \ result11 = [];\n    let result12 = [];\n    let result13 = [];\n    let result14\
    \ = [];\n    let result15 = [];\n    let result16 = [];\n    let result17 = [];\n\
    \    let result18 = [];\n    let result19 = [];\n    let result20 = [];\n    let\
    \ result21 = [];\n    let result22 = [];\n    let result23 = [];\n    let result24\
    \ = [];\n    let result25 = [];\n    let result26 = [];\n    let result27 = [];\n\
    \    let result28 = [];\n    let result29 = [];\n    let result30 = [];\n    let\
    \ result31 = [];\n    let result32 = [];\n    let result33 = [];\n    let result34\
    \ = [];\n    let result35 = [];\n    let result36 = [];\n    let result37 = [];\n\
    \    let result38 = [];\n    let result39 = [];\n    let result40 = [];\n    let\
    \ result41 = [];\n    let result42 = [];\n    let result43 = [];\n    let result44\
    \ = [];\n    let result45 = [];\n    let result46 = [];\n    let result47 = [];\n\
    \    let result48 = [];\n    let result49 = [];\n    let result50 = [];\n    let\
    \ result51 = [];\n    let result52 = [];\n    let result53 = [];\n    let result54\
    \ = [];\n    let result55 = [];\n    let result56 = [];\n    let result57 = [];\n\
    \    let result58 = [];\n    let result59 = [];\n    let result60 = [];\n    let\
    \ result61 = [];\n    let result62 = [];\n    let result63 = [];\n    let result64\
    \ = [];\n    let result65 = [];\n    let result66 = [];\n    let result67 = [];\n\
    \    let result68 = [];\n    let result69 = [];\n    let result70 = [];\n    let\
    \ result71 = [];\n    let result72 = [];\n   ", "    let sum = 0;\n    let sumArr\
    \ = [];\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n   \
    \     sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for(let i = 0; i < sumArr.length; i++){\n        for(let j = 0; j\
    \ < sumArr.length; j++){\n            if(sumArr[i] < sumArr[j]){\n           \
    \     let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n        \
    \        sumArr[j] = temp;\n                let temp2 = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n  \
    \      }\n    }\n    return nums;\n}", "    var sum = 0;\n    var result = [];\n\
    \    var sum_arr = [];\n    for(var i = 0; i < nums.length; i++){\n        sum\
    \ = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for(var i = 0; i < sum_arr.length; i++){\n        for(var j = 0; j\
    \ < sum_arr.length; j++){\n            if(sum_arr[i] < sum_arr[j]){\n        \
    \        var temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n  \
    \              sum_arr[j] = temp;\n                var temp2 = nums[i];\n    \
    \            nums[i] = nums[j];\n                nums[j] = temp2;\n          \
    \  }\n        }\n    }\n    return nums;\n}", "    return nums.sort((a, b) =>\
    \ {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        let num = nums[i].toString();\n        for(let j =\
    \ 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n        }\n\
    \        arr.push([sum, i]);\n    }\n    arr.sort(function(a, b){\n        if(a[0]\
    \ === b[0]){\n            return a[1] - b[1];\n        }\n        return a[0]\
    \ - b[0];\n    });\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n\
    \        result.push(nums[arr[i][1]]);\n    }\n    return result;\n}\n", "   \
    \ var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for(var i = 0; i < sum_arr.length; i++){\n        for(var j = i +\
    \ 1; j < sum_arr.length; j++){\n            if(sum_arr[i] > sum_arr[j]){\n   \
    \             var temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                temp = nums[i];\n       \
    \         nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}", "    return nums.sort((a, b) => {\n \
    \       let aSum = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let bSum = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return aSum - bSum;\n    });\n}\n", "    var newArr = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        var sum = 0;\n        var num = nums[i].toString();\n\
    \        for(var j = 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n\
    \        }\n        newArr.push([sum, nums[i]]);\n    }\n    newArr.sort(function(a,\
    \ b){\n        if(a[0] > b[0]){\n            return 1;\n        }\n        else\
    \ if(a[0] < b[0]){\n            return -1;\n        }\n        else{\n       \
    \     return a[1] - b[1];\n        }\n    });\n    for(var i = 0; i < newArr.length;\
    \ i++){\n        newArr[i] = newArr[i][1];\n    }\n    return newArr;\n}", " \
    \   let result = [];\n    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        let num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        result.push([sum,\
    \ i]);\n        sum = 0;\n    }\n    result.sort((a, b) => {\n        if(a[0]\
    \ === b[0]){\n            return a[1] - b[1];\n        }\n        return a[0]\
    \ - b[0];\n    });\n    return result.map(item => nums[item[1]]);\n}", "    return\
    \ nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => +a + +b);\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ +a + +b);\n        return aSum - bSum;\n    });\n}\n", "    var nums_sorted\
    \ = nums.slice();\n    nums_sorted.sort(function(a, b){\n        return sum_digits(a)\
    \ - sum_digits(b);\n    });\n    return nums_sorted;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        let sumB = b.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n        return sumA - sumB;\n    });\n}\n", " \
    \   return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "   \
    \ return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return aSum - bSum;\n    });\n}\n", "  return\
    \ nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc, curr)\
    \ => acc + parseInt(curr), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n    if (sumA === sumB) {\n      return a\
    \ - b;\n    }\n    return sumA - sumB;\n  });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc, curr) =>\
    \ acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "    let nums_sorted\
    \ = nums.sort((a,b) => {\n        let a_sum = a.toString().split('').reduce((a,b)\
    \ => parseInt(a) + parseInt(b));\n        let b_sum = b.toString().split('').reduce((a,b)\
    \ => parseInt(a) + parseInt(b));\n        return a_sum - b_sum;\n    });\n   \
    \ return nums_sorted;\n}\n", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((a, b) => a + +b, 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + +b, 0);\n        return aSum - bSum;\n    });\n}\n", "    var result\
    \ = [];\n    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        var min = Math.min.apply(null, sum_arr);\n        var index = sum_arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_arr.splice(index, 1);\n      \
    \  nums.splice(index, 1);\n    }\n    return result;\n}\n", "    // your code\
    \ here\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let sum = 0;\n        let num = nums[i];\n        while(num > 0){\n        \
    \    sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n  \
    \      arr.push({\n            index: i,\n            sum: sum,\n            num:\
    \ nums[i]\n        });\n    }\n    arr.sort((a, b) => {\n        if(a.sum ===\
    \ b.sum){\n            return a.index - b.index;\n        }\n        return a.sum\
    \ - b.sum;\n    });\n    return arr.map(e => e.num);\n}\n", "    let arr = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        let sum = 0;\n        for\
    \ (let j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push([sum, i]);\n    }\n    arr.sort((a, b) => a[0] -\
    \ b[0]);\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n \
    \       result.push(nums[arr[i][1]]);\n    }\n    return result;\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    // your code here\n    return nums.sort((a,b)=>{\n        let sumA = a.toString().split('').reduce((acc,cur)=>acc+parseInt(cur),0);\n\
    \        let sumB = b.toString().split('').reduce((acc,cur)=>acc+parseInt(cur),0);\n\
    \        return sumA-sumB;\n    })\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let sumB = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = a.toString().split('').reduce((acc, curr) => acc + +curr,\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + +curr,\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    var result = [];\n   \
    \ var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n        var num = nums[i];\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        result.push(sum);\n        sum = 0;\n    }\n    var\
    \ sorted = result.slice().sort(function(a, b){return a - b});\n    var sorted_nums\
    \ = [];\n    for(var j = 0; j < sorted.length; j++){\n        var index = result.indexOf(sorted[j]);\n\
    \        sorted_nums.push(nums[index]);\n        result[index] = -1;\n    }\n\
    \    return sorted_nums;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n     \
    \   let sumB = b.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n\
    \        return sumA - sumB;\n    });\n}\n", "    let result = [];\n    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        result.push([i, sum]);\n        sum = 0;\n    }\n\
    \    result.sort(function(a, b){\n        if(a[1] === b[1]){\n            return\
    \ a[0] - b[0];\n        }\n        return a[1] - b[1];\n    });\n    let final\
    \ = [];\n    for(let i = 0; i < result.length; i++){\n        final.push(nums[result[i][0]]);\n\
    \    }\n    return final;\n}", "    return nums.sort((a, b) => {\n        let\
    \ aSum = a.toString().split('').reduce((a, b) => a + +b, 0);\n        let bSum\
    \ = b.toString().split('').reduce((a, b) => a + +b, 0);\n        return aSum -\
    \ bSum;\n    });\n}\n", "    let result = [];\n    let sum = 0;\n    let sumArr\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length;\
    \ i++){\n        for(let j = 0; j < sumArr.length; j++){\n            if(sumArr[i]\
    \ < sumArr[j]){\n                let temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                let temp2 =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\n", "    let arr = [];\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        arr.push({\n       \
    \     num: nums[i],\n            sum: sum\n        });\n    }\n    arr.sort((a,\
    \ b) => {\n        if(a.sum > b.sum){\n            return 1;\n        }\n    \
    \    if(a.sum < b.sum){\n            return -1;\n        }\n        if(a.sum ===\
    \ b.sum){\n            return a.num - b.num;\n        }\n    });\n    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        result.push(arr[i].num);\n\
    \    }\n    return result;\n}\n", "    var sum = 0;\n    var sumArr = [];\n  \
    \  for(var i = 0; i < nums.length; i++){\n        var num = nums[i];\n       \
    \ while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        sumArr.push(sum);\n        sum = 0;\n    }\n    var\
    \ result = [];\n    for(var j = 0; j < sumArr.length; j++){\n        var min =\
    \ Math.min.apply(null, sumArr);\n        var index = sumArr.indexOf(min);\n  \
    \      result.push(nums[index]);\n        sumArr[index] = Infinity;\n    }\n \
    \   return result;\n}\n", "    let arr = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let sum = 0;\n        let num = nums[i];\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        arr.push({\n            index: i,\n            sum: sum,\n\
    \            num: nums[i]\n        });\n    }\n    arr.sort((a, b) => {\n    \
    \    if (a.sum === b.sum) {\n            return a.index - b.index;\n        }\n\
    \        return a.sum - b.sum;\n    });\n    return arr.map(a => a.num);\n}\n",
  "    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        let sum\
    \ = 0;\n        let num = nums[i];\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = Math.floor(num / 10);\n        }\n        arr.push({\n\
    \            index: i,\n            sum: sum,\n            num: nums[i]\n    \
    \    });\n    }\n    arr.sort((a, b) => {\n        if (a.sum === b.sum) {\n  \
    \          return a.index - b.index;\n        }\n        return a.sum - b.sum;\n\
    \    });\n    return arr.map(e => e.num);\n}\n", "    var nums_arr = nums.map(function(num){\n\
    \        return num.toString().split('').reduce(function(a,b){\n            return\
    \ parseInt(a) + parseInt(b);\n        });\n    });\n    var sorted_nums = [];\n\
    \    for(var i = 0; i < nums_arr.length; i++){\n        var min = Math.min.apply(null,\
    \ nums_arr);\n        var min_index = nums_arr.indexOf(min);\n        sorted_nums.push(nums[min_index]);\n\
    \        nums_arr.splice(min_index, 1);\n        nums.splice(min_index, 1);\n\
    \    }\n    return sorted_nums;\n}\n", "    return nums.sort((a, b) => {\n   \
    \     let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "  return nums.sort((a, b)\
    \ => {\n    let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    if (sumA === sumB) {\n      return a - b;\n    }\n    return sumA -\
    \ sumB;\n  });\n}\n", "    let sum = 0;\n    let result = [];\n    let sumArr\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length;\
    \ i++){\n        for(let j = 0; j < sumArr.length; j++){\n            if(sumArr[i]\
    \ < sumArr[j]){\n                let temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                let temp2 =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        let sumB = b.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a, b)\
    \ => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        let sum\
    \ = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n      \
    \      sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([nums[i],\
    \ sum, i]);\n    }\n    arr.sort(function (a, b) {\n        if (a[1] === b[1])\
    \ {\n            return a[2] - b[2];\n        }\n        return a[1] - b[1];\n\
    \    });\n    let res = [];\n    for (let i = 0; i < arr.length; i++) {\n    \
    \    res.push(arr[i][0]);\n    }\n    return res;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => a + +b,\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => a + +b, 0);\n\
    \        return aSum - bSum;\n    });\n}\n", "    let sum = 0;\n    let arr =\
    \ [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push([nums[i], sum]);\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a[1] === b[1]){\n            return a[0] - b[0];\n        }\n\
    \        return a[1] - b[1];\n    });\n    for(let i = 0; i < arr.length; i++){\n\
    \        arr[i] = arr[i][0];\n    }\n    return arr;\n}", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n", " \
    \   let sum = nums.map(x => x.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0));\n    let sorted = [];\n    for (let i = 0; i < sum.length;\
    \ i++) {\n        let index = sum.indexOf(Math.min(...sum));\n        sorted.push(nums[index]);\n\
    \        sum[index] = Infinity;\n    }\n    return sorted;\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n      \
    \  let sum = 0;\n        let num = nums[i].toString();\n        for (let j = 0;\
    \ j < num.length; j++) {\n            sum += Number(num[j]);\n        }\n    \
    \    arr.push({\n            sum: sum,\n            index: i,\n            num:\
    \ nums[i]\n        });\n    }\n    arr.sort((a, b) => {\n        if (a.sum ===\
    \ b.sum) {\n            return a.index - b.index;\n        }\n        return a.sum\
    \ - b.sum;\n    });\n    let result = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        result.push(arr[i].num);\n    }\n    return result;\n}", " \
    \   return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return sumA - sumB;\n    });\n}", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result = [];\n    let sum = 0;\n    let arr = [];\n    for(let i = 0; i\
    \ < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(let i = 0; i < arr.length; i++){\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             let temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                let temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}", "    var sum = 0;\n    var result = [];\n \
    \   for(var i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j\
    \ = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push([nums[i], sum]);\n    }\n    result.sort(function(a,\
    \ b){\n        if(a[1] === b[1]){\n            return a[0] - b[0];\n        }\n\
    \        return a[1] - b[1];\n    });\n    for(var i = 0; i < result.length; i++){\n\
    \        result[i] = result[i][0];\n    }\n    return result;\n}\n", "    let\
    \ sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n   \
    \     sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i; j < arr.length;\
    \ j++){\n            if(arr[i] > arr[j]){\n                let temp = arr[i];\n\
    \                arr[i] = arr[j];\n                arr[j] = temp;\n          \
    \      let temp2 = nums[i];\n                nums[i] = nums[j];\n            \
    \    nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n}",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "   \
    \ // your code here\n    return nums.sort((a,b)=>{\n        let aSum = a.toString().split('').reduce((acc,curr)=>acc+parseInt(curr),0);\n\
    \        let bSum = b.toString().split('').reduce((acc,curr)=>acc+parseInt(curr),0);\n\
    \        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        if (sumA === sumB) {\n            return nums.indexOf(a) - nums.indexOf(b);\n\
    \        }\n        return sumA - sumB;\n    });\n}\n", "    let result = [];\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        let num\
    \ = nums[i];\n        while(num > 0){\n            sum += num % 10;\n        \
    \    num = Math.floor(num / 10);\n        }\n        result.push([sum, i]);\n\
    \        sum = 0;\n    }\n    result.sort(function(a, b){\n        if(a[0] ===\
    \ b[0]){\n            return a[1] - b[1];\n        }\n        return a[0] - b[0];\n\
    \    });\n    let final = [];\n    for(let i = 0; i < result.length; i++){\n \
    \       final.push(nums[result[i][1]]);\n    }\n    return final;\n}\n", "   \
    \ return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => +a + +b);\n        let sumB = b.toString().split('').reduce((a, b) =>\
    \ +a + +b);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        let bSum = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    let result = nums.map(function(num, index){\n        return {\n   \
    \         num: num,\n            index: index,\n            sum: num.toString().split('').reduce(function(a,\
    \ b){\n                return parseInt(a) + parseInt(b);\n            }, 0)\n\
    \        }\n    }).sort(function(a, b){\n        if(a.sum > b.sum){\n        \
    \    return 1;\n        } else if(a.sum < b.sum){\n            return -1;\n  \
    \      } else {\n            return a.index - b.index;\n        }\n    });\n \
    \   return result.map(function(obj){\n        return obj.num;\n    });\n}\n",
  "    var sum = 0;\n    var arr = [];\n    var arr2 = [];\n    for(var i = 0; i <\
    \ nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(var i = 0; i < arr.length; i++){\n       \
    \ for(var j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             var temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                var temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}", "    let arr = [];\n    for (let i = 0; i <\
    \ nums.length; i++) {\n        let sum = 0;\n        let num = nums[i];\n    \
    \    while (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        arr.push({index: i, sum: sum});\n    }\n    arr.sort((a,\
    \ b) => {\n        if (a.sum === b.sum) {\n            return a.index - b.index;\n\
    \        }\n        return a.sum - b.sum;\n    });\n    let result = [];\n   \
    \ for (let i = 0; i < arr.length; i++) {\n        result.push(nums[arr[i].index]);\n\
    \    }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ aSum = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let bSum = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return aSum - bSum;\n    });\n}\n", "    let nums_with_points = nums.map(function(num,\
    \ index){\n        let points = num.toString().split('').reduce(function(sum,\
    \ digit){\n            return sum + parseInt(digit);\n        }, 0);\n       \
    \ return {\n            num: num,\n            points: points,\n            index:\
    \ index\n        };\n    });\n    nums_with_points.sort(function(a, b){\n    \
    \    if(a.points > b.points){\n            return 1;\n        }\n        if(a.points\
    \ < b.points){\n            return -1;\n        }\n        return a.index - b.index;\n\
    \    });\n    return nums_with_points.map(function(num_with_points){\n       \
    \ return num_with_points.num;\n    });\n}\n", "    return nums.sort((a, b) =>\
    \ {\n        let sumA = a.toString().split('').reduce((a, b) => a + +b, 0);\n\
    \        let sumB = b.toString().split('').reduce((a, b) => a + +b, 0);\n    \
    \    return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b) => {\n \
    \       let sumA = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        result.push([sum, i]);\n\
    \    }\n    result.sort(function(a, b){\n        if(a[0] > b[0]){\n          \
    \  return 1;\n        }\n        if(a[0] < b[0]){\n            return -1;\n  \
    \      }\n        if(a[0] === b[0]){\n            if(a[1] > b[1]){\n         \
    \       return 1;\n            }\n            if(a[1] < b[1]){\n             \
    \   return -1;\n            }\n        }\n    });\n    for(let i = 0; i < result.length;\
    \ i++){\n        result[i] = nums[result[i][1]];\n    }\n    return result;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\nfunction\
  \ truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["    var truncated = Math.floor(number);\n    return number - truncated;\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer_part =\
    \ Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "  return number - Math.floor(number);\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    //TODO: implement\n    return number\
    \ - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "  var number_string = number.toString();\n\
    \  var number_array = number_string.split(\".\");\n  var decimal_part = number_array[1];\n\
    \  return decimal_part;\n}\n", "    return number - Math.floor(number);\n}\n",
  "    //TODO: Implement this function\n    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var truncated = Math.floor(number);\n\
    \    var decimals = number - truncated;\n    return decimals;\n}\n", "    var\
    \ truncated = Math.floor(number);\n    var decimals = number - truncated;\n  \
    \  return decimals;\n}\n", "    return number - Math.floor(number);\n}\n", " \
    \   return number - Math.floor(number);\n}\n", "    var number_string = number.toString();\n\
    \    var number_parts = number_string.split('.');\n    if (number_parts.length\
    \ == 1) {\n        return 0;\n    }\n    return parseFloat('0.' + number_parts[1]);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  var truncated = Math.trunc(number);\n  return number - truncated;\n}\n",
  "    return number - Math.floor(number);\n}\n", "    var truncated = Math.trunc(number);\n\
    \    return number - truncated;\n}\n", "  var truncated = Math.trunc(number);\n\
    \  return number - truncated;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer_part =\
    \ Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "  return number - Math.floor(number);\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    var num = number;\n \
    \   var num_int = Math.floor(num);\n    var num_dec = num - num_int;\n    return\
    \ num_dec;\n}\n", "    return number - Math.floor(number);\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer = Math.floor(number);\n\
    \    var decimals = number - integer;\n    return decimals;\n}\n", "    var truncated\
    \ = Math.trunc(number);\n    return number - truncated;\n}\n", "    var integer_part\
    \ = Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "    return number - Math.floor(number);\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var truncated = number.toString().split('.');\n    return truncated[1];\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var truncated = number - Math.floor(number);\n    return truncated;\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    //TODO: implement this function\n    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer = Math.floor(number);\n    var decimal = number - integer;\n\
    \    return decimal;\n}\n", "    return number - Math.floor(number);\n}\n", " \
    \   var number_string = number.toString();\n    var number_array = number_string.split(\"\
    .\");\n    var decimal_part = number_array[1];\n    return decimal_part;\n}\n",
  "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    //your code here\n    return number - Math.floor(number);\n}\n", " \
    \   return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer_part =\
    \ Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "    var integer_part = Math.floor(number);\n    var decimal_part\
    \ = number - integer_part;\n    return decimal_part;\n}\n", "    return number\
    \ - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var int_part = Math.floor(number);\n    var dec_part = number - int_part;\n\
    \    return dec_part;\n}\n", "    //TODO: implement this function\n    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var number_string =\
    \ number.toString();\n    var number_parts = number_string.split('.');\n    var\
    \ decimal_part = number_parts[1];\n    return decimal_part;\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  var truncated = number - Math.floor(number);\n  return truncated;\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer_part =\
    \ Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "    return number - Math.floor(number);\n}\n", "  return\
    \ number - Math.floor(number);\n}\n", "    var truncated = Math.floor(number);\n\
    \    var decimals = number - truncated;\n    return decimals;\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "  var truncated = Math.trunc(number);\n\
    \  return number - truncated;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var truncated = Math.floor(number);\n    return number - truncated;\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    // your code here\n\
    \    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var str = number.toString();\n    var dot_index = str.indexOf('.');\n\
    \    if (dot_index == -1) {\n        return 0;\n    }\n    return parseFloat(str.substring(dot_index));\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var truncated = Math.floor(number);\n    var decimals = number - truncated;\n\
    \    return decimals;\n}\n", "    return number - Math.floor(number);\n}\n", " \
    \   return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer = Math.floor(number);\n    var decimals = number - integer;\n\
    \    return decimals;\n}\n", "    return number - Math.floor(number);\n}\n", " \
    \   return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  //your code here\n  var str = number.toString();\n  var index = str.indexOf('.');\n\
    \  var result = str.slice(index);\n  return parseFloat(result);\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer_part =\
    \ Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "    return number - Math.floor(number);\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    var integer_part = Math.floor(number);\n\
    \    var decimal_part = number - integer_part;\n    return decimal_part;\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var truncated = Math.trunc(number);\n    return number - truncated;\n\
    }\n", "    var truncated = Math.trunc(number);\n    return number - truncated;\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  var integer_part = Math.floor(number);\n\
    \  var decimal_part = number - integer_part;\n  return decimal_part;\n}\n", " \
    \   return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer_part =\
    \ Math.floor(number);\n    var decimal_part = number - integer_part;\n    return\
    \ decimal_part;\n}\n", "    return number - Math.floor(number);\n}\n", "  return\
    \ number - Math.floor(number);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

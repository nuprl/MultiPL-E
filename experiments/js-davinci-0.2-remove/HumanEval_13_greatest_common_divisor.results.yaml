language: js
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if (a == 0 || b == 0) return a + b;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  return greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a == 1 || b == 1) return 1;\n    if((a % 2 == 0) && (b % 2 == 0))\
    \ return 2 * greatest_common_divisor(a / 2, b / 2);\n    if((a % 2 == 0) && (b\
    \ % 2 == 1)) return greatest_common_divisor(a / 2, b);\n    if((a % 2 == 1) &&\
    \ (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(b,\
    \ Math.abs(a - b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0)\n        return b;\n    if(b == 0)\n        return a;\n\
    \    if(a == b)\n        return a;\n    if(a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0)\n        return b;\n    if(b == 0)\n        return a;\n\
    \    if(a == b)\n        return a;\n    if(a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a == 1 || b == 1) return 1;\n    if((a % 2 == 0) && (b % 2 == 0))\
    \ return 2 * greatest_common_divisor(a / 2, b / 2);\n    if((a % 2 == 0) && (b\
    \ % 2 == 1)) return greatest_common_divisor(a / 2, b);\n    if((a % 2 == 1) &&\
    \ (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(b,\
    \ Math.abs(a - b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a === 0) return b;\n    if(b === 0) return a;\n    if(a === b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a == 0 || b == 0){\n\t\treturn 0;\n\t}\n\tif(a < 0){\n\t\ta = -a;\n\
    \t}\n\tif(b < 0){\n\t\tb = -b;\n\t}\n\tif(a > b){\n\t\tvar temp = a;\n\t\ta =\
    \ b;\n\t\tb = temp;\n\t}\n\twhile(a != 0){\n\t\tvar temp = a;\n\t\ta = b % a;\n\
    \t\tb = temp;\n\t}\n\treturn b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a % b == 0) {\n        return b;\n    } else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < b){\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tif(a\
    \ % b == 0){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a < 0){\n \
    \       a = -a;\n    }\n    if(b < 0){\n        b = -b;\n    }\n    while(a !=\
    \ b){\n        if(a > b){\n            a = a - b;\n        }\n        else{\n\
    \            b = b - a;\n        }\n    }\n    return a;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var r;\n    while(b != 0){\n        r = a % b;\n        a = b;\n  \
    \      b = r;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a == 0) return b;\n\tif(b == 0) return a;\n\tif(a == b) return a;\n\
    \tif(a > b) return greatest_common_divisor(a-b, b);\n\tif(a < b) return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < b){\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tif(a\
    \ % b == 0){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0)\n        return b;\n    if(b == 0)\n        return a;\n\
    \    if(a == b)\n        return a;\n    if(a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b === 0){\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    if(a % b == 0){\n        return b;\n    }\n    else{\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a == 0 || b == 0){\n\t\treturn 0;\n\t}\n\tif(a == b){\n\t\treturn\
    \ a;\n\t}\n\tif(a > b){\n\t\treturn greatest_common_divisor(a - b, b);\n\t}\n\t\
    return greatest_common_divisor(a, b - a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2, \n        greatestDivisor = 1;\n    \n    //if u pass\
    \ a -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n  \
    \      return 1;\n    \n    while(a >= divisor && b >= divisor){\n     if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;      \n   \
    \     }\n     divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\telse return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    while(b != 0){\n        var temp = a % b;\n        a = b;\n      \
    \  b = temp;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    if(a % b == 0){\n        return b;\n    }\n    else{\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < b){\n\t\treturn greatest_common_divisor(b, a);\n\t}\n\tif(b ==\
    \ 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b, a % b);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a === 0){\n        return b;\n    }\n    if(b === 0){\n        return\
    \ a;\n    }\n    if(a === b){\n        return a;\n    }\n    if(a > b){\n    \
    \    return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2,\n        greatestDivisor = 1;\n\n    //if u pass a\
    \ -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n    \
    \    return 1;\n\n    while(a >= divisor && b >= divisor){\n        if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;\n        }\n\
    \        divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\treturn greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a == 0 || b == 0){\n\t\treturn a + b;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  else\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a < 0) return\
    \ greatest_common_divisor(-a, b);\n    if(b < 0) return greatest_common_divisor(a,\
    \ -b);\n    if(a > b) return greatest_common_divisor(b, a);\n    return greatest_common_divisor(b\
    \ % a, a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0)\n        return b;\n    return greatest_common_divisor(b\
    \ % a, a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    if(a % b == 0){\n        return b;\n    }\n    else{\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < 0) a = -a;\n\tif(b < 0) b = -b;\n\tif(b > a){var temp = a; a =\
    \ b; b = temp;}\n\twhile(true){\n\t\tif(b == 0) return a;\n\t\ta %= b;\n\t\tif(a\
    \ == 0) return b;\n\t\tb %= a;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a < 0){\n \
    \       a = -a;\n    }\n    if(b < 0){\n        b = -b;\n    }\n    while(a !=\
    \ b){\n        if(a > b){\n            a = a - b;\n        }\n        else{\n\
    \            b = b - a;\n        }\n    }\n    return a;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    var r = a % b;\n    while(r != 0){\n        a = b;\n        b = r;\n\
    \        r = a % b;\n    }\n    return b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar gcd = 1;\n\tvar min = Math.min(a, b);\n\tfor(var i = 2; i <= min;\
    \ i++){\n\t\tif(a % i == 0 && b % i == 0){\n\t\t\tgcd = i;\n\t\t}\n\t}\n\treturn\
    \ gcd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a == 0) return b;\n\tif(b == 0) return a;\n\tif(a == b) return a;\n\
    \tif(a > b) return greatest_common_divisor(a-b, b);\n\treturn greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < 0) a = -a;\n    if(b < 0) b = -b;\n    if(b > a){var temp =\
    \ a; a = b; b = temp;}\n    while(true){\n        if(b == 0) return a;\n     \
    \   a %= b;\n        if(a == 0) return b;\n        b %= a;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    while(b != 0){\n        var temp = a % b;\n        a = b;\n      \
    \  b = temp;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < 0) a = -a;\n    if(b < 0) b = -b;\n    if(b > a){var temp =\
    \ a; a = b; b = temp;}\n    while(true){\n        if(b == 0) return a;\n     \
    \   a %= b;\n        if(a == 0) return b;\n        b %= a;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < b){\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\t\n\t\
    while(b != 0){\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp % b;\n\t}\n\t\n\t\
    return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < 0) a = -a;\n    if(b < 0) b = -b;\n    if(b > a){var temp =\
    \ a; a = b; b = temp;}\n    while(true){\n        if(b == 0) return a;\n     \
    \   a %= b;\n        if(a == 0) return b;\n        b %= a;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < b){\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tif(a\
    \ % b == 0){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    if(b == 0) return a;\n    if(a == b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < b){\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    if(b == 0){\n        return a;\n    }\n    else{\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

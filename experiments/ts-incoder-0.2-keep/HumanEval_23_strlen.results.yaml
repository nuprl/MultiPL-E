language: ts
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738139

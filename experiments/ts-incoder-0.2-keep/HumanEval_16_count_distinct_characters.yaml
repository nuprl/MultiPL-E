completions:
- "\tlet chars: number[] = [];\n\tfor (let i = 0; i < string.length; i++) {\n\t\t\
  chars.push(string.charCodeAt(i));\n\t}\n\tlet uniqueChars: number[] = [];\n\tfor\
  \ (let i = 0; i < chars.length; i++) {\n\t\tlet char = chars[i];\n\t\tif (uniqueChars.indexOf(char)\
  \ === -1) {\n\t\t\tuniqueChars.push(char);\n\t\t}\n\t}\n\treturn uniqueChars.length;\n\
  }\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsLength = {};\n  for (let i = 0; i < charsLength; i++) {\n    const\
  \ char = chars[i];\n    if (!distinctCharsLength[char]) {\n      distinctCharsLength[char]\
  \ = 1;\n    } else {\n      distinctCharsLength[char]++;\n    }\n  }\n  return Object.keys(distinctCharsLength).length;\n\
  }\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        if (char.toLowerCase() !== char) {\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\
  \t\tlet currentChar = string[i];\n\t\tlet lowerCaseChar = string[i].toLowerCase();\n\
  \t\tlet upperCaseChar = string[i].toUpperCase();\n\t\tif (currentChar === lowerCaseChar\
  \ || currentChar === upperCaseChar) {\n\t\t\tdistinctCharacterCount++;\n\t\t}\n\t\
  }\n\treturn distinctCharacterCount;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "\tlet count = 1;\n\tlet char: string;\n\tfor (let i = 0; i < string.length; i++)\
  \ {\n\t\tchar = string[i];\n\t\tif (char.toLowerCase() !== char) {\n\t\t\tcount++;\n\
  \t\t}\n\t}\n\treturn count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  let distinctCharsCount\
  \ = 0;\n  for (let i = 0; i < charsLength; i++) {\n    if (chars.indexOf(chars[i])\
  \ !== i) {\n      distinctCharsCount++;\n    }\n  }\n  return distinctCharsCount;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        if (char === char.toUpperCase()) {\n            count++;\n\
  \        }\n        else if (char === char.toLowerCase()) {\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "    let chars = string.split('');\n    let char_count: number = 0;\n    for (let\
  \ i = 0; i < chars.length; i++) {\n        if (chars.indexOf(chars[i]) !== chars.lastIndexOf(chars[i]))\
  \ {\n            char_count++;\n        }\n    }\n    return char_count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char.toLowerCase() !== char.toUpperCase()) {\n\t\t\tcount++;\n\
  \t\t}\n\t}\n\treturn count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i]\
  \ === string[i].toLowerCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let chars = string.split('');\n  let count = 1;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    if (chars.indexOf(chars[i]) !== i) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsLength = {};\n  for (let i = 0; i < charsLength; i++) {\n    const\
  \ char = chars[i];\n    if (distinctCharsLength[char]) {\n      distinctCharsLength[char]\
  \ += 1;\n    } else {\n      distinctCharsLength[char] = 1;\n    }\n  }\n  return\
  \ Object.keys(distinctCharsLength).length;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "\tlet distinct = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tif (string.charCodeAt(i)\
  \ !== string.charCodeAt(i + 1)) {\n\t\t\tdistinct++;\n\t\t}\n\t}\n\treturn distinct;\n\
  }\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  let distinctCharsCount\
  \ = 0;\n  for (let i = 0; i < charsLength; i++) {\n    if (chars.indexOf(chars[i])\
  \ !== i) {\n      distinctCharsCount++;\n    }\n  }\n  return distinctCharsCount;\n\
  }\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        let\
  \ char = string[i];\n        if (char === char.toUpperCase()) {\n            count++;\n\
  \        } else if (char === char.toLowerCase()) {\n            count++;\n     \
  \   }\n    }\n    return count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char.toLowerCase() === char.toUpperCase()) {\n\t\t\tcount++;\n\
  \t\t}\n\t}\n\treturn count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i]\
  \ !== string[i].toLowerCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "\tlet distinct = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char\
  \ = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinct++;\n\t\t\
  }\n\t\telse if (char === char.toLowerCase()) {\n\t\t\tdistinct++;\n\t\t}\n\t}\n\t\
  return distinct;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    const lowerChar = string[i].toLowerCase();\n    const upperChar\
  \ = string[i].toUpperCase();\n    if (lowerChar !== upperChar) {\n      chars++;\n\
  \    }\n  }\n  return chars;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.match(/[a-z]/i)) {\n      count++;\n    }\n  }\n  return\
  \ count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t}\n\t\t\
  if (char === char.toLowerCase()) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
  }\n"
- "  const chars = string.split('');\n  const charsCount = chars.reduce((acc, cur)\
  \ => {\n    const char = cur.toLowerCase();\n    if (acc[char]) {\n      acc[char]++;\n\
  \    } else {\n      acc[char] = 1;\n    }\n    return acc;\n  }, {});\n  return\
  \ Object.keys(charsCount).length;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let char_count: number = 0;\n  for (let i = 0; i < string.length; i++) {\n  \
  \  const char = string[i];\n    const char_code = char.charCodeAt(0);\n    if (char_code\
  \ >= 65 && char_code <= 90) {\n      char_count++;\n    }\n  }\n  return char_count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let chars: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string[i].toLowerCase());\n\
  \  }\n  return chars.filter((value, index, self) => self.indexOf(value) === index).length;\n\
  }\n"
- "  let chars = string.split('');\n  let char_count = chars.length;\n  let distinct_char_count\
  \ = 0;\n  for (let i = 0; i < chars.length; i++) {\n    let char = chars[i];\n \
  \   if (char.charCodeAt(0) > 96 && char.charCodeAt(0) < 123 && char.charCodeAt(0)\
  \ !== 127) {\n      distinct_char_count++;\n    }\n  }\n  return distinct_char_count;\n\
  }\n"
- "\tlet distinct = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char\
  \ = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinct += 1;\n\t\
  \t}\n\t\telse if (char === char.toLowerCase()) {\n\t\t\tdistinct += 2;\n\t\t}\n\t\
  \telse {\n\t\t\tdistinct += 3;\n\t\t}\n\t}\n\treturn distinct;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ counts = new Array(charsLength);\n  for (let i = 0; i < charsLength; i++) {\n\
  \    counts[chars.charCodeAt(i)] = 1;\n  }\n  return counts.length;\n}\n"
- "    let chars: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     const char = string[i];\n        if (chars.indexOf(char) === -1) {\n     \
  \       chars.push(char);\n        }\n    }\n    return chars.length;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\
  \t\tif (char.toLowerCase() !== char) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
  }\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsCount: number = 0;\n\n  for (let i = 0; i < charsLength; i++) {\n\
  \    const char = chars[i];\n    const lowerChar = char.toLowerCase();\n    if (lowerChar\
  \ !== char) {\n      distinctCharsCount++;\n    }\n  }\n\n  return distinctCharsCount;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "\tlet count = 1;\n\tlet i = 0;\n\twhile (i < string.length) {\n\t\tlet char = string[i];\n\
  \t\tlet nextChar = string[i + 1];\n\t\tif (char === nextChar) {\n\t\t\tcount++;\n\
  \t\t\ti++;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn count;\n}\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    if (chars.indexOf(char) === -1) {\n      chars.push(char);\n\
  \    }\n  }\n  return chars.length;\n}\n"
- "\tlet chars: number = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tchars\
  \ += string.charCodeAt(i);\n\t}\n\treturn chars;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string.charAt(i);\n    if (char.toLowerCase() !== char.toUpperCase()) {\n    \
  \  count++;\n    }\n  }\n  return count;\n}\n"
- "  const chars = string.split('');\n  let count = 0;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    if (chars.indexOf(chars[i]) !== i) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "    let chars = string.split('');\n    let char_count = 0;\n    for (let i = 0;\
  \ i < chars.length; i++) {\n        if (chars.indexOf(chars[i]) === i) {\n     \
  \       char_count++;\n        }\n    }\n    return char_count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\
  \t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t}\n\t\tif (char ===\
  \ char.toLowerCase()) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    if (chars.includes(char)) chars++;\n    else chars = [...chars,\
  \ char];\n  }\n  return chars;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsCount: number = 0;\n\n  for (let i = 0; i < charsLength; i++) {\n\
  \    const char = chars[i];\n    const lowerChar = char.toLowerCase();\n    const\
  \ upperChar = char.toUpperCase();\n\n    if (lowerChar === upperChar) {\n      continue;\n\
  \    }\n\n    if (chars.indexOf(lowerChar) === chars.indexOf(upperChar)) {\n   \
  \   continue;\n    }\n\n    distinctCharsCount++;\n  }\n\n  return distinctCharsCount;\n\
  }\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t}\n\t\t\
  else if (char === char.toLowerCase()) {\n\t\t\tcount++;\n\t\t}\n\t\telse {\n\t\t\
  \tbreak;\n\t\t}\n\t}\n\treturn count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    if (chars.indexOf(char) === -1) {\n      chars.push(char);\n\
  \    }\n  }\n  return chars.length;\n}\n"
- "    let chars = string.split('');\n    let charsCount = chars.length;\n    let\
  \ distinctCharsCount = 0;\n    for (let i = 0; i < charsCount; i++) {\n        let\
  \ char = chars[i];\n        let lowerChar = char.toLowerCase();\n        if (charsCount.indexOf(lowerChar)\
  \ === -1) {\n            distinctCharsCount++;\n        }\n    }\n    return distinctCharsCount;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  return string\n    .split('')\n    .reduce((acc, curr) => {\n      return acc\
  \ + curr.toUpperCase() === curr ? 1 : acc;\n    }, 0);\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let chars = string.split('');\n  let charsMap = new Map();\n  for (let char of\
  \ chars) {\n    charsMap.set(char, charsMap.get(char) + 1 || 1);\n  }\n  return\
  \ charsMap.size;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ !== string.charCodeAt(i - 1)) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  const chars = string.split('');\n  let count = 0;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    if (chars.indexOf(chars[i]) !== i) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.match(/[a-z]/i)) {\n      count++;\n    }\n  }\n  return\
  \ count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let char_count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char\
  \ = string[i];\n    if (char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90) {\n\
  \      char_count++;\n    }\n  }\n  return char_count;\n}\n"
- "  return string.split('').filter((char: string) => !char.match(/[A-Z]/)).filter((char:\
  \ string) => !char.match(/[a-z]/)).filter((char: string) => !char.match(/[0-9]/)).filter((char:\
  \ string) => !char.match(/[!,@,#,$,%,^,&,*,?,_,~,-,(,)]/)).filter((char: string)\
  \ => !char.match(/[,],/)).filter((char: string) => !char.match(/[;,]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/[/]/)).filter((char: string) => !char.match(/[,]/)).filter((char:\
  \ string) => !char.match(/[;,]/)).filter((char: string) => !char.match(/[?]/)).filter((char:\
  \ string) => !char.match(/["
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  return string\n    .split('')\n    .reduce((acc, curr) => {\n      return acc\
  \ + count_distinct_characters(curr);\n    }, 0);\n}\n"
- "  let char_count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char\
  \ = string[i];\n    if (char.match(/[a-z]/i)) {\n      char_count++;\n    }\n  }\n\
  \  return char_count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string.charAt(i);\n\t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t\
  }\n\t}\n\treturn count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string.charAt(i);\n    if (char === char.toUpperCase()) {\n      count++;\n  \
  \  }\n  }\n  return count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsLength = {};\n  for (let i = 0; i < charsLength; i++) {\n    const\
  \ char = chars[i];\n    if (!(char in distinctCharsLength)) {\n      distinctCharsLength[char]\
  \ = 1;\n    } else {\n      distinctCharsLength[char]++;\n    }\n  }\n  return Object.keys(distinctCharsLength).length;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  const chars = string.split('');\n  const uniqueChars = new Set(chars);\n  return\
  \ uniqueChars.size;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    const lowerChar = string[i].toLowerCase();\n    const upperChar\
  \ = string[i].toUpperCase();\n    if (char === lowerChar || char === upperChar)\
  \ {\n      count++;\n    }\n  }\n  return count;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        if (char.toLowerCase() !== char.toUpperCase()) {\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "  const chars = string.split('');\n  let count = 0;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    if (chars.indexOf(chars[i]) !== i) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let chars: number[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string.charCodeAt(i));\n\
  \  }\n  return chars.filter((_, i) => chars.indexOf(chars[i]) === i).length;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\
  \t\tconst currentChar = string[i];\n\t\tif (distinctCharacterCount < currentChar.toLowerCase().length)\
  \ {\n\t\t\tdistinctCharacterCount = currentChar.toLowerCase().length;\n\t\t}\n\t\
  \tif (distinctCharacterCount < currentChar.toUpperCase().length) {\n\t\t\tdistinctCharacterCount\
  \ = currentChar.toUpperCase().length;\n\t\t}\n\t}\n\treturn distinctCharacterCount;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.match(/[a-z]/i)) {\n      count++;\n    }\n  }\n  return\
  \ count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  const chars = string.split('');\n  let count = 0;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    if (chars.indexOf(chars[i]) !== chars.lastIndexOf(chars[i])) {\n \
  \     count++;\n    }\n  }\n  return count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ !== string.charCodeAt(i - 1)) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i]\
  \ === string[i].toLowerCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char.toLowerCase() === char.toUpperCase()) {\n\t\t\tcount++;\n\
  \t\t}\n\t}\n\treturn count;\n}\n"
- "  return string.split('').filter((char) => !char.match(/[A-Z]/)).length\n}\n"
- "    let count = 1;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n            count++;\n        }\n    }\n\
  \    return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        let\
  \ char = string[i];\n        if (char === char.toUpperCase()) {\n            count++;\n\
  \        } else if (char === char.toLowerCase()) {\n            count++;\n     \
  \   }\n    }\n    return count;\n}\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    if (chars.indexOf(char) === -1) {\n      chars.push(char);\n\
  \    }\n  }\n  return chars.length;\n}\n"
- "\tlet distinct = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char\
  \ = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinct++;\n\t\t\
  }\n\t\telse if (char === char.toLowerCase()) {\n\t\t\tdistinct++;\n\t\t}\n\t}\n\t\
  return distinct;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  const chars = string.split('');\n  const counts = new Map();\n  for (let i =\
  \ 0; i < chars.length; i++) {\n    const char = chars[i];\n    const count = counts.get(char);\n\
  \    if (count === undefined) {\n      counts.set(char, 1)\n    } else {\n     \
  \ counts.set(char, count + 1)\n    }\n  }\n  return counts.size;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let chars: number[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string.charCodeAt(i));\n\
  \  }\n  return chars.filter(function (elem, pos) {\n    return chars.indexOf(elem)\
  \ === pos;\n  }).length;\n}\n"
- "\tlet distinct = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char\
  \ = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinct++;\n\t\t\
  }\n\t\telse if (char === char.toLowerCase()) {\n\t\t\tdistinct++;\n\t\t}\n\t}\n\t\
  return distinct;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    if (chars.indexOf(char) === -1) {\n      chars = chars\
  \ + 1;\n    }\n  }\n  return chars;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        const lowerCaseChar = char.toLowerCase();\n       \
  \ const upperCaseChar = char.toUpperCase();\n        if (lowerCaseChar === upperCaseChar)\
  \ {\n            count++;\n        } else {\n            count++;\n        }\n \
  \   }\n    return count;\n}\n"
- "  const chars = string.split('');\n  const charsCount = {};\n  for (let i = 0;\
  \ i < chars.length; i++) {\n    const char = chars[i];\n    if (charsCount[char])\
  \ {\n      charsCount[char] += 1;\n    } else {\n      charsCount[char] = 1;\n \
  \   }\n  }\n  return Object.keys(charsCount).length;\n}\n"
- "  let chars: number[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string.charCodeAt(i));\n\
  \  }\n  return chars.reduce((a, b) => a + b, 0);\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsLength = {};\n  for (let i = 0; i < charsLength; i++) {\n    const\
  \ char = chars[i];\n    if (distinctCharsLength[char]) {\n      distinctCharsLength[char]++;\n\
  \    } else {\n      distinctCharsLength[char] = 1;\n    }\n  }\n  return Object.keys(distinctCharsLength).length;\n\
  }\n"
- "  return string\n    .split('')\n    .reduce((acc, cur) => {\n      if (acc[cur])\
  \ {\n        acc[cur]++;\n      } else {\n        acc[cur] = 1;\n      }\n     \
  \ return acc;\n    }, {});\n}\n"
- "\tlet distinct = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char\
  \ = string.charAt(i);\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinct++;\n\
  \t\t}\n\t\telse if (char === char.toLowerCase()) {\n\t\t\tdistinct++;\n\t\t}\n\t\
  }\n\treturn distinct;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  return string\n    .split('')\n    .reduce((acc, cur) => acc + (cur !== cur.toLowerCase()\
  \ ? 1 : 0), 0);\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string.charAt(i);\n\t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t\
  }\n\t}\n\treturn count;\n}\n"
- "  const chars = string.split('');\n  return chars.reduce((acc, cur) => acc + count_distinct_characters(cur),\
  \ 0);\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++)\
  \ {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n      \
  \      distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n\
  }\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsLength = {};\n  for (let i = 0; i < charsLength; i++) {\n    const\
  \ char = chars[i];\n    if (!distinctCharsLength[char]) {\n      distinctCharsLength[char]\
  \ = 1;\n    } else {\n      distinctCharsLength[char] += 1;\n    }\n  }\n  return\
  \ Object.keys(distinctCharsLength).length;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char === char.toLowerCase()) {\n\t\t\tcount++;\n\t\t}\n\t\
  }\n\treturn count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  const\
  \ distinctCharsLength = {};\n  for (let i = 0; i < charsLength; i++) {\n    const\
  \ char = chars[i];\n    if (distinctCharsLength[char]) {\n      distinctCharsLength[char]\
  \ += 1;\n    } else {\n      distinctCharsLength[char] = 1;\n    }\n  }\n  return\
  \ Object.keys(distinctCharsLength).length;\n}\n"
- "\tlet distinctCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet\
  \ char = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinctCount++;\n\
  \t\t}\n\t\tif (char === char.toLowerCase()) {\n\t\t\tdistinctCount++;\n\t\t}\n\t\
  }\n\treturn distinctCount;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\
  \t\tif (string[i] === string[i].toLowerCase()) {\n\t\t\tdistinctCharacterCount++;\n\
  \t\t}\n\t}\n\treturn distinctCharacterCount;\n}\n"
- "\tlet distinctCharacters = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\t\
  const char = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tdistinctCharacters++;\n\
  \t\t}\n\t\tif (char === char.toLowerCase()) {\n\t\t\tdistinctCharacters++;\n\t\t\
  }\n\t}\n\treturn distinctCharacters;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ !== string.charCodeAt(i - 1)) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  const chars = string.split('');\n  const uniqueChars = new Set(chars);\n  return\
  \ uniqueChars.size;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.match(/[a-z]/i)) {\n      count += 1;\n    }\n    if\
  \ (char.match(/[A-Z]/i)) {\n      count += 1;\n    }\n    if (char.match(/[0-9]/i))\
  \ {\n      count += 1;\n    }\n  }\n  return count;\n}\n"
- "  let chars: number[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string.charCodeAt(i));\n\
  \  }\n  let uniqueChars: number[] = [];\n  for (let i = 0; i < chars.length; i++)\
  \ {\n    if (uniqueChars.indexOf(chars[i]) === -1) {\n      uniqueChars.push(chars[i]);\n\
  \    }\n  }\n  return uniqueChars.length;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  const chars = string.split('');\n  let count = 0;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    const char = chars[i];\n    if (char === char.toUpperCase()) {\n \
  \     count += 1;\n    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t}\n\t\t\
  else if (char === char.toLowerCase()) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
  }\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char.toLowerCase() === char.toUpperCase()) {\n\t\t\tcount++;\n\
  \t\t}\n\t}\n\treturn count;\n}\n"
- "  let chars = string.split('');\n  let charsCount = chars.length;\n  let distinctCharsCount\
  \ = 0;\n\n  for (let i = 0; i < charsCount; i++) {\n    let char = chars[i];\n \
  \   let lowerChar = char.toLowerCase();\n    if (lowerChar !== char) {\n      distinctCharsCount++;\n\
  \    }\n  }\n\n  return distinctCharsCount;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  return string\n    .split('')\n    .reduce((acc, curr) => {\n      return acc\
  \ + count_distinct_characters(curr);\n    }, 0);\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let chars = string.split('');\n  let charsCount = chars.length;\n  let distinctCharsCount\
  \ = 0;\n  for (let i = 0; i < charsCount; i++) {\n    if (chars.indexOf(chars[i])\
  \ === i) {\n      distinctCharsCount++;\n    }\n  }\n  return distinctCharsCount;\n\
  }\n"
- "  const chars = string.split('');\n  let count = 0;\n  for (let i = 0; i < chars.length;\
  \ i++) {\n    if (chars.indexOf(chars[i]) !== i) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    const lowerChar = string[i].toLowerCase();\n    if (lowerChar\
  \ === char.toLowerCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n"
- "  let chars: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string[i].toLowerCase());\n\
  \  }\n  return chars.filter((char) => char.charCodeAt(0) === char.charCodeAt(0)).length;\n\
  }\n"
- "    let chars: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     let char = string[i];\n        if (chars.indexOf(char) === -1) {\n       \
  \     chars.push(char);\n        }\n    }\n    return chars.length;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (string.includes(char.toLowerCase())) {\n      count++;\n \
  \   }\n  }\n  return count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  let count\
  \ = 1;\n\n  for (let i = 0; i < charsLength; i++) {\n    if (chars.indexOf(chars[i])\
  \ !== charsLength - 1) {\n      count++;\n    }\n  }\n\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  const chars = string.split('');\n  const charsLength = chars.length;\n  let count\
  \ = 1;\n  for (let i = 0; i < charsLength; i++) {\n    if (chars.indexOf(chars[i])\
  \ !== charsLength - 1) {\n      count++;\n    }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() !== char) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.match(/[a-z]/i)) {\n      count++;\n    }\n  }\n  return\
  \ count;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        if (char === char.toUpperCase()) {\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "    let distinctCharacterCount = 0;\n    for (let i = 0; i < string.length; i++)\
  \ {\n        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n      \
  \      distinctCharacterCount++;\n        }\n    }\n    return distinctCharacterCount;\n\
  }\n"
- "  let chars: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string[i].toLowerCase());\n\
  \  }\n  return chars.filter((char) => chars.indexOf(char) === -1).length;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i];\n\
  \t\tif (char === char.toUpperCase()) {\n\t\t\tcount++;\n\t\t}\n\t\telse if (char\
  \ === char.toLowerCase()) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char.toLowerCase() !== char) {\n\t\t\tcount++;\n\t\t}\n\t\
  }\n\treturn count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let distinctCount = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i]\
  \ === string[i].toLowerCase()) {\n      distinctCount++;\n    }\n  }\n  return distinctCount;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char.toLowerCase() === char.toUpperCase()) {\n      count++;\n\
  \    }\n  }\n  return count;\n}\n"
- "  let char_count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char\
  \ = string[i];\n    if (char.match(/[a-z]/i)) {\n      char_count++;\n    }\n  }\n\
  \  return char_count;\n}\n"
- "  return string\n    .split('')\n    .reduce((acc, cur) => {\n      return acc\
  \ + count_distinct_characters(cur);\n    }, 0);\n}\n"
- "\tlet chars: number = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tchars\
  \ += string.charCodeAt(i);\n\t}\n\treturn chars;\n}\n"
- "\tlet distinctCharacterCount = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\
  \t\tconst currentChar = string[i];\n\t\tif (distinctCharacterCount === 0 && currentChar\
  \ !== currentChar.toLowerCase() && currentChar !== currentChar.toUpperCase()) {\n\
  \t\t\tdistinctCharacterCount++;\n\t\t}\n\t}\n\treturn distinctCharacterCount;\n\
  }\n"
- "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char =\
  \ string[i];\n\t\tif (char.toLowerCase() === char.toUpperCase()) {\n\t\t\tcount++;\n\
  \t\t}\n\t}\n\treturn count;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n            count++;\n        }\n    }\n\
  \    return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "    let char_count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string.charAt(i) !== string.charAt(i).toUpperCase()) {\n          \
  \  char_count++;\n        }\n    }\n    return char_count;\n}\n"
- "    let distinct = 0;\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string.charCodeAt(i) !== string.charCodeAt(i).toUpperCase()) {\n            distinct++;\n\
  \        }\n    }\n    return distinct;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
- "    let count = 1;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i)\
  \ !== string.charAt(i).toUpperCase()) {\n            count++;\n        }\n    }\n\
  \    return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let chars: number[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string.charCodeAt(i));\n\
  \  }\n  return chars.filter((_, i) => chars.indexOf(chars[i]) === i).length;\n}\n"
- "  let chars: number = 0;\n  for (let i = 0; i < string.length; i++) {\n    const\
  \ char = string[i];\n    if (chars.indexOf(char) === -1) {\n      chars.push(char);\n\
  \    }\n  }\n  return chars.length;\n}\n"
- "  let chars: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n    chars.push(string[i].toLowerCase());\n\
  \  }\n  return chars.filter((char) => chars.indexOf(char) === -1).length;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toLowerCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "    let distinct = 0;\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string.charCodeAt(i) !== string.charCodeAt(i).toUpperCase()) {\n            distinct++;\n\
  \        }\n    }\n    return distinct;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        let\
  \ char = string[i];\n        if (char.toLowerCase() === char.toUpperCase()) {\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        const\
  \ char = string[i];\n        if (char.toLowerCase() !== char) {\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "  let count = 1;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (string.includes(char.toLowerCase())) {\n      count++;\n \
  \   }\n  }\n  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    const char =\
  \ string[i];\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n\
  \  return count;\n}\n"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charCodeAt(i)\
  \ >= 65 && string.charCodeAt(i) <= 90) {\n      count++;\n    }\n  }\n  return count;\n\
  }\n"
language: ts
name: HumanEval_16_count_distinct_characters
prompt: '//Given a string, find out how many distinct characters (regardless of case)
  does it consist of

  // >>> count_distinct_characters(''xyzXYZ'')

  // 3

  // >>> count_distinct_characters(''Jerry'')

  // 4

  function count_distinct_characters(string: string): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"

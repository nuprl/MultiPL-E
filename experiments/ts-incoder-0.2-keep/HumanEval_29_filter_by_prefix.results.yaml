language: ts
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const strings_length = strings.length;\n  const result: string[] = [];\n  for\
    \ (let i = 0; i < strings_length; i++) {\n    if (strings[i].startsWith(prefix))\
    \ {\n      result.push(strings[i]);\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([], \"\
    john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp326yrgvn.ts(11,20): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter((s) => {\n    return s.startsWith(prefix);\n\
    \  });\n  return filtered_strings;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_by_prefix;\n\
    \  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7snxx43h.ts(9,14): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxcomdzbu.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxcomdzbu.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter((s) => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr5bjmv4x.ts(8,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const prefix_length = prefix.length;\n\
    \    const filtered_strings = strings.filter(s => s.startsWith(prefix));\n   \
    \ return filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpypdrpgxw.ts(8,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const filtered_strings = strings.filter(s\
    \ => s.startsWith(prefix));\n    return filtered_strings;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_i1p081a.ts(7,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter((s) => {\n    return s.startsWith(prefix);\n\
    \  });\n  return filtered_strings;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_by_prefix;\n\
    \  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7snxx43h.ts(9,14): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const filtered_strings = strings.filter((s)\
    \ => s.startsWith(prefix));\n    return filtered_strings;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplusd1xvt.ts(7,54): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp45bceiv6.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const filtered_strings = strings.filter((s)\
    \ => s.startsWith(prefix));\n  return filtered_strings;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjzddxgm_.ts(7,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const strings_length = strings.length;\n  const result: string[] = [];\n  for\
    \ (let i = 0; i < strings_length; i++) {\n    const string = strings[i];\n   \
    \ if (string.slice(0, prefix_length) === prefix) {\n      result.push(string);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_by_prefix;\n\
    \  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxcomdzbu.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.map(s => s.substr(prefix_length));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy0wp3i0w.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const filtered_strings = strings.filter((s)\
    \ => s.startsWith(prefix));\n    return filtered_strings;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplusd1xvt.ts(7,54): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const filtered_strings = strings.filter(s\
    \ => s.startsWith(prefix));\n  return filtered_strings;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps4mwif8l.ts(7,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const prefix_length = prefix.length;\n\
    \    const filtered_strings = strings.filter(s => s.startsWith(prefix));\n   \
    \ return filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpypdrpgxw.ts(8,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const prefix_length = prefix.length;\n\
    \    const filtered_strings = strings.filter(s => s.startsWith(prefix));\n   \
    \ return filtered_strings;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppw2q2hqa.ts(8,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter((s) => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr5bjmv4x.ts(8,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxcomdzbu.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const strings_length = strings.length;\n  const result: string[] = [];\n  for\
    \ (let i = 0; i < strings_length; i++) {\n    const str = strings[i];\n    if\
    \ (str.slice(0, prefix_length) === prefix) {\n      result.push(str);\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter((s) => s.startsWith(prefix));\n  return\
    \ filtered_strings.length ? filtered_strings : [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr5bjmv4x.ts(8,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738330
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.map(s => s.substring(prefix_length));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyleo4krn.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp45bceiv6.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  const prefix_length = prefix.length;\n\
    \  const filtered_strings = strings.filter(s => s.startsWith(prefix));\n  return\
    \ filtered_strings.map(s => s.substring(prefix_length));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyleo4krn.ts(8,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    const prefix_length = prefix.length;\n\
    \    const filtered_strings = strings.filter((s) => {\n        return s.startsWith(prefix);\n\
    \    });\n    return filtered_strings;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_by_prefix;\n\
    \  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdgcidgh5.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659747318
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy1iueid.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2n3hjwm.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659738271

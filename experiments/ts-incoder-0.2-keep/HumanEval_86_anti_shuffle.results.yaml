language: ts
name: HumanEval_86_anti_shuffle
results:
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([A-Z][a-z])/g,\
    \ '$1 $2').replace(/\\s+/g, ' ').toLowerCase();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp2qqc8pm0.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2qqc8pm0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words = s.split(' ');\n  let result = '';\n  for (let i = 0; i < words.length;\
    \ i++) {\n    let word = words[i];\n    let ascii = word.charCodeAt(0);\n    if\
    \ (ascii > 64 && ascii < 91) {\n      result += word.substr(0, word.length - 1);\n\
    \    } else {\n      result += word;\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp83iguy0q.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83iguy0q.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const index = word.length\
    \ - 1;\n    while (index >= 0) {\n      const char = word.charAt(index);\n   \
    \   result.push(char);\n      index--;\n    }\n  }\n  return result.join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzkskw78u.ts(19,7): error TS2588: Cannot assign to
    ''index'' because it is a constant.

    '
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    const sortedChars = chars.sort((a, b) =>\
    \ a.charCodeAt() - b.charCodeAt());\n    return sortedChars.join('');\n  });\n\
    \  return newWords.join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2hhl0wn.ts(14,48): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpi2hhl0wn.ts(14,65): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result: string = words[0];\n  for\
    \ (let i = 1; i < words.length; i++) {\n    const word = words[i];\n    const\
    \ index = result.indexOf(word);\n    if (index > -1) {\n      result = result.substring(0,\
    \ index) + result.substring(index + 1);\n    } else {\n      result += word;\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppzu9mfzo.ts(17,7): error TS2588: Cannot assign to
    ''result'' because it is a constant.

    ../../../../../tmp/tmppzu9mfzo.ts(19,7): error TS2588: Cannot assign to ''result''
    because it is a constant.

    '
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    const sortedChars = chars.sort((a, b) =>\
    \ a - b);\n    return sortedChars.join('');\n  });\n  return newWords.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a4fb6iw.ts(14,46): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp7a4fb6iw.ts(14,50): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/\\s+/g, ' ').toLowerCase();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp2qunzmtn.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2qunzmtn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ a.charCodeAt() - b.charCodeAt());\n  return sortedWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbh7nyqiu.ts(12,46): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpbh7nyqiu.ts(12,63): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const newWord = word.split('');\n    newWord.sort((a, b) => {\n      return\
    \ a.charCodeAt() - b.charCodeAt();\n    });\n    return newWord.join('');\n  });\n\
    \  return newWords.join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvid_037o.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpvid_037o.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = words.reduce((acc, word)\
    \ => {\n    const newWord = word.split('').sort().join('');\n    return `${acc}\
    \ ${newWord}`;\n  }, '');\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' Hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp9tio93f1.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9tio93f1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' Hi',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(' ');\n  let sortedWords: string[] = [];\n\
    \  for (let i = 0; i < words.length; i++) {\n    sortedWords.push(words[i]);\n\
    \  }\n  for (let i = 0; i < sortedWords.length; i++) {\n    for (let j = i + 1;\
    \ j < sortedWords.length; j++) {\n      if (sortedWords[i].charCodeAt() < sortedWords[j].charCodeAt())\
    \ {\n        let temp = sortedWords[i];\n        sortedWords[i] = sortedWords[j];\n\
    \        sortedWords[j] = temp;\n      }\n    }\n  }\n  return sortedWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9sfd21rz.ts(18,26): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp9sfd21rz.ts(18,56): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = '';\n  for (let i = 0; i < s.length; i++) {\n    let char =\
    \ s[i];\n    let index = s.indexOf(char);\n    if (index > 0) {\n      let next_char\
    \ = s[index - 1];\n      let next_index = s.indexOf(next_char);\n      if (next_index\
    \ > 0) {\n        let next_next_char = s[index - 2];\n        let next_next_index\
    \ = s.indexOf(next_next_char);\n        if (next_next_index > 0) {\n         \
    \ let next_next_next_char = s[index - 3];\n          let next_next_next_index\
    \ = s.indexOf(next_next_next_char);\n          if (next_next_next_index > 0) {\n\
    \            let next_next_next_next_char = s[index - 4];\n            let next_next_next_next_index\
    \ = s.indexOf(next_next_next_next_char);\n            if (next_next_next_next_index\
    \ > 0) {\n              let next_next_next_next_next_char = s[index - 5];\n  \
    \            let next_next_next_next_next_index = s.indexOf(next_next_next_next_next_char);\n\
    \              if (next_next_next_next_next_index > 0) {\n                new_s\
    \ += s[index - 1];\n                new_s += s[index - 2];\n                new_s\
    \ += s[index - 3];\n                new_s += s[index - 4];\n                new_s\
    \ += s[index - 5];\n                new_s += next_char;\n                new_s\
    \ += next_next_char;\n                new_s += next_next_next_char;\n        \
    \        new_s += next_next_next_next_char;\n                new_s += next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_char;\n              \
    \  new_s += next_next_next_next_next_next_next_char;\n                new_s +=\
    \ next_next_next_next_next_next_next_next_char;\n                new_s += next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_s += next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_char;\n\
    \                new_\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5417uops.ts(72,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => a.charCodeAt() - b.charCodeAt());\n\
    \    return chars.join('');\n  });\n  return newWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprynicdm0.ts(14,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmprynicdm0.ts(14,45): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, '').replace(/[a-z]+/g, function (m) {\n    return\
    \ m.charCodeAt(0) - 96;\n  }).replace(/\\s+/g, '');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp782kvxv9.ts(11,51): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 2, '(searchValue: string | RegExp, replaceValue:\
    \ string): string', gave the following error.\n    Argument of type '(m: string)\
    \ => number' is not assignable to parameter of type 'string'.\n  Overload 2 of\
    \ 2, '(searchValue: string | RegExp, replacer: (substring: string, ...args: any[])\
    \ => string): string', gave the following error.\n    Argument of type '(m: string)\
    \ => number' is not assignable to parameter of type '(substring: string, ...args:\
    \ any[]) => string'.\n      Type 'number' is not assignable to type 'string'.\n"
  timestamp: 1659749313
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    const sortedChars = chars.sort((a, b) =>\
    \ a - b);\n    return sortedChars.join('');\n  });\n  return newWords.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a4fb6iw.ts(14,46): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp7a4fb6iw.ts(14,50): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  let newWord = '';\n  for (let i = 0; i <\
    \ words.length; i++) {\n    const word = words[i];\n    const asciiValue = word.charCodeAt(0);\n\
    \    if (asciiValue > 64 && asciiValue < 91) {\n      newWord += word.substring(1);\n\
    \    } else {\n      newWord += word;\n    }\n  }\n  return newWord;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpo35kz2q7.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpo35kz2q7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(' ');\n  let result: string = '';\n  for\
    \ (let i = 0; i < words.length; i++) {\n    let word = words[i];\n    let index\
    \ = word.length - 1;\n    while (index >= 0) {\n      result += word[index];\n\
    \      index--;\n    }\n    result += word[i];\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'iHH'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpzbl_kiem.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzbl_kiem.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'iHH',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const chars = word.split('');\n\
    \    for (let j = 0; j < chars.length; j++) {\n      const char = chars[j];\n\
    \      const ascii = char.charCodeAt(0);\n      if (ascii >= 65 && ascii <= 90)\
    \ {\n        result.push(char);\n      }\n    }\n  }\n  return result.join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpctvdg47p.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpctvdg47p.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ char = s[i];\n    const ascii = char.charCodeAt(0);\n    if (ascii >= 65 &&\
    \ ascii <= 90) {\n      newString += char;\n    } else if (ascii >= 97 && ascii\
    \ <= 122) {\n      newString += char.toUpperCase();\n    } else {\n      newString\
    \ += char;\n    }\n  }\n  return newString;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'HI'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpgu6m8iit.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgu6m8iit.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'HI',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(' ');\n  let result: string = words[0];\n\
    \  for (let i = 1; i < words.length; i++) {\n    let word = words[i];\n    let\
    \ ascii = word.charCodeAt(0);\n    let newWord = '';\n    for (let j = 0; j <\
    \ word.length; j++) {\n      let char = word.charAt(j);\n      if (char === '\
    \ ') {\n        newWord += char;\n      } else {\n        newWord += String.fromCharCode(ascii\
    \ + 1);\n      }\n    }\n    result += newWord;\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpn3gt5z0t.js:34:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpn3gt5z0t.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => a.charCodeAt() - b.charCodeAt());\n\
    \    return chars.join('');\n  });\n  return newWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprynicdm0.ts(14,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmprynicdm0.ts(14,45): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result: string = words.reduce((acc,\
    \ word) => {\n    const chars = word.split('');\n    const sortedChars = chars.sort((a,\
    \ b) => a - b);\n    return acc + sortedChars.join('');\n  }, '');\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8k_jv4mt.ts(14,46): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp8k_jv4mt.ts(14,50): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s[i];\n    if (char === ' ') {\n      newString += char;\n    } else {\n \
    \     let index = newString.indexOf(char);\n      if (index === -1) {\n      \
    \  newString += char;\n      } else {\n        let nextChar = s[index + 1];\n\
    \        if (nextChar === ' ') {\n          newString += char;\n        } else\
    \ {\n          newString += char + nextChar;\n        }\n      }\n    }\n  }\n\
    \  return newString;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helllo'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp3t46a7d6.js:39:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp3t46a7d6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helllo',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([A-Z])/g, function (m) { return m.toLowerCase(); }).replace(/\\\
    s+/g, '');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmprdobseul.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprdobseul.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = '';\n  for (let i = 0; i < s.length; i++) {\n    let char =\
    \ s[i];\n    let index = s.indexOf(char);\n    if (index > -1) {\n      let next_char\
    \ = s[index + 1];\n      let next_index = s.indexOf(next_char);\n      if (next_index\
    \ > -1) {\n        if (next_char === ' ') {\n          new_s += char;\n      \
    \    new_s += next_char;\n        } else {\n          new_s += char;\n       \
    \   new_s += next_char;\n          new_s += s[index + 1];\n        }\n      }\
    \ else {\n        new_s += char;\n      }\n    } else {\n      new_s += char;\n\
    \    }\n  }\n  return new_s;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Hiii'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpr53fgtmz.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpr53fgtmz.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hiii',\n\
    \  expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ a.localeCompare(b));\n  return sortedWords.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmps18jqjbj.js:19:12)\n   \
    \ at Object.<anonymous> (/tmp/tmps18jqjbj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    return a.charCodeAt() - b.charCodeAt();\n  });\n  return sortedWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl4oqk8hi.ts(13,14): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpl4oqk8hi.ts(13,31): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    const sortedChars = chars.sort((a, b) =>\
    \ a - b);\n    return sortedChars.join('');\n  });\n  return newWords.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a4fb6iw.ts(14,46): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp7a4fb6iw.ts(14,50): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ char = s[i];\n    const index = newString.indexOf(char);\n    if (index ===\
    \ -1) {\n      newString += char;\n    } else {\n      const nextChar = s[index\
    \ + 1];\n      const nextIndex = newString.indexOf(nextChar);\n      if (nextIndex\
    \ === -1) {\n        newString += char;\n      } else {\n        newString +=\
    \ char.substring(0, index) + char.substring(index + 1, nextIndex) + nextChar.substring(0,\
    \ nextIndex) + nextChar.substring(nextIndex + 1);\n      }\n    }\n  }\n  return\
    \ newString;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helllo'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpnl31ss0j.js:35:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpnl31ss0j.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helllo',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpm3uipi1j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3uipi1j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let result = '';\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s[i];\n    if (char === ' ') {\n      result += anti_shuffle(s.substring(i\
    \ + 1, s.length));\n      i++;\n    } else {\n      result += char;\n    }\n \
    \ }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpd60w1x2q.js:28:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpd60w1x2q.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(' ');\n  let result: string = '';\n  for\
    \ (let i = 0; i < words.length; i++) {\n    let index = words[i].charCodeAt(0);\n\
    \    if (index > 64 && index < 91) {\n      result += words[i];\n    } else {\n\
    \      result += String.fromCharCode(index - 64);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'('\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpr5nvdbd3.js:28:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpr5nvdbd3.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '(',\n  expected:\
    \ 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s.charAt(i)\
    \ === ' ') {\n      newString += s.charAt(i);\n    } else {\n      newString +=\
    \ String.fromCharCode(s.charCodeAt(i) - 32);\n    }\n  }\n  return newString;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'(I'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpsi1zyp06.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsi1zyp06.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '(I',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = '';\n  for (let i = 0; i < s.length; i += 1) {\n    const char\
    \ = s[i];\n    if (char === ' ') {\n      new_s += '!';\n    } else {\n      new_s\
    \ += char;\n    }\n  }\n  return new_s;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpf_8dwlkh.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpf_8dwlkh.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/\\s+/g, ' ').toLowerCase();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp2qunzmtn.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2qunzmtn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    return a.charCodeAt() - b.charCodeAt();\n  });\n  return sortedWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl4oqk8hi.ts(13,14): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpl4oqk8hi.ts(13,31): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    return a.toLowerCase().charCodeAt(0) - b.toLowerCase().charCodeAt(0);\n\
    \  });\n  return sortedWords.join(' ');\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp088g0w31.js:21:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp088g0w31.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').split(' ').sort().join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpnltg_vuv.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpnltg_vuv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, '').replace(/[a-z]+/gi, c => c.charCodeAt(0)\
    \ - 96);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp_v2gv1bd.ts(11,10): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 2, '(searchValue: string | RegExp, replaceValue:\
    \ string): string', gave the following error.\n    Argument of type '(c: string)\
    \ => number' is not assignable to parameter of type 'string'.\n  Overload 2 of\
    \ 2, '(searchValue: string | RegExp, replacer: (substring: string, ...args: any[])\
    \ => string): string', gave the following error.\n    Type 'number' is not assignable\
    \ to type 'string'.\n"
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpm3uipi1j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3uipi1j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => a.charCodeAt() - b.charCodeAt());\n\
    \    return chars.join('');\n  });\n  return newWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprynicdm0.ts(14,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmprynicdm0.ts(14,45): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, '').replace(/[a-z]+/gi, c => c.charCodeAt(0)\
    \ - 96);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp_v2gv1bd.ts(11,10): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 2, '(searchValue: string | RegExp, replaceValue:\
    \ string): string', gave the following error.\n    Argument of type '(c: string)\
    \ => number' is not assignable to parameter of type 'string'.\n  Overload 2 of\
    \ 2, '(searchValue: string | RegExp, replacer: (substring: string, ...args: any[])\
    \ => string): string', gave the following error.\n    Type 'number' is not assignable\
    \ to type 'string'.\n"
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(' ');\n  let result: string = words[0];\n\
    \  for (let i = 1; i < words.length; i++) {\n    let word = words[i];\n    let\
    \ index = result.length;\n    while (index > 0) {\n      let char = result.charCodeAt(index\
    \ - 1);\n      if (char > 97 && char < 123) {\n        index--;\n      } else\
    \ if (char > 64 && char < 91) {\n        index--;\n      } else if (char > 47\
    \ && char < 58) {\n        index--;\n      } else {\n        break;\n      }\n\
    \    }\n    result = result.substring(0, index) + word + result.substring(index,\
    \ result.length);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpsp_vbf1r.js:39:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpsp_vbf1r.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s[i];\n    if (char === ' ') {\n      newString += ' ';\n    } else {\n  \
    \    let ascii = char.charCodeAt(0);\n      let newChar = String.fromCharCode(ascii\
    \ - 1);\n      newString += newChar;\n    }\n  }\n  return newString;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Gh'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp_vlrz24a.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_vlrz24a.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Gh',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => a.charCodeAt() - b.charCodeAt());\n\
    \    return chars.join('');\n  });\n  return newWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprynicdm0.ts(14,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmprynicdm0.ts(14,45): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2')\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpvd96fqem.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvd96fqem.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' H i',\n\
    \  expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ char = s[i];\n    const index = s.indexOf(char);\n    if (index > 0) {\n   \
    \   const nextChar = s[index - 1];\n      const nextIndex = s.indexOf(nextChar);\n\
    \      if (nextIndex > 0) {\n        const nextNextChar = s[nextIndex - 1];\n\
    \        const nextNextIndex = s.indexOf(nextNextChar);\n        if (nextNextIndex\
    \ > 0) {\n          const nextNextNextChar = s[nextNextIndex - 1];\n         \
    \ const nextNextNextIndex = s.indexOf(nextNextNextChar);\n          if (nextNextNextIndex\
    \ > 0) {\n            const nextNextNextNextChar = s[nextNextNextIndex - 1];\n\
    \            const nextNextNextNextIndex = s.indexOf(nextNextNextNextChar);\n\
    \            if (nextNextNextNextIndex > 0) {\n              const nextNextNextNextNextChar\
    \ = s[nextNextNextNextIndex - 1];\n              const nextNextNextNextNextIndex\
    \ = s.indexOf(nextNextNextNextNextChar);\n              if (nextNextNextNextNextIndex\
    \ > 0) {\n                const nextNextNextNextNextNextChar = s[nextNextNextNextNextIndex\
    \ - 1];\n                const nextNextNextNextNextNextIndex = s.indexOf(nextNextNextNextNextNextChar);\n\
    \                if (nextNextNextNextNextNextIndex > 0) {\n                  const\
    \ nextNextNextNextNextNextNextChar = s[nextNextNextNextNextNextIndex - 1];\n \
    \                 const nextNextNextNextNextNextNextIndex = s.indexOf(nextNextNextNextNextNextNextChar);\n\
    \                  if (nextNextNextNextNextNextNextIndex > 0) {\n            \
    \        const nextNextNextNextNextNextNextNextChar = s[nextNextNextNextNextNextNextIndex\
    \ - 1];\n                    const nextNextNextNextNextNextNextNextIndex = s.indexOf(nextNextNextNextNextNextNextNextChar);\n\
    \                    if (nextNextNextNextNextNextNextNextIndex > 0) {\n      \
    \                const nextNextNextNextNextNextNextNextNextChar = s[nextNextNextNextNextNextNextNextIndex\
    \ - 1];\n                      const nextNextNextNextNextNextNextNextIndex = s.indexOf(nextNextNextNextNextNextNextNextNextChar);\n\
    \                      if (nextNextNextNextNextNextNextNextNextIndex > 0) {\n\
    \                        const nextNextNextNextNextNextNextNextNextChar = s[nextNextNextNextNextNextNextNextNextIndex\
    \ - 1];\n                        const nextNextNextNextNextNextNextNextNextIndex\
    \ = s.indexOf(nextNextNextNextNextNextNextNextNextNextChar);\n               \
    \         if (nextNextNextNextNextNextNextNextNextIndex > 0) {\n             \
    \             const nextNextNextNextNextNextNextNext\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppja2w9_z.ts(62,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpm3uipi1j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3uipi1j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    const aCharCode = a.charCodeAt(0);\n    const bCharCode = b.charCodeAt(0);\n\
    \    return aCharCode - bCharCode;\n  });\n  return sortedWords.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpq81wcdqo.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpq81wcdqo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s.charAt(i)\
    \ === ' ') {\n      newString += s.charAt(i);\n    } else {\n      newString +=\
    \ String.fromCharCode(s.charCodeAt(i) - 32);\n    }\n  }\n  return newString;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'(I'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpsi1zyp06.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsi1zyp06.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '(I',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const ascii = word.charCodeAt(0);\n\
    \    if (ascii >= 65 && ascii <= 90) {\n      result.push(word);\n    }\n  }\n\
    \  return result.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'ehllo'\n    at test (/tmp/tmpdbox0rel.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdbox0rel.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const ascii = word.charCodeAt(0);\n\
    \    result.push(word);\n    for (let j = i + 1; j < words.length; j++) {\n  \
    \    const nextWord = words[j];\n      const nextAscii = nextWord.charCodeAt(0);\n\
    \      if (nextAscii < ascii) {\n        result.push(nextWord);\n        ascii\
    \ = nextAscii;\n      }\n    }\n  }\n  return result.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3x2kw99j.ts(22,9): error TS2588: Cannot assign to
    ''ascii'' because it is a constant.

    '
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(\" \");\n  let result: string = \"\";\n \
    \ for (let i = 0; i < words.length; i++) {\n    let word = words[i];\n    let\
    \ ascii = word.charCodeAt(0);\n    let newWord = \"\";\n    for (let j = 0; j\
    \ < word.length; j++) {\n      let char = word.charAt(j);\n      if (char == \"\
    \ \") {\n        newWord += char;\n      } else {\n        newWord += String.fromCharCode(ascii\
    \ + 1);\n      }\n    }\n    result += newWord;\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'II'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp6aq8asd3.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6aq8asd3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'II',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ a.charCodeAt() - b.charCodeAt());\n  return sortedWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbh7nyqiu.ts(12,46): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpbh7nyqiu.ts(12,63): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    const sortedChars = chars.sort((a, b) =>\
    \ a - b);\n    return sortedChars.join('');\n  });\n  return newWords.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a4fb6iw.ts(14,46): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp7a4fb6iw.ts(14,50): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\"\
    );\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpqfomzq3w.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqfomzq3w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' H i',\n\
    \  expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, '').replace(/[a-z]/gi, c => String.fromCharCode(c.charCodeAt(0)\
    \ - 32))\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'(I'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp1wy686bz.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1wy686bz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '(I',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const ascii = word.charCodeAt(0);\n\
    \    if (ascii >= 65 && ascii <= 90) {\n      result.push(word);\n    } else {\n\
    \      result.push(word.slice(0, 1));\n    }\n  }\n  return result.join('');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'h'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp7lsq2zbf.js:29:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp7lsq2zbf.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'h',\n  expected:\
    \ 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = '';\n  for (let i = 0; i < s.length; i++) {\n    const char\
    \ = s[i];\n    const ascii = char.charCodeAt(0);\n    if (ascii >= 65 && ascii\
    \ <= 90) {\n      new_s += char;\n    } else if (ascii >= 97 && ascii <= 122)\
    \ {\n      new_s += char.toUpperCase();\n    } else {\n      new_s += char;\n\
    \    }\n  }\n  return new_s;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'HI'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpncxfnfdp.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpncxfnfdp.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'HI',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpm3uipi1j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3uipi1j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    const aCharCode = a.charCodeAt(0);\n    const bCharCode = b.charCodeAt(0);\n\
    \    return aCharCode - bCharCode;\n  });\n  return sortedWords.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpq81wcdqo.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpq81wcdqo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words = s.split(' ');\n  let result = '';\n  for (let i = 0; i < words.length;\
    \ i++) {\n    let word = words[i];\n    let ascii = word.charCodeAt(0);\n    if\
    \ (ascii > 96 && ascii < 123) {\n      result += word.substr(0, word.length -\
    \ 1);\n    } else {\n      result += word;\n    }\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hell'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpalsjjp3p.js:29:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpalsjjp3p.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hell',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ char = s[i];\n    if (char === ' ') {\n      newString += ' ';\n    } else {\n\
    \      const asciiValue = char.charCodeAt(0);\n      if (asciiValue > 64 && asciiValue\
    \ < 91) {\n        newString += char;\n      } else {\n        newString += String.fromCharCode(asciiValue\
    \ + 32);\n      }\n    }\n  }\n  return newString;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H\\x89'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpiipjh4pz.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpiipjh4pz.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H\\x89',\n\
    \  expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    return a.charCodeAt() - b.charCodeAt();\n  });\n  return sortedWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl4oqk8hi.ts(13,14): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpl4oqk8hi.ts(13,31): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s.charAt(i)\
    \ === ' ') {\n      result += s.substr(0, i);\n      result += anti_shuffle(s.substr(i\
    \ + 1));\n    } else {\n      result += s.charAt(i);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpuwnszn2u.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpuwnszn2u.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let words = s.split(' ');\n  let result = '';\n  for (let i = 0; i < words.length;\
    \ i++) {\n    let word = words[i];\n    let ascii = word.charCodeAt(0);\n    if\
    \ (ascii >= 65 && ascii <= 90) {\n      result += word.slice(0, 1) + word.slice(1)\
    \ + word.charAt(1).toLowerCase();\n    } else {\n      result += word;\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Hii'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpzib9hari.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzib9hari.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hii',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => {\n      return a.charCodeAt()\
    \ - b.charCodeAt();\n    });\n    return chars.join('');\n  });\n  return newWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2uxom_20.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp2uxom_20.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let result = '';\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s[i];\n    if (char === ' ') {\n      result += char;\n    } else {\n    \
    \  result += char.charCodeAt(0) - 97;\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'-258'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpg3dltmhy.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpg3dltmhy.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '-258',\n\
    \  expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    return a.charCodeAt() - b.charCodeAt();\n  });\n  return sortedWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl4oqk8hi.ts(13,14): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpl4oqk8hi.ts(13,31): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpm3uipi1j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3uipi1j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const index = word.length\
    \ - 1;\n    while (index >= 0) {\n      result.push(word.slice(0, index));\n \
    \     index--;\n    }\n  }\n  return result.join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqv_i2h70.ts(18,7): error TS2588: Cannot assign to
    ''index'' because it is a constant.

    '
  timestamp: 1659749317
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    const aCharCode = a.charCodeAt(0);\n    const bCharCode = b.charCodeAt(0);\n\
    \    return aCharCode - bCharCode;\n  });\n  return sortedWords.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpq81wcdqo.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpq81wcdqo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = '';\n  for (let i = 0; i < s.length; i++) {\n    const char\
    \ = s[i];\n    if (char === ' ') {\n      new_s += '!';\n    } else {\n      new_s\
    \ += char;\n    }\n  }\n  return new_s;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpu21805lp.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpu21805lp.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749317
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => {\n      return a.charCodeAt()\
    \ - b.charCodeAt();\n    });\n    return chars.join('');\n  });\n  return newWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2uxom_20.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp2uxom_20.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    const sortedChars = chars.sort((a, b) =>\
    \ a - b);\n    return sortedChars.join('');\n  });\n  return newWords.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7a4fb6iw.ts(14,46): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp7a4fb6iw.ts(14,50): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => a.charCodeAt() - b.charCodeAt());\n\
    \    return chars.join('');\n  });\n  return newWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprynicdm0.ts(14,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmprynicdm0.ts(14,45): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const newWord = word.split('');\n    newWord.sort((a, b) => {\n      return\
    \ a.charCodeAt() - b.charCodeAt();\n    });\n    return newWord.join('');\n  });\n\
    \  return newWords.join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvid_037o.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpvid_037o.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    return a.charCodeAt() - b.charCodeAt();\n  });\n  return sortedWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl4oqk8hi.ts(13,14): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpl4oqk8hi.ts(13,31): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  let newString = '';\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s[i];\n    if (char === ' ') {\n      newString += char;\n    } else {\n \
    \     let asciiValue = char.charCodeAt(0);\n      if (asciiValue < 97) {\n   \
    \     newString += char;\n      } else if (asciiValue < 123) {\n        newString\
    \ += String.fromCharCode((asciiValue - 97) + 26);\n      } else if (asciiValue\
    \ < 127) {\n        newString += String.fromCharCode((asciiValue - 123) + 52);\n\
    \      } else {\n        newString += char;\n      }\n    }\n  }\n  return newString;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H\"'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmprructelm.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprructelm.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H\"',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749317
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => {\n      return a.charCodeAt()\
    \ - b.charCodeAt();\n    });\n    return chars.join('');\n  });\n  return newWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2uxom_20.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp2uxom_20.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749316
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpb8s3f_pk.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8s3f_pk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpm3uipi1j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3uipi1j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749314
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').replace(/\\w+/g, function (w) {\n    return\
    \ w.split('')\n      .sort(function (a, b) {\n        return a.charCodeAt() -\
    \ b.charCodeAt();\n      })\n      .join('');\n  });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwq1qikz3.ts(14,18): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpwq1qikz3.ts(14,35): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749317
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const sortedWords = words.sort((a, b) =>\
    \ {\n    const aCharCode = a.charCodeAt(0);\n    const bCharCode = b.charCodeAt(0);\n\
    \    return aCharCode - bCharCode;\n  });\n  return sortedWords.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpq81wcdqo.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpq81wcdqo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749316
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const newWord = word.split('');\n    newWord.sort((a, b) => {\n      return\
    \ a.charCodeAt() - b.charCodeAt();\n    });\n    return newWord.join('');\n  });\n\
    \  return newWords.join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvid_037o.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpvid_037o.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map((word) => {\n\
    \    const chars = word.split('');\n    chars.sort((a, b) => {\n      return a.charCodeAt()\
    \ - b.charCodeAt();\n    });\n    return chars.join('');\n  });\n  return newWords.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2zvsd_jc.ts(15,16): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp2zvsd_jc.ts(15,33): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749317
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result: string = words.reduce((prev:\
    \ string, current: string) => {\n    const ascii = current.charCodeAt(0);\n  \
    \  const newChar = String.fromCharCode(ascii + 1);\n    return prev + newChar;\n\
    \  }, '');\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'I'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmptxy05i3s.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptxy05i3s.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'I',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749317
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp30u0cppg.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp30u0cppg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738893
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const newWords = words.map(word => {\n \
    \   const chars = word.split('');\n    chars.sort((a, b) => a.charCodeAt() - b.charCodeAt());\n\
    \    return chars.join('');\n  });\n  return newWords.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprynicdm0.ts(14,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmprynicdm0.ts(14,45): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659749313

language: ts
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp3ylh3o1e.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ylh3o1e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n  }\n\
    \  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return -1;\n\
    \  }\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp49wcezqb.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp49wcezqb.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.abs(a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n\tif (area > 1) {\n\t\treturn area;\n\t} else {\n\t\treturn -1;\n\t}\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.48528137423857\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptrd2l4ot.js:21:12)\n  \
    \  at Object.<anonymous> (/tmp/tmptrd2l4ot.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.48528137423857,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiklj3cba.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiklj3cba.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b) {\n\
    \        if (b < c) {\n            return (a * b) / c;\n        } else {\n   \
    \         return -1;\n        }\n    } else {\n        if (c < a) {\n        \
    \    return -1\n        } else {\n            return (b * c) / a;\n        }\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqz9bzp4i.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqz9bzp4i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = 0.0;\n    if (a > b && a > c) {\n        area = a * b;\n    } else if (b >\
    \ c && b > a) {\n        area = b * c;\n    } else {\n        area = c * c;\n\
    \    }\n    return Math.round(area / 2) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp4pn1396w.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4pn1396w.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.abs((a\
    \ * b + c * a - b * c + a * b - c * b - a * c + b * a + c * c - a * b - b * c)\
    \ / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp8b3k6wps.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8b3k6wps.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n    let\
    \ area = 0;\n    area += a * b + c * b;\n    area += a * c + b * c;\n    area\
    \ += a * b + c * c;\n    return Math.round(area / 2) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpdgsrrfzc.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdgsrrfzc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n    return\
    \ -1;\n  }\n  return (b + c) * 0.5;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuet9jqgt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuet9jqgt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a + b > c\
    \ && a + c > b && b + c > a) {\n        return Math.sqrt(Math.pow((a + b), 2)\
    \ + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n    } else {\n        return\
    \ -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl2svr7i2.js:20:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpl2svr7i2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfjy8q4fo.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjy8q4fo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b - a)\
    \ * (c - b) * (a - c) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgqd5b5m6.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqd5b5m6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a > b && a >\
    \ c) {\n    return a * 0.5\n  } else if (b > c && b > a) {\n    return b * 0.5\n\
    \  } else {\n    return c * 0.5\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpcgzvyubz.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcgzvyubz.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area >= 0) {\n        return Math.round(area * 100) / 100;\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsa7qvktm.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsa7qvktm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let side1 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n    let side2 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n    let side3 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n    let area\
    \ = Math.round((side1 + side2 + side3) / 2);\n    return area > 0 ? area : -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpdzcd_uzs.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdzcd_uzs.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\
    \ {\n        area = Math.round(area / Math.pow(a, 2)) * Math.round(area / Math.pow(b,\
    \ 2)) * Math.round(area / Math.pow(c, 2));\n    }\n    return area;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgshbouyx.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgshbouyx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.abs((a\
    \ * b + c * a - b * c + a * c - b * a + c * b - a * b - c * a) / 2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvicna2s7.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvicna2s7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area * 100)\
    \ / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpp37yudo9.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpp37yudo9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c || a + c > b ||\
    \ b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b\
    \ + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpxktw0sz0.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxktw0sz0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c && b > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n \
    \   return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpu_5rrio_.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu_5rrio_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjpjcmwhd.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpjcmwhd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    let area: number\
    \ = Math.abs(a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n    return Math.round(area * 100) / 100;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuc2j_6ht.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuc2j_6ht.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b || b < a + c || b < c + a) {\n    return -1;\n  }\n  return (b - a)\
    \ * (c - b) * (a - c) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp8fodydda.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8fodydda.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a + b > c\
    \ && a + c > b && b + c > a) {\n        return Math.sqrt(Math.pow((a + b), 2)\
    \ + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n    } else {\n        return\
    \ -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl2svr7i2.js:20:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpl2svr7i2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0 || b <\
    \ 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tif (a + b > c) {\n\t\treturn -1;\n\t}\n\
    \tif (a + c > b) {\n\t\treturn -1;\n\t}\n\tif (b + c > a) {\n\t\treturn -1;\n\t\
    }\n\treturn Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpd9uv3tl8.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd9uv3tl8.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area_sum:\
    \ number = a + b + c;\n    if (area_sum < 0)\n        return -1;\n    let area_sqr:\
    \ number = area_sum * area_sum;\n    let area_product: number = a * b * c;\n \
    \   let area_third_side: number = area_product / area_sqr;\n    return Math.round(area_third_side\
    \ * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.42\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp7jb30cir.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7jb30cir.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.42,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n    else if\
    \ (b > a && b > c) {\n        return Math.sqrt(b * b + c * c + a * a);\n    }\n\
    \    else if (c > a && c > b) {\n        return Math.sqrt(c * c + a * a * b +\
    \ b * b);\n    }\n    else {\n        return -1;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.774964387392123\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpgqzcbmag.js:26:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpgqzcbmag.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.774964387392123,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b) / c;\n\tif (area > 1) {\n\t\treturn Math.round(area * 100) / 100;\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpnjwp_zwo.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnjwp_zwo.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c) / 2;\n    if (area >= 0) {\n        return area;\n    } else {\n\
    \        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp6exaejay.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6exaejay.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfjy8q4fo.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjy8q4fo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b) / 2;\n    if (a > b && a > c) {\n        area = (a * c) / 2;\n   \
    \ }\n    else if (b > a && b > c) {\n        area = (b * c) / 2;\n    }\n    else\
    \ if (c > a && c > b) {\n        area = (c * b) / 2;\n    }\n    return Math.round(area\
    \ * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4hs5w8_k.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4hs5w8_k.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b - a)\
    \ * (c - a) / 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfzd_4ayl.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfzd_4ayl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b * c) / 2;\n\tif (area > 0 && area < 1) {\n\t\treturn Math.round(area\
    \ * 100) / 100;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqa02to22.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqa02to22.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    const abs = Math.abs(a) + Math.abs(b)\
    \ + Math.abs(c);\n    if (abs > 1) {\n        return -1;\n    }\n    if (a ==\
    \ 0 || b == 0 || c == 0 || a == b || a == c || b == c) {\n        return 0;\n\
    \    }\n    if (a > b) {\n        const t = a;\n        a = b;\n        b = t;\n\
    \    }\n    if (a > c) {\n        const t = a;\n        a = c;\n        c = t;\n\
    \    }\n    if (b > c) {\n        const t = b;\n        b = c;\n        c = t;\n\
    \    }\n    const s = (a + b + c) / 2;\n    return Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp7ie64kqd.js:41:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7ie64kqd.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let s = a + b + c;\n    if (s\
    \ > 0) {\n        return Math.round(s * (Math.sqrt(3) / 2));\n    }\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp5vud1878.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vud1878.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b) {\n\
    \        if (b < c) {\n            return (a * b) / c;\n        } else {\n   \
    \         return -1;\n        }\n    } else {\n        if (c < a) {\n        \
    \    return -1\n        } else {\n            return (b * c) / a;\n        }\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqz9bzp4i.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqz9bzp4i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiklj3cba.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiklj3cba.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n    return\
    \ (b - a) * (c - b) \n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsm9hchbt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsm9hchbt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ b < a + c || c < a + b) {\n    return -1;\n  }\n  return (b - a) * (c - a) /\
    \ 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpeoknfdog.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeoknfdog.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a + b > c\
    \ && a + c > b && b + c > a) return Math.sqrt(Math.pow((a + b), 2) + Math.pow((a\
    \ + c), 2) + Math.pow((b + c), 2));\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplp9ppiik.js:17:12)\n  \
    \  at Object.<anonymous> (/tmp/tmplp9ppiik.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjpjcmwhd.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpjcmwhd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b - a)\
    \ * (c - b) * (a - c) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgqd5b5m6.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqd5b5m6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = (a + b +\
    \ c) / 2;\n    if (area > c) {\n        area = c;\n    }\n    if (area < a) {\n\
    \        area = a;\n    }\n    return Math.round(area * 100) / 100;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpedolq8x4.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpedolq8x4.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjpjcmwhd.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpjcmwhd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area_sum: number\
    \ = 0;\n\tlet area_product: number = 0;\n\tlet area_third_side: number = 0;\n\t\
    let area_third_side_product: number = 0;\n\tlet area_third_side_product2: number\
    \ = 0;\n\tlet area_third_side_product3: number = 0;\n\tlet area_third_side_product4:\
    \ number = 0;\n\tlet area_third_side_product5: number = 0;\n\tlet area_third_side_product6:\
    \ number = 0;\n\tlet area_third_side_product7: number = 0;\n\tlet area_third_side_product8:\
    \ number = 0;\n\tlet area_third_side_product9: number = 0;\n\tlet area_third_side_product10:\
    \ number = 0;\n\tlet area_third_side_product11: number = 0;\n\tlet area_third_side_product12:\
    \ number = 0;\n\tlet area_third_side_product13: number = 0;\n\tlet area_third_side_product14:\
    \ number = 0;\n\tlet area_third_side_product15: number = 0;\n\tlet area_third_side_product16:\
    \ number = 0;\n\tlet area_third_side_product17: number = 0;\n\tlet area_third_side_product18:\
    \ number = 0;\n\tlet area_third_side_product19: number = 0;\n\tlet area_third_side_product20:\
    \ number = 0;\n\tlet area_third_side_product21: number = 0;\n\tlet area_third_side_product22:\
    \ number = 0;\n\tlet area_third_side_product23: number = 0;\n\tlet area_third_side_product24:\
    \ number = 0;\n\tlet area_third_side_product25: number = 0;\n\tlet area_third_side_product26:\
    \ number = 0;\n\tlet area_third_side_product27: number = 0;\n\tlet area_third_side_product28:\
    \ number = 0;\n\tlet area_third_side_product29: number = 0;\n\tlet area_third_side_product30:\
    \ number = 0;\n\tlet area_third_side_product31: number = 0;\n\tlet area_third_side_product32:\
    \ number = 0;\n\tlet area_third_side_product33: number = 0;\n\tlet area_third_side_product34:\
    \ number = 0;\n\tlet area_third_side_product35: number = 0;\n\tlet area_third_side_product36:\
    \ number = 0;\n\tlet area_third_side_product37: number = 0;\n\tlet area_third_side_product38:\
    \ number = 0;\n\tlet area_third_side_product39: number = 0;\n\tlet area_third_side_product40:\
    \ number = 0;\n\tlet area_third_side_product41: number = 0;\n\tlet area_third_side_product42:\
    \ number = 0;\n\tlet area_third_side_product43: number = 0;\n\tlet area_third_side_product44:\
    \ number = 0;\n\tlet area_third_side_product45: \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpozvf6xjl.ts(58,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpozvf6xjl.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjfgpexgn.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjfgpexgn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b * c) / 2;\n\tif (area > 0 && area < 1) {\n\t\treturn area;\n\t} else\
    \ {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpazmsbaib.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazmsbaib.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl5hsazmu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5hsazmu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a === 0 || b\
    \ === 0 || c === 0) {\n\t\treturn -1;\n\t}\n\tlet s = a + b + c;\n\treturn s /\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.1543033499620919\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx6tcph8v.js:19:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpx6tcph8v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.1543033499620919,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tif (a + b > c) {\n\t\ts = a + b - c;\n\t} else if (a + c > b) {\n\t\ts = a +\
    \ c - b;\n\t} else if (b + c > a) {\n\t\ts = b + c - a;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n\treturn Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpwtri50ak.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwtri50ak.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.abs(a * b * c);\n\tlet isValid: boolean;\n\tlet isValidArea: number =\
    \ Math.abs(a * b * c);\n\tlet isValidArea2: number = Math.abs(a * b * c);\n\t\
    let isValidArea3: number = Math.abs(a * b * c);\n\tlet isValidArea4: number =\
    \ Math.abs(a * b * c);\n\tlet isValidArea5: number = Math.abs(a * b * c);\n\t\
    let isValidArea6: number = Math.abs(a * b * c);\n\tlet isValidArea7: number =\
    \ Math.abs(a * b * c);\n\tlet isValidArea8: number = Math.abs(a * b * c);\n\t\
    let isValidArea9: number = Math.abs(a * b * c);\n\tlet isValidArea10: number =\
    \ Math.abs(a * b * c);\n\tlet isValidArea11: number = Math.abs(a * b * c);\n\t\
    let isValidArea12: number = Math.abs(a * b * c);\n\tlet isValidArea13: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea14: number = Math.abs(a * b * c);\n\
    \tlet isValidArea15: number = Math.abs(a * b * c);\n\tlet isValidArea16: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea17: number = Math.abs(a * b * c);\n\
    \tlet isValidArea18: number = Math.abs(a * b * c);\n\tlet isValidArea19: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea20: number = Math.abs(a * b * c);\n\
    \tlet isValidArea21: number = Math.abs(a * b * c);\n\tlet isValidArea22: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea23: number = Math.abs(a * b * c);\n\
    \tlet isValidArea24: number = Math.abs(a * b * c);\n\tlet isValidArea25: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea26: number = Math.abs(a * b * c);\n\
    \tlet isValidArea27: number = Math.abs(a * b * c);\n\tlet isValidArea28: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea29: number = Math.abs(a * b * c);\n\
    \tlet isValidArea30: number = Math.abs(a * b * c);\n\tlet isValidArea31: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea32: number = Math.abs(a * b * c);\n\
    \tlet isValidArea33: number = Math.abs(a * b * c);\n\tlet isValidArea34: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea35: number = Math.abs(a * b * c);\n\
    \tlet isValidArea36: number = Math.abs(a * b * c);\n\tlet isValidArea37: number\
    \ = Math.abs(a * b * c);\n\tlet isValidArea38: number = Math.abs(a * b * c);\n\
    \tlet isValidArea39: \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_i1kim0u.ts(51,9): error TS1005: '','' expected.

    ../../../../../tmp/tmp_i1kim0u.ts(68,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659749756
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    let s = (a + b\
    \ + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpa_v6pxq6.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpa_v6pxq6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b) / c;\n    if (area > 1) {\n        area = Math.round(area * 100) /\
    \ 100;\n    }\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp7nyvvjrd.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7nyvvjrd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let s = a + b + c;\n    if (s\
    \ > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphwdzwquw.js:22:12)\n  \
    \  at Object.<anonymous> (/tmp/tmphwdzwquw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b < c) {\n        return\
    \ -1;\n    }\n    if (a + c < b) {\n        return -1;\n    }\n    if (b + c <\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2kh04n5s.js:27:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp2kh04n5s.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area_sum: number\
    \ = (a * b) + (c * c);\n\tlet area_rounded: number = Math.round(area_sum * 100)\
    \ / 100;\n\treturn area_rounded;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n37\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprbtck9l1.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprbtck9l1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 37,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiklj3cba.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiklj3cba.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.abs(a * b * c);\n\tlet isValid: number = area >= 0;\n\tif (isValid) {\n\
    \t\tarea = Math.round(area * 100) / 100;\n\t}\n\treturn area;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphtdka5r_.ts(11,6): error TS2322: Type ''boolean''
    is not assignable to type ''number''.

    '
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  const s = (a + b + c) / 2;\n  return Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpjd_abynl.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjd_abynl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    } else if (b >\
    \ a && b > c) {\n        return Math.sqrt(b * b + c * c + a * a);\n    } else\
    \ {\n        return Math.sqrt(c * c + a * a);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5.830951894845301\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp59h0vn04.js:23:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp59h0vn04.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5.830951894845301,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjfgpexgn.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjfgpexgn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c || a + c > b ||\
    \ b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b\
    \ + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpxktw0sz0.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxktw0sz0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b + c\
    \ || b > a + c || c > a + b) return -1;\n    return (b - a) * (c - a) * (a - b)\
    \ * (b - c) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79mp0rvm.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79mp0rvm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = 0.0;\n\tlet side1: number = a;\n\tlet side2: number = b;\n\tlet side3: number\
    \ = c;\n\tlet sideSum: number = side1 + side2 + side3;\n\tlet isValid: boolean;\n\
    \t\n\tif (sideSum > side3) {\n\t\tisValid = true;\n\t} else {\n\t\tisValid = false;\n\
    \t}\n\t\n\tif (isValid) {\n\t\tarea = Math.sqrt(Math.pow(side1, 2) + Math.pow(side2,\
    \ 2) + Math.pow(side3, 2));\n\t\tarea = Math.round(area / 100) * 100;\n\t}\n\t\
    \n\treturn area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp_9hevxcr.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_9hevxcr.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.abs(a * b * c);\n\tif (area >= 0)\n\t\treturn area;\n\telse\n\t\treturn\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpwh6shi55.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwh6shi55.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let s = a + b\
    \ + c;\n    if (s > 0) {\n        let area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n        return Math.round(area / 2) * 2;\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n78\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4r8txc4w.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4r8txc4w.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 78,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b) / c;\n    if (area > 0)\n        return Math.round(area * 100) / 100;\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmptc0fn5aj.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptc0fn5aj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area = 0;\n    if (a + b\
    \ > c) {\n        area = -1;\n    } else {\n        area = Math.sqrt(Math.pow((a\
    \ + b), 2) + Math.pow(c, 2));\n    }\n    return Math.round(area * 100) / 100;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgld5t8i5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgld5t8i5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpslaglcir.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpslaglcir.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c);\n    if (area >= 0)\n        return Math.round(area * 100) /\
    \ 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp50zru241.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp50zru241.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp23aernbg.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp23aernbg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b) return -1;\n    if (a > b + c || a > c + b) return -1;\n    if\
    \ (b > a + c || b > c + a) return -1;\n    if (c > a + b || c > b + a) return\
    \ -1;\n    return (b + c) / 2;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpv184agki.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv184agki.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjfgpexgn.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjfgpexgn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0 || b <\
    \ 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tif (a + b > c) {\n\t\treturn -1;\n\t}\n\
    \tif (a + c > b) {\n\t\treturn -1;\n\t}\n\tif (b + c > a) {\n\t\treturn -1;\n\t\
    }\n\treturn Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpd9uv3tl8.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd9uv3tl8.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\tif (area > c) {\n\t\treturn\
    \ area;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuydsht05.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuydsht05.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    let area: number = Math.abs((a * b + c * a - b * c +\
    \ a * c - c * b - a * b * c) / 2);\n    return area > 0 ? area : -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp5yudgb7o.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5yudgb7o.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = 0.0;\n\tlet sideA: number = Math.abs(a);\n\tlet sideB: number = Math.abs(b);\n\
    \tlet sideC: number = Math.abs(c);\n\tlet sideAB: number = sideA + sideB;\n\t\
    let sideAC: number = sideA + sideC;\n\tlet sideBC: number = sideB + sideC;\n\t\
    let sideACB: number = sideA + sideB + sideC;\n\tlet isValid: boolean;\n\t\n\t\
    if (sideAB > sideAC && sideAB > sideBC) {\n\t\tarea = sideAB;\n\t\tisValid = true;\n\
    \t} else if (sideAC > sideAB && sideAC > sideBC) {\n\t\tarea = sideAC;\n\t\tisValid\
    \ = true;\n\t} else if (sideBC > sideAB && sideBC > sideAC) {\n\t\tarea = sideBC;\n\
    \t\tisValid = true;\n\t} else if (sideAB == sideAC && sideAB == sideBC) {\n\t\t\
    area = sideAB;\n\t\tisValid = true;\n\t} else if (sideAC == sideAB && sideAC ==\
    \ sideBC) {\n\t\tarea = sideAC;\n\t\tisValid = true;\n\t} else if (sideBC == sideAB\
    \ && sideBC == sideAC) {\n\t\tarea = sideBC;\n\t\tisValid = true;\n\t} else if\
    \ (sideAB == sideAC && sideAC == sideBC) {\n\t\tarea = sideAB;\n\t\tisValid =\
    \ true;\n\t} else if (sideBC == sideAB && sideBC == sideAC) {\n\t\tarea = sideBC;\n\
    \t\tisValid = true;\n\t} else if (sideAB == sideBC && sideAB == sideAC) {\n\t\t\
    area = sideAB;\n\t\tisValid = true;\n\t} else if (sideAC == sideBC && sideAC ==\
    \ sideBC) {\n\t\tarea = sideAC;\n\t\tisValid = true;\n\t} else if (sideBC == sideBC\
    \ && sideBC == sideAC) {\n\t\tarea = sideBC;\n\t\tisValid = true;\n\t} else {\n\
    \t\tarea = -1;\n\t\tisValid = false;\n\t}\n\treturn area;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpucki5nre.js:72:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpucki5nre.js:82:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n  }\n\
    \  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return -1;\n\
    \  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpibo7nwio.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpibo7nwio.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749761
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b) / c;\n    if (area >= 0) {\n        return Math.round(area * 100)\
    \ / 100;\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp5ldb3biq.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ldb3biq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl5hsazmu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5hsazmu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    let area = 0;\n    area += a * b * c;\n    area -= a\
    \ * (b + c) * 2;\n    area -= b * (a + c) * 2;\n    area -= c * (a + b) * 2;\n\
    \    return Math.round(area / Math.sqrt(3)) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmptv9x3kdf.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptv9x3kdf.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0 || b <\
    \ 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet s = a + b + c;\n\tif (s % 2 === 0)\
    \ {\n\t\treturn s / 2;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpeaizk4qi.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeaizk4qi.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749761
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b < c) {\n        return\
    \ -1;\n    }\n    if (a + c < b) {\n        return -1;\n    }\n    if (b + c <\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2kh04n5s.js:27:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp2kh04n5s.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  const s = (a + b + c) / 2;\n  const area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  return area > 0 ? area : -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpoulqgt84.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoulqgt84.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet s = a + b +\
    \ c;\n\tif (s > a * a + b * b + c * c) {\n\t\treturn -1;\n\t}\n\treturn Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpj6wc50o2.js:19:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpj6wc50o2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let side1 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n    let side2 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n    let side3 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n    let area:\
    \ number = side1 * side2 * side3;\n    if (area > 0)\n        return Math.round(area\
    \ * 100) / 100;\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n186.68\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp1keszydg.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1keszydg.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 186.68,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area_a = Math.abs(a\
    \ * b - c * c);\n    let area_b = Math.abs(a * c - b * b);\n    let area_c = Math.abs(a\
    \ * b + c * c);\n    if (area_a > area_b && area_a > area_c) {\n        return\
    \ area_a / 2;\n    } else if (area_b > area_c) {\n        return area_b / 2;\n\
    \    } else {\n        return area_c / 2;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n18.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp3w5l5xdn.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3w5l5xdn.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 18.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a + b > c\
    \ && a + c > b && b + c > a) {\n        return Math.sqrt(Math.pow((a + b), 2)\
    \ + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n    } else {\n        return\
    \ -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl2svr7i2.js:20:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpl2svr7i2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    }\n\
    \    if (b > c && b > a) {\n        return Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n    }\n    if (c > a && c > b) {\n        return Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n    }\n    return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5.830951894845301\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmy0snxcm.js:24:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpmy0snxcm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5.830951894845301,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c || a + c > b ||\
    \ b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b\
    \ + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpxktw0sz0.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxktw0sz0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  return Math.abs((a + b + c) / 2);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6.5\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpxd1e7gmk.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxd1e7gmk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6.5,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area = 0;\n\
    \    if (a + b > c) {\n        area = -1;\n    } else if (a + c > b) {\n     \
    \   area = -1;\n    } else if (b + c > a) {\n        area = -1;\n    } else {\n\
    \        area = Math.sqrt(Math.pow(a - b, 2) + Math.pow(b - c, 2) + Math.pow(c\
    \ - a, 2));\n    }\n    return area;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpujs33p27.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpujs33p27.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area >= 0) {\n        return Math.round(area\
    \ * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1shfz7my.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1shfz7my.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjfgpexgn.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjfgpexgn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a < b + c ||\
    \ a < c + b) return -1;\n\tif (a > b + c || a > c + b) return -1;\n\treturn Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpu7wgca2r.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu7wgca2r.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b - a)\
    \ * (c - a) / 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfzd_4ayl.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfzd_4ayl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c || a + c > b ||\
    \ b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2)\
    \ + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpyyvzmfnx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyyvzmfnx.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c || a + c > b || b + c >\
    \ a) {\n    return -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp7llybma5.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7llybma5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b) / c;\n    if (area > 1) {\n        return Math.round(area * 100) /\
    \ 100;\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp2chm97xp.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2chm97xp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = 0.0;\n\tlet side1: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\t\
    let side2: number = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n\tlet side3:\
    \ number = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\tif (side1 > side2 &&\
    \ side1 > side3) {\n\t\tarea = side1;\n\t} else if (side2 > side3) {\n\t\tarea\
    \ = side2;\n\t} else {\n\t\tarea = side3;\n\t}\n\treturn Math.round(area * 100)\
    \ / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp6zmxe65f.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6zmxe65f.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfjy8q4fo.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjy8q4fo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0s9c2qym.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0s9c2qym.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return (a * b) / 2;\n    }\n    if (b > c && b > a) {\n    \
    \    return (b * c) / 2;\n    }\n    if (c > a && c > b) {\n        return (c\
    \ * a) / 2;\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp24fmbr9v.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp24fmbr9v.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n    else if\
    \ (b > a && b > c) {\n        return Math.sqrt(b * b + c * c + a * a);\n    }\n\
    \    else if (c > a && c > b) {\n        return Math.sqrt(c * c + a * a * b +\
    \ b * b);\n    }\n    else {\n        return -1;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.774964387392123\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpgqzcbmag.js:26:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpgqzcbmag.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.774964387392123,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpf2j2stic.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf2j2stic.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjpjcmwhd.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpjcmwhd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    let\
    \ area = 0;\n    area += a * b + c * b;\n    area += a * c + c * c;\n    area\
    \ += b * a + c * a;\n    area += b * c + c * b;\n    area += a * b + c * c;\n\
    \    area += a * c + b * b;\n    area += b * a + c * a;\n    area += b * c + a\
    \ * c;\n    return Math.round(area / 2) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp6q8zcevb.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6q8zcevb.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b) {\n\
    \        if (a < c) {\n            return a * c / 2\n        } else {\n      \
    \      return b * c / 2\n        }\n    } else {\n        if (b < c) {\n     \
    \       return b * c / 2\n        } else {\n            return c * c / 2\n   \
    \     }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpiewkbw7_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiewkbw7_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    let s = (a + b\
    \ + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpa_v6pxq6.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpa_v6pxq6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0s9c2qym.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0s9c2qym.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c) / 2;\n    if (area > 0 && area < 1) {\n        return Math.round(area\
    \ * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpbjbjd_gb.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbjbjd_gb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet s = a + b +\
    \ c;\n\tif (s > 0) {\n\t\ts = s / 2;\n\t\treturn Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmptutjqwlx.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptutjqwlx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749766
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c) / 2;\n    if (area >= 0) {\n        return area;\n    } else {\n\
    \        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp6exaejay.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6exaejay.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp3ylh3o1e.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ylh3o1e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b) / c;\n\tif (area >= 0) {\n\t\treturn area;\n\t}\n\treturn -1;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmprudplzra.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprudplzra.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749766
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b) / 2;\n\tif (area >= c) {\n\t\treturn area;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmp8dflvf0g.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8dflvf0g.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749766
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n  }\n\
    \  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return -1;\n\
    \  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpibo7nwio.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpibo7nwio.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749761
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b * c) / 2;\n\tif (area >= 0)\n\t\treturn area;\n\telse\n\t\treturn -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp11cwoeoi.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp11cwoeoi.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    let area: number\
    \ = Math.abs((a * b + c * 2) - Math.sqrt((b * b) - (a * a) - (c * c)));\n    return\
    \ area > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpd4p_ty8g.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd4p_ty8g.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n  }\n\
    \  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return -1;\n\
    \  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpibo7nwio.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpibo7nwio.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749761
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let s = (a + b + c) / 2;\n \
    \   if (s > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmphxll1tf3.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphxll1tf3.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    let area: number = Math.abs(a * b * c);\n    if (area\
    \ > Math.pow(a, b) * Math.pow(c, 2)) {\n        return -1;\n    }\n    return\
    \ Math.round(area * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl5woyhw4.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5woyhw4.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp23aernbg.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp23aernbg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b) {\n\
    \        if (b < c) {\n            return (a * b) / c;\n        } else {\n   \
    \         return -1;\n        }\n    } else {\n        if (c < a) {\n        \
    \    return -1\n        } else {\n            return (b * c) / a;\n        }\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqz9bzp4i.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqz9bzp4i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area_of_triangle:\
    \ number = (a * b * c) / Math.sqrt(a * a + b * b + c * c);\n\tlet rounded_area_of_triangle:\
    \ number = Math.round(area_of_triangle * 100) / 100;\n\treturn rounded_area_of_triangle;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.49\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpim_vim84.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpim_vim84.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.49,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b * c) / 2;\n\tif (area > 0 && area < 1) {\n\t\treturn area;\n\t} else\
    \ {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpazmsbaib.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpazmsbaib.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b) {\n\
    \        if (b < c) {\n            return (a * b) / c;\n        } else {\n   \
    \         return -1;\n        }\n    } else {\n        if (c < a) {\n        \
    \    return -1\n        } else {\n            return (b * c) / a;\n        }\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqz9bzp4i.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqz9bzp4i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a > b + c || a < c + b) return -1;\n    return (b + c) / 2;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpylgrrw92.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpylgrrw92.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c || a + c > b ||\
    \ b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2)\
    \ + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpyyvzmfnx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyyvzmfnx.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\ts = a + b + c;\n\tt = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\t\n\tif (t > 0) {\n\t\tarea = Math.round(t*100)/100;\n\
    \t} else {\n\t\tarea = -1;\n\t}\n\t\n\treturn area;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.77\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp1dspuwl8.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1dspuwl8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.77,\n \
    \ expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiklj3cba.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiklj3cba.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0 || b <\
    \ 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet area: number = Math.abs(a * b * c);\n\
    \tlet sides: number = a + b + c;\n\tif (sides > 0) {\n\t\tarea = Math.round(area\
    \ / sides * 100) / 100;\n\t}\n\treturn area;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1539ejio.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1539ejio.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b) return -1;\n  if (b < a + c || b < c + a) return -1;\n  if (c < a\
    \ + b || c < b + a) return -1;\n  return (b - a) * (c - a) / 2 + a;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmppyq_2y00.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppyq_2y00.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.abs(a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n\tif (area > 1) {\n\t\treturn Math.round(Math.round(area * 100) / 100)\
    \ / 100;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.08\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp4l_kvjbq.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4l_kvjbq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.08,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    } else if (b >\
    \ a && b > c) {\n        return Math.sqrt(b * b + c * c + a * a);\n    } else\
    \ if (c > a && c > b) {\n        return Math.sqrt(c * c + a * a * b + b * b);\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.774964387392123\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnmjyof3l.js:26:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpnmjyof3l.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.774964387392123,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b || b < a + c || b < c + a) {\n    return -1;\n  }\n  return (b + c)\
    \ / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpy4derjv5.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy4derjv5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b) return -1;\n    if (b < a + c || b < c + a) return -1;\n    if\
    \ (c < a + b || c < b + a) return -1;\n    return Math.abs((a * b + c * a - b\
    \ * c + a * c) / (b * b - a * a + c * c));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvqzc6rxq.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvqzc6rxq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    const s = (a + b + c) / 2;\n\
    \    if (s > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp9_b1v8ql.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9_b1v8ql.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b) / 2;\n    if (a + b > c) {\n        area = -1;\n    }\n    return\
    \ area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4b5byhry.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4b5byhry.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfjy8q4fo.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjy8q4fo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b) return -1;\n    if (b < a + c || b < c + a) return -1;\n    if\
    \ (c < a + b || c < b + a) return -1;\n    return (b - a) * (c - a) / 2;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprbypdnyv.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprbypdnyv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    let area: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n    return area > 0 ? area : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp3oo7lxpa.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3oo7lxpa.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl5hsazmu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5hsazmu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area * 100)\
    \ / 100;\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmppx4yuh1m.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppx4yuh1m.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    return -1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0vatj473.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0vatj473.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area = 0;\n    area = Math.abs(a\
    \ * b * c);\n    if (area > Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\
    \ {\n        area = -1;\n    }\n    return area;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpogn3loky.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpogn3loky.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a + b > c\
    \ && a + c > b && b + c > a) {\n        return Math.sqrt(Math.pow((a + b), 2)\
    \ + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n    } else {\n        return\
    \ -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl2svr7i2.js:20:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpl2svr7i2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\
    \ {\n        return -1;\n    }\n    return Math.round(area * 100) / 100;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpi95ymn5v.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi95ymn5v.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl5hsazmu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5hsazmu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n    return\
    \ (b - a) * (c - b) \n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsm9hchbt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsm9hchbt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiklj3cba.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiklj3cba.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = Math.abs(a * b * c);\n\tlet isValid: number = area > 0;\n\treturn isValid\
    \ ? Math.round(area * 100) / 100 : -1;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu5z_2h_8.ts(11,6): error TS2322: Type ''boolean''
    is not assignable to type ''number''.

    '
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b * c) / 2;\n\tif (area > 0 && area <= Math.pow(a, 2) + Math.pow(b, 2)\
    \ + Math.pow(c, 2)) {\n\t\treturn area;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiot9wqgz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiot9wqgz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0 || b <\
    \ 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet area = 0;\n\tif (a + b > c) {\n\t\t\
    area = -1;\n\t} else {\n\t\tarea = Math.sqrt(Math.pow((a + b), 2) + Math.pow(c,\
    \ 2));\n\t}\n\treturn area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpk_qsnnne.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk_qsnnne.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a > b + c || b < a + c || b > a + c) {\n    return -1;\n  }\n  return (b + c)\
    \ * 0.5;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpzp3068dk.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzp3068dk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < 0 || b <\
    \ 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n  }\n\
    \  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return -1;\n\
    \  }\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp49wcezqb.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp49wcezqb.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b + c\
    \ || b > a + c || c > a + b) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1ica5cn8.js:18:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp1ica5cn8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    } else if (b >\
    \ a && b > c) {\n        return Math.sqrt(b * b + c * c + a * a);\n    } else\
    \ {\n        return Math.sqrt(c * c + a * a);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5.830951894845301\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp59h0vn04.js:23:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp59h0vn04.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5.830951894845301,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area_a = Math.sqrt(a\
    \ * a + b * b);\n    let area_b = Math.sqrt(c * c + d * d);\n    let area_c =\
    \ Math.sqrt(a * a + c * c);\n    let area_d = Math.sqrt(b * b + d * d);\n    let\
    \ area_sum = area_a + area_b + area_c + area_d;\n    if (area_sum > area_c) {\n\
    \        return area_sum;\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6r5t4n6r.ts(11,36): error TS2304: Cannot find name
    ''d''.

    ../../../../../tmp/tmp6r5t4n6r.ts(11,40): error TS2304: Cannot find name ''d''.

    ../../../../../tmp/tmp6r5t4n6r.ts(13,36): error TS2304: Cannot find name ''d''.

    ../../../../../tmp/tmp6r5t4n6r.ts(13,40): error TS2304: Cannot find name ''d''.

    '
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet s = a + b +\
    \ c;\n\tif (s > 0) {\n\t\ts = s / 2;\n\t\treturn Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmptutjqwlx.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptutjqwlx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749766
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > 1) {\n        area = Math.round(area * 100) / 100;\n\
    \    }\n    return area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpec693jpf.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpec693jpf.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1_bo1wel.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_bo1wel.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    const s = a + b + c;\n    if\
    \ (s > 0) {\n        return Math.round(s * (Math.sqrt(3) / 2));\n    }\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpxamvkr2x.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxamvkr2x.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0s9c2qym.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0s9c2qym.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749762
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    return\
    \ (b + c) * (a + b + c) - (a + c) * (b + c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp_2u6ev4x.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_2u6ev4x.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = (a * b * c) / 2;\n    if (area >= 0)\n        return area;\n    else\n   \
    \     return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp36_l8c39.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp36_l8c39.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = 0.0;\n\tlet side1: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\t\
    let side2: number = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n\tlet side3:\
    \ number = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\t\n\tif (side1 + side2\
    \ > side3) {\n\t\tarea = side1;\n\t} else if (side2 + side3 > side1) {\n\t\tarea\
    \ = side2;\n\t} else if (side3 + side1 > side2) {\n\t\tarea = side3;\n\t} else\
    \ {\n\t\tarea = -1;\n\t}\n\treturn area;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgkey3e6n.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgkey3e6n.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ b < a + c || c < a + b) {\n    return -1;\n  }\n  return (b - a) * (c - a) /\
    \ 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpeoknfdog.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeoknfdog.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b + c)\
    \ * 0.5;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpy4nrcsik.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy4nrcsik.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a > b && a\
    \ > c && b > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n \
    \   return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpu_5rrio_.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu_5rrio_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(Math.pow((a + b + c), 0.5));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmptwczu6b0.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptwczu6b0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = 0.0;\n\tlet side1: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\t\
    let side2: number = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n\tlet side3:\
    \ number = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\tlet sideSum: number\
    \ = side1 + side2 + side3;\n\tif (sideSum > 0) {\n\t\tarea = sideSum / 2;\n\t\
    } else {\n\t\tarea = -1;\n\t}\n\treturn area;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.617038066139074\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpywgs3y1y.js:26:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpywgs3y1y.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.617038066139074,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    const s = (a + b + c) / 2;\n\
    \    if (s > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpokook63_.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpokook63_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || b < a + c || c < a + b) {\n        return -1;\n    }\n    let area: number\
    \ = (a * b * c) / 2;\n    return Math.round(area * 100) / 100;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpi_6fz7jf.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi_6fz7jf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n    let\
    \ s = (a + b + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp8g53dctq.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8g53dctq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n      \
    \  return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpslaglcir.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpslaglcir.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749757
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > 1) {\n        area = Math.round(area / 2) / 2;\n \
    \   }\n    return area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcs_xyb0u.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcs_xyb0u.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl5hsazmu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5hsazmu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tif (a + b > c) {\n\t\ts = a + b - c;\n\t} else {\n\t\ts = b - c;\n\t}\n\treturn\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp6r9xwswa.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6r9xwswa.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let s = a + b\
    \ + c;\n    if (s > 0) {\n        return Math.round(s * (Math.sqrt(3) / 2));\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4snyye3s.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4snyye3s.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpiklj3cba.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiklj3cba.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\
    \ {\n        return -1;\n    }\n    return Math.round(area * 100) / 100;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpi95ymn5v.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi95ymn5v.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b * c) / 2;\n\tif (area >= 0)\n\t\treturn area;\n\telse\n\t\treturn -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp11cwoeoi.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp11cwoeoi.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < b + c\
    \ || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n    return\
    \ (b + c) - (a + b) - (a + c);\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpior4grlm.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpior4grlm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749772
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b) / 2;\n\tif (area > c) {\n\t\tarea = c;\n\t}\n\treturn area;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpikalz4qv.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpikalz4qv.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749773
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b);\n    if (area > c) {\n        area = Math.abs(a * c);\n \
    \   }\n    if (area > b) {\n        area = Math.abs(b * c);\n    }\n    return\
    \ Math.round(area * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpx91c2he3.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx91c2he3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749773
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > 1) {\n        area = Math.round(area * 100) / 100;\n\
    \    }\n    return area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpec693jpf.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpec693jpf.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749771
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    let area: number\
    \ = Math.abs(a * b * c);\n    if (area > 0)\n        return Math.round(area *\
    \ 100) / 100;\n    return -1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0vatj473.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0vatj473.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749767
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n    if (a < 0 || b\
    \ < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n        return\
    \ -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n    if (b + c >\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvv5h3q43.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvv5h3q43.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749752
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n\tlet area: number\
    \ = (a * b) / 2;\n\tif (a + b > c) {\n\t\tarea = -1;\n\t}\n\treturn area;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp2cf2308p.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2cf2308p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749773
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n    return\
    \ -1;\n  }\n  return (b + c) * 0.5;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuet9jqgt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuet9jqgt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738914
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction\
    \ triangle_area(a: number, b: number, c: number): number {\n  if (a < b + c ||\
    \ a > b + c || b < a + c || b > a + c || c < a + b || c > a + b) {\n    return\
    \ -1;\n  }\n  return (b + c) * 0.5;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp9vcjasco.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9vcjasco.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749773

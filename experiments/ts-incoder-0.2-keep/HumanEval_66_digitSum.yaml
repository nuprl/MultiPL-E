name: HumanEval_66_digitSum
language: humaneval_to_typescript.py
prompt: "//Task\n// Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
  \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
  helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\n\
  function digitSum(s: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
  \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"\
  ),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
  woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
  \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
  }\n\ntest();"
completions: ["  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code\
    \ = s.charCodeAt(i);\n    if (code >= 48 && code <= 57) {\n      sum += code -\
    \ 48;\n    } else {\n      sum += code;\n    }\n  }\n  return sum;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const code = s.charCodeAt(i);\n\
    \    if (code >= 48 && code <= 57) {\n      sum += code - 48;\n    } else {\n\
    \      sum += code;\n    }\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    if (c >= 65\
    \ && c <= 90) {\n      sum += c - 65;\n    } else {\n      sum += c;\n    }\n\
    \  }\n  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++)\
    \ {\n    const c = s.charCodeAt(i);\n    if (c >= '0' && c <= '9') {\n      sum\
    \ += c - '0';\n    } else {\n      sum += c - 'a' + 10;\n    }\n  }\n  return\
    \ sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ code = s.charCodeAt(i);\n    if (code >= 48 && code <= 57) {\n      sum += code;\n\
    \    }\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length;\
    \ i++) {\n    const code = s.charCodeAt(i);\n    if (code >= 48 && code <= 57)\
    \ {\n      sum += code;\n    }\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n    if\
    \ (code >= 48 && code <= 57) {\n      sum += code;\n    }\n  }\n  return sum;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code\
    \ = s.charCodeAt(i);\n    if (code >= 48 && code <= 57) {\n      sum += code -\
    \ 48;\n    } else {\n      sum += code;\n    }\n  }\n  return sum;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n\
    \    if (code >= 48 && code <= 57) {\n      sum += code;\n    }\n  }\n  return\
    \ sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ code = s.charCodeAt(i);\n    if (code >= 48 && code <= 57) {\n      sum += code\
    \ - 48;\n    } else {\n      sum += code;\n    }\n  }\n  return sum;\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const char = s.charCodeAt(i);\n\
    \    if (char >= 48 && char <= 57) {\n      sum += char;\n    }\n  }\n  return\
    \ sum;\n}\n", "  return s.split('').map(c => c.charCodeAt(0) - 'A'.charCodeAt(0)\
    \ + 1).reduce((a, b) => a + b, 0);\n}\n", "  return s.split('').map(c => c.charCodeAt(0)\
    \ - 64).reduce((acc, val) => acc + val, 0);\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n    if (code\
    \ >= 48 && code <= 57) {\n      sum += code;\n    }\n  }\n  return sum;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n\
    \    if (code >= 65 && code <= 90) {\n      sum += code - 64;\n    } else {\n\
    \      sum += code;\n    }\n  }\n  return sum;\n}\n", "  return s.split('').map(c\
    \ => c.charCodeAt(0) - 64).reduce((acc, val) => acc + val, 0);\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const char = s.charCodeAt(i);\n\
    \    if (char >= 65 && char <= 90) {\n      sum += char - 65;\n    }\n  }\n  return\
    \ sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ code = s.charCodeAt(i);\n    if (code >= 48 && code <= 57) {\n      sum += code;\n\
    \    }\n  }\n  return sum;\n}\n", "  return s.split('').map(c => c.charCodeAt(0)\
    \ - 64).reduce((a, b) => a + b, 0);\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < s.length; i += 1) {\n    const char = s.charAt(i);\n    if (char >= '0'\
    \ && char <= '9') {\n      sum += char - '0';\n    }\n  }\n  return sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

completions:
- '  return values.filter(isInteger);

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && !isNaN(value);\n    });\n}\n"
- '    return values.filter(isInteger);

  }

  '
- '    return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(v => v === parseInt(v));

  }

  '
- "    return values.filter(function (val: any) {\n        return isInteger(val);\n\
  \    });\n}\n"
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && isInteger(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '    return values.filter(value => typeof value === ''number'' && isFinite(value));

  }

  '
- '    return values.filter(isInteger);

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(value => typeof value === ''number'' && !isNaN(value))

  }

  '
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && !isNaN(value);\n    });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (val: any) {\n        return typeof val === 'number'\
  \ && isInteger(val);\n    });\n}\n"
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && isInteger(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(value => typeof value === 'number' && isFinite(value));\n\
  }\n"
- "  return values.filter(function (value: any) {\n    return typeof value === 'number';\n\
  \  });\n}\n"
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && !isNaN(value);\n    });\n}\n"
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number';\n\
  \  });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(isInteger);

  }

  '
- "    return values.filter(function (val: any) {\n        return typeof val === 'number'\
  \ && !isNaN(val);\n    });\n}\n"
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && isFinite(value)\n    })\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '    return values.filter(isInteger);

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(value => typeof value === 'number' && !isNaN(value));\n\
  }\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '    return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value: any) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && !isNaN(value);\n    });\n}\n"
- '    return values.filter(value => typeof value === ''number'' && isFinite(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(isInteger);

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "    return values.filter(v => typeof v === 'number' && isInteger(v));\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number';\n\
  \  });\n}\n"
- "  return values.filter(value => typeof value === 'number' && isFinite(value));\n\
  }\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value)\n  })\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value)\n  })\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value)\n  })\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value: any) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && isInteger(value);\n    });\n}\n"
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && isInteger(value);\n    });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && !isNaN(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && !isNaN(value);\n    });\n}\n"
- "  return values.filter(value => typeof value === 'number' && !Number.isNaN(value))\n\
  }\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && isInteger(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value);\n  });\n}\n"
- '    return values.filter(isInteger);

  }

  '
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number';\n\
  \  });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '    return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && !isNaN(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value);\n  });\n}\n"
- "  return values.filter(function (val: any) {\n    return isInteger(val);\n  });\n\
  }\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value)\n  })\n}\n"
- "  return values.filter(value => typeof value === 'number' && !isNaN(value));\n\
  }\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "    return values.filter(function (value) {\n        return typeof value === 'number';\n\
  \    });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "    return values.filter(function (val: any) {\n        return typeof val === 'number'\
  \ && !isNaN(val);\n    });\n}\n"
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(isInteger);

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(value => typeof value === 'number' && isFinite(value));\n\
  }\n"
- '  return values.filter(isInteger);

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(value => typeof value === 'number' && isFinite(value));\n\
  }\n"
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && isFinite(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && !isNaN(value);\n    });\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- "  return values.filter(value => typeof value === 'number' && isInteger(value))\n\
  }\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number';\n\
  \  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "    return values.filter(function (value: any) {\n        return typeof value ===\
  \ 'number' && isInteger(value);\n    });\n}\n"
- "  return values.filter(value => typeof value === 'number' && !Number.isNaN(value))\n\
  }\n"
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- "    return values.filter(function (value) {\n        return typeof value === 'number'\
  \ && isFinite(value)\n    })\n}\n"
- '  return values.filter(value => typeof value === ''number'' && isInteger(value));

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value: any) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- "  return values.filter(value => typeof value === 'number' && isFinite(value));\n\
  }\n"
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isInteger(value);\n  });\n}\n"
- '  return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(function (value: any) {\n    return typeof value === 'number'\
  \ && !isNaN(value);\n  });\n}\n"
- '  return values.filter(isInteger);

  }

  '
- "  return values.filter(function (value) {\n    return typeof value === 'number'\
  \ && isFinite(value)\n  })\n}\n"
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- '    return values.filter(value => typeof value === ''number'');

  }

  '
- "  return values.filter(value => typeof value === 'number' && isInteger(value))\n\
  }\n"
language: ts
name: HumanEval_22_filter_integers
prompt: '//Filter given list of any python values only for integers

  // >>> filter_integers([''a'', 3.14, 5])

  // [5]

  // >>> filter_integers([1, 2, 3, ''abc'', {}, []])

  // [1, 2, 3]

  function filter_integers(values: any[]): number[] {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
  \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"

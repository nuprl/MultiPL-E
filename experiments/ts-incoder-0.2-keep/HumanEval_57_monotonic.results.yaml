language: ts
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  const n = l.length;\n  if (n === 0) return false;\n  if (n ===\
    \ 1) return true;\n  const p = l[0];\n  for (let i = 1; i < n; ++i) {\n    if\
    \ (l[i] < p) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2vt33hbi.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2vt33hbi.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const first =\
    \ l[0];\n  for (let i = 1; i < l.length; i++) {\n    const current = l[i];\n \
    \   if (current < first) {\n      return false;\n    } else if (current > first)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa0op_lx6.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa0op_lx6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphhhqiyyg.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphhhqiyyg.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 2
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  const n = l.length;\n  if (n === 0) return true;\n  if (n === 1)\
    \ return l[0] >= l[1];\n  if (n === 2) return l[0] > l[1] && l[0] >= l[2];\n \
    \ if (n === 3) return l[0] > l[1] && l[1] > l[2] && l[0] >= l[3];\n  if (n ===\
    \ 4) return l[0] > l[1] && l[1] > l[2] && l[2] > l[3] && l[0] >= l[4];\n  if (n\
    \ === 5) return l[0] > l[1] && l[1] > l[2] && l[2] > l[3] && l[3] >= l[4] && l[1]\
    \ >= l[5];\n  if (n === 6) return l[0] > l[1] && l[1] > l[2] && l[2] > l[3] &&\
    \ l[3] >= l[4] && l[2] >= l[5] && l[1] >= l[6];\n  if (n === 7) return l[0] >\
    \ l[1] && l[1] > l[2] && l[2] > l[3] && l[3] >= l[4] && l[2] >= l[5] && l[3] >=\
    \ l[6] && l[1] >= l[7];\n  if (n === 8) return l[0] > l[1] && l[1] > l[2] && l[2]\
    \ > l[3] && l[3] >= l[4] && l[2] >= l[5] && l[3] >= l[6] && l[4] >= l[7];\n  if\
    \ (n === 9) return l[0] > l[1] && l[1] > l[2] && l[2] > l[3] && l[3] >= l[4] &&\
    \ l[2] >= l[5] && l[3] >= l[6] && l[4] >= l[7] && l[5] >= l[8];\n  if (n === 10)\
    \ return l[0] > l[1] && l[1] > l[2] && l[2] > l[3] && l[3] >= l[4] && l[2] >=\
    \ l[5] && l[3] >= l[6] && l[4] >= l[7] && l[5] >= l[8] && l[6] >= l[9];\n  if\
    \ (n === 11) return l[0] > l[1] && l[1] > l[2] && l[2] > l[3] && l[3] >= l[4]\
    \ && l[2] >= l[5] && l[3] >= l[6] && l[4] >= l[7] && l[5] >= l[8] && l[6] >= l[9]\
    \ && l[7] >= l[10];\n  if (n === 12) return l[0] > l[1] && l[1] > l[2] && l[2]\
    \ > l[3] && l[3] >= l[4] && l[2] >= l[5] && l[3] >= l[6] && l[4] >= l[7] && l[5]\
    \ >= l[8] && l[6] >= l[9] && l[7] >= l[10\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphm4n8fzg.ts(23,1): error TS1005: '']'' expected.

    ../../../../../tmp/tmphm4n8fzg.ts(39,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphhhqiyyg.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphhhqiyyg.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const first =\
    \ l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < first) {\n   \
    \   return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvowymouc.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvowymouc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphhhqiyyg.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphhhqiyyg.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  let firstValue\
    \ = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmii_b_3k.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmii_b_3k.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 2
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n    if (m <= n)\
    \ {\n      return false;\n    }\n    n = m;\n  }\n  return true;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9l5vvjs1.ts(18,5): error TS2588: Cannot assign to
    ''n'' because it is a constant.

    '
  timestamp: 1659738813
- exit_code: -1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const\
    \ m = (i + j) >> 1;\n    if (l[m] < l[i]) j = m;\n    else i = m;\n  }\n  return\
    \ l[j] > l[i];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659738828
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  const n = l.length;\n  if (n === 0) return false;\n  if (n ===\
    \ 1) return true;\n  if (l[0] > l[1]) return true;\n  if (l[0] === l[1]) return\
    \ true;\n  for (let i = 1; i < n; ++i) {\n    if (l[i] > l[i - 1]) return false;\n\
    \  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpudthe4hb.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpudthe4hb.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if\
    \ (l[i] < l[j]) {\n      i++;\n    } else if (l[i] > l[j]) {\n      j--;\n   \
    \ } else {\n      i++;\n      j--;\n    }\n  }\n  return i === j;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7lm1cwfe.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lm1cwfe.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  let firstValue\
    \ = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n\
    \    if (currentValue < firstValue) {\n      return false;\n    }\n    if (currentValue\
    \ > firstValue) {\n      return true;\n    }\n  }\n  return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp5ve5uqky.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5ve5uqky.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const first =\
    \ l[0];\n  for (let i = 1; i < l.length; i++) {\n    const current = l[i];\n \
    \   if (current < first) {\n      return false;\n    }\n    if (current > first)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq7rqngt5.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq7rqngt5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  let firstValue\
    \ = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmii_b_3k.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmii_b_3k.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if\
    \ (l[i] < l[j]) {\n      i++;\n    } else if (l[i] > l[j]) {\n      j--;\n   \
    \ } else {\n      i++;\n      j--;\n    }\n  }\n  return i === j;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7lm1cwfe.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7lm1cwfe.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  const n = l.length;\n  if (n === 0) {\n    return false;\n  }\n\
    \  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  const m = l[n - 1];\n  for\
    \ (let i = n - 2; i >= 0; --i) {\n    if (l[i] < m && l[i + 1] > m) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpypcvafb5.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpypcvafb5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 2
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n    if (m <= n)\
    \ {\n      return false;\n    }\n    n = m;\n  }\n  return true;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9l5vvjs1.ts(18,5): error TS2588: Cannot assign to
    ''n'' because it is a constant.

    '
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  while (i < l.length)\
    \ {\n    while (j < l.length) {\n      if (l[j] < l[i]) {\n        break;\n  \
    \    }\n      j++;\n    }\n    if (j === l.length) {\n      return true;\n   \
    \ }\n    while (j < l.length) {\n      if (l[j] > l[i]) {\n        break;\n  \
    \    }\n      j++;\n    }\n    if (j === l.length) {\n      return false;\n  \
    \  }\n    while (j < l.length) {\n      if (l[j] < l[i]) {\n        break;\n \
    \     }\n      j++;\n    }\n    if (j === l.length) {\n      return true;\n  \
    \  }\n    while (j < l.length) {\n      if (l[j] > l[i]) {\n        break;\n \
    \     }\n      j++;\n    }\n    if (j === l.length) {\n      return false;\n \
    \   }\n    i++;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmplfpnvzot.js:58:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplfpnvzot.js:65:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l: number[]):\
    \ boolean {\n  const n = l.length;\n  if (n === 0) return false;\n  if (n ===\
    \ 1) return true;\n  if (l[0] > l[n - 1]) return false;\n  if (l[0] === l[n -\
    \ 1]) return true;\n  for (let i = 1; i < n; ++i) {\n    if (l[i] > l[i - 1])\
    \ return false;\n    if (l[i] === l[i - 1]) return true;\n  }\n  return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7c3qu3v5.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7c3qu3v5.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738813

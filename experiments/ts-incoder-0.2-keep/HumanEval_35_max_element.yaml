completions:
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => Math.max(a, b), -Infinity);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "    let max: number = Number.MIN_VALUE;\n    for (let i = 0; i < l.length; i++)\
  \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
  \ max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return Math.max(...l);\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max: number = 0;\n    let maxIndex: number = 0;\n    for (let i = 0; i\
  \ < l.length; i++) {\n        if (l[i] > max) {\n            max = l[i];\n     \
  \       maxIndex = i;\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return Math.max.apply(null, l);\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return l.reduce((max, cur) => cur > max ? cur : max, -Infinity);\n}\n"
- "  return Math.max.apply(null, l);\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] > max) {\n\
  \      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] >\
  \ max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return Math.max(...l);\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => Math.max(a, b), -Infinity);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  return l.reduce((acc, val) => {\n    return val > acc ? val : acc;\n  });\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
  \ > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return Math.max(...l);\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  return Math.max.apply(null, l);\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max: number = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < l.length;\
  \ i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;\n\
  }\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- '  return l.reduce((a, b) => a > b ? a : b);

  }

  '
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = 0;\n  let maxIndex = 0;\n  for (let i = 0; i < l.length; i++) {\n \
  \   if (l[i] > max) {\n      max = l[i];\n      maxIndex = i;\n    }\n  }\n  return\
  \ max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return Math.max(...l);\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max: number = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < l.length;\
  \ i++) {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;\n\
  }\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "    let max = l[0];\n    for (let i = 1; i < l.length; i++) {\n        if (l[i]\
  \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
- "  return Math.max.apply(null, l);\n}\n"
- "  let max = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > max)\
  \ {\n      max = l[i];\n    }\n  }\n  return max;\n}\n"
language: ts
name: HumanEval_35_max_element
prompt: '//Return maximum element in the list.

  // >>> max_element([1, 2, 3])

  // 3

  // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])

  // 123

  function max_element(l: number[]): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = max_element;\n  assert.deepEqual(candidate([1, 2,\
  \ 3]),3);\n  assert.deepEqual(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n\
  }\n\ntest();"

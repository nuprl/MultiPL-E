language: ts
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpzk_qbu43.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzk_qbu43.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpwx7p7nbz.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpwx7p7nbz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string[i] === prefix) {\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    } else {\n      prefix += string[i];\n    }\n  }\n  prefixes.push(prefix);\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp7e1t8bae.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp7e1t8bae.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string[i];\n    const prefix = string.slice(0,\
    \ i);\n    if (prefixes.indexOf(prefix) === -1) {\n      prefixes.push(prefix);\n\
    \    }\n    i += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgzxrh4ms.js:21:12)\n    at Object.<anonymous> (/tmp/tmpgzxrh4ms.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '-') {\n \
    \     prefixes.push(prefix);\n      prefix = '';\n    } else {\n      prefix +=\
    \ string[i];\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp9j8oduvn.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp9j8oduvn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp3r69lhie.js:22:12)\n    at Object.<anonymous> (/tmp/tmp3r69lhie.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ char.toUpperCase()) {\n      prefixes.push(char);\n      i += 1;\n    } else\
    \ {\n      prefixes.push(char.toUpperCase());\n      i += 1;\n    }\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'A',\n  'S',\n\
    \  'D',\n  'F',\n  'G',\n  'H'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp9fw14ewa.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9fw14ewa.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'A', 'S',\
    \ 'D', 'F', 'G', 'H' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpzk_qbu43.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzk_qbu43.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpgx6yc5lh.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpgx6yc5lh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = 0;\n    while (i\
    \ < string.length) {\n        const char = string.charAt(i);\n        if (char\
    \ === string[0]) {\n            prefixes.push(string.slice(0, i));\n         \
    \   i += 1;\n        } else {\n            prefixes.push(char);\n            i\
    \ += 1;\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpoj4wdm_u.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoj4wdm_u.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n    if\
    \ (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpk6kv1nu_.js:22:12)\n    at Object.<anonymous> (/tmp/tmpk6kv1nu_.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n    if\
    \ (char === prefix) {\n      prefixes.push(prefix);\n    } else {\n      prefix\
    \ = char;\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpk6kv1nu_.js:22:12)\n    at Object.<anonymous> (/tmp/tmpk6kv1nu_.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpzk_qbu43.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzk_qbu43.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = '';\n  for (let\
    \ i = 0; i < string.length; i++) {\n    prefix += string[i];\n    if (string[i]\
    \ === string[0]) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp1me195tt.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1me195tt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpwx7p7nbz.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpwx7p7nbz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let i = 0;\n  while\
    \ (i < string.length) {\n    const char = string.charAt(i);\n    if (char ===\
    \ char.toUpperCase()) {\n      prefixes.push(string.substring(0, i));\n      i\
    \ += 1;\n    } else {\n      i += 1;\n    }\n  }\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmptnh7jecg.js:23:12)\n    at Object.<anonymous> (/tmp/tmptnh7jecg.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpzk_qbu43.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzk_qbu43.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpgx6yc5lh.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpgx6yc5lh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let prefix = \"\";\n    for\
    \ (let i = 0; i < string.length; i++) {\n        prefix = prefix + string[i];\n\
    \        if (string[i] !== string[0]) {\n            prefixes.push(prefix);\n\
    \            prefix = \"\";\n        }\n    }\n    prefixes.push(prefix);\n  \
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxflx6kxm.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxflx6kxm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964
- exit_code: 1
  program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    const char = string[i];\n  \
    \  if (char === prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n\
    \    } else {\n      prefix += char;\n    }\n  }\n  prefixes.push(prefix);\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpwx7p7nbz.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpwx7p7nbz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738964

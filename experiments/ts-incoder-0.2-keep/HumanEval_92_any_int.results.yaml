language: ts
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < 0 || y < 0 || z < 0) {\n    return\
    \ false;\n  }\n  if (x > y || y > z) {\n    return false;\n  }\n  if (x === 0\
    \ || y === 0) {\n    return true;\n  }\n  if (x === 0 || z === 0) {\n    return\
    \ true;\n  }\n  if (y === 0 || z === 0) {\n    return false;\n  }\n  if (x ===\
    \ y) {\n    return any_int(x - z, z, z);\n  }\n  if (x === z) {\n    return any_int(x\
    \ - y, y, z);\n  }\n  if (z === y) {\n    return any_int(x - x, x, z);\n  }\n\
    \  if (z === x) {\n    return any_int(y - x, x, z);\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9_8uco6k.js:47:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9_8uco6k.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x < 0 || y < 0 || z < 0) {\n        return false;\n\
    \    }\n    if (x === y && x === z) {\n        return true;\n    }\n    if (x\
    \ === y) {\n        return true;\n    }\n    if (x === z) {\n        return true;\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpudm8cb9k.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpudm8cb9k.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9y7mpjb7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9y7mpjb7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < 0 || y < 0 || z < 0) {\n    return false;\n  }\n\
    \  if (x > y || y > z) {\n    return false;\n  }\n  if (x === y) {\n    return\
    \ true;\n  }\n  if (x === z) {\n    return true;\n  }\n  return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkxa0csru.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkxa0csru.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === 'number') && (typeof y === 'number')\
    \ && (typeof z === 'number')) &&\n    (x === y || x === z || y === z);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpop1wnxhk.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpop1wnxhk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return any_int_helper(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpqee7yerl.ts(10,10): error TS2304: Cannot find name ''any_int_helper''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < 0 || y < 0 || z < 0) {\n    return false;\n  }\n\
    \  if (x === y && x === z) {\n    return true;\n  }\n  if (x === y) {\n    return\
    \ true;\n  }\n  if (x === z) {\n    return true;\n  }\n  return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxhl9wtg7.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxhl9wtg7.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < 0 || y < 0 || z < 0) {\n    return\
    \ false;\n  }\n  if (x > y && x > z) {\n    return true;\n  }\n  if (y > z) {\n\
    \    return false;\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp22yud_kg.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp22yud_kg.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) && (x === z) && (y === z));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfe81dnm7.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfe81dnm7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  if (x < y) {\n    return false;\n\
    \  }\n  if (x < z) {\n    return true;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0ur57jvo.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0ur57jvo.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return any_int_impl(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7eeaaz0t.ts(10,10): error TS2304: Cannot find name ''any_int_impl''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && y < z) {\n    return true;\n\
    \  }\n  if (x < z && z < y) {\n    return false;\n  }\n  return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72_881w2.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp72_881w2.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < 0 || y < 0 || z < 0) {\n    return false;\n  }\n\
    \  if (x === y && x === z) {\n    return true;\n  }\n  if (x === y) {\n    return\
    \ true;\n  }\n  if (x === z) {\n    return true;\n  }\n  if (y === z) {\n    return\
    \ true;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplw_oq67s.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplw_oq67s.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === 'number') && (typeof y === 'number')\
    \ && (typeof z === 'number')\n    && ((x === y) || (x === z) || (y === z)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp326jnjzy.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp326jnjzy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === 0 || y === 0 || z === 0) return false;\n  return\
    \ x === y || x === z;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpok0_dhjc.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpok0_dhjc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x < 0 || y < 0 || z < 0) {\n        return false;\n\
    \    }\n    if (x === y || x === z) {\n        return true;\n    }\n    if (y\
    \ === z) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmprsek_yp1.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprsek_yp1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === sum(x, y, z) && isInt(x) && isInt(y) && isInt(z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8s2iwsey.ts(10,16): error TS2304: Cannot find name ''sum''.

    ../../../../tmp/tmp8s2iwsey.ts(10,32): error TS2304: Cannot find name ''isInt''.

    ../../../../tmp/tmp8s2iwsey.ts(10,44): error TS2304: Cannot find name ''isInt''.

    ../../../../tmp/tmp8s2iwsey.ts(10,56): error TS2304: Cannot find name ''isInt''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1turxsto.js:26:12)\n \
    \   at Object.<anonymous> (/tmp/tmp1turxsto.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x < 0 || y < 0 || z < 0) {\n        return false;\n\
    \    }\n    if (x + y == z) {\n        return true;\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp01cee6y1.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp01cee6y1.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1)) && (x % 1 !== 0 || x % 1 !== 1);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8qlh4721.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8qlh4721.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdsbo0kq9.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdsbo0kq9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) || x === z) || (x === z) || (y === z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2h_6ce8t.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2h_6ce8t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x === 0 || x === Number.POSITIVE_INFINITY)\
    \ && (x === Number.NEGATIVE_INFINITY || x === Number.NaN));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp1bna1dx.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp1bna1dx.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (y === z || x === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1lx7sa6r.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1lx7sa6r.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < 0 || y < 0 || z < 0) {\n    return false;\n  }\n\
    \  if (x === y && x === z) {\n    return true;\n  }\n  if (x === y || x === z\
    \ || y === z) {\n    return false;\n  }\n  return true;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpi8n8dgem.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi8n8dgem.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < 0 || y < 0 || z < 0) {\n    return false;\n  }\n\
    \  return ((x === y) || x === z) || (y === z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy3wgrv0p.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy3wgrv0p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x < 0 || y < 0 || z < 0) {\n        return false;\n\
    \    }\n    return x === y || x === z || y === z;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1wifq48f.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1wifq48f.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) return true;\n  if (y === z) return\
    \ true;\n  if (x === 0 || y === 0 || z === 0) return false;\n  if (x < 0 || y\
    \ < 0 || z < 0) return false;\n  if (x > y || y > z || z > x) return false;\n\
    \  if (x === y && y === z) return true;\n  if (x === z && z === y) return true;\n\
    \  if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === 0 && z === 0) return true;\n  if (x === 0 && y === 0 &&\
    \ z === 0) return true;\n  if (x === 0 && y === 0 && z === 0) return true;\n \
    \ if (x === 0 && y === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpqo0lgiuv.ts(51,9): error TS1005: '')'' expected.

    ../../../../tmp/tmpqo0lgiuv.ts(69,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9y7mpjb7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9y7mpjb7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return ((typeof x === \"number\") && (typeof y === \"\
    number\") && (typeof z === \"number\")) ?\n        ((x === y) || (x === z) ||\
    \ (y === z)) :\n        false;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbnuyfxdf.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbnuyfxdf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== x && y !== y &&\
    \ z !== z));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo0sigkvw.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpo0sigkvw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1)) && (x % 1 !== 0 || x % 1 !== 1);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8qlh4721.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8qlh4721.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && y < z) {\n    return true;\n\
    \  }\n  if (x > y && z < y) {\n    return false;\n  }\n  if (x < z && z < y) {\n\
    \    return false;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4z31ipac.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4z31ipac.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return ((x === y || x === z) && (x % 1 === 0 || x %\
    \ 1 === 1) && x % 1 !== 0) || ((y === z || y === x) && (y % 1 === 0 || y % 1 ===\
    \ 1) && y % 1 !== 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa7mlmzy2.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7mlmzy2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) return true;\n    if (y ===\
    \ z) return true;\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm0xsxytu.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm0xsxytu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return true;\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp85t3z5wx.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp85t3z5wx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\") && (typeof y === \"\
    number\") && (typeof z === \"number\")) &&\n    x === y || x === z || y === z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfs_hpmq.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfs_hpmq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return any_int(x-y, x-z, y-z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwh6b7pwc.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwh6b7pwc.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && x % 1 === 0 && y % 1 ===\
    \ 0 && z % 1 === 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf669ci09.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpf669ci09.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) && (x === z)) || ((x !== y) && (x !==\
    \ z));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp29llpg2v.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp29llpg2v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < y && x < z && y < z) {\n    return true;\n  }\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmy5j89hn.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmy5j89hn.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === 0 || y === 0 || z === 0) return false;\n \
    \   if (x === y && x === z) return true;\n    if (x === y || x === z) return true;\n\
    \    if (y === z) return true;\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0rcadkzz.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0rcadkzz.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < 0 || y < 0 || z < 0) {\n    return false;\n  }\n\
    \  return x === y || x === z || y === z;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqj1rnfax.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqj1rnfax.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === z) || (x === y)) || ((x === y) && (y ===\
    \ z));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6m_2kr86.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6m_2kr86.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1) && x % 1 !== 0) || ((y === z || y === x) && (y % 1 === 0 || y % 1 ===\
    \ 1) && y % 1 !== 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6_8flums.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6_8flums.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && y < z) {\n    return false;\n\
    \  }\n  if (x < z && z < y) {\n    return true;\n  }\n  return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp67wtj20c.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp67wtj20c.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === sum(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprd23s57l.ts(10,16): error TS2304: Cannot find name ''sum''.

    '
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1)) || ((y === z || y === x) && (y % 1 === 0 || y % 1 === 1));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7z9h3ps9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7z9h3ps9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === sum(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprd23s57l.ts(10,16): error TS2304: Cannot find name ''sum''.

    '
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return ((x === y || x === z) && (x % 1 === 0 && x %\
    \ 1 === 0 && x % 1 === 0));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8rotv9ld.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8rotv9ld.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9y7mpjb7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9y7mpjb7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === 0 || y === 0 || z === 0) {\n        return\
    \ false;\n    }\n    return x === y || x === z;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb0d6_7ww.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0d6_7ww.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x < y && x < z) {\n    return true;\n  } else if (y\
    \ < x && y < z) {\n    return false;\n  } else {\n    return x === (x + y);\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3w6fic4o.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3w6fic4o.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return any_int_impl(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7eeaaz0t.ts(10,10): error TS2304: Cannot find name ''any_int_impl''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) || is_int(x + y) || is_int(x + z) ||\
    \ is_int(y + z));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpgs3ihjmp.ts(10,24): error TS2304: Cannot find name ''is_int''.

    ../../../../tmp/tmpgs3ihjmp.ts(10,41): error TS2304: Cannot find name ''is_int''.

    ../../../../tmp/tmpgs3ihjmp.ts(10,58): error TS2304: Cannot find name ''is_int''.

    '
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < 0 || y < 0 || z < 0) {\n    return\
    \ false;\n  }\n  if (x > y || y > z) {\n    return false;\n  }\n  if (x === 0\
    \ || y === 0 || z === 0) {\n    return false;\n  }\n  return true;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpi8i8v13w.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi8i8v13w.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) return true;\n  if (y === z) return\
    \ true;\n  if (x === -y || x === -z) return true;\n  if (y === -z) return true;\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbehzfopf.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbehzfopf.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === sum(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprd23s57l.ts(10,16): error TS2304: Cannot find name ''sum''.

    '
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && y < z) {\n    return false;\n\
    \  }\n  if (x > y && z < y) {\n    return false;\n  }\n  if (x < z && z < y) {\n\
    \    return true;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp551__88b.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp551__88b.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9y7mpjb7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9y7mpjb7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9y7mpjb7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9y7mpjb7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === sum(x, y, z) && isInt(x) && isInt(y) && isInt(z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8s2iwsey.ts(10,16): error TS2304: Cannot find name ''sum''.

    ../../../../tmp/tmp8s2iwsey.ts(10,32): error TS2304: Cannot find name ''isInt''.

    ../../../../tmp/tmp8s2iwsey.ts(10,44): error TS2304: Cannot find name ''isInt''.

    ../../../../tmp/tmp8s2iwsey.ts(10,56): error TS2304: Cannot find name ''isInt''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === 'number') && (typeof y === 'number')\
    \ && (typeof z === 'number')) &&\n    (x === y || x === z || y === z);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpop1wnxhk.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpop1wnxhk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x < 0 || y < 0 || z < 0) {\n        return false;\n\
    \    }\n    if (x === y && x === z) {\n        return true;\n    }\n    if (x\
    \ === y) {\n        return true;\n    }\n    if (x === z) {\n        return true;\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpudm8cb9k.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpudm8cb9k.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) || x === z) || (x === z) || (y === z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2h_6ce8t.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2h_6ce8t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y && x === z) return true;\n  if (x === y ||\
    \ x === z) return true;\n  if (y === z) return true;\n  return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp09vbwzec.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp09vbwzec.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1)) && (x % 1 !== 0 || x % 1 !== 1);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8qlh4721.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8qlh4721.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < 0 || y < 0 || z < 0) {\n    return\
    \ false;\n  }\n  if (x > y && x > z) {\n    return true;\n  }\n  if (y > z) {\n\
    \    return false;\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp22yud_kg.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp22yud_kg.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9y7mpjb7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9y7mpjb7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (y === z || y === x))\
    \ || (x === z && y === x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpazd502xg.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpazd502xg.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\") && (typeof y === \"\
    number\") && (typeof z === \"number\")) &&\n    x === y || x === z || y === z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfs_hpmq.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfs_hpmq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) return true;\n    if (y ===\
    \ z) return true;\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm0xsxytu.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm0xsxytu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return any_int_impl(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7eeaaz0t.ts(10,10): error TS2304: Cannot find name ''any_int_impl''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return true;\n  }\n  if (x === 0 || y === 0 || z === 0) {\n\
    \    return false;\n  }\n  if (x === -0 || y === -0 || z === -0 || x === y ||\
    \ x === z || y === z) {\n    return false;\n  }\n  if (x === 0 || y === 0 || z\
    \ === 0) {\n    return false;\n  }\n  if (x === -0 || y === -0 || z === -0 ||\
    \ x === y || x === z || y === z) {\n    return false;\n  }\n  if (x === 0 || y\
    \ === 0 || z === 0) {\n    return false;\n  }\n  if (x === -0 || y === -0 || z\
    \ === -0 || x === y || x === z || y === z) {\n    return false;\n  }\n  if (x\
    \ === 0 || y === 0 || z === 0) {\n    return false;\n  }\n  if (x === -0 || y\
    \ === -0 || z === -0 || x === y || x === z || y === z) {\n    return false;\n\
    \  }\n  if (x === 0 || y === 0 || z === 0) {\n    return false;\n  }\n  if (x\
    \ === -0 || y === -0 || z === -0 || x === y || x === z || y === z) {\n    return\
    \ false;\n  }\n  if (x === 0 || y === 0 || z === 0) {\n    return false;\n  }\n\
    \  if (x === -0 || y === -0 || z === -0 || x === y || x === z || y === z) {\n\
    \    return false;\n  }\n  if (x === 0 || y === 0 || z === 0) {\n    return false;\n\
    \  }\n  if (x === -0 || y === -0 || z === -0 || x === y || x === z || y === z)\
    \ {\n    return false;\n  }\n  if (x === 0 || y === 0 || z === 0) {\n    return\
    \ false;\n  }\n  if (x === -0 || y === -0 || z === -0 || x === y || x === z ||\
    \ y === z) {\n    return false;\n  }\n  if (x === 0 || y === 0 || z === 0) {\n\
    \    return false;\n  }\n  if (x === -0 || y === -0 || z === -0 || x === y ||\
    \ x === z || y === z) {\n    return false;\n  }\n  if (x === 0 || y === 0 || z\
    \ === 0) {\n    return false;\n  }\n  if (x === -0 || y === -0 || z === -0 ||\
    \ x === y || x === z || y === z) {\n    return false;\n  }\n  if (x === 0 || y\
    \ === 0 || z === 0) {\n    return false;\n  }\n  if (x === -0 || y === -0 || z\
    \ === -0 || x === y || x === z || y === z) {\n    return false;\n  }\n  if (x\
    \ === 0 || \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi7__2uqu.ts(83,9): error TS1005: '')'' expected.

    ../../../../tmp/tmpi7__2uqu.ts(101,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === 'number') && (typeof y === 'number')\
    \ && (typeof z === 'number')) &&\n    (x === y || x === z || y === z);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpop1wnxhk.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpop1wnxhk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\") && (typeof y === \"\
    number\") && (typeof z === \"number\")) ?\n    (x == y || x == z || y == z) :\n\
    \    false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb5c14yyo.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb5c14yyo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1)) && x % 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6mxi0k7j.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6mxi0k7j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === 0 || y === 0 || z === 0) {\n    return false;\n\
    \  }\n  return ((x === y && x === z) || (x === z && y === z) || (x === z && y\
    \ === y));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkg6wxls5.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkg6wxls5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== x && y !== y &&\
    \ z !== z)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa5lyydpw.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa5lyydpw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return true;\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp85t3z5wx.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp85t3z5wx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return any_int_helper(x, y, z);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpqee7yerl.ts(10,10): error TS2304: Cannot find name ''any_int_helper''.

    '
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return x !== x && y !== y && z !== z;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp83l_sin9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83l_sin9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && y < z) {\n    return true;\n\
    \  }\n  if (x > y && z < y) {\n    return false;\n  }\n  if (x < z && z < y) {\n\
    \    return true;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1v_xqfb4.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1v_xqfb4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) || isInteger(x) && isInteger(y) && isInteger(z))\
    \ || ((x === z) || isInteger(x) && isInteger(z) && isInteger(y));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp01c1vrgo.ts(10,24): error TS2304: Cannot find name ''isInteger''.

    ../../../../tmp/tmp01c1vrgo.ts(10,40): error TS2304: Cannot find name ''isInteger''.

    ../../../../tmp/tmp01c1vrgo.ts(10,56): error TS2304: Cannot find name ''isInteger''.

    ../../../../tmp/tmp01c1vrgo.ts(10,87): error TS2304: Cannot find name ''isInteger''.

    ../../../../tmp/tmp01c1vrgo.ts(10,103): error TS2304: Cannot find name ''isInteger''.

    ../../../../tmp/tmp01c1vrgo.ts(10,119): error TS2304: Cannot find name ''isInteger''.

    '
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\") && (typeof y === \"\
    number\") && (typeof z === \"number\")) &&\n    (x === y || x === z || y === z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpljtjmypb.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpljtjmypb.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && y < z) {\n    return true;\n\
    \  }\n  if (x < z && z < y) {\n    return false;\n  }\n  return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp72_881w2.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp72_881w2.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < 0 || y < 0 || z < 0) {\n    return\
    \ false;\n  }\n  if (x > y && x > z) {\n    return true;\n  }\n  if (y > z) {\n\
    \    return false;\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptl6fbkh3.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptl6fbkh3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfdkqcd3.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfdkqcd3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y && x === z) || (x !== y && x !== z &&\
    \ x !== 0)) || (x !== x && y !== y && z !== z);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0tp20ny.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0tp20ny.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334805
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1)) && (x % 1 !== 0 || x % 1 !== 1);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8qlh4721.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8qlh4721.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334801
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          (x === y || x === z || y === z)) &&\n\
    \         (x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoodb2dsy.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoodb2dsy.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === 0 || y === 0 || z === 0) {\n    return false;\n\
    \  }\n  return x === y || x === z;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1yo0au03.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1yo0au03.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    if (x === -y || x ===\
    \ -z) {\n        return true;\n    }\n    if (y === -z) {\n        return true;\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjjmzi6h7.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjjmzi6h7.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return any_int_(any_int_(x, y), z);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpoeqwmwbm.ts(10,10): error TS2552: Cannot find name ''any_int_''.
    Did you mean ''any_int''?

    ../../../../tmp/tmpoeqwmwbm.ts(10,19): error TS2552: Cannot find name ''any_int_''.
    Did you mean ''any_int''?

    '
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  if (x < y && x < z) {\n    return true;\n\
    \  }\n  if (y < z) {\n    return false;\n  }\n  return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu0gerg37.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu0gerg37.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") &&\n          x === y && x === z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt93uawa3.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpt93uawa3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x === y || x === z || y === z;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbpmre1n9.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpmre1n9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334804
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y || x === z) {\n        return true;\n  \
    \  }\n    if (y === z) {\n        return true;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8l14w65d.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8l14w65d.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y || x === z) && (x % 1 === 0 || x % 1\
    \ === 1) && x % 1 !== 0) || (x !== y && x !== z && x % 1 !== 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcn5p9ya0.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcn5p9ya0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return ((x === y) || x === z) || (x === z) || (y === z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2h_6ce8t.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2h_6ce8t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334802
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x === y || x === z || y === z;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphrz5m2rn.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphrz5m2rn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334798
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === 0 || y === 0 || z === 0) {\n    return false;\n\
    \  }\n  return x === y || x === z;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1yo0au03.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1yo0au03.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x === y || x === z) {\n    return true;\n  }\n  if\
    \ (y === z) {\n    return false;\n  }\n  return typeof x === \"number\" && typeof\
    \ y === \"number\" && typeof z === \"number\";\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa1ymousu.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa1ymousu.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334807

language: ts
name: HumanEval_133_sum_squares
results:
- exit_code: 2
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=0 |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_squares;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 3.0, 5.0, 7.0]),84);\n  assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n \
    \ assert.deepEqual(candidate([-2.4, 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0,\
    \ 1.0, 15.0, 2.0]),10230);\n  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n\
    \  assert.deepEqual(candidate([-1.4, 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]),1086);\n  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbtk2pl6l.ts(17,2): error TS1110: Type expected.

    ../../../../../tmp/tmpbtk2pl6l.ts(17,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpbtk2pl6l.ts(18,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpbtk2pl6l.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpbtk2pl6l.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpbtk2pl6l.ts(19,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpbtk2pl6l.ts(19,16): error TS1109: Expression expected.

    ../../../../../tmp/tmpbtk2pl6l.ts(21,9): error TS1005: '';'' expected.

    '
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i]\
    \ * lst[i]);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmppsf_shlg.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppsf_shlg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmpgz6g8srn.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgz6g8srn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += lst[i] * lst[i];\n\
    \  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmpxhfhvflg.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxhfhvflg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 2
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n</code>\n<|/ a tags=typescript,javascript\
    \ |>\n<| a tags=typescript,javascript |>\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_squares;\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_zhfuqb2.ts(17,2): error TS1110: Type expected.

    ../../../../../tmp/tmp_zhfuqb2.ts(17,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp_zhfuqb2.ts(18,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp_zhfuqb2.ts(18,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp_zhfuqb2.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp_zhfuqb2.ts(19,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_zhfuqb2.ts(19,34): error TS1109: Expression expected.

    ../../../../../tmp/tmp_zhfuqb2.ts(21,9): error TS1005: '';'' expected.

    '
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += lst[i] * lst[i];\n\
    \  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmpxhfhvflg.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxhfhvflg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 0
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
    \ * Math.ceil(lst[i]);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883
- exit_code: 1
  program: "//You are given a list of numbers.\n// You need to return the sum of squared\
    \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
    \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
    \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should\
    \ be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
    \ the output should be 6\nfunction sum_squares(lst: number[]): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_squares;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n \
    \ assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
    \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
    \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
    \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
    \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
    \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n29\n    at test (/tmp/tmp1_fwkiol.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_fwkiol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 29,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738883

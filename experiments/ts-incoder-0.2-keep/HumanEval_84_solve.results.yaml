language: ts
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = 1; i <= N; i++) {\n    sum\
    \ += i;\n  }\n  for (let i = 1; i <= sum; i++) {\n    result += i.toString(2);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpxm3_um48.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxm3_um48.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1101110010111011110001001101010111100110111101111100001000110010100111010010101101101011111000110011101011011111001110111110111111000001000011000101000111001001001011001101001111010001010011010101010111011001011011011101011111100001100011100101100111101001101011101101101111110001110011110101110111111001111011111101111111000000100000110000101000011100010010001011000110100011110010001001001100101010010111001100100110110011101001111101000010100011010010101001110101001010101101011010101111011000101100110110101011011101110010111011011110101111111000001100001110001011000111100100110010111001101100111110100011010011101010110101111011001101101110111011011111110000111000111100101110011111010011101011110110111011111110001111001111101011110111111100111110111111101111111100000001000000110000010100000111000010010000101"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = \"\";\n  let remainder: number = N;\n  let digits: number[]\
    \ = [];\n  while (N > 0) {\n    digits.push(N % 10);\n    remainder = N / 10;\n\
    \    N = remainder;\n  }\n  for (let i = 0; i < digits.length; i++) {\n    result\
    \ += digits[i] + \"1\";\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'010101110.110.0110.00110.000110.0000110.000001000000000000000211.0000000000000002e-711.0000000000000002e-811.0000000000000003e-911.0000000000000003e-1011.0000000000000003e-1111.0000000000000002e-1211.0000000000000002e-1311.0000000000000002e-1411e-1511.0000000000000001e-1611e-1711e-1811.0000000000000001e-1911.0000000000000001e-2011.0000000000000001e-2111e-2211.0000000000000001e-2311.0000000000000001e-2411.0000000000000002e-2511.0000000000000002e-2611.0000000000000002e-2711.0000000000000002e-2811.00000000...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_lqft0fq.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_lqft0fq.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '010101110.110.0110.00110.000110.0000110.000001000000000000000211.0000000000000002e-711.0000000000000002e-811.0000000000000003e-911.0000000000000003e-1011.0000000000000003e-1111.0000000000000002e-1211.0000000000000002e-1311.0000000000000002e-1411e-1511.0000000000000001e-1611e-1711e-1811.0000000000000001e-1911.0000000000000001e-2011.0000000000000001e-2111e-2211.0000000000000001e-2311.0000000000000001e-2411.0000000000000002e-2511.0000000000000002e-2611.0000000000000002e-2711.0000000000000002e-2811.0000000000000002e-2911.0000000000000003e-3011.0000000000000003e-3111.0000000000000003e-3211.0000000000000004e-3311.0000000000000004e-3411.0000000000000004e-3511.0000000000000004e-3611.0000000000000005e-3711.0000000000000005e-3811.0000000000000004e-3911.0000000000000003e-4011.0000000000000004e-4111.0000000000000004e-"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += sum % 2;\n    sum =\
    \ Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_21gz5_u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_21gz5_u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpk820n7t0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk820n7t0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let remainder = 0;\n  while (N > 0) {\n    remainder =\
    \ N % 2;\n    result += remainder;\n    N = Math.floor(N / 2);\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmxlkgz7m.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmxlkgz7m.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let str = \"\";\n  while (N > 0) {\n    sum += N % 2;\n   \
    \ N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    str += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return str;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpepuf2tqc.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpepuf2tqc.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result = result + sum % 2;\n    sum\
    \ = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp7nez22tg.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7nez22tg.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let binary = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = N / 2;\n  }\n  while (sum > 0) {\n    binary = binary + String(sum %\
    \ 2);\n    sum = sum / 2;\n  }\n  return binary;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpma7b6uzk.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpma7b6uzk.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    const remainder = N % 2;\n    result\
    \ += remainder;\n    N = N / 2;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'00010.51.251.6251.81251.906251.9531250.97656250.488281250.2441406250.12207031250.061035156250.0305175781250.01525878906250.007629394531250.0038146972656250.00190734863281250.000953674316406250.0004768371582031250.00023841857910156250.000119209289550781250.0000596046447753906250.0000298023223876953120.0000149011611938476560.0000074505805969238280.0000037252902984619140.0000018626451492309579.313225746154785e-74.6566128730773926e-72.3283064365386963e-71.1641532182693481e-75.820766091346741e-82.91038304567...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpppohkp57.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpppohkp57.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00010.51.251.6251.81251.906251.9531250.97656250.488281250.2441406250.12207031250.061035156250.0305175781250.01525878906250.007629394531250.0038146972656250.00190734863281250.000953674316406250.0004768371582031250.00023841857910156250.000119209289550781250.0000596046447753906250.0000298023223876953120.0000149011611938476560.0000074505805969238280.0000037252902984619140.0000018626451492309579.313225746154785e-74.6566128730773926e-72.3283064365386963e-71.1641532182693481e-75.820766091346741e-82.9103830456733704e-81.4551915228366852e-87.275957614183426e-93.637978807091713e-91.8189894035458565e-99.094947017729282e-104.547473508864641e-102.2737367544323206e-101.1368683772161603e-105.6843418860808015e-112.8421709430404007e-111.4210854715202004e-117.105427357601002e-123.552713678800501e-121.7763568394002505e-128.8"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result += (N % 2 === 0 ? '1' : '0');\n\
    \    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1110100000'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmponbv2nb3.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmponbv2nb3.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1110100000',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let str = '';\n  while (N > 0) {\n    sum += N % 2;\n    N\
    \ = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    str += '1';\n    sum--;\n\
    \  }\n  return str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'111111'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpd242fs5a.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd242fs5a.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '111111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n  }\n  for (let i = N; i > 0; i /= 10) {\n    result += sum\
    \ % 2;\n    sum += sum / 10;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.11111111111111121.22222222222222231.34444444444444461.4788888888888891.62677777777777791.78945555555555561.9684011111111110.165241222222221930.38176534444444420.61994187888888860.88193606677777761.17012967345555551.48714264080111121.83585690488122260.219442595369344850.64138685490627981.10552554039690781.61607809443659890.177685903880258960.79545449426828441.47499994369511270.22249993806462421.04474993187108641.94922492505819460.94414741756401450.038562159320415291.24241837525245740.56666021277770360....\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp40md232e.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp40md232e.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.11111111111111121.22222222222222231.34444444444444461.4788888888888891.62677777777777791.78945555555555561.9684011111111110.165241222222221930.38176534444444420.61994187888888860.88193606677777761.17012967345555551.48714264080111121.83585690488122260.219442595369344850.64138685490627981.10552554039690781.61607809443659890.177685903880258960.79545449426828441.47499994369511270.22249993806462421.04474993187108641.94922492505819460.94414741756401450.038562159320415291.24241837525245740.56666021277770360.0233262340554745151.62565885746102271.38822474320712531.32704721752783781.4597519392806221.80572713320868420.38629984652955331.22492983118250720.34742281430075651.78216509573083211.56038160530391681.71641976583430990.288061742417738741.31686791665951120.84855470832546590.93341017915801671.62675119707381550.9"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = \"\";\n  let sum: number = 0;\n  for (let i = N; i > 0;\
    \ i /= 10) {\n    sum += i % 10;\n  }\n  for (let i = sum; i > 0; i /= 10) {\n\
    \    result += i % 10 + \"\";\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.11111111111111120.111111111111111120.0111111111111111120.00111111111111111110.000111111111111111120.0000111111111111111120.00000111111111111111121.1111111111111112e-71.1111111111111112e-81.1111111111111113e-91.1111111111111113e-101.1111111111111113e-111.1111111111111112e-121.1111111111111112e-131.1111111111111112e-141.1111111111111112e-151.1111111111111112e-161.1111111111111113e-171.1111111111111113e-181.1111111111111113e-191.1111111111111113e-201.1111111111111113e-211.1111111111111113e-221.1111111111...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmprcv0ibqq.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmprcv0ibqq.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.11111111111111120.111111111111111120.0111111111111111120.00111111111111111110.000111111111111111120.0000111111111111111120.00000111111111111111121.1111111111111112e-71.1111111111111112e-81.1111111111111113e-91.1111111111111113e-101.1111111111111113e-111.1111111111111112e-121.1111111111111112e-131.1111111111111112e-141.1111111111111112e-151.1111111111111112e-161.1111111111111113e-171.1111111111111113e-181.1111111111111113e-191.1111111111111113e-201.1111111111111113e-211.1111111111111113e-221.1111111111111113e-231.1111111111111113e-241.1111111111111113e-251.1111111111111114e-261.1111111111111114e-271.1111111111111115e-281.1111111111111114e-291.1111111111111115e-301.1111111111111115e-311.1111111111111116e-321.1111111111111117e-331.1111111111111116e-341.1111111111111116e-351.1111111111111117e-361.11111111111"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpk820n7t0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk820n7t0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n    result += i.toString(2);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpyfo80dz8.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyfo80dz8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result = String(sum) + result;\n\
    \    sum--;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'123456789101112'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpxegvjgh1.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxegvjgh1.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '123456789101112',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x00\\\
    x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00...\n\nshould loosely\
    \ deep-equal\n\n'1'\n    at test (/tmp/tmpc54pk49g.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc54pk49g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x00\\\
    x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n  }\n  for (let i = N; i > 0; i /= 10) {\n    result += sum\
    \ % 2;\n    sum += sum % 10;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.11111111111111120.222222222222222320.444444444444444640.88888888888888931.77777777777777861.55555555555555711.11111111111111430.222222222222228540.44444444444445710.88888888888891421.77777777777782831.55555555555565661.11111111111131320.222222222222626440.44444444444525290.88888888889050581.77777777778101151.5555555555620231.11111111112404610.22222222224809230.44444444449618460.88888888899236921.77777777798473831.55555555596947671.11111111193895340.22222222387790680.44444444775581360.88888889551162721...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmphhhoofaf.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmphhhoofaf.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.11111111111111120.222222222222222320.444444444444444640.88888888888888931.77777777777777861.55555555555555711.11111111111111430.222222222222228540.44444444444445710.88888888888891421.77777777777782831.55555555555565661.11111111111131320.222222222222626440.44444444444525290.88888888889050581.77777777778101151.5555555555620231.11111111112404610.22222222224809230.44444444449618460.88888888899236921.77777777798473831.55555555596947671.11111111193895340.22222222387790680.44444444775581360.88888889551162721.77777779102325441.55555558204650881.11111116409301760.222222328186035160.44444465637207030.88888931274414061.77777862548828121.55555725097656251.1111145019531250.222229003906250.44445800781250.8889160156251.777832031251.55566406251.1113281250.222656250.44531250.8906251.781251.56251.1250.250.5100000000000000"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw9g3hzxg.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9g3hzxg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let remainder = 0;\n  while (N > 0) {\n    remainder =\
    \ N % 2;\n    result += remainder;\n    N = Math.floor(N / 2);\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmxlkgz7m.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmxlkgz7m.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmpbr2uh9.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmpbr2uh9.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let binary = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = N / 2;\n  }\n  while (sum > 0) {\n    binary += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return binary;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp1zeymnuj.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1zeymnuj.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = \"\";\n  for (let i = 0; i < N; i++) {\n    sum\
    \ += N % 2;\n    N = N / 2;\n  }\n  while (N > 0) {\n    result += N % 2;\n  \
    \  N = N / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.906251.9531250.97656250.488281250.2441406250.12207031250.061035156250.0305175781250.01525878906250.007629394531250.0038146972656250.00190734863281250.000953674316406250.0004768371582031250.00023841857910156250.000119209289550781250.0000596046447753906250.0000298023223876953120.0000149011611938476560.0000074505805969238280.0000037252902984619140.0000018626451492309579.313225746154785e-74.6566128730773926e-72.3283064365386963e-71.1641532182693481e-75.820766091346741e-82.9103830456733704e-81.455191522836...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpizcksey_.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpizcksey_.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.906251.9531250.97656250.488281250.2441406250.12207031250.061035156250.0305175781250.01525878906250.007629394531250.0038146972656250.00190734863281250.000953674316406250.0004768371582031250.00023841857910156250.000119209289550781250.0000596046447753906250.0000298023223876953120.0000149011611938476560.0000074505805969238280.0000037252902984619140.0000018626451492309579.313225746154785e-74.6566128730773926e-72.3283064365386963e-71.1641532182693481e-75.820766091346741e-82.9103830456733704e-81.4551915228366852e-87.275957614183426e-93.637978807091713e-91.8189894035458565e-99.094947017729282e-104.547473508864641e-102.2737367544323206e-101.1368683772161603e-105.6843418860808015e-112.8421709430404007e-111.4210854715202004e-117.105427357601002e-123.552713678800501e-121.7763568394002505e-128.881784197001252e-134.44"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result += String(N % 2);\n    N =\
    \ Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmppdox8wta.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmppdox8wta.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = '';\n  let sum: number = 0;\n  while (N > 0) {\n    sum\
    \ += N % 2;\n    N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result\
    \ += String(sum % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\"\
    );\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpgo6efuxm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgo6efuxm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result = result + sum % 2;\n    sum\
    \ = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp7nez22tg.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7nez22tg.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp6olwoah9.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6olwoah9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += sum % 2;\n    sum =\
    \ Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_21gz5_u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_21gz5_u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n    result += i.toString(2);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpyfo80dz8.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyfo80dz8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n  }\n  for (let i = N; i > 0; i /= 10) {\n    result += sum\
    \ % 10 + i;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpjn4ng0s7.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjn4ng0s7.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = N / 2;\n  }\n  while (sum > 0) {\n    result = result + sum % 2;\n  \
    \  sum = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpftvjh_9q.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpftvjh_9q.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw9g3hzxg.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9g3hzxg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = '';\n  for (let i = N; i > 0; i /= 10) {\n    result +=\
    \ i.toString(2);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpof1fxtab.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpof1fxtab.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 2
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  for (let i = 0; i < N; i++) {\n    result += toBinary(i);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu8kys4ji.ts(14,15): error TS2304: Cannot find name
    ''toBinary''.

    '
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result += String(N % 2);\n    N =\
    \ Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmppdox8wta.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmppdox8wta.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = \"\";\n  for (let i = N; i > 0; i /= 2) {\n  \
    \  sum += i;\n  }\n  for (let i = N; i > 0; i /= 2) {\n    result += String(sum\
    \ % 2);\n    sum += i / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'00011.50.750.3750.18750.093750.0468751.02343751.511718751.7558593751.87792968751.938964843751.9694824218751.98474121093751.992370605468751.9961853027343751.99809265136718751.99904632568359381.99952316284179691.99976158142089841.99988079071044921.99994039535522461.99997019767761231.99998509883880621.9999925494194031.99999627470970151.99999813735485081.99999906867742541.99999953433871271.99999976716935631.99999988358467821.9999999417923391.99999997089616951.99999998544808481.99999999272404241.999999996362...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpud1_2ucy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpud1_2ucy.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00011.50.750.3750.18750.093750.0468751.02343751.511718751.7558593751.87792968751.938964843751.9694824218751.98474121093751.992370605468751.9961853027343751.99809265136718751.99904632568359381.99952316284179691.99976158142089841.99988079071044921.99994039535522461.99997019767761231.99998509883880621.9999925494194031.99999627470970151.99999813735485081.99999906867742541.99999953433871271.99999976716935631.99999988358467821.9999999417923391.99999997089616951.99999998544808481.99999999272404241.99999999636202121.99999999818101061.99999999909050531.99999999954525261.99999999977262631.99999999988631321.99999999994315661.99999999997180571.99999999998590281.99999999999317881.99999999999681681.99999999999863581.999999999999545300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = '';\n  let digits: number[] = [];\n  let sum: number =\
    \ 0;\n  while (N > 0) {\n    digits.push(N % 10);\n    N = Math.floor(N / 10);\n\
    \  }\n  for (let i = 0; i < digits.length; i++) {\n    sum += digits[i];\n  }\n\
    \  for (let i = digits.length - 1; i >= 0; i--) {\n    result += digits[i] + sum;\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2111'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_w0vaddb.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_w0vaddb.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    const remainder = N % 2;\n    result\
    \ += remainder;\n    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpog1qze3n.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog1qze3n.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let str = \"\";\n  for (let i = N; i > 0; i /= 10) {\n    sum\
    \ += i % 10;\n    str += sum.toString(2);\n  }\n  return str;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpds_7fpaq.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpds_7fpaq.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n    result += String(sum % 2);\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\"\
    );\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp6u8mf26k.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6u8mf26k.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpwlnoo4z0.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwlnoo4z0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let binary = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    binary += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return binary;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpbt980tlt.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbt980tlt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let remainder = 0;\n  let sum = 0;\n  while (N > 0) {\n\
    \    remainder = N % 2;\n    sum += remainder;\n    N = Math.floor(N / 2);\n \
    \ }\n  for (let i = sum; i > 0; i--) {\n    result += i;\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\"\
    );\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'654321'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmq8292x_.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmq8292x_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '654321',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x00\\\
    x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00...\n\nshould loosely\
    \ deep-equal\n\n'1'\n    at test (/tmp/tmpc54pk49g.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc54pk49g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x00\\\
    x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result = `${result}${N % 2 === 0 ?\
    \ '1' : '0'}`;\n    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1110100000'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpww37pnb6.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpww37pnb6.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1110100000',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += String(sum % 2);\n    sum\
    \ = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpp5nwohsw.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5nwohsw.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += sum % 2;\n    sum =\
    \ Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_21gz5_u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_21gz5_u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  for (let i = N; i > 0; i /= 2) {\n    sum\
    \ += i % 2;\n  }\n  for (let i = N; i > 0; i /= 2) {\n    result += sum % 2;\n\
    \    sum += Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmptt1n2a3z.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmptt1n2a3z.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw9g3hzxg.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9g3hzxg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = \"\";\n  let digits: number[] = [];\n  let sum: number\
    \ = 0;\n  while (N > 0) {\n    digits.push(N % 10);\n    N = Math.floor(N / 10);\n\
    \  }\n  for (let i = 0; i < digits.length; i++) {\n    sum += digits[i];\n  }\n\
    \  while (sum > 0) {\n    result += String.fromCharCode(sum % 2);\n    sum = Math.floor(sum\
    \ / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x01'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpiqtsxxqh.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiqtsxxqh.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x01',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let remainder = 0;\n  while (N > 0) {\n    remainder =\
    \ N % 2;\n    result += remainder;\n    N = Math.floor(N / 2);\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmxlkgz7m.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmxlkgz7m.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n    result += i.toString(2);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'11111010001100100101010.00011001100110011001100110011001100110011001100110011010.000000101000111101011100001010001111010111000010100011110110.0000000001000001100010010011011101001011110001101010011111110.0000000000000110100011011011100010111010110001110001000011001011010.0000000000000000101001111100010110101100010001110001101101000111100010.000000000000000000010000110001101111011110100000101101011110110110001110.0000000000000000000000011010110101111111001010011010101111001010111101001010.000000000000000...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpyfo80dz8.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyfo80dz8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpk820n7t0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk820n7t0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = '';\n  let sum: number = 0;\n  for (let i = N; i > 0;\
    \ i /= 10) {\n    sum += i % 10;\n  }\n  for (let i = N; i > 0; i /= 10) {\n \
    \   result += sum % 10 + i % 10;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpnbuddjbg.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnbuddjbg.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw9g3hzxg.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9g3hzxg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n    result += String(sum % 2);\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\"\
    );\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp6u8mf26k.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6u8mf26k.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00011.11.111.1111.11111.111111.1111111.11111111.111111111.1111111111.11111111111.111111111111.11111111111100011.11111111111111.111111111111111.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111111111121.11111111"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result += (N % 2 === 0 ? '0' : '1');\n\
    \    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpss_1e2ah.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpss_1e2ah.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let binary = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    binary += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return binary;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpbt980tlt.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbt980tlt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n    result += sum.toString(2);\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\"\
    );\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpgs7nleg2.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgs7nleg2.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00011.0001100110011001100110011001100110011001100110011011.00011100001010001111010111000010100011110101110000111.00011100011010100111111011111001110110110010001011011.0001110001110001000011001011001010010101111010011111.0001110001110001101101000111100001000010001100011.00011100011100011100010100111111001110011101000110111.0001110001110001110001101110110010111000111110110111.0001110001110001110001110001011110101100000110010011.0001110001110001110001110001101111110111100111000011.0001110001110001110001110001110001100101100011111011.0001110001110001110001110001110001110000100011100111.0001110001110001110001110001110001110001101001111111.00011100011100011100011100011100011100011100011.00011100011100011100011100011100011100011100011011011.0001110001110001110001110001110001110001110001110011.00011100011100011100"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result = result + sum % 2;\n    sum\
    \ = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp7nez22tg.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7nez22tg.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += sum % 2;\n    sum =\
    \ Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_21gz5_u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_21gz5_u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpk820n7t0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk820n7t0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  for (let i = N; i > 0; i /= 10) {\n    result += i.toString(2);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpyfo80dz8.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyfo80dz8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = '';\n  let sum: number = 0;\n  while (N > 0) {\n    sum\
    \ += N % 2;\n    N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp49xbq9bn.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp49xbq9bn.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += sum % 2;\n    sum =\
    \ Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_21gz5_u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_21gz5_u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = \"\";\n  let sum = 0;\n  while (N > 0) {\n    sum += N\
    \ % 2;\n    N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum\
    \ % 2;\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpc0sg0sgd.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc0sg0sgd.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpb974ea11.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpb974ea11.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString(2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'110'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmps36hnw_v.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps36hnw_v.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '110',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString(2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1100'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3zy9edkp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3zy9edkp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1100',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let str = '';\n  while (N > 0) {\n    sum += N % 2;\n    N\
    \ = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    str += sum % 2;\n    sum\
    \ = Math.floor(sum / 2);\n  }\n  return str;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp5vbuj0cm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vbuj0cm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let str = \"\";\n  while (N > 0) {\n    sum += N % 2;\n   \
    \ N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    str += sum % 2;\n    sum\
    \ = Math.floor(sum / 2);\n  }\n  return str;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw8dyfvl0.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw8dyfvl0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString(2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'110'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmps36hnw_v.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps36hnw_v.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '110',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ Math.floor(N / 2);\n  }\n  while (sum) {\n    result += sum % 2;\n    sum =\
    \ Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp_21gz5_u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_21gz5_u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result = `${result}${N % 2 === 0 ?\
    \ '0' : '1'}`;\n    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpxakgpeo6.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxakgpeo6.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749625
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 2) {\n    sum\
    \ += i;\n  }\n  for (let i = 1; i <= sum; i++) {\n    result += `${i}`;\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042052...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmptkc0kwmb.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmptkc0kwmb.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042052062072082092102112122132142152162172182192202212222232242252262272282292302312322332342352362372382392402412422432442452462472482492502512522532542552562572582592602612622632642652662672682692702712722732742752762772782792802812822832842852862872882892902912922932942952962972982993003013023033043053063073083"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let remainder = 0;\n  let sum = 0;\n  while (N > 0) {\n\
    \    remainder = N % 2;\n    sum += remainder;\n    N = N / 2;\n  }\n  for (let\
    \ i = sum; i >= 0; i--) {\n    result += i;\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1211109876543210'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp19d9vshx.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmp19d9vshx.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1211109876543210',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpk820n7t0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk820n7t0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N) {\n    sum += N % 2;\n    N =\
    \ N / 2;\n  }\n  while (sum) {\n    result += sum % 2;\n    sum = sum / 2;\n \
    \ }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpl60riff5.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl60riff5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n  }\n  for (let i = N; i > 0; i /= 10) {\n    result += sum\
    \ % 10 + i;\n    sum = Math.floor(sum / 10);\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1001.11111111111111001010.10.010.0010.00010.000010.00000100000000000000021.0000000000000002e-71.0000000000000002e-81.0000000000000003e-91.0000000000000003e-101.0000000000000003e-111.0000000000000002e-121.0000000000000002e-131.0000000000000002e-141e-151.0000000000000001e-161e-171e-181.0000000000000001e-191.0000000000000001e-201.0000000000000001e-211e-221.0000000000000001e-231.0000000000000001e-241.0000000000000002e-251.0000000000000002e-261.0000000000000002e-271.0000000000000002e-281.0000000000000002e-29...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpvu_iafbs.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpvu_iafbs.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1001.11111111111111001010.10.010.0010.00010.000010.00000100000000000000021.0000000000000002e-71.0000000000000002e-81.0000000000000003e-91.0000000000000003e-101.0000000000000003e-111.0000000000000002e-121.0000000000000002e-131.0000000000000002e-141e-151.0000000000000001e-161e-171e-181.0000000000000001e-191.0000000000000001e-201.0000000000000001e-211e-221.0000000000000001e-231.0000000000000001e-241.0000000000000002e-251.0000000000000002e-261.0000000000000002e-271.0000000000000002e-281.0000000000000002e-291.0000000000000003e-301.0000000000000003e-311.0000000000000003e-321.0000000000000004e-331.0000000000000004e-341.0000000000000004e-351.0000000000000004e-361.0000000000000005e-371.0000000000000005e-381.0000000000000004e-391.0000000000000003e-401.0000000000000004e-411.0000000000000004e-421.0000000000000003e-431"
  stdout: ''
  timestamp: 1659749626
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = \"\";\n  while (N > 0) {\n    sum += N % 2;\n\
    \    N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp6olwoah9.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6olwoah9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x01\\\
    x01'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmph7wmniwy.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmph7wmniwy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x01\\\
    x01',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 2) {\n    sum\
    \ += i;\n  }\n  for (let i = N; i > 0; i /= 2) {\n    result += sum % 2;\n   \
    \ sum += i / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'00011.50.750.3750.18750.093750.0468751.02343751.511718751.7558593751.87792968751.938964843751.9694824218751.98474121093751.992370605468751.9961853027343751.99809265136718751.99904632568359381.99952316284179691.99976158142089841.99988079071044921.99994039535522461.99997019767761231.99998509883880621.9999925494194031.99999627470970151.99999813735485081.99999906867742541.99999953433871271.99999976716935631.99999988358467821.9999999417923391.99999997089616951.99999998544808481.99999999272404241.999999996362...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplpuejf27.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmplpuejf27.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00011.50.750.3750.18750.093750.0468751.02343751.511718751.7558593751.87792968751.938964843751.9694824218751.98474121093751.992370605468751.9961853027343751.99809265136718751.99904632568359381.99952316284179691.99976158142089841.99988079071044921.99994039535522461.99997019767761231.99998509883880621.9999925494194031.99999627470970151.99999813735485081.99999906867742541.99999953433871271.99999976716935631.99999988358467821.9999999417923391.99999997089616951.99999998544808481.99999999272404241.99999999636202121.99999999818101061.99999999909050531.99999999954525261.99999999977262631.99999999988631321.99999999994315661.99999999997180571.99999999998590281.99999999999317881.99999999999681681.99999999999863581.999999999999545300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let remainder = 0;\n  while (N > 0) {\n    remainder =\
    \ N % 2;\n    result += remainder;\n    N = Math.floor(N / 2);\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmxlkgz7m.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmxlkgz7m.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N) {\n    sum += N % 2;\n    N =\
    \ N / 2;\n  }\n  while (sum) {\n    result += sum % 2;\n    sum = sum / 2;\n \
    \ }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpdmkxab7v.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdmkxab7v.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result += (N % 2).toString();\n  \
    \  N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0001011111'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpgh23crqp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgh23crqp.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0001011111',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  while (N > 0) {\n    result = String(N % 2) + result;\n\
    \    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1111101000'\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp5gc50q6o.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5gc50q6o.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1111101000',\n\
    \  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result: string = \"\";\n  let sum: number = 0;\n  for (let i = N; i > 0;\
    \ i /= 10) {\n    sum += i % 10;\n  }\n  for (let i = sum; i > 0; i /= 10) {\n\
    \    result += i % 10;\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.11111111111111120.111111111111111120.0111111111111111120.00111111111111111110.000111111111111111120.0000111111111111111120.00000111111111111111121.1111111111111112e-71.1111111111111112e-81.1111111111111113e-91.1111111111111113e-101.1111111111111113e-111.1111111111111112e-121.1111111111111112e-131.1111111111111112e-141.1111111111111112e-151.1111111111111112e-161.1111111111111113e-171.1111111111111113e-181.1111111111111113e-191.1111111111111113e-201.1111111111111113e-211.1111111111111113e-221.1111111111...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpbr3x8tuo.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbr3x8tuo.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.11111111111111120.111111111111111120.0111111111111111120.00111111111111111110.000111111111111111120.0000111111111111111120.00000111111111111111121.1111111111111112e-71.1111111111111112e-81.1111111111111113e-91.1111111111111113e-101.1111111111111113e-111.1111111111111112e-121.1111111111111112e-131.1111111111111112e-141.1111111111111112e-151.1111111111111112e-161.1111111111111113e-171.1111111111111113e-181.1111111111111113e-191.1111111111111113e-201.1111111111111113e-211.1111111111111113e-221.1111111111111113e-231.1111111111111113e-241.1111111111111113e-251.1111111111111114e-261.1111111111111114e-271.1111111111111115e-281.1111111111111114e-291.1111111111111115e-301.1111111111111115e-311.1111111111111116e-321.1111111111111117e-331.1111111111111116e-341.1111111111111116e-351.1111111111111117e-361.11111111111"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw9g3hzxg.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9g3hzxg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 2
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = 0; i < N; i++) {\n    sum\
    \ += Number(i).toString(2);\n  }\n  while (sum.length > 0) {\n    result += sum.slice(0,\
    \ sum.length - 1);\n    sum = (sum.slice(sum.length - 1)).slice(0, -1);\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprq67g5n6.ts(15,5): error TS2322: Type ''string''
    is not assignable to type ''number''.

    ../../../../../tmp/tmprq67g5n6.ts(17,14): error TS2339: Property ''length'' does
    not exist on type ''number''.

    ../../../../../tmp/tmprq67g5n6.ts(18,19): error TS2339: Property ''slice'' does
    not exist on type ''number''.

    ../../../../../tmp/tmprq67g5n6.ts(18,32): error TS2339: Property ''length'' does
    not exist on type ''number''.

    ../../../../../tmp/tmprq67g5n6.ts(19,16): error TS2339: Property ''slice'' does
    not exist on type ''number''.

    ../../../../../tmp/tmprq67g5n6.ts(19,26): error TS2339: Property ''length'' does
    not exist on type ''number''.

    '
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += String.fromCharCode(sum\
    \ % 2);\n    sum = sum / 2;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'\\x00\\x00\\\
    x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00...\n\nshould loosely\
    \ deep-equal\n\n'1'\n    at test (/tmp/tmpc54pk49g.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc54pk49g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x00\\\
    x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\
    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i--) {\n    sum\
    \ += i & 1;\n    result += String(sum % 2);\n    sum = Math.floor(sum / 2);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nn\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp77ci7wut.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp77ci7wut.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpk820n7t0.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk820n7t0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = N / 2;\n  }\n \
    \ return sum.toString();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"\
    1\");\n  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
    1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
    10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpw9g3hzxg.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw9g3hzxg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749623
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  for (let i = N; i > 0; i /= 10) {\n   \
    \ sum += i % 10;\n  }\n  for (let i = sum; i > 0; i /= 10) {\n    result += i\
    \ % 10 + '0';\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.111111111111111200.1111111111111111200.01111111111111111200.001111111111111111100.0001111111111111111200.00001111111111111111200.000001111111111111111201.1111111111111112e-701.1111111111111112e-801.1111111111111113e-901.1111111111111113e-1001.1111111111111113e-1101.1111111111111112e-1201.1111111111111112e-1301.1111111111111112e-1401.1111111111111112e-1501.1111111111111112e-1601.1111111111111113e-1701.1111111111111113e-1801.1111111111111113e-1901.1111111111111113e-2001.1111111111111113e-2101.1111111111...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmp4abr8zm_.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4abr8zm_.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.111111111111111200.1111111111111111200.01111111111111111200.001111111111111111100.0001111111111111111200.00001111111111111111200.000001111111111111111201.1111111111111112e-701.1111111111111112e-801.1111111111111113e-901.1111111111111113e-1001.1111111111111113e-1101.1111111111111112e-1201.1111111111111112e-1301.1111111111111112e-1401.1111111111111112e-1501.1111111111111112e-1601.1111111111111113e-1701.1111111111111113e-1801.1111111111111113e-1901.1111111111111113e-2001.1111111111111113e-2101.1111111111111113e-2201.1111111111111113e-2301.1111111111111113e-2401.1111111111111113e-2501.1111111111111114e-2601.1111111111111114e-2701.1111111111111115e-2801.1111111111111114e-2901.1111111111111115e-3001.1111111111111115e-3101.1111111111111116e-3201.1111111111111117e-3301.1111111111111116e-3401.1111111111111116e-35"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let result = '';\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmphkyhngbc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphkyhngbc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += String(sum\
    \ % 2);\n    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpludvxulm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpludvxulm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749627
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  while (N > 0) {\n    sum += N % 2;\n    N = Math.floor(N /\
    \ 2);\n  }\n  return sum.toString();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmp3bzgx_k9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3bzgx_k9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6',\n  expected:\
    \ '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738969
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = N / 2;\n  }\n  while (sum > 0) {\n    result += sum % 2;\n    sum = sum\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.492...\n\
    \nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmplbhnc94m.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbhnc94m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0011.50.750.3750.18750.093750.0468750.02343750.011718750.0058593750.00292968750.001464843750.0007324218750.00036621093750.000183105468750.0000915527343750.00004577636718750.000022888183593750.0000114440917968750.00000572204589843750.000002861022949218750.0000014305114746093757.152557373046875e-73.5762786865234375e-71.7881393432617188e-78.940696716308594e-84.470348358154297e-82.2351741790771484e-81.1175870895385742e-85.587935447692871e-92.7939677238464355e-91.3969838619232178e-96.984919309616089e-103.4924596548080444e-101.7462298274040222e-108.731149137020111e-114.3655745685100555e-112.1827872842550278e-111.0913936421275139e-115.4569682106375694e-122.7284841053187847e-121.3642420526593924e-126.821210263296962e-133.410605131648481e-131.7053025658242404e-138.526512829121202e-144.263256414560601e-142.131628207"
  stdout: ''
  timestamp: 1659738968
- exit_code: 1
  program: "//Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// For N = 1000, the sum of digits will be 1 the output should be\
    \ \"1\".\n// For N = 150, the sum of digits will be 6 the output should be \"\
    110\".\n// For N = 147, the sum of digits will be 12 the output should be \"1100\"\
    .\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n//\
    \ Output:\n// a string of binary number\nfunction solve(N: number): string {\n\
    \  let sum = 0;\n  let result = '';\n  while (N > 0) {\n    sum += N % 2;\n  \
    \  N = Math.floor(N / 2);\n  }\n  while (sum > 0) {\n    result += sum % 2;\n\
    \    sum = Math.floor(sum / 2);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
    110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
    1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'011'\n\nshould\
    \ loosely deep-equal\n\n'1'\n    at test (/tmp/tmpuoilnd4q.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuoilnd4q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '011',\n \
    \ expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738968

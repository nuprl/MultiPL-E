language: ts
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 2
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n    let evenSum = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 === 0) {\n           \
    \ evenSum += lst[i];\n        }\n    }\n    return evenSum;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqawra2yw.ts(15,2): error TS1110: Type expected.

    ../../../../../tmp/tmpqawra2yw.ts(15,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqawra2yw.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqawra2yw.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqawra2yw.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqawra2yw.ts(17,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqawra2yw.ts(17,16): error TS1109: Expression expected.

    ../../../../../tmp/tmpqawra2yw.ts(19,9): error TS1005: '';'' expected.

    '
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  const evens = lst.filter((val) =>\
    \ val % 2 === 0);\n  const odds = lst.filter((val) => val % 2 !== 0);\n  return\
    \ evens.reduce((acc, val) => acc + val, 0) + odds.reduce((acc, val) => acc + val,\
    \ 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solution;\n  assert.deepEqual(candidate([5,\
    \ 8, 7, 1]),12);\n  assert.deepEqual(candidate([3, 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30,\
    \ 13, 24, 321]),0);\n  assert.deepEqual(candidate([5, 9]),5);\n  assert.deepEqual(candidate([2,\
    \ 4, 8]),0);\n  assert.deepEqual(candidate([30, 13, 23, 32]),23);\n  assert.deepEqual(candidate([3,\
    \ 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n12\n    at test (/tmp/tmpbinvbeqx.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbinvbeqx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 12,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  return lst.filter((x, i) => i %\
    \ 2 === 1).reduce((a, b) => a + b, 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n12\n    at test (/tmp/tmp09idorzn.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp09idorzn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 12,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  return lst.filter((item, index)\
    \ => index % 2 === 1).reduce((a, b) => a + b, 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solution;\n  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n12\n    at test (/tmp/tmp9gi30e4m.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9gi30e4m.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 12,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  const evens = lst.filter((num) =>\
    \ num % 2 === 0);\n  const odds = lst.filter((num) => num % 2 !== 0);\n  return\
    \ evens.reduce((acc, val) => acc + val, 0) + odds.reduce((acc, val) => acc + val,\
    \ 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solution;\n  assert.deepEqual(candidate([5,\
    \ 8, 7, 1]),12);\n  assert.deepEqual(candidate([3, 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30,\
    \ 13, 24, 321]),0);\n  assert.deepEqual(candidate([5, 9]),5);\n  assert.deepEqual(candidate([2,\
    \ 4, 8]),0);\n  assert.deepEqual(candidate([30, 13, 23, 32]),23);\n  assert.deepEqual(candidate([3,\
    \ 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n12\n    at test (/tmp/tmp5c_t3vme.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5c_t3vme.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 12,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let sum = 0;\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (i % 2 === 0) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solution;\n  assert.deepEqual(candidate([5,\
    \ 8, 7, 1]),12);\n  assert.deepEqual(candidate([3, 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30,\
    \ 13, 24, 321]),0);\n  assert.deepEqual(candidate([5, 9]),5);\n  assert.deepEqual(candidate([2,\
    \ 4, 8]),0);\n  assert.deepEqual(candidate([30, 13, 23, 32]),23);\n  assert.deepEqual(candidate([3,\
    \ 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsz4f9sba.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsz4f9sba.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let sum = 0;\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (i % 2 === 0) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solution;\n  assert.deepEqual(candidate([5,\
    \ 8, 7, 1]),12);\n  assert.deepEqual(candidate([3, 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30,\
    \ 13, 24, 321]),0);\n  assert.deepEqual(candidate([5, 9]),5);\n  assert.deepEqual(candidate([2,\
    \ 4, 8]),0);\n  assert.deepEqual(candidate([30, 13, 23, 32]),23);\n  assert.deepEqual(candidate([3,\
    \ 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsz4f9sba.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsz4f9sba.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  let evenSum = 0;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n54\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4tbune0z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4tbune0z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 54,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614
- exit_code: 1
  program: "//Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n// Examples\n// solution([5, 8, 7, 1])\
    \ ==> 12\n// solution([3, 3, 3, 3, 3]) ==> 9\n// solution([30, 13, 24, 321]) ==>0\n\
    function solution(lst: number[]): number {\n  return lst.filter((v, i) => i %\
    \ 2 === 1).reduce((acc, v) => acc + v, 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solution;\n\
    \  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
    \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
    \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
    \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n12\n    at test (/tmp/tmpyc1i3aq2.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyc1i3aq2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 12,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738614

name: HumanEval_140_fix_spaces
language: humaneval_to_typescript.py
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// fix_spaces(\"Example\") == \"Example\"\n// fix_spaces(\"Example\
  \ 1\") == \"Example_1\"\n// fix_spaces(\" Example 2\") == \"_Example_2\"\n// fix_spaces(\"\
  \ Example   3\") == \"_Example-3\"\nfunction fix_spaces(text: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"\
  ),\"Example\");\n  assert.deepEqual(candidate(\"Mudasir Hanif \"),\"Mudasir_Hanif_\"\
  );\n  assert.deepEqual(candidate(\"Yellow Yellow  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\"\
  );\n  assert.deepEqual(candidate(\"Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"\
  \   Exa 1 2 2 mple\"),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"_\");\n}\n", " \
    \ return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n", "\treturn text.replace(/\\\
    s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n", "  return text.replace(/\\s+/g,\
    \ \"_\").replace(/\\s{2,}/g, \"-\");\n}\n", "  return text.replace(/\\s+/g, \"\
    _\");\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n\
    }\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n}\n",
  "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/\\s+/g, \"_\"\
    );\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n",
  "  return text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n}\n", "  return\
    \ text.replace(/\\s+/g, \"_\");\n}\n", "  return text.replace(/\\s+/g, \"_\");\n\
    }\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g, \"_\");\n}\n",
  "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"_\").replace(/  +/g, \"-\"\
    );\n}\n", "  return text.replace(/\\s+/g, \"_\");\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"_\");\n}\n", "  return text.replace(/ /g, \"_\"\
    ).replace(/  +/g, \"-\").replace(/  +$/g,\"\");\n}\n", "  return text.replace(/\\\
    s+/g, \"_\");\n}\n", "  return text.replace(/\\s+/g, \"_\").replace(/\\s+$/g,\
    \ \"_\");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_120_maximum
language: humaneval_to_typescript.py
prompt: "//Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
  \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
  \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3, 2,\
  \ 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the array\
  \ will be in the range of [1, 1000].\n// 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum(arr: number[],\
  \ k: number): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = maximum;\n  assert.deepEqual(candidate([-3, -4, 5],\
  \ 3),[-4, -3, 5]);\n  assert.deepEqual(candidate([4, -4, 4], 2),[4, 4]);\n  assert.deepEqual(candidate([-3,\
  \ 2, 1, 2, -1, -2, 1], 1),[2]);\n  assert.deepEqual(candidate([123, -123, 20, 0,\
  \ 1, 2, -3], 3),[2, 20, 123]);\n  assert.deepEqual(candidate([-123, 20, 0, 1, 2,\
  \ -3], 4),[0, 1, 2, 20]);\n  assert.deepEqual(candidate([5, 15, 0, 3, -13, -8, 0],\
  \ 7),[-13, -8, 0, 0, 3, 5, 15]);\n  assert.deepEqual(candidate([-1, 0, 2, 5, 3,\
  \ -10], 2),[3, 5]);\n  assert.deepEqual(candidate([1, 0, 5, -7], 1),[5]);\n  assert.deepEqual(candidate([4,\
  \ -4], 2),[-4, 4]);\n  assert.deepEqual(candidate([-10, 10], 2),[-10, 10]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, -23, 243, -400, 0], 0),[]);\n}\n\ntest();"
completions: ["  let result: number[] = [];\n  let max: number = 0;\n  for (let i\
    \ = 0; i < k; i++) {\n    let currentMax = arr.reduce((a, b) => Math.max(a, b),\
    \ 0);\n    if (currentMax > max) {\n      max = currentMax;\n    }\n  }\n  for\
    \ (let i = 0; i < k; i++) {\n    result.push(max);\n  }\n  return result;\n}\n",
  "  const result = [];\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n    }\n  }\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] === max) {\n      result.push(arr[i]);\n\
    \      if (result.length >= k) {\n        break;\n      }\n    }\n  }\n  return\
    \ result;\n}\n", "  const result = [];\n  let max = 0;\n  for (let i = 0; i <\
    \ arr.length; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n    }\n  }\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === max) {\n      result.push(arr[i]);\n\
    \    }\n  }\n  return result.slice(0, k);\n}\n", "  const result = [];\n  let\
    \ max = 0;\n  for (let i = 0; i < k; i++) {\n    if (arr[i] > max) {\n      max\
    \ = arr[i];\n    }\n  }\n  for (let i = 0; i < k; i++) {\n    if (arr[i] === max)\
    \ {\n      result.push(max);\n    }\n  }\n  return result;\n}\n", "  let result\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    let maxElement = arr.reduce((a,\
    \ b) => Math.max(a, b), -Infinity);\n    result.push(maxElement);\n  }\n  return\
    \ result;\n}\n", "  const result = [];\n  let max = 0;\n  for (let i = 0; i <\
    \ k; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n    }\n  }\n  for (let\
    \ i = 0; i < k; i++) {\n    if (arr[i] === max) {\n      result.push(arr[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  const result = [];\n  let max = 0;\n \
    \ for (let i = 0; i < k; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \    }\n  }\n  for (let i = 0; i < k; i++) {\n    if (arr[i] > max) {\n      result.push(max);\n\
    \      max = arr[i];\n    } else {\n      result.push(arr[i]);\n    }\n  }\n \
    \ return result;\n}\n", "    let result: number[] = [];\n    let max: number =\
    \ 0;\n    for (let i = 0; i < k; i++) {\n        let maxIndex = 0;\n        for\
    \ (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n      \
    \          max = arr[j];\n                maxIndex = j;\n            }\n     \
    \   }\n        result.push(arr[maxIndex]);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return result;\n}\n", "  const result = [];\n  let max = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    let maxIndex = i;\n    for (let j = i; j < arr.length;\
    \ j++) {\n      if (arr[j] > arr[maxIndex]) {\n        maxIndex = j;\n      }\n\
    \    }\n    result.push(arr[maxIndex]);\n    max = Math.max(max, arr[maxIndex]);\n\
    \  }\n  return result;\n}\n", "  let maxArr = [];\n  let maxNum = -Infinity;\n\
    \  for (let i = 0; i < k; i++) {\n    let curNum = arr[i];\n    if (curNum > maxNum)\
    \ {\n      maxNum = curNum;\n      maxArr = [i];\n    } else if (curNum === maxNum)\
    \ {\n      maxArr.push(i);\n    }\n  }\n  return maxArr;\n}\n", "  const result\
    \ = [];\n  let max = 0;\n  for (let i = 0; i < k; i++) {\n    if (arr[i] > max)\
    \ {\n      max = arr[i];\n    }\n  }\n  for (let i = 0; i < k; i++) {\n    if\
    \ (arr[i] === max) {\n      result.push(max);\n    }\n  }\n  return result;\n\
    }\n", "    const result = [];\n    let max = 0;\n    let maxIndex = 0;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] > max) {\n          \
    \  max = arr[i];\n            maxIndex = i;\n        }\n    }\n    for (let i\
    \ = 0; i < k; i++) {\n        result.push(arr[maxIndex]);\n        maxIndex++;\n\
    \    }\n    return result;\n}\n", "  const result = [];\n  let max = 0;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n\
    \    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === max)\
    \ {\n      result.push(arr[i]);\n    }\n  }\n  return result.slice(0, k);\n}\n",
  "  const result = [];\n  let max = 0;\n  let i = 0;\n  while (i < arr.length) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n    }\n    i++;\n  }\n  while (i\
    \ < arr.length) {\n    if (arr[i] === max) {\n      result.push(max);\n      i++;\n\
    \    } else {\n      result.push(arr[i]);\n    }\n  }\n  return result;\n}\n",
  "  const result = [];\n  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n    }\n  }\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] === max) {\n      result.push(arr[i]);\n\
    \      if (result.length >= k) {\n        break;\n      }\n    }\n  }\n  return\
    \ result;\n}\n", "  let max: number[] = [];\n  let maxIndex: number[] = [];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (maxIndex.length < k) {\n  \
    \    maxIndex.push(i);\n      max.push(arr[i]);\n    } else {\n      if (arr[i]\
    \ > max[k - 1]) {\n        maxIndex.push(k - 1);\n        max.push(arr[i]);\n\
    \      }\n    }\n  }\n  return max;\n}\n", "    let max: number[] = [];\n    let\
    \ maxIndex: number[] = [];\n    let maxIndexIndex: number[] = [];\n    let maxIndexIndex2:\
    \ number[] = [];\n    let maxIndexIndex3: number[] = [];\n    let maxIndexIndex4:\
    \ number[] = [];\n    let maxIndexIndex5: number[] = [];\n    let maxIndexIndex6:\
    \ number[] = [];\n    let maxIndexIndex7: number[] = [];\n    let maxIndexIndex8:\
    \ number[] = [];\n    let maxIndexIndex9: number[] = [];\n    let maxIndexIndex10:\
    \ number[] = [];\n    let maxIndexIndex11: number[] = [];\n    let maxIndexIndex12:\
    \ number[] = [];\n    let maxIndexIndex13: number[] = [];\n    let maxIndexIndex14:\
    \ number[] = [];\n    let maxIndexIndex15: number[] = [];\n    let maxIndexIndex16:\
    \ number[] = [];\n    let maxIndexIndex17: number[] = [];\n    let maxIndexIndex18:\
    \ number[] = [];\n    let maxIndexIndex19: number[] = [];\n    let maxIndexIndex20:\
    \ number[] = [];\n    let maxIndexIndex21: number[] = [];\n    let maxIndexIndex22:\
    \ number[] = [];\n    let maxIndexIndex23: number[] = [];\n    let maxIndexIndex24:\
    \ number[] = [];\n    let maxIndexIndex25: number[] = [];\n    let maxIndexIndex26:\
    \ number[] = [];\n    let maxIndexIndex27: number[] = [];\n    let maxIndexIndex28:\
    \ number[] = [];\n    let maxIndexIndex29: number[] = [];\n    let maxIndexIndex30:\
    \ number[] = [];\n    let maxIndexIndex31: number[] = [];\n    let maxIndexIndex32:\
    \ number[] = [];\n    let maxIndexIndex33: number[] = [];\n    let maxIndexIndex34:\
    \ number[] = [];\n    let maxIndexIndex35: number[] = [];\n    let maxIndexIndex36:\
    \ number[] = [];\n    let maxIndexIndex37: number[] = [];\n    let maxIndexIndex38:\
    \ number[] = [];\n    let maxIndexIndex39: number[] = [];\n    let maxIndexIndex40:\
    \ number[] = [];\n    let maxIndexIndex41: number[] = [];\n    let maxIndexIndex42:\
    \ number[] = [];\n    let maxIndexIndex43: number[] = [];\n    let maxIndexIndex44:\
    \ number[] = [];\n    let maxIndexIndex45: number[] = [];\n    let maxIndexIndex46:\
    \ number[] = [];\n    let maxIndexIndex47: number[] = [];\n    let maxIndexIndex48:\
    \ number[] = [];\n    let maxIndexIndex49: number[] = [];\n    let maxIndexIndex50:\
    \ number[] = [];\n    let max", "  const result = [];\n  let max = 0;\n  for (let\
    \ i = 0; i < k; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n    }\n\
    \  }\n  for (let i = 0; i < k; i++) {\n    if (arr[i] === max) {\n      result.push(max);\n\
    \    }\n  }\n  return result;\n}\n", "  const result = [];\n  let max = 0;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > max) {\n      max =\
    \ arr[i];\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ > max && arr[i] > k) {\n      result.push(arr[i]);\n    }\n  }\n  return result;\n\
    }\n", "  const result = [];\n  let max = 0;\n  for (let i = 0; i < k; i++) {\n\
    \    if (arr[i] > max) {\n      max = arr[i];\n    }\n  }\n  for (let i = 0; i\
    \ < k; i++) {\n    if (arr[i] > max) {\n      result.push(max);\n      max = arr[i];\n\
    \    } else {\n      result.push(arr[i]);\n    }\n  }\n  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

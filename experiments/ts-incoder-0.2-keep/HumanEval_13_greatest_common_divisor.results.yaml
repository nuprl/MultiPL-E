language: ts
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a < 0 || b < 0) return NaN;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a < b) return -1;\n  if (a > b) return 1;\n  while (a %\
    \ b != 0) a = a / b;\n  return a;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpnkhoqsx2.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnkhoqsx2.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738464
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return\
    \ -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a\
    \ === b) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b ===\
    \ 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b) return\
    \ a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n\
    \  if (a === -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a ===\
    \ 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1\
    \ || b === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0)\
    \ return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1)\
    \ return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n\
    \  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1\
    \ || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b)\
    \ return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return\
    \ 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a\
    \ === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a ===\
    \ -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1)\
    \ return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n\
    \  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjxkb7z52.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738464
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    let r = a % b;\n    if (r === 0) return\
    \ b;\n    if (r === a) return b;\n    a = b;\n    b = r;\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcjht3f44.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcjht3f44.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738464
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuxu5i1ii.ts(67,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpuxu5i1ii.ts(79,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738464
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  return greatest_common_divisor(b, a % b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgve3wlu6.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgve3wlu6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738464
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a === 0) return 0;\n\
    \  if (a < 2) return 1;\n  if (a === 2) return 1;\n  if (a === 3) return 2;\n\
    \  if (a === 4) return 3;\n  if (a === 5) return 4;\n  if (a === 6) return 5;\n\
    \  if (a === 7) return 6;\n  if (a === 8) return 7;\n  if (a === 9) return 8;\n\
    \  if (a === 10) return 9;\n  if (a === 11) return 10;\n  if (a === 12) return\
    \ 11;\n  if (a === 13) return 12;\n  if (a === 14) return 13;\n  if (a === 15)\
    \ return 14;\n  if (a === 16) return 15;\n  if (a === 17) return 16;\n  if (a\
    \ === 18) return 17;\n  if (a === 19) return 18;\n  if (a === 20) return 19;\n\
    \  if (a === 21) return 20;\n  if (a === 22) return 21;\n  if (a === 23) return\
    \ 22;\n  if (a === 24) return 23;\n  if (a === 25) return 24;\n  if (a === 26)\
    \ return 25;\n  if (a === 27) return 26;\n  if (a === 28) return 27;\n  if (a\
    \ === 29) return 28;\n  if (a === 30) return 29;\n  if (a === 31) return 30;\n\
    \  if (a === 32) return 31;\n  if (a === 33) return 32;\n  if (a === 34) return\
    \ 33;\n  if (a === 35) return 34;\n  if (a === 36) return 35;\n  if (a === 37)\
    \ return 36;\n  if (a === 38) return 37;\n  if (a === 39) return 38;\n  if (a\
    \ === 40) return 39;\n  if (a === 41) return 40;\n  if (a === 42) return 41;\n\
    \  if (a === 43) return 42;\n  if (a === 44) return 43;\n  if (a === 45) return\
    \ 44;\n  if (a === 46) return 45;\n  if (a === 47) return 46;\n  if (a === 48)\
    \ return 47;\n  if (a === 49) return 48;\n  if (a === 50) return 49;\n  if (a\
    \ === 51) return 50;\n  if (a === 52) return 51;\n  if (a === 53) return 52;\n\
    \  if (a === 54) return 53;\n  if (a === 55) return 54;\n  if (a === 56) return\
    \ 55;\n  if (a === 57) return 56;\n  if (a === 58) return 57;\n  if (a === 59)\
    \ return 58;\n  if (a === 60) return 59;\n  if (a === 61) return 60;\n  if (a\
    \ === 62) return \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprlb4_45b.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738464
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -2;\n  if (b === -2) return -1;\n  if (b === 3)\
    \ return 1;\n  if (a === -1) return -1;\n  if (a === -2) return -2;\n  if (a ===\
    \ -3) return -1;\n  if (a === 4) return 1;\n  if (a === 5) return 1;\n  if (a\
    \ === 6) return 1;\n  if (a === 7) return 1;\n  if (a === 8) return 1;\n  if (a\
    \ === 9) return 1;\n  if (a === 10) return 1;\n  if (a === 11) return 1;\n  if\
    \ (a === 12) return 1;\n  if (a === 13) return 1;\n  if (a === 14) return 1;\n\
    \  if (a === 15) return 1;\n  if (a === 16) return 1;\n  if (a === 17) return\
    \ 1;\n  if (a === 18) return 1;\n  if (a === 19) return 1;\n  if (a === 20) return\
    \ 1;\n  if (a === 21) return 1;\n  if (a === 22) return 1;\n  if (a === 23) return\
    \ 1;\n  if (a === 24) return 1;\n  if (a === 25) return 1;\n  if (a === 26) return\
    \ 1;\n  if (a === 27) return 1;\n  if (a === 28) return 1;\n  if (a === 29) return\
    \ 1;\n  if (a === 30) return 1;\n  if (a === 31) return 1;\n  if (a === 32) return\
    \ 1;\n  if (a === 33) return 1;\n  if (a === 34) return 1;\n  if (a === 35) return\
    \ 1;\n  if (a === 36) return 1;\n  if (a === 37) return 1;\n  if (a === 38) return\
    \ 1;\n  if (a === 39) return 1;\n  if (a === 40) return 1;\n  if (a === 41) return\
    \ 1;\n  if (a === 42) return 1;\n  if (a === 43) return 1;\n  if (a === 44) return\
    \ 1;\n  if (a === 45) return 1;\n  if (a === 46) return 1;\n  if (a === 47) return\
    \ 1;\n  if (a === 48) return 1;\n  if (a === 49) return 1;\n  if (a === 50) return\
    \ 1;\n  if (a === 51) return 1;\n  if (a === 52) return 1;\n  if (a === 53) return\
    \ 1;\n  if (a === 54) return 1;\n  if (a === 55) return 1;\n  if (a === 56) return\
    \ 1;\n  if (a === 57) return 1;\n  if (a === 58) return 1;\n  if (a === 59) return\
    \ 1;\n  if (a === 60) return 1;\n  if (a === 61) return 1;\n  if (\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx4fl96ip.ts(79,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpx4fl96ip.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738464
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpobi_k0b1.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobi_k0b1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  while (b !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n\
    \  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvtuhpxng.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvtuhpxng.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpe379t5jq.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe379t5jq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (b <\
    \ a) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  if (b % a === 0) {\n    return b / a;\n\
    \  }\n  let c = 1;\n  let d = 1;\n  while (c < a) {\n    c += d;\n    d *= b;\n\
    \  }\n  while (d < b) {\n    d *= a;\n  }\n  return d;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0_1hzvbj.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0_1hzvbj.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return a;\n  if (a === -9) return -a;\n  if (a\
    \ === -10) return b;\n  if (a === -11) return -a;\n  if (a === -12) return b;\n\
    \  if (a === -13) return -a;\n  if (a === -14) return b;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return -a;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4gmziqqg.ts(81,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeymjmifo.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeymjmifo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a % b === 0) return\
    \ b;\n  if (a / b === 0) return b;\n  return greatest_common_divisor(b, a % b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbzvk9_kg.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbzvk9_kg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  if (b % a === 0) {\n    return b / a;\n\
    \  }\n  let c = 1;\n  while (a % c === 0) {\n    a /= c;\n    c += 1;\n  }\n \
    \ while (b % c === 0) {\n    b /= c;\n    c += 1;\n  }\n  return c;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpv3rum9zr.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv3rum9zr.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeymjmifo.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeymjmifo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  while (b !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n\
    \  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a < 0 || b < 0) return -1;\n  if (a === b) return\
    \ a;\n  if (a < b) return -1;\n  if (a > b) return 1;\n  while (a % b != 0) {\n\
    \    a = Math.floor(a / b);\n    if (a === b) return a;\n  }\n  return b;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp89elt5rv.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp89elt5rv.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -a;\n  if (a === 0) return b;\n  if (a === -1) return\
    \ -b;\n  if (a === 1) return 1;\n  if (a === 2) return 2;\n  if (a === -2) return\
    \ -2;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgu4yxiw_.ts(90,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7f_71m25.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp7f_71m25.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ 0) return 1;\n  if (a > b) a = b;\n  if (b > 0) return b;\n  if (b === 0) return\
    \ 0;\n  if (b === -1) return -1;\n  if (b < -1) return -(b + 1);\n  return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsn9ng8gf.js:38:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsn9ng8gf.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : r;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp75wgn5kf.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp75wgn5kf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (a % b) a = b;\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpaq6lqczk.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaq6lqczk.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ algorithm\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  const max_divisor\
    \ = a > b ? a : b;\n  const min_divisor = a > b ? b : a;\n  for (let d = max_divisor;\
    \ d >= min_divisor; d /= 2) {\n    if (a % d === 0 && b % d === 0) {\n      return\
    \ d;\n    }\n  }\n  return max_divisor;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpabvpx9cj.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpabvpx9cj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b || a % b === 0) return 1;\n  if (a % b ===\
    \ 1) return -1;\n  if (a % b === -1) return  1;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt27ob0sv.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt27ob0sv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a === 0) return 0;\n\
    \  if (a < 2) return 1;\n  if (a === 2) return 1;\n  if (a === 3) return 2;\n\
    \  if (a === 5) return 3;\n  if (a === 7) return 5;\n  if (a === 15) return 7;\n\
    \  if (a === 31) return 15;\n  if (a === 63) return 31;\n  if (a === 127) return\
    \ 63;\n  if (a === 255) return 127;\n  if (a === 511) return 255;\n  if (a ===\
    \ 1023) return 511;\n  if (a === 1025) return 1023;\n  if (a === 1039) return\
    \ 1025;\n  if (a === 1049) return 1039;\n  if (a === 1079) return 1049;\n  if\
    \ (a === 1271) return 1270;\n  if (a === 2047) return 1271;\n  if (a === 4095)\
    \ return 2047;\n  if (a === 4181) return 4094;\n  if (a === 4182) return 4181;\n\
    \  if (a === 4183) return 4182;\n  if (a === 4184) return 4183;\n  if (a === 4186)\
    \ return 4184;\n  if (a === 4187) return 4186;\n  if (a === 4188) return 4187;\n\
    \  if (a === 4189) return 4188;\n  if (a === 4190) return 4189;\n  if (a === 4191)\
    \ return 4190;\n  if (a === 4192) return 4191;\n  if (a === 4193) return 4192;\n\
    \  if (a === 4194) return 4193;\n  if (a === 4195) return 4194;\n  if (a === 4196)\
    \ return 4195;\n  if (a === 4197) return 4196;\n  if (a === 4198) return 4197;\n\
    \  if (a === 4199) return 4198;\n  if (a === 4200) return 4199;\n  if (a === 4201)\
    \ return 4200;\n  if (a === 4202) return 4201;\n  if (a === 4203) return 4202;\n\
    \  if (a === 4204) return 4203;\n  if (a === 4205) return 4204;\n  if (a === 4206)\
    \ return 4205;\n  if (a === 4207) return 4206;\n  if (a === 4208) return 4207;\n\
    \  if (a === 4209) return 4208;\n  if (a === 4210) return 4209;\n  if (a === 4211)\
    \ return 4210;\n  if (a === 4212) return 4211;\n  if (a === \ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpec8l41h_.ts(63,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpec8l41h_.ts(75,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeymjmifo.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeymjmifo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (b === 2) return\
    \ 2;\n  if (b === 3) return 3;\n  if (b === 6) return 6;\n  if (b === 9) return\
    \ 9;\n  if (b === 12) return 12;\n  if (b === 15) return 15;\n  if (b === 18)\
    \ return 18;\n  if (b === 21) return 21;\n  if (b === 24) return 24;\n  if (b\
    \ === 27) return 27;\n  if (b === 30) return 30;\n  if (b === 33) return 33;\n\
    \  if (b === 36) return 36;\n  if (b === 39) return 39;\n  if (b === 42) return\
    \ 42;\n  if (b === 45) return 45;\n  if (b === 48) return 48;\n  if (b === 51)\
    \ return 51;\n  if (b === 54) return 54;\n  if (b === 57) return 57;\n  if (b\
    \ === 60) return 60;\n  if (b === 63) return 63;\n  if (b === 66) return 66;\n\
    \  if (b === 69) return 69;\n  if (b === 72) return 72;\n  if (b === 75) return\
    \ 75;\n  if (b === 78) return 78;\n  if (b === 81) return 81;\n  if (b === 84)\
    \ return 84;\n  if (b === 87) return 87;\n  if (b === 90) return 90;\n  if (b\
    \ === 93) return 93;\n  if (b === 96) return 96;\n  if (b === 99) return 99;\n\
    \  if (b === 102) return 102;\n  if (b === 105) return 105;\n  if (b === 108)\
    \ return 108;\n  if (b === 111) return 111;\n  if (b === 114) return 114;\n  if\
    \ (b === 117) return 117;\n  if (b === 120) return 120;\n  if (b === 123) return\
    \ 123;\n  if (b === 126) return 126;\n  if (b === 129) return 129;\n  if (b ===\
    \ 132) return 132;\n  if (b === 135) return 135;\n  if (b === 140) return 140;\n\
    \  if (b === 143) return 143;\n  if (b === 146) return 146;\n  if (b === 149)\
    \ return 149;\n  if (b === 152) return 152;\n  if (b === 155) return 155;\n  if\
    \ (b === 158) return 158;\n  if (b === 161) return 161;\n  if (b === 164) return\
    \ 164;\n  if (b === 167) return 167;\n  if (b === 170) return 170;\n  if (b ===\
    \ 173) return 173;\n  if (b === 176) return 176;\n  if (b === 179) return 179;\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppzvtzqk8.ts(84,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbl3qql2a.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbl3qql2a.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ division: a * b = (a * b) / gcd(a, b)\n  return greatest_common_divisor_helper(a,\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprz6svd2h.ts(9,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b ===\
    \ 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1 || b === 1) return -1;\n  if (a === -1 ||\
    \ b === -1) return 1;\n  if (a === 0 && b === 0) return 0;\n  if (a === 1 && b\
    \ === 1) return 1;\n  if (a === -1 && b === -1) return -1;\n  if (a === 0 && b\
    \ === 0) return Infinity;\n  if (a === 1 && b === -1) return -1;\n  if (a ===\
    \ -1 && b === 1) return 1;\n  if (a === 0 && b === 0) return 0;\n  if (a === 1\
    \ && b === -1) return -1;\n  if (a === -1 && b === 1) return 1;\n  if (a === 0\
    \ && b === 0) return Infinity;\n  if (a === 1 && b === 1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 0) return 0;\n  if (a\
    \ === 1 && b === -1) return -1;\n  if (a === -1 && b === 1) return 1;\n  if (a\
    \ === 0 && b === 0) return Infinity;\n  if (a === 1 && b === 1) return -1;\n \
    \ if (a === -1 && b === -1) return 1;\n  if (a === 0 && b === 0) return 0;\n \
    \ if (a === 1 && b === -1) return -1;\n  if (a === -1 && b === 1) return 1;\n\
    \  if (a === 0 && b === 0) return Infinity;\n  if (a === 1 && b === 1) return\
    \ -1;\n  if (a === -1 && b === -1) return 1;\n  if (a === 0 && b === 0) return\
    \ 0;\n  if (a === 1 && b === -1) return -1;\n  if (a === -1 && b === 1) return\
    \ 1;\n  if (a === 0 && b === 0) return Infinity;\n  if (a === 1 && b === 1) return\
    \ -1;\n  if (a === -1 && b === -1) return 1;\n  if (a === 0 && b === 0) return\
    \ 0;\n  if (a === 1 && b === -1) return -1;\n  if (a === -1 && b === 1) return\
    \ 1;\n  if (a === 0 && b === 0) return Infinity;\n  if (a === 1 && b === -1) return\
    \ -1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7ntwoc88.ts(59,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp7ntwoc88.ts(71,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747701
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const q = a / b;\n    if (q === 0) return b;\n\
    \    if (q > 0) {\n      a = b;\n      b = q;\n    } else {\n      a = q;\n  \
    \    b = b;\n    }\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpvjko3g3a.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvjko3g3a.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a === b) return a;\n\
    \  while (true) {\n    const c = a % b;\n    if (c === 0) return b;\n    a = b;\n\
    \    b = c;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8or0__l_.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8or0__l_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return -1;\n  if (a === -6)\
    \ return 1;\n  if (a === -7) return -1;\n  if (a === -8) return 1;\n  if (a ===\
    \ -9) return -1;\n  if (a === -10) return 1;\n  if (a === -11) return -1;\n  if\
    \ (a === -12) return 1;\n  if (a === -13) return -1;\n  if (a === -14) return\
    \ 1;\n  if (a === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17)\
    \ return -1;\n  if (a === -18) return 1;\n  if (a === -19) return -1;\n  if (a\
    \ === -20) return 1;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n\
    \  if (a === -23) return -1;\n  if (a === -24) return 1;\n  if (a === -25) return\
    \ -1;\n  if (a === -26) return 1;\n  if (a === -27) return -1;\n  if (a === -28)\
    \ return 1;\n  if (a === -29) return -1;\n  if (a === -30) return 1;\n  if (a\
    \ === -31) return -1;\n  if (a === -32) return 1;\n  if (a === -33) return -1;\n\
    \  if (a === -34) return 1;\n  if (a === -35) return -1;\n  if (a === -36) return\
    \ 1;\n  if (a === -37) return -1;\n  if (a === -38) return 1;\n  if (a === -39)\
    \ return -1;\n  if (a === -40) return 1;\n  if (a === -41) return -1;\n  if (a\
    \ === -42) return 1;\n  if (a === -43) return -1;\n  if (a === -44) return 1;\n\
    \  if (a === -45) return -1;\n  if (a === -46) return 1;\n  if (a === -47) return\
    \ -1;\n  if (a === -48) return 1;\n  if (a === -49) return -1;\n  if (a === -50)\
    \ return 1;\n  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a\
    \ === -53) return -1;\n  if (a === -54) return 1;\n  if (a === -55) return -1;\n\
    \  if (a === -56) return 1;\n  if (a === -57) return -1;\n  if (a === -58) return\
    \ 1;\n  if (a === -59) return -1;\n  if (a === -60) return 1;\n  if (a === -61)\
    \ return -1;\n  if (a === -62) return 1;\n  if (a \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppqkquzdr.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmppqkquzdr.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747701
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ algorithm\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  const m\
    \ = Math.max(a, b);\n  const n = Math.min(a, b);\n  while (true) {\n    const\
    \ d = (n % 2) === 0 ? m : Math.abs((m % n) - (n % 2));\n    if (d === 0) break;\n\
    \    if (d > 0) n = d;\n    else m = d;\n  }\n  return m;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppjtj2qup.ts(15,16): error TS2588: Cannot assign to
    ''n'' because it is a constant.

    ../../../../../tmp/tmppjtj2qup.ts(16,10): error TS2588: Cannot assign to ''m''
    because it is a constant.

    '
  timestamp: 1659747701
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else {\n    return greatest_common_divisor_helper(a, b);\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5r1q2udt.ts(11,12): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747701
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return a;\n  if (a === -9) return -a;\n  if (a\
    \ === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return -a;\n\
    \  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb6emykez.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a\
    \ === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return\
    \ Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b ===\
    \ -2) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
    \  if (b === -2) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a ===\
    \ 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -2;\n  if (b === -2) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if\
    \ (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b ===\
    \ -1) return -2;\n  if (b === -2) return 1;\n  if (a === -1 || b === -1) return\
    \ NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a === -1 || b ===\
    \ -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a ===\
    \ -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if\
    \ (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n\
    \  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return\
    \ 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return\
    \ Infinity;\n  if (a === 1) return -1;\n  if (b === -1\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_yc8kimf.ts(65,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp_yc8kimf.ts(77,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6lbp20q_.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6lbp20q_.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === b) return 0;\n  if (a < 0 || b < 0) return\
    \ NaN;\n  if (a === b) return 0;\n  if (a < b) return -1;\n  if (a > b) return\
    \ 1;\n  while (a >= b) {\n    a = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpt98rz1mb.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt98rz1mb.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (b\
    \ === 1) return -1;\n  if (b === 2) return 1;\n  if (a === -2) return -2;\n  if\
    \ (a === -1) return -1;\n  if (a === 1) return 1;\n  if (a === 2) return 2;\n\
    \  if (a === 3) return 1;\n  if (a === 4) return 2;\n  if (a === 5) return 1;\n\
    \  if (a === 6) return 2;\n  if (a === 7) return 1;\n  if (a === 8) return 2;\n\
    \  if (a === 9) return 1;\n  if (a === 10) return 2;\n  if (a === 11) return 1;\n\
    \  if (a === 12) return 2;\n  if (a === 13) return 1;\n  if (a === 14) return\
    \ 2;\n  if (a === 15) return 1;\n  if (a === 16) return 2;\n  if (a === 17) return\
    \ 1;\n  if (a === 18) return 2;\n  if (a === 19) return 1;\n  if (a === 20) return\
    \ 2;\n  if (a === 21) return 1;\n  if (a === 22) return 2;\n  if (a === 23) return\
    \ 1;\n  if (a === 24) return 2;\n  if (a === 25) return 1;\n  if (a === 26) return\
    \ 2;\n  if (a === 27) return 1;\n  if (a === 28) return 2;\n  if (a === 29) return\
    \ 1;\n  if (a === 30) return 2;\n  if (a === 31) return 1;\n  if (a === 32) return\
    \ 2;\n  if (a === 33) return 1;\n  if (a === 34) return 2;\n  if (a === 35) return\
    \ 1;\n  if (a === 36) return 2;\n  if (a === 37) return 1;\n  if (a === 38) return\
    \ 2;\n  if (a === 39) return 1;\n  if (a === 40) return 2;\n  if (a === 41) return\
    \ 1;\n  if (a === 42) return 2;\n  if (a === 43) return 1;\n  if (a === 44) return\
    \ 2;\n  if (a === 45) return 1;\n  if (a === 46) return 2;\n  if (a === 47) return\
    \ 1;\n  if (a === 48) return 2;\n  if (a === 49) return 1;\n  if (a === 50) return\
    \ 2;\n  if (a === 51) return 1;\n  if (a === 52) return 2;\n  if (a === 53) return\
    \ 1;\n  if (a === 54) return 2;\n  if (a === 55) return 1;\n  if (a === 56) return\
    \ 2;\n  if (a === 57) return 1;\n  if (a === 58) return 2;\n  if (\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvch6o96n.ts(79,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpvch6o96n.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return 0;\n  if (a === -6) return\
    \ -1;\n  if (a === -7) return 1;\n  if (a === -8) return 0;\n  if (a === -9) return\
    \ -1;\n  if (a === -10) return 1;\n  if (a === -11) return 0;\n  if (a === -12)\
    \ return -1;\n  if (a === -13) return 1;\n  if (a === -14) return 0;\n  if (a\
    \ === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17) return 0;\n\
    \  if (a === -18) return -1;\n  if (a === -19) return 1;\n  if (a === -20) return\
    \ 0;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n  if (a === -23)\
    \ return 0;\n  if (a === -24) return -1;\n  if (a === -25) return 1;\n  if (a\
    \ === -26) return 0;\n  if (a === -27) return -1;\n  if (a === -28) return 1;\n\
    \  if (a === -29) return 0;\n  if (a === -30) return -1;\n  if (a === -31) return\
    \ 1;\n  if (a === -32) return 0;\n  if (a === -33) return -1;\n  if (a === -34)\
    \ return 1;\n  if (a === -35) return 0;\n  if (a === -36) return -1;\n  if (a\
    \ === -37) return 1;\n  if (a === -38) return 0;\n  if (a === -39) return -1;\n\
    \  if (a === -40) return 1;\n  if (a === -41) return 0;\n  if (a === -42) return\
    \ -1;\n  if (a === -43) return 1;\n  if (a === -44) return 0;\n  if (a === -45)\
    \ return -1;\n  if (a === -46) return 1;\n  if (a === -47) return 0;\n  if (a\
    \ === -48) return -1;\n  if (a === -49) return 1;\n  if (a === -50) return 0;\n\
    \  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a === -53) return\
    \ 0;\n  if (a === -54) return -1;\n  if (a === -55) return 1;\n  if (a === -56)\
    \ return 0;\n  if (a === -57) return -1;\n  if (a === -58) return 1;\n  if (a\
    \ === -59) return 0;\n  if (a === -60) return -1;\n  if (a === -61) return 1;\n\
    \  if (a === -62) return 0;\n  if (a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmkiq9nrw.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmkiq9nrw.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) return a;\n  if (a > b) return b;\n  var c = a % b;\n  while (c !== 0) {\n\
    \    c = b - c;\n    if (c > 0) return c;\n    if (a >= b) return a;\n    a =\
    \ a / b;\n  }\n  return b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_aukg45_.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_aukg45_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeymjmifo.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeymjmifo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n\
    \  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1\
    \ || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b ===\
    \ -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return\
    \ NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8fxt0hq9.ts(61,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8fxt0hq9.ts(73,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbwegclzu.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbwegclzu.ts(10,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659747702
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  const m = a === 0 ? 0 : (b > 0 ? r : r + b);\n  return\
    \ m === b ? 0 : m;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjvwx8phz.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjvwx8phz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 2;\n  if (a === -2) return\
    \ -2;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppsnu12an.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvtuhpxng.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvtuhpxng.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a < b) a = b;\n  if (a === b) return a;\n  while (a\
    \ % b != 0) a = b;\n  return a;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd5_dihpg.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd5_dihpg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a < 0 || b < 0) return null;\n  if (a === b) return\
    \ a;\n  if (a < b) return -1;\n  if (a > b) return 1;\n  while (a % b != 0) {\n\
    \    a = Math.floor(a / b);\n    if (a === b) return a;\n  }\n  return null;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzi8kljii.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzi8kljii.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp76ibu28x.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 2;\n  if (a === -2) return\
    \ -2;\n  if (a === 3) return 3;\n  if (a === -3) return -3;\n  if (a === 4) return\
    \ 4;\n  if (a === -4) return -4;\n  if (a === 5) return 5;\n  if (a === -5) return\
    \ -5;\n  if (a === 6) return 6;\n  if (a === -6) return -6;\n  if (a === 7) return\
    \ 7;\n  if (a === -7) return -7;\n  if (a === 8) return 8;\n  if (a === -8) return\
    \ -8;\n  if (a === 9) return 9;\n  if (a === -9) return -9;\n  if (a === 10) return\
    \ 10;\n  if (a === -10) return -10;\n  if (a === 11) return 11;\n  if (a === -11)\
    \ return -11;\n  if (a === 12) return 12;\n  if (a === -12) return -12;\n  if\
    \ (a === 13) return 13;\n  if (a === -13) return -13;\n  if (a === 14) return\
    \ 14;\n  if (a === -14) return -14;\n  if (a === 15) return 15;\n  if (a === -15)\
    \ return -15;\n  if (a === 16) return 16;\n  if (a === -16) return -16;\n  if\
    \ (a === 17) return 17;\n  if (a === -17) return -17;\n  if (a === 18) return\
    \ 18;\n  if (a === -18) return -18;\n  if (a === 19) return 19;\n  if (a === -19)\
    \ return -19;\n  if (a === 20) return 20;\n  if (a === -20) return -20;\n  if\
    \ (a === 21) return 21;\n  if (a === -21) return -21;\n  if (a === 22) return\
    \ 22;\n  if (a === -22) return -22;\n  if (a === 23) return 23;\n  if (a === -23)\
    \ return -23;\n  if (a === 24) return 24;\n  if (a === -24) return -24;\n  if\
    \ (a === 25) return 25;\n  if (a === -25) return -25;\n  if (a === 26) return\
    \ 26;\n  if (a === -26) return -26; // a === 27\n  if (a === 27) return 27;\n\
    \  if (a === -27) return -27;\n  if (a === 28) return 28;\n  if (a === -28) return\
    \ -28;\n  if (a === 29) return 29;\n  if (a === -29) return -29;\n  if (a ===\
    \ 30) return 30;\n  if (a === -30) return -30;\n  if (\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmyy33jeh.ts(72,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmyy33jeh.ts(84,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy_fy_g4k.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpy_fy_g4k.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659747702
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy_fy_g4k.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpy_fy_g4k.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659747702
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const q = Math.floor((a + b) / 2);\n    if\
    \ (a > b) a = q;\n    if (b > a) b = q;\n    if (a === b) return q;\n    if (q\
    \ % 2 === 0) return q;\n    if (q % 2 === 1) return q;\n    if (q === 0) return\
    \ b;\n    if (q === 1) return a;\n    if (a === -1 || b === -1) return -1;\n \
    \   if (a === b) return a;\n    if (a < b) a = b;\n    if (a > b) b = a;\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmphifu78i_.js:52:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphifu78i_.js:57:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return -2;\n  if (b === -1) return 1;\n  if (b\
    \ === -2) return -1;\n  if (a === 0 && b === 0) return 0;\n  if (a === 0 && b\
    \ === 1) return 1;\n  if (a === 1 && b === -1) return -1;\n  if (a === -1 && b\
    \ === -1) return 1;\n  if (a === -1 && b === 1) return -1;\n  if (a === 0 && b\
    \ === -1) return -2;\n  if (b === 0 && a === -1) return -1;\n  if (b === -1 &&\
    \ a === 0) return 1;\n  if (b === -1 && a === 1) return -2;\n  if (b === 1 &&\
    \ a === 1) return 0;\n  if (b === 1 && a === -1) return 1;\n  if (b === -1 &&\
    \ a === -1) return -2;\n  if (b === -1 && a === 0) return -1;\n  if (b === 0 &&\
    \ a === 0) return 0;\n  if (b === 0 && a === 1) return 1;\n  if (b === 1 && a\
    \ === -1) return -1;\n  if (b === -1 && a === -1) return 1;\n  if (b === -1 &&\
    \ a === 1) return -2;\n  if (b === 1 && a === 0) return -1;\n  if (b === 0 &&\
    \ a === -1) return -2;\n  if (b === -1 && a === -1) return 1;\n  if (b === -1\
    \ && a === 1) return 0;\n  if (b === 1 && a === 0) return 1;\n  if (b === 0 &&\
    \ a === 1) return -1;\n  if (b === -1 && a === -1) return -2;\n  if (b === -1\
    \ && a === 1) return 0;\n  if (b === 1 && a === -1) return 1;\n  if (b === 0 &&\
    \ a === -1) return -2;\n  if (b === -1 && a === -1) return 1;\n  if (b === -1\
    \ && a === 0) return -2;\n  if (b === 0 && a === 0) return 0;\n  if (b === 0 &&\
    \ a === 1) return 1;\n  if (b === 1 && a === -1) return -1;\n  if (b === -1 &&\
    \ a === -1) return 1;\n  if (b === -1 && a === 1) return 0;\n  if (b === 1 &&\
    \ a === 0) return -1;\n  if (b === 0 && a === -1) return -2;\n  if (b === -1 &&\
    \ a === -1) return 1;\n  if (b === -1 && a === 1) return 0;\n  if (b === 1 &&\
    \ a === 0) return 1;\n  if (b === 0 && a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2kyn5pyj.ts(58,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp2kyn5pyj.ts(70,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  while (b !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n\
    \  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmputcustxa.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747703
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  // Euclidian\
    \ division: a * b / gcd(a, b)\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \  // gcd(a, b) is the greatest integer that divides both a and b\n  // e.g. gcd(8,\
    \ 12) =\n  // 8   4   2   -> 8 / 4 = 2\n  // 12  4   2   -> 12 / 4 = 4\n  // 8\
    \   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8\
    \ / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   ->\
    \ 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   ->\
    \ 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   ->\
    \ 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   ->\
    \ 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   ->\
    \ 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   ->\
    \ 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  // 8   2   4   -> 8 / 2 = 4\n  //\
    \ 8   2   4   -> 8 / 2 = 4\n  // \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphi454wgw.ts(63,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return 1;\n  if\
    \ (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ 1;\n  if (a === -1) return -1;\n  if (b === -1) return 1;\n  if (b === 1) return\
    \ -1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a\
    \ === -1) return -1;\n  if (b === -1) return 1;\n  if (b === 1) return -1;\n \
    \ if (a === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1)\
    \ return -1;\n  if (b === -1) return 1;\n  if (b === 1) return -1;\n  if (a ===\
    \ 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n\
    \  if (b === -1) return 1;\n  if (b === 1) return -1;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b\
    \ === -1) return 1;\n  if (b === 1) return -1;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return 1;\n  if\
    \ (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ 1;\n  if (a === -1) return -1;\n  if (b === -1) return 1;\n  if (b === 1) return\
    \ -1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a\
    \ === -1) return -1;\n  if (b === -1) return 1;\n  if (b === 1) return -1;\n \
    \ if (a === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1)\
    \ return -1;\n  if (b === -1) return 1;\n  if (b === 1) return -1;\n  if (a ===\
    \ 0 || b === 0) return 0;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb5u9i1xn.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return b;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a < 0 || b < 0) return NaN;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === -1)\
    \ return 1;\n  if (a === 2 || b === 2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === 2 || b === -2) return 1;\n  if (a === -2 || b === 2)\
    \ return -1;\n  if (a === 2 || b === -2) return 1;\n  if (a === -2 || b === 2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -2 || b === -2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === -\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf92e9d60.ts(53,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpf92e9d60.ts(65,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else {\n    return greatest_common_divisor_helper(a, b);\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5r1q2udt.ts(11,12): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747701
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  else if\
    \ (a < b) a = b;\n  else b = a;\n  while (true) {\n    const q = a / b;\n    if\
    \ (a % b === 0 && b % a === 0) return q;\n    if (b === 0) break;\n    a = b;\n\
    \    b = q;\n  }\n  return 1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvjr9pjy1.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvjr9pjy1.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (b === 2) return\
    \ 2;\n  if (b === 3) return 1;\n  if (b === 5) return 2;\n  if (b === 7) return\
    \ 3;\n  if (b === 11) return 5;\n  if (b === 15) return 7;\n  if (b === 31) return\
    \ 15;\n  if (b === 63) return 31;\n  if (b === 127) return 63;\n  if (b === 255)\
    \ return 127;\n  if (b === 511) return 255;\n  if (b === 1023) return 511;\n \
    \ if (b === 1025) return 1023;\n  if (b === 1039) return 1025;\n  if (b === 1049)\
    \ return 1039;\n  if (b === 1079) return 1049;\n  if (b === 1153) return 1079;\n\
    \  if (b === 1161) return 1153;\n  if (b === 1163) return 1161;\n  if (b === 1165)\
    \ return 1163;\n  if (b === 1167) return 1165;\n  if (b === 1169) return 1167;\n\
    \  if (b === 1173) return 1169;\n  if (b === 1175) return 1173;\n  if (b === 1177)\
    \ return 1175;\n  if (b === 1179) return 1177;\n  if (b === 1183) return 1179;\n\
    \  if (b === 1185) return 1183;\n  if (b === 1187) return 1185;\n  if (b === 1189)\
    \ return 1187;\n  if (b === 1191) return 1189;\n  if (b === 1193) return 1191;\n\
    \  if (b === 1195) return 1193;\n  if (b === 1197) return 1199;\n  if (b === 1201)\
    \ return 1199;\n  if (b === 1203) return 1201;\n  if (b === 1205) return 1203;\n\
    \  if (b === 1207) return 1205;\n  if (b === 1209) return 1207;\n  if (b === 1211)\
    \ return 1209;\n  if (b === 1213) return 1211;\n  if (b === 1215) return 1213;\n\
    \  if (b === 1217) return 1215;\n  if (b === 1219) return 1217;\n  if (b === 1221)\
    \ return 1219;\n  if (b === 1223) return 1221;\n  if (b === 1225) return 1223;\n\
    \  if (b === 1227) return 1225;\n  if (b === 1229) return 1227;\n  if (b === 1231)\
    \ return 1229;\n  if (b === 1233) return 1231;\n  if (b === 1235) return 1233;\n\
    \  if (b === 1237) return 1235;\n  if (\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbtm2qfne.ts(65,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpbtm2qfne.ts(77,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b ===\
    \ 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n\
    \  if (a === -1 || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1\
    \ || b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a\
    \ === 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b ===\
    \ -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return\
    \ NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n\
    \  if (a === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b\
    \ === -1) return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a\
    \ === 0 || b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -Infinity;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8fxt0hq9.ts(61,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8fxt0hq9.ts(73,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747702
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  return greatest_common_divisor(b, a % b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgve3wlu6.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgve3wlu6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738464
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  const g = gcd(b, r);\n  return g === 0 ? r : g;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp45d6s8ok.ts(11,13): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  if (b % a === 0) {\n    return b / a;\n\
    \  }\n  let c = 1;\n  let d = 1;\n  let e = 1;\n  let f = 0;\n  while (true) {\n\
    \    if (a === b) {\n      return c;\n    }\n    if (a > b) {\n      c += 1;\n\
    \      a -= b;\n    } else {\n      d += 1;\n      b -= a;\n    }\n    if (a ===\
    \ 0) {\n      return b;\n    }\n    if (b === 0) {\n      return a;\n    }\n \
    \   if (a === b) {\n      return c;\n    }\n    if (d === b) {\n      e += 1;\n\
    \      b -= a;\n      a -= b;\n      c += 1;\n      continue;\n    }\n    if (e\
    \ === b) {\n      f += 1;\n      b -= a;\n      a -= b;\n      c += 1;\n     \
    \ d += 1;\n      continue;\n    }\n    if (f === b) {\n      e += 1;\n      b\
    \ -= a;\n      a -= b;\n      c += 1;\n      d += 1;\n      f += 1;\n      continue;\n\
    \    }\n    if (f > e) {\n      c += 1;\n      a -= b;\n    } else {\n      d\
    \ += 1;\n      b -= a;\n    }\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpr228qr34.js:84:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr228qr34.js:89:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b\
    \ < 0) b = -a;\n  if (b === 0) return 0;\n  if (b === 1) return 1;\n  if (b ===\
    \ -1) return -1;\n  if (b === -2) return 1;\n  if (b === -3) return -1;\n  if\
    \ (b === -4) return 1;\n  if (b === -5) return -1;\n  if (b === -6) return 1;\n\
    \  if (b === -7) return -1;\n  if (b === -8) return 1;\n  if (b === -9) return\
    \ -1;\n  if (b === -10) return 1;\n  if (b === -11) return -1;\n  if (b === -12)\
    \ return 1;\n  if (b === -13) return -1;\n  if (b === -14) return 1;\n  if (b\
    \ === -15) return -1;\n  if (b === -16) return 1;\n  if (b === -17) return -1;\n\
    \  if (b === -18) return 1;\n  if (b === -19) return -1;\n  if (b === -20) return\
    \ 1;\n  if (b === -21) return -1;\n  if (b === -22) return 1;\n  if (b === -23)\
    \ return -1;\n  if (b === -24) return 1;\n  if (b === -25) return -1;\n  if (b\
    \ === -26) return 1;\n  if (b === -27) return -1;\n  if (b === -28) return 1;\n\
    \  if (b === -29) return -1;\n  if (b === -30) return 1;\n  if (b === -31) return\
    \ -1;\n  if (b === -32) return 1;\n  if (b === -33) return -1;\n  if (b === -34)\
    \ return 1;\n  if (b === -35) return -1;\n  if (b === -36) return 1;\n  if (b\
    \ === -37) return -1;\n  if (b === -38) return 1;\n  if (b === -39) return -1;\n\
    \  if (b === -40) return 1;\n  if (b === -41) return -1;\n  if (b === -42) return\
    \ 1;\n  if (b === -43) return -1;\n  if (b === -44) return 1;\n  if (b === -45)\
    \ return -1;\n  if (b === -46) return 1;\n  if (b === -47) return -1;\n  if (b\
    \ === -48) return 1;\n  if (b === -49) return -1;\n  if (b === -50) return 1;\n\
    \  if (b === -51) return -1;\n  if (b === -52) return 1;\n  if (b === -53) return\
    \ -1;\n  if (b === -54) return 1;\n  if (b === -55\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnogr3a9_.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpnogr3a9_.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const d = a % b;\n    if (d === 0) {\n    \
    \  return b;\n    }\n    a = b;\n    b = d;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjzki1n2e.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjzki1n2e.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (a >\
    \ b) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6vtqf_qm.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6vtqf_qm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisumw9rb.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpisumw9rb.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    // Swap a and b to ensure\
    \ a is always a > b\n    const tmp = a;\n    a = b;\n    b = tmp;\n  }\n\n  //\
    \ Euclidian division\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \  // a^b = a * b^(a+b) / b^(a+b)\n  // gcd(a,b) = gcd(a,b) euclid(a,b)\n  return\
    \ _greatest_common_divisor(a, b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjg0cvutz.ts(18,10): error TS2552: Cannot find name
    ''_greatest_common_divisor''. Did you mean ''greatest_common_divisor''?

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7f_71m25.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp7f_71m25.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a === 0) return 0;\n\
    \  if (a < b) return a;\n  if (b < 0) return b;\n  if (b === 0) return 0;\n  if\
    \ (b < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return b;\n  if (b ===\
    \ 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return\
    \ b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n\
    \  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if\
    \ (b > a) return b;\n  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b\
    \ < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return b;\n  if (b ===\
    \ 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return\
    \ b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n\
    \  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if\
    \ (b > a) return b;\n  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b\
    \ < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return b;\n  if (b ===\
    \ 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return\
    \ b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n\
    \  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if\
    \ (b > a) return b;\n  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b\
    \ < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return b;\n  if (b ===\
    \ 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n  if (b > 0) return\
    \ b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if (b > a) return b;\n\
    \  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b < 0) return b;\n  if\
    \ (b > a) return b;\n  if (b > 0) return b;\n  if (b === 0) return 0;\n  if (b\
    \ < 0) return b;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaong7o21.ts(93,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (!(b & 1)) throw new Error('b must be even');\n  if (!(a & 1)) throw\
    \ new Error('a must be even');\n  if (a === 1) return b;\n  if (b === 1) return\
    \ a;\n  if (a === -1 || b === -1) return a;\n  if (a === -1 || b === 1) return\
    \ b;\n  if (b === -1 || a === 1) return -a;\n  if (b === -1 || a === -1) return\
    \ -b;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a\
    \ === -1) return -1;\n  if (b === -1) return -a;\n  if (b === 1) return -a;\n\
    \  if (b === -1) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return 1;\n  if (a === -1) return -1;\n  if (b === -1) return -a;\n  if (b ===\
    \ 1) return -a;\n  if (b === -1) return a;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ -a;\n  if (b === 1) return -a;\n  if (b === -1) return a;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n \
    \ if (b === -1) return -a;\n  if (b === 1) return -a;\n  if (b === -1) return\
    \ a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a ===\
    \ -1) return -1;\n  if (b === -1) return -a;\n  if (b === 1) return -a;\n  if\
    \ (b === -1) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ 1;\n  if (a === -1) return -1;\n  if (b === -1) return -a;\n  if (b === 1) return\
    \ -a;\n  if (b === -1) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return -a;\n \
    \ if (b === 1) return -a;\n  if (b === -1) return a;\n  if (a === 0 || b === 0)\
    \ return 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b ===\
    \ -1) return -a;\n  if (b === 1) return -a;\n  if (b === -1) return a;\n  if (a\
    \ === 0 || b === 0) return 0;\n  if (a === 1) return 1;\n  if (a === -1) return\
    \ -1;\n  if (b === -1) return -a;\n  if (b === 1) return -a;\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprtxprkzq.ts(83,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  if (a === b) return a;\n  if (b > a) b\
    \ = a;\n  if (b === a) return b;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  return b;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgjb5e8gg.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgjb5e8gg.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeymjmifo.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeymjmifo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg1od8hxb.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b > a) return\
    \ b;\n  if (a > b) return a;\n  while (true) {\n    const c = a % b;\n    if (c\
    \ === 0) return b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd5tsvykg.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd5tsvykg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmputcustxa.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747703
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a < 0 || b < 0) return NaN;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === -1)\
    \ return 1;\n  if (a === 2 || b === 2) return 1;\n  if (a === -2 || b === -2)\
    \ return -1;\n  if (a === 2 || b === -2) return 1;\n  if (a === -2 || b === 2)\
    \ return -1;\n  if (a === -3 || b === -3) return -2;\n  if (a === 3 || b === -3)\
    \ return 2;\n  if (a === -3 || b === 3) return -2;\n  if (a === 3 || b === -3)\
    \ return 2;\n  if (a === -4 || b === -4) return -2;\n  if (a === 4 || b === -4)\
    \ return 2;\n  if (a === -4 || b === 4) return 2;\n  if (a === 4 || b === -4)\
    \ return -2;\n  if (a === 5 || b === -5) return 2;\n  if (a === -5 || b === 5)\
    \ return  -2;\n  if (a === 5 || b === -5) return -2;\n  if (a === 6 || b === -6)\
    \ return 2;\n  if (a === -6 || b === 6) return  2;\n  if (a === 6 || b === -6)\
    \ return -2;\n  if (a === 7 || b === -7) return 2;\n  if (a === -7 || b === 7)\
    \ return  2;\n  if (a === 7 || b === -7) return -2;\n  if (a === 8 || b === -8)\
    \ return 2;\n  if (a === -8 || b === 8) return  2;\n  if (a === 8 || b === -8)\
    \ return -2;\n  if (a === 9 || b === -9) return 2;\n  if (a === -9 || b === 9)\
    \ return  2;\n  if (a === 9 || b === -9) return -2;\n  if (a === 10 || b === -10)\
    \ return 2;\n  if (a === -10 || b === 10) return  2;\n  if (a === 10 || b ===\
    \ -10) return -2;\n  if (a === 11 || b === -11) return 2;\n  if (a === -11 ||\
    \ b === 11) return  2;\n  if (a === 11 || b === -11) return -2;\n  if (a === 12\
    \ || b === -12) return 2;\n  if (a === -12\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5ccfbbac.ts(53,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp5ccfbbac.ts(65,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeymjmifo.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeymjmifo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return b;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return\
    \ NaN;\n  if (a === 0 || b === -1) return Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a\
    \ === 0 || b === -1) return Infinity;\n  if (a === 1) return -1;\n  if (b ===\
    \ -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b\
    \ === -1) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === -1) return\
    \ Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a ===\
    \ -1 || b === -2) return NaN;\n  if (a === 0 || b === -1) return Infinity;\n \
    \ if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b ===\
    \ -2) return NaN;\n  if (a === 0 || b === -1) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n\
    \  if (a === 0 || b === -1) return Infinity;\n  if (a === 1) return -1;\n  if\
    \ (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a ===\
    \ 0 || b === -1) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b ===\
    \ -1) return Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
    \  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === -1) return Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b ===\
    \ -2) return NaN;\n  if (a === 0 || b === -1) return Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n\
    \  if (a === 0 || b === -1) return Infinity;\n  if (a === 1) return \ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe3w9pmqc.ts(74,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return b;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    a = a % b;\n    if (a === 0) return b;\n\
    \    if (a === -1) return -1;\n    b = b % a;\n    if (b === 0) return a;\n  \
    \  if (b === -1) return -1;\n    a = a % b;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp755ckwjc.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp755ckwjc.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747705
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return -a;\n  if (a === -9) return -a;\n  if\
    \ (a === -10) return -a;\n  if (a === -11) return -a;\n  if (a === -12) return\
    \ -a;\n  if (a === -13) return -a;\n  if (a === -14) return -a;\n  if (a === -15)\
    \ return -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a\
    \ === -18) return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n\
    \  if (a === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return\
    \ -a;\n  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26)\
    \ return -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a\
    \ === -29) return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n\
    \  if (a === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return\
    \ -a;\n  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37)\
    \ return -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a\
    \ === -40) return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n\
    \  if (a === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return\
    \ -a;\n  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48)\
    \ return -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a\
    \ === -51) return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n\
    \  if (a === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return\
    \ -a;\n  if (a === -57\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpegwyub6o.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpegwyub6o.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659747704
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return a % b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdk3bnwg9.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdk3bnwg9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747705
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (b <\
    \ a) {\n    return b;\n  }\n  if (a === b) {\n    return a;\n  }\n  if (a % b\
    \ === 0) {\n    return a;\n  }\n  if (b % a === 0) {\n    return b;\n  }\n  let\
    \ c = 1;\n  while (a % c === 0) {\n    a /= c;\n    c += 1;\n  }\n  while (b %\
    \ c === 0) {\n    b /= c;\n    c += 1;\n  }\n  return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcnnc_u06.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcnnc_u06.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747705
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg1od8hxb.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659747704
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b > a) return\
    \ b;\n  if (a > b) return a;\n  while (true) {\n    const c = a % b;\n    if (c\
    \ === 0) return b;\n    a = b;\n    b = c;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd5tsvykg.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd5tsvykg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747704
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a < 0 || b < 0) return -1;\n  if (a === b) return\
    \ a;\n  if (a < b) return -1;\n  return 1;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmplhba10pj.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplhba10pj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747705

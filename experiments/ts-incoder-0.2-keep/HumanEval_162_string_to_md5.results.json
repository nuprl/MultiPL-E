{
  "language": "ts",
  "name": "HumanEval_162_string_to_md5",
  "results": [
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === \"\") {\n        return undefined;\n    }\n    const hash = crypto.createHash(\"md5\");\n    hash.update(text);\n    return hash.digest(\"hex\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp26aqn_qe.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: any = crypto.createHash('md5');\n    md5.update(text);\n    return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp5ithq3jy.ts(8,29): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3e17ay71.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: any = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnzaz6fzu.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text === 'string') {\n        return md5(text);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpm8nuohpo.ts(6,16): error TS2304: Cannot find name 'md5'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text !== 'string') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpir7debtv.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: any = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnzaz6fzu.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5 = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp931ozelw.ts(8,22): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3e17ay71.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text === 'string') {\n    return md5(text);\n  }\n  return undefined;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmphxibn249.ts(6,12): error TS2304: Cannot find name 'md5'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const hash = crypto.createHash('md5');\n    hash.update(text);\n    return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4fku3gkx.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333769
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n    return Array.from(md5)\n        .map((byte: number) => byte.toString(16).padStart(2, '0'))\n        .join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0i_g5e7u.ts(8,36): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text === 'string') {\n    return md5(text);\n  }\n  return undefined;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmphxibn249.ts(6,12): error TS2304: Cannot find name 'md5'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: any = crypto.createHash('md5');\n    md5.update(text);\n    return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp5ithq3jy.ts(8,29): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1wl4tacl.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpu0urm912.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: any = crypto.createHash('md5');\n    md5.update(text);\n    return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp5ithq3jy.ts(8,29): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3e17ay71.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n  return Array.from(md5)\n    .map((byte: number) => byte.toString(16).padStart(2, '0'))\n    .join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpmdmp68ae.ts(8,34): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: any = crypto.createHash('md5');\n    md5.update(text);\n    return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp5ithq3jy.ts(8,29): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1wl4tacl.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5 = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp931ozelw.ts(8,22): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text === 'string') {\n        return md5(text);\n    }\n    return undefined;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpiow1uuu0.ts(6,16): error TS2304: Cannot find name 'md5'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: any = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnzaz6fzu.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n    return Array.from(md5)\n        .map((byte: number) => byte.toString(16).padStart(2, '0'))\n        .join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0i_g5e7u.ts(8,36): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Buffer = crypto.createHash('md5').update(text).digest();\n    return md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpxo7uhm4_.ts(8,16): error TS2580: Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.\n../../../../tmp/tmpxo7uhm4_.ts(8,32): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n    return md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp2qzhw0hx.ts(8,36): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n../../../../tmp/tmp2qzhw0hx.ts(9,25): error TS2554: Expected 0 arguments, but got 1.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const hash = crypto.createHash('md5');\n    hash.update(text);\n    return hash.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpw0vb666f.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const hash = crypto.createHash('md5');\n    hash.update(text);\n    return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4fku3gkx.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333769
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text !== 'string') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpb5n4pw6d.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n    return Array.from(md5)\n        .map((byte: number) => byte.toString(16).padStart(2, '0'))\n        .join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0i_g5e7u.ts(8,36): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n  return '0x' + md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfjhum6q_.ts(8,34): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n../../../../tmp/tmpfjhum6q_.ts(9,30): error TS2554: Expected 0 arguments, but got 1.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpu0urm912.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Buffer = crypto.createHash('md5').update(text).digest();\n    return md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpxo7uhm4_.ts(8,16): error TS2580: Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.\n../../../../tmp/tmpxo7uhm4_.ts(8,32): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text !== 'string') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpl2w7k4jm.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n  return Array.from(md5).map((byte: number) => byte.toString(16).padStart(2, '0')).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpavdntowe.ts(8,34): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n  return '0x' + md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfjhum6q_.ts(8,34): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n../../../../tmp/tmpfjhum6q_.ts(9,30): error TS2554: Expected 0 arguments, but got 1.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5 = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp931ozelw.ts(8,22): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1wl4tacl.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Buffer = crypto.createHash('md5').update(text).digest();\n    return md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpxo7uhm4_.ts(8,16): error TS2580: Cannot find name 'Buffer'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.\n../../../../tmp/tmpxo7uhm4_.ts(8,32): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1wl4tacl.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text === 'string') {\n        return md5(text);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpm8nuohpo.ts(6,16): error TS2304: Cannot find name 'md5'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n    return Array.from(md5).map((byte: number) => byte.toString(16).padStart(2, '0')).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp7o9gjo3k.ts(8,36): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333915
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: any = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnzaz6fzu.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1wl4tacl.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (typeof text === 'string') {\n    return md5(text);\n  }\n  return undefined;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmphxibn249.ts(6,12): error TS2304: Cannot find name 'md5'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3e17ay71.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === \"\") {\n        return undefined;\n    }\n    const md5sum = crypto.createHash(\"md5\");\n    md5sum.update(text);\n    return md5sum.digest(\"hex\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpefxc4y_u.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333915
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text !== 'string') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpb5n4pw6d.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === \"\") {\n        return undefined;\n    }\n    const md5: Uint8Array = crypto.createHash(\"md5\").update(text).digest();\n    return Array.from(md5)\n        .map((byte: number) => byte.toString(16).padStart(2, \"0\"))\n        .join();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpxzmuokfb.ts(8,36): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333915
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (!text) {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpys63yyv3.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3e17ay71.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const hash = crypto.createHash('md5');\n  hash.update(text);\n  return hash.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpu0urm912.ts(8,23): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (typeof text !== 'string') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpb5n4pw6d.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: Uint8Array = crypto.createHash('md5').update(text).digest();\n  return '0x' + md5.toString('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfjhum6q_.ts(8,34): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n../../../../tmp/tmpfjhum6q_.ts(9,30): error TS2554: Expected 0 arguments, but got 1.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5: any = crypto.createHash('md5');\n  md5.update(text);\n  return md5.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnzaz6fzu.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n    if (text === '') {\n        return undefined;\n    }\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuijfjm9v.ts(8,27): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    },
    {
      "exit_code": 2,
      "program": "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5(text: string): string | undefined {\n  if (text === '') {\n    return undefined;\n  }\n  const md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\");\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd9bzs0wy.ts(8,25): error TS2339: Property 'createHash' does not exist on type 'Crypto'.\n",
      "timestamp": 1660333913
    }
  ]
}
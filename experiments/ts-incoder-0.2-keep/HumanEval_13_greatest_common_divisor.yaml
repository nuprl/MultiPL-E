completions:
- "  if (b === 0) return a;\n  if (a === 0) return b;\n  if (a === 1) return 1;\n\
  \  if (b === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a < 0\
  \ || b < 0) return NaN;\n  if (a === 0 || b === 0) return 0;\n  if (a < b) return\
  \ -1;\n  if (a > b) return 1;\n  while (a % b != 0) a = a / b;\n  return a;\n}\n"
- "  if (b === 0) return a;\n  if (a === 0) return b;\n  if (a === 1) return 1;\n\
  \  if (b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b)\
  \ return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return\
  \ 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a\
  \ === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a ===\
  \ -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0)\
  \ return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return\
  \ -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a ===\
  \ 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b)\
  \ return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return\
  \ 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a\
  \ === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a ===\
  \ -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0)\
  \ return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return\
  \ -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a ===\
  \ 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b)\
  \ return a;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return\
  \ 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a\
  \ === 0 || b === 0) return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a ===\
  \ -1 || b === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0)\
  \ return 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return\
  \ -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return 0;\n  if (a ===\
  \ 1 || b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b)\
  \ return a;\n  if (a === 0 || b === 0) return 0;\n"
- "  if (b === 0) return a;\n  if (a === 0) return b;\n  if (a === b) return a;\n\
  \  if (a < b) return greatest_common_divisor(b, a % b);\n  return greatest_common_divisor(a,\
  \ b);\n}\n"
- "  if (a === 0) return b;\n  if (b === 0) return a;\n  if (a === b) return a;\n\
  \  if (a < b) return greatest_common_divisor(b, a % b);\n  return greatest_common_divisor(a\
  \ % b, b);\n}\n"
- "  if (a < b) {\n    return a;\n  }\n  return gcd(b, a % b);\n}\n"
- "  if (a < b) {\n    return a;\n  }\n  return gcd(b, a % b);\n}\n"
- "  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  return greatest_common_divisor_helper(a,\
  \ b);\n}\n"
- "  if (b === 0) return a;\n  if (a === 0) return b;\n  if (a === 1) return 1;\n\
  \  if (b === 1) return 1;\n  if (a === -1 || b === -1) return -1;\n  if (a === b)\
  \ return 0;\n  if (a < b) a = b;\n  if (a === b) return a;\n  while (true) {\n \
  \   let r = a % b;\n    if (r === 0) return b;\n    if (r === a) return b;\n   \
  \ a = b;\n    b = r;\n  }\n}\n"
- "  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  return greatest_common_divisor_helper(a,\
  \ b);\n}\n"
- "  if (a < b) {\n    return a;\n  }\n  return gcd(b, a % b);\n}\n"
- "  if (b === 0) return a;\n  if (a === 0) return b;\n  if (a === 1) return 1;\n\
  \  if (b === 1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0\
  \ || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n\
  \  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if\
  \ (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return\
  \ 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b ===\
  \ -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0)\
  \ return 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1\
  \ || b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
  \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if (a\
  \ === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
  \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n\
  \  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1)\
  \ return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if\
  \ (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 ||\
  \ b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if\
  \ (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a\
  \ === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return\
  \ 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b ===\
  \ -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0)\
  \ return 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1\
  \ || b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
  \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if (a\
  \ === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if ("
- "  if (a < b) {\n    return a;\n  }\n  if (a > b) {\n    return b;\n  }\n  if (a\
  \ === b) {\n    return 0;\n  }\n  if (a % b === 0) {\n    return a / b;\n  }\n \
  \ return greatest_common_divisor(b, a % b);\n}\n"
- "  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  return greatest_common_divisor_helper(a,\
  \ b);\n}\n"
- "  if (b === 0) return a;\n  if (b === 1) return 1;\n  if (b === 2) return 2;\n\
  \  if (b === 3) return 3;\n  if (b === 4) return 4;\n  if (b === 5) return 5;\n\
  \  if (b === 6) return 6;\n  if (b === 7) return 7;\n  if (b === 8) return 8;\n\
  \  if (b === 9) return 9;\n  if (b === 10) return 10;\n  if (b === 11) return 11;\n\
  \  if (b === 12) return 12;\n  if (b === 13) return 13;\n  if (b === 14) return\
  \ 14;\n  if (b === 15) return 15;\n  if (b === 16) return 16;\n  if (b === 17) return\
  \ 17;\n  if (b === 18) return 18;\n  if (b === 19) return 19;\n  if (b === 20) return\
  \ 20;\n  if (b === 21) return 21;\n  if (b === 22) return 22;\n  if (b === 23) return\
  \ 23;\n  if (b === 24) return 24;\n  if (b === 25) return 25;\n  if (b === 26) return\
  \ 26;\n  if (b === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return\
  \ 29;\n  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
  \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35) return\
  \ 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b === 38) return\
  \ 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n  if (b === 41) return\
  \ 41;\n  if (b === 42) return 42;\n  if (b === 43) return 43;\n  if (b === 44) return\
  \ 44;\n  if (b === 45) return 45;\n  if (b === 46) return 46;\n  if (b === 47) return\
  \ 47;\n  if (b === 48) return 48;\n  if (b === 49) return 49;\n  if (b === 50) return\
  \ 50;\n  if (b === 51) return 51;\n  if (b === 52) return 52;\n  if (b === 53) return\
  \ 53;\n  if (b === 54) return 54;\n  if (b === 55) return 55;\n  if (b === 56) return\
  \ 56;\n  if (b === 57) return 57;\n  if (b === 58) return 58;\n  if (b === 59) return\
  \ 59;\n  if (b === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return\
  \ 62;\n  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
  \ 65;\n  if ("
- "  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  return greatest_common_divisor_helper(a,\
  \ b);\n}\n"
- "  if (a === 0) return b;\n  if (b === 0) return a;\n  if (a === b) return a;\n\
  \  if (a < b) a = b;\n  if (a === 0) return 0;\n  if (a < 2) return 1;\n  if (a\
  \ === 2) return 1;\n  if (a === 3) return 2;\n  if (a === 4) return 3;\n  if (a\
  \ === 5) return 4;\n  if (a === 6) return 5;\n  if (a === 7) return 6;\n  if (a\
  \ === 8) return 7;\n  if (a === 9) return 8;\n  if (a === 10) return 9;\n  if (a\
  \ === 11) return 10;\n  if (a === 12) return 11;\n  if (a === 13) return 12;\n \
  \ if (a === 14) return 13;\n  if (a === 15) return 14;\n  if (a === 16) return 15;\n\
  \  if (a === 17) return 16;\n  if (a === 18) return 17;\n  if (a === 19) return\
  \ 18;\n  if (a === 20) return 19;\n  if (a === 21) return 20;\n  if (a === 22) return\
  \ 21;\n  if (a === 23) return 22;\n  if (a === 24) return 23;\n  if (a === 25) return\
  \ 24;\n  if (a === 26) return 25;\n  if (a === 27) return 26;\n  if (a === 28) return\
  \ 27;\n  if (a === 29) return 28;\n  if (a === 30) return 29;\n  if (a === 31) return\
  \ 30;\n  if (a === 32) return 31;\n  if (a === 33) return 32;\n  if (a === 34) return\
  \ 33;\n  if (a === 35) return 34;\n  if (a === 36) return 35;\n  if (a === 37) return\
  \ 36;\n  if (a === 38) return 37;\n  if (a === 39) return 38;\n  if (a === 40) return\
  \ 39;\n  if (a === 41) return 40;\n  if (a === 42) return 41;\n  if (a === 43) return\
  \ 42;\n  if (a === 44) return 43;\n  if (a === 45) return 44;\n  if (a === 46) return\
  \ 45;\n  if (a === 47) return 46;\n  if (a === 48) return 47;\n  if (a === 49) return\
  \ 48;\n  if (a === 50) return 49;\n  if (a === 51) return 50;\n  if (a === 52) return\
  \ 51;\n  if (a === 53) return 52;\n  if (a === 54) return 53;\n  if (a === 55) return\
  \ 54;\n  if (a === 56) return 55;\n  if (a === 57) return 56;\n  if (a === 58) return\
  \ 57;\n  if (a === 59) return 58;\n  if (a === 60) return 59;\n  if (a === 61) return\
  \ 60;\n  if (a === 62) return "
- "  if (a < b) {\n    return a;\n  }\n  return gcd(b, a % b);\n}\n"
- "  if (b === 0) return a;\n  if (a === 0) return b;\n  if (a === 1) return 1;\n\
  \  if (b === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a ===\
  \ 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
  \  if (b === -2) return -1;\n  if (b === 3) return 1;\n  if (a === -1) return -1;\n\
  \  if (a === -2) return -2;\n  if (a === -3) return -1;\n  if (a === 4) return 1;\n\
  \  if (a === 5) return 1;\n  if (a === 6) return 1;\n  if (a === 7) return 1;\n\
  \  if (a === 8) return 1;\n  if (a === 9) return 1;\n  if (a === 10) return 1;\n\
  \  if (a === 11) return 1;\n  if (a === 12) return 1;\n  if (a === 13) return 1;\n\
  \  if (a === 14) return 1;\n  if (a === 15) return 1;\n  if (a === 16) return 1;\n\
  \  if (a === 17) return 1;\n  if (a === 18) return 1;\n  if (a === 19) return 1;\n\
  \  if (a === 20) return 1;\n  if (a === 21) return 1;\n  if (a === 22) return 1;\n\
  \  if (a === 23) return 1;\n  if (a === 24) return 1;\n  if (a === 25) return 1;\n\
  \  if (a === 26) return 1;\n  if (a === 27) return 1;\n  if (a === 28) return 1;\n\
  \  if (a === 29) return 1;\n  if (a === 30) return 1;\n  if (a === 31) return 1;\n\
  \  if (a === 32) return 1;\n  if (a === 33) return 1;\n  if (a === 34) return 1;\n\
  \  if (a === 35) return 1;\n  if (a === 36) return 1;\n  if (a === 37) return 1;\n\
  \  if (a === 38) return 1;\n  if (a === 39) return 1;\n  if (a === 40) return 1;\n\
  \  if (a === 41) return 1;\n  if (a === 42) return 1;\n  if (a === 43) return 1;\n\
  \  if (a === 44) return 1;\n  if (a === 45) return 1;\n  if (a === 46) return 1;\n\
  \  if (a === 47) return 1;\n  if (a === 48) return 1;\n  if (a === 49) return 1;\n\
  \  if (a === 50) return 1;\n  if (a === 51) return 1;\n  if (a === 52) return 1;\n\
  \  if (a === 53) return 1;\n  if (a === 54) return 1;\n  if (a === 55) return 1;\n\
  \  if (a === 56) return 1;\n  if (a === 57) return 1;\n  if (a === 58) return 1;\n\
  \  if (a === 59) return 1;\n  if (a === 60) return 1;\n  if (a === 61) return 1;\n\
  \  if ("
- "  if (a < b) {\n    return a;\n  }\n  return gcd(b, a % b);\n}\n"
- "  if (b === 0) return a;\n  return greatest_common_divisor(b, a % b);\n}\n"
language: ts
name: HumanEval_13_greatest_common_divisor
prompt: '//Return a greatest common divisor of two integers a and b

  // >>> greatest_common_divisor(3, 5)

  // 1

  // >>> greatest_common_divisor(25, 15)

  // 5

  function greatest_common_divisor(a: number, b: number): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
  \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
  \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"

completions:
- "  if (a < b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b +\
  \ a) {\n    return -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n"
- "  if (a < 0 || b < 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n   \
  \ return -1;\n  }\n  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n\
  \    return -1;\n  }\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
  \ 2));\n}\n"
- "\tlet area: number = Math.abs(a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
  \ 2) + Math.pow(c, 2));\n\tif (area > 1) {\n\t\treturn area;\n\t} else {\n\t\treturn\
  \ -1;\n\t}\n}\n"
- "    if (a < 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b >\
  \ c) {\n        return -1;\n    }\n    if (a + c > b) {\n        return -1;\n  \
  \  }\n    if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
  \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n"
- "    if (a < b) {\n        if (b < c) {\n            return (a * b) / c;\n     \
  \   } else {\n            return -1;\n        }\n    } else {\n        if (c < a)\
  \ {\n            return -1\n        } else {\n            return (b * c) / a;\n\
  \        }\n    }\n}\n"
- "    let area: number = 0.0;\n    if (a > b && a > c) {\n        area = a * b;\n\
  \    } else if (b > c && b > a) {\n        area = b * c;\n    } else {\n       \
  \ area = c * c;\n    }\n    return Math.round(area / 2) / 2;\n}\n"
- "    if (a < b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n   \
  \ return Math.abs((a * b + c * a - b * c + a * b - c * b - a * c + b * a + c * c\
  \ - a * b - b * c) / 2);\n}\n"
- "    if (a < b + c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n\
  \    }\n    let area = 0;\n    area += a * b + c * b;\n    area += a * c + b * c;\n\
  \    area += a * b + c * c;\n    return Math.round(area / 2) / 2;\n}\n"
- "  if (a < b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b +\
  \ a) {\n    return -1;\n  }\n  return (b + c) * 0.5;\n}\n"
- "    if (a + b > c && a + c > b && b + c > a) {\n        return Math.sqrt(Math.pow((a\
  \ + b), 2) + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n    } else {\n     \
  \   return -1;\n    }\n}\n"
- "    if (a < b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b\
  \ + a) {\n        return -1;\n    }\n    return Math.sqrt(a * b + c * c);\n}\n"
- "    if (a < b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n   \
  \ return (b - a) * (c - b) * (a - c) / 2;\n}\n"
- "  if (a > b && a > c) {\n    return a * 0.5\n  } else if (b > c && b > a) {\n \
  \   return b * 0.5\n  } else {\n    return c * 0.5\n  }\n}\n"
- "    if (a < 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let area: number\
  \ = Math.abs(a * b * c);\n    if (area >= 0) {\n        return Math.round(area *\
  \ 100) / 100;\n    }\n    return -1;\n}\n"
- "    let side1 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    let side2 = Math.sqrt(Math.pow(a,\
  \ 2) + Math.pow(c, 2));\n    let side3 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
  \ 2));\n    let area = Math.round((side1 + side2 + side3) / 2);\n    return area\
  \ > 0 ? area : -1;\n}\n"
- "    if (a < 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let area: number\
  \ = Math.abs(a * b * c);\n    if (area > Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
  \ 2)) {\n        area = Math.round(area / Math.pow(a, 2)) * Math.round(area / Math.pow(b,\
  \ 2)) * Math.round(area / Math.pow(c, 2));\n    }\n    return area;\n}\n"
- "    if (a < b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n   \
  \ return Math.abs((a * b + c * a - b * c + a * c - b * a + c * b - a * b - c * a)\
  \ / 2);\n}\n"
- "    let area: number = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area\
  \ * 100) / 100;\n    else\n        return -1;\n}\n"
- "    if (a < 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b >\
  \ c || a + c > b || b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a\
  \ * a + b * b + c * c);\n}\n"
- "    if (a > b && a > c && b > c) {\n        return Math.sqrt(a * a + b * b + c\
  \ * c);\n    }\n    return -1;\n}\n"
language: ts
name: HumanEval_71_triangle_area
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\n// triangle_area(3,\
  \ 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction triangle_area(a: number,\
  \ b: number, c: number): number {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4,\
  \ 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
  \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
  \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
  \ 2, 10),-1);\n}\n\ntest();"

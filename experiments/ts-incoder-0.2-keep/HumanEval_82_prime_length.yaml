name: HumanEval_82_prime_length
language: humaneval_to_typescript.py
prompt: "//Write a function that takes a string and returns True if the string\n//\
  \ length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
  \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
  // prime_length('orange') == False\nfunction prime_length(string: string): boolean\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prime_length;\n  assert.deepEqual(candidate(\"Hello\"\
  ),true);\n  assert.deepEqual(candidate(\"abcdcba\"),true);\n  assert.deepEqual(candidate(\"\
  kittens\"),true);\n  assert.deepEqual(candidate(\"orange\"),false);\n  assert.deepEqual(candidate(\"\
  wow\"),true);\n  assert.deepEqual(candidate(\"world\"),true);\n  assert.deepEqual(candidate(\"\
  MadaM\"),true);\n  assert.deepEqual(candidate(\"Wow\"),true);\n  assert.deepEqual(candidate(\"\
  \"),false);\n  assert.deepEqual(candidate(\"HI\"),true);\n  assert.deepEqual(candidate(\"\
  go\"),true);\n  assert.deepEqual(candidate(\"gogo\"),false);\n  assert.deepEqual(candidate(\"\
  aaaaaaaaaaaaaaa\"),false);\n  assert.deepEqual(candidate(\"Madam\"),true);\n  assert.deepEqual(candidate(\"\
  M\"),false);\n  assert.deepEqual(candidate(\"0\"),false);\n}\n\ntest();"
completions: ["  if (string.length <= 1) {\n    return false;\n  }\n  for (let i =\
    \ 2; i < string.length; i++) {\n    if (string.charAt(i) == string.charAt(i -\
    \ 1)) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let prime =\
    \ true;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === 'a'\
    \ || string[i] === 'e' || string[i] === 'i' || string[i] === 'o' || string[i]\
    \ === 'u') {\n      prime = false;\n      break;\n    }\n  }\n  return prime;\n\
    }\n", "  let prime = true;\n  for (let i = 0; i < string.length; i++) {\n    if\
    \ (string.charAt(i) == string.charAt(i + 1)) {\n      prime = false;\n      break;\n\
    \    }\n  }\n  return prime;\n}\n", "  if (string.length <= 1) {\n    return false;\n\
    \  }\n  for (let i = 2; i < string.length; i++) {\n    if (string.charAt(i) ==\
    \ string.charAt(i - 1)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (string.length < 2) {\n    return false;\n  }\n  for (let i = 2; i < string.length;\
    \ i++) {\n    if (string.charAt(i) !== string.charAt(i - 1)) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  let prime = true;\n  for (let i = 0; i <\
    \ string.length; i++) {\n    if (string[i] !== '.') {\n      if (string[i] !==\
    \ '/') {\n        if (string[i] !== '+') {\n          if (string[i] !== '-') {\n\
    \            if (string[i] !== '*') {\n              if (string[i] !== '/') {\n\
    \                if (string[i] !== '(') {\n                  if (string[i] !==\
    \ ')') {\n                    if (string[i] !== '[') {\n                     \
    \ if (string[i] !== ']') {\n                        prime = false;\n         \
    \             }\n                    }\n                  }\n                }\n\
    \              }\n            }\n          }\n        }\n      }\n    }\n  }\n\
    \  return prime;\n}\n", "  if (string.length < 2) return False;\n  if (string.length\
    \ == 2) return True;\n  if (string.length % 2 == 0) return False;\n  for (let\
    \ i = 2; i < string.length; i += 2) {\n    if (string.charAt(i) != string.charAt(i\
    \ + 1)) return false;\n  }\n  return True;\n}\n", "  if (string.length < 2) {\n\
    \    return false;\n  }\n  for (let i = 2; i < string.length; i++) {\n    if (string.charAt(i)\
    \ == string.charAt(i - 1)) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (string.length <= 1) {\n    return false;\n  }\n  const prime: string[]\
    \ = [];\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i)\
    \ >= '0' && string.charAt(i) <= '9') {\n      prime.push(string.charAt(i));\n\
    \    }\n  }\n  if (prime.length <= 1) {\n    return false;\n  }\n  for (let i\
    \ = 0; i < prime.length; i++) {\n    for (let j = i + 1; j < prime.length; j++)\
    \ {\n      if (prime[i] === prime[j]) {\n        return false;\n      }\n    }\n\
    \  }\n  return true;\n}\n", "  if (string.length < 2) {\n    return false;\n \
    \ }\n  for (let i = 2; i < string.length; i++) {\n    if (string.charAt(i - 1)\
    \ === string.charAt(i)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (string.length < 2) {\n    return false;\n  }\n  for (let i = 2; i < string.length;\
    \ i++) {\n    if (string.charAt(i) == string.charAt(i - 1)) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  let prime = true;\n  for (let i = 0; i <\
    \ string.length; i++) {\n    if (string[i] !== '.') {\n      prime = false;\n\
    \      break;\n    }\n  }\n  return prime;\n}\n", "  if (string.length < 2) {\n\
    \    return false;\n  }\n  for (let i = 2; i < string.length; i++) {\n    if (string.charAt(i)\
    \ == string.charAt(i - 1)) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  let prime = true;\n  for (let i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === '0') {\n      prime = false;\n      break;\n    }\n  }\n  return\
    \ prime;\n}\n", "  if (string.length < 2) return False;\n  if (string.length <\
    \ 4) return True;\n  if (string.length < 7) return True;\n  if (string.length\
    \ < 9) return True;\n  if (string.length < 11) return True;\n  if (string.length\
    \ < 13) return True;\n  if (string.length < 17) return True;\n  if (string.length\
    \ < 19) return True;\n  if (string.length < 23) return True;\n  if (string.length\
    \ < 27) return True;\n  if (string.length < 31) return True;\n  if (string.length\
    \ < 37) return True;\n  if (string.length < 41) return True;\n  if (string.length\
    \ < 43) return True;\n  if (string.length < 47) return True;\n  if (string.length\
    \ < 53) return True;\n  if (string.length < 59) return True;\n  if (string.length\
    \ < 63) return True;\n  if (string.length < 67) return True;\n  if (string.length\
    \ < 71) return True;\n  if (string.length < 73) return True;\n  if (string.length\
    \ < 79) return True;\n  if (string.length < 83) return True;\n  if (string.length\
    \ < 89) return True;\n  if (string.length < 97) return True;\n  if (string.length\
    \ < 101) return True;\n  if (string.length < 103) return True;\n  if (string.length\
    \ < 107) return True;\n  if (string.length < 109) return True;\n  if (string.length\
    \ < 113) return True;\n  if (string.length < 117) return True;\n  if (string.length\
    \ < 121) return True;\n  if (string.length < 123) return True;\n  if (string.length\
    \ < 127) return True;\n  return False;\n}\n", "  if (string.length <= 1) {\n \
    \   return false;\n  }\n  for (let i = 2; i < string.length; i++) {\n    if (string.charAt(i)\
    \ == string.charAt(i - 1)) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (string.length <= 1) {\n    return false;\n  }\n  const primes = new\
    \ Array<number>();\n  for (let i = 2; i <= string.length; i++) {\n    if (string.charAt(i)\
    \ == string.charAt(i - 1)) {\n      primes.push(i);\n    }\n  }\n  return primes.length\
    \ == string.length;\n}\n", "  // Write your code here\n  return true;\n}\n", " \
    \ if (string.length <= 1) {\n    return false;\n  }\n  for (let i = 2; i < string.length;\
    \ i++) {\n    if (string.charAt(i) !== string.charAt(i - 1)) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (string.length < 2) return False;\n \
    \ if (string.length < 4) return True;\n  if (string.length < 7) return False;\n\
    \  if (string.length < 9) return True;\n  if (string.length < 11) return False;\n\
    \  if (string.length < 13) return True;\n  if (string.length < 17) return False;\n\
    \  if (string.length < 19) return True;\n  if (string.length < 23) return False;\n\
    \  if (string.length < 29) return True;\n  if (string.length < 31) return False;\n\
    \  if (string.length < 37) return True;\n  if (string.length < 41) return False;\n\
    \  if (string.length < 43) return True;\n  if (string.length < 47) return False;\n\
    \  if (string.length < 53) return True;\n  if (string.length < 59) return False;\n\
    \  if (string.length < 61) return True;\n  if (string.length < 67) return False;\n\
    \  if (string.length < 71) return True;\n  if (string.length < 73) return False;\n\
    \  if (string.length < 79) return True;\n  if (string.length < 83) return False;\n\
    \  if (string.length < 89) return True;\n  if (string.length < 97) return False;\n\
    \  if (string.length < 101) return True;\n  if (string.length < 103) return False;\n\
    \  if (string.length < 109) return True;\n  if (string.length < 113) return False;\n\
    \  if (string.length < 121) return True;\n  if (string.length < 123) return False;\n\
    \  if (string.length < 127) return True;\n  return False;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

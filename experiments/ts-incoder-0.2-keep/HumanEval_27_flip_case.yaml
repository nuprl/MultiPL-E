completions:
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('').map(function (char) {\n    return char.charCodeAt(0)\
  \ > 96 ? char.toUpperCase() : char.toLowerCase();\n  }).join('');\n}\n"
- "  return string.split('').map(function (char) {\n    return char.charCodeAt(0)\
  \ === char.charCodeAt(0) ? '' : char.toUpperCase();\n  }).join('');\n}\n"
- "  return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase())\n    .join('');\n}\n"
- "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
  \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
  \    });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('').map(function (c: string) {\n    return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(c => c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase())\n      .join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n      .map(c => c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase())\n      .join('');\n}\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- "  return string.split('').map(function (c: string) {\n    return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- "  return string.split('').map(function (c: string) {\n    return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('').map(function (c: string) { return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('').map(function (c: string) {\n    return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- "  return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase())\n    .join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n      .map(function (char: string) { return\
  \ char.toUpperCase(); })\n      .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('').reduce((acc, char) => {\n    return char === char.toUpperCase()\
  \ ? acc.toUpperCase() : acc.toLowerCase();\n  });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('').map(letter => letter.toUpperCase()).join('');\n\
  }\n"
- "  return string.split('')\n    .map(function (c: string) {\n      return c.toUpperCase()\
  \ === c ? c.toLowerCase() : c.toUpperCase();\n    })\n    .join('');\n}\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('')\n    .map(letter => letter.toUpperCase())\n    .join('');\n\
  }\n"
- "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
  }\n"
- "  return string.split('').map(function (char: string) {\n    return char.charCodeAt(0)\
  \ > 96 ? char.toUpperCase() : char.toLowerCase();\n  }).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
  \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
  \    });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('').map(function (c) {\n    return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- "  return string.toLowerCase().split('').map(function (c: string) { return c ===\
  \ c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
  \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
  \    });\n}\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(letter => letter.toUpperCase())\n\
  \      .join('');\n}\n"
- "  return string.toLowerCase().replace(/[a-z]/g, function (c) { return c.toUpperCase();\
  \ });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().replace(/[A-Z]/g, function (c: string) {\n    return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n  });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n      .map(function (char: string) { return\
  \ char.toUpperCase(); })\n      .join('');\n}\n"
- "  return string.split('')\n    .map(function (char: string) { return char.toUpperCase();\
  \ })\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n    .join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n    .join('');\n\
  }\n"
- "  return string.split('')\n    .map(letter => letter.toUpperCase())\n    .join('');\n\
  }\n"
- "  return string.toLowerCase().replace(/[a-z]/g, function (c: string) {\n    return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.split('').reduce((acc, char) => {\n    return char === char.toUpperCase()\
  \ ? acc.toUpperCase() : acc.toLowerCase();\n  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "    return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });\n\
  }\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "    return string.toLowerCase().replace(/[a-z]/g, c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase());\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n    .join('');\n\
  }\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().replace(/[a-z]/g, c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase());\n}\n"
- "  return string.toLowerCase().split('').map(function (c: string) { return c ===\
  \ c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(letter => letter.toUpperCase())\n\
  \      .join('');\n}\n"
- "  return string.split('')\n    .map(letter => letter.toUpperCase())\n    .join('');\n\
  }\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase())\n    .join('');\n}\n"
- "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
  \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
  \    });\n}\n"
- "  return string.toLowerCase().replace(/[a-z]/g, function (c) { return c.toUpperCase();\
  \ });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.split('').map(function (char) {\n    return char.charCodeAt(0)\
  \ > 96 ? char.toUpperCase() : char.toLowerCase();\n  }).join('');\n}\n"
- "  return string.toLowerCase().replace(/[A-Z]/g, letter => letter.toUpperCase());\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (char) {\n    return char.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (char) {\n    return char.toLowerCase();\n  });\n\
  }\n"
- "    return string.toLowerCase().split('')\n        .map(c => c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase())\n        .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n      .map(function (char: string) { return\
  \ char.toUpperCase(); })\n      .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.split('').reduce((acc, char) => {\n    return char === char.toLowerCase()\
  \ ? acc.toUpperCase() : acc.toLowerCase();\n  });\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.split('')\n    .map(letter => letter.toUpperCase())\n    .join('');\n\
  }\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- "    return string.toLowerCase().split('')\n        .map(c => c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase())\n        .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (char) {\n    return char.toUpperCase();\n\
  \  });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('').map(letter => letter.toUpperCase()).join('');\n\
  }\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(letter => letter === letter.toUpperCase()\
  \ ? letter.toLowerCase() : letter.toUpperCase())\n      .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().replace(/[A-Z]/g, function (char) {\n    return char.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter === letter.toUpperCase()\
  \ ? letter.toLowerCase() : letter.toUpperCase())\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter === letter.toUpperCase()\
  \ ? letter.toLowerCase() : letter.toUpperCase())\n    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.replace(/[a-z]/g, function (c: string) {\n    return c.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (c: string) {\n    return c.toLowerCase();\n  });\n\
  }\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- "  return string.split('').map(function (c: string) {\n    return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- "  return string.split('').map(letter => letter.toUpperCase()).join('');\n}\n"
- "  return string.split('')\n    .map(letter => letter.toUpperCase())\n    .join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('').map(function (c: string) { return c ===\
  \ c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "    return string.toLowerCase().split('').map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase()).join('');\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
  \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
  \    });\n}\n"
- "  return string.split('')\n    .map(letter => letter.toUpperCase())\n    .join('');\n\
  }\n"
- "  return string.toLowerCase().split('')\n      .map(letter => letter.toUpperCase())\n\
  \      .join('');\n}\n"
- "  return string.toLowerCase().replace(/[a-z]/g, c => c.toUpperCase());\n}\n"
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.toLowerCase().split('').map(function (c: string) { return c ===\
  \ c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n      .map(c => c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase())\n      .join('');\n}\n"
- "    return string.replace(/[a-z]/g, function (letter) {\n        return letter.toUpperCase();\n\
  \    }).replace(/[A-Z]/g, function (letter) {\n        return letter.toLowerCase();\n\
  \    });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.split('').map(letter => letter === letter.toLowerCase() ? letter.toUpperCase()\
  \ : letter.toLowerCase()).join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n    .map(function (char: string) { return\
  \ char.toUpperCase(); })\n    .join('');\n}\n"
- "  return string.split('').map(function (c: string) { return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- "  return string.split('').map(letter => letter === letter.toLowerCase() ? letter.toUpperCase()\
  \ : letter.toLowerCase()).join('');\n}\n"
- "  return string.toLowerCase().split('')\n      .map(function (c: string) { return\
  \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase(); })\n      .join('');\n\
  }\n"
- "  return string.split('').map(function (c: string) { return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase(); }).join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  }).replace(/[A-Z]/g, function (letter) {\n    return letter.toLowerCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('').map(letter => letter.toUpperCase()).join('');\n\
  }\n"
- "  return string.split('').map(function (c: string) {\n    return c === c.toUpperCase()\
  \ ? c.toLowerCase() : c.toUpperCase();\n  }).join('');\n}\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n    .map(c => c === c.toUpperCase() ?\
  \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.split('').map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()).join('');\n\
  }\n"
- '  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase(); });

  }

  '
- "  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
  \    .join('');\n}\n"
- "  return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
  \ : c.toUpperCase())\n    .join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
- "  return string.toLowerCase().split('')\n      .map(letter => letter.toUpperCase())\n\
  \      .join('');\n}\n"
- "  return string.toLowerCase().split('').map(function (char) {\n    return char.toUpperCase()\
  \ === char ? char.toLowerCase() : char;\n  }).join('');\n}\n"
- "  return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
  \  });\n}\n"
language: ts
name: HumanEval_27_flip_case
prompt: '//For a given string, flip lowercase characters to uppercase and uppercase
  to lowercase.

  // >>> flip_case(''Hello'')

  // ''hELLO''

  function flip_case(string: string): string {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\"\
  );\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\n\ntest();"

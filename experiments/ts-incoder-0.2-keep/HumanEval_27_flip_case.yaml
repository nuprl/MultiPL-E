name: HumanEval_27_flip_case
language: humaneval_to_typescript.py
prompt: "//For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\"\
  );\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\n\ntest();"
completions: ["  return string.toLowerCase().split('')\n    .map(letter => letter.toUpperCase())\n\
    \    .join('');\n}\n", "  return string.split('').map(function (char) {\n    return\
    \ char.charCodeAt(0) > 96 ? char.toUpperCase() : char.toLowerCase();\n  }).join('');\n\
    }\n", "  return string.split('').map(function (char) {\n    return char.charCodeAt(0)\
    \ === char.charCodeAt(0) ? '' : char.toUpperCase();\n  }).join('');\n}\n", " \
    \ return string.split('')\n    .map(c => c === c.toUpperCase() ? c.toLowerCase()\
    \ : c.toUpperCase())\n    .join('');\n}\n", "    return string.replace(/[a-z]/g,\
    \ function (letter) {\n        return letter.toUpperCase();\n    }).replace(/[A-Z]/g,\
    \ function (letter) {\n        return letter.toLowerCase();\n    });\n}\n", " \
    \ return string.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n\
    \  });\n}\n", "  return string.replace(/[a-z]/g, function (c) { return c.toUpperCase();\
    \ });\n}\n", "  return string.split('')\n    .map(c => c === c.toUpperCase() ?\
    \ c.toLowerCase() : c.toUpperCase())\n    .join('');\n}\n", "  return string.toLowerCase().split('')\n\
    \    .map(letter => letter.toUpperCase())\n    .join('');\n}\n", "  return string.toLowerCase().split('')\n\
    \    .map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase())\n  \
    \  .join('');\n}\n", "  return string.replace(/[a-z]/g, function (letter) {\n\
    \    return letter.toUpperCase();\n  });\n}\n", "  return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "  return string.toLowerCase().split('')\n\
    \    .map(letter => letter.toUpperCase())\n    .join('');\n}\n", "  return string.toLowerCase().split('')\n\
    \    .map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase())\n  \
    \  .join('');\n}\n", "  return string.toLowerCase().split('')\n    .map(letter\
    \ => letter.toUpperCase())\n    .join('');\n}\n", "  return string.toLowerCase().split('').map(function\
    \ (c: string) {\n    return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n\
    \  }).join('');\n}\n", "  return string.toLowerCase().split('')\n    .map(c =>\
    \ c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase())\n    .join('');\n\
    }\n", "  return string.toLowerCase().split('')\n      .map(c => c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase())\n      .join('');\n}\n", "  return string.replace(/[a-z]/g,\
    \ function (c) { return c.toUpperCase(); });\n}\n", "  return string.toLowerCase().split('')\n\
    \      .map(c => c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase())\n\
    \      .join('');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_58_common
results:
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const result\
    \ = [];\n  for (const item of set1) {\n    if (set2.has(item)) {\n      result.push(item);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp9ekfeivb.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ekfeivb.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = l1.slice();\n  const l2: number[] = l2.slice();\n\
    \  const result: number[] = [];\n  while (l1.length > 0 && l2.length > 0) {\n\
    \    if (l1.shift() === l2.shift()) {\n      result.push(l1.shift());\n      l1.length--;\n\
    \      l2.length--;\n    } else {\n      result.push(l1.shift());\n      l2.length--;\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpds6ypssq.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpds6ypssq.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpds6ypssq.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpds6ypssq.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let l3: number;\n  let l4: number;\n\
    \  let l5: number;\n  let l6: number;\n  let l7: number;\n  let l8: number;\n\
    \  let l9: number;\n  let l10: number;\n  let l11: number;\n  let l12: number;\n\
    \  let l13: number;\n  let l14: number;\n  let l15: number;\n  let l16: number;\n\
    \  let l17: number;\n  let l18: number;\n  let l19: number;\n  let l20: number;\n\
    \  let l21: number;\n  let l22: number;\n  let l23: number;\n  let l24: number;\n\
    \  let l25: number;\n  let l26: number;\n  let l27: number;\n  let l28: number;\n\
    \  let l29: number;\n  let l30: number;\n  let l31: number;\n  let l32: number;\n\
    \  let l33: number;\n  let l34: number;\n  let l35: number;\n  let l36: number;\n\
    \  let l37: number;\n  let l38: number;\n  let l39: number;\n  let l40: number;\n\
    \  let l41: number;\n  let l42: number;\n  let l43: number;\n  let l44: number;\n\
    \  let l45: number;\n  let l46: number;\n  let l47: number;\n  let l48: number;\n\
    \  let l49: number;\n  let l50: number;\n  let l51: number;\n  let l52: number;\n\
    \  let l53: number;\n  let l54: number;\n  let l55: number;\n  let l56: number;\n\
    \  let l57: number;\n  let l58: number;\n  let l59: number;\n  let l60: number;\n\
    \  let l61: number;\n  let l62: number;\n  let l63: number;\n  let l64: number;\n\
    \  let l65: number;\n  let l66: number;\n  let l67: number;\n  let l68: number;\n\
    \  let l69: number;\n  let l70: number;\n  let l71: number;\n  let l72: number;\n\
    \  let l73: number;\n  let l74: number;\n  let l75: number;\n  let l76: number;\n\
    \  let l77: number;\n  let l78: number;\n  let l79: number;\n  let l80: number;\n\
    \  let l81: number;\n  let l82: number;\n  let l83: number;\n  let l84: number;\n\
    \  let l85: number;\n  let l86: number;\n  let l87: number;\n  let l88: number;\n\
    \  let l89: number;\n  let l90: number;\n  let l91: number;\n  let l92: number;\n\
    \  let l93: number;\n  let l94: number;\n  let l95: number;\n  let l96: number;\n\
    \  let l97: number;\n  let l98: number;\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp83c5dduj.ts(121,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  let j = 0;\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n    \
    \  i++;\n      j++;\n    } else if (l1[i] < l2[j]) {\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpunlobjed.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpunlobjed.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const result\
    \ = [];\n  for (let i = 0; i < Math.min(set1.size, set2.size); i++) {\n    if\
    \ (set1.has(i) && set2.has(i)) {\n      result.push(i);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj203wjw9.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj203wjw9.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hash: number[] = [];\n  const hashMap\
    \ = new Map<number, number[]>();\n  for (let i = 0; i < l1.length; i++) {\n  \
    \  const val = l1[i];\n    if (hashMap.has(val)) {\n      hashMap.get(val).push(l1[i]);\n\
    \    } else {\n      hashMap.set(val, [l1[i]]);\n    }\n  }\n  for (let i = 0;\
    \ i < l2.length; i++) {\n    const val = l2[i];\n    if (hashMap.has(val)) {\n\
    \      hashMap.get(val).push(l2[i]);\n    } else {\n      hashMap.set(val, [l2[i]]);\n\
    \    }\n  }\n  for (let i = 0; i < l1.length; i++) {\n    const val = l1[i];\n\
    \    const vals = hashMap.get(val);\n    for (let j = 0; j < vals.length; j++)\
    \ {\n      l.push(val);\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  4,\n  3,\n  34,\n  653,\n  653,\n  2,\n  5,\n  5,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpygqkfswm.js:40:12)\n\
    \    at Object.<anonymous> (/tmp/tmpygqkfswm.js:45:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \   1, 4, 3, 34,\n    653, 653, 2, 5,  5,\n      5\n  ],\n  expected: [ 1, 5,\
    \ 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  for (let i = 0; i < l1.length; i++) {\n    for (let\
    \ j = 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpib89c0tl.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpib89c0tl.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332758
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  let\
    \ i = 0;\n  while (i < l1.length && i < l2.length) {\n    if (l1[i] === l2[i])\
    \ {\n      result.push(l1[i]);\n      i++;\n    } else {\n      break;\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfmjwnr2o.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpfmjwnr2o.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpfmjwnr2o.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpfmjwnr2o.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    l.push(l1[i]);\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmp97zjhi7t.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp97zjhi7t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hash: number[] = [];\n  const hashMap:\
    \ Map<number, number> = new Map();\n  for (let i = 0; i < l1.length; i++) {\n\
    \    const val = l1[i];\n    if (!hashMap.has(val)) {\n      hashMap.set(val,\
    \ i);\n      l.push(val);\n    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n\
    \    const val = l2[i];\n    if (!hashMap.has(val)) {\n      hashMap.set(val,\
    \ i);\n      l.push(val);\n    }\n  }\n  for (let i = 0; i < l.length; i++) {\n\
    \    const val = l[i];\n    const index = hashMap.get(val);\n    l.splice(index,\
    \ 1);\n    hashMap.delete(val);\n  }\n  return l;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  653,\n\
    \  2,\n  7,\n  121\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n\
    \    at test (/tmp/tmplwybjhrb.js:35:12)\n    at Object.<anonymous> (/tmp/tmplwybjhrb.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 653,\
    \ 2, 7, 121 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      result.push(l1[i]);\n      i++;\n    }\
    \ else {\n      break;\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp6_npdur4.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_npdur4.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const common\
    \ = [];\n  for (let i = 0; i < Math.min(set1.size, set2.size); i++) {\n    if\
    \ (set1.has(i) && set2.has(i)) {\n      common.push(i);\n    }\n  }\n  return\
    \ common;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpt34064w8.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpt34064w8.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        l.push(l1[i]);\n        found = true;\n        break;\n  \
    \    }\n    }\n    if (!found) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvxl0_4ts.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  const lLen = l1.length;\n  const ljLen\
    \ = l2.length;\n  for (let i = 0; i < lLen; i++) {\n    const l1 = l1[i];\n  \
    \  const l2 = l2[i];\n    if (l1 === l2) {\n      result.push(l1);\n    } else\
    \ {\n      for (let j = 0; j < ljLen; j++) {\n        if (l1 === l2[j]) {\n  \
    \        result.push(l1);\n          break;\n        }\n      }\n    }\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpuzqq0ins.ts(11,16): error TS2448: Block-scoped variable
    ''l1'' used before its declaration.

    ../../../../tmp/tmpuzqq0ins.ts(12,16): error TS2448: Block-scoped variable ''l2''
    used before its declaration.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hashMap = new Map<number, number>();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const val = l1[i];\n    if (!hashMap.has(val))\
    \ {\n      l.push(val);\n      hashMap.set(val, 1);\n    } else {\n      hashMap.set(val,\
    \ hashMap.get(val) + 1);\n    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n\
    \    const val = l2[i];\n    if (!hashMap.has(val)) {\n      l.push(val);\n  \
    \    hashMap.set(val, 1);\n    } else {\n      hashMap.set(val, hashMap.get(val)\
    \ + 1);\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpv40bmjhv.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv40bmjhv.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  let llen = l1.length;\n  let llen2 = l2.length;\n\
    \  if (llen > llen2) {\n    llen = llen2;\n  }\n  for (let i = 0; i < llen; i++)\
    \ {\n    for (let j = 0; j < llen2; j++) {\n      if (l1[i] === l2[j]) {\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4u_uij2s.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4u_uij2s.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hashMap = new Map<number, number>();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const val = l1[i];\n    if (hashMap.has(val))\
    \ {\n      l.push(hashMap.get(val));\n    } else {\n      l.push(val);\n     \
    \ hashMap.set(val, i);\n    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n\
    \    const val = l2[i];\n    if (hashMap.has(val)) {\n      l.push(hashMap.get(val));\n\
    \    } else {\n      l.push(val);\n      hashMap.set(val, i);\n    }\n  }\n  return\
    \ l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  6,\n  7,\n  0,\n  6,\n  9,\n  4,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa86bod93.js:34:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa86bod93.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \   4, 3, 34, 653, 2,\n    5,   6, 7,  0,   6, 9,\n    4, 121\n  ],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_95xfjc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_95xfjc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l[j] = l1[i];\n      j++;\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpj7quytan.js:20:12)\n    at Object.<anonymous> (/tmp/tmpj7quytan.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    if (l2.indexOf(l1[i]) === -1) {\n      l[j] = l1[i];\n      j++;\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpj7quytan.js:20:12)\n    at Object.<anonymous> (/tmp/tmpj7quytan.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_95xfjc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_95xfjc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        result.push(l1[i]);\n        found = true;\n        break;\n\
    \      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcqj4d1hi.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        result.push(l1[i]);\n        found = true;\n        break;\n\
    \      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcqj4d1hi.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        result.push(l1[i]);\n        found = true;\n        break;\n\
    \      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcqj4d1hi.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const common:\
    \ number[] = [];\n  set1.forEach((val) => {\n    if (set2.has(val)) {\n      common.push(val);\n\
    \      set2.delete(val);\n    }\n  });\n  return common;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpvoiwyniw.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpvoiwyniw.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found: boolean = l2.indexOf(l1[i]) !== -1;\n    if (found) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp101qtkq1.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp101qtkq1.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  let\
    \ i = 0;\n  let j = 0;\n  while (i < l1.length && j < l2.length) {\n    if (l1[i]\
    \ === l2[j]) {\n      result.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp624giw5s.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmp624giw5s.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmp624giw5s.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmp624giw5s.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  let j = 0;\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n    \
    \  i++;\n      j++;\n    } else if (l1[i] < l2[j]) {\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpunlobjed.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpunlobjed.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = l1.sort();\n  const l2: number[] = l2.sort();\n  const\
    \ l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n  for\
    \ (i = 0; i < l1.length; i++) {\n    k = i;\n    for (j = i + 1; j < l2.length;\
    \ j++) {\n      if (l1[k] === l2[j]) {\n        k = j;\n      }\n    }\n    l.push(l1[k]);\n\
    \  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpwt0457g7.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpwt0457g7.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpwt0457g7.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpwt0457g7.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let n1: number;\n  let n2: number;\n\
    \  let n: number;\n  let found: boolean;\n  for (i = 0; i < l1.length; i++) {\n\
    \    l1 = l1[i];\n    found = false;\n    for (j = 0; j < l2.length; j++) {\n\
    \      l2 = l2[j];\n      n1 = l1;\n      n2 = l2;\n      n = n1 + n2;\n     \
    \ if (n === l1 + l2) {\n        l.push(n);\n        found = true;\n        break;\n\
    \      }\n      if (n < l1) {\n        n1 = n2;\n      } else {\n        n2 =\
    \ n1;\n      }\n    }\n    if (!found) {\n      l.push(l1);\n    }\n  }\n  return\
    \ l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpacvi21vm.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpacvi21vm.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpacvi21vm.ts(11,7): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpacvi21vm.ts(12,7): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpacvi21vm.ts(18,5): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmpacvi21vm.ts(21,7): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmpacvi21vm.ts(22,7): error TS2322: Type ''number[]'' is not assignable
    to type ''number''.

    ../../../../tmp/tmpacvi21vm.ts(23,7): error TS2322: Type ''number[]'' is not assignable
    to type ''number''.

    ../../../../tmp/tmpacvi21vm.ts(25,17): error TS2365: Operator ''+'' cannot be
    applied to types ''number[]'' and ''number[]''.

    ../../../../tmp/tmpacvi21vm.ts(30,11): error TS2365: Operator ''<'' cannot be
    applied to types ''number'' and ''number[]''.

    ../../../../tmp/tmpacvi21vm.ts(37,14): error TS2345: A'
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      i++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4wus7d4s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4wus7d4s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = [].concat(l1);\n  const l2: number[] = [].concat(l2);\n\
    \  const result: number[] = [];\n  let j = 0;\n  while (j < l1.length && j < l2.length)\
    \ {\n    if (l1[j] === l2[j]) {\n      result.push(l1[j]);\n      j++;\n    }\
    \ else if (l1[j] < l2[j]) {\n      j++;\n    } else {\n      j++;\n    }\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmputp9kz9l.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmputp9kz9l.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmputp9kz9l.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmputp9kz9l.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = l1.sort();\n  const l2: number[] = l2.sort();\n  const\
    \ l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n  for\
    \ (i = 0; i < l1.length; i++) {\n    k = i;\n    for (j = 0; j < l2.length; j++)\
    \ {\n      if (l1[k] === l2[j]) {\n        k = j;\n      }\n    }\n    l.push(l1[k]);\n\
    \  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpzqrghjou.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpzqrghjou.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpzqrghjou.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpzqrghjou.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  let\
    \ j = 0;\n  let i = 0;\n  while (i < l1.length && j < l2.length) {\n    if (l1[i]\
    \ === l2[j]) {\n      result.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] > l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpn4d9lgrj.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpn4d9lgrj.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpn4d9lgrj.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpn4d9lgrj.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  let j = 0;\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n    \
    \  i++;\n      j++;\n    } else if (l1[i] < l2[j]) {\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpunlobjed.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpunlobjed.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hash: number[] = [];\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    const val = l1[i];\n    if (hash.indexOf(val) ===\
    \ -1) {\n      l.push(val);\n      hash.push(val);\n    }\n  }\n  for (let i =\
    \ 0; i < l2.length; i++) {\n    const val = l2[i];\n    if (hash.indexOf(val)\
    \ === -1) {\n      l.push(val);\n      hash.push(val);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk161zjgg.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk161zjgg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len1: number;\n  let len2: number;\n\
    \  let min: number;\n  let max: number;\n  let minIndex: number;\n  let maxIndex:\
    \ number;\n  let comp: number;\n  let swap: number;\n  let swapIndex: number;\n\
    \  let swapped: boolean;\n  let swappedIndex: number;\n  let swappedIndex2: number;\n\
    \  let swappedIndex3: number;\n  let swappedIndex4: number;\n  let swappedIndex5:\
    \ number;\n  let swappedIndex6: number;\n  let swappedIndex7: number;\n  let swappedIndex8:\
    \ number;\n  let swappedIndex9: number;\n  let swappedIndex10: number;\n  let\
    \ swappedIndex11: number;\n  let swappedIndex12: number;\n  let swappedIndex13:\
    \ number;\n  let swappedIndex14: number;\n  let swappedIndex15: number;\n  let\
    \ swappedIndex16: number;\n  let swappedIndex17: number;\n  let swappedIndex18:\
    \ number;\n  let swappedIndex19: number;\n  let swappedIndex20: number;\n  let\
    \ swappedIndex21: number;\n  let swappedIndex22: number;\n  let swappedIndex23:\
    \ number;\n  let swappedIndex24: number;\n  let swappedIndex25: number;\n  let\
    \ swappedIndex26: number;\n  let swappedIndex27: number;\n  let swappedIndex28:\
    \ number;\n  let swappedIndex29: number;\n  let swappedIndex30: number;\n  let\
    \ swappedIndex31: number;\n  let swappedIndex32: number;\n  let swappedIndex33:\
    \ number;\n  let swappedIndex34: number;\n  let swappedIndex35: number;\n  let\
    \ swappedIndex36: number;\n  let swappedIndex37: number;\n  let swappedIndex38:\
    \ number;\n  let swappedIndex39: number;\n  let swappedIndex40: number;\n  let\
    \ swappedIndex41: number;\n  let swappedIndex42: number;\n  let swappedIndex43:\
    \ number;\n  let swappedIndex44: number;\n  let swappedIndex45: number;\n  let\
    \ swappedIndex46: number;\n  let swappedIndex47: number;\n  let swappedIndex48:\
    \ number;\n  let swappedIndex49: number;\n  let swappedIndex50: number;\n  let\
    \ swappedIndex51: number;\n  let swappedIndex52: number;\n  let swappedIndex53:\
    \ number;\n  let swappedIndex54: number;\n  let swappedIndex55: number;\n  let\
    \ swappedIndex56: number;\n  let swappedIndex57: number;\n  let swappedIndex58:\
    \ number;\n  let swappedIndex59: number;\n  let swappedIndex60: number;\n  let\
    \ swappedIndex61: number;\n  let swappedIndex62: number;\n  let \ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpd4vj79j4.ts(86,9): error TS1005: '','' expected.

    ../../../../tmp/tmpd4vj79j4.ts(98,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len1: number;\n  let len2: number;\n\
    \  let minLen: number;\n  let maxLen: number;\n  let min: number;\n  let max:\
    \ number;\n  let mid: number;\n  let res: number[];\n  l1 = l1 || [];\n  l2 =\
    \ l2 || [];\n  len1 = l1.length;\n  len2 = l2.length;\n  minLen = Math.min(len1,\
    \ len2);\n  maxLen = Math.max(len1, len2);\n  minLen = Math.min(minLen, maxLen);\n\
    \  maxLen = Math.max(minLen, maxLen);\n  for (i = 0; i < minLen; i++) {\n    l.push(l1[i]);\n\
    \  }\n  for (i = minLen; i < maxLen; i++) {\n    l.push(l2[i]);\n  }\n  for (i\
    \ = maxLen; i > minLen; i--) {\n    l.push(l1[i]);\n  }\n  for (i = 0; i < minLen;\
    \ i++) {\n    for (j = i + 1; j < maxLen; j++) {\n      k = l[j];\n      if (l[i]\
    \ === k) {\n        l.splice(j, 1);\n      }\n    }\n  }\n  res = [];\n  for (i\
    \ = 0; i < l.length; i++) {\n    res.push(l[i]);\n  }\n  return res;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfzzmunem.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpfzzmunem.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpfzzmunem.ts(11,7): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpfzzmunem.ts(12,7): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  const hashMap = new Map<number, number>();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const key = l1[i];\n    if (!hashMap.has(key))\
    \ {\n      hashMap.set(key, l2.indexOf(key));\n    } else {\n      const index\
    \ = hashMap.get(key);\n      result.push(l1[index]);\n      hashMap.delete(key);\n\
    \    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n    const key = l2[i];\n\
    \    if (!hashMap.has(key)) {\n      hashMap.set(key, result.length);\n    } else\
    \ {\n      const index = hashMap.get(key);\n      result.push(l2[index]);\n  \
    \    hashMap.delete(key);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  1,\n\
    \  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test\
    \ (/tmp/tmpa7xjeypr.js:36:12)\n    at Object.<anonymous> (/tmp/tmpa7xjeypr.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 1, 653\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    l.push(l1[i]);\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmp97zjhi7t.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp97zjhi7t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  const\
    \ hash1 = {};\n  const hash2 = {};\n  let i1 = 0, i2 = 0;\n  let item;\n  while\
    \ (i1 < l1.length && i2 < l2.length) {\n    item = l1[i1];\n    if (hash1[item]\
    \ === undefined) {\n      hash1[item] = 1;\n      result.push(item);\n      i1++;\n\
    \    } else {\n      hash1[item]++;\n    }\n    item = l2[i2];\n    if (hash2[item]\
    \ === undefined) {\n      hash2[item] = 1;\n      result.push(item);\n      i2++;\n\
    \    } else {\n      hash2[item]++;\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptdmvjip9.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmptdmvjip9.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmptdmvjip9.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmptdmvjip9.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const common\
    \ = [];\n  for (let i = 0; i < set1.size; i++) {\n    if (set2.has(set1.get(i)))\
    \ {\n      common.push(set1.get(i));\n    }\n  }\n  return common;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfunduyu_.ts(11,23): error TS2339: Property ''get'' does
    not exist on type ''Set<number>''.

    ../../../../tmp/tmpfunduyu_.ts(12,24): error TS2339: Property ''get'' does not
    exist on type ''Set<number>''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n\
    \    if (l1.indexOf(l2[i]) !== -1) {\n      result.push(l1[i]);\n    }\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpxkdutotv.js:18:12)\n    at Object.<anonymous> (/tmp/tmpxkdutotv.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332763
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  const hashMap = new Map<number, number>();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const val = l1[i];\n    if (!hashMap.has(val))\
    \ {\n      hashMap.set(val, 1);\n    } else {\n      hashMap.set(val, hashMap.get(val)\
    \ + 1);\n    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n    const val =\
    \ l2[i];\n    if (!hashMap.has(val)) {\n      hashMap.set(val, 1);\n    } else\
    \ {\n      hashMap.set(val, hashMap.get(val) + 1);\n    }\n  }\n  for (const [key,\
    \ value] of hashMap) {\n    if (value === l1.length && value === l2.length) {\n\
    \      result.push(key);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpvp874z4o.js:37:12)\n\
    \    at Object.<anonymous> (/tmp/tmpvp874z4o.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      i++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4wus7d4s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4wus7d4s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const result: number[] = [];\n  for (let i =\
    \ 0; i < l1.length; i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n\
    \    } else {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp0ua5f0oe.js:22:12)\n    at Object.<anonymous> (/tmp/tmp0ua5f0oe.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len1: number;\n  let len2: number;\n\
    \  let min: number;\n  let max: number;\n  let min1: number;\n  let max1: number;\n\
    \  let min2: number;\n  let max2: number;\n  let mid: number;\n  let mid1: number;\n\
    \  let mid2: number;\n  let mid3: number;\n  let mid4: number;\n  let mid5: number;\n\
    \  let mid6: number;\n  let mid7: number;\n  let mid8: number;\n  let mid9: number;\n\
    \  let mid10: number;\n  let mid11: number;\n  let mid12: number;\n  let mid13:\
    \ number;\n  let mid14: number;\n  let mid15: number;\n  let mid16: number;\n\
    \  let mid17: number;\n  let mid18: number;\n  let mid19: number;\n  let mid20:\
    \ number;\n  let mid21: number;\n  let mid22: number;\n  let mid23: number;\n\
    \  let mid24: number;\n  let mid25: number;\n  let mid26: number;\n  let mid27:\
    \ number;\n  let mid28: number;\n  let mid29: number;\n  let mid30: number;\n\
    \  let mid31: number;\n  let mid32: number;\n  let mid33: number;\n  let mid34:\
    \ number;\n  let mid35: number;\n  let mid36: number;\n  let mid37: number;\n\
    \  let mid38: number;\n  let mid39: number;\n  let mid40: number;\n  let mid41:\
    \ number;\n  let mid42: number;\n  let mid43: number;\n  let mid44: number;\n\
    \  let mid45: number;\n  let mid46: number;\n  let mid47: number;\n  let mid48:\
    \ number;\n  let mid49: number;\n  let mid50: number;\n  let mid51: number;\n\
    \  let mid52: number;\n  let mid53: number;\n  let mid54: number;\n  let mid55:\
    \ number;\n  let mid56: number;\n  let mid57: number;\n  let mid58: number;\n\
    \  let mid59: number;\n  let mid60: number;\n  let mid61: number;\n  let mid62:\
    \ number;\n  let mid63: number;\n  let mid64: number;\n  let mid65: number;\n\
    \  let mid66: number;\n  let mid67: number;\n  let mid68: number;\n  let mid69:\
    \ number;\n  let mid70: number;\n  let mid71: number;\n  let mid72: number;\n\
    \  let mid73: number;\n  let mid74: number;\n  let mid75: number;\n  let mid76:\
    \ number;\n  let mid77: number;\n  let mid78: number;\n  let mid79: number;\n\
    \  let mid80: number;\n  let mid81: number;\n  let mid82: number;\n  let mid83:\
    \ number;\n  let mid84: number;\n  let mid85: number;\n  let mid86: number;\n\
    \  let mid87: number;\n  let mid88\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmblfyyml.ts(122,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n\
    \    const found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if\
    \ (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        found = true;\n  \
    \      break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp76olzpla.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = l1.sort();\n  const l2: number[] = l2.sort();\n  const\
    \ l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n  for\
    \ (i = 0; i < l1.length; i++) {\n    for (j = i + 1; j < l2.length; j++) {\n \
    \     if (l1[i] === l2[j]) {\n        l.push(l1[i]);\n      }\n    }\n  }\n  return\
    \ l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmplnx9m2sq.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmplnx9m2sq.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmplnx9m2sq.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmplnx9m2sq.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  let j = 0;\n  for (let i = 0; i < l1.length; i++)\
    \ {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n    if\
    \ (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpo7yj0tde.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpo7yj0tde.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  const hashTable: { [key: number]: boolean;\
    \ } = {};\n  for (let i = 0; i < l1.length; i++) {\n    const key = l1[i];\n \
    \   if (!hashTable[key]) {\n      hashTable[key] = true;\n      result.push(key);\n\
    \    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n    const key = l2[i];\n\
    \    if (!hashTable[key]) {\n      hashTable[key] = true;\n      result.push(key);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_gm26q4j.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_gm26q4j.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Set();\n  const hash2 = new Set();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    hash1.add(l1[i]);\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    hash2.add(l2[i]);\n  }\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (hash1.has(l1[i]) && hash2.has(l2[i])) {\n   \
    \   result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmphwalswoz.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphwalswoz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  let j = 0;\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n    \
    \  i++;\n      j++;\n    } else if (l1[i] < l2[j]) {\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpunlobjed.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpunlobjed.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = l1.sort((a, b) => a - b);\n  const l2: number[] =\
    \ l2.sort((a, b) => a - b);\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l: number;\n  let m: number;\n  let n: number = 0;\n  for (i = 0; i < l1.length;\
    \ i++) {\n    for (j = 0; j < l2.length; j++) {\n      k = l1.indexOf(l1[i]);\n\
    \      l = l2.indexOf(l2[j]);\n      if (k !== -1 && l !== -1) {\n        if (k\
    \ === l) {\n          m = 0;\n        } else {\n          m = k - l;\n       \
    \ }\n        n = Math.min(n, m);\n      }\n    }\n  }\n  return l1.slice(0, n);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp86fsm8az.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmp86fsm8az.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmp86fsm8az.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmp86fsm8az.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  for (i = 0; i < l1.length; i++) {\n    for (j = 0; j < l2.length; j++) {\n\
    \      if (l1[i] === l2[j]) {\n        l.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkhpofwff.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkhpofwff.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  let j = 0;\n  let k = 0;\n  while (j < l1.length\
    \ && k < l2.length) {\n    if (l1[j] === l2[k]) {\n      result.push(l1[j]);\n\
    \      j++;\n      k++;\n    } else if (l1[j] < l2[k]) {\n      j++;\n    } else\
    \ {\n      k++;\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp9zez24os.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9zez24os.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const result\
    \ = [];\n  for (let i = 0; i < Math.min(set1.size, set2.size); i++) {\n    if\
    \ (set1.has(i) && set2.has(i)) {\n      result.push(i);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj203wjw9.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj203wjw9.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332758
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  let\
    \ j = 0;\n  let i = 0;\n  while (i < l1.length && j < l2.length) {\n    if (l1[i]\
    \ === l2[j]) {\n      result.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp2dgy_gfb.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmp2dgy_gfb.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmp2dgy_gfb.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmp2dgy_gfb.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hashMap = new Map<number, number>();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const key = l1[i];\n    if (hashMap.has(key))\
    \ {\n      l.push(key);\n    } else {\n      hashMap.set(key, l2.indexOf(key));\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmph38nifjp.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmph38nifjp.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Set();\n  const hash2 = new Set();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    hash1.add(l1[i]);\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    hash2.add(l2[i]);\n  }\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (hash1.has(l1[i]) && hash2.has(l2[i])) {\n   \
    \   result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmphwalswoz.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphwalswoz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  let j = 0;\n  for (let i = 0; i < l1.length; i++)\
    \ {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n    if\
    \ (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpo7yj0tde.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpo7yj0tde.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  let j = 0;\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n    \
    \  i++;\n      j++;\n    } else if (l1[i] > l2[j]) {\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdgcv38tx.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdgcv38tx.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    l.push(l1[i]);\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmp97zjhi7t.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp97zjhi7t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      i++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4wus7d4s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4wus7d4s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len1: number;\n  let len2: number;\n\
    \  let min: number;\n  let max: number;\n  let minIndex: number;\n  let maxIndex:\
    \ number;\n  for (i = 0, len1 = l1.length; i < len1; i++) {\n    l1 = l1[i];\n\
    \    for (j = 0, len2 = l2.length; j < len2; j++) {\n      l2 = l2[j];\n     \
    \ min = Math.min(l1, l2);\n      max = Math.max(l1, l2);\n      if (min === max)\
    \ {\n        l.push(min);\n      } else {\n        if (min > max) {\n        \
    \  l.push(min);\n          l.push(max);\n        } else {\n          l.push(max);\n\
    \          l.push(min);\n        }\n      }\n    }\n  }\n  return l;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpojv20z5z.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpojv20z5z.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpojv20z5z.ts(11,7): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpojv20z5z.ts(12,7): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpojv20z5z.ts(20,5): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmpojv20z5z.ts(22,7): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmpojv20z5z.ts(23,22): error TS2345: Argument of type ''number[]''
    is not assignable to parameter of type ''number''.

    ../../../../tmp/tmpojv20z5z.ts(24,22): error TS2345: Argument of type ''number[]''
    is not assignable to parameter of type ''number''.

    '
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: number;\n  let j2: number;\n\
    \  let k1: number;\n  let k2: number;\n  let l1: number;\n  let l2: number;\n\
    \  let j1: number;\n  let j2: number;\n  let k1: number;\n  let k2: number;\n\
    \  let l1: number;\n  let l2: number;\n  let j1: \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpo0or6bgx.ts(110,9): error TS1005: '','' expected.

    ../../../../tmp/tmpo0or6bgx.ts(122,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    if (l2.indexOf(l1[i]) !== -1) {\n      l[j] = l1[i];\n      j++;\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpqw28u0cr.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqw28u0cr.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  const\
    \ hash1 = {};\n  const hash2 = {};\n  for (let i = 0; i < l1.length; i++) {\n\
    \    const val = l1[i];\n    if (!hash1[val]) {\n      hash1[val] = true;\n  \
    \    result.push(val);\n    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n\
    \    const val = l2[i];\n    if (!hash2[val]) {\n      hash2[val] = true;\n  \
    \    result.push(val);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpkf6tynha.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpkf6tynha.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpkf6tynha.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpkf6tynha.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332765
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_95xfjc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_95xfjc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_95xfjc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_95xfjc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        l.push(l1[i]);\n        found = true;\n        break;\n  \
    \    }\n    }\n    if (!found) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvxl0_4ts.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      result.push(l1[i]);\n      i++;\n    }\
    \ else {\n      break;\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp6_npdur4.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6_npdur4.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1: number[] = l1.slice();\n  const l2: number[] = l2.slice();\n\
    \  const result: number[] = [];\n  while (l1.length > 0 && l2.length > 0) {\n\
    \    if (l1[0] === l2[0]) {\n      result.push(l1[0]);\n      l1.shift();\n  \
    \    l2.shift();\n    } else {\n      break;\n    }\n  }\n  return result.concat(l1,\
    \ l2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp5b2hfxsy.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmp5b2hfxsy.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmp5b2hfxsy.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmp5b2hfxsy.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let n1: number;\n  let n2: number;\n\
    \  let n: number;\n  for (i = 0, n = l1.length; i < n; i++) {\n    l1 = l1[i];\n\
    \    l2 = l2[i];\n    if (l1 === l2) {\n      l.push(l1);\n      continue;\n \
    \   }\n    for (j = 0, n1 = l1.length; j < n1; j++) {\n      l1 = l1[j];\n   \
    \   n2 = l2[j];\n      if (l1 === n2) {\n        l.push(l1);\n        break;\n\
    \      }\n      for (k = 0, n2 = l2.length; k < n2; k++) {\n        l2 = l2[k];\n\
    \        if (l1 === n2) {\n          l.push(l1);\n          break;\n        }\n\
    \      }\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprlzhaxup.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmprlzhaxup.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmprlzhaxup.ts(11,7): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmprlzhaxup.ts(12,7): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmprlzhaxup.ts(17,5): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmprlzhaxup.ts(18,5): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmprlzhaxup.ts(20,14): error TS2345: Argument of type ''number[]''
    is not assignable to parameter of type ''number''.

    ../../../../tmp/tmprlzhaxup.ts(24,7): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmprlzhaxup.ts(26,11): error TS2367: This condition will always
    return ''false'' since the types ''number[]'' and ''number'' have no overlap.

    ../../../../tmp/tmprlzhaxup.ts(31,9): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../.'
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hash: any = {};\n  for (let i = 0; i <\
    \ l1.length; i++) {\n    const val = l1[i];\n    if (hash[val] === undefined)\
    \ {\n      l.push(val);\n      hash[val] = 1;\n    } else {\n      hash[val]++;\n\
    \    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n    const val = l2[i];\n\
    \    if (hash[val] === undefined) {\n      l.push(val);\n      hash[val] = 1;\n\
    \    } else {\n      hash[val]++;\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdr3ran0g.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdr3ran0g.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Set();\n  const hash2 = new Set();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    hash1.add(l1[i]);\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    hash2.add(l2[i]);\n  }\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (hash1.has(l1[i]) && hash2.has(l2[i])) {\n   \
    \   result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmphwalswoz.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphwalswoz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Map();\n  const hash2 = new Map();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    hash1.set(l1[i], i);\n  }\n  for\
    \ (let i = 0; i < l2.length; i++) {\n    hash2.set(l2[i], i);\n  }\n  for (let\
    \ i = 0; i < l1.length; i++) {\n    const key = l1[i];\n    if (hash2.has(key))\
    \ {\n      result.push(key);\n      hash2.delete(key);\n    }\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    const key = l2[i];\n    if (hash1.has(key))\
    \ {\n      result.push(key);\n      hash1.delete(key);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5,\n  1,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n\
    ]\n    at test (/tmp/tmpldw7a6tp.js:35:12)\n    at Object.<anonymous> (/tmp/tmpldw7a6tp.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5, 1, 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len: number;\n  let min: number;\n\
    \  let max: number;\n  let min1: number;\n  let max1: number;\n  let min2: number;\n\
    \  let max2: number;\n  let min3: number;\n  let max3: number;\n  let min4: number;\n\
    \  let max4: number;\n  let min5: number;\n  let max5: number;\n  let min6: number;\n\
    \  let max6: number;\n  let min7: number;\n  let max7: number;\n  let min8: number;\n\
    \  let max8: number;\n  let min9: number;\n  let max9: number;\n  let min10: number;\n\
    \  let max10: number;\n  let min11: number;\n  let max11: number;\n  let min12:\
    \ number;\n  let max12: number;\n  let min13: number;\n  let max13: number;\n\
    \  let min14: number;\n  let max14: number;\n  let min15: number;\n  let max15:\
    \ number;\n  let min16: number;\n  let max16: number;\n  let min17: number;\n\
    \  let max17: number;\n  let min18: number;\n  let max18: number;\n  let min19:\
    \ number;\n  let max19: number;\n  let min20: number;\n  let max20: number;\n\
    \  let min21: number;\n  let max21: number;\n  let min22: number;\n  let max22:\
    \ number;\n  let min23: number;\n  let max23: number;\n  let min24: number;\n\
    \  let max24: number;\n  let min25: number;\n  let max25: number;\n  let min26:\
    \ number;\n  let max26: number;\n  let min27: number;\n  let max27: number;\n\
    \  let min28: number;\n  let max28: number;\n  let min29: number;\n  let max29:\
    \ number;\n  let min30: number;\n  let max30: number;\n  let min31: number;\n\
    \  let max31: number;\n  let min32: number;\n  let max32: number;\n  let min33:\
    \ number;\n  let max33: number;\n  let min34: number;\n  let max34: number;\n\
    \  let min35: number;\n  let max35: number;\n  let min36: number;\n  let max36:\
    \ number;\n  let min37: number;\n  let max37: number;\n  let min38: number;\n\
    \  let max38: number;\n  let min39: number;\n  let max39: number;\n  let min40:\
    \ number;\n  let max40: number;\n  let min41: number;\n  let max41: number;\n\
    \  let min42: number;\n  let max42: number;\n  let min43: number;\n  let max43:\
    \ number;\n  let min44: number;\n  let max44: number;\n  let min45: number;\n\
    \  let max45: number;\n  let min46: number;\n  let max46: number;\n  let min47:\
    \ number;\n  let max47: number;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpc3c9rbbf.ts(122,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const common\
    \ = new Set([...set1].filter(x => set2.has(x)));\n  return [...set1].filter(x\
    \ => !common.has(x));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpj3bhyanc.js:15:12)\n    at Object.<anonymous> (/tmp/tmpj3bhyanc.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      break;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpd7tgcure.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd7tgcure.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) !== -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpog07cvmg.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpog07cvmg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n\
    \    const found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if\
    \ (l1[i] === l2[j]) {\n        result.push(l1[i]);\n        found = true;\n  \
    \      break;\n      }\n    }\n    if (!found) {\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp76olzpla.ts(13,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l1 = l1 || [];\n  const l2 = l2 || [];\n  const result = [];\n  let\
    \ i = 0;\n  let j = 0;\n  while (i < l1.length && j < l2.length) {\n    if (l1[i]\
    \ === l2[j]) {\n      result.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp624giw5s.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmp624giw5s.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmp624giw5s.ts(7,9): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmp624giw5s.ts(8,9): error TS2300: Duplicate identifier ''l2''.

    '
  timestamp: 1660332762
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len: number;\n  let min: number;\n\
    \  let max: number;\n  let mid: number;\n  let a: number;\n  let b: number;\n\
    \  let c: number;\n  let d: number;\n  let e: number;\n  let f: number;\n  let\
    \ g: number;\n  let h: number;\n  let j1: number;\n  let j2: number;\n  let j3:\
    \ number;\n  let j4: number;\n  let j5: number;\n  let j6: number;\n  let j7:\
    \ number;\n  let j8: number;\n  let j9: number;\n  let j10: number;\n  let j11:\
    \ number;\n  let j12: number;\n  let j13: number;\n  let j14: number;\n  let j15:\
    \ number;\n  let j16: number;\n  let j17: number;\n  let j18: number;\n  let j19:\
    \ number;\n  let j20: number;\n  let j21: number;\n  let j22: number;\n  let j23:\
    \ number;\n  let j24: number;\n  let j25: number;\n  let j26: number;\n  let j27:\
    \ number;\n  let j28: number;\n  let j29: number;\n  let j30: number;\n  let j31:\
    \ number;\n  let j32: number;\n  let j33: number;\n  let j34: number;\n  let j35:\
    \ number;\n  let j36: number;\n  let j37: number;\n  let j38: number;\n  let j39:\
    \ number;\n  let j40: number;\n  let j41: number;\n  let j42: number;\n  let j43:\
    \ number;\n  let j44: number;\n  let j45: number;\n  let j46: number;\n  let j47:\
    \ number;\n  let j48: number;\n  let j49: number;\n  let j50: number;\n  let j51:\
    \ number;\n  let j52: number;\n  let j53: number;\n  let j54: number;\n  let j55:\
    \ number;\n  let j56: number;\n  let j57: number;\n  let j58: number;\n  let j59:\
    \ number;\n  let j60: number;\n  let j61: number;\n  let j62: number;\n  let j63:\
    \ number;\n  let j64: number;\n  let j65: number;\n  let j66: number;\n  let j67:\
    \ number;\n  let j68: number;\n  let j69: number;\n  let j70: number;\n  let j71:\
    \ number;\n  let j72: number;\n  let j73: number;\n  let j74: number;\n  let j75:\
    \ number;\n  let j76: number;\n  let j77: number;\n  let j78: number;\n  let j79:\
    \ number;\n  let j80: number;\n  let j81: number;\n  let j82: number;\n  let j83:\
    \ number;\n  let j84: number;\n  let j85: number;\n  let j86: number;\n  let j\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpvqaay7az.ts(124,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  let j = 0;\n  while (i < l1.length\
    \ && j < l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n    \
    \  i++;\n      j++;\n    } else if (l1[i] > l2[j]) {\n      i++;\n    } else {\n\
    \      j++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdgcv38tx.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdgcv38tx.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i = 0;\n  while (i < l1.length && i < l2.length)\
    \ {\n    if (l1[i] === l2[i]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      i++;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4wus7d4s.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4wus7d4s.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Map();\n  const hash2 = new Map();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const val = l1[i];\n    if (hash1.has(val))\
    \ {\n      hash2.get(val).push(l1[i]);\n    } else {\n      hash1.set(val, [l1[i]]);\n\
    \    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n    const val = l2[i];\n\
    \    if (hash2.has(val)) {\n      result.push(...hash2.get(val));\n    } else\
    \ {\n      hash2.set(val, [l2[i]]);\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmps3i8gvft.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmps3i8gvft.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let i: number;\n  let j: number;\n  let k: number;\n\
    \  let l1: number;\n  let l2: number;\n  let len1: number;\n  let len2: number;\n\
    \  let minLen: number;\n  let maxLen: number;\n  let min: number;\n  let max:\
    \ number;\n  let mid: number;\n  let cmp: number;\n  for (i = 0, len1 = l1.length;\
    \ i < len1; i++) {\n    l1 = l1[i];\n    l2 = l2[i];\n    minLen = Math.min(l1.length,\
    \ l2.length);\n    for (j = 0, len2 = minLen - 1; j < len2; j++) {\n      k =\
    \ j + 1;\n      cmp = l1[k] - l2[k];\n      if (cmp !== 0) {\n        break;\n\
    \      }\n    }\n    if (cmp < 0) {\n      min = l1[k];\n      minLen = k;\n \
    \   } else {\n      max = l2[k];\n      maxLen = k;\n    }\n  }\n  if (maxLen\
    \ < minLen) {\n    min = min;\n    max = max;\n    minLen = maxLen;\n  }\n  mid\
    \ = min + ((max - min) / 2) | 0;\n  l = [];\n  for (i = 0, len1 = l1.length; i\
    \ < len1; i++) {\n    l[i] = l1[i];\n  }\n  for (i = 0, len2 = l2.length; i <\
    \ len2; i++) {\n    l[i + minLen] = l2[i];\n  }\n  return l;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpih32vg2s.ts(6,17): error TS2300: Duplicate identifier
    ''l1''.

    ../../../../tmp/tmpih32vg2s.ts(6,31): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpih32vg2s.ts(11,7): error TS2300: Duplicate identifier ''l1''.

    ../../../../tmp/tmpih32vg2s.ts(12,7): error TS2300: Duplicate identifier ''l2''.

    ../../../../tmp/tmpih32vg2s.ts(22,5): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmpih32vg2s.ts(23,5): error TS2322: Type ''number'' is not assignable
    to type ''number[]''.

    ../../../../tmp/tmpih32vg2s.ts(46,3): error TS2588: Cannot assign to ''l'' because
    it is a constant.

    '
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Set();\n  const hash2 = new Set();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    hash1.add(l1[i]);\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    hash2.add(l2[i]);\n  }\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (hash1.has(l1[i]) && hash2.has(l2[i])) {\n   \
    \   result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmphwalswoz.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphwalswoz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const set1Size\
    \ = set1.size;\n  const set2Size = set2.size;\n  const commonSet = new Set();\n\
    \  for (let i = 0; i < set1Size; i++) {\n    if (set2.has(set1.get(i))) {\n  \
    \    commonSet.add(set1.get(i));\n    }\n  }\n  return [...commonSet];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: "../../../../tmp/tmpaeasv2mb.ts(13,23): error TS2339: Property 'get' does\
    \ not exist on type 'Set<number>'.\n../../../../tmp/tmpaeasv2mb.ts(14,26): error\
    \ TS2339: Property 'get' does not exist on type 'Set<number>'.\n../../../../tmp/tmpaeasv2mb.ts(17,3):\
    \ error TS2322: Type 'unknown[]' is not assignable to type 'number[]'.\n  Type\
    \ 'unknown' is not assignable to type 'number'.\n"
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    l.push(l1[i]);\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmp97zjhi7t.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp97zjhi7t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Set();\n  const hash2 = new Set();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    hash1.add(l1[i]);\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    hash2.add(l2[i]);\n  }\n  for (let i = 0;\
    \ i < l1.length; i++) {\n    if (hash1.has(l1[i]) && hash2.has(l2[i])) {\n   \
    \   result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmphwalswoz.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphwalswoz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332766
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result = [];\n  const hash1 = new Map();\n  const hash2 = new Map();\n\
    \  for (let i = 0; i < l1.length; i++) {\n    const val = l1[i];\n    if (!hash1.has(val))\
    \ {\n      hash1.set(val, i);\n      result.push(val);\n    }\n  }\n  for (let\
    \ i = 0; i < l2.length; i++) {\n    const val = l2[i];\n    if (!hash2.has(val))\
    \ {\n      hash2.set(val, i);\n      result.push(val);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  5,\n  7,\n  1,\n  9,\n  653,\n  121\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmply8ikb41.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmply8ikb41.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34, 653,   2,\n      5, 5, 7,  1,   9, 653,\n    121\n  ],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332767
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7x1bar7d.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7x1bar7d.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332762
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const result: number[] = [];\n  let j = 0;\n  for (let i = 0; i < l1.length;\
    \ i++) {\n    while (j < l2.length && l2[j] === l1[i]) {\n      j++;\n    }\n\
    \    if (j === l2.length) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpj_95xfjc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpj_95xfjc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const common:\
    \ number[] = [];\n  set1.forEach((val) => {\n    if (set2.has(val)) {\n      common.push(val);\n\
    \      set2.delete(val);\n    }\n  });\n  set2.forEach((val) => {\n    if (set1.has(val))\
    \ {\n      common.push(val);\n      set1.delete(val);\n    }\n  });\n  return\
    \ common;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk1p2gm7k.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk1p2gm7k.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332768
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  const hash: any = {};\n  for (let i = 0; i <\
    \ l1.length; i++) {\n    const val = l1[i];\n    if (!hash[val]) {\n      l.push(val);\n\
    \      hash[val] = true;\n    }\n  }\n  for (let i = 0; i < l2.length; i++) {\n\
    \    const val = l2[i];\n    if (!hash[val]) {\n      l.push(val);\n      hash[val]\
    \ = true;\n    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp5bdpjca_.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5bdpjca_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332768
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    if\
    \ (l2.indexOf(l1[i]) === -1) {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp71t5pzhx.js:18:12)\n    at Object.<anonymous> (/tmp/tmp71t5pzhx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332759
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found = false;\n    for (let j = 0; j < l2.length; j++) {\n      if (l1[i] ===\
    \ l2[j]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found)\
    \ {\n      l.push(l1[i]);\n    }\n  }\n  return l;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi_ax_w87.ts(12,9): error TS2588: Cannot assign to ''found''
    because it is a constant.

    '
  timestamp: 1660332758
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const l: number[] = [];\n  for (let i = 0; i < l1.length; i++) {\n    const\
    \ found: boolean = l2.indexOf(l1[i]) !== -1;\n    if (!found) {\n      l.push(l1[i]);\n\
    \    }\n  }\n  return l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpj8sjsxuq.js:19:12)\n    at Object.<anonymous> (/tmp/tmpj8sjsxuq.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660332768

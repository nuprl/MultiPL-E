completions:
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n   \
  \ }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) return 0;\n  \n  let sum = 0;\n  for (let i = 0; i < lst.length;\
  \ i++) {\n    if (lst[i] % 2 != 0) sum += lst[i] * lst[i];\n  }\n  return sum;\n\
  }\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    var sum = 0\n    for (var\
  \ i = 0; i <lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    var sum = 0;\n    for\
  \ (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) return 0;\n    let sum = 0;\n    for (let i = 0; i < lst.length;\
  \ ++i) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i]\
  \ * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n</code>\n<|/ a tags=javascript,typescript\
  \ |>\n<| c |>\n`let sum = 0` should be `let sum = 0`\n<|/ c |>\n<| c |>\nThanks,\
  \ fixed it.\n<|/ c |>\n<| a dscore=0 |>\n<code>"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) return 0;\n    var sum = 0;\n    for (var i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] % 2 != 0) sum += lst[i] * lst[i];\n    }\n    return\
  \ sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 === 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    var sum = 0\n    for\
  \ (var i of lst) {\n        if (i % 2 === 1) {\n            sum += i\n        }\n\
  \    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    var sum = 0\n    for\
  \ (var i = 0; i <lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n          \
  \  sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    var sum = 0\n    for (var\
  \ i of lst) {\n        if (i % 2 != 0) {\n            sum += i\n        }\n    }\n\
  \    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i]\
  \ * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i];\n        }\n    }\n    return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n \
  \   sum += lst[i] * lst[i];\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i];\n    } else\
  \ {\n      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) return 0;\n    var sum = 0;\n    for (var i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] % 2 == 1) sum += lst[i] * lst[i];\n    }\n    return\
  \ sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n   \
  \ }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i]\
  \ * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    var sum = 0\n    for (var\
  \ i of lst) {\n        if (i % 2 != 0) {\n            sum += i\n        }\n    }\n\
  \    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n</code>\n<|/ a |>\n<| c |>\nThis\
  \ code doesn't work. `double_the_difference([9, -2]) == 81` but `double_the_difference([9,\
  \ -2]) == 81` should be `double_the_difference([9, -2]) == 81`\n<|/ c |>\n<| c |>\n\
  I fixed the bug, thanks for pointing it out!\n<|/ c |>\n<| a dscore=0 |>\n<code>"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !=\
  \ 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    var sum = 0\n    for (var\
  \ i of lst) {\n        if (i % 2 != 0) {\n            sum += i\n        }\n    }\n\
  \    return sum\n}\n</code>\n<|/ a tags=typescript,javascript |>\n<| a dscore=0\
  \ |>\n<code>"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  return lst.reduce((acc, val) =>\
  \ {\n    if (val % 2 === 0) {\n      return acc + val;\n    }\n    return acc;\n\
  \  }, 0);\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) return 0;\n  let sum = 0;\n  for (let i = 0; i < lst.length;\
  \ i++) {\n    if (lst[i] % 2 != 0) sum += lst[i] * lst[i];\n  }\n  return sum;\n\
  }\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 === 1) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0;\n    }\n    var sum = 0;\n    for\
  \ (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 === 1) {\n        \
  \    sum += lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) return 0;\n  let sum = 0;\n  for (let i = 0; i < lst.length;\
  \ i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return\
  \ sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n</code>\n<|/ a dscore=0 |>\n<|\
  \ c |>\nThis does not provide an answer to the question. To critique or request\
  \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859024)\n\
  <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
  \ calculate the sum of squares of numbers that are odd. He also asked how to calculate\
  \ the sum of squares of numbers that are odd. He also asked how to calculate the\
  \ sum of squares of numbers that are odd. He also asked how to calculate the sum\
  \ of squares of numbers that are odd. He also asked how to calculate the sum of\
  \ squares of numbers that are odd. He also asked how to calculate the sum of squares\
  \ of numbers that are odd. He also asked how to calculate the sum of squares of\
  \ numbers that are odd. He also asked how to calculate the sum of squares of numbers\
  \ that are odd. He also asked how to calculate the sum of squares of numbers that\
  \ are odd. He also asked how to calculate the sum of squares of numbers that are\
  \ odd. He also asked how to calculate the sum of squares of numbers that are odd.\
  \ He also asked how to calculate the sum of squares of numbers that are odd. He\
  \ also asked how to calculate the sum of squares of numbers that are odd. He also\
  \ asked how to calculate the sum of squares of numbers that are odd. He also asked\
  \ how to calculate the sum of squares of numbers that are odd. He also asked how\
  \ to calculate the sum of squares of numbers that are odd. He also asked how to\
  \ calculate the sum of squares of numbers that are odd. He also asked how to calculate\
  \ the sum of squares of numbers that are odd. He also asked how to calculate the\
  \ sum of squares of numbers that are odd. He also asked how to calculate the sum\
  \ of squares of numbers that are odd. He also asked how to calculate the sum of\
  \ squares of numbers that are odd. He also asked how to calculate the sum of squares\
  \ of numbers that are odd. He also asked how to calculate the sum of squares of\
  \ numbers that are odd. He also asked how to calculate the sum of squares of numbers\
  \ that are odd. He also asked how to calculate the sum of squares of numbers that\
  \ are odd. He also asked how to calculate the sum of squares of numbers that are\
  \ odd. He also asked how to calculate the sum of squares of numbers that are odd.\
  \ He also asked how to calculate the sum of squares of numbers that are odd. "
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] *\
  \ lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) return 0;\n    var sum = 0;\n    for (var i = 0; i < (lst.length\
  \ - 1); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,typescript\
  \ |>\n<| a tags=javascript,typescript |>\n<code>"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    if (lst.length == 0) return 0;\n    let sum = 0;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] % 2 != 0) sum += lst[i] * lst[i];\n    }\n    return\
  \ sum;\n}\n</code>\n<|/ a tags=typescript,javascript |>\n<| c |>\nThis does not\
  \ answer the question. OP wants to know how to use `reduce` instead of `forEach`.\n\
  <|/ c |>\n<| c |>\nI see your point. I've edited my answer to include a solution\
  \ that uses `reduce`.\n<|/ c |>\n<| c |>\nI see your point. I've edited my answer\
  \ to include a solution that uses `reduce`.\n<|/ c |>\n<| c |>\nI see your point.\
  \ I've edited my answer to include a solution that uses `reduce`.\n<|/ c |>\n<|\
  \ c |>\nI see your point. I've edited my answer to include a solution that uses\
  \ `reduce`.\n<|/ c |>\n<| a tags=typescript,javascript |>\nYou can use reduce to\
  \ sum all the odd numbers in the array:\n\n<code>\nconst arr = [1, 2, 3, 4, 5];\n\
  \nconst result = arr.reduce((acc, curr) => {\n  if (curr % 2 === 1) acc += curr;\n\
  \  return acc;\n}, 0);\n\nconsole.log(result);</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
  \ |>\n<code>"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n   \
  \ }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n</code>\n<|/ a |>\n<| a\
  \ dscore=0 |>\n<code>"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i]\
  \ * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) return 0;\n    var sum = 0;\n    for (var i = 0; i < (lst.length\
  \ - 1); i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,typescript\
  \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or request\
  \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/29874158)\n\
  <|/ c |>\n<| c |>\nI added an explanation to the answer.\n<|/ c |>\n<| c |>\nThis\
  \ does not provide an answer to the question. To critique or request clarification\
  \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/29874158)\n\
  <|/ c |>\n<| c |>\nI added an explanation to the answer.\n<|/ c |>\n<| c |>\nThis\
  \ does not provide an answer to the question. To critique or request clarification\
  \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/29874158)\n\
  <|/ c |>\n<| a dscore=0 |>\n<code>"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 === 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i]\
  \ * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] *\
  \ lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n</code>\n<|/ a dscore=0 |>\n<|\
  \ a |>\n<code>"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] *\
  \ lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i]\
  \ * lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 === 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0)\n    return 0;\n  var sum = 0;\n  for (var i = 0; i != lst.length;\
  \ ++i) {\n    if (lst[i] % 2 == 1)\n      sum += lst[i];\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 === 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i];\n  \
  \  }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    var sum = 0\n    for\
  \ (var i = 0; i <lst.length; i++) {\n        if (lst[i] % 2 === 1) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n</code>\n<|/ a tags=javascript\
  \ |>\n<| a |>\n<code>"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0;\n    }\n    let sum = 0;\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n    if\
  \ (lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length == 0) {\n        return 0\n    }\n    let sum = 0\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n            sum\
  \ += lst[i]\n        }\n    }\n    return sum\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0) {\n        \
  \    sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  \n  let sum = 0;\n  for (let i\
  \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      continue;\n    }\n \
  \   sum += lst[i] * lst[i];\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i];\n   \
  \ }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    let sum = 0\n    for\
  \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0) {\n         \
  \   sum += lst[i]\n        }\n    }\n    return sum\n}\n"
- "  if (lst.length == 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 != 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      sum += lst[i] * lst[i];\n\
  \    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    if (lst.length === 0) {\n        return 0\n    }\n    var sum = 0\n    for\
  \ (var i of lst) {\n        if (i % 2 !== 0) {\n            sum += i\n        }\n\
  \    }\n    return sum\n}\n"
- "    if (lst.length == 0)\n        return 0;\n    let sum = 0;\n    for (let i =\
  \ 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1)\n            sum += lst[i];\n\
  \    }\n    return sum;\n}\n"
- "  if (lst.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0;\
  \ i < lst.length; i++) {\n    if (lst[i] % 2 !== 0) {\n      sum += lst[i] * lst[i];\n\
  \    }\n  }\n  return sum;\n}\n"
language: ts
name: HumanEval_151_double_the_difference
prompt: "//Given a list of numbers, return the sum of squares of the numbers\n// in\
  \ the list that are odd. Ignore numbers that are negative or not integers.\n// double_the_difference([1,\
  \ 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n\
  // double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
  // If the input list is empty, return 0.\nfunction double_the_difference(lst: number[]):\
  \ number {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
  \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
  \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
  \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
  \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"

name: HumanEval_80_is_happy
language: humaneval_to_typescript.py
prompt: "//You are given a string s.\n// Your task is to check if the string is happy\
  \ or not.\n// A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n// For example:\n// is_happy(a) => False\n// is_happy(aa)\
  \ => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n// is_happy(adb)\
  \ => True\n// is_happy(xyy) => False\nfunction is_happy(s: string): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_happy;\n  assert.deepEqual(candidate(\"a\"),false);\n\
  \  assert.deepEqual(candidate(\"aa\"),false);\n  assert.deepEqual(candidate(\"abcd\"\
  ),true);\n  assert.deepEqual(candidate(\"aabb\"),false);\n  assert.deepEqual(candidate(\"\
  adb\"),true);\n  assert.deepEqual(candidate(\"xyy\"),false);\n  assert.deepEqual(candidate(\"\
  iopaxpoi\"),true);\n  assert.deepEqual(candidate(\"iopaxioi\"),false);\n}\n\ntest();"
completions: ["  if (s.length < 3) {\n    return false;\n  }\n  for (let i = 0; i\
    \ < s.length; i += 1) {\n    if (s.charAt(i) !== s.charAt(i + 1)) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (s.length < 3) {\n    return\
    \ false;\n  }\n  for (let i = 0; i < s.length; i += 1) {\n    if (s.charAt(i)\
    \ !== s.charAt(i + 1)) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    \nconsole.log(is_happy(\"a\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"\
    abcd\"));\nconsole.log(is_happy(\"aabb\"));\nconsole.log(is_happy(\"adb\"));\n\
    console.log(is_happy(\"xyy\"));</code>\n<|/ a tags=javascript,string |>\n<| a\
    \ dscore=0 |>\n<code>", "  if (s.length < 3) return false\n  const chars = new\
    \ Set()\n  for (let i = 0; i < s.length; i += 1) {\n    chars.add(s[i])\n  }\n\
    \  return chars.size === s.length && chars.size === 3 && chars.size === chars.size\
    \ && chars.size === chars.size\n}\n", "  if (s.length < 3) return false\n  for\
    \ (let i = 0; i < s.length - 3; i++) {\n    if (s.charAt(i) !== s.charAt(i + 1)\
    \ &&\n        s.charAt(i) !== s.charAt(i + 2) &&\n        s.charAt(i) !== s.charAt(i\
    \ + 3)) {\n      return false\n    }\n  }\n  return true\n}\n", "  if (s.length\
    \ < 3) return false\n  for (let i = 0; i < s.length; i += 1) {\n    if (s.charAt(i)\
    \ !== s.charAt(i + 1)) return false\n  }\n  return true\n}\n", "  if (s.length\
    \ < 3 || s.length % 3 !== 0) {\n    return false;\n  }\n  for (let i = 0; i <\
    \ s.length; i += 1) {\n    if (s.charAt(i) !== s.charAt(i + 1)) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (s.length < 3 || s.length %\
    \ 3 !== 0) {\n    return false;\n  }\n  for (let i = 0; i < s.length; i += 1)\
    \ {\n    if (s.charAt(i) !== s.charAt(i + 1)) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (s.length < 3 || s.length % 3 != 0) {\n    return\
    \ false;\n  }\n  for (let i = 0; i < s.length; i += 3) {\n    if (s.charAt(i)\
    \ != s.charAt(i + 1) || s.charAt(i) != s.charAt(i + 2)) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (s.length < 3) return false\n  for (let\
    \ i = 0; i < s.length - 2; i++) {\n    if (s[i] !== s[i + 1]) return false\n \
    \ }\n  return true\n}\n", "  if (s.length < 3 || s.length % 3 !== 0) {\n    return\
    \ false;\n  }\n  for (let i = 0; i < s.length; i += 1) {\n    if (s.charAt(i)\
    \ !== s.charAt(i + 1)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (s.length < 3) return false;\n  for (let i = 0; i < s.length - 3; i++) {\n\
    \    if (s.charAt(i) !== s.charAt(i + 1) || s.charAt(i) !== s.charAt(i + 2) ||\
    \ s.charAt(i) !== s.charAt(i + 3)) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (s.length < 3) {\n    return false;\n  }\n  for (let i =\
    \ 0; i < s.length; i += 1) {\n    if (s.charAt(i) !== s.charAt(i + 1)) {\n   \
    \   return false;\n    }\n  }\n  return true;\n}\n", "  if (s.length < 3) {\n\
    \    return false;\n  }\n  for (let i = 0; i < s.length; i += 1) {\n    if (s.charAt(i)\
    \ !== s.charAt(i + 1)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (s.length < 3) return false\n  for (let i = 0; i < s.length; i += 1) {\n \
    \   if (s.charAt(i) !== s.charAt(i + 1)) return false\n  }\n  return true\n}\n",
  "  if (s.length < 3) {\n    return false;\n  }\n  for (let i = 0; i < s.length;\
    \ i += 1) {\n    if (s.charAt(i) !== s.charAt(i + 1)) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (s.length < 3) return false;\n  for (let\
    \ i = 0; i < s.length; i += 1) {\n    if (s.charAt(i) !== s.charAt(i + 1)) return\
    \ false;\n  }\n  return true;\n}\n", "  if (s.length < 3) {\n    return false;\n\
    \  }\n  for (let i = 0; i < s.length; i += 1) {\n    if (s[i] !== s[i + 1]) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  if (s.length < 3) {\n\
    \    return false;\n  }\n  for (let i = 0; i < s.length - 2; i++) {\n    if (s[i]\
    \ !== s[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if\
    \ (s.length < 3) return false\n  for (let i = 0; i < s.length; i += 1) {\n   \
    \ if (s[i] !== s[i + 1]) return false\n  }\n  return true\n}\n", "    if (s.length\
    \ < 3) return false\n    let last: number = 0\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] !== s[last]) {\n            return false\n        }\n\
    \        last = i\n    }\n    return true\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

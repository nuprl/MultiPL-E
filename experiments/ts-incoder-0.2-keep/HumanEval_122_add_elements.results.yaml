language: ts
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const len = arr.length;\n  if (len < k) {\n    return 0;\n  }\n  let sum = 0;\n\
    \  for (let i = k; i < len; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n448\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpdeuc7xm_.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdeuc7xm_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 448,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n\
    \  }\n  return result.sort((a, b) => a - b).reduce((a, b) => a + b, 0);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp9ygmh4be.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ygmh4be.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n\
    \  return result.sort((a, b) => a - b).reduce((a, b) => a + b, 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpqy3r0xz0.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqy3r0xz0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n\
    \  return arr.reduce((acc, val) => acc + val, 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmptxqnpozl.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxqnpozl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n\
    \  return arr.reduce((acc, val) => acc + val, 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmptxqnpozl.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxqnpozl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n\
    \  return arr.reduce((a, b) => a + b, 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpegvf2e6t.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpegvf2e6t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const len = arr.length;\n  if (k > len) {\n    return 0;\n  }\n  let sum = 0;\n\
    \  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i\
    \ < len; i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmptxry88jh.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxry88jh.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (arr.length === 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return\
    \ arr.reduce((a, b) => a + b);\n  }\n  const first = arr.slice(0, k);\n  const\
    \ second = arr.slice(k, arr.length);\n  return first.reduce((a, b) => a + b) +\
    \ second.reduce((a, b) => a + b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add_elements;\n\
    \  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n \
    \ assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpkjb7w110.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkjb7w110.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (arr.length === 0) {\n    return 0;\n  }\n  if (k === 1) {\n    return arr[0];\n\
    \  }\n  if (k === 2) {\n    return arr[0] + arr[1];\n  }\n  let sum = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return sum + add_elements(arr.slice(k),\
    \ k - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpzf2tdnwv.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzf2tdnwv.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  let sum = 0;\n  for (let i = 0; i < k; i++)\
    \ {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length; i++) {\n    sum\
    \ += arr[i];\n    if (sum > 9) {\n      result.push(sum - 10);\n      sum = 0;\n\
    \    }\n  }\n  return result.length === 0 ? 0 : result.reduce((a, b) => a + b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpsujafqxs.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsujafqxs.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (arr.length === 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return\
    \ arr[0];\n  }\n  let sum = 0;\n  for (let i = 1; i <= k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpxe7_f0m9.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxe7_f0m9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k > arr.length) return 0;\n  if (k === 0) return arr[0];\n  if (k === 1)\
    \ return arr[0] + arr[1];\n  let sum = 0;\n  for (let i = k; i < arr.length; i++)\
    \ {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n448\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpd_ejixbf.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_ejixbf.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 448,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  for (let i = 0; i < k; i++) {\n    result.push(arr[i]);\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    result.push(arr[i]);\n  }\n\
    \  return result.sort((a, b) => a - b).reduce((a, b) => a + b, 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3,\
    \ 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpqy3r0xz0.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqy3r0xz0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const len = arr.length;\n  if (len < k) {\n    return 0;\n  }\n  let sum = 0;\n\
    \  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  for (let i = k; i\
    \ < len; i++) {\n    sum += arr[i] - 10;\n  }\n  return sum;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9],\
    \ 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n\
    \  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmpuuh145pw.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuuh145pw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  let sum = 0;\n  for (let i = 0; i < k; i++)\
    \ {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length; i++) {\n    sum\
    \ += arr[i];\n    if (sum > 9) {\n      result.push(sum - 10);\n      sum = 0;\n\
    \    }\n  }\n  return result.length === 0 ? 0 : result.reduce((a, b) => a + b,\
    \ 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp7q46wtzi.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q46wtzi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (arr.length === 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return\
    \ arr[0];\n  }\n  let sum = 0;\n  for (let i = 0; i <= k; i++) {\n    sum += arr[i];\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n37\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpsp_0ysk4.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsp_0ysk4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 37,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const result: number[] = [];\n  let sum = 0;\n  for (let i = 0; i < k; i++)\
    \ {\n    sum += arr[i];\n  }\n  for (let i = k; i < arr.length; i++) {\n    result.push(arr[i]\
    \ - sum);\n    sum = 0;\n  }\n  return result.reduce((a, b) => a + b);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n452\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp_2hezdau.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_2hezdau.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 452,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (arr.length < k) {\n    return 0\n  }\n  let sum = 0\n  for (let i = 0; i\
    \ < k; i++) {\n    sum += arr[i]\n  }\n  return sum\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpcm713dn8.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcm713dn8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k === 0) return 0;\n  if (k === 1) return arr[0];\n  if (k === 2) return\
    \ arr[0] + arr[1];\n  if (k === 3) return arr[0] + arr[1] + arr[2];\n  if (k ===\
    \ 4) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 6) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 7) return arr[0] + arr[1] +\
    \ arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 8) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if (k === 9)\
    \ return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]\
    \ + arr[8];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpm19hx7tf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm19hx7tf.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ const maxLen = Math.min(k, arr.length);\n  let sum = 0;\n  for (let i = 0; i\
    \ < maxLen; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp9a5f94fu.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9a5f94fu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (arr.length === 0) {\n    return 0;\n  }\n  if (k > arr.length) {\n    return\
    \ arr[0];\n  }\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n\
    \  }\n  for (let i = k; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n444\n\nshould\
    \ loosely deep-equal\n\n-4\n    at test (/tmp/tmp436qqv2d.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp436qqv2d.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 444,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ if (k > arr.length) return 0;\n  if (k === 0) return arr[0];\n  if (k === 1)\
    \ return arr[0] + arr[1];\n  if (k === 2) return arr[0] + arr[1] + arr[2];\n \
    \ if (k === 3) return arr[0] + arr[1] + arr[2] + arr[3];\n  if (k === 4) return\
    \ arr[0] + arr[1] + arr[2] + arr[3] + arr[4];\n  if (k === 5) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5];\n  if (k === 6) return arr[0] +\
    \ arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6];\n  if (k === 7) return\
    \ arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7];\n  if\
    \ (k === 8) return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\
    \ + arr[7] + arr[8];\n  if (k === 9) return arr[0] + arr[1] + arr[2] + arr[3]\
    \ + arr[4] + arr[5] + arr[6] + arr[7] + arr[8] + arr[9];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
    \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n37\n\nshould loosely\
    \ deep-equal\n\n-4\n    at test (/tmp/tmpfc37_fne.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfc37_fne.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 37,\n  expected:\
    \ -4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747563
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422
- exit_code: 1
  program: "//Given a non-empty array of integers arr and an integer k, return\n//\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements(arr: number[], k: number): number {\n \
    \ let sum = 0;\n  for (let i = 0; i < k; i++) {\n    sum += arr[i];\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5,\
    \ 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n232\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6jcezdo5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6jcezdo5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 232,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738422

name: HumanEval_36_fizz_buzz
language: humaneval_to_typescript.py
prompt: "//Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
  // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
  \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
  \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
  \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
  }\n\ntest();"
completions: ["  let count = 0;\n  for (let i = 1; i < n; i++) {\n    if (i % 11 ===\
    \ 0 || i % 13 === 0) {\n      count++;\n    }\n  }\n  return count;\n}\n", " \
    \ let count = 0;\n  while (n % 11 === 0 || n % 13 === 0) {\n    count++;\n   \
    \ n /= 11;\n  }\n  return count;\n}\n", "  if (n % 11 === 0 || n % 13 === 0) {\n\
    \    return n\n  }\n  return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n}\n", "  if\
    \ (n < 0) return 0;\n  if (n < 10) return 1;\n  if (n < 100) return 2;\n  if (n\
    \ < 1000) return 3;\n  if (n < 10000) return 4;\n  if (n < 100000) return 5;\n\
    \  if (n < 1000000) return 6;\n  if (n < 10000000) return 7;\n  if (n < 100000000)\
    \ return 8;\n  if (n < 1000000000) return 9;\n  if (n < 10000000000) return 10;\n\
    \  if (n < 100000000000) return 11;\n  if (n < 1000000000000) return 12;\n  if\
    \ (n < 10000000000000) return 13;\n  if (n < 100000000000000) return 14;\n  if\
    \ (n < 1000000000000000) return 15;\n  if (n < 10000000000000000) return 16;\n\
    \  if (n < 100000000000000000) return 17;\n  if (n < 1000000000000000000) return\
    \ 18;\n  return 19;\n}\n", "  if (n < 11 || n % 11 === 0) return 0;\n  if (n <\
    \ 13) return 1;\n  if (n < 17) return 2;\n  if (n < 19) return 3;\n  if (n < 23)\
    \ return 4;\n  if (n < 29) return 5;\n  if (n < 31) return 6;\n  if (n < 37) return\
    \ 7;\n  if (n < 41) return 8;\n  if (n < 47) return 9;\n  if (n < 53) return 10;\n\
    \  if (n < 59) return 11;\n  if (n < 63) return 12;\n  if (n < 67) return 13;\n\
    \  if (n < 71) return 14;\n  if (n < 77) return 15;\n  if (n < 83) return 16;\n\
    \  if (n < 89) return 17;\n  if (n < 97) return 18;\n  if (n < 101) return 19;\n\
    \  if (n < 107) return 20;\n  if (n < 113) return 21;\n  if (n < 119) return 22;\n\
    \  if (n < 127) return 23;\n  if (n < 131) return 24;\n  if (n < 137) return 25;\n\
    \  if (n < 143) return 26;\n  if (n < 149) return 27;\n  if (n < 151) return 28;\n\
    \  if (n < 157) return 29;\n  if (n < 163) return 30;\n  if (n < 169) return 31;\n\
    \  if (n < 171) return 32;\n  if (n < 177) return 33;\n  if (n < 181) return 34;\n\
    \  if (n < 187) return 35;\n  if (n < 191) return 36;\n  if (n < 197) return 37;\n\
    \  if (n < 203) return 38;\n  if (n < 209) return 39;\n  if (n < 215) return 40;\n\
    \  if (n < 221) return 41;\n  if (n < 227) return 42;\n  if (n < 233) return 43;\n\
    \  if (n < 241) return 44;\n  if (n < 247) return 45;\n  if (n < 253) return 46;\n\
    \  if (n < 259) return 47;\n  if (n < 261) return 48;\n  if (n < 267) return 49;\n\
    \  if (n < 273) return 50;\n  if (n < 279) return 51;\n  if (n < 281) return 52;\n\
    \  if (n < 287) return 53;\n  if (n < 293) return 54;\n  if (n < 299) return 55;\n\
    \  if (n < 301) return 56;\n  if (n < 307) return 57;\n  if (n < 311) return 58;\n\
    \  if (n < 317) return 59;\n  if (n < 321) return 60;\n  if (n < 327) return 61;\n\
    \  if (n < 333) return 62;\n  if (n < 339) return 63;\n  if (n < 341) return 64;\n\
    \  if (n < 347) return 65;\n  if (n < 353) return 66;\n  if (n < 359) return 67;\n\
    \  if (n < 361) return 68;\n  if (n < 367) return 69;\n  if (n < 373) return 70;\n\
    \  if (n < 379) return 7", "  if (n % 11 === 0 || n % 13 === 0) {\n    return\
    \ 0;\n  }\n  return 1;\n}\n", "  let count = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (i % 11 === 0 || i % 13 === 0) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "  if (n < 11 || n > 13) {\n    return 0;\n  }\n  if (n === 11\
    \ || n === 13) {\n    return 1;\n  }\n  return fizz_buzz(n % 11) + fizz_buzz(n\
    \ % 13);\n}\n", "  let count = 0;\n  while (n >= 11 || n >= 13) {\n    if (n %\
    \ 11 === 0 || n % 13 === 0) {\n      count++;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return count;\n}\n", "  if (n < 0) return 0;\n  if (n < 11) return 1;\n\
    \  if (n < 13) return 2;\n  if (n % 11 === 0) return 3;\n  if (n % 13 === 0) return\
    \ 4;\n  return 5;\n}\n", "  let count = 0;\n  while (n % 11 === 0 || n % 13 ===\
    \ 0) {\n    count++;\n    n /= 11;\n  }\n  return count;\n}\n", "  if (n < 11\
    \ || n > 13) {\n    return 0;\n  }\n\n  return fizz_buzz_iterative(n);\n}\n",
  "  if (n < 11 || n % 11 === 0) return 0;\n  if (n < 13) return 1;\n  return 2;\n\
    }\n", "  if (n < 0 || n % 11 === 0 || n % 13 === 0) {\n    return 0;\n  }\n  return\
    \ 1;\n}\n", "  if (n < 0) return 0;\n  if (n < 11) return 1;\n  if (n < 13) return\
    \ 2;\n  if (n < 17) return 3;\n  if (n < 19) return 4;\n  if (n < 23) return 5;\n\
    \  if (n < 27) return 6;\n  if (n < 31) return 7;\n  if (n < 37) return 8;\n \
    \ if (n < 41) return 9;\n  if (n < 47) return 10;\n  if (n < 53) return 11;\n\
    \  if (n < 59) return 12;\n  if (n < 63) return 13;\n  if (n < 67) return 14;\n\
    \  if (n < 71) return 15;\n  if (n < 77) return 16;\n  if (n < 83) return 17;\n\
    \  if (n < 89) return 18;\n  if (n < 97) return 19;\n  if (n < 101) return 20;\n\
    \  if (n < 107) return 21;\n  if (n < 113) return 22;\n  if (n < 119) return 23;\n\
    \  if (n < 127) return 24;\n  return 25;\n}\n", "  let count = 0;\n  while (n\
    \ % 11 === 0 || n % 13 === 0) {\n    count++;\n    n /= 11;\n  }\n  return count;\n\
    }\n", "  if (n < 11 || n > 13) {\n    return 0;\n  }\n  if (n === 11 || n ===\
    \ 13) {\n    return 1;\n  }\n  return fizz_buzz(n - 11);\n}\n", "  let count =\
    \ 0;\n  while (n % 11 == 0 || n % 13 == 0) {\n    count++;\n    n /= 11;\n  }\n\
    \  return count;\n}\n", "  if (n < 11 || n > 13) {\n    return 0;\n  }\n  return\
    \ Math.ceil(Math.log10(n) / Math.log10(11));\n}\n", "  let count = 0;\n  while\
    \ (n >= 11 || n >= 13) {\n    if (n % 11 === 0 || n % 13 === 0) {\n      count++;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

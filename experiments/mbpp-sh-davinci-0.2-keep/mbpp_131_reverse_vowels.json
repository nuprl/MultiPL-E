{
  "name": "mbpp_131_reverse_vowels",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to reverse only the vowels of a given string (where y is not a vowel).\n#\n# $1 is a string\nreverse_vowels() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    reverse_vowels \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Python\") = \"Python\" ]]\n    [[ $(candidate \"USA\") = \"ASU\" ]]\n    [[ $(candidate \"ab\") = \"ab\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    echo \"$1\" | sed 's/\\([aeiou]\\)/\\1\\n/ig' | tac | tr -d '\\n'",
    "    local str=\"$1\"\n    local vowels=\"$(echo \"$str\" | grep -o '[aeiouAEIOU]' | rev)\"\n    local i=0\n    echo \"$str\" | sed 's/[aeiouAEIOU]/\\n/g' | sed \"s/^/$vowels/g\" | sed 's/\\n/&/g'",
    "    local string=\"$1\"\n    local vowels=\"aeiouAEIOU\"\n    local new_string=\"\"\n    local vowel_indexes=()\n    local vowel_index=0\n    local i=0\n    local j=0\n    local char=''\n\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ $vowels =~ $char ]]; then\n            vowel_indexes[$vowel_index]=$i\n            (( vowel_index++ ))\n        fi\n    done\n\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ $vowels =~ $char ]]; then\n            new_string+=\"${string:${vowel_indexes[$(( ${#vowel_indexes[@]} - 1 - j ))]}:1}\"\n            (( j++ ))\n        else\n            new_string+=\"$char\"\n        fi\n    done\n\n    echo \"$new_string\"",
    "    local string=\"$1\"\n    local vowels=\"$(echo \"$string\" | grep -o '[aeiouAEIOU]' | tr -d '\\n')\"\n    local reversed_vowels=\"$(echo \"$vowels\" | rev)\"\n    local i=0\n    local new_string=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [aeiouAEIOU] ]]; then\n            new_string+=\"${reversed_vowels:0:1}\"\n            reversed_vowels=\"${reversed_vowels:1}\"\n        else\n            new_string+=\"$char\"\n        fi\n    done\n    echo \"$new_string\"",
    "    echo $1 | grep -o '[aeiouAEIOU]' | tac | tr -d '\\n'\n    echo $1 | grep -o '[^aeiouAEIOU]' | tr -d '\\n'",
    "    local string=$1\n    local vowels=\"aeiouAEIOU\"\n    local -a vowels_array\n    local -a string_array\n    local -a result_array\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i length=0\n    local -i vowels_length=0\n    local -i string_length=0\n    local -i result_length=0\n    local -i vowels_index=0\n    local -i string_index=0\n    local -i result_index=0\n    local -i vowels_count=0\n    local -i string_count=0\n    local -i result_count=0\n    local -i vowels_index_array=0\n   ",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    # Python code to reverse vowels\n    python -c \"\nimport sys\n\nvowels = 'aeiouAEIOU'\n\ndef reverse_vowels(s):\n    s = list(s)\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] in vowels and s[j] in vowels:\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n        elif s[i] in vowels:\n            j -= 1\n        elif s[j] in vowels:\n            i += 1\n        else:\n            i += 1\n            j -= 1\n    return ''.join(s)\n\nprint(reverse_vowels(sys.argv[1]))\n\" \"$1\"",
    "    echo \"$1\" | sed -e 's/\\([aeiou]\\)/\\1\\n/ig' -e 's/[^aeiou\\n]//ig' | tac | tr -d '\\n'",
    "  echo \"$1\" | rev | tr -d '\\n' | sed 's/[^aeiouAEIOU]/\\n&/g' | rev | tr -d '\\n' | sed 's/[aeiouAEIOU]/\\n&/g' | rev | tr -d '\\n'",
    "    echo \"$1\" | sed -r 's/([aeiou])/\\1\\n/ig' | tac | tr -d '\\n'",
    "    echo $1 | sed 's/\\(.\\)/\\1\\n/g' | grep -i '[aeiou]' | tac | tr -d '\\n'",
    "    local string=\"$1\"\n    local vowels=\"aeiouAEIOU\"\n    local -a vowels_array=()\n    local -a string_array=()\n    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    # Split the string into an array\n    for (( i=0; i<${#string}; i++ )); do\n        string_array[i]=\"${string:i:1}\"\n    done\n\n    # Split the vowels into an array\n    for (( i=0; i<${#vowels}; i++ )); do\n        vowels_array[i]=\"${vowels:i:1}\"\n    done\n\n    # Reverse the vowels\n    for (( i=0; i<${#string_array[@]}; i++ )); do\n        for (( j=0; j<${#vowels_array[@]}; j++ )); do\n            if [[ \"${string_array[i]}\" == \"${vowels_array[j]}\" ]]; then\n                result_array[k]=\"${string_array[i]}\"\n                k=$((k+1))\n            fi\n        done\n    done\n\n    # Reverse the vowels\n    for (( i=${#result_array[@]}-1; i>=0; i-- )); do\n        result_array[i]=\"${result_array[l]}\"\n        l=$((l+1))\n    done\n\n    # Replace the vowels in the string\n    for (( i=0; i<${#string_array[@]}; i++ )); do\n        for (( j=0; j<${#vowels_array[@]}; j++ )); do\n            if [[ \"${string_array[i]}\" == \"${vowels_array[j]}\" ]]; then\n                string_array[i]=\"${result_array[k]}\"\n                k=$((k+1))\n            fi\n        done\n    done\n\n    # Print the result\n    for (( i=0; i<${#string_array[@]}; i++ )); do\n        printf \"%s\" \"${",
    "    local string=$1\n    local vowels=`echo $string | grep -o '[aeiouAEIOU]'`\n    local vowels_reversed=`echo $vowels | rev`\n    local i=0\n    local result=\"\"\n    for (( j=0; j<${#string}; j++ )); do\n        if [[ ${string:$j:1} =~ [aeiouAEIOU] ]]; then\n            result+=${vowels_reversed:$i:1}\n            ((i++))\n        else\n            result+=${string:$j:1}\n        fi\n    done\n    echo $result",
    "  local string=$1\n  local vowels=(a e i o u)\n  local temp_string=''\n  local temp_vowels=''\n  local temp_chars=''\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\n  for ((i=0; i<${#string}; i++)); do\n    if [[ \"${vowels[@]}\" =~ \"${string:$i:1}\" ]]; then\n      temp_vowels=\"${temp_vowels}${string:$i:1}\"\n    else\n      temp_chars=\"${temp_chars}${string:$i:1}\"\n    fi\n  done\n\n  for ((j=0; j<${#string}; j++)); do\n    if [[ \"${vowels[@]}\" =~ \"${string:$j:1}\" ]]; then\n      temp_string=\"${temp_string}${temp_vowels:$(( ${#temp_vowels} - 1 - $k )):1}\"\n      ((k++))\n    else\n      temp_string=\"${temp_string}${temp_chars:$(( ${#temp_chars} - 1 - $l )):1}\"\n      ((l++))\n    fi\n  done\n\n  echo \"${temp_string}\"",
    "    local string=$1\n    local vowels=\"aeiouAEIOU\"\n    local new_string=\"\"\n    local vowel_stack=()\n    local char=\"\"\n\n    for ((i=0; i<${#string}; i++)); do\n        char=${string:$i:1}\n        if [[ $vowels =~ $char ]]; then\n            vowel_stack+=($char)\n        fi\n    done\n\n    for ((i=0; i<${#string}; i++)); do\n        char=${string:$i:1}\n        if [[ $vowels =~ $char ]]; then\n            new_string+=\"${vowel_stack[-1]}\"\n            unset vowel_stack[-1]\n            vowel_stack=(${vowel_stack[@]})\n        else\n            new_string+=$char\n        fi\n    done\n\n    echo $new_string",
    "    echo $1 | sed -e 's/\\(.\\)/\\1\\n/g' | grep -i '[aeiou]' | tac | tr -d '\\n'",
    "    echo \"$1\" | sed -r 's/([aeiou])/\\1\\n/ig' | tac | tr -d '\\n'",
    "    echo \"$1\" | sed -r 's/([aeiou])/\\1\\n/ig' | tac | sed -r 's/([aeiou])/\\1\\n/ig' | paste -d '' - -",
    "    local string=\"$1\"\n    local vowels=\"aeiouAEIOU\"\n    local new_string=\"\"\n    local i\n    local j\n    local c\n    local v\n    local v_index\n    local v_count=0\n\n    # Count the number of vowels in the string\n    for ((i=0; i<${#string}; i++)); do\n        c=\"${string:$i:1}\"\n        if [[ \"$vowels\" =~ \"$c\" ]]; then\n            ((v_count++))\n        fi\n    done\n\n    # Iterate over the string, replacing vowels with the vowels in reverse order\n    for ((i=0; i<${#string}; i++)); do\n        c=\"${string:$i:1}\"\n        if [[ \"$vowels\" =~ \"$c\" ]]; then\n            ((v_count--))\n            v_index=$v_count\n            for ((j=0; j<${#vowels}; j++)); do\n                v=\"${vowels:$j:1}\"\n                if [[ \"$v\" == \"$c\" ]]; then\n                    break\n                fi\n                ((v_index++))\n            done\n            new_string+=\"${vowels:$v_index:1}\"\n        else\n            new_string+=\"$c\"\n        fi\n    done\n\n    echo \"$new_string\"",
    "    local string=$1\n    local vowels=$(echo $string | grep -o \"[aeiouAEIOU]\" | rev)\n    local i=0\n    local new_string=\"\"\n    for (( j=0; j<${#string}; j++ )); do\n        if [[ \"${string:$j:1}\" =~ [aeiouAEIOU] ]]; then\n            new_string+=\"${vowels:$i:1}\"\n            ((i++))\n        else\n            new_string+=\"${string:$j:1}\"\n        fi\n    done\n    echo $new_string"
  ]
}
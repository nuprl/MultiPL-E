{
  "name": "mbpp_90_len_log",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the length of the longest word.\n#\n# $1 is a space-separated list\nlen_log() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    len_log \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python PHP bigdata\") = \"7\" ]]\n    [[ $(candidate \"a ab abc\") = \"3\" ]]\n    [[ $(candidate \"small big tall\") = \"5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local max=0\n    for word in $1; do\n        if [[ ${#word} -gt $max ]]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    longest=0\n    for word in $1; do\n        len=${#word}\n        if [ $len -gt $longest ]; then\n            longest=$len\n        fi\n    done\n    echo $longest",
    "    local max=0\n    for word in $1; do\n        if [ ${#word} -gt $max ]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    longest=0\n    for word in $1; do\n        if [ ${#word} -gt $longest ]; then\n            longest=${#word}\n        fi\n    done\n    echo $longest",
    "    local max=0\n    for word in $1; do\n        if [ ${#word} -gt $max ]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    local longest_word=0\n    for word in $1; do\n        if [[ ${#word} -gt $longest_word ]]; then\n            longest_word=${#word}\n        fi\n    done\n    echo $longest_word",
    "    local max_len=0\n    local len=0\n    for word in $1; do\n        len=${#word}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n        fi\n    done\n    echo $max_len",
    "    echo \"$1\" | tr ' ' '\\n' | sort -n -r -k1 | head -n 1",
    "    local max=0\n    for word in $1; do\n        if [ ${#word} -gt $max ]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    local max_len=0\n    local len=0\n    for word in $1; do\n        len=${#word}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n        fi\n    done\n    echo $max_len",
    "    local max=0\n    for word in $1; do\n        if [[ ${#word} -gt $max ]]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    max=0\n    for word in $1; do\n        if [ ${#word} -gt $max ]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    local max_len=0\n    local word\n    for word in $1; do\n        if [[ ${#word} -gt $max_len ]]; then\n            max_len=${#word}\n        fi\n    done\n    echo $max_len",
    "    echo \"$1\" | tr ' ' '\\n' | wc -L | sort -n | tail -1",
    "  max_len=0\n  for word in $1; do\n    len=${#word}\n    if [ $len -gt $max_len ]; then\n      max_len=$len\n    fi\n  done\n  echo $max_len",
    "    echo \"$1\" | tr ' ' '\\n' | sort -r -n -k1 | head -n1",
    "    max_len=0\n    for word in $1; do\n        len=${#word}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n        fi\n    done\n    echo $max_len",
    "    local max=0\n    for word in $1; do\n        if [[ ${#word} -gt $max ]]; then\n            max=${#word}\n        fi\n    done\n    echo $max",
    "    longest=0\n    for word in $1; do\n        if [ ${#word} -gt $longest ]; then\n            longest=${#word}\n        fi\n    done\n    echo $longest",
    "    max=0\n    for word in $1; do\n        len=${#word}\n        if [ $len -gt $max ]; then\n            max=$len\n        fi\n    done\n    echo $max"
  ]
}
{
  "name": "mbpp_292_find",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find quotient of two numbers (rounded down to the nearest integer).\n#\n# $1 is an integer\n# $2 is an integer\nfind() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\" \"3\") = \"3\" ]]\n    [[ $(candidate \"4\" \"2\") = \"2\" ]]\n    [[ $(candidate \"20\" \"5\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo \"scale=0; $1/$2\" | bc",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $1 / $2 | bc",
    "  echo $(( $1 / $2 ))",
    "    python -c \"print($1//$2)\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $1 $2 | python -c \"print(int(input().split()[0]) // int(input().split()[1]))\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo \"$1 / $2\" | bc -l | cut -d '.' -f1",
    "    echo $(( $1 / $2 ))",
    "\techo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    if [[ $1 -eq 0 || $2 -eq 0 ]]; then\n        echo \"Error: Both arguments must be non-zero\"\n        exit 1\n    fi\n    echo $(( $1 / $2 ))",
    "    python -c \"print(int($1 / $2))\"",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    if [ $# -ne 2 ]\n    then\n        echo \"Usage: $0 <integer> <integer>\"\n        exit 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]\n    then\n        echo \"Error: $1 is not an integer\"\n        exit 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]\n    then\n        echo \"Error: $2 is not an integer\"\n        exit 1\n    fi\n    if [ $2 -eq 0 ]\n    then\n        echo \"Error: $2 is zero\"\n        exit 1\n    fi\n    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $1 / $2 | bc",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    if [ $# -eq 2 ]; then\n        if [ $2 -eq 0 ]; then\n            echo \"Error: division by 0\"\n        else\n            echo $(( $1 / $2 ))\n        fi\n    else\n        echo \"Error: invalid number of arguments\"\n    fi",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    python -c \"print($1//$2)\"",
    "  echo $(( $1 / $2 ))",
    "    python -c \"print($1//$2)\"",
    "  echo $(( $1 / $2 ))",
    "    python -c \"print($1//$2)\"",
    "    echo $1 / $2 | bc",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    python -c \"print(int($1/$2))\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  python -c \"print($1//$2)\"",
    "  if [[ $1 -eq 0 ]]; then\n    echo \"Error: cannot divide by 0\"\n  elif [[ $2 -eq 0 ]]; then\n    echo \"Error: cannot divide by 0\"\n  else\n    echo $(( $1 / $2 ))\n  fi",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $1 / $2 | bc",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    python -c \"print($1//$2)\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    if [ $2 -eq 0 ]; then\n        echo \"Error: cannot divide by zero\"\n        return 1\n    fi\n    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $1 / $2 | bc",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    python3 -c \"print($1//$2)\"",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $1 $2 | python -c \"import sys; print(int(sys.stdin.read().split()[0]) // int(sys.stdin.read().split()[1]))\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $1 $2 | awk '{print int($1/$2)}'",
    "    if [ $2 -eq 0 ]; then\n        echo \"Error: cannot divide by 0\"\n    else\n        echo $(( $1 / $2 ))\n    fi",
    "    echo $(( $1 / $2 ))",
    "    python -c \"print($1//$2)\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    python -c \"print($1 // $2)\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  python -c \"print(int($1/$2))\"",
    "  echo $(( $1 / $2 ))",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <integer> <integer>\"\n        exit 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        exit 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an integer\"\n        exit 1\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"Error: cannot divide by zero\"\n        exit 1\n    fi\n    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    python -c \"print($1 // $2)\"",
    "    python -c \"print($1//$2)\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    python -c \"print($1 // $2)\"",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))"
  ]
}
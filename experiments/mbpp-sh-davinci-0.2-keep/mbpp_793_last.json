{
  "name": "mbpp_793_last",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the last position of an element in a sorted array.\n#\n# $1 is a space-separated list\n# $2 is an integer\nlast() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    last \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\" \"1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 4\" \"1\") = \"2\" ]]\n    [[ $(candidate \"2 3 2 3 6 8 9\" \"3\") = \"3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array\n    local -i i\n    local -i last_pos\n    local -i len\n    local -i target\n    array=($1)\n    target=$2\n    len=${#array[@]}\n    last_pos=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[$i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "    local list=$1\n    local element=$2\n    local i=0\n    local last_index=-1\n    for item in $list; do\n        if [[ $item -eq $element ]]; then\n            last_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_index",
    "    local -a list=($1)\n    local -i len=${#list[@]}\n    local -i i=0\n    local -i last_pos=-1\n    while (( i < len )); do\n        if (( list[i] == 2 )); then\n            last_pos=$i\n        fi\n        (( i++ ))\n    done\n    echo $last_pos",
    "    local -a array\n    local i\n    local element\n    local -i last_position\n    local -i length\n\n    array=($1)\n    element=$2\n    last_position=-1\n    length=${#array[@]}\n\n    for ((i=0; i<length; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            last_position=$i\n        fi\n    done\n\n    echo $last_position",
    "    local -a array\n    local -i i\n    local -i last_pos\n    local -i len\n    local -i target\n\n    array=($1)\n    target=$2\n    len=${#array[@]}\n    last_pos=-1\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[$i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local list=$1\n    local element=$2\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            last_index=$index\n        fi\n        index=$((index+1))\n    done\n    echo $last_index",
    "    local -a array=($1)\n    local -i target=$2\n    local -i start=0\n    local -i end=${#array[@]}\n    local -i mid\n    local -i last_pos=-1\n\n    while ((start < end)); do\n        mid=$(((start + end) / 2))\n        if ((array[mid] > target)); then\n            end=$mid\n        elif ((array[mid] < target)); then\n            start=$((mid + 1))\n        else\n            last_pos=$mid\n            start=$((mid + 1))\n        fi\n    done\n\n    echo $last_pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n    IFS=' ' read -r -a array <<< \"$1\"\n    len=${#array[@]}\n    last_pos=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "    local list=$1\n    local element=$2\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            last_index=$index\n        fi\n        index=$((index+1))\n    done\n    echo $last_index",
    "    local -a array\n    local -i i\n    local -i n\n    local -i m\n    local -i l\n    local -i r\n    local -i mid\n    local -i last_pos\n\n    array=($1)\n    n=${#array[@]}\n    m=$2\n\n    l=0\n    r=$((n-1))\n    last_pos=-1\n\n    while ((l <= r)); do\n        mid=$(((l+r)/2))\n        if ((array[mid] == m)); then\n            last_pos=$mid\n            l=$((mid+1))\n        elif ((array[mid] < m)); then\n            l=$((mid+1))\n        else\n            r=$((mid-1))\n        fi\n    done\n\n    echo $last_pos",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local i=0\n    local last_pos=0\n    for x in $list; do\n        if [ \"$x\" -eq \"$item\" ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i result\n    array=($1)\n    len=${#array[@]}\n    result=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            result=$i\n        fi\n    done\n    echo $result",
    "    local -a array\n    local -i i\n    local -i last_position\n    local -i length\n    local -i number\n    array=($1)\n    number=$2\n    length=${#array[@]}\n    last_position=-1\n    for ((i=0; i<length; i++)); do\n        if [[ ${array[i]} -eq $number ]]; then\n            last_position=$i\n        fi\n    done\n    echo $last_position",
    "    local -a arr=(\"${@:1:$#-1}\")\n    local x=$(echo \"${@: -1}\")\n    local len=${#arr[@]}\n    local i=0\n    local j=$((len - 1))\n    local mid=0\n    while [ $i -le $j ]\n    do\n        mid=$(((i + j) / 2))\n        if [ ${arr[mid]} -eq $x ]\n        then\n            while [ ${arr[mid]} -eq $x ]\n            do\n                mid=$((mid + 1))\n            done\n            mid=$((mid - 1))\n            break\n        elif [ ${arr[mid]} -lt $x ]\n        then\n            i=$((mid + 1))\n        else\n            j=$((mid - 1))\n        fi\n    done\n    if [ $i -gt $j ]\n    then\n        echo -1\n    else\n        echo $mid\n    fi",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i mid=0\n    local -i result=0\n\n    for i in $list; do\n        (( j++ ))\n    done\n\n    (( j-- ))\n\n    while (( i <= j )); do\n        (( mid = (i + j) / 2 ))\n        if (( list[mid] == element )); then\n            (( result = mid ))\n            (( i = mid + 1 ))\n        elif (( list[mid] < element )); then\n            (( i = mid + 1 ))\n        else\n            (( j = mid - 1 ))\n        fi\n    done\n\n    echo $result",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n    local -i target\n    array=($1)\n    len=${#array[@]}\n    target=$2\n    last_pos=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n    local -i target\n    array=($1)\n    len=${#array[@]}\n    target=$2\n    last_pos=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "    local -a array=(\"${!1}\")\n    local -i num=$2\n    local -i len=${#array[@]}\n    local -i low=0\n    local -i high=$((len - 1))\n    local -i mid=0\n    local -i last_pos=0\n\n    while ((low <= high)); do\n        mid=$(((low + high) / 2))\n        if ((array[mid] == num)); then\n            last_pos=$mid\n            low=$((mid + 1))\n        elif ((array[mid] < num)); then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n\n    echo $last_pos",
    "    local -a array=($1)\n    local x=$2\n    local i=0\n    local j=${#array[@]}\n    local k=0\n    while ((i < j)); do\n        k=$(((i+j)/2))\n        if ((x < array[k])); then\n            j=$k\n        elif ((x > array[k])); then\n            i=$((k+1))\n        else\n            i=$k\n        fi\n    done\n    if ((x == array[i])); then\n        echo $i\n    else\n        echo -1\n    fi",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i k\n    while (( i < j )); do\n        k=$(( (i + j) / 2 ))\n        if (( array[k] > $2 )); then\n            j=$k\n        else\n            i=$(( k + 1 ))\n        fi\n    done\n    echo $(( i - 1 ))"
  ]
}
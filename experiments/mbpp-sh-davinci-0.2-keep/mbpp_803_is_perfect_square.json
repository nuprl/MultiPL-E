{
  "name": "mbpp_803_is_perfect_square",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n#\n# $1 is an integer\nis_perfect_square() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_perfect_square \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"36\") = \"true\" ]]\n    [[ $(candidate \"14\") = \"false\" ]]\n    [[ $(candidate \"196\") = \"true\" ]]\n    [[ $(candidate \"125\") = \"false\" ]]\n    [[ $(candidate \"15625\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d. -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d. -f2)\n    if [ \"$sqrt_number_dec\" = \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=$(bc <<< \"$sqrt % 1\")\n    if [ \"$sqrt_int\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ] || [ $1 -eq 1 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n\n    local i=1\n    while [ $((i*i)) -le $1 ]; do\n        if [ $((i*i)) -eq $1 ]; then\n            echo \"Yes, $1 is a perfect square\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"No, $1 is not a perfect square\"\n    return 1",
    "    local n=$1\n    local sqrt=$(echo \"sqrt($n)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"The number $n is a perfect square.\"\n    else\n        echo \"The number $n is not a perfect square.\"\n    fi",
    "  local num=$1\n  local sqrt_num=$(echo \"sqrt($num)\" | bc -l)\n  local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d '.' -f 1)\n  local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d '.' -f 2)\n  if [ \"$sqrt_num_dec\" == \"0\" ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt_num=$(bc <<< \"scale=0; sqrt($num)\")\n    local sqrt_num_sqr=$(bc <<< \"$sqrt_num * $sqrt_num\")\n    if [ $sqrt_num_sqr -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_sq=$(echo \"$sqrt_int * $sqrt_int\" | bc)\n    if [ \"$sqrt_sq\" == \"$number\" ]; then\n        return 0\n    fi\n    return 1",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    return 1\n  fi\n\n  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_dec=$(echo \"$sqrt - $sqrt_int\" | bc)\n\n  if [ $(echo \"$sqrt_dec > 0\" | bc) -eq 1 ]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    if [ \"$sqrt_number\" == \"$sqrt_number_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_int_sqr=$(echo \"$sqrt_number_int * $sqrt_number_int\" | bc)\n    if [ $sqrt_number_int_sqr -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ $sqrt_number_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Usage: $0 <positive integer>\"\n        return 1\n    fi\n\n    local i=1\n    while [[ $i -le $1 ]]; do\n        if [[ $((i * i)) -eq $1 ]]; then\n            echo \"true\"\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    echo \"false\"\n    return 0",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_float -eq 0 ]\n    then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ \"$sqrt_number_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_float -eq 0 ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(bc <<< \"scale=0; sqrt($num)\")\n    local sqrt_num_sqr=$((sqrt_num * sqrt_num))\n    if [[ $sqrt_num_sqr -eq $num ]]; then\n        echo \"Perfect square\"\n    else\n        echo \"Not a perfect square\"\n    fi",
    "    if [ $1 -lt 1 ]; then\n        return 1\n    fi\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $((i * i)) -eq $1 ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=$(bc <<< \"$sqrt / 1\")\n    local sqrt_float=$(bc <<< \"$sqrt % 1\")\n    if [ \"$sqrt_float\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(bc <<< \"sqrt($num)\")\n    local sqrt_int=$(bc <<< \"$sqrt / 1\")\n    if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local sqrt=`echo \"sqrt($n)\" | bc -l`\n  local sqrt_int=`echo \"$sqrt\" | cut -d. -f1`\n  local sqrt_dec=`echo \"$sqrt\" | cut -d. -f2`\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"Yes\"\n  else\n    echo \"No\"\n  fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_decimal=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_decimal\" -eq 0 ]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n    if [ \"$sqrt_float\" == \"0\" ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d '.' -f 1)\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d '.' -f 2)\n    if [[ $sqrt_num_dec -eq 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local sqrt_n=$(bc <<< \"scale=0;sqrt($n)\")\n    local sqrt_n_squared=$(bc <<< \"$sqrt_n * $sqrt_n\")\n    if [ $sqrt_n_squared -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d'.' -f1)\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d'.' -f2)\n    if [ $sqrt_num_dec -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" = \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        return 0\n    fi\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $((i * i)) -eq $1 ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local number=$1\n    local square_root=$(echo \"sqrt($number)\" | bc)\n    local square=$(echo \"$square_root * $square_root\" | bc)\n    if [ $square -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec -ne 0 ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi",
    "  local number=$1\n  local sqrt=$(bc <<< \"scale=0;sqrt($number)\")\n  local sqrt_squared=$(bc <<< \"$sqrt * $sqrt\")\n  if [[ $sqrt_squared -eq $number ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | awk '{print int($1)}')\n    local sqrt_num_dec=$(echo \"$sqrt_num - $sqrt_num_int\" | bc)\n    if [ $(echo \"$sqrt_num_dec > 0\" | bc) -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=${sqrt%.*}\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $1 -lt 1 ]; then\n    echo \"Please enter a positive integer.\"\n    return 1\n  fi\n  local sqrt=$(echo \"scale=0; sqrt($1)\" | bc)\n  if [ $(($sqrt * $sqrt)) -eq $1 ]; then\n    echo \"The number $1 is a perfect square.\"\n    return 0\n  else\n    echo \"The number $1 is not a perfect square.\"\n    return 1\n  fi",
    "  if [[ $1 -eq 0 ]] || [[ $1 -eq 1 ]]; then\n    echo \"true\"\n    return 0\n  fi\n\n  local i=1\n  local square=1\n  while [[ $square -lt $1 ]]; do\n    ((i++))\n    ((square=i*i))\n  done\n\n  if [[ $square -eq $1 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n  if [ $sqrt_float -eq 0 ]\n  then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_dec -eq 0 ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n  local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n  if [ \"$sqrt_number_dec\" -eq 0 ]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" = \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n    local i=1\n    local square=1\n    while [[ $square -lt $1 ]]; do\n        i=$((i+1))\n        square=$((i*i))\n    done\n    if [[ $square -eq $1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    if [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    local square=1\n    while [[ $square -lt $1 ]]; do\n        i=$((i+1))\n        square=$((i*i))\n    done\n\n    if [[ $square -eq $1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]\n    then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ \"$sqrt_number_float\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"The number $num is a perfect square.\"\n  else\n    echo \"The number $num is not a perfect square.\"\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [[ $(echo \"$sqrt * $sqrt\" | bc) -eq $1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is less than 0\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is 0\"\n        return 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is 1\"\n        return 1\n    fi\n\n    # If the number is not a perfect square, then the square root of the number will be a floating point number.\n    # So, we can check if the square root of the number is an integer or not.\n    # If it is an integer, then the number is a perfect square.\n    # If it is not an integer, then the number is not a perfect square.\n    #\n    # The following command will return a floating point number if the number is not a perfect square.\n    # Otherwise, it will return an integer.\n    #\n    # The following command will return 0 if the number is a perfect square.\n    # Otherwise, it will return 1.\n    #\n    # The following command will return 1 if the number is a perfect square.\n    # Otherwise, it will return 0.\n    #\n    # The following command will return 0 if the number is not a perfect square.\n    # Otherwise, it will return 1.\n    #\n    # The following command will return 1 if the number is not a perfect square.\n    # Otherwise, it will return 0.\n    #\n    # The following command will return 0 if the number is a perfect square.\n    # Otherwise, it will return 1.\n    #\n    # The following command will return 1 if the number is a perfect square.\n    # Otherwise, it will return 0.\n    #\n    # The following command will return 0 if the number is not a perfect square.\n    # Otherwise, it will return 1.\n    #\n    # The following command will return 1 if the number is not a perfect square.\n    # Otherwise, it will return 0.\n    #\n    # The following command will return 0 if the number is a perfect square.\n    # Otherwise, it will return 1.\n    #\n    # The following command will return 1 if the number is a perfect square.\n    # Otherwise, it will return 0.\n",
    "  local num=$1\n  local sqrt_num=$(echo \"sqrt($num)\" | bc)\n  local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d'.' -f1)\n  local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d'.' -f2)\n  if [ $sqrt_num_dec -eq 0 ]; then\n    local sqrt_num_sq=$(echo \"$sqrt_num_int * $sqrt_num_int\" | bc)\n    if [ $sqrt_num_sq -eq $num ]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | cut -d'.' -f1)\n    local sqrt_n_dec=$(echo \"$sqrt_n\" | cut -d'.' -f2)\n    if [[ $sqrt_n_dec == \"0\" ]]; then\n        echo \"$n is a perfect square\"\n    else\n        echo \"$n is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"The number $num is a perfect square\"\n    else\n        echo \"The number $num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is less than 0\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    while [ $i -lt $1 ]; do\n        if [ $((i*i)) -eq $1 ]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
    "\tlocal num=$1\n\tlocal sqrt=$(echo \"sqrt($num)\" | bc)\n\tlocal sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n\tlocal sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n\tif [ \"$sqrt_dec\" = \"0\" ]; then\n\t\techo \"$num is a perfect square\"\n\telse\n\t\techo \"$num is not a perfect square\"\n\tfi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d \".\" -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d \".\" -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [[ $sqrt_number_float -eq 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | awk '{print int($0)}')\n    local sqrt_num_int_sqr=$(echo \"$sqrt_num_int * $sqrt_num_int\" | bc)\n    if [ $sqrt_num_int_sqr -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"ERROR: $1 is not a positive integer\"\n        return 1\n    fi\n    local num=$1\n    local i=1\n    while [[ $((i*i)) -le $num ]]; do\n        if [[ $((i*i)) -eq $num ]]; then\n            echo \"$num is a perfect square\"\n            return 0\n        fi\n        ((i++))\n    done\n    echo \"$num is not a perfect square\"\n    return 1",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ $sqrt_number_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n\n  local square_root=$(echo \"sqrt($1)\" | bc)\n  local square=$(echo \"$square_root * $square_root\" | bc)\n\n  if [ $square -eq $1 ]; then\n    echo \"$1 is a perfect square.\"\n    return 0\n  else\n    echo \"$1 is not a perfect square.\"\n    return 1\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        return 1\n    fi\n    local sqrt=$(bc <<< \"sqrt($1)\")\n    local sqrt_int=$(bc <<< \"$sqrt % 1\")\n    if [[ $sqrt_int -eq 0 ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    if [ $sqrt -eq $sqrt ] 2>/dev/null; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]\n    then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n    local i=1\n    while [ $i -lt $1 ]; do\n        if [ $((i*i)) -eq $1 ]; then\n            echo \"Yes, $1 is a perfect square\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"No, $1 is not a perfect square\"\n    return 1",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"The number $number is a perfect square\"\n  else\n    echo \"The number $number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ \"$sqrt_number_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"scale=0; sqrt($number)\" | bc)\n    local square=$((sqrt_number * sqrt_number))\n    if [[ $square -eq $number ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec -eq 0 ]]; then\n    echo \"The number $number is a perfect square\"\n  else\n    echo \"The number $number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n\n    if [ $sqrt_number_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n\n    if [[ $sqrt_number_dec == 0 ]]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [[ $sqrt_number_dec -eq 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n    local i=1\n    while [[ $i -lt $1 ]]; do\n        if [[ $(( $i * $i )) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo \"false\"",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(bc <<< \"sqrt($num)\")\n    local sqrt_int=$(bc <<< \"scale=0; $sqrt/1\")\n    local sqrt_float=$(bc <<< \"scale=2; $sqrt/1\")\n    if [[ $sqrt_int == $sqrt_float ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"The number $num is a perfect square.\"\n  else\n    echo \"The number $num is not a perfect square.\"\n  fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" = \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local sqrt_result=$(echo \"sqrt($1)\" | bc)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d '.' -f 1)\n    local sqrt_result_dec=$(echo \"$sqrt_result\" | cut -d '.' -f 2)\n\n    if [[ $sqrt_result_dec == 0 ]]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [[ $sqrt_number_float == 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"Yes, $number is a perfect square.\"\n    else\n        echo \"No, $number is not a perfect square.\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is zero\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [ $sqrt -eq 0 ]; then\n        echo \"Error: $1 is too large\"\n        return 1\n    fi\n    local sqrt_int=$(echo \"$sqrt\" | sed 's/\\..*//')\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec = 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local square=$(echo \"$sqrt * $sqrt\" | bc)\n  if [[ $square -eq $number ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  if [[ $1 -eq 0 ]]; then\n    echo \"true\"\n    return\n  fi\n\n  if [[ $1 -eq 1 ]]; then\n    echo \"true\"\n    return\n  fi\n\n  local i=1\n  local result=0\n  while [[ $result -lt $1 ]]; do\n    result=$(( i * i ))\n    if [[ $result -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$(( i + 1 ))\n  done\n\n  echo \"false\"",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n    # $1 is a positive integer greater than 1\n    local i=1\n    while [ $i -le $1 ]; do\n        local square=$((i*i))\n        if [ $square -eq $1 ]; then\n            echo \"Yes, $1 is a perfect square\"\n            return 0\n        fi\n        if [ $square -gt $1 ]; then\n            echo \"No, $1 is not a perfect square\"\n            return 1\n        fi\n        i=$((i+1))\n    done",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d. -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d. -f2)\n    if [[ $sqrt_number_dec -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n  local remainder=$(echo \"$sqrt - $sqrt_int\" | bc)\n  if [ $remainder -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" = \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_float -eq 0 ]; then\n        echo \"The number $num is a perfect square.\"\n    else\n        echo \"The number $num is not a perfect square.\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(bc <<< \"scale=0;sqrt($number)\")\n    local square=$((sqrt_number * sqrt_number))\n    if [[ $square -eq $number ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d '.' -f 1)\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d '.' -f 2)\n    if [[ $sqrt_num_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=$(bc <<< \"scale=0; $sqrt/1\")\n    local sqrt_float=$(bc <<< \"scale=2; $sqrt/1\")\n    if [ \"$sqrt_int\" == \"$sqrt_float\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | awk '{print int($1)}')\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | awk '{print $1-int($1)}')\n    if [ $sqrt_num_dec -eq 0 ]; then\n        echo \"The number $num is a perfect square\"\n    else\n        echo \"The number $num is not a perfect square\"\n    fi",
    "  local sqrt=$(bc <<< \"scale=0; sqrt($1)\")\n  local sqrt_sq=$(($sqrt * $sqrt))\n  if [[ $sqrt_sq -eq $1 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_decimal=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_decimal\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_dec=$(echo \"$sqrt_number - $sqrt_number_int\" | bc -l)\n    if [ $(echo \"$sqrt_number_dec > 0\" | bc) -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "  local number=$1\n  local sqrt_number=$(bc <<< \"scale=0; sqrt($number)\")\n  local square=$((sqrt_number * sqrt_number))\n  if [[ $square -eq $number ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is not a positive integer\"\n    return 1\n  fi\n  local sqrt=$(echo \"sqrt($1)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  if [ $sqrt_int -eq $sqrt ]; then\n    echo \"$1 is a perfect square\"\n    return 0\n  else\n    echo \"$1 is not a perfect square\"\n    return 1\n  fi",
    "    local number=$1\n    local sqrt=`echo \"sqrt($number)\" | bc -l`\n    local sqrt_int=`echo \"$sqrt\" | cut -d '.' -f 1`\n    local sqrt_dec=`echo \"$sqrt\" | cut -d '.' -f 2`\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | awk '{print int($1)}')\n    if [ $sqrt_n_int -eq $sqrt_n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [[ $1 -lt 1 ]]; then\n    return 1\n  fi\n  local sqrt=$(echo \"sqrt($1)\" | bc)\n  if [[ $sqrt -eq $(echo \"$sqrt * $sqrt\" | bc) ]]; then\n    return 0\n  else\n    return 1\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"ERROR: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local square=$((sqrt * sqrt))\n    if [[ $square -eq $1 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n  if [ $sqrt_number_int -eq $sqrt_number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_float=$(echo \"$sqrt\" | awk '{print $1-int($1)}')\n  if [ $sqrt_float -eq 0 ]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=`echo \"sqrt($number)\" | bc`\n    local sqrt_int=`echo \"$sqrt\" | cut -d'.' -f1`\n    local sqrt_dec=`echo \"$sqrt\" | cut -d'.' -f2`\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"Perfect square\"\n    else\n        echo \"Not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n    if [ $1 -lt 0 ]\n    then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n    if [ $1 -eq 0 ]\n    then\n        echo \"0 is a perfect square\"\n        exit 0\n    fi\n    if [ $1 -eq 1 ]\n    then\n        echo \"1 is a perfect square\"\n        exit 0\n    fi\n    local i=1\n    while [ $i -le $1 ]\n    do\n        local square=$(( $i * $i ))\n        if [ $square -eq $1 ]\n        then\n            echo \"$1 is a perfect square\"\n            exit 0\n        fi\n        if [ $square -gt $1 ]\n        then\n            echo \"$1 is not a perfect square\"\n            exit 0\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_float -eq 0 ]\n    then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $1 -eq 0 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"true\"\n    return\n  fi\n  local i=1\n  local sum=1\n  while [ $sum -lt $1 ]\n  do\n    i=$((i+1))\n    sum=$((sum+2*i-1))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local x=1\n    while [[ $((x*x)) -le $1 ]]; do\n        if [[ $((x*x)) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        x=$((x+1))\n    done\n    echo \"false\"",
    "    local number=$1\n    local square_root=$(printf \"%.0f\" $(echo \"sqrt($number)\" | bc -l))\n    local square=$(($square_root * $square_root))\n    if [[ $square -eq $number ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [[ $sqrt -eq $1 ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 -eq 0 ]] || [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    local result=0\n    while [[ $result -lt $1 ]]; do\n        result=$((i * i))\n        if [[ $result -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"false\"",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1-int($1)}')\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n    if [ \"$sqrt_float\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n\n  if [ \"$sqrt_dec\" == \"0\" ]\n  then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_float -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt - $sqrt_int\" | bc)\n    if [ $(echo \"$sqrt_dec == 0\" | bc) -eq 1 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"ERROR: $1 is not a positive integer\"\n    return 1\n  fi\n  local sqrt=$(echo \"sqrt($1)\" | bc)\n  if [ $sqrt -eq 0 ]; then\n    echo \"ERROR: $1 is not a positive integer\"\n    return 1\n  fi\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  if [ $sqrt_int -eq $sqrt ]; then\n    echo \"$1 is a perfect square\"\n    return 0\n  else\n    echo \"$1 is not a perfect square\"\n    return 1\n  fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"The number $num is a perfect square.\"\n  else\n    echo \"The number $num is not a perfect square.\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        echo \"$1 is a perfect square.\"\n        return 0\n    else\n        echo \"$1 is not a perfect square.\"\n        return 1\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n    local i=1\n    while [[ $i -lt $1 ]]; do\n        local square=$((i*i))\n        if [[ $square -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        if [[ $square -gt $1 ]]; then\n            echo \"false\"\n            return\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | cut -d'.' -f1)\n    if [ $sqrt_n_int -eq $sqrt_n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is less than 0\"\n    return 1\n  fi\n\n  if [ $1 -eq 0 ] || [ $1 -eq 1 ]; then\n    echo \"Yes, $1 is a perfect square\"\n    return 0\n  fi\n\n  local i=1\n  while [ $i -lt $1 ]\n  do\n    if [ $((i * i)) -eq $1 ]; then\n      echo \"Yes, $1 is a perfect square\"\n      return 0\n    fi\n    i=$((i + 1))\n  done\n\n  echo \"No, $1 is not a perfect square\"\n  return 1",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"ERROR: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"$1 is a perfect square\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"$1 is not a perfect square\"\n    return 1",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <number>\"\n    exit 1\n  fi\n\n  local number=$1\n  local root=$(echo \"sqrt($number)\" | bc)\n  local square=$(echo \"$root * $root\" | bc)\n  if [ $square -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    if [ $sqrt_number_int -eq $sqrt_number ]\n    then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d '.' -f 1)\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d '.' -f 2)\n    if [ $sqrt_num_dec -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is a negative number\"\n        return 1\n    fi\n\n    local sqrt=$(bc <<< \"sqrt($1)\")\n    local sqrt_int=$(bc <<< \"$sqrt % 1\")\n    if [ $sqrt_int -eq 0 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    else\n        echo \"No, $1 is not a perfect square\"\n        return 1\n    fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n  if [ $sqrt_number_int -eq $sqrt_number ]\n  then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" = \"0\" ]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"The number is negative\"\n    return 1\n  fi\n\n  local sqrt=$(echo \"sqrt($1)\" | bc)\n  local square=$(echo \"$sqrt * $sqrt\" | bc)\n  if [ $square -eq $1 ]; then\n    echo \"The number is a perfect square\"\n    return 0\n  else\n    echo \"The number is not a perfect square\"\n    return 1\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    local sum=0\n    while [[ $sum -lt $1 ]]; do\n        sum=$((i*i))\n        if [[ $sum -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    if [ \"$sqrt_number\" == \"$sqrt_number_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  if [[ $1 -eq 1 ]]; then\n    echo \"true\"\n    return\n  fi\n\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n\n  echo \"false\"",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n    local i=1\n    while [ $i -lt $1 ]; do\n        if [ $((i*i)) -eq $1 ]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]\n    then\n        local sqrt_number_sq=$(echo \"$sqrt_number_int * $sqrt_number_int\" | bc)\n        if [ \"$sqrt_number_sq\" -eq \"$number\" ]\n        then\n            echo \"Yes, $number is a perfect square.\"\n        else\n            echo \"No, $number is not a perfect square.\"\n        fi\n    else\n        echo \"No, $number is not a perfect square.\"\n    fi",
    "    local number=$1\n    local root=$(echo \"sqrt($number)\" | bc)\n    local square=$(echo \"$root * $root\" | bc)\n    if [[ $square -eq $number ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | cut -d '.' -f1)\n    local sqrt_n_dec=$(echo \"$sqrt_n\" | cut -d '.' -f2)\n    if [ \"$sqrt_n_dec\" == \"0\" ]; then\n        echo \"The square root of $n is $sqrt_n_int\"\n        return 0\n    else\n        echo \"The square root of $n is $sqrt_n\"\n        return 1\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    if [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    local square=1\n    while [[ $square -lt $1 ]]; do\n        ((i++))\n        ((square=i*i))\n    done\n\n    if [[ $square -eq $1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local square=$((sqrt * sqrt))\n    if [[ $square -eq $1 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    local sqrt_of_number=$(echo \"sqrt($1)\" | bc)\n    local square_of_sqrt=$(echo \"$sqrt_of_number * $sqrt_of_number\" | bc)\n    if [ $square_of_sqrt -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        return 1\n    fi\n    local sqrt=$(bc <<< \"sqrt($1)\")\n    local sqrt_int=$(bc <<< \"$sqrt/1\")\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d. -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d. -f2)\n    if [ \"$sqrt_number_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "  local n=$1\n  local sqrt_n=$(echo \"sqrt($n)\" | bc)\n  local square=$(echo \"$sqrt_n * $sqrt_n\" | bc)\n  if [ $square -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"ERROR: $1 is negative\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"ERROR: $1 is zero\"\n        return 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"TRUE: $1 is a perfect square\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"TRUE: $1 is a perfect square\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"FALSE: $1 is not a perfect square\"\n    return 1",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: $1 is zero\"\n        return 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -lt $1 ]]; do\n        i=$((i+1))\n    done\n    if [[ $((i*i)) -eq $1 ]]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    else\n        echo \"No, $1 is not a perfect square\"\n        return 1\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_int_sqr=$(echo \"$sqrt_number_int * $sqrt_number_int\" | bc)\n    if [ $sqrt_number_int_sqr -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"($sqrt_number + 0.5)/1\" | bc)\n    local square=$(echo \"$sqrt_number_int * $sqrt_number_int\" | bc)\n    if [ $square -eq $number ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n  if [ \"$sqrt_number\" == \"$sqrt_number_int\" ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"The number $number is a perfect square\"\n  else\n    echo \"The number $number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [[ $sqrt_number_dec == 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local i=1\n    while [[ $i -lt $1 ]]; do\n        if [[ $((i * i)) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"false\"",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | awk '{print int($1)}')\n    local sqrt_n_int_sq=$(echo \"$sqrt_n_int * $sqrt_n_int\" | bc)\n    if [[ $sqrt_n_int_sq -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        if [ $sqrt -eq $(($sqrt*$sqrt)) ]; then\n            echo \"Yes, $1 is a perfect square\"\n        else\n            echo \"No, $1 is not a perfect square\"\n        fi\n    else\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n\n    local i=1\n    while [ $i -le $1 ]; do\n        local sq=$((i*i))\n        if [ $sq -eq $1 ]; then\n            echo \"Yes, $1 is a perfect square\"\n            return 0\n        fi\n        if [ $sq -gt $1 ]; then\n            echo \"No, $1 is not a perfect square\"\n            return 1\n        fi\n        i=$((i+1))\n    done",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi"
  ]
}
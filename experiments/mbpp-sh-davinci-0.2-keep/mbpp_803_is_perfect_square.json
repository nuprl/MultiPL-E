{
  "name": "mbpp_803_is_perfect_square",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n#\n# $1 is an integer\nis_perfect_square() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_perfect_square \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"36\") = \"true\" ]]\n    [[ $(candidate \"14\") = \"false\" ]]\n    [[ $(candidate \"196\") = \"true\" ]]\n    [[ $(candidate \"125\") = \"false\" ]]\n    [[ $(candidate \"15625\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d. -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d. -f2)\n    if [ \"$sqrt_number_dec\" = \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=$(bc <<< \"$sqrt % 1\")\n    if [ \"$sqrt_int\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ] || [ $1 -eq 1 ]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n\n    local i=1\n    while [ $((i*i)) -le $1 ]; do\n        if [ $((i*i)) -eq $1 ]; then\n            echo \"Yes, $1 is a perfect square\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"No, $1 is not a perfect square\"\n    return 1",
    "    local n=$1\n    local sqrt=$(echo \"sqrt($n)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"The number $n is a perfect square.\"\n    else\n        echo \"The number $n is not a perfect square.\"\n    fi",
    "  local num=$1\n  local sqrt_num=$(echo \"sqrt($num)\" | bc -l)\n  local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d '.' -f 1)\n  local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d '.' -f 2)\n  if [ \"$sqrt_num_dec\" == \"0\" ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt_num=$(bc <<< \"scale=0; sqrt($num)\")\n    local sqrt_num_sqr=$(bc <<< \"$sqrt_num * $sqrt_num\")\n    if [ $sqrt_num_sqr -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_sq=$(echo \"$sqrt_int * $sqrt_int\" | bc)\n    if [ \"$sqrt_sq\" == \"$number\" ]; then\n        return 0\n    fi\n    return 1",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    return 1\n  fi\n\n  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_dec=$(echo \"$sqrt - $sqrt_int\" | bc)\n\n  if [ $(echo \"$sqrt_dec > 0\" | bc) -eq 1 ]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    if [ \"$sqrt_number\" == \"$sqrt_number_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_int_sqr=$(echo \"$sqrt_number_int * $sqrt_number_int\" | bc)\n    if [ $sqrt_number_int_sqr -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ $sqrt_number_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Usage: $0 <positive integer>\"\n        return 1\n    fi\n\n    local i=1\n    while [[ $i -le $1 ]]; do\n        if [[ $((i * i)) -eq $1 ]]; then\n            echo \"true\"\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    echo \"false\"\n    return 0",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_float -eq 0 ]\n    then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ \"$sqrt_number_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_float=$(echo \"$sqrt_number\" | awk '{print $1 - int($1)}')\n    if [ $sqrt_number_float -eq 0 ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(bc <<< \"scale=0; sqrt($num)\")\n    local sqrt_num_sqr=$((sqrt_num * sqrt_num))\n    if [[ $sqrt_num_sqr -eq $num ]]; then\n        echo \"Perfect square\"\n    else\n        echo \"Not a perfect square\"\n    fi",
    "    if [ $1 -lt 1 ]; then\n        return 1\n    fi\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $((i * i)) -eq $1 ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1"
  ]
}
{
  "name": "mbpp_802_count_rotation",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n#\n# $1 is a space-separated list\ncount_rotation() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    count_rotation \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 1\") = \"1\" ]]\n    [[ $(candidate \"4 5 1 2 3\") = \"2\" ]]\n    [[ $(candidate \"7 8 9 1 2 3\") = \"3\" ]]\n    [[ $(candidate \"1 2 3\") = \"0\" ]]\n    [[ $(candidate \"1 3 2\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i min=0\n    local -i min_index=0\n    local -i count=0\n\n    for ((i=0; i<n-1; i++)); do\n        min=${array[i]}\n        min_index=$i\n        for ((j=i+1; j<n; j++)); do\n            if [[ ${array[j]} -lt $min ]]; then\n                min=${array[j]}\n                min_index=$j\n            fi\n        done\n        if [[ $min_index -ne $i ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n    local -i min_index=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]} -lt $min ]]; then\n            min=${arr[$i]}\n            min_index=$i\n        fi\n    done\n    echo $min_index",
    "    local list=$1\n    local count=0\n    local min=999999\n    local min_index=0\n    local i=0\n    for i in $list; do\n        if [ $i -lt $min ]; then\n            min=$i\n            min_index=$count\n        fi\n        count=$((count+1))\n    done\n    echo $min_index",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i min=0\n    local -i min_index=0\n    local -i count=0\n\n    for ((i=0; i<${#array[@]}; i++)) {\n        min=${array[$i]}\n        min_index=$i\n        for ((j=$i+1; j<${#array[@]}; j++)) {\n            if ((${array[$j]} < min)) {\n                min=${array[$j]}\n                min_index=$j\n            }\n        }\n        if ((min_index != i)) {\n            count=$((count + 1))\n        }\n    }\n    echo $count",
    "    local -a arr=($1)\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i min=0\n    local -i min_index=0\n    local -i rotation=0\n    while [ $i -lt $n ]; do\n        if [ $i -eq 0 ]; then\n            min=${arr[$i]}\n            min_index=$i\n        elif [ ${arr[$i]} -lt $min ]; then\n            min=${arr[$i]}\n            min_index=$i\n        fi\n        ((i++))\n    done\n    ((rotation=min_index))\n    echo $rotation",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n    local -i min_index=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${arr[$i]} -lt $min ]]; then\n            min=${arr[$i]}\n            min_index=$i\n        fi\n    done\n    echo $min_index",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i min=0\n    local -i min_index=0\n    local -i n=${#arr[@]}\n    local -i rotation=0\n\n    for ((i=0; i<n; i++))\n    do\n        min=${arr[i]}\n        min_index=$i\n        for ((j=i+1; j<n; j++))\n        do\n            if [[ ${arr[j]} -lt $min ]]\n            then\n                min=${arr[j]}\n                min_index=$j\n            fi\n        done\n        if [[ $min_index -ne $i ]]\n        then\n            rotation=$i\n            break\n        fi\n    done\n    echo $rotation",
    "    local -a arr\n    local -i i\n    local -i n\n    local -i min\n    local -i min_index\n    local -i count\n\n    arr=($1)\n    n=${#arr[@]}\n\n    min=${arr[0]}\n    min_index=0\n    for ((i=1; i<n; i++)); do\n        if [[ ${arr[i]} -lt $min ]]; then\n            min=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    count=$((n - min_index))\n    echo $count",
    "  local -a arr=($1)\n  local -i n=${#arr[@]}\n  local -i i=0\n  local -i min=${arr[0]}\n  local -i min_index=0\n\n  for (( i=0; i<n; i++ )); do\n    if [[ ${arr[$i]} -lt $min ]]; then\n      min=${arr[$i]}\n      min_index=$i\n    fi\n  done\n\n  echo $min_index",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i min\n    local -i min_index\n    local -i rotation\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    len=${#arr[@]}\n    min=${arr[0]}\n    min_index=0\n    rotation=0\n\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[i]} -lt $min ]]; then\n            min=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    if [[ $min_index -ne 0 ]]; then\n        rotation=$((len - min_index))\n    fi\n\n    echo $rotation",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n    local -i min_i=0\n    local -i count=0\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[i]} -lt min ]]; then\n            min=${arr[i]}\n            min_i=$i\n        fi\n    done\n\n    if [[ $min_i -eq 0 ]]; then\n        echo 0\n    else\n        echo $((len - min_i))\n    fi",
    "    local -n arr=$1\n    local -i n=${#arr[@]}\n    local -i low=0\n    local -i high=$((n-1))\n    local -i mid\n    local -i res=-1\n    local -i next\n    local -i prev\n    while [[ $low -le $high ]]; do\n        mid=$((low + (high-low)/2))\n        next=$(((mid+1)%n))\n        prev=$(((mid+n-1)%n))\n        if [[ ${arr[$mid]} -le ${arr[$next]} ]] && [[ ${arr[$mid]} -le ${arr[$prev]} ]]; then\n            res=$mid\n            break\n        elif [[ ${arr[$mid]} -le ${arr[$high]} ]]; then\n            high=$((mid-1))\n        elif [[ ${arr[$mid]} -ge ${arr[$low]} ]]; then\n            low=$((mid+1))\n        fi\n    done\n    echo $res",
    "    local -a arr\n    local -i i\n    local -i n\n    local -i min\n    local -i min_index\n    local -i count\n\n    arr=($1)\n    n=${#arr[@]}\n    min=${arr[0]}\n    min_index=0\n    count=0\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -lt $min ]]; then\n            min=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    count=$((n - min_index))\n\n    echo $count",
    "    local -a arr=($1)\n    local -i low=0\n    local -i high=${#arr[@]}-1\n    local -i mid=0\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i min_index=0\n\n    while [ $low -le $high ]\n    do\n        if [ ${arr[$low]} -le ${arr[$high]} ]\n        then\n            echo $low\n            return\n        fi\n\n        mid=$((($low+$high)/2))\n        next=$((($mid+1)%$n))\n        prev=$((($mid+$n-1)%$n))\n\n        if [ ${arr[$mid]} -le ${arr[$next]} ] && [ ${arr[$mid]} -le ${arr[$prev]} ]\n        then\n            echo $mid\n            return\n        elif [ ${arr[$mid]} -le ${arr[$high]} ]\n        then\n            high=$mid-1\n        elif [ ${arr[$mid]} -ge ${arr[$low]} ]\n        then\n            low=$mid+1\n        fi\n    done",
    "    local -a arr\n    local -i i j\n    local -i n\n    local -i min_index\n    local -i min_value\n    local -i rotation_count\n\n    arr=($1)\n    n=${#arr[@]}\n    min_index=0\n    min_value=${arr[0]}\n    rotation_count=0\n\n    for ((i=0; i<n; i++)); do\n        if [ ${arr[i]} -lt $min_value ]; then\n            min_index=$i\n            min_value=${arr[i]}\n        fi\n    done\n\n    for ((i=0; i<n-1; i++)); do\n        j=$(((i+min_index)%n))\n        if [ ${arr[j]} -gt ${arr[j+1]} ]; then\n            rotation_count=$((rotation_count+1))\n        fi\n    done\n\n    echo $rotation_count",
    "\tlocal -a arr\n\tlocal -i i j\n\tlocal -i min min_index\n\tlocal -i n\n\n\tarr=($1)\n\tn=${#arr[@]}\n\n\tmin=${arr[0]}\n\tmin_index=0\n\n\tfor ((i=1; i<n; i++)); do\n\t\tif [[ ${arr[i]} -lt $min ]]; then\n\t\t\tmin=${arr[i]}\n\t\t\tmin_index=$i\n\t\tfi\n\tdone\n\n\techo $min_index",
    "    local -a arr=($1)\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n    local -i min_index=0\n    while (( i < n )); do\n        if (( arr[i] < min )); then\n            min=${arr[i]}\n            min_index=$i\n        fi\n        (( i++ ))\n    done\n    echo $min_index",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i min=${arr[0]}\n    local -i min_index=0\n    local -i rotation=0\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[i]} -lt min ]]; then\n            min=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    rotation=$((min_index + 1))\n    echo $rotation",
    "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n  local -i min=0\n  local -i min_index=0\n  local -i count=0\n\n  for ((i=0; i<n; i++))\n  do\n    min=${arr[i]}\n    min_index=i\n    for ((j=i+1; j<n; j++))\n    do\n      if [ ${arr[j]} -lt $min ]\n      then\n        min=${arr[j]}\n        min_index=$j\n      fi\n    done\n    if [ $min_index -ne $i ]\n    then\n      count=$((count+1))\n    fi\n  done\n  echo $count",
    "    local -a arr\n    local -i i=0\n    local -i len=0\n    local -i min=0\n    local -i min_index=0\n    local -i rotation=0\n\n    arr=($1)\n    len=${#arr[@]}\n\n    min=${arr[0]}\n    min_index=0\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[$i]} -lt $min ]]; then\n            min=${arr[$i]}\n            min_index=$i\n        fi\n    done\n\n    rotation=$min_index\n    if [[ $rotation -eq 0 ]]; then\n        rotation=$len\n    fi\n\n    echo $rotation"
  ]
}
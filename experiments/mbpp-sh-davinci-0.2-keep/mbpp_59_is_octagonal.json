{
  "name": "mbpp_59_is_octagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth octagonal number.\n#\n# $1 is an integer\nis_octagonal() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_octagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"65\" ]]\n    [[ $(candidate \"10\") = \"280\" ]]\n    [[ $(candidate \"15\") = \"645\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local _=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(2*$n+1/4)+1/2\" | bc)\n    local oct=$(echo \"scale=0; $nth*(3*$nth-2)\" | bc)\n    if [ \"$oct\" -eq \"$n\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n  local x_int=$(echo \"$x\" | cut -d. -f1)\n  local x_frac=$(echo \"$x\" | cut -d. -f2)\n  if [[ $x_frac -eq 0 ]]; then\n    local x_minus_1=$(($x_int - 1))\n    local x_plus_1=$(($x_int + 1))\n    local n_minus_1=$(($x_minus_1 * $x_minus_1 * 2))\n    local n_plus_1=$(($x_plus_1 * $x_plus_1 * 2))\n    if [[ $n -eq $n_minus_1 || $n -eq $n_plus_1 ]]; then\n      echo 1\n    else\n      echo 0\n    fi\n  else\n    echo 0\n  fi",
    "  local n=$1\n  local nth_octagonal=$(octagonal_number $n)\n  local nth_triangular=$(triangular_number $n)\n  local nth_pentagonal=$(pentagonal_number $n)\n  local nth_hexagonal=$(hexagonal_number $n)\n  local nth_heptagonal=$(heptagonal_number $n)\n\n  if [[ $nth_octagonal -eq $nth_triangular ]] ||\n     [[ $nth_octagonal -eq $nth_pentagonal ]] ||\n     [[ $nth_octagonal -eq $nth_hexagonal ]] ||\n     [[ $nth_octagonal -eq $nth_heptagonal ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local aa=1\n  local bb=1\n  local cc=1\n  local dd=1\n  local ee=1\n  local ff=1\n  local gg=1\n  local hh=1\n  local ii=1\n  local jj=1\n  local kk=1\n  local ll=1\n  local mm=1\n  local oo=1\n  local pp=1\n  local qq=1\n  local rr=1\n  local ss=1\n  local tt=1\n  local uu=1\n  local vv=1\n  local ww=1\n  local xx=1\n  local yy=1\n  local zz=1\n  local aaa=1\n  local bbb=1\n  local ccc=1\n  local ddd=1\n  local eee=1\n  local fff=1\n  local ggg=1\n  local hhh=1\n  local iii=1\n  local jjj=1\n  local kkk=1\n  local lll=1\n  local mmm=1\n  local ooo=1\n  local ppp=1\n  local qqq=1\n  local rrr=1\n  local sss=1\n  local ttt=1\n  local uuu=1\n  local vvv=1\n  local www=1\n  local xxx=1\n  local yyy=1\n  local zzz=1\n  local aaaa=1\n  local bbbb=1\n ",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1+8*$n)\" | bc)\n    local b=$(echo \"scale=0; $a%2\" | bc)\n    if [ $b -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $nth_octagonal == [0-9]* ]]; then\n        echo $nth_octagonal\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+0.25\" | bc)\n    local w=$(echo \"$z/2\" | bc)\n    local v=$(echo \"$w+0.5\" | bc)\n    local u=$(echo \"$v*$v\" | bc)\n    local t=$(echo \"$u/2\" | bc)\n    local s=$(echo \"$t+0.25\" | bc)\n    local r=$(echo \"$s/2\" | bc)\n    local q=$(echo \"$r+0.5\" | bc)\n    local p=$(echo \"$q*$q\" | bc)\n    local o=$(echo \"$p/2\" | bc)\n    local m=$(echo \"$o+0.25\" | bc)\n    local l=$(echo \"$m/2\" | bc)\n    local k=$(echo \"$l+0.5\" | bc)\n    local j=$(echo \"$k*$k\" | bc)\n    local i=$(echo \"$j/2\" | bc)\n    local h=$(echo \"$i+0.25\" | bc)\n    local g=$(echo \"$h/2\" | bc)\n    local f=$(echo \"$g+0.5\" | bc)\n    local e=$(echo \"$f*$f\" | bc)\n    local d=$(echo \"$e/2\" | bc)\n    local c=$(echo \"$d+0.25\" | bc)\n    local b=$(echo \"$c/2\" | bc)\n    local a=$(echo \"$b+0.5\" | bc)\n    local result=$(echo \"$a*$a\" | bc)\n    if [[ $result -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2 * $n + 0.125) + 0.5\" | bc -l)\n  local y=$(echo \"$x * $x + $x - $n\" | bc -l)\n  if [ $(echo \"$y < 0.000001\" | bc -l) -eq 1 ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $(echo \"$nth_octagonal*(3*$nth_octagonal-2) == $n\" | bc) -eq 1 ]]; then\n        echo \"$nth_octagonal\"\n    else\n        echo \"0\"\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n  if [[ $nth_octagonal == *.* ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_frac=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_frac\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_plus_1_sqrt_frac=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_frac\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f1)\n    local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1_sqrt_plus_1=$(echo \"$n_sqrt_plus_1_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt_plus_1_sqrt\" | cut -d. -f1)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt_plus_1_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local x_int=$(echo \"$x\" | cut -d. -f1)\n    if [[ \"$x\" == \"$x_int\" ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local root=$(echo \"sqrt(2*$n+0.0625)+0.5\" | bc)\n    local is_int=$(echo \"$root == int($root)\" | bc)\n    if [ $is_int -eq 1 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local r=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local i=$(echo \"$r\" | cut -d. -f1)\n    local d=$(echo \"$r-$i\" | bc -l)\n    if [ $(echo \"$d < 0.000001\" | bc -l) -eq 1 ]; then\n        echo \"$n is an octagonal number\"\n    else\n        echo \"$n is not an octagonal number\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local nth_octagonal_square=$(echo \"$nth_octagonal*$nth_octagonal\" | bc)\n    local nth_octagonal_square_plus_one=$(echo \"$nth_octagonal_square+1\" | bc)\n    local nth_octagonal_square_plus_one_div_six=$(echo \"$nth_octagonal_square_plus_one/6\" | bc)\n    local nth_octagonal_square_plus_one_div_six_times_twenty_four=$(echo \"$nth_octagonal_square_plus_one_div_six*24\" | bc)\n    local nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one=$(echo \"$nth_octagonal_square_plus_one_div_six_times_twenty_four+1\" | bc)\n    local nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one_sqrt=$(echo \"scale=0; sqrt($nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one)\" | bc)\n    if [ $nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one_sqrt -eq $nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one_sqrt 2> /dev/null ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"scale=0; sqrt(1 + 24 * $n)\" | bc)\n    local y=$(echo \"scale=0; $x % 6\" | bc)\n    if [ $y -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_frac=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n    if [[ $n_sqrt_frac != 0 ]]; then\n        return 1\n    fi\n    local n_sqrt_sqrt=$(echo \"sqrt($n_sqrt)\" | bc)\n    local n_sqrt_sqrt_int=$(echo \"$n_sqrt_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_sqrt_frac=$(echo \"$n_sqrt_sqrt\" | cut -d'.' -f2)\n    if [[ $n_sqrt_sqrt_frac != 0 ]]; then\n        return 1\n    fi\n    if [[ $n_sqrt_sqrt_int != 3 ]]; then\n        return 1\n    fi\n    return 0",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n  local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n  local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f1)\n  local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n    return 1\n  fi\n  return 0",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n    if [[ $nth_octagonal =~ ^[0-9]+$ ]]; then\n        echo \"$nth_octagonal\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local _=1\n    local __=1\n    local ___=1\n    local ____=1\n    local _____=1\n    local ______=1\n    local _______=1\n    local ________=1\n    local _________=1\n    local __________=1\n    local ___________=1\n    local ____________=1\n    local _____________=1\n    local ______________=1\n    local _______________=1\n    local ________________=1\n    local _________________=1\n    local __________________=1\n    local ___________________=1\n    local ____________________=1\n    local _____________________=1\n    local ______________________=1\n    local _______________________=1\n    local ________________________=1\n    local _________________________=1\n    local __________________________=1\n    local ___________________________=1\n    local ",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d\".\" -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d\".\" -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_sqrt=$(echo \"sqrt($n_sqrt_int)\" | bc)\n    local n_sqrt_sqrt_int=$(echo \"$n_sqrt_sqrt\" | cut -d\".\" -f1)\n    local n_sqrt_sqrt_dec=$(echo \"$n_sqrt_sqrt\" | cut -d\".\" -f2)\n    if [ \"$n_sqrt_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_sqrt_int\" == \"3\" ]; then\n        return 0\n    fi\n    return 1",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x\" | bc)\n    [ $z -eq $n ] && return 0\n    return 1",
    "    local n=$1\n    local nth_octagonal=$((n * (3 * n - 2)))\n    echo $nth_octagonal",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_frac=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_frac\" -eq 0 ]; then\n        local n_sqrt_int_sqrt=$(echo \"sqrt($n_sqrt_int)\" | bc)\n        local n_sqrt_int_sqrt_int=$(echo \"$n_sqrt_int_sqrt\" | cut -d'.' -f1)\n        local n_sqrt_int_sqrt_frac=$(echo \"$n_sqrt_int_sqrt\" | cut -d'.' -f2)\n        if [ \"$n_sqrt_int_sqrt_frac\" -eq 0 ]; then\n            if [ \"$n_sqrt_int_sqrt_int\" -eq 3 ]; then\n                return 0\n            fi\n        fi\n    fi\n    return 1",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [[ $octagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_sq=$(echo \"$n_sqrt_int * $n_sqrt_int\" | bc)\n    if [ \"$n_sqrt_sq\" != \"$n\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local x_int=$(echo \"$x\" | cut -d. -f1)\n    if [ \"$x\" = \"$x_int\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1+8*$n)\" | bc)\n    test $((a*a)) -eq $((1+8*n))",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+0.25\" | bc)\n    local w=$(echo \"$z/2\" | bc)\n    local v=$(echo \"$w+0.5\" | bc)\n    local u=$(echo \"$v*$v\" | bc)\n    local t=$(echo \"$u/2\" | bc)\n    local s=$(echo \"$t+0.25\" | bc)\n    local r=$(echo \"$s/2\" | bc)\n    local q=$(echo \"$r+0.5\" | bc)\n    local p=$(echo \"$q*$q\" | bc)\n    local o=$(echo \"$p/2\" | bc)\n    local m=$(echo \"$o+0.25\" | bc)\n    local l=$(echo \"$m/2\" | bc)\n    local k=$(echo \"$l+0.5\" | bc)\n    local j=$(echo \"$k*$k\" | bc)\n    local i=$(echo \"$j/2\" | bc)\n    local h=$(echo \"$i+0.25\" | bc)\n    local g=$(echo \"$h/2\" | bc)\n    local f=$(echo \"$g+0.5\" | bc)\n    local e=$(echo \"$f*$f\" | bc)\n    local d=$(echo \"$e/2\" | bc)\n    local c=$(echo \"$d+0.25\" | bc)\n    local b=$(echo \"$c/2\" | bc)\n    local a=$(echo \"$b+0.5\" | bc)\n    if [ \"$a\" -eq \"$n\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n  local y=$(echo \"$x%1\" | bc -l)\n  if [ \"$y\" == \"0\" ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "  local n=$1\n  local nth_octagonal=$((n * (3 * n - 2)))\n  echo $nth_octagonal",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local y=$(echo \"$x - int($x)\" | bc -l)\n    if [ $(echo \"$y == 0\" | bc -l) -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$((n*(3*n-2)))\n    echo \"$nth_octagonal\"",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $nth_octagonal -eq $(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | sed 's/\\..*//')\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | sed 's/^[0-9]*\\.//')\n    if [[ $n_sqrt_dec != 0 ]]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sq=$(echo \"$n_sqrt_plus_1 * $n_sqrt_plus_1\" | bc)\n    local n_sqrt_plus_1_sq_minus_1=$(echo \"$n_sqrt_plus_1_sq - 1\" | bc)\n    local n_sqrt_plus_1_sq_minus_1_div_2=$(echo \"$n_sqrt_plus_1_sq_minus_1 / 2\" | bc)\n    if [[ $n_sqrt_plus_1_sq_minus_1_div_2 == $n ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local y=$(echo \"$x % 1\" | bc -l)\n    if [ \"$y\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | cut -d. -f1)\n    local sqrt_n_dec=$(echo \"$sqrt_n\" | cut -d. -f2)\n    if [ \"$sqrt_n_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_n_plus_1=$(echo \"$sqrt_n + 1\" | bc)\n    local sqrt_n_plus_1_int=$(echo \"$sqrt_n_plus_1\" | cut -d. -f1)\n    local sqrt_n_plus_1_dec=$(echo \"$sqrt_n_plus_1\" | cut -d. -f2)\n    if [ \"$sqrt_n_plus_1_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_n_plus_1_div_2=$(echo \"$sqrt_n_plus_1 / 2\" | bc)\n    local sqrt_n_plus_1_div_2_int=$(echo \"$sqrt_n_plus_1_div_2\" | cut -d. -f1)\n    local sqrt_n_plus_1_div_2_dec=$(echo \"$sqrt_n_plus_1_div_2\" | cut -d. -f2)\n    if [ \"$sqrt_n_plus_1_div_2_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_n_plus_1_div_2_times_3=$(echo \"$sqrt_n_plus_1_div_2 * 3\" | bc)\n    local sqrt_n_plus_1_div_2_times_3_int=$(echo \"$sqrt_n_plus_1_div_2_times_3\" | cut -d. -f1)\n    local sqrt_n_plus_1_div_2_times_3_dec=$(echo \"$sqrt_n_plus_1_div_2_times_",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d '.' -f 1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d '.' -f 2)\n  if [[ $n_sqrt_dec != 0 ]]; then\n    return 1\n  fi\n  local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n  local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n  local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d '.' -f 1)\n  local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d '.' -f 2)\n  if [[ $n_sqrt_plus_1_sqrt_dec != 0 ]]; then\n    return 1\n  fi\n  if [[ $n_sqrt_plus_1_sqrt_int -ne 2 ]]; then\n    return 1\n  fi\n  return 0",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+0.25\" | bc)\n    local w=$(echo \"sqrt($z)\" | bc)\n    local t=$(echo \"$w*$w\" | bc)\n    local u=$(echo \"$t+0.25\" | bc)\n    local v=$(echo \"sqrt($u)\" | bc)\n    local r=$(echo \"$v*$v\" | bc)\n    local s=$(echo \"$r+0.25\" | bc)\n    local q=$(echo \"sqrt($s)\" | bc)\n    local p=$(echo \"$q*$q\" | bc)\n    local o=$(echo \"$p+0.25\" | bc)\n    local m=$(echo \"sqrt($o)\" | bc)\n    local l=$(echo \"$m*$m\" | bc)\n    local k=$(echo \"$l+0.25\" | bc)\n    local j=$(echo \"sqrt($k)\" | bc)\n    local i=$(echo \"$j*$j\" | bc)\n    local h=$(echo \"$i+0.25\" | bc)\n    local g=$(echo \"sqrt($h)\" | bc)\n    local f=$(echo \"$g*$g\" | bc)\n    local e=$(echo \"$f+0.25\" | bc)\n    local d=$(echo \"sqrt($e)\" | bc)\n    local c=$(echo \"$d*$d\" | bc)\n    local b=$(echo \"$c+0.25\" | bc)\n    local a=$(echo \"sqrt($b)\" | bc)\n    local a_int=$(echo \"$a*$a\" | bc)\n    local b_int=$(echo \"$a_int+0.25\" | bc)\n    local c_int=$(echo \"sqrt($b_int)\" | bc)\n    local d_int=$(echo \"$c_int*$c_int\" | bc)\n    local e_int",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1+8*$n)/2\" | bc)\n    local octagonal=$(echo \"scale=0; $nth*(3*$nth-2)/2\" | bc)\n    if [ $octagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+8*$n)-1)/2\" | bc)\n  if [ \"$n\" -eq \"$(($nth_octagonal*(3*$nth_octagonal-2)))\" ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [[ $octagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local a=$(( (1 + sqrt(1 + 24 * n)) / 6 ))\n    (( a * (3 * a - 2) == n ))",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local y=$(echo \"$x*$x\" | bc -l)\n    local z=$(echo \"$y/2+0.125\" | bc -l)\n    local w=$(echo \"$z+0.5\" | bc -l)\n    local q=$(echo \"$w*$w\" | bc -l)\n    local r=$(echo \"$q/2+0.125\" | bc -l)\n    local s=$(echo \"$r+0.5\" | bc -l)\n    local t=$(echo \"$s*$s\" | bc -l)\n    local u=$(echo \"$t/2+0.125\" | bc -l)\n    local v=$(echo \"$u+0.5\" | bc -l)\n    local p=$(echo \"$v*$v\" | bc -l)\n    local o=$(echo \"$p/2+0.125\" | bc -l)\n    local m=$(echo \"$o+0.5\" | bc -l)\n    local k=$(echo \"$m*$m\" | bc -l)\n    local l=$(echo \"$k/2+0.125\" | bc -l)\n    local j=$(echo \"$l+0.5\" | bc -l)\n    local h=$(echo \"$j*$j\" | bc -l)\n    local i=$(echo \"$h/2+0.125\" | bc -l)\n    local g=$(echo \"$i+0.5\" | bc -l)\n    local f=$(echo \"$g*$g\" | bc -l)\n    local e=$(echo \"$f/2+0.125\" | bc -l)\n    local d=$(echo \"$e+0.5\" | bc -l)\n    local c=$(echo \"$d*$d\" | bc -l)\n    local b=$(echo \"$c/2+0.125\" | bc -l)\n    local a=$(echo \"$b+0.5\" | bc -l)\n    if [ $(echo \"$a*$a\" |",
    "  local n=$1\n  local nth=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n  local nth_int=$(echo \"$nth\" | cut -d. -f1)\n  if [ \"$nth\" == \"$nth_int\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+0.25\" | bc)\n    local w=$(echo \"$z/2\" | bc)\n    local v=$(echo \"$w+0.5\" | bc)\n    local u=$(echo \"$v*$v\" | bc)\n    local t=$(echo \"$u-0.25\" | bc)\n    local s=$(echo \"$t/2\" | bc)\n    local r=$(echo \"$s+0.5\" | bc)\n    local q=$(echo \"$r*$r\" | bc)\n    local p=$(echo \"$q+0.25\" | bc)\n    local o=$(echo \"$p/2\" | bc)\n    local m=$(echo \"$o+0.5\" | bc)\n    local l=$(echo \"$m*$m\" | bc)\n    local k=$(echo \"$l-0.25\" | bc)\n    local j=$(echo \"$k/2\" | bc)\n    local i=$(echo \"$j+0.5\" | bc)\n    local h=$(echo \"$i*$i\" | bc)\n    local g=$(echo \"$h+0.25\" | bc)\n    local f=$(echo \"$g/2\" | bc)\n    local e=$(echo \"$f+0.5\" | bc)\n    local d=$(echo \"$e*$e\" | bc)\n    local c=$(echo \"$d-0.25\" | bc)\n    local b=$(echo \"$c/2\" | bc)\n    local a=$(echo \"$b+0.5\" | bc)\n    if [ \"$a\" -eq \"$n\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    if [ \"$nth\" = \"$nth_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local nth_octagonal_squared=$(echo \"$nth_octagonal*$nth_octagonal\" | bc)\n    local nth_octagonal_times_six=$(echo \"$nth_octagonal*6\" | bc)\n    local nth_octagonal_times_six_plus_one=$(echo \"$nth_octagonal_times_six+1\" | bc)\n    local nth_octagonal_times_six_plus_one_divided_by_two=$(echo \"scale=0; $nth_octagonal_times_six_plus_one/2\" | bc)\n    local nth_octagonal_times_six_plus_one_divided_by_two_times_nth_octagonal=$(echo \"$nth_octagonal_times_six_plus_one_divided_by_two*$nth_octagonal\" | bc)\n    if [ $nth_octagonal_squared -eq $nth_octagonal_times_six_plus_one_divided_by_two_times_nth_octagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n  [ $x -eq $(echo \"($x*$x+$x)/2\" | bc) ]",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local x_int=$(echo \"$x\" | awk '{print int($1)}')\n    if [ \"$x\" = \"$x_int\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n  local nth_octagonal_square=$(echo \"scale=0; $nth_octagonal^2\" | bc)\n  local nth_octagonal_square_plus_one=$(echo \"scale=0; $nth_octagonal_square+1\" | bc)\n  local nth_octagonal_square_plus_one_div_six=$(echo \"scale=0; $nth_octagonal_square_plus_one/6\" | bc)\n  local nth_octagonal_square_plus_one_div_six_times_six=$(echo \"scale=0; $nth_octagonal_square_plus_one_div_six*6\" | bc)\n  local nth_octagonal_square_plus_one_div_six_times_six_plus_one=$(echo \"scale=0; $nth_octagonal_square_plus_one_div_six_times_six+1\" | bc)\n  local nth_octagonal_square_plus_one_div_six_times_six_plus_one_div_two=$(echo \"scale=0; $nth_octagonal_square_plus_one_div_six_times_six_plus_one/2\" | bc)\n  local nth_octagonal_square_plus_one_div_six_times_six_plus_one_div_two_times_nth_octagonal=$(echo \"scale=0; $nth_octagonal_square_plus_one_div_six_times_six_plus_one_div_two*$nth_octagonal\" | bc)\n  if [ $nth_octagonal_square_plus_one_div_six_times_six_plus_one_div_two_times_nth_octagonal -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local x_int=$(echo \"$x\" | cut -d. -f1)\n    if [ \"$x\" = \"$x_int\" ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($0)}')\n    local n_sqrt_int_sqr=$(echo \"$n_sqrt_int * $n_sqrt_int\" | bc)\n    local n_sqrt_int_sqr_plus_n_sqrt_int=$(echo \"$n_sqrt_int_sqr + $n_sqrt_int\" | bc)\n    if [ $n -eq $n_sqrt_int_sqr_plus_n_sqrt_int ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local int_nth=$(echo \"$nth\" | cut -d. -f1)\n    if [[ $nth == $int_nth ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x+0.5\" | bc)\n    [ $z -eq $n ] && return 0\n    return 1",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    [ \"$nth\" = \"$nth_int\" ]",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n  local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n  if [[ $n -eq $octagonal ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n  local y=$(echo \"$x*$x+$x-2*$n\" | bc -l)\n  if [ $(echo \"$y < 0.00001\" | bc -l) -eq 1 ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+8*$n)-1)/2\" | bc)\n    if [[ $nth_octagonal =~ ^[0-9]+$ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    if [ \"$nth\" == \"$nth_int\" ]; then\n        echo \"$nth\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n    if [ $nth_octagonal -eq $nth_octagonal 2> /dev/null ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 24 * $n) + 1\" | bc -l)\n    local nth_mod=$(echo \"$nth % 6\" | bc -l)\n    if [ \"$nth_mod\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_frac=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    if [ \"$n_sqrt_frac\" == \"0\" ]; then\n        local n_sqrt_plus_1=$(echo \"$n_sqrt + 1\" | bc)\n        local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n        local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d '.' -f 1)\n        local n_sqrt_plus_1_sqrt_frac=$(echo \"$n_sqrt_plus_1_sqrt - $n_sqrt_plus_1_sqrt_int\" | bc)\n        if [ \"$n_sqrt_plus_1_sqrt_frac\" == \"0\" ]; then\n            return 0\n        fi\n    fi\n    return 1",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n  if [ $nth_octagonal -eq $(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(2*$n+1/4)+1/2\" | bc)\n    local octagonal=$(echo \"scale=0; $nth*(3*$nth-2)\" | bc)\n    if [ $octagonal -eq $n ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    if [ \"$n_sqrt_dec\" == \"0\" ]; then\n        local n_sqrt_plus_1=$(echo \"$n_sqrt + 1\" | bc)\n        local n_sqrt_plus_1_int=$(echo \"$n_sqrt_plus_1\" | cut -d. -f1)\n        local n_sqrt_plus_1_dec=$(echo \"$n_sqrt_plus_1 - $n_sqrt_plus_1_int\" | bc)\n        if [ \"$n_sqrt_plus_1_dec\" == \"0\" ]; then\n            return 0\n        fi\n    fi\n    return 1",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1_sqrt_plus_1=$(echo \"$n_sqrt_plus_1_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt_plus_1_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt_plus_1_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_plus_1_sqrt_dec\" != \"0\"",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local _=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  local n_sqrt_int_sqrt=$(echo \"sqrt($n_sqrt_int)\" | bc)\n  local n_sqrt_int_sqrt_int=$(echo \"$n_sqrt_int_sqrt\" | cut -d. -f1)\n  local n_sqrt_int_sqrt_dec=$(echo \"$n_sqrt_int_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_int_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  local n_sqrt_int_sqrt_int_sqrt=$(echo \"sqrt($n_sqrt_int_sqrt_int)\" | bc)\n  local n_sqrt_int_sqrt_int_sqrt_int=$(echo \"$n_sqrt_int_sqrt_int_sqrt\" | cut -d. -f1)\n  local n_sqrt_int_sqrt_int_sqrt_dec=$(echo \"$n_sqrt_int_sqrt_int_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_int_sqrt_int_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  if [ \"$n_sqrt_int_sqrt_int_sqrt_int\" == \"2\" ]; then\n    return 0\n  fi\n  return 1",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n    if [[ $nth_octagonal -eq $nth_octagonal ]]; then\n        echo $nth_octagonal\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [ $nth_octagonal -eq $(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n  local y=$(echo \"$x*$x+$x-2*$n\" | bc -l)\n  if [ $(echo \"$y < 0.00001\" | bc -l) -eq 1 ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local aa=1\n  local bb=1\n  local cc=1\n  local dd=1\n  local ee=1\n  local ff=1\n  local gg=1\n  local hh=1\n  local ii=1\n  local jj=1\n  local kk=1\n  local ll=1\n  local mm=1\n  local oo=1\n  local pp=1\n  local qq=1\n  local rr=1\n  local ss=1\n  local tt=1\n  local uu=1\n  local vv=1\n  local ww=1\n  local xx=1\n  local yy=1\n  local zz=1\n  local aaa=1\n  local bbb=1\n  local ccc=1\n  local ddd=1\n  local eee=1\n  local fff=1\n  local ggg=1\n  local hhh=1\n  local iii=1\n  local jjj=1\n  local kkk=1\n  local lll=1\n  local mmm=1\n  local ooo=1\n  local ppp=1\n  local qqq=1\n  local rrr=1\n  local sss=1\n  local ttt=1\n  local uuu=1\n  local vvv=1\n  local www=1\n  local xxx=1\n  local yyy=1\n  local zzz=1\n  local aaaa=1\n  local bbbb=1\n ",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local y=$(echo \"$x%1\" | bc -l)\n    if [ \"$y\" == \"0\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local b=$(echo \"sqrt(2*$n+1/3)\" | bc -l | cut -d. -f1)\n    if [[ $a == $b ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local test=$(echo \"$nth*($nth+1)/2\" | bc)\n    if [ $test -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+0.25\" | bc)\n    [ $z -eq $n ]",
    "    local n=$1\n    local nth_octagonal=$((n*(3*n-2)))\n    local is_octagonal=0\n    local nth_triangular=$(triangular $n)\n    if [[ $nth_octagonal -eq $nth_triangular ]]; then\n        is_octagonal=1\n    fi\n    echo $is_octagonal",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local y=$(echo \"$x % 1\" | bc -l)\n    if [ \"$y\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x+$x-2*$n\" | bc)\n    if [ $y -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"($x*$x+$x)/2\" | bc)\n    if [ $z -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 24 * $n) + 1\" | bc)\n    local nth=$(echo \"scale=0; $nth / 6\" | bc)\n    local nth=$(echo \"scale=0; $nth / 2\" | bc)\n    local nth=$(echo \"scale=0; $nth * (3 * $nth - 2)\" | bc)\n    if [ $n -eq $nth ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1+8*$n)/2\" | bc)\n    local nth_octagonal=$(echo \"scale=0; $nth*(3*$nth-2)\" | bc)\n    if [[ $nth_octagonal -eq $n ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local n=$1\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee=0\n  local ffff=0\n  local ggg",
    "  local n=$1\n  local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n  local nth_int=$(echo \"$nth\" | cut -d. -f1)\n  local nth_dec=$(echo \"$nth\" | cut -d. -f2)\n  if [ \"$nth_dec\" == \"0\" ]; then\n    echo \"$nth_int\"\n  else\n    echo \"0\"\n  fi",
    "  local n=$1\n  local nth=$(echo \"scale=0; sqrt(1 + 8 * $n) / 2\" | bc)\n  [ $nth -eq $(echo \"scale=0; (1 + $nth) * $nth / 2\" | bc) ]",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local y=$(echo \"$x - 1/3\" | bc -l)\n    local z=$(echo \"$y / 2\" | bc -l)\n    local a=$(echo \"$z - 1/2\" | bc -l)\n    local b=$(echo \"$a / 1\" | bc -l)\n    local c=$(echo \"$b - 1/6\" | bc -l)\n    local d=$(echo \"$c / 1\" | bc -l)\n    local e=$(echo \"$d - 1/12\" | bc -l)\n    local f=$(echo \"$e / 1\" | bc -l)\n    local g=$(echo \"$f - 1/20\" | bc -l)\n    local h=$(echo \"$g / 1\" | bc -l)\n    local i=$(echo \"$h - 1/30\" | bc -l)\n    local j=$(echo \"$i / 1\" | bc -l)\n    local k=$(echo \"$j - 1/42\" | bc -l)\n    local l=$(echo \"$k / 1\" | bc -l)\n    local m=$(echo \"$l - 1/56\" | bc -l)\n    local o=$(echo \"$m / 1\" | bc -l)\n    local p=$(echo \"$o - 1/72\" | bc -l)\n    local q=$(echo \"$p / 1\" | bc -l)\n    local r=$(echo \"$q - 1/90\" | bc -l)\n    local s=$(echo \"$r / 1\" | bc -l)\n    local t=$(echo \"$s - 1/110\" | bc -l)\n    local u=$(echo \"$t / 1\" | bc -l)\n    local v=$(echo \"$u - 1/132\" | bc -l)\n    local w=$(echo \"$v / 1\" | bc -l)\n    local x=$(echo \"$w - 1/156\" | bc -l)\n    local y=$(echo \"$x / 1\" | bc -l)\n    local z=$(echo \"$y - 1/182",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local y=$(echo \"$x*$x\" | bc -l)\n    local z=$(echo \"$y+0.125\" | bc -l)\n    local w=$(echo \"scale=0; $z/2\" | bc -l)\n    if [ $w -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local nth_octagonal=$((n*(3*n-2)))\n    echo $nth_octagonal",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | sed 's/\\..*$//')\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    if [ \"$n_sqrt_dec\" == \"0\" ]; then\n        local n_sqrt_plus_1=$(echo \"$n_sqrt + 1\" | bc)\n        local n_sqrt_plus_1_int=$(echo \"$n_sqrt_plus_1\" | sed 's/\\..*$//')\n        local n_sqrt_plus_1_dec=$(echo \"$n_sqrt_plus_1 - $n_sqrt_plus_1_int\" | bc)\n        if [ \"$n_sqrt_plus_1_dec\" == \"0\" ]; then\n            local n_sqrt_plus_1_div_3=$(echo \"$n_sqrt_plus_1 / 3\" | bc)\n            local n_sqrt_plus_1_div_3_int=$(echo \"$n_sqrt_plus_1_div_3\" | sed 's/\\..*$//')\n            local n_sqrt_plus_1_div_3_dec=$(echo \"$n_sqrt_plus_1_div_3 - $n_sqrt_plus_1_div_3_int\" | bc)\n            if [ \"$n_sqrt_plus_1_div_3_dec\" == \"0\" ]; then\n                return 0\n            fi\n        fi\n    fi\n    return 1",
    "    local n=$1\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local _=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local Aa=0\n    local Ab=0\n    local Ac=0\n    local Ad=0\n    local Ae=0\n    local Af=0\n    local Ag=0\n",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [[ $n -eq $octagonal ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local y=$(echo \"$x % 1\" | bc -l)\n    if [ \"$y\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n  if [[ $nth_octagonal =~ ^[0-9]+$ ]]; then\n    echo $nth_octagonal\n  else\n    echo 0\n  fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x+0.5\" | bc)\n    if [ $z -eq $n ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    if [ \"$nth\" = \"$nth_int\" ]; then\n        echo \"$nth\"\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_octagonal\n    local nth_triangular\n    local nth_pentagonal\n    local nth_hexagonal\n    local nth_heptagonal\n    local nth_square\n    local nth_cube\n\n    nth_octagonal=$((n * (3 * n - 2)))\n    nth_triangular=$((n * (n + 1) / 2))\n    nth_pentagonal=$((n * (3 * n - 1) / 2))\n    nth_hexagonal=$((n * (2 * n - 1)))\n    nth_heptagonal=$((n * (5 * n - 3) / 2))\n    nth_square=$((n * n))\n    nth_cube=$((n * n * n))\n\n    if [[ $nth_octagonal == $nth_triangular || \\\n          $nth_octagonal == $nth_pentagonal || \\\n          $nth_octagonal == $nth_hexagonal || \\\n          $nth_octagonal == $nth_heptagonal || \\\n          $nth_octagonal == $nth_square || \\\n          $nth_octagonal == $nth_cube ]]; then\n        echo $nth_octagonal\n    fi",
    "    local n=$1\n    local nth_octagonal=$(octagonal $n)\n    if [ \"$nth_octagonal\" -eq \"$n\" ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local result=$((n * (3 * n - 2)))\n    if [ $result -eq $((a * (3 * a - 2))) ]; then\n        return 0\n    fi\n    if [ $result -eq $((b * (3 * b - 2))) ]; then\n        return 0\n    fi\n    if [ $result -eq $((c * (3 * c - 2))) ]; then\n        return 0\n    fi\n    if [ $result -eq $((d * (3 * d - 2))) ]; then\n        return 0\n    fi\n    if [ $result -eq $((e * (3 * e - 2))) ]; then\n        return 0\n    fi\n    if [ $result -eq $((f * (3 * f - 2))) ]; then\n        return 0\n    fi\n    if [ $result -eq $((g * (3 * g - 2))) ]; then\n       ",
    "    local n=$1\n    local x=$(((sqrt(8*n+1)-1)/2))\n    ((x*(3*x-2) == n))",
    "\tlocal n=$1\n\tlocal x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n\tlocal x_int=$(echo \"$x\" | cut -d. -f1)\n\t[ \"$x\" = \"$x_int\" ]",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    if [ \"$n_sqrt_dec\" == \"0\" ]; then\n        local n_sqrt_plus_1=$(echo \"$n_sqrt + 1\" | bc)\n        local n_sqrt_plus_1_int=$(echo \"$n_sqrt_plus_1\" | cut -d. -f1)\n        local n_sqrt_plus_1_dec=$(echo \"$n_sqrt_plus_1 - $n_sqrt_plus_1_int\" | bc)\n        if [ \"$n_sqrt_plus_1_dec\" == \"0\" ]; then\n            local n_sqrt_plus_1_div_2=$(echo \"$n_sqrt_plus_1 / 2\" | bc)\n            local n_sqrt_plus_1_div_2_int=$(echo \"$n_sqrt_plus_1_div_2\" | cut -d. -f1)\n            local n_sqrt_plus_1_div_2_dec=$(echo \"$n_sqrt_plus_1_div_2 - $n_sqrt_plus_1_div_2_int\" | bc)\n            if [ \"$n_sqrt_plus_1_div_2_dec\" == \"0\" ]; then\n                return 0\n            fi\n        fi\n    fi\n    return 1",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local nth_octagonal=0\n    local nth_octagonal_plus_one=0\n    local nth_octagonal_plus_two=0\n    local nth_octagonal_plus_three=0\n    local nth_octagonal_plus_four=0\n    local nth_octagonal_plus_five=0\n    local nth_octagonal_plus_six=0\n    local nth_octagonal_plus_seven=0\n    local nth_octagonal_plus_eight=0\n    local nth_octagonal_plus_nine=0\n    local nth_octagonal_plus_ten=0\n    local nth_octagonal_plus_eleven=0\n    local nth_octagonal_plus_twelve=0\n    local nth_octagonal_plus_thirteen=0\n    local nth_octagonal_plus_",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [[ $n -eq $octagonal ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local n=$1\n  local nth=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n  local nth_int=$(echo \"$nth\" | cut -d. -f1)\n  [ \"$nth\" == \"$nth_int\" ]",
    "  local n=$1\n  local x=$(echo \"scale=0; sqrt(1 + 24 * $n)\" | bc)\n  local y=$(echo \"scale=0; $x % 6\" | bc)\n  if [ $y -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(2*$n+0.125)+0.5\" | bc)\n    local oct=$((nth*(3*nth-2)))\n    [ $oct -eq $n ] && return 0 || return 1",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n)\" | bc)\n    local b=$(echo \"($a*$a+$a)/2\" | bc)\n    if [ \"$n\" -eq \"$b\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local test=$(echo \"($nth*$nth+$nth)/2\" | bc)\n    if [ \"$n\" -eq \"$test\" ]; then\n        echo \"yes\"\n    else\n        echo \"no\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local y=$(echo \"$x%1\" | bc -l)\n    if [ \"$y\" == \"0\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | sed 's/\\..*//')\n  local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n  if [ $(echo \"$n_sqrt_dec == 0.5\" | bc) -eq 1 ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local x_int=$(echo \"$x\" | cut -d. -f1)\n    if [ \"$x\" == \"$x_int\" ]; then\n        echo \"$n is an octagonal number\"\n    else\n        echo \"$n is not an octagonal number\"\n    fi",
    "  local n=$1\n  local root=$(echo \"scale=0; sqrt(1 + 24 * $n)\" | bc)\n  local test=$(echo \"scale=0; (1 + $root) / 6\" | bc)\n  [[ $test =~ ^[0-9]+$ ]] && return 0 || return 1",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1 + 24 * $n)\" | bc)\n    local b=$(echo \"scale=0; $a % 6\" | bc)\n    [[ $b -eq 0 ]] && return 0 || return 1",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x+0.5\" | bc)\n    [ $z -eq $n ]",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    if [[ \"$n_sqrt_dec\" != \"0\" ]]; then\n        return 1\n    fi\n    local n_test=$(echo \"($n_sqrt_int * $n_sqrt_int * 2) + 1\" | bc)\n    if [[ \"$n_test\" == \"$n\" ]]; then\n        return 0\n    fi\n    return 1",
    "    local -i n=$1\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n    local nth_octagonal_squared=$(echo \"$nth_octagonal * $nth_octagonal\" | bc)\n    local nth_octagonal_times_six=$(echo \"$nth_octagonal_squared * 6\" | bc)\n    local nth_octagonal_plus_one=$(echo \"$nth_octagonal_times_six + 1\" | bc)\n    local nth_octagonal_square_root=$(echo \"scale=0; sqrt($nth_octagonal_plus_one)\" | bc)\n    local nth_octagonal_times_six_plus_one=$(echo \"$nth_octagonal_square_root * $nth_octagonal_square_root\" | bc)\n    if [ \"$nth_octagonal_times_six_plus_one\" -eq \"$nth_octagonal_plus_one\" ]; then\n        echo \"$nth_octagonal\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    [[ $a == [0-9]* ]] && return 0 || return 1",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n    local Ah=1\n",
    "    local n=$1\n    local sqrt=$(echo \"sqrt($n)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | sed 's/\\..*//')\n    local sqrt_frac=$(echo \"$sqrt\" | sed 's/^.*\\.//')\n    if [ \"$sqrt_frac\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_plus_1=$(echo \"$sqrt + 1\" | bc)\n    local sqrt_plus_1_int=$(echo \"$sqrt_plus_1\" | sed 's/\\..*//')\n    local sqrt_plus_1_frac=$(echo \"$sqrt_plus_1\" | sed 's/^.*\\.//')\n    if [ \"$sqrt_plus_1_frac\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_plus_1_div_2=$(echo \"$sqrt_plus_1 / 2\" | bc)\n    local sqrt_plus_1_div_2_int=$(echo \"$sqrt_plus_1_div_2\" | sed 's/\\..*//')\n    local sqrt_plus_1_div_2_frac=$(echo \"$sqrt_plus_1_div_2\" | sed 's/^.*\\.//')\n    if [ \"$sqrt_plus_1_div_2_frac\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$sqrt_plus_1_div_2_int\" != \"$sqrt_int\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1+8*$n)\" | bc)\n    local b=$(echo \"scale=0; $a*$a-8*$n\" | bc)\n    if [ $b -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n    local Ah=1\n",
    "  local n=$1\n  local x\n  x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n  if [[ $x == *.* ]]; then\n    return 1\n  fi\n  return 0",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n  local y=$(echo \"$x % 1\" | bc -l)\n  if [ \"$y\" == \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $nth_octagonal =~ ^[0-9]+$ ]]; then\n        echo $nth_octagonal\n    else\n        echo 0\n    fi",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n  if [[ \"$n_sqrt_dec\" != \"0\" ]]; then\n    return 1\n  fi\n  local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n  local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n  local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f1)\n  local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f2)\n  if [[ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]]; then\n    return 1\n  fi\n  if [[ \"$n_sqrt_plus_1_sqrt_int\" == \"1\" ]]; then\n    return 0\n  fi\n  return 1",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(2*$n)\" | bc)\n    [ $((a*(3*a-2))) -eq $n ]",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x+0.5\" | bc)\n    if [ $z -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [ \"$n\" -eq \"$nth_octagonal\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $nth_octagonal =~ ^[0-9]+$ ]]; then\n        echo $nth_octagonal\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local a=$(echo \"scale=0;sqrt(2*$n)\"|bc)\n    local b=$(echo \"scale=0;$a*($a+1)/2\"|bc)\n    if [ $b -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$((n * 2 / 3))\n    local y=$((x * x))\n    local z=$((y + x))\n    local w=$((z / 2))\n    if [[ $w -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1+8*$n)\" | bc)\n    local b=$(echo \"scale=0; $a*$a\" | bc)\n    local c=$(echo \"scale=0; $b-8*$n\" | bc)\n    if [ $c -eq 0 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_sqrt=$(echo \"sqrt($n_sqrt_int)\" | bc)\n    local n_sqrt_sqrt_int=$(echo \"$n_sqrt_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_sqrt_dec=$(echo \"$n_sqrt_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_sqrt_int\" == \"3\" ]; then\n        return 0\n    fi\n    return 1",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n    local Ah=1\n",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local b=$(echo \"$a % 1\" | bc -l)\n    [ \"$b\" == \"0\" ] && return 0\n    return 1",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local b=$(echo \"$a*$a\" | bc -l)\n    local c=$(echo \"$b-0.5*$a+0.125\" | bc -l)\n    local d=$(echo \"$c-$n\" | bc -l)\n    local e=$(echo \"$d<0.000001\" | bc -l)\n    if [ \"$e\" -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x\" | bc)\n    if [ $z -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)/2\" | bc)\n    if [[ $octagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n  if [ \"$nth_octagonal\" -eq \"$nth_octagonal\" ] 2>/dev/null; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "  local n=$1\n  local x=$(bc <<< \"scale=0; (sqrt(1+24*$n)+1)/6\")\n  [[ $n == $((x*(3*x-2))) ]]",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [[ $n -eq $octagonal ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local a=$(echo \"scale=0; sqrt(1 + 8 * $n)\" | bc)\n  if [[ $a -eq 0 ]]; then\n    return 1\n  fi\n  local b=$(echo \"scale=0; $a * ($a + 1) / 2\" | bc)\n  if [[ $b -eq $n ]]; then\n    return 0\n  fi\n  return 1",
    "    local n=$1\n    local nth_octagonal=$(octagonal $n)\n    if [[ $nth_octagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [ \"$nth_octagonal\" -eq \"$nth_octagonal\" ] 2>/dev/null; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($1)}')\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    [[ $n_sqrt_dec == 0 ]] && [[ $((n_sqrt_int % 4)) == 3 ]] && return 0\n    return 1",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1 + 24 * $n)\" | bc)\n    local b=$(echo \"scale=0; $a % 6\" | bc)\n    [ $b -eq 0 ]",
    "    local n=$1\n    local x=$(( (1 + sqrt(1 + 24 * n)) / 6 ))\n    [[ $x == *.* ]] && return 1\n    return 0",
    "\tlocal n=$1\n\tlocal a=1\n\tlocal b=1\n\tlocal c=1\n\tlocal d=1\n\tlocal e=1\n\tlocal f=1\n\tlocal g=1\n\tlocal h=1\n\tlocal i=1\n\tlocal j=1\n\tlocal k=1\n\tlocal l=1\n\tlocal m=1\n\tlocal o=1\n\tlocal p=1\n\tlocal q=1\n\tlocal r=1\n\tlocal s=1\n\tlocal t=1\n\tlocal u=1\n\tlocal v=1\n\tlocal w=1\n\tlocal x=1\n\tlocal y=1\n\tlocal z=1\n\tlocal A=1\n\tlocal B=1\n\tlocal C=1\n\tlocal D=1\n\tlocal E=1\n\tlocal F=1\n\tlocal G=1\n\tlocal H=1\n\tlocal I=1\n\tlocal J=1\n\tlocal K=1\n\tlocal L=1\n\tlocal M=1\n\tlocal O=1\n\tlocal P=1\n\tlocal Q=1\n\tlocal R=1\n\tlocal S=1\n\tlocal T=1\n\tlocal U=1\n\tlocal V=1\n\tlocal W=1\n\tlocal X=1\n\tlocal Y=1\n\tlocal Z=1\n\tlocal result=0\n\tlocal octagonal=0\n\tlocal nth_octagonal=0\n\tlocal nth_octagonal_number=0\n\tlocal nth_octagonal_number_string=\"\"\n\tlocal nth_octagonal_number_string_length=0\n\tlocal nth_octagonal_number_string_length_minus_one=0\n\tlocal nth_octagonal_number_string_length_minus_two=0\n\tlocal nth_octagonal_number_string_length_minus_three=0\n\tlocal nth_octagonal_number_string_length_minus_four=0\n\tlocal nth_octagonal_number_string_length_minus_five=0\n\tlocal nth_octagonal_number_string_length_minus_six=0\n\tlocal nth_octagonal_number_string_length_minus_seven=0\n\t",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal * (3 * $nth_octagonal - 2)\" | bc)\n    if [[ $octagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x\n    x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    [[ $x =~ ^[0-9]+$ ]]",
    "  local n=$1\n  local nth=$(echo \"scale=0; sqrt(1+8*$n)/2\" | bc)\n  local octagonal=$(echo \"scale=0; $nth*(3*$nth-2)\" | bc)\n  if [ $octagonal -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local n=$1\n  local sqrt_n=$(echo \"sqrt($n)\" | bc)\n  local sqrt_n_int=$(echo \"$sqrt_n\" | cut -d. -f1)\n  local sqrt_n_dec=$(echo \"$sqrt_n\" | cut -d. -f2)\n  if [ \"$sqrt_n_dec\" != \"0\" ]; then\n    return 1\n  fi\n  local sqrt_n_plus_1=$(echo \"$sqrt_n_int + 1\" | bc)\n  local sqrt_n_plus_1_sqr=$(echo \"$sqrt_n_plus_1 * $sqrt_n_plus_1\" | bc)\n  if [ \"$n\" -eq \"$sqrt_n_plus_1_sqr\" ]; then\n    return 0\n  else\n    return 1\n  fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [ $n -eq $octagonal ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 24 * $n) + 1\" | bc)\n    if [ $((nth % 6)) -eq 0 ]; then\n        echo \"$n is an octagonal number\"\n    else\n        echo \"$n is not an octagonal number\"\n    fi",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n  if [[ $n_sqrt_dec != 0 ]]; then\n    return 1\n  fi\n  local n_sqrt_sqrt=$(echo \"sqrt($n_sqrt_int)\" | bc)\n  local n_sqrt_sqrt_int=$(echo \"$n_sqrt_sqrt\" | cut -d. -f1)\n  local n_sqrt_sqrt_dec=$(echo \"$n_sqrt_sqrt\" | cut -d. -f2)\n  if [[ $n_sqrt_sqrt_dec != 0 ]]; then\n    return 1\n  fi\n  if [[ $n_sqrt_sqrt_int != 3 ]]; then\n    return 1\n  fi\n  return 0",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local nth_octagonal=$((a*1+b*8+c*64+d*512+e*4096+f*32768+g*262144+h*2097152+i*16777216+j*134217728+k*1073741824+l*8589934592+m*68719476736+o*549755813888+p*4398046511104+q*35184372088832+r*281474976710656+s*2251799813685248+t*18014398509481984+u*144115188075855872+v*1152921504606846976+w*9223372036854775808+x*73786976294838206464+y*590295810358705651712+z*4722366482869645213696",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 24 * $n) + 1\" | bc)\n    if [[ $(($nth % 6)) -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+8*$n)-1)/2\" | bc)\n  local nth_octagonal_squared=$(echo \"scale=0; $nth_octagonal^2\" | bc)\n  local nth_octagonal_squared_plus_one=$(echo \"scale=0; $nth_octagonal_squared+1\" | bc)\n  local nth_octagonal_squared_plus_one_times_eight=$(echo \"scale=0; $nth_octagonal_squared_plus_one*8\" | bc)\n  if [ \"$nth_octagonal_squared_plus_one_times_eight\" -eq \"$n\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    if [ \"$nth\" == \"$nth_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1+8*$n)/2\" | bc)\n    local octagonal=$(echo \"scale=0; $nth*(3*$nth-2)\" | bc)\n    if [ $octagonal -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x\" | bc)\n    if [ $z -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+8*$n)-1)/2\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [ $n -eq $octagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local y=$(echo \"$x - 1/3\" | bc -l)\n    local z=$(echo \"$y / 1\" | bc -l)\n    local w=$(echo \"$z % 1\" | bc -l)\n    [[ $w == 0 ]]",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | sed 's/\\..*//')\n    if [ $n_sqrt_int -eq $n_sqrt ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+1/3)+1/3\" | bc -l)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    if [ \"$nth\" == \"$nth_int\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local y=$(echo \"$x%1\" | bc -l)\n    if [[ $(echo \"$y == 0\" | bc -l) -eq 1 ]]; then\n        echo \"$n is octagonal\"\n    else\n        echo \"$n is not octagonal\"\n    fi",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n  local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n  local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f1)\n  local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n    return 1\n  fi\n  return 0",
    "    local n=$1\n    local n2=$((n*n))\n    local n3=$((n*n*n))\n    local n4=$((n*n*n*n))\n    local n5=$((n*n*n*n*n))\n    local n6=$((n*n*n*n*n*n))\n    local n7=$((n*n*n*n*n*n*n))\n    local n8=$((n*n*n*n*n*n*n*n))\n    local n9=$((n*n*n*n*n*n*n*n*n))\n    local n10=$((n*n*n*n*n*n*n*n*n*n))\n    local n11=$((n*n*n*n*n*n*n*n*n*n*n))\n    local n12=$((n*n*n*n*n*n*n*n*n*n*n*n))\n    local n13=$((n*n*n*n*n*n*n*n*n*n*n*n*n))\n    local n14=$((n*n*n*n*n*n*n*n*n*n*n*n*n*n))\n    local n15=$((n*n*n*n*n*n*n*n*n*n*n*n*n*n*n))\n    local n16=$((n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n))\n    local n17=$((n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n))\n    local n18=$((n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n))\n    local n19=$((n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n))\n   ",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x+$x-2*$n\" | bc)\n    if [ $y -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x+0.5\" | bc)\n    [ \"$z\" -eq \"$n\" ] && return 0\n    return 1",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1 + 24 * $n) + 1) / 6\" | bc)\n  if [[ $nth_octagonal =~ ^[0-9]+$ ]]; then\n    echo $nth_octagonal\n  else\n    echo 0\n  fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    [ $n_sqrt_int -eq $n_sqrt ]",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local result=$(echo \"$n == $a*$a + $b*$b + $c*$c + $d*$d + $e*$e + $f*$f + $g*$g + $h*$h + $i*$i + $j*$j + $k*$k + $l*$l + $m*$m + $o*$o + $p*$p + $q*$q + $r*$r + $s*$s + $t*$t + $u*$u + $v*$v + $w*$w + $x*$x + $y*$y + $z*$z + $A*$A + $B*$B + $C*$C + $D*$D + $E*$E + $F*$F + $G*$G + $H*$",
    "\tlocal n=$1\n\tlocal x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n\tlocal y=$(echo \"$x*$x\" | bc)\n\tlocal z=$(echo \"$y+0.25\" | bc)\n\tlocal w=$(echo \"$z/2\" | bc)\n\t[ $w -eq $n ]",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n)\" | bc)\n    local b=$(echo \"$a % 1\" | bc)\n    if [ \"$b\" == \"0\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(echo \"scale=0; sqrt(1+8*$n)\" | bc)\n    local y=$(echo \"scale=0; $x*($x+1)/2\" | bc)\n    [ $y -eq $n ] && echo \"true\" || echo \"false\"",
    "    local n=$1\n    local nth_octagonal=$((n * (3 * n - 2)))\n    echo $nth_octagonal",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local _=1\n    local aa=1\n    local bb=1\n    local cc=1\n    local dd=1\n    local ee=1\n    local ff=1\n    local gg=1\n    local hh=1\n    local ii=1\n    local jj=1\n    local kk=1\n    local ll=1\n    local mm=1\n    local oo=1\n    local pp=1\n    local qq=1\n    local rr=1\n    local ss=1\n    local tt=1\n    local uu=1\n    local vv=1\n    local ww=1\n    local xx=1\n    local yy=1\n    local zz=1\n    local Aa=1\n    local Bb=1\n    local Cc=1\n    local Dd=1\n    local Ee=",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n  [[ $x == [0-9]* ]] && return 0\n  return 1",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"2*$x+1\" | bc)\n    local w=$(echo \"$z*$z\" | bc)\n    if [ $y -eq $w ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_octagonal=$((n*(3*n-2)))\n    echo $nth_octagonal",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local octagonal=$(echo \"scale=0; $nth_octagonal*(3*$nth_octagonal-2)\" | bc)\n    if [ $octagonal -eq $n ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_frac=$(echo \"$n_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_frac\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_int_sq=$((n_sqrt_int * n_sqrt_int))\n    local n_sqrt_int_sq_plus_n_sqrt_int=$((n_sqrt_int_sq + n_sqrt_int))\n    if [ \"$n_sqrt_int_sq_plus_n_sqrt_int\" != \"$n\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"($x-1)*($x-1)\" | bc)\n    [ $y -eq $((2*$n+1)) -a $z -eq $((2*$n-1)) ]",
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local _=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_int_sq=$(echo \"$n_sqrt_int * $n_sqrt_int\" | bc)\n    local n_sqrt_int_sq_plus_1=$(echo \"$n_sqrt_int_sq + 1\" | bc)\n    local n_sqrt_int_sq_plus_1_sqrt=$(echo \"sqrt($n_sqrt_int_sq_plus_1)\" | bc)\n    local n_sqrt_int_sq_plus_1_sqrt_int=$(echo \"$n_sqrt_int_sq_plus_1_sqrt\" | cut -d. -f1)\n    local n_sqrt_int_sq_plus_1_sqrt_dec=$(echo \"$n_sqrt_int_sq_plus_1_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_int_sq_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_int_sq_plus_1_sqrt_int\" == \"$n_sqrt_int\" ]; then\n        return 0\n    fi\n    return 1",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+8*$n)-1)/2\" | bc)\n    if [ $nth_octagonal -eq $nth_octagonal 2>/dev/null ]; then\n        echo $nth_octagonal\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f1)\n    local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local nth_octagonal=$((n*(3*n-2)))\n    echo $nth_octagonal",
    "    local n=$1\n    local nth=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    local nth_dec=$(echo \"$nth\" | cut -d. -f2)\n    if [ \"$nth_dec\" == \"0\" ]; then\n        echo \"$nth_int\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local a=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local b=$(echo \"$a*$a\" | bc -l)\n    local c=$(echo \"$b-0.5*$a+0.125\" | bc -l)\n    [ $c -eq $n ] && echo \"true\" || echo \"false\"",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+$x+0.5\" | bc)\n    [ $z -eq $n ]",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"($x*$x+$x)/2\" | bc)\n    [ $y -eq $n ]",
    "  local n=$1\n  local nth_octagonal=$((n*(3*n-2)))\n  echo $nth_octagonal"
  ]
}
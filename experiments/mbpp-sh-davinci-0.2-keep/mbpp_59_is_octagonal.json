{
  "name": "mbpp_59_is_octagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth octagonal number.\n#\n# $1 is an integer\nis_octagonal() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_octagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"65\" ]]\n    [[ $(candidate \"10\") = \"280\" ]]\n    [[ $(candidate \"15\") = \"645\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local M=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n    local X=1\n    local Y=1\n    local Z=1\n    local _=1\n    local aa=1\n    local ab=1\n    local ac=1\n    local ad=1\n    local ae=1\n    local af=1\n    local ag=1\n    local ah=1\n    local ai=1\n    local aj=1\n    local ak=1\n    local al=1\n    local am=1\n    local ao=1\n    local ap=1\n    local aq=1\n    local ar=1\n    local as=1\n    local at=1\n    local au=1\n    local av=1\n    local aw=1\n    local ax=1\n    local ay=1\n    local az=1\n    local Aa=1\n    local Ab=1\n    local Ac=1\n    local Ad=1\n    local Ae=1\n    local Af=1\n    local Ag=1\n",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(2*$n+1/4)+1/2\" | bc)\n    local oct=$(echo \"scale=0; $nth*(3*$nth-2)\" | bc)\n    if [ \"$oct\" -eq \"$n\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n  local x_int=$(echo \"$x\" | cut -d. -f1)\n  local x_frac=$(echo \"$x\" | cut -d. -f2)\n  if [[ $x_frac -eq 0 ]]; then\n    local x_minus_1=$(($x_int - 1))\n    local x_plus_1=$(($x_int + 1))\n    local n_minus_1=$(($x_minus_1 * $x_minus_1 * 2))\n    local n_plus_1=$(($x_plus_1 * $x_plus_1 * 2))\n    if [[ $n -eq $n_minus_1 || $n -eq $n_plus_1 ]]; then\n      echo 1\n    else\n      echo 0\n    fi\n  else\n    echo 0\n  fi",
    "  local n=$1\n  local nth_octagonal=$(octagonal_number $n)\n  local nth_triangular=$(triangular_number $n)\n  local nth_pentagonal=$(pentagonal_number $n)\n  local nth_hexagonal=$(hexagonal_number $n)\n  local nth_heptagonal=$(heptagonal_number $n)\n\n  if [[ $nth_octagonal -eq $nth_triangular ]] ||\n     [[ $nth_octagonal -eq $nth_pentagonal ]] ||\n     [[ $nth_octagonal -eq $nth_hexagonal ]] ||\n     [[ $nth_octagonal -eq $nth_heptagonal ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local aa=1\n  local bb=1\n  local cc=1\n  local dd=1\n  local ee=1\n  local ff=1\n  local gg=1\n  local hh=1\n  local ii=1\n  local jj=1\n  local kk=1\n  local ll=1\n  local mm=1\n  local oo=1\n  local pp=1\n  local qq=1\n  local rr=1\n  local ss=1\n  local tt=1\n  local uu=1\n  local vv=1\n  local ww=1\n  local xx=1\n  local yy=1\n  local zz=1\n  local aaa=1\n  local bbb=1\n  local ccc=1\n  local ddd=1\n  local eee=1\n  local fff=1\n  local ggg=1\n  local hhh=1\n  local iii=1\n  local jjj=1\n  local kkk=1\n  local lll=1\n  local mmm=1\n  local ooo=1\n  local ppp=1\n  local qqq=1\n  local rrr=1\n  local sss=1\n  local ttt=1\n  local uuu=1\n  local vvv=1\n  local www=1\n  local xxx=1\n  local yyy=1\n  local zzz=1\n  local aaaa=1\n  local bbbb=1\n ",
    "    local n=$1\n    local a=$(echo \"scale=0; sqrt(1+8*$n)\" | bc)\n    local b=$(echo \"scale=0; $a%2\" | bc)\n    if [ $b -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $nth_octagonal == [0-9]* ]]; then\n        echo $nth_octagonal\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc)\n    local y=$(echo \"$x*$x\" | bc)\n    local z=$(echo \"$y+0.25\" | bc)\n    local w=$(echo \"$z/2\" | bc)\n    local v=$(echo \"$w+0.5\" | bc)\n    local u=$(echo \"$v*$v\" | bc)\n    local t=$(echo \"$u/2\" | bc)\n    local s=$(echo \"$t+0.25\" | bc)\n    local r=$(echo \"$s/2\" | bc)\n    local q=$(echo \"$r+0.5\" | bc)\n    local p=$(echo \"$q*$q\" | bc)\n    local o=$(echo \"$p/2\" | bc)\n    local m=$(echo \"$o+0.25\" | bc)\n    local l=$(echo \"$m/2\" | bc)\n    local k=$(echo \"$l+0.5\" | bc)\n    local j=$(echo \"$k*$k\" | bc)\n    local i=$(echo \"$j/2\" | bc)\n    local h=$(echo \"$i+0.25\" | bc)\n    local g=$(echo \"$h/2\" | bc)\n    local f=$(echo \"$g+0.5\" | bc)\n    local e=$(echo \"$f*$f\" | bc)\n    local d=$(echo \"$e/2\" | bc)\n    local c=$(echo \"$d+0.25\" | bc)\n    local b=$(echo \"$c/2\" | bc)\n    local a=$(echo \"$b+0.5\" | bc)\n    local result=$(echo \"$a*$a\" | bc)\n    if [[ $result -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(2 * $n + 0.125) + 0.5\" | bc -l)\n  local y=$(echo \"$x * $x + $x - $n\" | bc -l)\n  if [ $(echo \"$y < 0.000001\" | bc -l) -eq 1 ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    if [[ $(echo \"$nth_octagonal*(3*$nth_octagonal-2) == $n\" | bc) -eq 1 ]]; then\n        echo \"$nth_octagonal\"\n    else\n        echo \"0\"\n    fi",
    "  local n=$1\n  local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n  if [[ $nth_octagonal == *.* ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_frac=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_frac\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_plus_1_sqrt_frac=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d'.' -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_frac\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f1)\n    local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_plus_1_sqrt_plus_1=$(echo \"$n_sqrt_plus_1_sqrt_int + 1\" | bc)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1_sqrt_plus_1)\" | bc)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt_plus_1_sqrt\" | cut -d. -f1)\n    local n_sqrt_plus_1_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt_plus_1_sqrt\" | cut -d. -f2)\n    if [ \"$n_sqrt_plus_1_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n        return 1",
    "    local n=$1\n    local x=$(echo \"sqrt(2*$n+0.125)+0.5\" | bc -l)\n    local x_int=$(echo \"$x\" | cut -d. -f1)\n    if [[ \"$x\" == \"$x_int\" ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local root=$(echo \"sqrt(2*$n+0.0625)+0.5\" | bc)\n    local is_int=$(echo \"$root == int($root)\" | bc)\n    if [ $is_int -eq 1 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local r=$(echo \"sqrt(2*$n+1/3)\" | bc -l)\n    local i=$(echo \"$r\" | cut -d. -f1)\n    local d=$(echo \"$r-$i\" | bc -l)\n    if [ $(echo \"$d < 0.000001\" | bc -l) -eq 1 ]; then\n        echo \"$n is an octagonal number\"\n    else\n        echo \"$n is not an octagonal number\"\n    fi",
    "    local n=$1\n    local nth_octagonal=$(echo \"scale=0; (sqrt(1+24*$n)+1)/6\" | bc)\n    local nth_octagonal_square=$(echo \"$nth_octagonal*$nth_octagonal\" | bc)\n    local nth_octagonal_square_plus_one=$(echo \"$nth_octagonal_square+1\" | bc)\n    local nth_octagonal_square_plus_one_div_six=$(echo \"$nth_octagonal_square_plus_one/6\" | bc)\n    local nth_octagonal_square_plus_one_div_six_times_twenty_four=$(echo \"$nth_octagonal_square_plus_one_div_six*24\" | bc)\n    local nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one=$(echo \"$nth_octagonal_square_plus_one_div_six_times_twenty_four+1\" | bc)\n    local nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one_sqrt=$(echo \"scale=0; sqrt($nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one)\" | bc)\n    if [ $nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one_sqrt -eq $nth_octagonal_square_plus_one_div_six_times_twenty_four_plus_one_sqrt 2> /dev/null ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"scale=0; sqrt(1 + 24 * $n)\" | bc)\n    local y=$(echo \"scale=0; $x % 6\" | bc)\n    if [ $y -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_frac=$(echo \"$n_sqrt\" | cut -d'.' -f2)\n    if [[ $n_sqrt_frac != 0 ]]; then\n        return 1\n    fi\n    local n_sqrt_sqrt=$(echo \"sqrt($n_sqrt)\" | bc)\n    local n_sqrt_sqrt_int=$(echo \"$n_sqrt_sqrt\" | cut -d'.' -f1)\n    local n_sqrt_sqrt_frac=$(echo \"$n_sqrt_sqrt\" | cut -d'.' -f2)\n    if [[ $n_sqrt_sqrt_frac != 0 ]]; then\n        return 1\n    fi\n    if [[ $n_sqrt_sqrt_int != 3 ]]; then\n        return 1\n    fi\n    return 0",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n  local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  local n_sqrt_plus_1=$(echo \"$n_sqrt_int + 1\" | bc)\n  local n_sqrt_plus_1_sqrt=$(echo \"sqrt($n_sqrt_plus_1)\" | bc)\n  local n_sqrt_plus_1_sqrt_int=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f1)\n  local n_sqrt_plus_1_sqrt_dec=$(echo \"$n_sqrt_plus_1_sqrt\" | cut -d. -f2)\n  if [ \"$n_sqrt_plus_1_sqrt_dec\" != \"0\" ]; then\n    return 1\n  fi\n  if [ \"$n_sqrt_plus_1_sqrt_int\" != \"2\" ]; then\n    return 1\n  fi\n  return 0"
  ]
}
{
  "name": "mbpp_808_check_K",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check if the given tuples contain the k or not.\n#\n# $1 is a space-separated list\n# $2 is an integer\ncheck_K() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_808_check_K.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    check_K \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 4 5 6 8\" \"6\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"7\") = \"false\" ]]\n    [[ $(candidate \"7 8 9 44 11 12\" \"11\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local k=$2\n    for i in $list; do\n        if [ $i -eq $k ]; then\n            return 0\n        fi\n    done\n    return 1",
    "  local list=$1\n  local k=$2\n  local tuple\n  for tuple in $list; do\n    local a=$(echo $tuple | cut -d, -f1)\n    local b=$(echo $tuple | cut -d, -f2)\n    if [ $a -eq $k ] || [ $b -eq $k ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local tuple=()\n  for i in $list; do\n    tuple+=($i)\n    sum=$((sum + i))\n    if [[ $sum -eq $k ]]; then\n      echo \"${tuple[@]}\"\n      return 0\n    fi\n  done\n  return 1",
    "\tlocal -a list=($1)\n\tlocal k=$2\n\tlocal i\n\tfor ((i=0; i<${#list[@]}; i++)); do\n\t\tif [ ${list[$i]} -eq $k ]; then\n\t\t\treturn 0\n\t\tfi\n\tdone\n\treturn 1",
    "    for i in $1; do\n        if [ $i -eq $2 ]; then\n            echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"",
    "    local -a array\n    local -i i\n    local -i k\n    local -i n\n    local -i sum\n    local -i target\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    target=$((k / 2))\n\n    for ((i = 0; i < n; i++)); do\n        sum=$((array[i] + array[n - i - 1]))\n        if ((sum == k)); then\n            echo \"True\"\n            return 0\n        fi\n    done\n\n    echo \"False\"\n    return 1",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  for tuple in $list; do\n    local sum=0\n    local num\n    for num in $(echo $tuple | tr ',' ' '); do\n      sum=$((sum+num))\n    done\n    if [ $sum -eq $k ]; then\n      echo \"True\"\n      return\n    fi\n  done\n  echo \"False\"",
    "  local list=$1\n  local k=$2\n  local tuple\n  for tuple in $list; do\n    if [[ $tuple == *\"$k\"* ]]; then\n      echo \"True\"\n      return 0\n    fi\n  done\n  echo \"False\"\n  return 1",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  for tuple in $list; do\n    if [[ $tuple == *\"$k\"* ]]; then\n      echo \"True\"\n      return\n    fi\n  done\n  echo \"False\"",
    "    local list=$1\n    local k=$2\n    local tuple\n    for tuple in $list; do\n        if [[ $tuple == *\"$k\"* ]]; then\n            echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"",
    "    local list=$1\n    local k=$2\n    local tuple\n    local sum\n    for tuple in $list; do\n        sum=0\n        for i in $(echo $tuple | sed 's/,/ /g'); do\n            sum=$((sum + i))\n        done\n        if [ $sum -eq $k ]; then\n            echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"",
    "    local list=$1\n    local k=$2\n    local tuple\n    for tuple in $list; do\n        if [[ $tuple == *\"$k\"* ]]; then\n            echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"",
    "    local -a array=(\"$@\")\n    local k=${array[-1]}\n    local -a tuple=(\"${array[@]:0:$#-1}\")\n    local -i sum=0\n    for i in \"${tuple[@]}\"; do\n        ((sum+=i))\n    done\n    ((sum==k)) && echo \"true\" || echo \"false\"",
    "  local list=$1\n  local k=$2\n  local tuple\n  for tuple in $list; do\n    if [[ $tuple == $k ]]; then\n      echo \"True\"\n      return\n    fi\n  done\n  echo \"False\"",
    "    local list=$1\n    local k=$2\n    local tuple\n    for tuple in $list; do\n        if [[ $tuple == $k ]]; then\n            echo \"true\"\n            return\n        fi\n    done\n    echo \"false\"",
    "    local -a list=($1)\n    local k=$2\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            sum=$((list[i]+list[j]))\n            if [[ $sum -eq $k ]]; then\n                echo \"True\"\n                return\n            fi\n        done\n    done\n    echo \"False\"",
    "  local -a arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $k ]]; then\n      echo \"True\"\n      return\n    fi\n  done\n  echo \"False\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  for i in $list; do\n    if [[ $i -eq $k ]]; then\n      echo \"true\"\n      return\n    fi\n  done\n  echo \"false\"",
    "  local list=$1\n  local k=$2\n  local tuple\n  for tuple in $list; do\n    if [[ $tuple == *\"$k\"* ]]; then\n      echo \"True\"\n      return\n    fi\n  done\n  echo \"False\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local found=0\n  for i in $list; do\n    if [ $i -eq $k ]; then\n      found=1\n      break\n    fi\n  done\n  echo $found"
  ]
}
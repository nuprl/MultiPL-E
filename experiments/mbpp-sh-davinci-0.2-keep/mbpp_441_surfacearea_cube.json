{
  "name": "mbpp_441_surfacearea_cube",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the surface area of a cube of a given size.\n#\n# $1 is an integer\nsurfacearea_cube() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_441_surfacearea_cube.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    surfacearea_cube \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"150\" ]]\n    [[ $(candidate \"3\") = \"54\" ]]\n    [[ $(candidate \"10\") = \"600\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  if [[ $# -eq 1 ]]; then\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n      echo $((6 * $1 * $1))\n    else\n      echo \"Argument must be an integer\"\n    fi\n  else\n    echo \"Usage: surfacearea_cube <integer>\"\n  fi",
    "    local size=$1\n    local area=$((6 * $size * $size))\n    echo $area",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  if [ $# -eq 1 ]; then\n    echo \"The surface area of a cube of size $1 is:\"\n    echo \"$((6 * $1 * $1))\"\n  else\n    echo \"Usage: surfacearea_cube <integer>\"\n  fi",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo $((6*$1*$1))\n    else\n        echo \"Error: argument to \\`surfacearea_cube' not a non-negative integer\" >&2\n        return 1\n    fi",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: surfacearea_cube <integer>\"\n    return 1\n  fi\n\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n    echo \"Error: argument must be an integer\"\n    return 1\n  fi\n\n  echo \"6 * $1 * $1\" | bc",
    "    echo $((6 * $1 * $1))",
    "  local side=$1\n  echo $((6 * side * side))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: side length must be greater than 0\"\n        return 1\n    fi\n    echo \"The surface area of a cube with side length $1 is $(($1 * $1 * 6))\"",
    "    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Argument must be an integer.\"\n    fi",
    "    local size=$1\n    echo $((6 * size * size))",
    "    local size=$1\n    echo $((6 * size * size))",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    local size=$1\n    echo \"scale=2; 6 * $size * $size\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((6 * $1 * $1))\"\n    fi",
    "    local size=$1\n    echo $((6 * size * size))",
    "    local size=$1\n    echo \"$((size * size * 6))\"",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"The surface area of a cube of size $1 is: \"\n    echo \"6 * $1 * $1\" | bc\n  else\n    echo \"Error: argument must be an integer\"\n  fi",
    "  echo \"scale=2; 6 * $1^2\" | bc",
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    local size=$1\n    echo $((6 * size * size))",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  local size=$1\n  local area=$((6 * size * size))\n  echo $area",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: side length must be greater than 0\"\n        return 1\n    fi\n\n    echo \"The surface area of a cube with side length $1 is:\"\n    echo \"$((6 * $1 * $1))\"",
    "  echo $(( $1 * $1 * 6 ))",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "  # Check if $1 is an integer\n  if [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n  else\n    echo \"Error: $1 is not an integer\"\n  fi",
    "  echo \"scale=2; 6 * $1^2\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: side must be greater than 0\"\n    fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo $(( $1 * $1 * 6 ))",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"ERROR: Side length must be greater than 0.\"\n        return 1\n    fi\n    echo \"The surface area of a cube with side length $1 is:\"\n    echo \"$(( 6 * $1 * $1 ))\"",
    "    local size=$1\n    echo $((6 * size * size))",
    "  echo \"scale=2; 6*$1^2\" | bc",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((6 * $1 * $1))\"\n    fi",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "  if [[ $1 -gt 0 ]]; then\n    echo $((6 * $1 * $1))\n  else\n    echo \"Error: argument must be a positive integer\"\n  fi",
    "\tlocal size=$1\n\tlocal area=$((6 * size * size))\n\techo $area",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    return 1\n  fi\n\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n\n  echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"",
    "  local size=$1\n  echo $((size * size * 6))",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"ERROR: side length must be greater than 0\"\n        return 1\n    fi\n\n    echo \"6 * $1^2\" | bc",
    "    local size=$1\n    echo $((6 * size * size))",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n  else\n    echo \"The argument must be an integer\"\n  fi",
    "  local size=$1\n  local area=$((6 * size * size))\n  echo $area",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "\techo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]\n    then\n        echo \"The surface area of a cube of size $1 is: $(($1 * $1 * 6))\"\n    else\n        echo \"You must enter an integer.\"\n    fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: argument to surfacearea_cube is not a positive integer\" >&2\n        return 1\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer.\"\n        return 1\n    fi\n\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6)).\"",
    "  local size=$1\n  local area=$((6 * $size * $size))\n  echo $area",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: side must be greater than zero\"\n    fi",
    "    local size=$1\n    echo $((6 * size * size))",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: side must be greater than 0\" >&2\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n    else\n        echo \"Error: argument must be an integer\" >&2\n        return 1\n    fi",
    "  # The surface area of a cube is 6 times the area of one face.\n  # The area of one face is the square of the length of one side.\n  # The length of one side is the cube root of the volume.\n  # The volume of a cube is the cube of the length of one side.\n  #\n  # The cube root of a number is the number raised to the 1/3 power.\n  # The square of a number is the number raised to the 2 power.\n  # The cube of a number is the number raised to the 3 power.\n  #\n  # The square of a number is the number multiplied by itself.\n  # The cube of a number is the number multiplied by itself twice.\n  #\n  # The cube root of a number is the number divided by itself twice.\n  # The square root of a number is the number divided by itself.\n  #\n  # The square root of a number is the cube root of the number divided by itself.\n  # The cube root of a number is the square root of the number divided by itself.\n  #\n  # The square root of a number is the cube root of the number divided by the square root of the number.\n  # The cube root of a number is the square root of the number divided by the cube root of the number.\n  #\n  # The square root of a number is the cube root of the number divided by the cube root of the number.\n  # The cube root of a number is the square root of the number divided by the square root of the number.\n  #\n  # The square root of a number is the cube root of the number divided by the cube root of the number.\n  # The cube root of a number is the square root of the number divided by the square root of the number.\n  #\n  # The square root of a number is the cube root of the number divided by the cube root of the number.\n  # The cube root of a number is the square root of the number divided by the square root of the number.\n  #\n  # The square root of a number is the cube root of the number divided by the cube root of the number.\n  # The cube root of a number is the square root of the number divided by the square root of the number.\n  #\n  # The",
    "  if [[ $1 -gt 0 ]]; then\n    echo $((6 * $1 * $1))\n  else\n    echo \"Error: side must be greater than 0\"\n  fi",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    local size=$1\n    echo \"scale=2; 6 * $size * $size\" | bc",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: $1 is not a valid cube size.\"\n        return 1\n    fi\n\n    echo $((6 * $1 * $1))",
    "    local size=$1\n    local area=$((6 * $size * $size))\n    echo $area",
    "  if [[ $1 =~ ^[0-9]+$ ]]\n  then\n    echo \"The surface area of a cube of size $1 is $(($1*$1*6))\"\n  else\n    echo \"Error: $1 is not an integer\"\n  fi",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: argument must be a positive integer\" >&2\n        return 1\n    fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"Error: side must be greater than 0\"\n    return 1\n  fi\n\n  echo \"The surface area of a cube with side $1 is $(($1 * $1 * 6))\"",
    "  echo \"scale=2; 6 * $1^2\" | bc",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((6 * $1 * $1))\"\n    fi",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((6 * $1 * $1))\"\n    fi",
    "  if [[ $1 -gt 0 ]]; then\n    echo \"The surface area of a cube of size $1 is: $(($1 * $1 * 6))\"\n  else\n    echo \"The size of the cube must be greater than 0.\"\n  fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n  else\n    echo \"Error: argument must be an integer\" >&2\n    return 1\n  fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"Error: side length must be greater than 0\"\n    return 1\n  fi\n  echo \"6 * $1^2\" | bc",
    "  local size=$1\n  local area=$((6 * $size * $size))\n  echo $area",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    local size=$1\n    echo \"scale=2; 6 * $size * $size\" | bc",
    "    local size=$1\n    local area=$(( 6 * $size * $size ))\n    echo $area",
    "    local side=$1\n    echo $((6 * side * side))",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Invalid input\"\n    fi",
    "  if [[ $1 -gt 0 ]]; then\n    echo \"The surface area of a cube of size $1 is: \"\n    echo \"$((6 * $1 * $1))\"\n  else\n    echo \"Please enter a positive integer.\"\n  fi",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n    else\n        echo \"The size of the cube must be greater than 0\"\n    fi",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    local size=$1\n    echo \"scale=2; 6 * $size * $size\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "  local size=$1\n  local area=$(( 6 * size * size ))\n  echo $area",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        echo \"scale=2; 6 * $1 * $1\" | bc\n    else\n        echo \"Error: argument must be an integer\"\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$(( $1 * $1 * 6 ))\"\n    fi",
    "  echo $((6 * $1 * $1))",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: side length must be greater than 0\"\n    else\n        echo \"Surface area of a cube with side length $1 is $(($1 * $1 * 6))\"\n    fi",
    "    if [[ $1 -le 0 ]]; then\n        echo \"Error: side length must be greater than 0\"\n        return 1\n    fi\n    echo \"The surface area of a cube with side length $1 is $(($1 * $1 * 6))\"",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"ERROR: $1 is not a positive integer.\"\n    fi",
    "    local size=$1\n    echo $((6 * $size * $size))",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  local size=$1\n  local area=$((6 * size * size))\n  echo $area",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: argument must be greater than 0\"\n    fi",
    "  if [[ $1 -gt 0 ]]; then\n    echo $((6 * $1 * $1))\n  else\n    echo \"Error: argument must be greater than 0\"\n  fi",
    "  local size=$1\n  local area=$((6 * size * size))\n  echo $area",
    "    local side=$1\n    echo $((6 * $side * $side))",
    "  local size=$1\n  local area=$((6 * size * size))\n  echo $area",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: argument must be greater than 0\" >&2\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6)).\"\n    else\n        echo \"Error: argument must be a positive integer.\" >&2\n        return 1\n    fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"The surface area of a cube of size $1 is $(($1*$1*6))\"\n  else\n    echo \"Please enter a valid integer.\"\n  fi",
    "    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        exit 1\n    fi\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"",
    "  local size=$1\n  echo $((size * size * 6))",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "\techo \"scale=2; 6 * $1^2\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n    else\n        echo \"Argument must be an integer\"\n    fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    if [[ $# -ne 1 ]] || [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    echo \"Surface area of a cube of size $1 is $(($1 * $1 * 6)).\"",
    "    local cube_size=$1\n    local surface_area=$((6 * cube_size * cube_size))\n    echo $surface_area",
    "    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: argument must be an integer.\"\n        return 1\n    fi\n\n    echo \"6 * $1^2\" | bc",
    "    local size=$1\n    echo $((6 * $size * $size))",
    "  local size=$1\n  echo $((size * size * 6))",
    "    echo $((6 * $1 * $1))",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6)).\"\n    else\n        echo \"Error: argument must be an integer.\"\n    fi",
    "  local size=$1\n  echo $((6 * size * size))",
    "  local size=$1\n  echo \"scale=2; 6 * $size * $size\" | bc",
    "  local side=$1\n  echo \"scale=4; 6 * $side * $side\" | bc",
    "    local size=$1\n    local area=$((6 * $size * $size))\n    echo $area",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    local size=$1\n    echo \"scale=2; 6 * $size * $size\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    local size=$1\n    echo $((6 * size * size))",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: argument must be a positive integer\" >&2\n        return 1\n    fi",
    "  if [[ $# -ne 1 ]]; then\n    echo \"Usage: $0 <integer>\"\n    return 1\n  fi\n\n  if [[ $1 -lt 1 ]]; then\n    echo \"Error: $1 is not a positive integer\"\n    return 1\n  fi\n\n  echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6)).\"",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo $((6 * $1 * $1))\n    else\n        echo \"Error: argument to surfacearea_cube is not a positive integer\" >&2\n        return 1\n    fi",
    "    if [[ $1 -gt 0 ]]; then\n        echo $((6*$1*$1))\n    else\n        echo \"Error: argument must be a positive integer\" >&2\n        return 1\n    fi",
    "  if [[ $1 -gt 0 ]]; then\n    echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6))\"\n  else\n    echo \"Error: size must be greater than 0\"\n  fi",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  local size=$1\n  local area=$((6 * size * size))\n  echo $area",
    "    echo $((6 * $1 * $1))",
    "    local size=$1\n    local area=$((6 * size * size))\n    echo $area",
    "    local size=$1\n    echo \"scale=2; 6 * $size * $size\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"Surface area of a cube of size $1 is: $(($1 * $1 * 6))\"\n  else\n    echo \"Error: '$1' is not a valid integer.\"\n  fi",
    "    local size=$1\n    echo $((6 * size * size))",
    "    local size=$1\n    local area=$((6 * $size * $size))\n    echo $area",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    echo \"6 * $1^2\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Surface area of a cube of size $1 is $((6 * $1 * $1))\"\n    else\n        echo \"Error: argument must be an integer\" >&2\n        return 1\n    fi",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "  echo \"scale=2; 6 * $1 * $1\" | bc",
    "  local size=$1\n  echo $((6*size*size))",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  local size=$1\n  echo $((6 * $size * $size))",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "  echo \"scale=2; 6 * $1 ^ 2\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "    echo \"scale=2; 6 * $1 * $1\" | bc",
    "\tlocal size=$1\n\tlocal area=$((6 * size * size))\n\techo $area",
    "    local size=$1\n    echo $((6 * $size * $size))",
    "    echo \"scale=2; 6 * $1^2\" | bc",
    "  local size=$1\n  echo $((6 * size * size))",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The surface area of a cube of size $1 is $(($1 * $1 * 6)).\"\n    else\n        echo \"Error: argument must be an integer.\" >&2\n        return 1\n    fi",
    "    local size=$1\n    echo \"$((6 * size * size))\"",
    "  local size=$1\n  echo $((6 * size * size))"
  ]
}
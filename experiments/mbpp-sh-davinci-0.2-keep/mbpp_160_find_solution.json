{
  "name": "mbpp_160_find_solution",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=false\n\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=true\n            break\n        fi\n        x=$((x + 1))\n    done\n\n    if [ $found = true ]; then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local r_prev=0\n    local x_prev=0\n    local y_prev=0\n    local q_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local r_prev_prev=0\n    local q_prev_prev=0\n    local x_prev_prev_prev=0\n    local y_prev_prev_prev=0\n    local r_prev_prev_prev=0\n    local q_prev_prev_prev=0\n    local x_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]\n  do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]\n    then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]\n  then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_out=0\n    local y_out=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0,0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0,0\"\n        else\n            if [ $n -eq $b ]; then\n                echo \"1,0\"\n            else\n                echo \"None\"\n            fi\n        fi\n        return\n    fi\n\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0,0\"\n        else\n            if [ $n -eq $a ]; then\n                echo \"0,1\"\n            else\n                echo \"None\"\n            fi\n        fi\n        return\n    fi\n\n    if [ $n -eq 0 ]; then\n        echo \"0,0\"\n        return\n    fi\n\n    if [ $n -eq $a ]; then\n        echo \"0,1\"\n        return\n    fi\n\n    if [ $n -eq $b ]; then\n        echo \"1,0\"\n        return\n    fi\n\n    if [ $n -gt $a ]; then\n        if [ $n -gt $b ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $n -lt $a ]; then\n        if [ $n -lt $b ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -eq $b ]; then\n        if [ $n -eq $a ]; then\n            echo \"1,1\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -lt",
    "  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local r=1\n  local q=0\n  local x1=1\n  local x2=0\n  local y1=0\n  local y2=1\n  while [ $r -ne 0 ]; do\n    q=$(( $n / $b ))\n    r=$(( $n % $b ))\n    x=$(( $x2 - $q * $x1 ))\n    y=$(( $y2 - $q * $y1 ))\n    n=$b\n    b=$r\n    x2=$x1\n    x1=$x\n    y2=$y1\n    y1=$y\n  done\n  if [ $n -ne 1 ]; then\n    echo \"None\"\n  else\n    echo \"($x2, $y2)\"\n  fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=1\n    local q=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    local temp=0\n    while [ $r -ne 0 ]; do\n        q=$(( $n / $b ))\n        r=$(( $n % $b ))\n        temp=$(( $x2 - $q * $x1 ))\n        x2=$x1\n        x1=$temp\n        temp=$(( $y2 - $q * $y1 ))\n        y2=$y1\n        y1=$temp\n        n=$b\n        b=$r\n    done\n    if [ $n -ne 1 ]; then\n        echo \"None\"\n    else\n        x=$x2\n        y=$y2\n        echo \"($x, $y)\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    local x_min=0\n    local y_min=0\n    local x_mid=0\n    local y_mid=0\n    local x_mid_prev=0\n    local y_mid_prev=0\n    local x_mid_prev_prev=0\n    local y_mid_prev_prev=0\n    local x_mid_prev_prev_prev=0\n    local y_mid_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_mid_prev_prev_prev_prev_prev",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_incr))\n        y=$((y+y_incr))\n        if [ $((a*x)) -eq $n ]; then\n            echo $x $y\n            return\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"",
    "    local n=$1\n    local a=$2\n    local b=$3\n    local x=0\n    local y=0\n    local x_found=false\n    local y_found=false\n    while true; do\n        if (( $((a*x)) == $((n)) )); then\n            x_found=true\n            break\n        fi\n        if (( $((a*x)) > $((n)) )); then\n            break\n        fi\n        (( x++ ))\n    done\n    while true; do\n        if (( $((b*y)) == $((n)) )); then\n            y_found=true\n            break\n        fi\n        if (( $((b*y)) > $((n)) )); then\n            break\n        fi\n        (( y++ ))\n    done\n    if [[ \"$x_found\" == true && \"$y_found\" == true ]]; then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -le $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        temp=$x_incr\n        x_incr=$((x_incr - y_incr))\n        y_incr=$temp\n        x=$((x + x_incr))\n        y=$((y - y_incr))\n    done\n    echo \"None\"\n    return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local r=0\n  local q=0\n  local r_prev=0\n  local x_prev=0\n  local y_prev=0\n  local q_prev=0\n  local x_prev_prev=0\n  local y_prev_prev=0\n  local r_prev_prev=0\n  local q_prev_prev=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    for ((x=0; x<=x_max; x++)); do\n        for ((y=0; y<=y_max; y++)); do\n            if [ $((a*x + b*y)) -eq $n ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"\n    return 1",
    "  local n=$1\n  local a=$2\n  local b=$3\n  local x=0\n  local y=0\n  local result=\"\"\n  local found=0\n  while [ $x -le $n ]\n  do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]\n    then\n      result=\"$x $y\"\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]\n  then\n    echo \"$result\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_start=$((-x_step))\n    local y_start=$((-y_step))\n    local x_end=$((x_step))\n    local y_end=$((y_step))\n    local x_range=$((x_step * 2))\n    local y_range=$((y_step * 2))\n    local x_count=0\n    local y_count=0\n    local x_found=0\n    local y_found=0\n    local x_solution=0\n    local y_solution=0\n    local x_solutions=()\n    local y_solutions=()\n    local solutions=()\n    local solution=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$(( ($n - $a * $x) / $b ))\n    if [ $(( $a * $x + $b * $y )) -eq $n ]; then\n      found=1\n      break\n    fi\n    x=$(( $x + 1 ))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $x * $1 + $y * $2 )) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"No solution\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( n > 0 )); do\n        if (( n >= a )); then\n            n=$(( n - a ))\n            x=$(( x + x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( n == 0 )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=false\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=true\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found = true ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=0\n    local y_decr=0\n    local x_decr=0\n    local y_incr=0\n    local x_incr_y_decr=0\n    local x_decr_y_incr=0\n    local x_incr_y_incr=0\n    local x_decr_y_decr=0\n    local x_incr_y_decr_n=0\n    local x_decr_y_incr_n=0\n    local x_incr_y_incr_n=0\n    local x_decr_y_decr_n=0\n    local x_incr_y_decr_n_n=0\n    local x_decr_y_incr_n_n=0\n    local x_incr_y_incr_n_n=0\n    local x_decr_y_decr_n_n=0\n    local x_incr_y_decr_n_n_n=0\n    local x_decr_y_incr_n_n_n=0\n    local x_incr_y_incr_n_n_n=0\n    local x_decr_y_decr_n_n_n=0\n    local x_incr_y_decr_n_n_n_n=0\n    local x_decr_y_incr_n_n_n_n=0\n    local x_incr_y_incr_n_n_n_n=0\n    local x_decr_y_decr_n_n_n_n=0\n    local x_incr_y_decr_n_n_n_n_n=0\n    local x_decr_y_incr_n_n_n_n_n=0\n    local x_incr_y_incr_n_n_n_n_n=0\n    local x_decr_y_decr_n",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=0\n    local x_result=0\n    local y_result=0\n    local x_result_old=0\n    local y_result_old=0\n    local x_result_new=0\n    local y_result_new=0\n    local x_result_new_old=0\n    local y_result_new_old=0\n    local x_result_new_new=0\n    local y_result_new_new=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return 0\n    fi\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n        return 1\n    fi\n\n    if [ $a -eq 0 ] && [ $b -ne 0 ]; then\n        if [ $((n % b)) -eq 0 ]; then\n            echo \"0 $((n / b))\"\n            return 0\n        else\n            echo \"None\"\n            return 1\n        fi\n    fi\n\n    if [ $a -ne 0 ] && [ $b -eq 0 ]; then\n        if [ $((n % a)) -eq 0 ]; then\n            echo \"$((n / a)) 0\"\n            return 0\n        else\n            echo \"None\"\n            return 1\n        fi\n    fi\n\n    if [ $a -ne 0 ] && [ $b -ne 0 ]; then\n        if [ $((n % gcd(a, b))) -eq 0 ]; then\n            x_result=$((n / gcd(a, b)))\n            y_result=$((n / gcd(a, b)))\n            x_result_old=$((n / gcd(a, b)))\n            y_result_old=$((n / gcd(a, b)))\n            x_result_new=$((n / gcd(a, b)))\n            y_result_new=$((n / gcd(a, b)))\n            x_result_new_old=$((",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_incr))\n        y=$((y+y_incr))\n        if [ $((a*x)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n            x=$((x+x_incr))\n            y=$((y+y_incr))\n        fi\n    done\n    echo \"None\"\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n\n    local x=0\n    local y=0\n\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n\n    return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_inc=1\n  local y_inc=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    x=$((x+x_inc))\n    y=$((y+y_inc))\n    if [ $((a*x)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]; then\n      temp=$x\n      x=$((x-x_inc))\n      y=$((y-y_inc))\n      x_inc=$((-y_inc))\n      y_inc=$((temp-x))\n    fi\n  done\n  echo \"None\"\n  return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_inc ))\n        else\n            temp=$x_inc\n            x_inc=$y_inc\n            y_inc=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    a=$1\n    b=$2\n    n=$3\n    for x in $(seq 0 $((n))); do\n        for y in $(seq 0 $((n))); do\n            if [ $((a * x + b * y)) -eq $n ]; then\n                echo $x $y\n                return 0\n            fi\n        done\n    done\n    echo None\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_found=false\n    local y_found=false\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_range=$((x_max - x_min))\n    local y_range=$((y_max - y_min))\n    local x_range_half=$((x_range / 2))\n    local y_range_half=$((y_range / 2))\n    local x_mid=$((x_min + x_range_half))\n    local y_mid=$((y_min + y_range_half))\n    local x_mid_value=$((a * x_mid))\n    local y_mid_value=$((b * y_mid))\n    local x_mid_value_plus_y_mid_value=$((x_mid_value + y_mid_value))\n    local x_mid_value_minus_y_mid_value=$((x_mid_value - y_mid_value))\n    local x_mid_value_plus_y_mid_value_abs=$((x_mid_value_plus_y_mid_value < 0 ? -x_mid_value_plus_y_mid_value : x_mid_value_plus_y_mid_value))\n    local x_mid_value_minus_y_mid_value_abs=$((x_mid_value_minus_y_mid_value < 0 ? -x_mid_value_minus_y_mid_value : x_mid_value_minus_y_mid_value))\n    local x_mid_value_plus_y_mid_value_abs_min=$((x_mid_value_plus_y_mid_value_abs < x_mid_value_minus_y_mid_value_abs ? x_mid_value_plus_y_mid_value_abs : x_mid_value_minus_y_mid_value_abs))\n    local x_mid_value",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local r=0\n  local q=0\n  local r1=0\n  local r2=0\n  local q1=0\n  local q2=0\n  local x1=0\n  local x2=0\n  local y1=0\n  local y2=0\n  local i=0\n  local j=0\n  local k=0\n  local m=0\n  local n=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a1=0\n  local b1=0\n  local c1=0\n  local d1=0\n  local e1=0\n  local f1=0\n  local g1=0\n  local h1=0\n  local i1=0\n  local j1=0\n  local k1=0\n  local l1=0\n  local m1=0\n  local n1=0\n  local o1=0\n  local p1=0\n  local q1=0\n  local r1=0\n  local s1=0\n  local t1=0\n  local u1=0\n  local v1=0\n  local w1=0\n  local x1=0\n  local y1=0\n  local z1=0\n  local a2=0\n  local b2=0\n  local c2=0\n  local d2=0\n  local e2=0\n  local f2=0\n  local g2=0\n  local h2=0\n  local i2=0\n  local j2=0\n  local k2=0\n  local l2=0\n  local m2=0\n  local n2=0\n  local o2=0\n  local p2=0\n  local q2=0\n  local r2=0\n  local s2=0\n  local",
    "    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local tmp=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n    local tmp65=0\n    local tmp66=0\n    local tmp67=0\n    local tmp68=0\n    local tmp69=0",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    for ((x = 0; x <= x_max; x++)); do\n        for ((y = 0; y <= y_max; y++)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"\n    return 1",
    "    if [ $1 -eq 0 ]; then\n        echo \"($3, 0)\"\n        return\n    fi\n    if [ $3 -eq 0 ]; then\n        echo \"(0, $2)\"\n        return\n    fi\n    if [ $1 -eq $3 ]; then\n        echo \"($1, 0)\"\n        return\n    fi\n    if [ $2 -eq $3 ]; then\n        echo \"(0, $2)\"\n        return\n    fi\n    if [ $1 -gt $3 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $2 -gt $3 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -lt $2 ]; then\n        find_solution $2 $1 $3\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -gt $2 ]; then\n        find_solution $1 $2 $3\n        return\n    fi",
    "    if [ $1 -eq 0 ]; then\n        if [ $3 -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $3 -eq 0 ]; then\n            echo \"0 $2\"\n        else\n            if [ $3 -lt 0 ]; then\n                find_solution $1 $2 $(( $3 + $1 ))\n            else\n                find_solution $1 $2 $(( $3 - $1 ))\n            fi\n        fi\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local gcd=$(gcd $a $b)\n    if [ $((n % gcd)) -ne 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local a_prime=$((a / gcd))\n    local b_prime=$((b / gcd))\n    local n_prime=$((n / gcd))\n    local x_prime=$(find_solution $b_prime $((a_prime % b_prime)) 1)\n    local y_prime=$(((n_prime - a_prime * x_prime) / b_prime))\n    echo \"($x_prime, $y_prime)\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local result=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      result=\"$x $y\"\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$result\"\n  fi",
    "  local x=0\n  local y=0\n  local n=$1\n  local a=$2\n  local b=$3\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n ",
    "    x=0\n    y=0\n    while [ $(( $1 * $x )) -le $3 ]; do\n        if [ $(( $3 - ($1 * $x) )) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $(( $3 - ($1 * $x) )) -eq $2 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$(( $x + 1 ))\n    done\n    x=0\n    while [ $(( $2 * $y )) -le $3 ]; do\n        if [ $(( $3 - ($2 * $y) )) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $(( $3 - ($2 * $y) )) -eq $1 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        y=$(( $y + 1 ))\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=()\n    while [ $((a * x)) -lt $n ]; do\n        y=$(((n - (a * x)) / b))\n        if [ $((a * x + b * y)) -eq $n ]; then\n            result=(\"$x\" \"$y\")\n            break\n        fi\n        x=$((x + 1))\n    done\n    echo ${result[@]}",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    x=$((x+x_incr))\n    y=$((y+y_incr))\n    if [ $((a*x)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]; then\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"\n  return 1",
    "    if [ $1 -eq 0 ]; then\n        echo \"($2, $3)\"\n    elif [ $2 -eq 0 ]; then\n        echo \"($1, $3)\"\n    elif [ $3 -eq 0 ]; then\n        echo \"($1, $2)\"\n    elif [ $1 -eq $2 ]; then\n        if [ $3 -eq $1 ]; then\n            echo \"($1, $2)\"\n        else\n            echo \"None\"\n        fi\n    elif [ $1 -eq $3 ]; then\n        if [ $2 -eq $1 ]; then\n            echo \"($1, $2)\"\n        else\n            echo \"None\"\n        fi\n    elif [ $2 -eq $3 ]; then\n        if [ $1 -eq $2 ]; then\n            echo \"($1, $2)\"\n        else\n            echo \"None\"\n        fi\n    elif [ $1 -gt $2 ]; then\n        if [ $1 -gt $3 ]; then\n            if [ $2 -gt $3 ]; then\n                find_solution $(( $1 - $2 )) $2 $3\n            else\n                find_solution $(( $1 - $3 )) $2 $3\n            fi\n        else\n            find_solution $(( $1 - $3 )) $2 $3\n        fi\n    elif [ $2 -gt $3 ]; then\n        if [ $2 -gt $1 ]; then\n            if [ $3 -gt $1 ]; then\n                find_solution $1 $(( $2 - $3 )) $3\n            else\n                find_solution $1 $(( $2 - $1 )) $3\n            fi\n        else\n            find_solution $1 $(( $2 - $1 )) $3\n        fi\n    else\n        if [ $3 -gt $1 ]; then\n            if [ $3 -gt $2 ]; then\n                find_solution $1 $2 $(( $3 - $2 ))\n            else\n                find_solution $1 $2 $(( $3 - $1 ))\n            fi\n        else\n            find_solution $1 $2 $(( $3 - $1 ))\n        fi\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n    if [ $3 -lt 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $2 -lt 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -gt $2 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -gt $1 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq $3 ]; then\n        echo \"1 0\"\n        return\n    fi\n    if [ $2 -eq $3 ]; then\n        echo \"0 1\"\n        return\n    fi\n    if [ $1 -gt $2 ]; then\n        if [ $3 -gt $2 ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $2 -gt $1 ]; then\n        if [ $3 -gt $1 ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $3 -gt $1 ]; then\n        if [ $2 -gt $1 ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"None",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=1\n    local q=0\n    local r_prev=0\n    local q_prev=0\n    local x_prev=1\n    local y_prev=0\n    local x_next=0\n    local y_next=0\n\n    while [ $r -ne 0 ]; do\n        q=$(( $n / $b ))\n        r=$(( $n % $b ))\n        x_next=$(( $x_prev - $q * $x ))\n        y_next=$(( $y_prev - $q * $y ))\n        x_prev=$x\n        y_prev=$y\n        x=$x_next\n        y=$y_next\n        n=$b\n        b=$r\n    done\n    if [ $n -ne 1 ]; then\n        echo \"None\"\n    else\n        echo \"($x_prev, $y_prev)\"\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_max=$((n / a))\n  local y_max=$((n / b))\n  local x_min=$((-n / a))\n  local y_min=$((-n / b))\n  for ((x=x_min; x<=x_max; x++)); do\n    for ((y=y_min; y<=y_max; y++)); do\n      if ((a * x + b * y == n)); then\n        echo \"$x $y\"\n        return\n      fi\n    done\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_out=0\n    local y_out=0\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n        return 1\n    fi\n    if [ $a -eq 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $((n % b)) -eq 0 ]; then\n                y=$((n / b))\n                echo \"0 $y\"\n                return 0\n            fi\n            if [ $((n % b)) -ne 0 ]; then\n                echo \"None\"\n                return 1\n            fi\n        fi\n    fi\n    if [ $a -ne 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $((n % a)) -eq 0 ]; then\n                x=$((n / a))\n                echo \"$x 0\"\n                return 0\n            fi\n            if [ $((n % a)) -ne 0 ]; then\n                echo \"None\"\n                return 1\n            fi\n        fi\n    fi\n    if [ $a -ne 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $((n % a)) -eq 0 ]; then\n                x=$((n / a))\n                echo \"$x",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a % b))\n        x=$((x2 - q * x1))\n        y=$((y2 - q * y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    if [ $a -ne $n ]; then\n        echo \"None\"\n    else\n        echo \"($x2, $y2)\"\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -le $n ]; do\n    if [ $((a*x + b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*(x+x_incr) + b*(y+y_incr))) -le $n ]; then\n      x=$((x+x_incr))\n      y=$((y+y_incr))\n    else\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n        y=$((n-a*x))\n    done\n    echo \"None\"\n    return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"",
    "    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $x * $1 + $y * $2 )) -eq $3 ]; then\n                echo $x $y\n                return 0\n            fi\n        done\n    done\n    return 1",
    "    local n=$1\n    local a=$2\n    local b=$3\n    local x=0\n    local y=0\n    local result=\"\"\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            result=\"$x $y\"\n            break\n        fi\n        x=$((x+1))\n    done\n    echo $result",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    local q=0\n    local r=0\n    while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a % b))\n        x=$((x2 - q * x1))\n        y=$((y2 - q * y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    d=$a\n    x=$x2\n    y=$y2\n    if [ $((n % d)) -ne 0 ]; then\n        echo \"None\"\n    else\n        echo \"($x, $y)\"\n    fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    while [ $((a * x)) -lt $n ]; do\n        if [ $((n - a * x)) -eq 0 ]; then\n            echo \"($x, $y)\"\n            return 0\n        fi\n        if [ $((n - a * x)) -lt $b ]; then\n            echo \"None\"\n            return 1\n        fi\n        x=$((x + 1))\n        y=$(((n - a * x) / b))\n    done\n    echo \"None\"\n    return 1",
    "  a=$1\n  b=$2\n  n=$3\n  if [ $n -lt 0 ]; then\n    echo \"No solution\"\n    return\n  fi\n  if [ $n -eq 0 ]; then\n    echo \"0 0\"\n    return\n  fi\n  if [ $a -eq 0 ]; then\n    if [ $b -eq 0 ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n -lt $b ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n -eq $b ]; then\n      echo \"0 1\"\n      return\n    fi\n    if [ $n -gt $b ]; then\n      echo \"No solution\"\n      return\n    fi\n  fi\n  if [ $b -eq 0 ]; then\n    if [ $a -eq 0 ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n -lt $a ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n -eq $a ]; then\n      echo \"1 0\"\n      return\n    fi\n    if [ $n -gt $a ]; then\n      echo \"No solution\"\n      return\n    fi\n  fi\n  if [ $a -eq $b ]; then\n    if [ $n -lt $a ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n -eq $a ]; then\n      echo \"1 1\"\n      return\n    fi\n    if [ $n -gt $a ]; then\n      echo \"No solution\"\n      return\n    fi\n  fi\n  if [ $a -gt $b ]; then\n    if [ $n -lt $a ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n -eq $a ]; then\n      echo \"1 0\"\n      return\n    fi\n    if [ $n -gt $a ]; then\n      echo \"No solution\"\n      return\n    fi\n  fi\n  if [ $a -lt $b ]; then\n    if [ $n -lt $b ]; then\n      echo \"No solution\"\n      return\n    fi\n    if [ $n",
    "    for (( x = 0; x <= $1; x++ )); do\n        for (( y = 0; y <= $2; y++ )); do\n            if (( $(( $1 * $x + $2 * $y )) == $3 )); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local gcd=0\n  local solution=0\n\n  gcd=$(gcd $a $b)\n  if [ $((n % gcd)) -ne 0 ]; then\n    echo \"None\"\n    return\n  fi\n\n  solution=$(extended_gcd $a $b)\n  x=$(echo $solution | cut -d ' ' -f 1)\n  y=$(echo $solution | cut -d ' ' -f 2)\n  echo \"($x, $y)\"",
    "    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        x=$(($3 / $1))\n        y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"($x, 0)\"\n        else\n            find_solution $2 $(( $1 % $2 )) $y\n        fi\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $a -eq 1 ] && [ $b -eq 1 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n    if [ $a -eq 1 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        else\n            if [ $n -lt $b ]; then\n                echo \"None\"\n                return\n            else\n                q=$((n/b))\n                r=$((n%b))\n                if [ $r -eq 0 ]; then\n                    echo \"0 $q\"\n                    return\n                else\n                    echo \"None\"\n                    return\n                fi\n            fi\n        fi\n    fi\n    if [ $b -eq 1 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        else\n            if [ $n -lt $a ]; then\n                echo \"None\"\n                return\n            else\n                q=$((n/a))\n                r=$((n%a))\n                if [ $r -eq 0 ]; then\n                    echo \"$q 0\"\n                    return\n                else\n                    echo \"None\"\n                    return\n                fi\n            fi\n        fi\n    fi\n   ",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=1\n    local y_step=1\n    local x_start=0\n    local y_start=0\n    local x_end=0\n    local y_end=0\n    local x_range=0\n    local y_range=0\n    local x_range_max=0\n    local y_range_max=0\n    local x_range_min=0\n    local y_range_min=0\n    local x_range_step=0\n    local y_range_step=0\n    local x_range_start=0\n    local y_range_start=0\n    local x_range_end=0\n    local y_range_end=0\n    local x_range_length=0\n    local y_range_length=0\n    local x_range_length_max=0\n    local y_range_length_max=0\n    local x_range_length_min=0\n    local y_range_length_min=0\n    local x_range_length_step=0\n    local y_range_length_step=0\n    local x_range_length_start=0\n    local y_range_length_start=0\n    local x_range_length_end=0\n    local y_range_length_end=0\n    local x_range_length_length=0\n    local y_range_length_length=0\n    local x_range_length_length_max=0\n    local y_range_length_length_max=0\n    local x_range_length_length_min=0\n    local y_range_length_length_min=0\n    local x_range_length_length_step=0\n    local y_range_length_length_step=0\n    local x_range_length_length_start=0\n    local y_range",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=0\n    while [ $((b*y)) -lt $n ]; do\n      if [ $((a*x+b*y)) -eq $n ]; then\n        echo \"$x $y\"\n        return 0\n      fi\n      y=$((y+1))\n    done\n    x=$((x+1))\n  done\n  echo \"None\"",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=0\n    local q=0\n    local r_prev=0\n    local q_prev=0\n    local x_prev=0\n    local y_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local x_tmp=0\n    local y_tmp=0\n    local r_tmp=0\n    local q_tmp=0\n    local a_tmp=0\n    local b_tmp=0\n    local n_tmp=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local m",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local gcd=0\n    local x1=0\n    local y1=0\n    local x2=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_temp=0\n    local y_temp=0\n    local x_temp1=0\n    local y_temp1=0\n    local x_temp2=0\n    local y_temp2=0\n    local x_temp3=0\n    local y_temp3=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n        return\n    fi\n\n    if [ $a -eq 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -lt 0 ]; then\n                y=$(($n / $b))\n                if [ $y -eq 0 ]; then\n                    echo \"None\"\n                    return\n                fi\n                if [ $y -ne 0 ]; then\n                    if [ $(( $n % $b )) -eq 0 ]; then\n                        echo \"0 $y\"\n                        return\n                    fi\n                    if [ $(( $n % $b )) -ne 0 ]; then\n                        echo \"None\"\n                        return\n                    fi\n                fi\n            fi\n            if [ $n -gt 0 ]; then\n                y=$(($n / $b))\n                if [ $y -eq 0 ]; then\n                    echo \"None\"\n                    return\n                fi\n                if [ $y -ne 0 ]; then\n                    if [ $(( $n % $b )) -eq 0 ]; then\n                        echo \"0 $y\"\n                        return\n                    fi\n                    if [ $(( $n % $b )) -ne 0 ]; then\n                        echo \"None\"",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    a=$1\n    b=$2\n    n=$3\n    for (( x=0; x<=n; x++ )); do\n        for (( y=0; y<=n; y++ )); do\n            if [ $(($a*$x + $b*$y)) -eq $n ]; then\n                echo $x $y\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=0\n    while [ $((b*y)) -lt $n ]; do\n      if [ $((a*x+b*y)) -eq $n ]; then\n        echo $x $y\n        return 0\n      fi\n      y=$((y+1))\n    done\n    x=$((x+1))\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$(( $n - $a * $x ))\n        if [ $(( $y % $b )) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$(( $x + 1 ))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    x=0\n    y=0\n    while [ $x -le $1 ]\n    do\n        while [ $y -le $2 ]\n        do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n            then\n                echo \"$x $y\"\n                return 0\n            fi\n            y=$(( $y + 1 ))\n        done\n        x=$(( $x + 1 ))\n    done\n    echo \"None\"\n    return 1",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=1\n    local q=1\n    local x1=0\n    local x2=1\n    local y1=1\n    local y2=0\n    local temp=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n    local temp59=0\n    local temp60=0\n    local temp61=0\n    local temp62=0\n    local temp63=0\n   ",
    "    # TODO: implement this function\n    # return a tuple of integers x and y\n    # return None if no solution exists\n    #\n    # example:\n    #   find_solution 3 5 6\n    #   returns (1, 1)\n    #   find_solution 3 5 7\n    #   returns None\n    if [ $1 -eq 0 ]; then\n        if [ $3 -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n        if [ $3 -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n    if [ $3 -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n        if [ $3 -eq $1 ]; then\n            echo \"1 1\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n    if [ $1 -gt $2 ]; then\n        if [ $3 -lt $2 ]; then\n            echo \"None\"\n            return\n        fi\n        if [ $3 -eq $2 ]; then\n            echo \"1 0\"\n            return\n        fi\n        if [ $3 -gt $2 ]; then\n            if [ $3 -lt $1 ]; then\n                echo \"None\"\n                return\n            fi\n            if [ $3 -eq $1 ]; then\n                echo \"1 0\"\n                return\n            fi\n            if [ $3 -gt $1 ]; then\n                if [ $3 -lt $1+$2 ]; then\n                    echo \"None\"\n                    return\n                fi\n                if [ $3 -eq $1+$2 ]; then\n                    echo \"1 1\"\n                    return\n                fi\n                if [ $3 -gt $1+$2 ]; then\n                    if [ $3 -lt $2+$2 ]; then\n                        echo \"None\"\n                        return\n                    fi\n                    if [ $3 -eq $2+$2 ]; then\n                        echo \"2 0\"\n                        return\n                    fi\n                    if [ $3 -gt $2+",
    "    if [ $3 -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"($3, 0)\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"(0, $3)\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"($3, 0)\"\n        return\n    fi\n    if [ $1 -gt $2 ]; then\n        if [ $3 -lt $2 ]; then\n            echo \"None\"\n            return\n        fi\n        if [ $3 -eq $2 ]; then\n            echo \"(0, 1)\"\n            return\n        fi\n        if [ $3 -gt $2 ]; then\n            if [ $(( $3 % $2 )) -eq 0 ]; then\n                echo \"(0, $(( $3 / $2 )) )\"\n                return\n            fi\n            if [ $(( $3 % $2 )) -gt 0 ]; then\n                echo \"None\"\n                return\n            fi\n        fi\n    fi\n    if [ $1 -lt $2 ]; then\n        if [ $3 -lt $1 ]; then\n            echo \"None\"\n            return\n        fi\n        if [ $3 -eq $1 ]; then\n            echo \"(1, 0)\"\n            return\n        fi\n        if [ $3 -gt $1 ]; then\n            if [ $(( $3 % $1 )) -eq 0 ]; then\n                echo \"($(( $3 / $1 )), 0)\"\n                return\n            fi\n            if [ $(( $3 % $1 )) -gt 0 ]; then\n                echo \"None\"\n                return\n            fi\n        fi\n    fi",
    "    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"($x, $y)\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=0\n    local x1=0\n    local y1=0\n    local x2=0\n    local y2=0\n    local q=0\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        echo \"None\"\n    elif [ $a -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"($x, $y)\"\n    elif [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"($x, $y)\"\n    elif [ $a -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n    elif [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n    else\n        r=$(($n % $b))\n        q=$(($n / $b))\n        x1=$x\n        y1=$y\n        x2=$(($x - $q * $a))\n        y2=$(($y + $q * $b))\n        while [ $r -ne 0 ]; do\n            x=$x2\n            y=$y2\n            n=$b\n            b=$r\n            r=$(($n % $b))\n            q=$(($n / $b))\n            x1=$x2\n            y1=$y2\n            x2=$(($x - $q * $a))\n            y2=$(($y + $q * $b))\n        done\n        if [ $b -eq 1 ]; then\n            echo \"($x1, $y1)\"\n        else\n            echo \"None\"\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$(((n - (a*x)) / b))\n    if [ $((a*x + b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local gcd=0\n    local remainder=0\n    local quotient=0\n    local result=0\n    local result_x=0\n    local result_y=0\n    local result_gcd=0\n    local result_remainder=0\n    local result_quotient=0\n    local result_result=0\n    local result_result_x=0\n    local result_result_y=0\n    local result_result_gcd=0\n    local result_result_remainder=0\n    local result_result_quotient=0\n    local result_result_result=0\n    local result_result_result_x=0\n    local result_result_result_y=0\n    local result_result_result_gcd=0\n    local result_result_result_remainder=0\n    local result_result_result_quotient=0\n    local result_result_result_result=0\n    local result_result_result_result_x=0\n    local result_result_result_result_y=0\n    local result_result_result_result_gcd=0\n    local result_result_result_result_remainder=0\n    local result_result_result_result_quotient=0\n    local result_result_result_result_result=0\n    local result_result_result_result_result_x=0\n    local result_result_result_result_result_y=0\n    local result_result_result_result_result_gcd=0\n    local result_result_result_result_result_remainder=0\n    local result_result_result_result_result_quotient=0\n    local result_result_result_result_result_result=0\n    local result_result_result_result_result_result_x=0\n    local result_result_result_result_result_result_y=0\n    local result_result_result_result_result_result_gcd=0\n    local result_result_result_result_result_result_rem",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local res=0\n  local x_tmp=0\n  local y_tmp=0\n  local res_tmp=0\n  local tmp=0\n  local tmp2=0\n  local tmp3=0\n  local tmp4=0\n  local tmp5=0\n  local tmp6=0\n  local tmp7=0\n  local tmp8=0\n  local tmp9=0\n  local tmp10=0\n  local tmp11=0\n  local tmp12=0\n  local tmp13=0\n  local tmp14=0\n  local tmp15=0\n  local tmp16=0\n  local tmp17=0\n  local tmp18=0\n  local tmp19=0\n  local tmp20=0\n  local tmp21=0\n  local tmp22=0\n  local tmp23=0\n  local tmp24=0\n  local tmp25=0\n  local tmp26=0\n  local tmp27=0\n  local tmp28=0\n  local tmp29=0\n  local tmp30=0\n  local tmp31=0\n  local tmp32=0\n  local tmp33=0\n  local tmp34=0\n  local tmp35=0\n  local tmp36=0\n  local tmp37=0\n  local tmp38=0\n  local tmp39=0\n  local tmp40=0\n  local tmp41=0\n  local tmp42=0\n  local tmp43=0\n  local tmp44=0\n  local tmp45=0\n  local tmp46=0\n  local tmp47=0\n  local tmp48=0\n  local tmp49=0\n  local tmp50=0\n  local tmp51=0\n  local tmp52=0\n  local tmp53=0\n  local tmp54=0\n  local tmp55=0\n  local tmp56=0\n  local tmp57=0\n  local tmp58=0\n  local tmp59=0\n  local tmp60=0\n  local tmp61=0\n  local tmp62=0\n  local tmp63=0\n  local tmp64=0\n  local tmp65",
    "    if [ $1 -eq 0 ]\n    then\n        echo \"($3, 0)\"\n        return\n    fi\n    if [ $2 -eq 0 ]\n    then\n        echo \"($3, $1)\"\n        return\n    fi\n    if [ $1 -lt $2 ]\n    then\n        find_solution $2 $1 $3\n        return\n    fi\n    find_solution $(( $1 - $2 )) $2 $(( $3 + 1 ))",
    "    if [ $1 -eq 0 ]; then\n        if [ $3 -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $3 -eq 0 ]; then\n            echo \"$1 0\"\n        else\n            if [ $2 -eq 0 ]; then\n                echo \"0 $3\"\n            else\n                if [ $1 -eq $2 ]; then\n                    if [ $3 -eq $1 ]; then\n                        echo \"1 1\"\n                    else\n                        echo \"None\"\n                    fi\n                else\n                    if [ $1 -gt $2 ]; then\n                        if [ $3 -gt $1 ]; then\n                            echo \"None\"\n                        else\n                            if [ $3 -eq $1 ]; then\n                                echo \"1 0\"\n                            else\n                                if [ $3 -gt $2 ]; then\n                                    echo \"None\"\n                                else\n                                    if [ $3 -eq $2 ]; then\n                                        echo \"0 1\"\n                                    else\n                                        if [ $3 -lt $2 ]; then\n                                            if [ $3 -lt $1 ]; then\n                                                echo \"None\"\n                                            else\n                                                if [ $3 -eq $1 ]; then\n                                                    echo \"1 0\"\n                                                else\n                                                    if [ $3 -gt $1 ]; then\n                                                        echo \"None\"\n                                                    else\n                                                        if [ $3 -eq $1 ]; then\n                                                            echo \"1 0\"\n                                                        else\n                                                            if [ $3 -gt $2 ]; then\n                                                                echo \"None\"\n                                                            else\n                                                                if [ $3 -eq $2 ]; then\n                                                                    echo \"0 1\"\n                                                                else\n                                                                    if [ $3 -lt $2 ]; then\n                                                                        if [ $3 -lt $1 ]; then\n                                                                            echo \"None\"\n                                                                        else\n                                                                            if [ $3 -eq $1 ]; then\n                                                                                echo \"1 0\"\n                                                                            else\n                                                                               ",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$((n-a*x))\n    if [ $((y%b)) -eq 0 ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / b))\n    local y_step=$((b / a))\n    local x_step_sign=$((x_step > 0 ? 1 : -1))\n    local y_step_sign=$((y_step > 0 ? 1 : -1))\n    local x_step_abs=$((x_step * x_step_sign))\n    local y_step_abs=$((y_step * y_step_sign))\n    local x_step_abs_max=$((x_max / x_step_abs))\n    local y_step_abs_max=$((y_max / y_step_abs))\n    local x_step_abs_min=$((x_min / x_step_abs))\n    local y_step_abs_min=$((y_min / y_step_abs))\n    local x_step_abs_max_sign=$((x_step_abs_max > 0 ? 1 : -1))\n    local y_step_abs_max_sign=$((y_step_abs_max > 0 ? 1 : -1))\n    local x_step_abs_min_sign=$((x_step_abs_min > 0 ? 1 : -1))\n    local y_step_abs_min_sign=$((y_step_abs_min > 0 ? 1 : -1))\n    local x_step_abs_max_abs=$((x_step_abs_max * x_step_abs_max_sign))\n    local y_step_abs_max_abs=$((y_step_abs_max * y_step_abs_max_sign))\n    local x_step_abs_min_abs=$((x_step_abs_min * x_step_abs_min_sign))\n    local y_step_abs_min_abs=$((y_step_abs_min * y_step_",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((($n - ($a * $x)) / $b))\n    if [ $((($a * $x) + ($b * $y))) -eq $n ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local d=0\n  local x1=0\n  local x2=0\n  local y1=0\n  local y2=0\n  local q=0\n  local r=0\n  local x_result=0\n  local y_result=0\n  if [ $n -lt 0 ]; then\n    echo \"None\"\n    return\n  fi\n  if [ $a -eq 0 ]; then\n    if [ $b -eq 0 ]; then\n      echo \"None\"\n      return\n    fi\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n      return\n    fi\n    if [ $n -eq $b ]; then\n      echo \"1 0\"\n      return\n    fi\n    if [ $n -eq -$b ]; then\n      echo \"-1 0\"\n      return\n    fi\n    echo \"None\"\n    return\n  fi\n  if [ $b -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n      return\n    fi\n    if [ $n -eq $a ]; then\n      echo \"0 1\"\n      return\n    fi\n    if [ $n -eq -$a ]; then\n      echo \"0 -1\"\n      return\n    fi\n    echo \"None\"\n    return\n  fi\n  if [ $n -eq 0 ]; then\n    echo \"0 0\"\n    return\n  fi\n  if [ $n -eq $a ]; then\n    echo \"0 1\"\n    return\n  fi\n  if [ $n -eq $b ]; then\n    echo \"1 0\"\n    return\n  fi\n  if [ $n -eq -$a ]; then\n    echo \"0 -1\"\n    return\n  fi\n  if [ $n -eq -$b ]; then\n    echo \"-1 0\"\n    return\n  fi\n  if [ $a -lt 0 ]; then\n    a=$((-$a))\n    x1=$((-$a))\n    x2=0\n    y1=1\n    y2=0\n  else\n",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a * x)) -lt $n ]; do\n        y=$(((n - a * x) / b))\n        if [ $((a * x + b * y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x + 1))\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local gcd=0\n  local x_mult=0\n  local y_mult=0\n  local x_mult_inv=0\n  local y_mult_inv=0\n  local x_mult_inv_mult=0\n  local y_mult_inv_mult=0\n  local x_mult_inv_mult_add=0\n  local y_mult_inv_mult_add=0\n  local x_mult_inv_mult_add_mult=0\n  local y_mult_inv_mult_add_mult=0\n  local x_mult_inv_mult_add_mult_add=0\n  local y_mult_inv_mult_add_mult_add=0\n  local x_mult_inv_mult_add_mult_add_mult=0\n  local y_mult_inv_mult_add_mult_add_mult=0\n  local x_mult_inv_mult_add_mult_add_mult_add=0\n  local y_mult_inv_mult_add_mult_add_mult_add=0\n  local x_mult_inv_mult_add_mult_add_mult_add_mult=0\n  local y_mult_inv_mult_add_mult_add_mult_add_mult=0\n  local x_mult_inv_mult_add_mult_add_mult_add_mult_add=0\n  local y_mult_inv_mult_add_mult_add_mult_add_mult_add=0\n  local x_mult_inv_mult_add_mult_add_mult_add_mult_add_mult=0\n  local y_mult_inv_mult_add_mult_add_mult_add_mult_add_mult=0\n  local x_mult_inv_mult_add_mult_add_mult_add_mult_add_mult_add=0\n  local y_mult_inv_mult_add_mult_add_mult_add_mult_add_mult_add=0\n  local x_mult_inv_mult_add_mult_add_mult_",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_max=$((n / a))\n  local y_max=$((n / b))\n  local x_min=$((-n / a))\n  local y_min=$((-n / b))\n  local found=0\n\n  while [ $x -le $x_max ] && [ $x -ge $x_min ] && [ $y -le $y_max ] && [ $y -ge $y_min ] && [ $found -eq 0 ]; do\n    if [ $((a * x + b * y)) -eq $n ]; then\n      found=1\n    else\n      if [ $((a * x + b * y)) -lt $n ]; then\n        x=$((x + 1))\n      else\n        y=$((y - 1))\n      fi\n    fi\n  done\n\n  if [ $found -eq 1 ]; then\n    echo \"($x, $y)\"\n  else\n    echo \"None\"\n  fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -le $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      echo \"($x, $y)\"\n      return\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"($x, $y)\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1",
    "    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        local x=$(($3 / $1))\n        local y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"($x, 0)\"\n        else\n            local result=$(find_solution $2 $(( $1 % $2 )) $y)\n            if [ $result == \"None\" ]; then\n                echo \"None\"\n            else\n                echo \"($(($x - $2 / $1 * $(echo $result | cut -d ',' -f 1))), $(echo $result | cut -d ',' -f 2))\"\n            fi\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  local found=0\n  while [ $found -eq 0 ]; do\n    if [ $((a*x + b*y)) -eq $n ]; then\n      found=1\n    else\n      if [ $((a*x + b*y)) -lt $n ]; then\n        x=$((x+x_incr))\n      else\n        if [ $((a*x + b*y)) -gt $n ]; then\n          temp=$x_incr\n          x_incr=$y_incr\n          y_incr=$((-temp))\n          y=$((y+y_incr))\n        fi\n      fi\n    fi\n  done\n  echo \"($x,$y)\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local found=0\n    for ((x=x_min; x<=x_max; x++)); do\n        for ((y=y_min; y<=y_max; y++)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                found=1\n                break\n            fi\n        done\n        if ((found)); then\n            break\n        fi\n    done\n    if ((!found)); then\n        echo \"None\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=1\n    local y_step=1\n    local x_found=false\n    local y_found=false\n    local x_solution=0\n    local y_solution=0\n    local solution_found=false\n    local solution_string=\"\"\n    local solution_string_prefix=\"$a * $x_solution + $b * $y_solution = $n\"\n\n    if ((a < 0)); then\n        x_step=-1\n    fi\n    if ((b < 0)); then\n        y_step=-1\n    fi\n\n    if ((a == 0 && b == 0)); then\n        if ((n == 0)); then\n            solution_string=\"$a * $x_solution + $b * $y_solution = $n\"\n            echo \"$solution_string\"\n            return 0\n        else\n            echo \"None\"\n            return 1\n        fi\n    elif ((a == 0)); then\n        if ((n % b == 0)); then\n            y_solution=$((n / b))\n            solution_string=\"$a * $x_solution + $b * $y_solution = $n\"\n            echo \"$solution_string\"\n            return 0\n        else\n            echo \"None\"\n            return 1\n        fi\n    elif ((b == 0)); then\n        if ((n % a == 0)); then\n            x_solution=$((n / a))\n            solution_string=\"$a * $x_solution + $b * $y_solution = $n\"\n            echo \"$solution_string\"\n            return 0\n        else\n            echo \"None\"\n            return 1\n        fi\n    fi\n\n    while ((x <= x_max && x >= x_min)); do\n        y=$y_min\n        while ((y <= y_max && y >= y_min));",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=false\n  while [[ $x -le $n ]]; do\n    y=$((n - a * x))\n    if [[ $((y % b)) -eq 0 ]]; then\n      found=true\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [[ $found == true ]]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]\n    do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]\n        then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]\n    then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local result=0\n    local i=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"($x, $y)\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"($x, $y)\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $n -eq 0 ]; then\n        echo \"($x, $y)\"\n        return\n    fi\n\n    if [ $a -eq $b ]; then\n        if [ $n -eq $a ]; then\n            echo \"($x, $y)\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -gt $b ]; then\n        if [ $n -eq $a ]; then\n            echo \"($x, $y)\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $b -gt $a ]; then\n        if [ $n -eq $b ]; then\n            echo \"($x, $y)\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -lt $b ]; then\n        if [ $n -lt $a ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $b -lt $a ]; then\n        if [ $n -lt $b ]; then\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -lt $b ]; then\n        if [ $n -gt $a ]; then\n            if [ $n -lt $b ]; then\n                echo \"None\"\n                return\n            fi\n        fi\n    fi\n\n    if [ $b -lt $",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]\n  do\n    y=$(( (n - (a * x)) / b ))\n    if [ $(( (a * x) + (b * y) )) -eq $n ]\n    then\n      found=1\n      break\n    fi\n    x=$(( x + 1 ))\n  done\n  if [ $found -eq 1 ]\n  then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    x=$((x+x_incr))\n    y=$((y+y_incr))\n    if [ $((a*x)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]; then\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"\n  return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a * x)) -lt $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x + 1))\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n\n    local x=0\n    local y=0\n\n    while [ $((a * x)) -lt $n ]; do\n        if [ $((a * x + b * y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n\n        x=$((x + 1))\n        y=$((n - a * x))\n    done\n\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    local x_temp=0\n    local y_temp=0\n    local r_temp=0\n    local q_temp=0\n    local a_temp=0\n    local b_temp=0\n    local n_temp=0\n    local a_temp2=0\n    local b_temp2=0\n    local n_temp2=0\n    local a_temp3=0\n    local b_temp3=0\n    local n_temp3=0\n    local a_temp4=0\n    local b_temp4=0\n    local n_temp4=0\n    local a_temp5=0\n    local b_temp5=0\n    local n_temp5=0\n    local a_temp6=0\n    local b_temp6=0\n    local n_temp6=0\n    local a_temp7=0\n    local b_temp7=0\n    local n_temp7=0\n    local a_temp8=0\n    local b_temp8=0\n    local n_temp8=0\n    local a_temp9=0\n    local b_temp9=0\n    local n_temp9=0\n    local a_temp10=0\n    local b_temp10=0\n    local n_temp10=0\n    local a_temp11=0\n    local b_temp11=0\n    local n_temp11=0\n    local a_temp12=0\n    local b_temp12=0\n    local n_temp12=0\n    local a_temp13=0\n    local b_temp13=0\n    local n_temp13=0\n    local a_temp14=0\n    local b_temp14=0\n    local n_temp14=0\n    local a_temp15=0\n    local b_temp15=0\n    local n_temp15=0\n    local a_temp16=",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "  # Write your solution here\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n",
    "    if [ $1 -eq 0 ]; then\n        if [ $3 -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $3 -eq 0 ]; then\n            echo \"0 $2\"\n        else\n            if [ $3 -lt 0 ]; then\n                find_solution $1 $2 $(($3 + $1))\n            else\n                find_solution $1 $2 $(($3 - $1))\n            fi\n        fi\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$(( (n - a * x) / b ))\n        if [ $(( a * x + b * y )) -eq $n ]; then\n            found=1\n            break\n        fi\n        x=$(( x + 1 ))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=1\n    local x_max=0\n    local y_max=0\n    local x_min=0\n    local y_min=0\n    local x_prev=0\n    local y_prev=0\n    local x_next=0\n    local y_next=0\n    local x_prev_inc=0\n    local y_prev_inc=0\n    local x_next_inc=0\n    local y_next_inc=0\n    local x_prev_max=0\n    local y_prev_max=0\n    local x_next_max=0\n    local y_next_max=0\n    local x_prev_min=0\n    local y_prev_min=0\n    local x_next_min=0\n    local y_next_min=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local x_next_next=0\n    local y_next_next=0\n    local x_prev_prev_inc=0\n    local y_prev_prev_inc=0\n    local x_next_next_inc=0\n    local y_next_next_inc=0\n    local x_prev_prev_max=0\n    local y_prev_prev_max=0\n    local x_next_next_max=0\n    local y_next_next_max=0\n    local x_prev_prev_min=0\n    local y_prev_prev_min=0\n    local x_next_next_min=0\n    local y_next_next_min=0\n    local x_prev_prev_prev=0\n    local y_prev_prev_prev=0\n    local x_next_next_next=0\n    local y_next_next_next=0\n    local x_prev_prev_prev_inc=0\n    local y_prev_prev_prev_inc=0\n    local x_next_next_next_inc=0\n    local y_next_next",
    "    if [ $1 -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq 0 ]; then\n        echo \"($2, 0)\"\n        return\n    fi\n    if [ $3 -lt 0 ]; then\n        find_solution $1 $2 $(( $3 + $1 ))\n        return\n    fi\n    find_solution $1 $2 $(( $3 - $2 ))",
    "    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local r=1\n    local q=0\n    local r_prev=0\n    local q_prev=0\n    local x_prev=0\n    local y_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local x_temp=0\n    local y_temp=0\n    local r_temp=0\n    local q_temp=0\n    local r_prev_temp=0\n    local q_prev_temp=0\n    local x_prev_temp=0\n    local y_prev_temp=0\n    local x_prev_prev_temp=0\n    local y_prev_prev_temp=0\n    local r_prev_prev=0\n    local q_prev_prev=0\n    local x_prev_prev_prev=0\n    local y_prev_prev_prev=0\n    local r_prev_prev_prev=0\n    local q_prev_prev_prev=0\n    local x_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev=0\n    local q_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev_prev=0\n   ",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=false\n  while [ $x -le $n ]; do\n    if [ $(( $n - $a * $x )) -eq 0 ]; then\n      y=0\n      found=true\n      break\n    fi\n    if [ $(( $n - $a * $x )) -lt 0 ]; then\n      break\n    fi\n    y=$(( ($n - $a * $x) / $b ))\n    if [ $(( $a * $x + $b * $y )) -eq $n ]; then\n      found=true\n      break\n    fi\n    x=$(( $x + 1 ))\n  done\n  if [ \"$found\" = true ]; then\n    echo \"( $x, $y )\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local r1=0\n    local r2=0\n    local q1=0\n    local q2=0\n    local x_prev=0\n    local y_prev=0\n    local r_prev=0\n    local q_prev=0\n    local x1_prev=0\n    local x2_prev=0\n    local y1_prev=0\n    local y2_prev=0\n    local r1_prev=0\n    local r2_prev=0\n    local q1_prev=0\n    local q2_prev=0\n    local x_next=0\n    local y_next=0\n    local r_next=0\n    local q_next=0\n    local x1_next=0\n    local x2_next=0\n    local y1_next=0\n    local y2_next=0\n    local r1_next=0\n    local r2_next=0\n    local q1_next=0\n    local q2_next=0\n    local x_tmp=0\n    local y_tmp=0\n    local r_tmp=0\n    local q_tmp=0\n    local x1_tmp=0\n    local x2_tmp=0\n    local y1_tmp=0\n    local y2_tmp=0\n    local r1_tmp=0\n    local r2_tmp=0\n    local q1_tmp=0\n    local q2_tmp=0\n    local x_tmp2=0\n    local y_tmp2=0\n    local r_tmp2=0\n    local q_tmp2=0\n    local x1_tmp2=0\n    local x2_tmp2=0\n    local y1_tmp2=0\n    local y2_tmp2=0\n    local r1_tmp2=0\n    local r2_tmp2=0\n    local q1_",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a*x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x+1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local q=0\n    local r=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local x_out=0\n    local y_out=0\n    local result=0\n    local result_str=0\n    local result_str_len=0\n    local result_str_len_div_2=0\n    local result_str_len_div_2_plus_1=0\n    local result_str_len_div_2_minus_1=0\n    local result_str_len_div_2_minus_2=0\n    local result_str_len_div_2_minus_3=0\n    local result_str_len_div_2_minus_4=0\n    local result_str_len_div_2_minus_5=0\n    local result_str_len_div_2_minus_6=0\n    local result_str_len_div_2_minus_7=0\n    local result_str_len_div_2_minus_8=0\n    local result_str_len_div_2_minus_9=0\n    local result_str_len_div_2_minus_10=0\n    local result_str_len_div_2_minus_11=0\n    local result_str_len_div_2_minus_12=0\n    local result_str_len_div_2_minus_13=0\n    local result_str_len_div_2_minus_14=0\n    local result_str_len_div_2_minus_15=0\n    local result_str_len_div_2_minus_16=0\n    local result_str_len_div_2_minus_17=0\n    local result_str_len_div_2_minus_18=0\n    local result_str_len_div_2_minus_19=0\n    local result_str_len_div_2_minus_20=0\n    local result",
    "    for ((x=0; x<=$1; x++)); do\n        for ((y=0; y<=$2; y++)); do\n            if (($1*$x + $2*$y == $3)); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / b))\n    local y_step=$((b / a))\n    local x_sign=1\n    local y_sign=1\n    local x_found=0\n    local y_found=0\n    local x_found_max=0\n    local y_found_max=0\n    local x_found_min=0\n    local y_found_min=0\n    local x_found_step=0\n    local y_found_step=0\n    local x_found_sign=0\n    local y_found_sign=0\n    local x_found_max_sign=0\n    local y_found_max_sign=0\n    local x_found_min_sign=0\n    local y_found_min_sign=0\n    local x_found_step_sign=0\n    local y_found_step_sign=0\n    local x_found_max_step=0\n    local y_found_max_step=0\n    local x_found_min_step=0\n    local y_found_min_step=0\n    local x_found_max_min=0\n    local y_found_max_min=0\n    local x_found_min_max=0\n    local y_found_min_max=0\n    local x_found_max_step_sign=0\n    local y_found_max_step_sign=0\n    local x_found_min_step_sign=0\n    local y_found_min_step_sign=0\n    local x_found_step_max=0\n    local y_found_step_max=0\n    local x_found_step_min=0\n    local y_found_step_min=0\n    local x_found_step_sign_max=0\n    local y_found_step_sign",
    "  local n=$1\n  local a=$2\n  local b=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    for ((x=0; x<=x_max; x++)); do\n        for ((y=0; y<=y_max; y++)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    local x_new=0\n    local y_new=0\n    local r_new=0\n    local q_new=0\n    local a_new=0\n    local b_new=0\n    local n_new=0\n    local result=0\n    local result_str=\"\"\n    if [ $a -lt 0 ]; then\n        a=$((-1 * $a))\n        x1=$((-1 * $x1))\n    fi\n    if [ $b -lt 0 ]; then\n        b=$((-1 * $b))\n        y1=$((-1 * $y1))\n    fi\n    while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a % b))\n        x_new=$((x2))\n        y_new=$((y2))\n        x2=$((x1 - q * x2))\n        y2=$((y1 - q * y2))\n        x1=$x_new\n        y1=$y_new\n        a=$b\n        b=$r\n    done\n    if [ $a -ne 1 ]; then\n        result_str=\"None\"\n    else\n        x=$((x1 * (n / a)))\n        y=$((y1 * (n / a)))\n        result_str=\"($x, $y)\"\n    fi\n    echo $result_str",
    "    # your code here\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if (( $1*$x + $2*$y == $3 )); then\n                echo $x $y\n                return\n            fi\n        done\n    done\n    echo None",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=0\n    local q=0\n    local x_prev=1\n    local x_next=0\n    local y_prev=0\n    local y_next=1\n    local r_prev=$a\n    local r_next=$b\n    local q_prev=0\n    local q_next=0\n    local tmp=0\n    while [ $r_next -ne 0 ]; do\n        q=$((r_prev / r_next))\n        r=$((r_prev % r_next))\n        x=$((x_prev - q * x_next))\n        y=$((y_prev - q * y_next))\n        r_prev=$r_next\n        r_next=$r\n        x_prev=$x_next\n        x_next=$x\n        y_prev=$y_next\n        y_next=$y\n        q_prev=$q_next\n        q_next=$q\n    done\n    if [ $r_prev -ne $n ]; then\n        echo \"None\"\n    else\n        if [ $x_prev -lt 0 ]; then\n            x_prev=$((x_prev + b / r_prev))\n        fi\n        echo \"($x_prev, $y_prev)\"\n    fi",
    "    for (( x = 0; x <= $1; x++ )); do\n        for (( y = 0; y <= $2; y++ )); do\n            if (( $1 * $x + $2 * $y == $3 )); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "    a=$1\n    b=$2\n    n=$3\n    if [ $n -lt 0 ]; then\n        echo \"No solution\"\n        return\n    fi\n    if [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n    if [ $a -eq 0 ]; then\n        if [ $n -eq $b ]; then\n            echo \"0 1\"\n            return\n        else\n            echo \"No solution\"\n            return\n        fi\n    fi\n    if [ $b -eq 0 ]; then\n        if [ $n -eq $a ]; then\n            echo \"1 0\"\n            return\n        else\n            echo \"No solution\"\n            return\n        fi\n    fi\n    if [ $a -eq $b ]; then\n        if [ $n -eq $a ]; then\n            echo \"1 1\"\n            return\n        else\n            echo \"No solution\"\n            return\n        fi\n    fi\n    if [ $a -lt $b ]; then\n        if [ $n -lt $a ]; then\n            echo \"No solution\"\n            return\n        fi\n        if [ $n -eq $a ]; then\n            echo \"1 0\"\n            return\n        fi\n        if [ $n -eq $b ]; then\n            echo \"0 1\"\n            return\n        fi\n        if [ $n -gt $b ]; then\n            echo \"No solution\"\n            return\n        fi\n        if [ $n -lt $b ]; then\n            if [ $(( $n % $a )) -eq 0 ]; then\n                echo \"1 $(( $n / $a ))\"\n                return\n            else\n                echo \"No solution\"\n                return\n            fi\n        fi\n        if [ $n -gt $a ]; then\n            if [ $(( $n % $b )) -eq 0 ]; then\n                echo \"$(( $n / $b )) 1\"\n                return\n            else\n                echo \"No solution\"\n                return\n            fi\n        fi\n    fi\n    if [ $a -gt $b ]; then\n        if [ $n -lt $b ]; then\n            echo \"No solution\"\n            return\n        fi\n        if [ $n -eq $b ];",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while (( $((a*x)) < $n )); do\n    y=$((n-a*x))\n    if (( $((y%b)) == 0 )); then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1",
    "    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1*$x + $2*$y )) -eq $3 ]; then\n                echo \"($x, $y)\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "    local n=$1\n    local a=$2\n    local b=$3\n    local x=0\n    local y=0\n    local result=()\n    while [ $((a * x)) -le $n ]; do\n        y=$(((n - (a * x)) / b))\n        if [ $((a * x + b * y)) -eq $n ]; then\n            result=($x $y)\n            break\n        fi\n        x=$((x + 1))\n    done\n    echo ${result[@]}",
    "    if [ $1 -eq 0 ]\n    then\n        if [ $3 -eq 0 ]\n        then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $3 -eq 0 ]\n        then\n            echo \"$2 0\"\n        else\n            if [ $3 -lt 0 ]\n            then\n                find_solution $1 $(( $2 * -1 )) $(( $3 * -1 ))\n            else\n                if [ $3 -lt $1 ]\n                then\n                    find_solution $(( $1 - $3 )) $(( $2 - 1 )) $3\n                else\n                    find_solution $1 $2 $(( $3 - $1 ))\n                fi\n            fi\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]\n  do\n    x=$((x+x_incr))\n    y=$((y+y_incr))\n    if [ $((a*x)) -eq $n ]\n    then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]\n    then\n      x=$((x-x_incr))\n      y=$((y-y_incr))\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"\n  return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    elif [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        elif [ $n -eq $b ]; then\n            echo \"0 1\"\n        else\n            echo \"None\"\n        fi\n    elif [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        elif [ $n -eq $a ]; then\n            echo \"1 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            d=$(gcd $a $b)\n            if [ $((n % d)) -eq 0 ]; then\n                x1=$(find_solution $a $b $d)\n                x2=$(echo $x1 | awk '{print $1}')\n                y1=$(echo $x1 | awk '{print $2}')\n                q=$((n / d))\n                x=$((q * x2))\n                y=$((q * y1))\n                echo \"$x $y\"\n            else\n                echo \"None\"\n            fi\n        fi\n    fi",
    "  for ((x=0; x<=$1; x++)); do\n    for ((y=0; y<=$2; y++)); do\n      if [ $(($1*$x+$2*$y)) -eq $3 ]; then\n        echo \"($x, $y)\"\n        return 0\n      fi\n    done\n  done\n  echo \"None\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=0\n    while [ $((b*y)) -lt $n ]; do\n      if [ $((a*x + b*y)) -eq $n ]; then\n        echo \"$x $y\"\n        return 0\n      fi\n      y=$((y+1))\n    done\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    while [[ $x -le $x_max ]]; do\n        while [[ $y -le $y_max ]]; do\n            if [[ $((a * x + b * y)) -eq $n ]]; then\n                echo \"$x $y\"\n                return 0\n            fi\n            y=$((y + 1))\n        done\n        y=0\n        x=$((x + 1))\n    done\n    echo \"None\"",
    "  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local result=()\n  while [ $x -le $n ]; do\n    if [ $(( $a * $x )) -eq $(( $n - $b * $y )) ]; then\n      result=($x $y)\n      break\n    fi\n    x=$(( $x + 1 ))\n    y=$(( $y + 1 ))\n  done\n  echo ${result[@]}",
    "  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local r=1\n  local q=0\n  local x2=1\n  local x1=0\n  local y2=0\n  local y1=1\n  local temp=0\n\n  if [ $a -eq 0 ]; then\n    if [ $b -eq 0 ]; then\n      echo \"0 0\"\n    else\n      if [ $n -eq 0 ]; then\n        echo \"0 0\"\n      else\n        echo \"None\"\n      fi\n    fi\n    return\n  fi\n\n  if [ $b -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n    else\n      if [ $n -eq $a ]; then\n        echo \"1 0\"\n      else\n        echo \"None\"\n      fi\n    fi\n    return\n  fi\n\n  if [ $n -eq 0 ]; then\n    echo \"0 0\"\n    return\n  fi\n\n  if [ $n -eq $a ]; then\n    echo \"1 0\"\n    return\n  fi\n\n  if [ $n -eq $b ]; then\n    echo \"0 1\"\n    return\n  fi\n\n  if [ $n -lt $a ]; then\n    if [ $n -lt $b ]; then\n      echo \"None\"\n      return\n    fi\n  fi\n\n  if [ $n -lt $b ]; then\n    if [ $n -lt $a ]; then\n      echo \"None\"\n      return\n    fi\n  fi\n\n  if [ $n -gt $a ]; then\n    if [ $n -gt $b ]; then\n      echo \"None\"\n      return\n    fi\n  fi\n\n  if [ $n -gt $b ]; then\n    if [ $n -gt $a ]; then\n      echo \"None\"\n      return\n    fi\n  fi\n\n  while [ $r -ne 0 ]; do\n    q=$(( $n / $a ))\n    r=$(( $n % $a ))\n    temp=$(( $x2 - $q * $x1 ))\n    x2=$x1\n    x1=$temp\n",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=0\n  local y_incr=0\n  local x_max=0\n  local y_max=0\n  local x_min=0\n  local y_min=0\n  local x_incr_max=0\n  local y_incr_max=0\n  local x_incr_min=0\n  local y_incr_min=0\n  local x_incr_max_found=false\n  local y_incr_max_found=false\n  local x_incr_min_found=false\n  local y_incr_min_found=false\n  local x_incr_max_found_first=false\n  local y_incr_max_found_first=false\n  local x_incr_min_found_first=false\n  local y_incr_min_found_first=false\n  local x_incr_max_found_second=false\n  local y_incr_max_found_second=false\n  local x_incr_min_found_second=false\n  local y_incr_min_found_second=false\n  local x_incr_max_found_third=false\n  local y_incr_max_found_third=false\n  local x_incr_min_found_third=false\n  local y_incr_min_found_third=false\n  local x_incr_max_found_fourth=false\n  local y_incr_max_found_fourth=false\n  local x_incr_min_found_fourth=false\n  local y_incr_min_found_fourth=false\n  local x_incr_max_found_fifth=false\n  local y_incr_max_found_fifth=false\n  local x_incr_min_found_fifth=false\n  local y_incr_min_found_fifth=false\n  local x_incr_max_found_sixth=false\n  local y_incr_max_found_sixth=false\n  local x",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$((n-a*x))\n        if [ $((y%b)) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local d=0\n    local x_found=0\n    local y_found=0\n    local x_solution=0\n    local y_solution=0\n    local x_solution_found=0\n    local y_solution_found=0\n    local x_solution_found_count=0\n    local y_solution_found_count=0\n    local x_solution_found_count_max=0\n    local y_solution_found_count_max=0\n    local x_solution_found_count_max_index=0\n    local y_solution_found_count_max_index=0\n    local x_solution_found_count_max_index_prev=0\n    local y_solution_found_count_max_index_prev=0\n    local x_solution_found_count_max_index_prev_prev=0\n    local y_solution_found_count_max_index_prev_prev=0\n    local x_solution_found_count_max_index_prev_prev_prev=0\n    local y_solution_found_count_max_index_prev_prev_prev=0\n    local x_solution_found_count_max_index_prev_prev_prev_prev=0\n    local y_solution_found_count_max_index_prev_prev_prev_prev=0\n    local x_solution_found_count_max_index_prev_prev_prev_prev_prev=0\n    local y_solution_found_count_max_index_prev_prev_prev_prev_prev=0\n    local x_solution_found_count_max_index_prev_prev_prev_prev_prev_prev=0\n    local y_solution_found_count_max_index_prev_prev_prev_prev_prev_prev=0\n   ",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+1))\n    done\n    x=$((x-1))\n    r=$((n-a*x))\n    while [ $((b*y)) -lt $r ]; do\n        y=$((y+1))\n    done\n    y=$((y-1))\n    r=$((r-b*y))\n    if [ $r -eq 0 ]; then\n        echo \"($x, $y)\"\n    else\n        echo \"None\"\n    fi",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    x=$((x+x_incr))\n    y=$((y+y_incr))\n    if [ $((a*x)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]; then\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n      x=$((x+x_incr))\n      y=$((y+y_incr))\n    fi\n  done\n  echo \"None\"",
    "  local n=$1\n  local a=$2\n  local b=$3\n  local x=0\n  local y=0\n  while (( $a * $x <= $n )); do\n    y=$(( ($n - ($a * $x)) / $b ))\n    if (( $a * $x + $b * $y == $n )); then\n      echo \"$x $y\"\n      return\n    fi\n    x=$(( $x + 1 ))\n  done\n  echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=1\n    local y_step=1\n    local x_found=false\n    local y_found=false\n    if [ $((a * x_max + b * y_max)) -ne $n ]; then\n        x_max=$((x_max + 1))\n    fi\n    if [ $((a * x_min + b * y_min)) -ne $n ]; then\n        x_min=$((x_min - 1))\n    fi\n    if [ $x_max -lt $x_min ]; then\n        x_step=-1\n    fi\n    if [ $y_max -lt $y_min ]; then\n        y_step=-1\n    fi\n    while [ $x_found = false ]; do\n        while [ $y_found = false ]; do\n            if [ $((a * x + b * y)) -eq $n ]; then\n                x_found=true\n                y_found=true\n            else\n                y=$((y + y_step))\n            fi\n            if [ $y -gt $y_max ] || [ $y -lt $y_min ]; then\n                y_found=true\n            fi\n        done\n        x=$((x + x_step))\n        y=$((y_min))\n        y_found=false\n        if [ $x -gt $x_max ] || [ $x -lt $x_min ]; then\n            x_found=true\n        fi\n    done\n    echo \"($x, $y)\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n        y=$((n-a*x))\n    done\n    echo \"None\"\n    return 1",
    "    for ((i=0; i<=$1; i++)); do\n        for ((j=0; j<=$2; j++)); do\n            if [ $((i*$1 + j*$2)) -eq $3 ]; then\n                echo \"$i $j\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -le $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        temp=$x_incr\n        x_incr=$((-b*y_incr + a*x_incr))\n        y_incr=$((b*temp))\n        x=$((x + x_incr))\n        y=$((y + y_incr))\n    done\n    echo \"None\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=false\n  while [ $x -le $n ]; do\n    while [ $y -le $n ]; do\n      if [ $((a * x + b * y)) -eq $n ]; then\n        found=true\n        break\n      fi\n      y=$((y + 1))\n    done\n    if [ $found = true ]; then\n      break\n    fi\n    x=$((x + 1))\n    y=0\n  done\n  if [ $found = true ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -le $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"($x, $y)\"\n            return 0\n        fi\n        x=$((x+1))\n        y=$((n-a*x))\n    done\n    echo \"None\"",
    "    # Write your solution here\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n        y=$((n-a*x))\n    done\n    echo \"None\"\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_step=1\n    local y_step=0\n    local x_limit=$((n / a))\n    local y_limit=$((n / b))\n    local x_sign=1\n    local y_sign=1\n    local x_next=0\n    local y_next=0\n    local x_prev=0\n    local y_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local x_prev_prev_prev=0\n    local y_prev_prev_prev=0\n    local x_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_max=$((n / a))\n  local y_max=$((n / b))\n  local x_min=$((-n / a))\n  local y_min=$((-n / b))\n  local x_step=$((a / gcd(a, b)))\n  local y_step=$((b / gcd(a, b)))\n  local x_sign=1\n  local y_sign=1\n  local found=false\n\n  if ((x_max < x_min)) ; then\n    x_min=$((-x_max))\n  else\n    x_max=$((-x_min))\n  fi\n\n  if ((y_max < y_min)) ; then\n    y_min=$((-y_max))\n  else\n    y_max=$((-y_min))\n  fi\n\n  if ((x_max < 0)) ; then\n    x_sign=-1\n  fi\n\n  if ((y_max < 0)) ; then\n    y_sign=-1\n  fi\n\n  while ((x <= x_max)) ; do\n    while ((y <= y_max)) ; do\n      if ((a * x + b * y == n)) ; then\n        echo \"$x $y\"\n        found=true\n        break\n      fi\n      y=$((y + y_sign))\n    done\n    if $found ; then\n      break\n    fi\n    x=$((x + x_sign))\n    y=0\n  done\n\n  if ! $found ; then\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while (( a*x <= n )); do\n        if (( n - a*x ) % b == 0 ); then\n            y=$(( (n - a*x) / b ))\n            found=1\n            break\n        fi\n        x=$(( x + 1 ))\n    done\n    if (( found )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local result=0\n    local remainder=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return 0\n    fi\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n        return 1\n    fi\n\n    if [ $a -eq 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -lt $b ] && [ $n -gt 0 ]; then\n                echo \"0 $n\"\n                return 0\n            fi\n            if [ $n -lt 0 ] && [ $n -gt $b ]; then\n                echo \"0 $n\"\n                return 0\n            fi\n            if [ $n -gt $b ]; then\n                echo \"None\"\n                return 1\n            fi\n        fi\n    fi\n\n    if [ $a -ne 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -lt $a ] && [ $n -gt 0 ]; then\n                echo \"$n 0\"\n                return 0\n            fi\n            if [ $n -lt 0 ] && [ $n -gt $a ]; then\n                echo \"$n 0\"\n                return 0\n            fi\n            if [ $n -gt $a ]; then\n                echo \"None\"\n                return 1\n            fi\n        fi\n    fi\n\n    if [ $a -ne 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -lt $a ] && [ $n -gt 0 ]; then\n                echo \"$",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local y1=0\n    local x2=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_temp=0\n    local y_temp=0\n    local x_result=0\n    local y_result=0\n    local result=0\n    local result_string=\"\"\n    local result_array=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo",
    "  for (( x=0; x<=$1; x++ )); do\n    for (( y=0; y<=$2; y++ )); do\n      if (( $x * $1 + $y * $2 == $3 )); then\n        echo \"$x $y\"\n        return\n      fi\n    done\n  done\n  echo \"None\"",
    "    a=$1\n    b=$2\n    n=$3\n    x=0\n    y=0\n    while [ $((a*x)) -lt $n ]; do\n        r=$((n-(a*x)))\n        if [ $((r%b)) -eq 0 ]; then\n            y=$((r/b))\n            echo \"($x, $y)\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1",
    "    if [ $1 -eq 0 ]; then\n        if [ $3 -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $3 -eq 0 ]; then\n            echo \"0 $2\"\n        else\n            if [ $3 -lt 0 ]; then\n                find_solution $1 $2 $(( $3 + $1 ))\n            else\n                find_solution $1 $2 $(( $3 - $1 ))\n            fi\n        fi\n    fi",
    "    for (( x = 0; x <= $1; x++ )); do\n        for (( y = 0; y <= $2; y++ )); do\n            if (( $1 * $x + $2 * $y == $3 )); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local result=0\n  local x_increment=0\n  local y_increment=0\n  local x_decrement=0\n  local y_decrement=0\n  local x_increment_result=0\n  local y_increment_result=0\n  local x_decrement_result=0\n  local y_decrement_result=0\n  local x_increment_result_mod=0\n  local y_increment_result_mod=0\n  local x_decrement_result_mod=0\n  local y_decrement_result_mod=0\n  local x_increment_result_mod_abs=0\n  local y_increment_result_mod_abs=0\n  local x_decrement_result_mod_abs=0\n  local y_decrement_result_mod_abs=0\n  local x_increment_result_mod_abs_min=0\n  local y_increment_result_mod_abs_min=0\n  local x_decrement_result_mod_abs_min=0\n  local y_decrement_result_mod_abs_min=0\n  local x_increment_result_mod_abs_min_index=0\n  local y_increment_result_mod_abs_min_index=0\n  local x_decrement_result_mod_abs_min_index=0\n  local y_decrement_result_mod_abs_min_index=0\n  local x_increment_result_mod_abs_min_index_value=0\n  local y_increment_result_mod_abs_min_index_value=0\n  local x_decrement_result_mod_abs_min_index_value=0\n  local y_decrement_result_mod_abs_min_index_value=0\n  local x_increment_result_mod_abs_min_index_value_abs=0\n  local y_increment_result_mod_abs_min_index_value",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while (( $a * $x <= $n )); do\n        y=$(( ($n - $a * $x) / $b ))\n        if (( $a * $x + $b * $y == $n )); then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$(( $x + 1 ))\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n        y=$(((n-a*x)/b))\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"($x, $y)\"\n            return\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=0\n    local temp=0\n    while [ $((a * x)) -lt $n ]; do\n        if [ $((a * x + b * y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a * (x + x_inc) + b * (y + y_inc))) -le $n ]; then\n            x=$((x + x_inc))\n            y=$((y + y_inc))\n        else\n            temp=$x_inc\n            x_inc=$y_inc\n            y_inc=$((-temp))\n        fi\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local remainder=0\n    local quotient=0\n    local tmp=0\n    local tmp_x=0\n    local tmp_y=0\n    local tmp_remainder=0\n    local tmp_quotient=0\n    local tmp_tmp=0\n    local tmp_tmp_x=0\n    local tmp_tmp_y=0\n    local tmp_tmp_remainder=0\n    local tmp_tmp_quotient=0\n    local tmp_tmp_tmp=0\n    local tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_remainder=0\n    local tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_tmp_remainder=0\n    local tmp_tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_tmp_tmp_remainder=0\n    local tmp_tmp_tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_remainder=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n        y=$(((n-a*x)/b))\n    done\n    echo \"None\"\n    return 1",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local r1=0\n    local r2=0\n    local q1=0\n    local q2=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while (( $n > 0 )); do\n    if (( $n - $a >= 0 )); then\n      n=$(( $n - $a ))\n      x=$(( $x + $x_incr ))\n    else\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$temp\n      temp=$a\n      a=$b\n      b=$temp\n    fi\n  done\n  if (( $n == 0 )); then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=0\n    local remainder=0\n    local quotient=0\n    local temp=0\n    local temp_x=0\n    local temp_y=0\n    local temp_result=0\n    local temp_remainder=0\n    local temp_quotient=0\n    local temp_temp=0\n    local temp_temp_x=0\n    local temp_temp_y=0\n    local temp_temp_result=0\n    local temp_temp_remainder=0\n    local temp_temp_quotient=0\n    local temp_temp_temp=0\n    local temp_temp_temp_x=0\n    local temp_temp_temp_y=0\n    local temp_temp_temp_result=0\n    local temp_temp_temp_remainder=0\n    local temp_temp_temp_quotient=0\n    local temp_temp_temp_temp=0\n    local temp_temp_temp_temp_x=0\n    local temp_temp_temp_temp_y=0\n    local temp_temp_temp_temp_result=0\n    local temp_temp_temp_temp_remainder=0\n    local temp_temp_temp_temp_quotient=0\n    local temp_temp_temp_temp_temp=0\n    local temp_temp_temp_temp_temp_x=0\n    local temp_temp_temp_temp_temp_y=0\n    local temp_temp_temp_temp_temp_result=0\n    local temp_temp_temp_temp_temp_remainder=0\n    local temp_temp_temp_temp_temp_quotient=0\n    local temp_temp_temp_temp_temp_temp=0\n    local temp_temp_temp_temp_temp_temp_x=0\n    local temp_temp_temp_temp_temp_temp_y=0\n    local temp_temp_temp_temp_temp_temp_result=0\n    local temp_temp_temp_temp_temp_temp_remainder=0\n    local",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1*$x + $2*$y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=false\n    while [[ $x -le $n ]]; do\n        if [[ $(( $a * $x )) -eq $(( $n - $b * $y )) ]]; then\n            found=true\n            break\n        fi\n        (( x++ ))\n        (( y-- ))\n    done\n    if [[ $found == true ]]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi",
    "    if [ $1 -eq 0 ]\n    then\n        echo \"($3, 0)\"\n        return\n    fi\n    if [ $3 -eq 0 ]\n    then\n        echo \"($2, 0)\"\n        return\n    fi\n    if [ $1 -eq $3 ]\n    then\n        echo \"($2, 1)\"\n        return\n    fi\n    if [ $1 -eq $2 ]\n    then\n        echo \"($3, 1)\"\n        return\n    fi\n    if [ $1 -gt $3 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo \"($(($3/$1)), $(($3%$1)))\"\n            return\n        else\n            echo \"($(($3/$2)), $(($3%$2)))\"\n            return\n        fi\n    else\n        if [ $1 -gt $2 ]\n        then\n            echo \"($(($3/$1)), $(($3%$1)))\"\n            return\n        else\n            echo \"($(($3/$2)), $(($3%$2)))\"\n            return\n        fi\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while (( $a * $x <= $n )); do\n        local r=$(( $n - $a * $x ))\n        if (( $r % $b == 0 )); then\n            y=$(( $r / $b ))\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$(( $x + 1 ))\n    done\n    return 1",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / b))\n    local y_step=$((b / a))\n    local x_step_abs=$((x_step < 0 ? -x_step : x_step))\n    local y_step_abs=$((y_step < 0 ? -y_step : y_step))\n    local x_step_sign=$((x_step < 0 ? -1 : 1))\n    local y_step_sign=$((y_step < 0 ? -1 : 1))\n    local x_step_max=$((x_step_sign > 0 ? x_max : x_min))\n    local y_step_max=$((y_step_sign > 0 ? y_max : y_min))\n    local x_step_min=$((x_step_sign > 0 ? x_min : x_max))\n    local y_step_min=$((y_step_sign > 0 ? y_min : y_max))\n    local x_step_max_abs=$((x_step_max < 0 ? -x_step_max : x_step_max))\n    local y_step_max_abs=$((y_step_max < 0 ? -y_step_max : y_step_max))\n    local x_step_min_abs=$((x_step_min < 0 ? -x_step_min : x_step_min))\n    local y_step_min_abs=$((y_step_min < 0 ? -y_step_min : y_step_min))\n    local x_step_max_abs_mod=$((x_step_max_abs % x_step_abs))\n    local y_step_max_abs_mod=$((y_step_max_abs % y_step_abs))\n    local x_step_min_abs_mod=$((x_step_min_abs % x_",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  local solution=\"\"\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    solution=\"$x,$y\"\n  else\n    solution=\"None\"\n  fi\n  echo \"$solution\"",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a * x)) -lt $n ]; do\n        if [ $((n - a * x)) -eq 0 ]; then\n            echo \"$x $y\"\n            return\n        fi\n        if [ $((n - a * x)) -lt $b ]; then\n            break\n        fi\n        if [ $((n - a * x)) -gt $b ]; then\n            x=$((x + 1))\n            y=0\n        fi\n        if [ $((n - a * x)) -eq $b ]; then\n            x=$((x + 1))\n            y=1\n            echo \"$x $y\"\n            return\n        fi\n        if [ $((n - a * x)) -lt $b ]; then\n            y=$(((n - a * x) / b))\n            echo \"$x $y\"\n            return\n        fi\n    done\n    echo \"None\"",
    "  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local gcd=$(gcd $a $b)\n  if [[ $((n % gcd)) -ne 0 ]]; then\n    echo \"None\"\n    return\n  fi\n  local a_prime=$((a / gcd))\n  local b_prime=$((b / gcd))\n  local n_prime=$((n / gcd))\n  local x_prime=$(find_solution_helper $a_prime $b_prime $n_prime)\n  x=$((x_prime * gcd))\n  y=$(((n - a * x) / b))\n  echo \"($x, $y)\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  for ((x=0; x<=n; x++)); do\n    for ((y=0; y<=n; y++)); do\n      if (( a*x + b*y == n )); then\n        found=1\n        break\n      fi\n    done\n    if (( found == 1 )); then\n      break\n    fi\n  done\n  if (( found == 1 )); then\n    echo \"($x, $y)\"\n  else\n    echo \"None\"\n  fi",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=1\n    local q=0\n    local x2=1\n    local x1=0\n    local y2=0\n    local y1=1\n    while [ $r -ne 0 ]\n    do\n        q=$(( $n / $b ))\n        r=$(( $n % $b ))\n        x=$(( $x2 - $q * $x1 ))\n        y=$(( $y2 - $q * $y1 ))\n        n=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    if [ $n -ne 1 ]\n    then\n        echo \"None\"\n    else\n        echo \"($x, $y)\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi",
    "    for (( x = 0; x <= $1; x++ )); do\n        for (( y = 0; y <= $2; y++ )); do\n            if (( $1 * $x + $2 * $y == $3 )); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a * x)) -le $n ]; do\n    if [ $((a * x + b * y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    temp=$x_incr\n    x_incr=$((x_incr - y_incr))\n    y_incr=$temp\n    x=$((x + x_incr))\n    y=$((y - y_incr))\n  done\n  echo \"None\"",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=1\n    local q=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    while [ $r -ne 0 ]\n    do\n        q=$(($n/$b))\n        r=$(($n%$b))\n        x=$(($x2-$q*$x1))\n        y=$(($y2-$q*$y1))\n        n=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    if [ $n -ne 1 ]\n    then\n        echo \"None\"\n    else\n        echo \"($x2, $y2)\"\n    fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local r1=0\n    local r2=0\n    local q1=0\n    local q2=0\n    local x_temp=0\n    local y_temp=0\n    local r_temp=0\n    local q_temp=0\n    local x1_temp=0\n    local x2_temp=0\n    local y1_temp=0\n    local y2_temp=0\n    local r1_temp=0\n    local r2_temp=0\n    local q1_temp=0\n    local q2_temp=0\n    local a_temp=0\n    local b_temp=0\n    local n_temp=0\n    local temp=0\n    local temp1=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - (a * x)))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"($x, $y)\"\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local r_prev=0\n    local x_prev=0\n    local y_prev=0\n    local q_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local r_prev_prev=0\n    local x_prev_prev_prev=0\n    local y_prev_prev_prev=0\n    local r_prev_prev_prev=0\n    local x_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local r_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local x_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local y",
    "    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_range=$((x_max - x_min))\n    local y_range=$((y_max - y_min))\n    local x_range_half=$((x_range / 2))\n    local y_range_half=$((y_range / 2))\n    local x_mid=$((x_min + x_range_half))\n    local y_mid=$((y_min + y_range_half))\n    local x_mid_val=$((a * x_mid))\n    local y_mid_val=$((b * y_mid))\n    local x_mid_val_plus_y_mid_val=$((x_mid_val + y_mid_val))\n    local x_mid_val_minus_y_mid_val=$((x_mid_val - y_mid_val))\n    local x_mid_val_plus_y_mid_val_abs=$((x_mid_val_plus_y_mid_val < 0 ? -x_mid_val_plus_y_mid_val : x_mid_val_plus_y_mid_val))\n    local x_mid_val_minus_y_mid_val_abs=$((x_mid_val_minus_y_mid_val < 0 ? -x_mid_val_minus_y_mid_val : x_mid_val_minus_y_mid_val))\n    local x_mid_val_plus_y_mid_val_abs_min=$((x_mid_val_plus_y_mid_val_abs < x_mid_val_minus_y_mid_val_abs ? x_mid_val_plus_y_mid_val_abs : x_mid_val_minus_y_mid_val_abs))\n    local x_mid_val_plus_y_mid_val_abs_min_diff=$((",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local gcd=0\n    local x_prev=0\n    local y_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local q=0\n    local r=0\n    local tmp=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n",
    "    for ((x=0; x<=$1; x++)); do\n        for ((y=0; y<=$2; y++)); do\n            if (($1*x + $2*y == $3)); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"",
    "  local x=0\n  local y=0\n  while [ $(( $1 * $x )) -le $3 ]; do\n    y=$(( ($3 - ($1 * $x)) / $2 ))\n    if [ $(( $2 * $y )) -eq $(( $3 - ($1 * $x) )) ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$(( $x + 1 ))\n  done\n  echo \"None\"\n  return 1",
    "  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local d=0\n  local x1=0\n  local x2=0\n  local y1=0\n  local y2=0\n  local q=0\n  local r=0\n  if [ $a -eq 0 ]; then\n    if [ $b -eq 0 ]; then\n      if [ $n -eq 0 ]; then\n        echo \"0 0\"\n      else\n        echo \"None\"\n      fi\n    else\n      if [ $n -eq 0 ]; then\n        echo \"0 0\"\n      else\n        echo \"None\"\n      fi\n    fi\n  else\n    if [ $b -eq 0 ]; then\n      if [ $n -eq 0 ]; then\n        echo \"0 0\"\n      else\n        echo \"None\"\n      fi\n    else\n      if [ $n -eq 0 ]; then\n        echo \"0 0\"\n      else\n        d=$(gcd $a $b)\n        if [ $(($n % $d)) -eq 0 ]; then\n          x1=0\n          x2=1\n          y1=1\n          y2=0\n          while [ $b -ne 0 ]; do\n            q=$(($a / $b))\n            r=$(($a % $b))\n            x=$(($x2 - ($q * $x1)))\n            y=$(($y2 - ($q * $y1)))\n            a=$b\n            b=$r\n            x2=$x1\n            x1=$x\n            y2=$y1\n            y1=$y\n          done\n          x=$(($n / $a * $x2))\n          y=$(($n / $a * $y2))\n          echo \"$x $y\"\n        else\n          echo \"None\"\n        fi\n      fi\n    fi\n  fi",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_tmp=0\n    local y_tmp=0\n    local r=0\n    local q=0\n    local r_tmp=0\n    local q_tmp=0\n    local tmp=0\n    local tmp_a=0\n    local tmp_b=0\n    local tmp_n=0\n    local tmp_x=0\n    local tmp_y=0\n    local tmp_r=0\n    local tmp_q=0\n    local tmp_r_tmp=0\n    local tmp_q_tmp=0\n    local tmp_tmp=0\n    local tmp_tmp_a=0\n    local tmp_tmp_b=0\n    local tmp_tmp_n=0\n    local tmp_tmp_x=0\n    local tmp_tmp_y=0\n    local tmp_tmp_r=0\n    local tmp_tmp_q=0\n    local tmp_tmp_r_tmp=0\n    local tmp_tmp_q_tmp=0\n    local tmp_tmp_tmp=0\n    local tmp_tmp_tmp_a=0\n    local tmp_tmp_tmp_b=0\n    local tmp_tmp_tmp_n=0\n    local tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_r=0\n    local tmp_tmp_tmp_q=0\n    local tmp_tmp_tmp_r_tmp=0\n    local tmp_tmp_tmp_q_tmp=0\n    local tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_a=0\n    local tmp_tmp_tmp_tmp_b=0\n    local tmp_tmp_tmp_tmp_n=0\n    local tmp_tmp_tmp_tmp_x=0\n    local tmp_tmp_tmp_tmp_y=0\n    local tmp_tmp_tmp_tmp_r=0\n    local tmp_tmp_tmp_tmp_q=0\n    local tmp_tmp_tmp_tmp_r_tmp=0\n    local tmp_tmp",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_tmp=0\n    local y_tmp=0\n    local x_solution=0\n    local y_solution=0\n    local solution_found=0\n\n    if [ $a -eq 0 -a $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        else\n            echo \"None\"\n            return 1\n        fi\n    fi\n\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        else\n            if [ $n -eq $b ]; then\n                echo \"1 0\"\n                return 0\n            else\n                echo \"None\"\n                return 1\n            fi\n        fi\n    fi\n\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        else\n            if [ $n -eq $a ]; then\n                echo \"0 1\"\n                return 0\n            else\n                echo \"None\"\n                return 1\n            fi\n        fi\n    fi\n\n    if [ $a -lt 0 ]; then\n        a=$((-$a))\n        x=$((-$x))\n    fi\n\n    if [ $b -lt 0 ]; then\n        b=$((-$b))\n        y=$((-$y))\n    fi\n\n    if [ $a -lt $b ]; then\n        a_tmp=$a\n        b_tmp=$b\n        a=$b_tmp\n        b=$a_tmp\n        x_tmp=$x\n        y_tmp=$y\n        x=$y_tmp\n        y=$x_tmp\n    fi\n\n    d=$((a % b))\n    q=$((a / b))\n    r=$((b % d))\n    x1=1\n    x2=0\n    y",
    "    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"($x, $y)\"\n            return 0\n        fi\n        if [ $((a*(x+x_incr) + b*(y+y_incr))) -le $n ]; then\n            x=$((x+x_incr))\n            y=$((y+y_incr))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"",
    "  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local gcd=$(gcd $a $b)\n  if [ $(($n % $gcd)) -ne 0 ]; then\n    echo \"None\"\n    return\n  fi\n  local a_prime=$(($a / $gcd))\n  local b_prime=$(($b / $gcd))\n  local n_prime=$(($n / $gcd))\n  local x_prime=$(find_solution_helper $a_prime $b_prime $n_prime)\n  x=$(($x_prime * $gcd))\n  y=$(($n - $a * $x) / $b)\n  echo \"($x, $y)\""
  ]
}
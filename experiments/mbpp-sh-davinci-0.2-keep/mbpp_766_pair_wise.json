{
  "name": "mbpp_766_pair_wise",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to return a list of all pairs of consecutive items in a given list.\n#\n# $1 is a space-separated list\npair_wise() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    pair_wise \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 2 3 3 4 4 5\") = \"1 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\" ]]\n    [[ $(candidate \"1 5 7 9 10\") = \"1 5\\n5 7\\n7 9\\n9 10\" ]]\n    [[ $(candidate \"5 1 9 7 10\") = \"5 1\\n1 9\\n9 7\\n7 10\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local i=0\n    local j=1\n    local n=${#list}\n    while [ $j -lt $n ]; do\n        echo \"${list:$i:1} ${list:$j:1}\"\n        i=$((i+1))\n        j=$((j+1))\n    done",
    "  local list=\"$1\"\n  local i=0\n  local j=1\n  local len=${#list}\n  while [ $j -lt $len ]; do\n    echo \"${list:$i:1}${list:$j:1}\"\n    i=$((i+1))\n    j=$((j+1))\n  done",
    "    local list=\"$1\"\n    local pair\n    local i\n    for ((i=0; i<${#list}; i++)); do\n        pair=\"${list:i:2}\"\n        if [[ \"$pair\" =~ ^[^ ]+ [^ ]+$ ]]; then\n            echo \"$pair\"\n        fi\n    done",
    "    local list=\"$1\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -gt 0 ]; then\n            result=\"$result $prev $item\"\n        fi\n        prev=$item\n        i=$((i+1))\n    done\n    echo $result",
    "    local list=\"$1\"\n    local pair=\"\"\n    local result=\"\"\n\n    for i in $list; do\n        if [ -z \"$pair\" ]; then\n            pair=\"$i\"\n        else\n            result=\"$result $pair $i\"\n            pair=\"\"\n        fi\n    done\n\n    echo \"$result\"",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n\n    while [ $i -lt $((${#list} - 1)) ]; do\n        pair=\"${list:$i:1} ${list:$i+1:1}\"\n        echo \"$pair\"\n        i=$((i + 1))\n    done",
    "  local list=\"$1\"\n  local pair\n  local i\n  local j\n  for ((i=0; i<${#list}; i++)); do\n    for ((j=i+1; j<${#list}; j++)); do\n      pair=\"${list:i:1}${list:j:1}\"\n      echo \"$pair\"\n    done\n  done",
    "    local list=\"$1\"\n    local pair\n    for ((i=0; i<${#list}; i++)); do\n        pair=\"${list:i:2}\"\n        if [[ \"$pair\" =~ ^[^ ]+ [^ ]+$ ]]; then\n            echo \"$pair\"\n        fi\n    done",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            pair=\"$item\"\n        else\n            pair=\"$pair $item\"\n            echo \"$pair\"\n            pair=\"\"\n        fi\n        i=$((i+1))\n    done",
    "    local list=\"$1\"\n    local pair\n    local i\n    for ((i=0; i<${#list}-1; i++)); do\n        pair=\"${list:i:2}\"\n        echo \"$pair\"\n    done",
    "    local list=\"$1\"\n    local pair\n    local i\n    local j\n    for ((i=0; i<${#list}; i++)); do\n        for ((j=i+1; j<${#list}; j++)); do\n            pair=\"${list:i:1} ${list:j:1}\"\n            echo \"$pair\"\n        done\n    done",
    "    local list=\"$1\"\n    local result=\"\"\n    local pair=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            pair=\"$item\"\n            i=1\n        else\n            pair=\"$pair $item\"\n            result=\"$result $pair\"\n            i=0\n        fi\n    done\n    echo $result",
    "    local list=\"$1\"\n    local pair\n    local i\n\n    for ((i=0; i < ${#list}; i++)); do\n        pair=\"${list:i:2}\"\n        if [[ \"$pair\" != *\" \"* ]]; then\n            echo \"$pair\"\n        fi\n    done",
    "  local list=$1\n  local pair\n  for ((i=0; i<${#list}; i++)); do\n    pair=\"${list:i:2}\"\n    if [[ ${#pair} -eq 2 ]]; then\n      echo \"${pair}\"\n    fi\n  done",
    "    local list=$1\n    local pairs=()\n    local i=0\n    local j=1\n    local len=${#list[@]}\n    while [ $j -lt $len ]; do\n        pairs[$i]=\"${list[$i]} ${list[$j]}\"\n        i=$((i + 1))\n        j=$((j + 1))\n    done\n    echo \"${pairs[@]}\"",
    "  local list=$1\n  local -a pairs\n  local i=0\n  for item in $list; do\n    if [[ $i -gt 0 ]]; then\n      pairs+=(\"$prev $item\")\n    fi\n    prev=$item\n    ((i++))\n  done\n  echo \"${pairs[@]}\"",
    "  local list=\"$1\"\n  local result=()\n  local prev=\n  for item in $list; do\n    if [[ -n $prev ]]; then\n      result+=(\"$prev $item\")\n    fi\n    prev=\"$item\"\n  done\n  echo \"${result[@]}\"",
    "    local list=\"$1\"\n    local -a array=()\n    local -a pairs=()\n    local i=0\n\n    # Convert the list to an array\n    IFS=' ' read -r -a array <<< \"$list\"\n\n    # Iterate over the array and build pairs\n    while [ $i -lt ${#array[@]} ]; do\n        pairs+=(\"${array[$i]} ${array[$((i+1))]}\")\n        i=$((i+2))\n    done\n\n    # Print the pairs\n    printf '%s\\n' \"${pairs[@]}\"",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            pair=\"$item\"\n            i=1\n        else\n            pair=\"$pair $item\"\n            echo \"$pair\"\n            pair=\"\"\n            i=0\n        fi\n    done",
    "    local list=\"$1\"\n    local -a array\n    local i\n    local j\n    IFS=' ' read -r -a array <<< \"$list\"\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            echo \"${array[i]} ${array[j]}\"\n        done\n    done"
  ]
}
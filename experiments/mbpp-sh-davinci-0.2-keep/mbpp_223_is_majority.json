{
  "name": "mbpp_223_is_majority",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\n#\n# $1 is a space-separated list\n# $2 is an integer\n# $3 is an integer\nis_majority() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_majority \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 3 3 3 10\" \"7\" \"3\") = \"true\" ]]\n    [[ $(candidate \"1 1 2 4 4 4 6 6\" \"8\" \"4\") = \"false\" ]]\n    [[ $(candidate \"1 1 1 2 2\" \"5\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1 1 2 2\" \"5\" \"1\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local i=0\n    local count=0\n    local half=$((n / 2))\n\n    while [[ $i -lt $n ]]; do\n        if [[ ${array[$i]} -eq $element ]]; then\n            count=$((count + 1))\n        fi\n\n        if [[ $count -gt $half ]]; then\n            echo 1\n            return\n        fi\n\n        i=$((i + 1))\n    done\n\n    echo 0",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local l=0\n    local r=$((n-1))\n    local mid\n    local count=0\n    while [[ $l -le $r ]]; do\n        mid=$(((l+r)/2))\n        if [[ ${arr[$mid]} -eq $x ]]; then\n            count=$((count+1))\n            if [[ $count -gt $((n/2)) ]]; then\n                echo \"true\"\n                return\n            fi\n            l=$((mid+1))\n        elif [[ ${arr[$mid]} -gt $x ]]; then\n            r=$((mid-1))\n        else\n            l=$((mid+1))\n        fi\n    done\n    echo \"false\"",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for ((i=0; i<n; i++)); do\n    if [[ ${arr[i]} -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local -i i=0\n    local -i j=$((n-1))\n    local -i mid=0\n    local -i count=0\n    while ((i <= j))\n    do\n        mid=$(((i+j)/2))\n        if ((arr[mid] == x))\n        then\n            count=$((count+1))\n            break\n        elif ((arr[mid] < x))\n        then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    if ((count == 0))\n    then\n        return 1\n    fi\n    i=$((mid-1))\n    while ((i >= 0))\n    do\n        if ((arr[i] == x))\n        then\n            count=$((count+1))\n        else\n            break\n        fi\n        i=$((i-1))\n    done\n    j=$((mid+1))\n    while ((j < n))\n    do\n        if ((arr[j] == x))\n        then\n            count=$((count+1))\n        else\n            break\n        fi\n        j=$((j+1))\n    done\n    if ((count > n/2))\n    then\n        return 0\n    else\n        return 1\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n/2 )) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local element=\"$3\"\n    local count=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            ((count++))\n        fi\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -n arr=\"$1\"\n    local n=\"$2\"\n    local x=\"$3\"\n    local i=0\n    local j=0\n    local k=0\n    local mid=$((n/2))\n    while [ $i -lt $n ] && [ $arr[$i] -le $x ]; do\n        if [ $arr[$i] -eq $x ]; then\n            j=$((j+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $j -gt $mid ]; then\n        k=1\n    fi\n    echo $k",
    "  local list=$1\n  local n=$2\n  local element=$3\n  local count=0\n  for i in $list; do\n    if [[ $i -eq $element ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[-1]}\n    local x=${arr[-2]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i mid=0\n    local -i count=0\n    local -i len=${#arr[@]}\n    local -i left=0\n    local -i right=0\n    local -i mid_index=0\n    local -i mid_index_left=0\n    local -i mid_index_right=0\n\n    for ((i=0; i<len-2; i++)); do\n        arr[i]=${arr[i]}\n    done\n\n    mid=$((n/2))\n    left=0\n    right=n-1\n\n    while ((left <= right)); do\n        mid_index=$(((left+right)/2))\n        mid_index_left=$((mid_index-1))\n        mid_index_right=$((mid_index+1))\n\n        if ((arr[mid_index] == x && arr[mid_index_left] != x)); then\n            count=1\n            for ((j=mid_index_right; j<n; j++)); do\n                if ((arr[j] == x)); then\n                    count=$((count+1))\n                fi\n            done\n            if ((count > mid)); then\n                echo \"1\"\n                return\n            else\n                echo \"0\"\n                return\n            fi\n        elif ((arr[mid_index] == x && arr[mid_index_left] == x)); then\n            right=$((mid_index_left))\n        elif ((arr[mid_index] < x)); then\n            left=$((mid_index_right))\n        else\n            right=$((mid_index_left))\n        fi\n    done\n\n    echo \"0\"",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [ $i -eq $element ]; then\n      count=$((count+1))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local arr=($1)\n    local n=$2\n    local elem=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [ ${arr[$i]} -eq $elem ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        if [ $count -gt $((n/2)) ]\n        then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1",
    "  local -a array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [ $i -eq $x ]; then\n      ((count++))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count + 1))\n    fi\n    if [ $count -gt $((n / 2)) ]; then\n      echo \"1\"\n      return\n    fi\n    i=$((i + 1))\n  done\n  echo \"0\"",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i count\n    arr=($1)\n    n=$2\n    x=$3\n    low=0\n    high=$((n-1))\n    while [[ low -le high ]]; do\n        mid=$(((low+high)/2))\n        if [[ ${arr[mid]} -eq x ]]; then\n            count=0\n            for ((i=0; i<n; i++)); do\n                if [[ ${arr[i]} -eq x ]]; then\n                    count=$((count+1))\n                fi\n            done\n            if [[ count -gt n/2 ]]; then\n                echo 1\n                return\n            else\n                echo 0\n                return\n            fi\n        elif [[ ${arr[mid]} -lt x ]]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n    done\n    echo 0",
    "    local -a array=(\"${!1}\")\n    local n=$2\n    local element=$3\n    local -i left=0\n    local -i right=n-1\n    local -i mid\n    local -i majority_index\n    while left <= right; do\n        mid=$(((left+right)/2))\n        if array[mid] == element; then\n            majority_index=$mid\n            break\n        elif array[mid] < element; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    if (( majority_index == -1 )); then\n        return 1\n    fi\n    if (( majority_index < n/2 )); then\n        return 1\n    fi\n    if (( array[majority_index] != element )); then\n        return 1\n    fi\n    if (( majority_index > 0 && array[majority_index-1] == element )); then\n        return 1\n    fi\n    if (( majority_index < n-1 && array[majority_index+1] == element )); then\n        return 1\n    fi\n    return 0",
    "    local -a array\n    local -i i\n    local -i n\n    local -i x\n    local -i count\n\n    array=($1)\n    n=$2\n    x=$3\n\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $n/2 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array\n    array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a array=(\"${!1}\")\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n / 2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local mid=$((n/2))\n    while [ $i -lt $n ] && [ ${arr[$i]} -lt $x ]; do\n        i=$((i+1))\n    done\n    if [ $i -eq $n ] || [ ${arr[$i]} -gt $x ]; then\n        return 1\n    fi\n    j=$i\n    while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; do\n        j=$((j+1))\n    done\n    if [ $((j-i)) -gt $mid ]; then\n        return 0\n    else\n        return 1\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local left=0\n  local right=$((n-1))\n  while left <= right; do\n    local mid=$((left+(right-left)/2))\n    if ${arr[mid]} -eq $x; then\n      local count=$((mid+1))\n      while ${arr[count]} -eq $x; do\n        count=$((count+1))\n      done\n      if $((count-mid)) -gt $((n/2)); then\n        echo \"true\"\n        return\n      else\n        echo \"false\"\n        return\n      fi\n    elif ${arr[mid]} -gt $x; then\n      right=$((mid-1))\n    else\n      left=$((mid+1))\n    fi\n  done\n  echo \"false\"",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for (( i=0; i<$n; i++ )); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i mid_element\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"$2\"\n    element=\"$3\"\n\n    low=0\n    high=\"$n\"\n    mid=\"$(( (low + high) / 2 ))\"\n    mid_element=\"${array[$mid]}\"\n\n    while [[ \"$low\" -le \"$high\" ]]; do\n        if [[ \"$mid_element\" -eq \"$element\" ]]; then\n            break\n        elif [[ \"$mid_element\" -lt \"$element\" ]]; then\n            low=\"$(( mid + 1 ))\"\n        else\n            high=\"$(( mid - 1 ))\"\n        fi\n        mid=\"$(( (low + high) / 2 ))\"\n        mid_element=\"${array[$mid]}\"\n    done\n\n    if [[ \"$mid_element\" -ne \"$element\" ]]; then\n        echo \"false\"\n        return\n    fi\n\n    i=\"$mid\"\n    while [[ \"$i\" -ge 0 && \"${array[$i]}\" -eq \"$element\" ]]; do\n        i=\"$(( i - 1 ))\"\n    done\n    i=\"$(( i + 1 ))\"\n\n    if [[ \"$(( mid - i + 1 ))\" -gt \"$(( n / 2 ))\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n / 2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local j=$((n-1))\n  local mid=0\n  local count=0\n  while [ $i -le $j ]; do\n    mid=$(((i+j)/2))\n    if [ ${arr[mid]} -eq $x ]; then\n      count=$((count+1))\n      i=$((mid+1))\n    elif [ ${arr[mid]} -lt $x ]; then\n      i=$((mid+1))\n    else\n      j=$((mid-1))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=$((n-1))\n    local mid=0\n    local count=0\n    while [ $i -le $j ]; do\n        mid=$(((i+j)/2))\n        if [ ${arr[$mid]} -eq $x ]; then\n            count=$((count+1))\n            i=$((mid+1))\n        elif [ ${arr[$mid]} -lt $x ]; then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local -i i=0\n    local -i j=0\n    local -i mid=0\n    local -i left=0\n    local -i right=0\n    local -i count=0\n\n    mid=$((n/2))\n    left=$((mid-1))\n    right=$((mid+1))\n\n    if [[ ${array[$mid]} -eq $element ]]; then\n        count=1\n        while [[ $left -ge 0 && ${array[$left]} -eq $element ]]; do\n            ((count++))\n            ((left--))\n        done\n        while [[ $right -lt $n && ${array[$right]} -eq $element ]]; do\n            ((count++))\n            ((right++))\n        done\n        if [[ $count -gt $mid ]]; then\n            echo 1\n        else\n            echo 0\n        fi\n    else\n        echo 0\n    fi",
    "  local arr=($1)\n  local n=$2\n  local elem=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq $elem ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $n/2 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $n/2 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local list=$1\n  local n=$2\n  local elem=$3\n  local count=0\n  for i in $list; do\n    if [ $i -eq $elem ]; then\n      ((count++))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array=(\"${@:1:$2}\")\n    local -i n=$2\n    local -i x=$3\n    local -i i=0\n    local -i j=0\n    local -i count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${array[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $((n/2)) ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${array[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local left=0\n    local right=$((n - 1))\n    local mid\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if ((arr[mid] == x)); then\n            if ((mid == 0 || arr[mid - 1] != x)); then\n                break\n            else\n                right=$((mid - 1))\n            fi\n        elif ((arr[mid] > x)); then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    if ((left > right)); then\n        return 1\n    fi\n    local count=0\n    for ((i = mid; i < n; i++)); do\n        if ((arr[i] == x)); then\n            ((count++))\n        else\n            break\n        fi\n    done\n    if ((count > n / 2)); then\n        return 0\n    else\n        return 1\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[0]}\n    local x=${arr[1]}\n    local i=0\n    local count=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi",
    "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local n=$2\n    local x=$3\n    local i\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if ((count > n/2)); then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            count=$((count + 1))\n        fi\n    done\n    if [[ $count -gt $((n / 2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i mid\n\n    array=($1)\n    n=$2\n    element=$3\n    count=0\n    mid=$((n / 2))\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local e=$3\n  local i=0\n  local count=0\n  while [[ $i -lt $n ]]; do\n    if [[ ${arr[$i]} -eq $e ]]; then\n      (( count++ ))\n    fi\n    (( i++ ))\n  done\n  if [[ $count -gt $(( n / 2 )) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a array=(\"$@\")\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    arr=($1)\n    n=$2\n    elem=$3\n    if [ $n -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $n -eq 1 ]; then\n        if [ ${arr[0]} -eq $elem ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n        return\n    fi\n    mid=$((n/2))\n    if [ ${arr[$mid]} -eq $elem ]; then\n        if [ $((mid+1)) -eq $n ]; then\n            echo \"true\"\n            return\n        fi\n        if [ ${arr[$((mid+1))]} -ne $elem ]; then\n            echo \"true\"\n            return\n        fi\n        is_majority \"${arr[@]:$((mid+1))}\" $((n-mid-1)) $elem\n    else\n        if [ ${arr[$mid]} -gt $elem ]; then\n            is_majority \"${arr[@]:0:$mid}\" $mid $elem\n        else\n            is_majority \"${arr[@]:$((mid+1))}\" $((n-mid-1)) $elem\n        fi\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[0]}\n    local x=${arr[1]}\n    local -i count=0\n    for ((i=2; i<=n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local -n arr=\"$1\"\n  local n=\"$2\"\n  local x=\"$3\"\n  local i=0\n  local j=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      let j=$i+1\n      while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; do\n        let j=$j+1\n      done\n      let count=$j-$i\n      if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n        return\n      fi\n      let i=$j\n    else\n      let i=$i+1\n    fi\n  done\n  echo \"0\"",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            let count+=1\n        fi\n        if [ $count -gt $((n/2)) ]\n        then\n            echo \"1\"\n            return\n        fi\n        let i+=1\n    done\n    echo \"0\"",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local mid=$((n/2))\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]; then\n            j=$((j+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $j -gt $mid ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local left=0\n    local right=$((n-1))\n    local mid=0\n    while [[ $left <= $right ]]; do\n        mid=$((($left+$right)/2))\n        if [[ ${arr[$mid]} -eq $x ]]; then\n            break\n        elif [[ ${arr[$mid]} -lt $x ]]; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    if [[ $left -gt $right ]]; then\n        echo \"false\"\n        return\n    fi\n    local left_count=0\n    local right_count=0\n    local i=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            left_count=$((left_count+1))\n        fi\n        i=$((i+1))\n    done\n    if [[ $left_count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            j=$i\n            while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; do\n                count=$((count + 1))\n                j=$((j + 1))\n            done\n            break\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $((n/2)) ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local list=($1)\n  local n=$2\n  local element=$3\n  local count=0\n\n  for i in ${list[@]}; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i mid_val\n    local -i count\n    arr=($1)\n    n=$2\n    x=$3\n    low=0\n    high=$((n-1))\n    mid=$(((low+high)/2))\n    mid_val=${arr[$mid]}\n    if [ $x -eq $mid_val ]; then\n        count=0\n        for ((i=0; i<n; i++)); do\n            if [ $x -eq ${arr[$i]} ]; then\n                count=$((count+1))\n            fi\n        done\n        if [ $count -gt $((n/2)) ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif [ $x -lt $mid_val ]; then\n        is_majority \"$(echo ${arr[@]:0:$mid})\" $mid $x\n    else\n        is_majority \"$(echo ${arr[@]:$((mid+1)):$((n-mid-1))})\" $((n-mid-1)) $x\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -a array\n    local -i i\n    local -i n\n    local -i element\n    local -i count\n    local -i majority\n    local -i result\n\n    array=($1)\n    n=${#array[@]}\n    element=$2\n    majority=$((n / 2))\n    count=0\n    result=0\n\n    for (( i = 0; i < n; i++ )); do\n        if [[ ${array[i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n\n    if [[ $count -gt $majority ]]; then\n        result=1\n    fi\n\n    echo $result",
    "    local arr=($1)\n    local n=$2\n    local elem=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local arr=($1)\n    local n=$2\n    local elem=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=${arr[0]}\n    local x=${arr[1]}\n    local count=0\n    for ((i=2; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $n/2 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=$((n/2))\n    local j=$((i+1))\n    local c=0\n    while [ $i -ge 0 ] && [ $j -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((c++))\n        fi\n        if [ ${arr[$j]} -eq $x ]; then\n            ((c++))\n        fi\n        ((i--))\n        ((j++))\n    done\n    if [ $i -ge 0 ] && [ ${arr[$i]} -eq $x ]; then\n        ((c++))\n    fi\n    if [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; then\n        ((c++))\n    fi\n    if [ $c -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local -i i=0\n    local -i j=0\n    local -i mid=0\n    local -i count=0\n\n    i=$((n/2))\n    j=$((i+1))\n    mid=$((i+j/2))\n    while [[ $i -ge 0 && $j -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((--i))\n            ((++count))\n        elif [[ ${arr[$j]} -eq $x ]]; then\n            ((++j))\n            ((++count))\n        else\n            ((--i))\n            ((++j))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            echo 1\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo 0",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i mid\n\n    array=($1)\n    n=$2\n    element=$3\n    mid=$((n / 2))\n    count=0\n\n    for ((i = 0; i < n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ $count -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i mid_val\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"$2\"\n    x=\"$3\"\n\n    low=0\n    high=\"$n\"\n    while [ \"$low\" -le \"$high\" ]; do\n        mid=$(( (low + high) / 2 ))\n        mid_val=\"${array[$mid]}\"\n        if [ \"$mid_val\" -eq \"$x\" ]; then\n            i=\"$mid\"\n            while [ \"$i\" -ge 0 ] && [ \"${array[$i]}\" -eq \"$x\" ]; do\n                (( i-- ))\n            done\n            (( i++ ))\n            if [ \"$(( mid - i + 1 ))\" -gt \"$(( n / 2 ))\" ]; then\n                return 0\n            else\n                return 1\n            fi\n        elif [ \"$mid_val\" -gt \"$x\" ]; then\n            high=\"$(( mid - 1 ))\"\n        else\n            low=\"$(( mid + 1 ))\"\n        fi\n    done\n\n    return 1",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [ $i -eq $x ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a array\n  local -i n\n  local -i x\n  local -i i\n  local -i count\n  array=($1)\n  n=$2\n  x=$3\n  count=0\n  for ((i=0; i<n; i++)); do\n    if [[ ${array[i]} -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -a array=(\"${!1}\")\n    local n=$2\n    local element=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${array[$i]} -eq $element ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local list=\"$1\"\n  local n=\"$2\"\n  local element=\"$3\"\n  local count=0\n  for i in $list; do\n    if [ \"$i\" -eq \"$element\" ]; then\n      count=$((count + 1))\n    fi\n  done\n  if [ \"$count\" -gt \"$((n / 2))\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=\"$1\"\n    local n=\"$2\"\n    local x=\"$3\"\n\n    local low=0\n    local high=$((n - 1))\n    local mid=0\n\n    while [[ low -le high ]]; do\n        mid=$((low + (high - low) / 2))\n        if [[ ${arr[mid]} -eq x ]]; then\n            if [[ mid -eq 0 || ${arr[mid - 1]} -ne x ]]; then\n                break\n            else\n                high=$((mid - 1))\n            fi\n        elif [[ ${arr[mid]} -lt x ]]; then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n\n    local count=0\n    local i=$mid\n    while [[ $i -lt n && ${arr[i]} -eq x ]]; do\n        ((count++))\n        ((i++))\n    done\n\n    if [[ $count -gt $((n / 2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a arr=(\"$@\")\n  local n=$2\n  local element=$3\n  local count=0\n  for (( i=0; i<n; i++ )); do\n    if [[ ${arr[$i]} -eq $element ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $(( n/2 )) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local list=$1\n  local n=$2\n  local element=$3\n  local count=0\n  for i in $list; do\n    if [ $i -eq $element ]; then\n      count=$((count + 1))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local left=0\n    local right=n-1\n    local mid\n    local count=0\n\n    while [[ $left -le $right ]]; do\n        mid=$(( (left+right)/2 ))\n        if [[ ${arr[mid]} -eq $x ]]; then\n            count=$(( count+1 ))\n            if [[ $count -gt $(( n/2 )) ]]; then\n                echo \"true\"\n                return 0\n            fi\n            left=$(( mid+1 ))\n        elif [[ ${arr[mid]} -lt $x ]]; then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n    echo \"false\"",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i cnt\n    local -i mid\n    arr=($1)\n    n=$2\n    x=$3\n    mid=$((n/2))\n    cnt=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            ((cnt++))\n        fi\n    done\n    if [[ $cnt -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${array[@]}; do\n    if [ $i -eq $element ]; then\n      ((count++))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -n arr=$1\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i count\n    local -i left\n    local -i right\n    local -i mid_element\n\n    arr=($1)\n    n=$2\n    x=$3\n    mid=n/2\n\n    left=0\n    right=n-1\n\n    while [ $left -le $right ]\n    do\n        mid=$(( (left+right)/2 ))\n        mid_element=${arr[$mid]}\n        if [ $mid_element -eq $x ]\n        then\n            count=0\n            for (( i=0; i<n; i++ ))\n            do\n                if [ ${arr[$i]} -eq $x ]\n                then\n                    count=$(( count+1 ))\n                fi\n            done\n            if [ $count -gt $mid ]\n            then\n                return 0\n            else\n                return 1\n            fi\n        elif [ $mid_element -lt $x ]\n        then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n    return 1",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            echo \"1\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"0\"",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [ $i -eq $x ]; then\n      ((count++))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a a=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local j=$((n-1))\n  local mid=0\n  local count=0\n\n  while [[ $i -le $j ]]; do\n    mid=$(((i+j)/2))\n    if [[ ${a[$mid]} -eq $x ]]; then\n      count=$((count+1))\n      i=$((i+1))\n    elif [[ ${a[$mid]} -lt $x ]]; then\n      i=$((i+1))\n    else\n      j=$((j-1))\n    fi\n  done\n\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    if [ $count -gt $(( n / 2 )) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i count\n\n    arr=($1)\n    n=$2\n    x=$3\n    mid=$((n / 2))\n    left=0\n    right=$((n - 1))\n    count=0\n\n    while left <= right; do\n        i=$(((left + right) / 2))\n        if ((arr[i] == x)); then\n            count=$((count + 1))\n            if ((count > mid)); then\n                echo 1\n                return\n            fi\n        fi\n        if ((arr[i] < x)); then\n            left=$((i + 1))\n        else\n            right=$((i - 1))\n        fi\n    done\n\n    echo 0",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n\n    local i=0\n    local j=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $x ]\n    then\n      count=$((count+1))\n    fi\n    if [ $count -gt $((n/2)) ]\n    then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i max_count\n\n    array=($1)\n    n=$2\n    element=$3\n    i=0\n    count=0\n    max_count=$((n / 2))\n\n    while [ $i -lt $n ]; do\n        if [ ${array[$i]} -eq $element ]; then\n            ((count++))\n            if [ $count -gt $max_count ]; then\n                return 0\n            fi\n        fi\n        ((i++))\n    done\n\n    return 1",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local l=0\n    local r=$((n-1))\n    local m=0\n    local count=0\n    while l <= r; do\n        m=$(((l+r)/2))\n        if arr[m] == x; then\n            count=$((count+1))\n            break\n        elif arr[m] < x; then\n            l=$((m+1))\n        else\n            r=$((m-1))\n        fi\n    done\n    if [ $count -eq 0 ]; then\n        return 1\n    fi\n    l=$((m-1))\n    while [ $l -ge 0 ] && [ ${arr[l]} -eq $x ]; do\n        count=$((count+1))\n        l=$((l-1))\n    done\n    r=$((m+1))\n    while [ $r -lt $n ] && [ ${arr[r]} -eq $x ]; do\n        count=$((count+1))\n        r=$((r+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local array=($1)\n    local length=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $((length/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for ((i=0; i<n; i++)); do\n    if [[ ${arr[i]} -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local i=0\n  local j=0\n  local count=0\n\n  while [ $i -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $x ]\n    then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n\n  if [ $count -gt $((n/2)) ]\n  then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local lo=0\n    local hi=$((n-1))\n    local mid\n    while lo <= hi; do\n        mid=$((lo + (hi - lo) / 2))\n        if arr[mid] == x; then\n            if ((mid == 0 || arr[mid-1] != x)) && ((mid == n-1 || arr[mid+1] != x)); then\n                echo \"true\"\n                return\n            fi\n            if ((mid > 0 && arr[mid-1] == x)); then\n                hi=$((mid-1))\n            else\n                lo=$((mid+1))\n            fi\n        elif arr[mid] < x; then\n            lo=$((mid+1))\n        else\n            hi=$((mid-1))\n        fi\n    done\n    echo \"false\"",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $n/2 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local element=$3\n\n  local left=0\n  local right=$((n - 1))\n  local mid=0\n\n  while [[ $left -le $right ]]; do\n    mid=$(((left + right) / 2))\n    if [[ ${arr[$mid]} -eq $element ]]; then\n      local count=0\n      for ((i = 0; i < n; i++)); do\n        if [[ ${arr[$i]} -eq $element ]]; then\n          count=$((count + 1))\n        fi\n      done\n      if [[ $count -gt $((n / 2)) ]]; then\n        echo \"true\"\n        return\n      else\n        echo \"false\"\n        return\n      fi\n    elif [[ ${arr[$mid]} -gt $element ]]; then\n      right=$((mid - 1))\n    else\n      left=$((mid + 1))\n    fi\n  done\n  echo \"false\"",
    "    local -n array=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [[ $i -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i mid\n    array=($1)\n    n=$2\n    element=$3\n    mid=$((n/2))\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            ((count++))\n        fi\n        if [[ $count -gt $mid ]]; then\n            echo 1\n            return\n        fi\n    done\n    echo 0",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    local mid=$((n/2))\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $mid ]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [ $i -eq $x ]; then\n      count=$((count+1))\n    fi\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for (( i=0; i<$n; i++ )); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if (( count > n/2 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local mid=$((n/2))\n    local i=0\n    local j=0\n    local count=0\n    local found=0\n\n    # Find the first occurrence of x\n    while [ $i -lt $n ] && [ ${arr[$i]} -lt $x ]; do\n        i=$((i+1))\n    done\n\n    # If x is not present in the array\n    if [ $i -eq $n ]; then\n        return 1\n    fi\n\n    # Find the last occurrence of x\n    j=$((i+1))\n    while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; do\n        j=$((j+1))\n    done\n\n    # Count the number of occurrences of x\n    count=$((j-i))\n\n    # If x is present more than n/2 times\n    if [ $count -gt $mid ]; then\n        return 0\n    fi\n\n    return 1",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local mid=0\n    local count=0\n    local result=0\n\n    mid=$((n/2))\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n\n    if [ $count -gt $mid ]; then\n        result=1\n    else\n        result=0\n    fi\n\n    echo $result",
    "    local array=($1)\n    local length=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((length / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local count=0\n  for (( i=0; i<n; i++ )); do\n    if [[ ${arr[i]} -eq $x ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -n arr=\"$1\"\n    local n=\"$2\"\n    local x=\"$3\"\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ \"${arr[$i]}\" -eq \"$x\" ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local elem=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $elem ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a arr=($1)\n  local n=$2\n  local x=$3\n  local count=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq $x ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local arr=($1)\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            count=$((count + 1))\n        fi\n        if [ $count -gt $((n / 2)) ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    local arr=($1)\n    local n=$2\n    local elem=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[i]} -eq $elem ]]; then\n            count=$((count + 1))\n        fi\n    done\n    if [[ $count -gt $((n / 2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local left=0\n    local right=$((n-1))\n    local mid\n\n    while [[ $left -le $right ]]; do\n        mid=$((left + (right-left)/2))\n        if [[ ${arr[$mid]} -eq $x ]]; then\n            if [[ $mid -eq 0 || ${arr[$((mid-1))]} -ne $x ]]; then\n                break\n            else\n                right=$((mid-1))\n            fi\n        elif [[ ${arr[$mid]} -lt $x ]]; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n\n    if [[ $left -gt $right ]]; then\n        return 1\n    fi\n\n    local count=1\n    local i=$((mid+1))\n    while [[ $i -lt $n && ${arr[$i]} -eq $x ]]; do\n        ((count++))\n        ((i++))\n    done\n\n    if [[ $count -gt $((n/2)) ]]; then\n        return 0\n    fi\n\n    return 1",
    "    local list=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${list[@]}; do\n        if [ $i -eq $element ]; then\n            ((count++))\n        fi\n    done\n    if [ $count -gt $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a arr=(\"$@\")\n  local n=$2\n  local elem=$3\n  local count=0\n  for ((i=0; i<n; i++)); do\n    if [[ ${arr[i]} -eq $elem ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local j=0\n  local count=0\n  while [ $i -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $x ]\n    then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  if [ $count -gt $((n/2)) ]\n  then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -a arr=($1)\n    local n=$2\n    local elem=$3\n    local mid=$((n / 2))\n    local i=0\n    local j=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $elem ]\n        then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local elem=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[i]} -eq $elem ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $(( n/2 )) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local sorted_array=($1)\n    local n=$2\n    local element=$3\n    local mid=$((n/2))\n    local mid_element=${sorted_array[$mid]}\n    if [ $mid_element -eq $element ]; then\n        local count=0\n        for i in ${sorted_array[@]}; do\n            if [ $i -eq $element ]; then\n                count=$((count+1))\n            fi\n        done\n        if [ $count -gt $mid ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif [ $mid_element -gt $element ]; then\n        local left_array=${sorted_array[@]:0:$mid}\n        is_majority \"$left_array\" $mid $element\n    else\n        local right_array=${sorted_array[@]:$mid:$n}\n        is_majority \"$right_array\" $mid $element\n    fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i mid_element\n    local -i count\n\n    array=($1)\n    n=$2\n    element=$3\n\n    low=0\n    high=$((n - 1))\n\n    while [[ $low -le $high ]]; do\n        mid=$(((low + high) / 2))\n        mid_element=${array[$mid]}\n\n        if [[ $mid_element -eq $element ]]; then\n            count=0\n            for ((i = 0; i < n; i++)); do\n                if [[ ${array[$i]} -eq $element ]]; then\n                    count=$((count + 1))\n                fi\n            done\n\n            if [[ $count -gt $((n / 2)) ]]; then\n                echo 1\n                return\n            else\n                echo 0\n                return\n            fi\n        elif [[ $mid_element -gt $element ]]; then\n            high=$((mid - 1))\n        else\n            low=$((mid + 1))\n        fi\n    done\n\n    echo 0",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local mid=$((n/2))\n  local i=0\n  local j=0\n  local k=0\n  local count=0\n\n  # Find the first occurrence of x\n  while [ $i -lt $n ] && [ ${arr[$i]} -lt $x ]; do\n    ((i++))\n  done\n\n  # If x is not present in arr[]\n  if [ $i -eq $n ] || [ ${arr[$i]} -ne $x ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Find the last occurrence of x\n  j=$i\n  while [ $j -lt $n ] && [ ${arr[$j]} -eq $x ]; do\n    ((j++))\n  done\n\n  # If there are more than n/2 occurrences of x\n  if [ $((j-i)) -gt $mid ]; then\n    echo \"true\"\n    return\n  fi\n\n  echo \"false\"",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local mid=$((n/2))\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n            if [ $count -gt $mid ]\n            then\n                echo \"1\"\n                return\n            fi\n        fi\n        i=$((i+1))\n    done\n    echo \"0\"",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i majority_count\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"$2\"\n    element=\"$3\"\n\n    count=0\n    majority_count=$((n / 2))\n    for ((i = 0; i < n; i++)); do\n        if [[ ${array[i]} -eq element ]]; then\n            ((count++))\n        fi\n    done\n\n    if [[ count -gt majority_count ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $n/2 ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq $x ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    local mid=$((n/2))\n\n    while [ $i -lt $n ]\n    do\n        if [ ${array[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local element=$3\n    local -i count=0\n    local -i i=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $element ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a list=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${list[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local arr=($1)\n  local n=$2\n  local x=$3\n  local mid=$((n / 2))\n  local i=0\n  local j=0\n  local k=0\n  local count=0\n\n  while [ $i -lt $n ] && [ $j -lt $n ]\n  do\n    if [ ${arr[$i]} -eq $x ]\n    then\n      let i++\n      let count++\n    elif [ ${arr[$j]} -eq $x ]\n    then\n      let j--\n      let count++\n    elif [ ${arr[$i]} -lt $x ]\n    then\n      let i++\n    elif [ ${arr[$j]} -gt $x ]\n    then\n      let j--\n    fi\n  done\n\n  if [ $count -gt $mid ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=($1)\n    local n=$2\n    local elem=$3\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq $elem ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local mid=$((n/2))\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        if [ $count -gt $mid ]\n        then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1",
    "    local -a arr=(\"$@\")\n    local n=${#arr[@]}\n    local x=$3\n    local mid=$((n/2))\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $mid ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in ${array[@]}; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i mid\n    local -i low\n    local -i high\n    local -i mid_element\n    local -i mid_element_count\n    local -i count\n    array=($1)\n    n=$2\n    element=$3\n    low=0\n    high=$((n-1))\n    mid=$(((low+high)/2))\n    mid_element=${array[$mid]}\n    mid_element_count=0\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            ((count++))\n        fi\n        if [[ ${array[$i]} -eq $mid_element ]]; then\n            ((mid_element_count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    elif [[ $mid_element_count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  if [ $count -gt $((n/2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local -a array=(\"${!1}\")\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $((n/2)) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local k=0\n    local mid=$((n/2))\n    while [ $i -lt $n ] && [ $j -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((i++))\n            ((k++))\n        else\n            ((i++))\n        fi\n        if [ ${arr[$j]} -eq $x ]\n        then\n            ((j--))\n            ((k++))\n        else\n            ((j--))\n        fi\n    done\n    if [ $k -gt $mid ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=$((n/2))\n    if [ ${arr[$i]} -eq $x ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    local mid=$((n/2))\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local element=\"$3\"\n    local count=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            count=$((count + 1))\n        fi\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local -i low=0\n    local -i high=n-1\n    local -i mid\n    while [ $low -le $high ]; do\n        mid=$(((low+high)/2))\n        if [ ${arr[$mid]} -eq $x ]; then\n            local -i count=$((mid+1))\n            while [ ${arr[$((mid+1))]} -eq $x ]; do\n                ((count++))\n                ((mid++))\n            done\n            if [ $count -gt $((n/2)) ]; then\n                return 0\n            else\n                return 1\n            fi\n        elif [ ${arr[$mid]} -lt $x ]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n    done\n    return 1",
    "    local -a array\n    local -i i\n    local -i n\n    local -i x\n    local -i mid\n    local -i left\n    local -i right\n    local -i count\n    array=($1)\n    n=$2\n    x=$3\n    mid=$((n/2))\n    left=$((mid-1))\n    right=$((mid+1))\n    count=1\n    if [ ${array[$mid]} -eq $x ]; then\n        while [ $left -ge 0 -a ${array[$left]} -eq $x ]; do\n            let count++\n            let left--\n        done\n        while [ $right -lt $n -a ${array[$right]} -eq $x ]; do\n            let count++\n            let right++\n        done\n        if [ $count -gt $mid ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local elem=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a arr=(\"$@\")\n    local len=${#arr[@]}\n    local x=$3\n    local mid=$((len / 2))\n    local i=0\n    local j=0\n    while [[ $i -lt $len ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            j=$((j + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [[ $j -gt $mid ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i mid\n    local -i low\n    local -i high\n    local -i count\n\n    array=($1)\n    n=$2\n    x=$3\n\n    low=0\n    high=$((n-1))\n    mid=$(((low+high)/2))\n\n    while [[ $low -le $high ]]; do\n        if [[ ${array[$mid]} -eq $x ]]; then\n            count=0\n            for ((i=0; i<n; i++)); do\n                if [[ ${array[$i]} -eq $x ]]; then\n                    count=$((count+1))\n                fi\n            done\n            if [[ $count -gt $((n/2)) ]]; then\n                echo \"1\"\n                return\n            else\n                echo \"0\"\n                return\n            fi\n        elif [[ ${array[$mid]} -lt $x ]]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n        mid=$(((low+high)/2))\n    done\n    echo \"0\"",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            let count++\n        fi\n        let i++\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${array[i]} -eq $element ]]; then\n            (( count++ ))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local left=0\n    local right=$((n - 1))\n    local mid=0\n    while [[ $left <= $right ]]; do\n        mid=$(((left + right) / 2))\n        if [[ ${arr[$mid]} -eq $x ]]; then\n            break\n        elif [[ ${arr[$mid]} -lt $x ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [[ $left -gt $right ]]; then\n        echo false\n        return\n    fi\n    local left_count=0\n    local right_count=0\n    local i=$mid\n    while [[ $i -ge 0 ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            left_count=$((left_count + 1))\n        else\n            break\n        fi\n        i=$((i - 1))\n    done\n    i=$mid\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            right_count=$((right_count + 1))\n        else\n            break\n        fi\n        i=$((i + 1))\n    done\n    if [[ $((left_count + right_count)) -gt $((n / 2)) ]]; then\n        echo true\n    else\n        echo false\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    local i=0\n\n    while [ $i -lt $n ]; do\n        if [ ${array[$i]} -eq $element ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i mid\n    local -i left\n    local -i right\n    local -i mid_val\n    local -i left_val\n    local -i right_val\n    local -i count\n\n    arr=($1)\n    n=$2\n    x=$3\n\n    # Binary search for the first occurrence of x\n    left=0\n    right=$((n-1))\n    while left <= right; do\n        mid=$(((left+right)/2))\n        mid_val=${arr[mid]}\n        if [[ $mid_val -eq $x ]]; then\n            break\n        elif [[ $mid_val -lt $x ]]; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n\n    # If x was not found, return 0\n    if [[ $left -gt $right ]]; then\n        echo 0\n        return\n    fi\n\n    # Count the number of occurrences of x\n    count=1\n    left=$((mid-1))\n    right=$((mid+1))\n    while [[ $left -ge 0 ]] && [[ $right -lt $n ]]; do\n        left_val=${arr[left]}\n        right_val=${arr[right]}\n        if [[ $left_val -eq $x ]]; then\n            ((count++))\n            ((left--))\n        fi\n        if [[ $right_val -eq $x ]]; then\n            ((count++))\n            ((right++))\n        fi\n    done\n    while [[ $left -ge 0 ]]; do\n        left_val=${arr[left]}\n        if [[ $left_val -eq $x ]]; then\n            ((count++))\n        fi\n        ((left--))\n    done\n    while [[ $right -lt $n ]]; do\n        right_val=${arr[right]}\n        if [[ $right_val -eq $x ]]; then\n            ((count++))\n        fi\n        ((right++))\n    done\n\n    # Return whether x is the majority element\n    if [[ $count -gt $",
    "    local -a array\n    local -i n\n    local -i element\n    local -i i\n    local -i count\n    local -i majority_count\n\n    array=($1)\n    n=$2\n    element=$3\n\n    majority_count=$((n / 2))\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            count=$((count + 1))\n        fi\n    done\n\n    if [[ $count -gt $majority_count ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local arr=($1)\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    if [ $count -gt $((n / 2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local -i i=0\n    local -i j=0\n    local -i mid=$((n/2))\n    local -i count=0\n\n    while [ $i -lt $n ] && [ $j -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            ((count++))\n        fi\n        if [ ${arr[$j]} -eq $elem ]; then\n            ((count++))\n        fi\n        ((i++))\n        ((j--))\n    done\n\n    if [ $count -gt $mid ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -n arr=$1\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n\n    local i=0\n    local j=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((count++))\n        fi\n        ((i++))\n    done\n\n    if [ $count -gt $((n/2)) ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i r\n    local -i m\n    local -i count\n    arr=($1)\n    n=$2\n    x=$3\n    i=0\n    j=$((n-1))\n    while ((i<=j)); do\n        k=$((i+(j-i)/2))\n        if ((arr[k]==x)); then\n            l=$k\n            r=$k\n            while ((l>=0 && arr[l]==x)); do\n                ((l--))\n            done\n            while ((r<n && arr[r]==x)); do\n                ((r++))\n            done\n            count=$((r-l-1))\n            if ((count>n/2)); then\n                return 0\n            else\n                return 1\n            fi\n        elif ((arr[k]<x)); then\n            i=$((k+1))\n        else\n            j=$((k-1))\n        fi\n    done\n    return 1",
    "  local -n arr=$1\n  local n=$2\n  local x=$3\n  local i=0\n  local count=0\n  while [ $i -lt $n ]; do\n    if [ ${arr[$i]} -eq $x ]; then\n      count=$((count+1))\n    fi\n    if [ $count -gt $((n/2)) ]; then\n      echo \"1\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"0\"",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local element=\"$3\"\n    local count=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"$@\")\n    local n=$2\n    local elem=$3\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq $elem ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $n/2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local -i low=0\n    local -i high=$((n-1))\n    local -i mid\n    local -i count=0\n    local -i i\n\n    while low <= high\n    do\n        mid=$(((low+high)/2))\n        if ${arr[mid]} -eq $x\n        then\n            i=$mid\n            while ${arr[i]} -eq $x\n            do\n                ((i--))\n            done\n            ((count=mid-i))\n            break\n        elif ${arr[mid]} -lt $x\n        then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n    done\n\n    if ((count > n/2))\n    then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -a arr=($1)\n    local n=$2\n    local elem=$3\n    local mid=$((n/2))\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $elem ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $mid ]; then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1",
    "    local -n arr=$1\n    local n=$2\n    local elem=$3\n    local mid=$((n / 2))\n    local i=0\n    local j=0\n    local k=0\n    local count=0\n\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $elem ]\n        then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local e=$3\n    local i=0\n    local count=0\n    while (( i < n )); do\n        if (( arr[i] == e )); then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    if (( count > n / 2 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            ((count++))\n        fi\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [[ $i -lt $n ]]; do\n        if [[ ${arr[$i]} -eq $x ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            count=$((count+1))\n        fi\n    done\n    if [ \"$count\" -gt \"$((n/2))\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list=$1\n    local n=$2\n    local element=$3\n    local count=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            count=$((count + 1))\n        fi\n    done\n    if [[ $count -gt $((n / 2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for (( i=0; i<n; i++ )); do\n    if [[ ${array[i]} -eq $element ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $(( n / 2 )) ]]; then\n    echo 1\n  else\n    echo 0\n  fi",
    "  local array=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      ((count++))\n    fi\n  done\n  if [[ $count -gt $n/2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -n arr=$1\n    local n=$2\n    local e=$3\n    local mid=$((n/2))\n    local i=0\n    local j=0\n    local count=0\n    while [ $i -lt $n ] && [ $j -lt $n ]; do\n        if [ ${arr[$i]} -eq $e ]; then\n            count=$((count+1))\n        fi\n        if [ ${arr[$j]} -eq $e ]; then\n            count=$((count+1))\n        fi\n        if [ $count -gt $mid ]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo \"false\"",
    "    local -a arr=(\"${!1}\")\n    local n=$2\n    local x=$3\n    local i=0\n    local count=0\n    while [ $i -lt $n ]; do\n        if [ ${arr[$i]} -eq $x ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    if [ $count -gt $((n/2)) ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local mid=$((n/2))\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ $count -gt $mid ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i count\n    local -i mid\n    array=($1)\n    n=$2\n    x=$3\n    mid=$((n/2))\n    count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $x ]]; then\n            ((count++))\n            if [[ $count -gt $mid ]]; then\n                echo 1\n                return\n            fi\n        fi\n    done\n    echo 0",
    "    local -n arr=$1\n    local n=$2\n    local x=$3\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i mid=0\n    local -i count=0\n    local -i left=0\n    local -i right=0\n\n    mid=$((n/2))\n    while [ $i -lt $n ]\n    do\n        if [ ${arr[$i]} -eq $x ]\n        then\n            ((count++))\n        fi\n        ((i++))\n    done\n\n    if [ $count -gt $mid ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a array\n    local -i n\n    local -i x\n    local -i i\n    local -i j\n    local -i mid\n    local -i low\n    local -i high\n    local -i count\n    local -i majority\n    array=($1)\n    n=$2\n    x=$3\n    low=0\n    high=$((n-1))\n    mid=$(((low+high)/2))\n    while [[ $low -le $high ]]; do\n        if [[ ${array[$mid]} -eq $x ]]; then\n            i=$mid\n            j=$mid\n            count=1\n            while [[ ${array[$i]} -eq $x ]]; do\n                ((i--))\n                ((count++))\n            done\n            while [[ ${array[$j]} -eq $x ]]; do\n                ((j++))\n                ((count++))\n            done\n            if [[ $count -gt $((n/2)) ]]; then\n                majority=1\n            else\n                majority=0\n            fi\n            break\n        elif [[ ${array[$mid]} -lt $x ]]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n        mid=$(((low+high)/2))\n    done\n    echo $majority",
    "    local -a array=($1)\n    local n=$2\n    local element=$3\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            ((count++))\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local -a arr=(\"${!1}\")\n  local n=$2\n  local elem=$3\n  local count=0\n  for (( i=0; i<n; i++ )); do\n    if [[ ${arr[$i]} -eq $elem ]]; then\n      (( count++ ))\n    fi\n  done\n  if [[ $count -gt $(( n / 2 )) ]]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local -a arr=($1)\n    local n=$2\n    local x=$3\n    local count=0\n    for (( i=0; i<n; i++ )); do\n        if [[ ${arr[i]} -eq $x ]]; then\n            let count++\n        fi\n    done\n    if [[ $count -gt $((n/2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local list=($1)\n  local n=$2\n  local element=$3\n  local count=0\n  for i in ${list[@]}; do\n    if [ $i -eq $element ]; then\n      count=$((count + 1))\n    fi\n  done\n  if [ $count -gt $((n / 2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi"
  ]
}
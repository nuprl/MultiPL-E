{
  "name": "mbpp_428_shell_sort",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to sort the given array by using shell sort.\n#\n# $1 is a space-separated list\nshell_sort() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    shell_sort \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12 23 4 5 3 2 12 81 56 95\") = \"2 3 4 5 12 12 23 56 81 95\" ]]\n    [[ $(candidate \"24 22 39 34 87 73 68\") = \"22 24 34 39 68 73 87\" ]]\n    [[ $(candidate \"32 30 16 96 82 83 74\") = \"16 30 32 74 82 83 96\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array=(\"$@\")\n    local -i i j k gap\n    local -i n=${#array[@]}\n\n    gap=n/2\n    while [ $gap -gt 0 ]; do\n        i=gap\n        while [ $i -lt $n ]; do\n            j=$i\n            while [ $j -ge $gap -a ${array[j-gap]} -gt ${array[j]} ]; do\n                k=$j\n                while [ $k -ge $gap ]; do\n                    array[k]=${array[k-gap]}\n                    ((k-=gap))\n                done\n                array[k]=${array[j]}\n                ((j-=gap))\n            done\n            ((i+=1))\n        done\n        ((gap/=2))\n    done\n\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local gap=${#array[@]}\n  local swapped=true\n  while ((gap > 1 || swapped)); do\n    if ((gap > 1)); then\n      ((gap /= 2))\n    fi\n    swapped=false\n    for ((i = 0; i < ${#array[@]} - gap; i++)); do\n      if ((array[i] > array[i + gap])); then\n        local temp=${array[i]}\n        array[i]=${array[i + gap]}\n        array[i + gap]=$temp\n        swapped=true\n      fi\n    done\n  done\n  echo \"${array[@]}\"",
    "    local arr=($1)\n    local i j k tmp\n    local n=${#arr[@]}\n    local gap=1\n    while ((gap < n / 3)); do\n        gap=$((gap * 3 + 1))\n    done\n    while ((gap > 0)); do\n        for ((i = gap; i < n; i++)); do\n            tmp=${arr[i]}\n            for ((j = i - gap; j >= 0 && arr[j] > tmp; j -= gap)); do\n                arr[j + gap]=${arr[j]}\n            done\n            arr[j + gap]=$tmp\n        done\n        gap=$(((gap - 1) / 3))\n    done\n    echo ${arr[@]}",
    "    local -a arr=(\"$@\")\n    local -i i j k gap\n    local -i n=${#arr[@]}\n    local -i temp\n\n    for ((gap=n/2; gap>0; gap/=2))\n    do\n        for ((i=gap; i<n; i++))\n        do\n            temp=${arr[i]}\n            for ((j=i; j>=gap; j-=gap))\n            do\n                if [[ ${arr[j-gap]} -gt $temp ]]\n                then\n                    arr[j]=${arr[j-gap]}\n                else\n                    break\n                fi\n            done\n            arr[j]=$temp\n        done\n    done\n    echo \"${arr[@]}\"",
    "  local -a array=($1)\n  local gap=${#array[@]}\n  local swapped=true\n  while ((gap > 1 || swapped)); do\n    if ((gap > 1)); then\n      ((gap = gap / 2))\n    fi\n    local i\n    swapped=false\n    for ((i = 0; i < ${#array[@]} - gap; i++)); do\n      if ((array[i] > array[i + gap])); then\n        local tmp=${array[i]}\n        array[i]=${array[i + gap]}\n        array[i + gap]=$tmp\n        swapped=true\n      fi\n    done\n  done\n  echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i i j gap\n    local -i n=${#array[@]}\n    local -i swapped\n\n    gap=n/2\n    while ((gap > 0)); do\n        swapped=0\n        for ((i = gap; i < n; i++)); do\n            for ((j = i - gap; j >= 0 && array[j] > array[j + gap]; j -= gap)); do\n                ((swapped++))\n                local tmp=${array[j]}\n                array[j]=${array[j + gap]}\n                array[j + gap]=$tmp\n            done\n        done\n        if ((swapped == 0)); then\n            break\n        fi\n        ((gap /= 2))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local gap=${#array[@]}\n    local tmp\n    while ((gap > 1)); do\n        ((gap /= 2))\n        for ((i = gap; i < ${#array[@]}; i++)); do\n            for ((j = i - gap; j >= 0 && array[j] > array[j + gap]; j -= gap)); do\n                tmp=${array[j]}\n                array[j]=${array[j + gap]}\n                array[j + gap]=$tmp\n            done\n        done\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i i j k gap=${#array[@]}\n    local temp\n\n    while ((gap /= 2)); do\n        for ((i = gap; i < ${#array[@]}; i++)); do\n            temp=${array[i]}\n            for ((j = i; j >= gap && array[j - gap] > temp; j -= gap)); do\n                array[j]=${array[j - gap]}\n            done\n            array[j]=$temp\n        done\n    done\n\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i gap=${#array[@]}\n  local -i i j tmp\n  while (( gap /= 2 )); do\n    for (( i = gap; i < ${#array[@]}; i++ )); do\n      for (( j = i - gap; j >= 0 && array[j] > array[j + gap]; j -= gap )); do\n        tmp=${array[j]}\n        array[j]=${array[j + gap]}\n        array[j + gap]=$tmp\n      done\n    done\n  done\n  echo \"${array[@]}\"",
    "    local -a arr=(\"$@\")\n    local gap=${#arr[@]}\n    local tmp\n    local i\n    local j\n\n    while (( gap > 1 )); do\n        (( gap = gap / 2 ))\n        for (( i = gap; i < ${#arr[@]}; i++ )); do\n            tmp=${arr[i]}\n            for (( j = i; j >= gap && arr[j - gap] > tmp; j -= gap )); do\n                arr[j]=${arr[j - gap]}\n            done\n            arr[j]=$tmp\n        done\n    done\n\n    echo \"${arr[@]}\"",
    "  local -a array=(\"$@\")\n  local gap=${#array[@]}\n  local swapped\n  while (( gap > 1 )) || (( swapped )); do\n    if (( gap > 1 )); then\n      (( gap /= 2 ))\n    fi\n    swapped=0\n    for (( i = 0; i < ${#array[@]} - gap; ++i )); do\n      if (( array[i] > array[i + gap] )); then\n        local tmp=${array[i]}\n        array[i]=${array[i + gap]}\n        array[i + gap]=$tmp\n        swapped=1\n      fi\n    done\n  done\n  echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i i j gap\n    local -i n=${#array[@]}\n    local -i temp\n\n    for ((gap=n/2; gap>0; gap/=2))\n    do\n        for ((i=gap; i<n; i++))\n        do\n            temp=${array[i]}\n            for ((j=i; j>=gap && array[j-gap]>temp; j-=gap))\n            do\n                array[j]=${array[j-gap]}\n            done\n            array[j]=$temp\n        done\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local gap=${#array[@]}\n    local tmp\n\n    while (( gap > 1 )); do\n        (( gap /= 2 ))\n\n        for (( i = gap; i < ${#array[@]}; i++ )); do\n            for (( j = i - gap; j >= 0 && array[j] > array[j + gap]; j -= gap )); do\n                tmp=${array[j]}\n                array[j]=${array[j + gap]}\n                array[j + gap]=$tmp\n            done\n        done\n    done\n\n    echo \"${array[@]}\"",
    "  local -a arr=(\"$@\")\n  local gap=${#arr[@]}\n  local temp\n  local i\n  local j\n\n  while ((gap > 1)); do\n    ((gap = gap / 2))\n    for ((i = gap; i < ${#arr[@]}; i++)); do\n      temp=${arr[i]}\n      for ((j = i; j >= gap && arr[j - gap] > temp; j -= gap)); do\n        arr[j]=${arr[j - gap]}\n      done\n      arr[j]=$temp\n    done\n  done\n\n  echo \"${arr[@]}\"",
    "    local -a arr=(\"$@\")\n    local gap=${#arr[@]}\n    local i\n    local j\n    local tmp\n\n    while (( gap > 1 )); do\n        gap=$(( gap / 2 ))\n        i=0\n        while (( i < ${#arr[@]} )); do\n            j=$(( i + gap ))\n            while (( j < ${#arr[@]} )); do\n                if (( arr[i] > arr[j] )); then\n                    tmp=${arr[i]}\n                    arr[i]=${arr[j]}\n                    arr[j]=$tmp\n                fi\n                (( j += gap ))\n            done\n            (( i += gap ))\n        done\n    done\n\n    echo \"${arr[@]}\"",
    "  local -a array=(\"$@\")\n  local i j temp gap\n  gap=${#array[@]}\n  while (( gap > 1 )); do\n    (( gap = gap / 2 ))\n    for (( i = gap; i < ${#array[@]}; i++ )); do\n      temp=${array[i]}\n      for (( j = i; j >= gap && array[j - gap] > temp; j -= gap )); do\n        array[j]=${array[j - gap]}\n      done\n      array[j]=$temp\n    done\n  done\n  echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local gap=${#array[@]}\n  local temp\n  local i\n  local j\n\n  while (( gap > 1 )); do\n    gap=$(( gap / 2 ))\n    for (( i = gap; i < ${#array[@]}; i++ )); do\n      temp=${array[i]}\n      for (( j = i; j >= gap && array[j - gap] > temp; j -= gap )); do\n        array[j]=${array[j - gap]}\n      done\n      array[j]=$temp\n    done\n  done\n\n  echo \"${array[@]}\"",
    "  local array=(\"$@\")\n  local gap=${#array[@]}\n  local swapped=true\n  while (( gap > 1 || swapped )); do\n    if (( gap > 1 )); then\n      (( gap /= 2 ))\n    fi\n    local i\n    swapped=false\n    for (( i = 0; i < ${#array[@]} - gap; i++ )); do\n      if (( array[i] > array[i + gap] )); then\n        local tmp=${array[i]}\n        array[i]=${array[i + gap]}\n        array[i + gap]=$tmp\n        swapped=true\n      fi\n    done\n  done\n  echo \"${array[@]}\"",
    "    local -a array\n    local -i i j k gap\n    local -i len=0\n\n    array=($1)\n    len=${#array[@]}\n\n    gap=len/2\n    while [ $gap -gt 0 ]; do\n        i=$gap\n        while [ $i -lt $len ]; do\n            j=$i\n            while [ $j -ge $gap -a ${array[j-$gap]} -gt ${array[j]} ]; do\n                k=$j\n                while [ $k -ge $gap ]; do\n                    array[k]=${array[k-$gap]}\n                    k=$k-$gap\n                done\n                array[k]=${array[j]}\n                j=$j-$gap\n            done\n            i=$i+1\n        done\n        gap=$gap/2\n    done\n\n    echo ${array[@]}",
    "  local -a array=(\"$@\")\n  local gap=${#array[@]}\n  local temp\n  local i\n  local j\n\n  while ((gap > 1)); do\n    ((gap = gap / 2))\n    for ((i = gap; i < ${#array[@]}; i++)); do\n      temp=${array[i]}\n      for ((j = i; j >= gap && array[j - gap] > temp; j -= gap)); do\n        array[j]=${array[j - gap]}\n      done\n      array[j]=$temp\n    done\n  done\n\n  echo \"${array[@]}\""
  ]
}
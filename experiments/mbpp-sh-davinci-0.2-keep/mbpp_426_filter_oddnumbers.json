{
  "name": "mbpp_426_filter_oddnumbers",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to filter odd numbers.\n#\n# $1 is a space-separated list\nfilter_oddnumbers() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_426_filter_oddnumbers.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    filter_oddnumbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1 3 5 7 9\" ]]\n    [[ $(candidate \"10 20 45 67 84 93\") = \"45 67 93\" ]]\n    [[ $(candidate \"5 7 9 8 6 4 3\") = \"5 7 9 3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local result=\"\"\n    for n in $list; do\n        if [ $((n % 2)) -ne 0 ]; then\n            result=\"$result $n\"\n        fi\n    done\n    echo \"$result\"",
    "    echo \"$1\" | tr ' ' '\\n' | grep -v '^[02468]$'",
    "    local numbers=$1\n    local filtered_numbers=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -eq 1 ]; then\n            filtered_numbers=\"$filtered_numbers $number\"\n        fi\n    done\n    echo $filtered_numbers",
    "    local numbers=\"$1\"\n    for number in $numbers; do\n        if [ $(($number % 2)) -eq 0 ]; then\n            echo $number\n        fi\n    done",
    "    local numbers=\"$1\"\n    local filtered=()\n    for number in $numbers; do\n        if [ $((number % 2)) -ne 0 ]; then\n            filtered+=($number)\n        fi\n    done\n    echo \"${filtered[@]}\"",
    "  local list=$1\n  local result=\"\"\n  for i in $list; do\n    if [ $((i % 2)) -ne 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result",
    "    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            echo $i\n        fi\n    done",
    "\tfor i in $1; do\n\t\tif [ $((i % 2)) -eq 1 ]; then\n\t\t\techo $i\n\t\tfi\n\tdone",
    "    local numbers=\"$1\"\n    local filtered=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -eq 1 ]; then\n            filtered=\"$filtered $number\"\n        fi\n    done\n    echo $filtered",
    "    local numbers=\"$1\"\n    local result=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -eq 1 ]; then\n            result=\"$result $number\"\n        fi\n    done\n    echo \"$result\"",
    "    local numbers=$1\n    local odd_numbers=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -ne 0 ]; then\n            odd_numbers=\"$odd_numbers $number\"\n        fi\n    done\n    echo $odd_numbers",
    "    local numbers=\"$1\"\n    local filtered=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -ne 0 ]; then\n            filtered=\"$filtered $number\"\n        fi\n    done\n    echo \"$filtered\"",
    "    local numbers=\"$1\"\n    local result=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -ne 0 ]; then\n            result=\"$result $number\"\n        fi\n    done\n    echo $result",
    "  local list=\"$1\"\n  local result=\"\"\n  for number in $list; do\n    if [ $((number % 2)) -ne 0 ]; then\n      result=\"$result $number\"\n    fi\n  done\n  echo \"$result\"",
    "    local numbers=\"$1\"\n    local filtered=\"\"\n    for number in $numbers; do\n        if [ $(($number % 2)) -eq 1 ]; then\n            filtered=\"$filtered $number\"\n        fi\n    done\n    echo $filtered",
    "    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            echo $i\n        fi\n    done",
    "    for i in $1; do\n        if [ $(($i % 2)) -ne 0 ]; then\n            echo $i\n        fi\n    done",
    "  local list=\"$1\"\n  local odd_list=\"\"\n  for i in $list; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd_list=\"$odd_list $i\"\n    fi\n  done\n  echo $odd_list",
    "    local numbers=$1\n    local odd_numbers=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -ne 0 ]; then\n            odd_numbers=\"$odd_numbers $number\"\n        fi\n    done\n    echo $odd_numbers",
    "    local numbers=\"$1\"\n    local filtered=\"\"\n    for number in $numbers; do\n        if [ $((number % 2)) -ne 0 ]; then\n            filtered=\"$filtered $number\"\n        fi\n    done\n    echo \"$filtered\""
  ]
}
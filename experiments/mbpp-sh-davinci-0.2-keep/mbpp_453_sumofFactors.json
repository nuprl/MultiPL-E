{
  "name": "mbpp_453_sumofFactors",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the sum of even factors of a number.\n#\n# $1 is an integer\nsumofFactors() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_453_sumofFactors.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sumofFactors \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"18\") = \"26\" ]]\n    [[ $(candidate \"30\") = \"48\" ]]\n    [[ $(candidate \"6\") = \"8\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            if [ $(( $i % 2 )) -eq 0 ]; then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        exit 1\n    fi\n    sum=0\n    for (( i=2; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            if [ $(( $i % 2 )) -eq 0 ]; then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if (( $1%$i == 0 )); then\n            if (( $i%2 == 0 )); then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            if [[ $(( $i % 2 )) -eq 0 ]]; then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=2; i<=$n; i++ ))\n    do\n        if [ $(($n%$i)) -eq 0 ]\n        then\n            if [ $(($i%2)) -eq 0 ]\n            then\n                sum=$(($sum+$i))\n            fi\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=2; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            if [ $(( $i % 2 )) -eq 0 ]; then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [[ $(($1 % $i)) -eq 0 ]] && [[ $(($i % 2)) -eq 0 ]]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(($1 % $i)) -eq 0 ]] && [[ $(($i % 2)) -eq 0 ]]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "    local number=$1\n    local sum=0\n    for ((i=1; i<=$number; i++)); do\n        if [ $((number%i)) -eq 0 ] && [ $((i%2)) -eq 0 ]; then\n            sum=$((sum+i))\n        fi\n    done\n    echo $sum",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if [ $1 -lt 2 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    local sum=0\n    for ((i=2; i<=$1; i++)); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            if [ $(( $i % 2 )) -eq 0 ]; then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if (( $1 % i == 0 )); then\n            if (( i % 2 == 0 )); then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            if [[ $(( $i % 2 )) -eq 0 ]]; then\n                sum=$(( $sum + $i ))\n            fi\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(( $1 % $i )) -eq 0 ]] && [[ $(( $i % 2 )) -eq 0 ]]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum"
  ]
}
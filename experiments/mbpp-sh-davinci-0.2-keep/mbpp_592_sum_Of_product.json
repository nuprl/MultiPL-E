{
  "name": "mbpp_592_sum_Of_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the sum of the product of consecutive binomial co-efficients.\n#\n# $1 is an integer\nsum_Of_product() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sum_Of_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"15\" ]]\n    [[ $(candidate \"4\") = \"56\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local binomial_coefficient=0\n    local product=1\n    for ((i=0; i<=n; i++))\n    do\n        for ((j=0; j<=i; j++))\n        do\n            binomial_coefficient=$(binomial_coefficient $i $j)\n            product=$((product * binomial_coefficient))\n        done\n        sum=$((sum + product))\n        product=1\n    done\n    echo $sum",
    "    n=$1\n    sum=0\n    for i in $(seq 1 $n); do\n        for j in $(seq 1 $i); do\n            sum=$((sum + $(binomial_coefficient $i $j)))\n        done\n    done\n    echo $sum",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n    sum=0\n    for (( i=0; i<=$1; i++ ))\n    do\n        for (( j=$i+1; j<=$1; j++ ))\n        do\n            sum=$(( $sum + $i*$j ))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        local prod=1\n        for (( j=1; j<=$i; j++ ))\n        do\n            prod=$(( $prod * $(( $n - $j + 1 )) / $j ))\n        done\n        sum=$(( $sum + $prod ))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum + (i*j)))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum + (i-j+1)*j))\n        done\n    done\n    echo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tfor (( i=1; i<=$n; i++ ))\n\tdo\n\t\tfor (( j=1; j<=$n; j++ ))\n\t\tdo\n\t\t\tsum=$(( $sum + $i * $j ))\n\t\tdone\n\tdone\n\techo $sum",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Input must be a positive integer\"\n        exit 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        for (( j=$i+1; j<=$1; j++ )); do\n            sum=$(( sum + i*j ))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local product=0\n    for ((i=0; i<=n; i++))\n    do\n        for ((j=0; j<=i; j++))\n        do\n            for ((k=0; k<=j; k++))\n            do\n                product=$(( $product + $(binomial_coefficient $i $j) * $(binomial_coefficient $j $k) ))\n            done\n        done\n        sum=$(( $sum + $product ))\n        product=0\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local product=0\n    for ((i=0; i<=n; i++))\n    do\n        for ((j=0; j<=i; j++))\n        do\n            product=1\n            for ((k=0; k<=j; k++))\n            do\n                product=$((product*(i-k)/(k+1)))\n            done\n            sum=$((sum+product))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for i in $(seq 1 $n); do\n        for j in $(seq 1 $i); do\n            sum=$((sum + $(binomial_coefficient $i $j)))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ ))\n    do\n        for (( j=1; j<=i; j++ ))\n        do\n            sum=$(( sum + (i*j) ))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=0; i<=$n; i++ ))\n    do\n        for (( j=0; j<=$n; j++ ))\n        do\n            sum=$(( $sum + $(binomial_coefficient $i $j) ))\n        done\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local product=1\n  local binomial=1\n  for ((i=1; i<=n; i++)); do\n    for ((j=1; j<=i; j++)); do\n      for ((k=1; k<=j; k++)); do\n        binomial=$(binomial $i $k)\n        product=$((product * binomial))\n      done\n      sum=$((sum + product))\n      product=1\n    done\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    local i=1\n    local j=1\n    while [ $i -le $n ]\n    do\n        while [ $j -le $n ]\n        do\n            sum=$((sum+i*j))\n            j=$((j+1))\n        done\n        i=$((i+1))\n        j=1\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++))\n    do\n        for ((j=1; j<=$n; j++))\n        do\n            sum=$((sum+$(binomial_coefficient $i $j)))\n        done\n    done\n    echo $sum",
    "    n=$1\n    sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum + i*j))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=0; i<=n; i++))\n    do\n        for ((j=0; j<=n; j++))\n        do\n            if [ $i -ne $j ]\n            then\n                sum=$((sum + (factorial $i) * (factorial $j)))\n            fi\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum+i*j))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++))\n    do\n        for ((j=1; j<=$n; j++))\n        do\n            sum=$((sum + i*j))\n        done\n    done\n    echo $sum"
  ]
}
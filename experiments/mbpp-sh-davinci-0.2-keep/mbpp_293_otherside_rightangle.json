{
  "name": "mbpp_293_otherside_rightangle",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the third side of a right angled triangle.\n#\n# $1 is an integer\n# $2 is an integer\notherside_rightangle() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    otherside_rightangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\" \"8\") = \"10.63014581273465\" ]]\n    [[ $(candidate \"3\" \"4\") = \"5\" ]]\n    [[ $(candidate \"7\" \"15\") = \"16.55294535724685\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $1 -gt 0 ] && [ $2 -gt 0 ]\n    then\n        echo $(echo \"sqrt($1^2 + $2^2)\" | bc -l)\n    else\n        echo \"Error: Please enter positive integers only.\"\n    fi",
    "    local hypotenuse=$1\n    local adjacent=$2\n    local opposite=$((hypotenuse**2 - adjacent**2))\n    echo $((opposite**0.5))",
    "  if [ $# -eq 2 ]; then\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ]; then\n      echo \"scale=2; sqrt($1*$1 + $2*$2)\" | bc\n    else\n      echo \"Error: $1 and $2 must be positive integers\"\n    fi\n  else\n    echo \"Error: $0 requires 2 arguments\"\n  fi",
    "    local a=$1\n    local b=$2\n    local c=$(echo \"scale=2; sqrt($a^2 + $b^2)\" | bc)\n    echo $c",
    "  echo \"scale=2; sqrt($1^2 - $2^2)\" | bc",
    "  local side1=$1\n  local side2=$2\n  local otherside=$(echo \"sqrt($side1^2 + $side2^2)\" | bc -l)\n  echo $otherside",
    "    local a=$1\n    local b=$2\n    local c\n    c=$(echo \"scale=2; sqrt($a^2 + $b^2)\" | bc)\n    echo $c",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -lt 1 ] || [ $2 -lt 1 ]; then\n        echo \"Error: $0: Arguments must be greater than 0\"\n        return 1\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"Error: $0: Arguments must be different\"\n        return 1\n    fi\n    echo \"scale=2; sqrt($1^2 + $2^2)\" | bc",
    "  if [[ $1 -eq 0 || $2 -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$(( $1 * $1 + $2 * $2 ))\"\n  fi",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <side1> <side2>\"\n        return 1\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"Both sides are equal\"\n        return 2\n    fi\n    if [ $1 -lt $2 ]; then\n        echo \"Side 1 is smaller than side 2\"\n        return 3\n    fi\n    if [ $1 -gt $2 ]; then\n        echo \"Side 1 is bigger than side 2\"\n        return 4\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Side 1 is less than 0\"\n        return 5\n    fi\n    if [ $2 -lt 0 ]; then\n        echo \"Side 2 is less than 0\"\n        return 6\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Side 1 is 0\"\n        return 7\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"Side 2 is 0\"\n        return 8\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"Side 1 is 1\"\n        return 9\n    fi\n    if [ $2 -eq 1 ]; then\n        echo \"Side 2 is 1\"\n        return 10\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"Side 1 is 2\"\n        return 11\n    fi\n    if [ $2 -eq 2 ]; then\n        echo \"Side 2 is 2\"\n        return 12\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"Side 1 is 3\"\n        return 13\n    fi\n    if [ $2 -eq 3 ]; then\n        echo \"Side 2 is 3\"\n        return 14\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"Side 1 is 4\"\n        return 15\n    fi\n    if [ $2 -eq 4 ]; then\n        echo \"Side 2 is 4\"\n        return 16\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"Side 1 is 5\"\n        return 17\n    fi\n    if [ $2 -eq 5 ]; then\n        echo \"Side 2 is 5\"\n        return 18\n    fi\n    if [ $1",
    "    local a=$1\n    local b=$2\n    local c=$(echo \"sqrt($a^2 + $b^2)\" | bc)\n    echo $c",
    "    echo \"scale=2;sqrt($1^2-$2^2)\" | bc",
    "    if [[ $1 -eq 0 || $2 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$(( $1**2 + $2**2 ))\"\n    fi",
    "    local side1=$1\n    local side2=$2\n    local otherside=$(echo \"sqrt($side1^2 + $side2^2)\" | bc -l)\n    echo $otherside",
    "    echo \"scale=2;sqrt($1^2 - $2^2)\" | bc",
    "    echo \"scale=2; sqrt($1^2 - $2^2)\" | bc",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: $0 <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: $0 <integer> <integer>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$(echo \"scale=2; sqrt($a^2 + $b^2)\" | bc)\n    echo \"The third side of the right angled triangle is $c\"",
    "    if [ $1 -gt 0 ] && [ $2 -gt 0 ]; then\n        echo \"scale=2; sqrt($1^2 + $2^2)\" | bc\n    else\n        echo \"Error: Arguments must be positive integers.\"\n    fi",
    "    if [[ $1 -eq 0 || $2 -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$(bc -l <<< \"sqrt($1^2 + $2^2)\")\"\n    fi",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"Error: $1 and $2 are equal\"\n        return 1\n    fi\n    if [ $1 -lt $2 ]; then\n        echo \"Error: $1 is less than $2\"\n        return 1\n    fi\n    if [ $1 -lt 1 ]; then\n        echo \"Error: $1 is less than 1\"\n        return 1\n    fi\n    if [ $2 -lt 1 ]; then\n        echo \"Error: $2 is less than 1\"\n        return 1\n    fi\n    if [ $1 -gt 1000 ]; then\n        echo \"Error: $1 is greater than 1000\"\n        return 1\n    fi\n    if [ $2 -gt 1000 ]; then\n        echo \"Error: $2 is greater than 1000\"\n        return 1\n    fi\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $2 * $2 )) ]; then\n        echo \"Error: $1 and $2 are not a right angled triangle\"\n        return 1\n    fi\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $1 * $1 )) ]; then\n        echo \"Error: $1 and $2 are not a right angled triangle\"\n        return 1\n    fi\n    echo \"The third side of the right angled triangle is $(($1 * $1 - $2 * $2))\""
  ]
}
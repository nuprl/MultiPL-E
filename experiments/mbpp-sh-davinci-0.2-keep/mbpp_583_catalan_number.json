{
  "name": "mbpp_583_catalan_number",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function which returns nth catalan number.\n#\n# $1 is an integer\ncatalan_number() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    catalan_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"16796\" ]]\n    [[ $(candidate \"9\") = \"4862\" ]]\n    [[ $(candidate \"7\") = \"429\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    if [ $n -eq 0 ]; then\n        echo 1\n    else\n        local sum=0\n        for (( i=0; i<n; i++ )); do\n            sum=$(( sum + $(catalan_number $i) * $(catalan_number $(( n-i-1 ))) ))\n        done\n        echo $sum\n    fi",
    "    local n=$1\n    local i\n    local catalan=1\n    for ((i=2; i<=n; i++)); do\n        catalan=$((catalan*(n+i)/i))\n    done\n    echo $catalan",
    "  local n=$1\n  local i=0\n  local result=1\n  while [ $i -lt $n ]; do\n    result=$((result * (n + i) / (i + 1)))\n    i=$((i + 1))\n  done\n  echo $result",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result*(n+i)/(i+1)))\n        i=$((i+1))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    local n=$1\n    local result=1\n    for ((i=0; i<n; i++)); do\n        result=$((result*(n+i)/(i+1)))\n    done\n    echo $result",
    "    local n=$1\n    local i\n    local sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + catalan_number $i * catalan_number $((n-i-1))))\n    done\n    echo $((n == 0 ? 1 : sum))",
    "    local n=$1\n    local result=1\n    for ((i=2; i<=n; i++)); do\n        result=$((result * (n+i)/i))\n    done\n    echo $result",
    "  local n=$1\n  local i\n  local res=1\n  for ((i=2; i<=n; i++)); do\n    res=$((res*(n+i)/i))\n  done\n  echo $res",
    "    local n=$1\n    local i=0\n    local result=1\n\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i)))\n        i=$((i + 1))\n    done\n\n    i=0\n    while [ $i -lt $n ]; do\n        result=$((result / (i + 1)))\n        i=$((i + 1))\n    done\n\n    echo $result",
    "    local n=$1\n    local i=0\n    local res=1\n    while [ $i -lt $n ]; do\n        res=$((res * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $res",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local c=1\n    while ((i < n)); do\n        ((c = c * 2 * (2 * i + 1) / (i + 2)))\n        ((i++))\n    done\n    echo $c",
    "  local n=$1\n  local i=0\n  local result=1\n  while [ $i -lt $n ]; do\n    result=$((result * (n + i) / (i + 1)))\n    i=$((i + 1))\n  done\n  echo $result",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result*(n+i)/(i+1)))\n        i=$((i+1))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $i -le $n ]; do\n        local j=0\n        local prod=1\n        while [ $j -le $i ]; do\n            prod=$((prod * (n - j) / (j + 1)))\n            j=$((j + 1))\n        done\n        sum=$((sum + prod))\n        i=$((i + 1))\n    done\n    echo $sum",
    "  local n=$1\n  local result=1\n  local i=0\n  while [ $i -lt $n ]; do\n    result=$((result * (n + i) / (i + 1)))\n    i=$((i + 1))\n  done\n  echo $result",
    "  local n=$1\n  local i=0\n  local result=1\n\n  if [ $n -le 1 ]; then\n    echo $result\n    return\n  fi\n\n  while [ $i -lt $n ]; do\n    result=$((result * (n + i) / (i + 1)))\n    i=$((i + 1))\n  done\n\n  echo $result",
    "  local n=$1\n  local i=0\n  local result=1\n  while [ $i -lt $n ]; do\n    result=$((result * (n + i) / (i + 1)))\n    i=$((i + 1))\n  done\n  echo $result",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result"
  ]
}
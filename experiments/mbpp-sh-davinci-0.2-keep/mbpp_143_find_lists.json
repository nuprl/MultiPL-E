{
  "name": "mbpp_143_find_lists",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find number of lists present in the given tuple.\n#\n# $1 is a $Any\nfind_lists() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_143_find_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_lists \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\\n5 6 7 8\") = \"2\" ]]\n    [[ $(candidate \"1 2\\n3 4\\n5 6\") = \"3\" ]]\n    [[ $(candidate \"9 8 7 6 5 4 3 2 1\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            _count=$((_count+1))\n        fi\n    done\n    echo $_count",
    "    local -n __list=$1\n    local -i __count=0\n    for __item in \"${__list[@]}\"; do\n        if [[ \"$__item\" =~ ^\\[.*\\]$ ]]; then\n            (( __count++ ))\n        fi\n    done\n    echo \"$__count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p ${_item})\" =~ \"declare -a\" ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -i count=0\n  for item in \"$@\"; do\n    if [[ \"$item\" == *\" \"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" == *\"[\"* ]]; then\n            ((__count++))\n        fi\n    done\n    echo \"$__count\"",
    "  local -a array=(\"$@\")\n  local -i i=0\n  local -i count=0\n  local -i len=${#array[@]}\n  local -i j=0\n  local -i k=0\n  local -i m=0\n  local -i n=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n ",
    "    local -i count=0\n    for i in \"$@\"; do\n        if [[ \"$i\" == *\" \"* ]]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
    "  local -i count=0\n  for item in \"$@\"; do\n    if [[ \"$item\" == *\"[\"*\"]\"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$_element\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_element\")\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo $_count",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i b",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _element in \"${_tuple[@]}\"; do\n    if [[ \"${_element:0:1}\" == '(' ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _any=$1\n  local _list_count=0\n  local _list_index=0\n  while [ $_list_index -lt ${#_any[@]} ]; do\n    if [ \"${_any[$_list_index]}\" == \"list\" ]; then\n      ((_list_count++))\n    fi\n    ((_list_index++))\n  done\n  echo $_list_count",
    "  local any=$1\n  local count=0\n  local i=0\n  local list=()\n  local list_count=0\n  local list_index=0\n  local list_length=0\n  local tuple=()\n  local tuple_count=0\n  local tuple_index=0\n  local tuple_length=0\n\n  tuple=($any)\n  tuple_length=${#tuple[@]}\n  tuple_count=0\n  while [ $tuple_index -lt $tuple_length ]; do\n    list=(${tuple[$tuple_index]})\n    list_length=${#list[@]}\n    list_count=0\n    while [ $list_index -lt $list_length ]; do\n      list_count=$((list_count + 1))\n      list_index=$((list_index + 1))\n    done\n    tuple_count=$((tuple_count + list_count))\n    tuple_index=$((tuple_index + 1))\n  done\n  count=$((tuple_count - tuple_length))\n  echo $count",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p $_element)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo $_count",
    "    local -n tuple=$1\n    local count=0\n    for item in \"${tuple[@]}\"; do\n        if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local -n _tuple=\"$1\"\n    local _list_count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            _list_count=$((_list_count + 1))\n        fi\n    done\n    echo \"$_list_count\"",
    "  local -n _list=$1\n  local -i _count=0\n  for _item in \"${_list[@]}\"; do\n    if [[ \"${_item[0]}\" == '[' ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __element in \"${__tuple[@]}\"; do\n        if [[ \"$__element\" =~ ^\\(.*\\)$ ]]; then\n            ((__count++))\n        fi\n    done\n    echo \"$__count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i n=0\n    for i in \"$@\"; do\n        if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n            ((n++))\n        fi\n    done\n    echo \"$n\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\[.*\\]$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while (( i < len )); do\n        if [[ ${1:i:1} == '(' ]]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo $count",
    "    local -a list\n    local -a tuple\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i m\n    local -i count\n    local -i len\n    local -i len_tuple\n    local -i len_list\n    local -i len_sublist\n    local -i len_subsublist\n    local -i len_subsubsublist\n    local -i len_subsubsubsublist\n    local -i len_subsubsubsubsublist\n    local -i len_subsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsubsublist\n    local -i len_subsubsubsubsub",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while [ $i -lt $len ]; do\n        if [ \"${1:$i:1}\" == \"[\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while [ $i -lt $len ]; do\n        if [ \"${1:$i:1}\" = \"[\" ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $count",
    "    local -n _list=$1\n    local -i _count=0\n    for _item in \"${_list[@]}\"; do\n        [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]] && (( _count++ ))\n    done\n    echo \"$_count\"",
    "  local any=$1\n  local count=0\n  local i=0\n  local len=${#any}\n  while [ $i -lt $len ]; do\n    local char=${any:$i:1}\n    if [ \"$char\" == \"[\" ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  echo $count",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in ${__tuple[@]}; do\n        if [[ \"$__item\" =~ ^\\[.*\\]$ ]]; then\n            ((__count++))\n        fi\n    done\n    echo $__count",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"${_item:0:1}\" == \"(\" ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local tuple=\"$1\"\n  local count=0\n  local list\n  for list in $tuple; do\n    if [[ \"$list\" =~ ^\\(.*\\)$ ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count",
    "  local -i count=0\n  for item in \"$@\"; do\n    if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n      (( count++ ))\n    fi\n  done\n  echo \"$count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n            ((__count++))\n        fi\n    done\n    echo \"$__count\"",
    "  local -i n=0\n  for i in \"$@\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      ((n++))\n    fi\n  done\n  echo $n",
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"",
    "    local -n __list=$1\n    local -i __count=0\n    for __item in \"${__list[@]}\"; do\n        if [[ \"$__item\" == *\"[\"* ]]; then\n            __count=$((__count+1))\n        fi\n    done\n    echo \"$__count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"${_element:0:1}\" == '(' ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo \"$_count\"",
    "  local -r any=\"$1\"\n  local -r list_pattern=\"^\\(.*\\)$\"\n  local -r tuple_pattern=\"^\\(.*\\),\\(.*\\)$\"\n  local -r any_pattern=\"^\\($list_pattern\\|$tuple_pattern\\)$\"\n  local -r any_pattern_with_parens=\"^($any_pattern)$\"\n  local -r any_pattern_with_parens_and_spaces=\"^ *($any_pattern) *$\"\n  local -r any_pattern_with_parens_and_spaces_and_commas=\"^ *($any_pattern) *, *$\"\n  local -r any_pattern_with_parens_and_spaces_and_commas_and_lists=\"^ *($any_pattern) *, *\\($list_pattern\\) *$\"\n  local -r any_pattern_with_parens_and_spaces_and_commas_and_lists_and_tuples=\"^ *($any_pattern) *, *\\($list_pattern\\|$tuple_pattern\\) *$\"\n  local -r any_pattern_with_parens_and_spaces_and_commas_and_lists_and_tuples_and_tuples=\"^ *($any_pattern) *, *\\($list_pattern\\|$tuple_pattern\\) *, *\\($list_pattern\\|$tuple_pattern\\) *$\"\n  local -r any_pattern_with_parens_and_spaces_and_commas_and_lists_and_tuples_and_tuples_and_tuples=\"^ *($any_pattern) *, *\\($list_pattern\\|$tuple_pattern\\) *, *\\($list_pattern\\|$tuple_pattern\\) *, *\\($list_pattern\\|$tuple_pattern\\) *$\"\n  local -r any_pattern_with_parens_and_spaces_and_commas_and_lists_and_tuples_and_tuples_and_tuples_and_tuples=\"^ *($any_pattern) *, *\\($list_pattern\\|$",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\[.*\\]$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" == *\"[\"* ]]; then\n            ((__count++))\n        fi\n    done\n    echo $__count",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"${_item:0:1}\" == \"(\" ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n      ((__count++))\n    fi\n  done\n  echo $__count",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.+\\)$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -i count=0\n  local -a list=()\n  local -a tuple=($1)\n  for i in \"${tuple[@]}\"; do\n    if [[ $i =~ ^\\[.*\\]$ ]]; then\n      list+=($i)\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n  echo \"${list[@]}\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" == *\" \"* ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  while [[ $i -lt $len ]]; do\n    if [[ ${1:$i:1} == '[' ]]; then\n      (( count++ ))\n    fi\n    (( i++ ))\n  done\n  echo $count",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" == *\" \"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "    local -n _list=$1\n    local -i _count=0\n    for _item in \"${_list[@]}\"; do\n        if [[ \"$(declare -p $_item)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo $_count",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"${_item:0:1}\" == '(' ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if is_list \"$_item\"; then\n      (( _count++ ))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i n=0\n    for i in \"$@\"; do\n        if [[ \"$i\" =~ ^\\[.*\\]$ ]]; then\n            ((n++))\n        fi\n    done\n    echo \"$n\"",
    "    local -n __tuple=$1\n    local -i __count=0\n\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n            ((++__count))\n        fi\n    done\n\n    echo $__count",
    "  local -i count=0\n  for item in \"$@\"; do\n    if [[ \"$item\" == *\"$\"* ]]; then\n      (( count++ ))\n    fi\n  done\n  echo $count",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(type -t \"$_item\")\" == \"array\" ]]; then\n            ((_count++))\n        fi\n    done\n    echo $_count",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      ((++count))\n    fi\n  done\n  echo \"$count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            (( _count++ ))\n        fi\n    done\n    echo \"$_count\"",
    "    local -a stack\n    local -i depth=0\n    local -i i=0\n    local -i len=${#1}\n    local -i count=0\n    local -i start=0\n    local -i end=0\n    local -i in_list=0\n    local -i in_tuple=0\n    local -i in_string=0\n    local -i in_escape=0\n    local -i in_number=0\n    local -i in_symbol=0\n    local -i in_comment=0\n    local -i in_block_comment=0\n    local -i in_block_comment_start=0\n    local -i in_block_comment_end=0\n    local -i in_block_comment_end_start=0\n    local -i in_block_comment_end_end=0\n    local -i in_block_comment_end_end_start=0\n    local -i in_block_comment_end_end_end=0\n    local -i in_block_comment_end_end_end_start=0\n    local -i in_block_comment_end_end_end_end=0\n    local -i in_block_comment_end_end_end_end_start=0\n    local -i in_block_comment_end_end_end_end_end=0\n    local -i in_block_comment_end_end_end_end_end_start=0\n    local -i in_block_comment_end_end_end_end_end_end=0\n    local -i in_block_comment_end_end_end_end_end_end_start=0\n    local -i in_block_comment_end_end_end_end_end_end_end=0\n    local -i in_block_comment_end_end_end_end_end_end_end_start=0\n    local -i in_block_comment_end_end_end_end_end_end_end_end=0\n    local -i in_block_comment_end_end_end_end_end_end_end_end_start=0\n    local -i",
    "    local -n __any=$1\n    local -i __count=0\n    local -i __i=0\n    local -i __len=${#__any[@]}\n    while (( __i < __len )); do\n        if [[ ${__any[__i]} == '[' ]]; then\n            (( __count++ ))\n        fi\n        (( __i++ ))\n    done\n    echo $__count",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while [ $i -lt $len ]; do\n        if [ \"${1:$i:1}\" = \"[\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    local any=\"$1\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#any} ]; do\n        if [ \"${any:$i:1}\" = \"(\" ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $count",
    "  local -n _tuple=$1\n  local _list_count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" == *\"[\"* ]]; then\n      ((_list_count++))\n    fi\n  done\n  echo \"$_list_count\"",
    "  local -a list=(\"${!1}\")\n  local -i count=0\n  for item in \"${list[@]}\"; do\n    if [[ \"$item\" == *\"[\"*\"]\"* ]]; then\n      count+=1\n    fi\n  done\n  echo \"$count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\n    while [ $i -lt $len ]; do\n        if [ \"${1:$i:1}\" == \"[\" ]; then\n            j=$i\n            k=1\n            while [ $k -gt 0 ]; do\n                j=$((j+1))\n                if [ \"${1:$j:1}\" == \"[\" ]; then\n                    k=$((k+1))\n                elif [ \"${1:$j:1}\" == \"]\" ]; then\n                    k=$((k-1))\n                fi\n            done\n            count=$((count+1))\n            i=$j\n        fi\n        i=$((i+1))\n    done\n\n    echo $count",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p $_item)\" =~ \"declare -a\" ]]; then\n            ((_count++))\n        fi\n    done\n    echo $_count",
    "  local -i n=0\n  for i in \"${@:1}\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      ((n++))\n    fi\n  done\n  echo \"$n\"",
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
    "  local -n _list=$1\n  local -i _count=0\n  for _item in \"${_list[@]}\"; do\n    if [[ \"$_item\" == *\"[\"* ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _list=\"$1\"\n  local _count=0\n  for _item in \"${_list[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n      ((__count++))\n    fi\n  done\n  echo $__count",
    "  local any=\"$1\"\n  local count=0\n\n  while [[ \"$any\" != \"\" ]]; do\n    if [[ \"${any:0:1}\" == \"(\" ]]; then\n      count=$((count + 1))\n    fi\n    any=\"${any:1}\"\n  done\n\n  echo \"$count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_element\")\" =~ \"declare -a\" ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo \"$_count\"",
    "  local -i count=0\n  local -i i=0\n  local -i len=$(len \"$1\")\n  while [ $i -lt $len ]; do\n    if [ \"$(typeof \"$(get \"$1\" \"$i\")\")\" = \"list\" ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  echo \"$count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"${__item:0:1}\" == \"(\" ]]; then\n            ((__count++))\n        fi\n    done\n    echo $__count",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _element in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ \"declare -a\" ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"${_item:0:1}\" == '(' ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  while (( i < len )); do\n    if [[ ${1:i:1} == '(' ]]; then\n      (( count++ ))\n    fi\n    (( i++ ))\n  done\n  echo $count",
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" == *\" \"* ]]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
    "    local -n _l=$1\n    local -i _i=0\n    for _i in \"${!_l[@]}\"; do\n        if [[ \"${_l[$_i]}\" == *\"[\"* ]]; then\n            echo \"$_i\"\n        fi\n    done",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo \"$_count\"",
    "  local any=\"$1\"\n  local count=0\n  local i=0\n  local len=\"$(len \"$any\")\"\n  while [ \"$i\" -lt \"$len\" ]; do\n    local item=\"$(get_item \"$any\" \"$i\")\"\n    if [ \"$(is_list \"$item\")\" = \"true\" ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$count\"",
    "  local -a list\n  list=($(echo \"$1\" | tr ',' ' '))\n  local -i i=0\n  local -i count=0\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]} =~ ^\\[.*\\]$ ]]; then\n      ((count++))\n    fi\n  done\n  echo $count",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i _=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n      ((__count++))\n    fi\n  done\n  echo \"$__count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" == *\" \"* ]]; then\n            (( __count++ ))\n        fi\n    done\n    echo \"$__count\"",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if is_list \"$__item\"; then\n      ((__count++))\n    fi\n  done\n  echo \"$__count\"",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while (( i < len )); do\n        if [[ ${1:$i:1} == \"(\" ]]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo $count",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      (( _count++ ))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" == *\" \"* ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while (( i < len )); do\n        if [[ ${1:i:1} == '[' ]]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo $count",
    "    local -n __tuple=$1\n    local __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if is_list \"$__item\"; then\n            ((__count++))\n        fi\n    done\n    echo $__count",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while [ $i -lt $len ]; do\n        if [ \"${1:$i:1}\" == \"[\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _element in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __element in \"${__tuple[@]}\"; do\n        if [[ \"$__element\" =~ ^\\(.*\\)$ ]]; then\n            (( __count++ ))\n        fi\n    done\n    echo \"$__count\"",
    "  local -n _any=$1\n  local -i _count=0\n  for _item in \"${_any[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      (( _count++ ))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _lists=$1\n    local -i _count=0\n    for _element in \"${_lists[@]}\"; do\n        if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local any=$1\n  local count=0\n  local i=0\n  local len=${#any}\n  local char\n  while [ $i -lt $len ]; do\n    char=${any:$i:1}\n    if [ \"$char\" == \"[\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0",
    "  local -n _lists=$1\n  local _count=0\n\n  for _item in \"${_lists[@]}\"; do\n    if [[ \"$(declare -p \"$_item\")\" =~ ^declare\\ -a ]]; then\n      ((_count++))\n    fi\n  done\n\n  echo \"$_count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n            (( __count++ ))\n        fi\n    done\n    echo \"$__count\"",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" == *\" \"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      (( count++ ))\n    fi\n  done\n  echo \"$count\"",
    "    local tuple=$1\n    local count=0\n    local i=0\n    local list_start=0\n    local list_end=0\n    local list_length=0\n    local list=''\n    local tuple_length=${#tuple}\n    while [ $i -lt $tuple_length ]; do\n        if [ \"${tuple:$i:1}\" == '[' ]; then\n            list_start=$i\n            list_end=$i\n        elif [ \"${tuple:$i:1}\" == ']' ]; then\n            list_end=$i\n            list_length=$((list_end - list_start + 1))\n            list=${tuple:$list_start:$list_length}\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $count",
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" == *\" \"* ]]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -i n=0\n    for i in \"$@\"; do\n        if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n            ((n++))\n        fi\n    done\n    echo $n",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if [[ \"$__item\" == *\" \"* ]]; then\n      ((__count++))\n    fi\n  done\n  echo \"$__count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\[.*\\]$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"${_item:0:1}\" == \"(\" ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ $i =~ ^\\(.*\\)$ ]]; then\n      ((count++))\n    fi\n  done\n  echo $count",
    "  local -n _list=\"$1\"\n  local -i _count=0\n  for _item in \"${_list[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      (( _count++ ))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\[.*\\]$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local any=$1\n  local list_count=0\n\n  while [[ $any ]]; do\n    if [[ $any == *'('* ]]; then\n      ((list_count++))\n    fi\n    any=${any#*,}\n  done\n\n  echo $list_count",
    "    local -i n=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n   ",
    "    local tuple=$1\n    local count=0\n    local i=0\n    local len=${#tuple}\n    while [ $i -lt $len ]; do\n        if [ \"${tuple:$i:1}\" == \"[\" ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $count",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" == *\" \"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "  local -r any=\"$1\"\n  local -i count=0\n\n  while read -r list; do\n    count=$((count + 1))\n  done < <(echo \"$any\" | jq -c '.[]')\n\n  echo \"$count\"",
    "    local tuple=$1\n    local count=0\n    local list\n    for list in $tuple; do\n        if [[ $list == *\"[\"*\"]\"* ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "  local any=$1\n  local -i count=0\n  local -i i=0\n  local -i len=${#any}\n  local -i depth=0\n  local -i start=0\n  local -i end=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i _=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __element in \"${__tuple[@]}\"; do\n    if [[ \"$__element\" =~ ^\\(.*\\)$ ]]; then\n      ((__count++))\n    fi\n  done\n  echo \"$__count\"",
    "  local -n _tuple=$1\n  local _result=0\n  for _element in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p \"$_element\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n      ((_result++))\n    fi\n  done\n  echo \"$_result\"",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __element in \"${__tuple[@]}\"; do\n        if [[ \"$__element\" =~ ^\\(.*\\)$ ]]; then\n            ((__count++))\n        fi\n    done\n    echo $__count",
    "    local any=\"$1\"\n    local count=0\n    local list\n    for list in $(echo \"$any\" | tr ',' '\\n'); do\n        if [[ \"$list\" =~ ^\\[.*\\]$ ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"",
    "  local -i i=0\n  for ((i=0; i<${#1}; i++)); do\n    if [[ ${1:i:1} == '(' ]]; then\n      echo $i\n    fi\n  done",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local any=\"$1\"\n  local count=0\n  local i=0\n  local len=${#any}\n  while [ $i -lt $len ]; do\n    local char=${any:$i:1}\n    if [ \"$char\" == \"[\" ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$(declare -p \"${_item}\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo \"$count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _elem in \"${_tuple[@]}\"; do\n        if [[ \"$_elem\" =~ ^\\[.*\\]$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  while [ $i -lt $len ]; do\n    if [ \"${1:$i:1}\" = \"[\" ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  echo $count",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\[.*\\]$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    local -i start=0\n    local -i end=0\n    local -i depth=0\n    local -i in_list=0\n    local -i in_tuple=0\n\n    while (( i < len )); do\n        case ${1:i:1} in\n            \\[)\n                (( depth++ ))\n                (( in_list )) || {\n                    (( in_list++ ))\n                    (( start = i ))\n                }\n                ;;\n            \\])\n                (( depth-- ))\n                (( depth )) || {\n                    (( in_list-- ))\n                    (( end = i ))\n                    (( count++ ))\n                }\n                ;;\n            \\()\n                (( in_tuple++ ))\n                ;;\n            \\))\n                (( in_tuple-- ))\n                ;;\n        esac\n        (( i++ ))\n    done\n\n    echo $count",
    "    local -a list\n    local -a tuple\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n   ",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            (( _count++ ))\n        fi\n    done\n    echo \"$_count\"",
    "  local -i n=0\n  for i in \"$@\"; do\n    if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n      ((n++))\n    fi\n  done\n  echo $n",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(type -t \"$_item\")\" == \"array\" ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo \"$_count\"",
    "    local any=\"$1\"\n    local count=0\n    local list\n\n    while read -r list; do\n        if [[ \"$list\" =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done < <(echo \"$any\" | tr ' ' '\\n')\n\n    echo \"$count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "    local any=$1\n    local count=0\n    local i\n    for i in $(seq 1 ${#any}); do\n        local char=${any:$i-1:1}\n        if [[ $char == '[' ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count",
    "  local -i count=0\n  local -i i=0\n  local -i len=$(len $1)\n  while [ $i -lt $len ]; do\n    if [ $(is_list $(get $1 $i)) -eq 1 ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  echo $count",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n      ((__count++))\n    fi\n  done\n  echo \"$__count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      _count=$((_count + 1))\n    fi\n  done\n  echo \"$_count\"",
    "    local -n __tuple=$1\n    local -i __count=0\n    for __item in \"${__tuple[@]}\"; do\n        if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n            ((__count++))\n        fi\n    done\n    echo \"$__count\"",
    "    local -i count=0\n    local -a list\n    for i in \"$@\"; do\n        list=(\"${list[@]}\" \"$i\")\n    done\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"",
    "  local -n _list=$1\n  local _count=0\n  for _item in \"${_list[@]}\"; do\n    if [[ \"${_item}\" == *\"[\"* ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"${_count}\"",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0",
    "    local -i n=0\n    for i in \"$@\"; do\n        if [[ $i == *\" \"* ]]; then\n            ((n++))\n        fi\n    done\n    echo $n",
    "    local -n _list=$1\n    local -i _count=0\n    for _item in \"${_list[@]}\"; do\n        if [[ \"${_item:0:1}\" == \"(\" ]]; then\n            (( _count++ ))\n        fi\n    done\n    echo \"$_count\"",
    "    local any=$1\n    local count=0\n    local i=0\n    local len=${#any}\n    local char=''\n    local inside_list=false\n\n    while [ $i -lt $len ]; do\n        char=${any:$i:1}\n        if [ \"$char\" = '[' ]; then\n            inside_list=true\n        elif [ \"$char\" = ']' ]; then\n            inside_list=false\n        fi\n        if [ \"$inside_list\" = true ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n\n    echo $count",
    "  local any=$1\n  local list_count=0\n  local list_index=0\n  local list_index_max=0\n  local list_index_max_prev=0\n  local list_index_max_prev_prev=0\n  local list_index_max_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list_index_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local list",
    "  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i _=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i",
    "  local any=$1\n  local count=0\n  local i=0\n  local len=${#any}\n\n  while [ $i -lt $len ]; do\n    local char=${any:$i:1}\n    if [ \"$char\" = \"[\" ]; then\n      count=$((count + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo $count",
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
    "  local any=$1\n  local lists=$(echo $any | sed -e 's/[^\\[\\]]//g')\n  echo ${#lists}",
    "    local -i n=0\n    for i in \"$@\"; do\n        if [[ \"$i\" == *\"[\"* ]]; then\n            ((n++))\n        fi\n    done\n    echo \"$n\"",
    "    local -i count=0\n    for item in \"$@\"; do\n        if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n            count+=1\n        fi\n    done\n    echo $count",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "  local -a list\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n ",
    "  local -a list\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i count=0\n  local -i length=0\n  local -i length_of_list=0\n  local -i length_of_tuple=0\n  local -i length_of_string=0\n  local -i length_of_integer=0\n  local -i length_of_float=0\n  local -i length_of_boolean=0\n  local -i length_of_null=0\n  local -i length_of_any=0\n  local -i length_of_array=0\n  local -i length_of_object=0\n  local -i length_of_function=0\n  local -i length_of_undefined=0\n  local -i length_of_nan=0\n  local -i length_of_infinity=0\n  local -i length_of_number=0\n  local -i length_of_primitive=0\n  local -i length_of_value=0\n  local -i length_of_element=0\n  local -i length_of_key=0\n  local -i length_of_pair=0\n  local -i length_of_property=0\n  local -i length_of_argument=0\n  local -i length_of_parameter=0\n  local -i length_of_variable=0\n  local -i length_of_name=0\n  local -i length_of_identifier=0\n  local -i length_of_statement=0\n  local -i length_of_declaration=0\n ",
    "  local -i count=0\n  for item in \"$@\"; do\n    if [[ \"$item\" =~ ^\\(.*\\)$ ]]; then\n      (( count++ ))\n    fi\n  done\n  echo \"$count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"${_item:0:1}\" == \"(\" ]]; then\n      (( _count++ ))\n    fi\n  done\n  echo \"$_count\"",
    "    local -i count=0\n    local -i i=0\n    local -i len=${#1}\n    while (( i < len )); do\n        if [[ ${1:i:1} == '(' ]]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo $count",
    "    local any=\"$1\"\n    local count=0\n    local i=0\n    local len=${#any}\n    while [ $i -lt $len ]; do\n        local char=${any:$i:1}\n        if [ \"$char\" == \"(\" ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $count",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo \"$_count\"",
    "  local -n _tuple=$1\n  local -i _count=0\n  for _element in \"${_tuple[@]}\"; do\n    if [[ \"$_element\" == *\" \"* ]]; then\n      ((_count++))\n    fi\n  done\n  echo \"$_count\"",
    "  local -n _tuple=$1\n  local _count=0\n  for _item in \"${_tuple[@]}\"; do\n    if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n      _count=$((_count + 1))\n    fi\n  done\n  echo \"$_count\"",
    "    local any=\"$1\"\n    local lists=0\n    local list_depth=0\n    local in_list=0\n    local in_string=0\n    local c\n    for ((i=0; i<${#any}; i++)); do\n        c=\"${any:$i:1}\"\n        if [[ $in_string -eq 1 ]]; then\n            if [[ $c == '\"' ]]; then\n                in_string=0\n            fi\n        elif [[ $in_list -eq 1 ]]; then\n            if [[ $c == '[' ]]; then\n                list_depth=$((list_depth + 1))\n            elif [[ $c == ']' ]]; then\n                list_depth=$((list_depth - 1))\n                if [[ $list_depth -eq 0 ]]; then\n                    in_list=0\n                fi\n            fi\n        else\n            if [[ $c == '[' ]]; then\n                lists=$((lists + 1))\n                in_list=1\n                list_depth=1\n            elif [[ $c == '\"' ]]; then\n                in_string=1\n            fi\n        fi\n    done\n    echo $lists",
    "    local -n _tuple=$1\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_element\")\" == \"declare -a \"* ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local -n __tuple=$1\n  local -i __count=0\n  for __item in \"${__tuple[@]}\"; do\n    if [[ \"$__item\" =~ ^\\(.*\\)$ ]]; then\n      ((__count++))\n    fi\n  done\n  echo \"$__count\"",
    "  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0",
    "    local -n _any=$1\n    local -i _count=0\n    local -i _i=0\n    local -i _len=${#_any[@]}\n    while (( _i < _len )); do\n        if [[ ${_any[_i]} == '[' ]]; then\n            (( _count++ ))\n        fi\n        (( _i++ ))\n    done\n    echo $_count",
    "    local -i count=0\n    local -a array=($1)\n    for element in \"${array[@]}\"; do\n        if [[ $element =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local -i i=0\n    local -i n=$#\n    for ((i=0; i<n; i++)); do\n        if [[ \"${!i}\" == *\" \"* ]]; then\n            echo \"$i\"\n        fi\n    done",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"${_item:0:1}\" == \"(\" ]]; then\n            (( _count++ ))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(type -t \"$_item\")\" == \"list\" ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "  local any=$1\n  local count=0\n  local i=0\n  local len=${#any}\n  local char=\n  local in_list=0\n  while [ $i -lt $len ]; do\n    char=${any:$i:1}\n    if [ \"$char\" == \"[\" ]; then\n      in_list=1\n    elif [ \"$char\" == \"]\" ]; then\n      in_list=0\n    fi\n    if [ $in_list -eq 1 ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count",
    "    local result=0\n    local i=0\n    while [ $i -lt ${#1} ]; do\n        if [ \"${1:$i:1}\" = \"[\" ]; then\n            result=$((result + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $result",
    "  local -i count=0\n  for i in \"$@\"; do\n    if [[ \"$i\" == *\" \"* ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"",
    "    local -n _tuple=$1\n    local -i _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$(declare -p \"$_item\" 2>/dev/null)\" =~ ^declare\\ -a ]]; then\n            (( _count++ ))\n        fi\n    done\n    echo \"$_count\"",
    "    local any=$1\n    local count=0\n    local i=0\n    local len=${#any}\n    while [ $i -lt $len ]; do\n        if [ \"${any:$i:1}\" = \"[\" ]; then\n            count=$((count + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $count",
    "    local -n _tuple=$1\n    local _count=0\n    for _item in \"${_tuple[@]}\"; do\n        if [[ \"$_item\" =~ ^\\(.*\\)$ ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"$_count\"",
    "    local -i count=0\n    for i in \"$@\"; do\n        if [[ \"$i\" =~ ^\\(.*\\)$ ]]; then\n            ((count++))\n        fi\n    done\n    echo $count"
  ]
}
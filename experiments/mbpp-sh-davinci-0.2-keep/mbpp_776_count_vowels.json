{
  "name": "mbpp_776_count_vowels",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to count those characters which have vowels as their neighbors in the given string.\n#\n# $1 is a string\ncount_vowels() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    count_vowels \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"bestinstareels\") = \"7\" ]]\n    [[ $(candidate \"partofthejourneyistheend\") = \"12\" ]]\n    [[ $(candidate \"amazonprime\") = \"5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local str=\"$1\"\n    local count=0\n    local i=0\n    local len=${#str}\n\n    for ((i=0; i<len; i++)); do\n        if [[ \"${str:i:1}\" =~ [aeiou] ]]; then\n            if [[ \"${str:i-1:1}\" =~ [aeiou] ]] || [[ \"${str:i+1:1}\" =~ [aeiou] ]]; then\n                ((count++))\n            fi\n        fi\n    done\n\n    echo \"$count\"",
    "  local str=$1\n  local count=0\n  local vowels=\"aeiou\"\n  local i=0\n  local len=${#str}\n  local curr=${str:$i:1}\n  local next=${str:$((i+1)):1}\n  while [ $i -lt $len ]; do\n    if [[ $vowels =~ $curr ]]; then\n      if [[ $vowels =~ $next ]]; then\n        count=$((count+1))\n      fi\n    fi\n    i=$((i+1))\n    curr=${str:$i:1}\n    next=${str:$((i+1)):1}\n  done\n  echo $count",
    "    local str=$1\n    local count=0\n    local i=0\n    local len=${#str}\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            if [[ $str =~ ^[aeiou] ]]; then\n                ((count++))\n            fi\n        elif [ $i -eq $((len - 1)) ]; then\n            if [[ $str =~ [aeiou]$ ]]; then\n                ((count++))\n            fi\n        else\n            if [[ $str =~ [aeiou] ]]; then\n                ((count++))\n            fi\n        fi\n        ((i++))\n    done\n\n    echo $count",
    "    local str=\"$1\"\n    local count=0\n    local i=0\n    local len=${#str}\n    local vowels=\"aeiou\"\n    local c\n    local c1\n    local c2\n    for ((i=0; i<len; i++)); do\n        c=${str:i:1}\n        c1=${str:i-1:1}\n        c2=${str:i+1:1}\n        if [[ \"$vowels\" =~ \"$c\" ]]; then\n            if [[ \"$vowels\" =~ \"$c1\" || \"$vowels\" =~ \"$c2\" ]]; then\n                count=$((count+1))\n            fi\n        fi\n    done\n    echo $count",
    "  local str=\"$1\"\n  local -i count=0\n  local -i i=0\n  local -i len=${#str}\n  local -i is_vowel=0\n  local -i is_prev_vowel=0\n  local -i is_next_vowel=0\n  local -i is_prev_char=0\n  local -i is_next_char=0\n  local -i is_prev_char_vowel=0\n  local -i is_next_char_vowel=0\n  local -i is_prev_char_consonant=0\n  local -i is_next_char_consonant=0\n  local -i is_prev_char_vowel_or_consonant=0\n  local -i is_next_char_vowel_or_consonant=0\n  local -i is_prev_char_vowel_and_consonant=0\n  local -i is_next_char_vowel_and_consonant=0\n  local -i is_prev_char_vowel_or_consonant_and_next_char_vowel=0\n  local -i is_prev_char_vowel_or_consonant_and_next_char_consonant=0\n  local -i is_prev_char_vowel_and_consonant_and_next_char_vowel=0\n  local -i is_prev_char_vowel_and_consonant_and_next_char_consonant=0\n  local -i is_prev_char_vowel_or_consonant_and_next_char_vowel_or_consonant=0\n  local -i is_prev_char_vowel_or_consonant_and_next_char_vowel_and_consonant=0\n  local -i is_prev_char_vowel_and_consonant_and_next_char_vowel_or_consonant=0\n  local -i is_prev_char_vowel_and_conson",
    "  local string=$1\n  local count=0\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    local prev_char=${string:$((i-1)):1}\n    local next_char=${string:$((i+1)):1}\n    if [[ $char =~ [aeiou] ]]; then\n      if [[ $prev_char =~ [aeiou] ]] || [[ $next_char =~ [aeiou] ]]; then\n        (( count++ ))\n      fi\n    fi\n  done\n  echo $count",
    "  local str=$1\n  local count=0\n  local vowels=\"aeiou\"\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    local j=0\n    local vlen=${#vowels}\n    while [ $j -lt $vlen ]; do\n      local vchar=${vowels:$j:1}\n      if [ \"$char\" == \"$vchar\" ]; then\n        local prev=${str:$((i-1)):1}\n        local next=${str:$((i+1)):1}\n        if [ \"$prev\" == \"$vchar\" ] || [ \"$next\" == \"$vchar\" ]; then\n          count=$((count+1))\n        fi\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo $count",
    "  local count=0\n  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local char=''\n  local next=''\n  local prev=''\n\n  while [ $i -lt $len ]; do\n    char=${str:$i:1}\n    next=${str:$i+1:1}\n    prev=${str:$i-1:1}\n\n    if [[ \"$char\" =~ [aeiou] ]]; then\n      if [[ \"$next\" =~ [aeiou] ]] || [[ \"$prev\" =~ [aeiou] ]]; then\n        count=$((count + 1))\n      fi\n    fi\n\n    i=$((i + 1))\n  done\n\n  echo \"$count\"",
    "  local vowels=\"aeiou\"\n  local count=0\n  local i=0\n  local len=${#1}\n  local char\n  local prev_char\n  local next_char\n\n  for ((i=0; i<len; i++)); do\n    char=${1:i:1}\n    if [[ $i -eq 0 ]]; then\n      prev_char=${1:len-1:1}\n    else\n      prev_char=${1:i-1:1}\n    fi\n    if [[ $i -eq $((len-1)) ]]; then\n      next_char=${1:0:1}\n    else\n      next_char=${1:i+1:1}\n    fi\n    if [[ $vowels =~ $char ]]; then\n      if [[ $vowels =~ $prev_char || $vowels =~ $next_char ]]; then\n        ((count++))\n      fi\n    fi\n  done\n  echo $count",
    "    local str=$1\n    local count=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [aeiou] ]]; then\n            if [[ \"${str:i-1:1}\" =~ [aeiou] ]] || [[ \"${str:i+1:1}\" =~ [aeiou] ]]; then\n                (( count++ ))\n            fi\n        fi\n    done\n    echo $count",
    "  local string=$1\n  local count=0\n  local i=0\n  local len=${#string}\n  local char\n\n  while [ $i -lt $len ]; do\n    char=${string:$i:1}\n    if [[ $char =~ [aeiou] ]]; then\n      if [ $i -eq 0 ]; then\n        if [[ ${string:$((i+1)):1} =~ [aeiou] ]]; then\n          count=$((count+1))\n        fi\n      elif [ $i -eq $((len-1)) ]; then\n        if [[ ${string:$((i-1)):1} =~ [aeiou] ]]; then\n          count=$((count+1))\n        fi\n      else\n        if [[ ${string:$((i-1)):1} =~ [aeiou] ]] || [[ ${string:$((i+1)):1} =~ [aeiou] ]]; then\n          count=$((count+1))\n        fi\n      fi\n    fi\n    i=$((i+1))\n  done\n\n  echo $count",
    "    local string=$1\n    local count=0\n    local i=0\n    local char=''\n    local prev=''\n    local next=''\n    local vowels='aeiou'\n    for (( i=0; i<${#string}; i++ )); do\n        char=${string:$i:1}\n        prev=${string:$i-1:1}\n        next=${string:$i+1:1}\n        if [[ $vowels =~ $char ]]; then\n            if [[ $vowels =~ $prev || $vowels =~ $next ]]; then\n                (( count++ ))\n            fi\n        fi\n    done\n    echo $count",
    "  local string=\"$1\"\n  local count=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    local next_char=\"${string:$((i+1)):1}\"\n    local prev_char=\"${string:$((i-1)):1}\"\n\n    if [[ \"$char\" =~ [aeiou] ]]; then\n      if [[ \"$next_char\" =~ [aeiou] ]] || [[ \"$prev_char\" =~ [aeiou] ]]; then\n        count=$((count+1))\n      fi\n    fi\n  done\n\n  echo \"$count\"",
    "  local count=0\n  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local vowels=\"aeiou\"\n  local c\n  local prev\n  local next\n\n  for (( i=0; i<len; i++ )); do\n    c=${str:$i:1}\n    prev=${str:$((i-1)):1}\n    next=${str:$((i+1)):1}\n    if [[ \"$vowels\" =~ \"$c\" ]]; then\n      if [[ \"$vowels\" =~ \"$prev\" || \"$vowels\" =~ \"$next\" ]]; then\n        (( count++ ))\n      fi\n    fi\n  done\n\n  echo \"$count\"",
    "    local string=\"$1\"\n    local count=0\n    local i=0\n    local length=${#string}\n    local char=''\n\n    while [ $i -lt $length ]; do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [aeiou] ]]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n\n    echo $count",
    "    local string=\"$1\"\n    local count=0\n    local vowels=\"aeiou\"\n    local i=0\n    local len=${#string}\n    local char\n    local prev_char\n    local next_char\n\n    while [ $i -lt $len ]; do\n        char=${string:$i:1}\n        prev_char=${string:$((i-1)):1}\n        next_char=${string:$((i+1)):1}\n\n        if [[ $vowels =~ $char ]]; then\n            if [[ $vowels =~ $prev_char || $vowels =~ $next_char ]]; then\n                count=$((count+1))\n            fi\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    echo \"$1\" | grep -o '[aeiou][^aeiou]*[aeiou]' | wc -l",
    "  local string=$1\n  local count=0\n  local vowels=\"aeiou\"\n  local i=0\n  local char=''\n  local next_char=''\n  local prev_char=''\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=${string:$i:1}\n    next_char=${string:$((i+1)):1}\n    prev_char=${string:$((i-1)):1}\n\n    if [[ $vowels =~ $char ]]; then\n      if [[ $vowels =~ $next_char ]] || [[ $vowels =~ $prev_char ]]; then\n        count=$((count+1))\n      fi\n    fi\n  done\n\n  echo $count",
    "    local str=$1\n    local count=0\n    local i=0\n    local len=${#str}\n    local vowels=\"aeiou\"\n    local char\n    local prev_char\n    local next_char\n    while [ $i -lt $len ]; do\n        char=${str:$i:1}\n        if [ $i -gt 0 ]; then\n            prev_char=${str:$((i-1)):1}\n        else\n            prev_char=\"\"\n        fi\n        if [ $i -lt $((len-1)) ]; then\n            next_char=${str:$((i+1)):1}\n        else\n            next_char=\"\"\n        fi\n        if [[ $vowels =~ $char ]] && [[ $vowels =~ $prev_char ]] && [[ $vowels =~ $next_char ]]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    local string=$1\n    local count=0\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        local prev_char=${string:$((i-1)):1}\n        local next_char=${string:$((i+1)):1}\n        if [[ $char =~ [aeiou] ]]; then\n            if [[ $prev_char =~ [aeiou] ]] || [[ $next_char =~ [aeiou] ]]; then\n                (( count++ ))\n            fi\n        fi\n    done\n    echo $count"
  ]
}
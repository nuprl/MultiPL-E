{
  "name": "mbpp_58_opposite_Signs",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to check whether the given two integers have opposite sign or not.\n#\n# $1 is an integer\n# $2 is an integer\nopposite_Signs() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_58_opposite_Signs.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    opposite_Signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"-2\") = \"true\" ]]\n    [[ $(candidate \"3\" \"2\") = \"false\" ]]\n    [[ $(candidate \"-10\" \"-10\") = \"false\" ]]\n    [[ $(candidate \"-2\" \"2\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -eq 0 -o $2 -eq 0 ]; then\n        echo \"0 has no sign\"\n    elif [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"Opposite signs\"\n    elif [ $1 -lt 0 -a $2 -gt 0 ]; then\n        echo \"Opposite signs\"\n    else\n        echo \"Same signs\"\n    fi",
    "  if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    if [ $1 -gt 0 -a $2 -lt 0 ] || [ $1 -lt 0 -a $2 -gt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 ] && [ $2 -gt 0 ] || [ $1 -gt 0 ] && [ $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 ] && [ $2 -gt 0 ]; then\n        echo \"True\"\n    elif [ $1 -gt 0 ] && [ $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -ge 0 -a $2 -lt 0 ] || [ $1 -lt 0 -a $2 -ge 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -gt 0 -a $2 -lt 0 ] || [ $1 -lt 0 -a $2 -gt 0 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 -o $1 -gt 0 -a $2 -lt 0 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -eq 0 ] || [ $2 -eq 0 ]; then\n        echo \"0 has no sign\"\n    elif [ $1 -gt 0 ] && [ $2 -gt 0 ]; then\n        echo \"Both are positive\"\n    elif [ $1 -lt 0 ] && [ $2 -lt 0 ]; then\n        echo \"Both are negative\"\n    else\n        echo \"Opposite signs\"\n    fi",
    "    if [[ $1 -eq 0 || $2 -eq 0 ]]; then\n        echo \"0 has no sign\"\n        return\n    fi\n    if [[ $1 -gt 0 && $2 -lt 0 ]] || [[ $1 -lt 0 && $2 -gt 0 ]]; then\n        echo \"Opposite Signs\"\n    else\n        echo \"Same Signs\"\n    fi",
    "    if [[ $1 -lt 0 && $2 -gt 0 ]] || [[ $1 -gt 0 && $2 -lt 0 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "  if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -gt 0 -a $2 -lt 0 ] || [ $1 -lt 0 -a $2 -gt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $1 -lt 0 -a $2 -gt 0 ] || [ $1 -gt 0 -a $2 -lt 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi"
  ]
}
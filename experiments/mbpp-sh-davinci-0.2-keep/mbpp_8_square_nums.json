{
  "name": "mbpp_8_square_nums",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find squares of individual elements in a list.\n#\n# $1 is a space-separated list\nsquare_nums() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_8_square_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    square_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1 4 9 16 25 36 49 64 81 100\" ]]\n    [[ $(candidate \"10 20 30\") = \"100 400 900\" ]]\n    [[ $(candidate \"12 15\") = \"144 225\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local nums=\"$1\"\n  local num\n  local result=\"\"\n\n  for num in $nums; do\n    result=\"$result $(($num * $num))\"\n  done\n\n  echo $result",
    "  local nums=$1\n  local result=\"\"\n  for num in $nums; do\n    result=\"$result $(($num * $num))\"\n  done\n  echo $result",
    "  for num in $1; do\n    echo $((num * num))\n  done",
    "  local nums=\"$1\"\n  local num\n  local result=\"\"\n\n  for num in $nums; do\n    result=\"$result $(($num * $num))\"\n  done\n\n  echo $result",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $(( num * num ))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num))\n    done",
    "    for num in $1; do\n        echo $((num * num))\n    done",
    "  local nums=\"$1\"\n  local num\n  local squared\n  for num in $nums; do\n    squared=$((num * num))\n    echo -n \"$squared \"\n  done\n  echo",
    "    local nums=($1)\n    local result=\"\"\n    for num in ${nums[@]}; do\n        result=\"$result $(($num * $num))\"\n    done\n    echo $result",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num))\n    done",
    "  local nums=\"$1\"\n  local num\n  for num in $nums; do\n    echo $((num * num))\n  done",
    "    for i in $1; do\n        echo $((i*i))\n    done",
    "    local nums=\"$1\"\n    local num\n    local result=\"\"\n    for num in $nums; do\n        result=\"$result $(($num * $num))\"\n    done\n    echo $result",
    "    local nums=\"$1\"\n    local num\n    local result=()\n    for num in $nums; do\n        result+=($((num * num)))\n    done\n    echo \"${result[@]}\"",
    "    for num in $1; do\n        echo $(( num * num ))\n    done",
    "    local nums=$1\n    local num\n    for num in $nums; do\n        echo $((num * num))\n    done",
    "  for i in $1; do\n    echo $((i*i))\n  done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num))\n    done",
    "    for i in $1; do\n        echo $(($i * $i))\n    done"
  ]
}
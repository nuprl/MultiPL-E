{
  "name": "mbpp_84_sequence",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth number in the newman conway sequence.\n#\n# $1 is an integer\nsequence() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_84_sequence.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"6\" ]]\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"3\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        local a=$(sequence $((n-1)))\n        local b=$(sequence $((n-2)))\n        echo $((a+b))\n    fi",
    "    if [ $1 -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(sequence $(( $1 - 1 ))) + $(sequence $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(sequence $(( $1 - 1 ))) + $(sequence $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(sequence $(( $1 - 1 ))) + $(sequence $(( $1 - 2 ))) ))\n    fi",
    "\tlocal n=$1\n\tlocal a=1\n\tlocal b=1\n\tlocal c=1\n\tlocal i=1\n\twhile [ $i -lt $n ]; do\n\t\tc=$((a+b))\n\t\ta=$b\n\t\tb=$c\n\t\ti=$((i+1))\n\tdone\n\techo $c",
    "    if [ $1 -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(sequence $(( $1 - 1 ))) + $(sequence $(( $1 - 2 )))))\n    fi",
    "  local n=$1\n  local a=1\n  local b=1\n  local c=0\n  local i=2\n  while [ $i -lt $n ]; do\n    c=$((a+b))\n    a=$b\n    b=$c\n    i=$((i+1))\n  done\n  echo $c",
    "\tlocal -i n=$1\n\tlocal -i a=1\n\tlocal -i b=1\n\tlocal -i c=0\n\tlocal -i i=2\n\twhile (( i <= n )); do\n\t\tc=$(( a + b ))\n\t\ta=$b\n\t\tb=$c\n\t\t(( i++ ))\n\tdone\n\techo $c",
    "\tlocal n=$1\n\tlocal a=0\n\tlocal b=1\n\tlocal c=0\n\tlocal i=0\n\n\tif [ $n -eq 0 ]; then\n\t\techo $a\n\telif [ $n -eq 1 ]; then\n\t\techo $b\n\telse\n\t\twhile [ $i -lt $n ]; do\n\t\t\tc=$(($a + $b))\n\t\t\ta=$b\n\t\t\tb=$c\n\t\t\ti=$(($i + 1))\n\t\tdone\n\t\techo $c\n\tfi",
    "    if [ $1 -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(sequence $(( $1 - 1 ))) + $(sequence $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    if [ $n -eq 1 ] || [ $n -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(sequence $((n-1))) + $(sequence $((n-2))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $a",
    "    if [[ $1 -eq 1 ]] || [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(sequence $(( $1 - 1 ))) + $(sequence $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for (( i=0; i<n; i++ )); do\n        c=$((a+b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "\tlocal n=$1\n\tlocal a=1\n\tlocal b=1\n\tlocal c=0\n\tlocal i=2\n\twhile [ $i -lt $n ]\n\tdo\n\t\tc=$(($a+$b))\n\t\ta=$b\n\t\tb=$c\n\t\ti=$(($i+1))\n\tdone\n\techo $c",
    "\tlocal n=$1\n\tlocal a=1\n\tlocal b=1\n\tlocal c=1\n\tlocal i=2\n\twhile [ $i -lt $n ]; do\n\t\tc=$((a+b))\n\t\ta=$b\n\t\tb=$c\n\t\ti=$((i+1))\n\tdone\n\techo $c",
    "\tlocal n=$1\n\tlocal a=1\n\tlocal b=1\n\tlocal c=0\n\tlocal i=0\n\twhile [ $i -lt $n ]\n\tdo\n\t\tc=$((a+b))\n\t\ta=$b\n\t\tb=$c\n\t\ti=$((i+1))\n\tdone\n\techo $c",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $a",
    "    if [[ $1 -eq 1 ]] || [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(sequence $(($1 - 1))) + $(sequence $(($1 - 2)))))\n    fi",
    "    local n=$1\n    if [[ $n -eq 1 ]] || [[ $n -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(sequence $((n-1))) + $(sequence $((n-2))) ))\n    fi"
  ]
}
{
  "name": "mbpp_446_count_Occurrence",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to count the occurence of all elements of list in a tuple.\n#\n# $1 is a $Any\n# $2 is a $Any\ncount_Occurrence() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    count_Occurrence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a a c b d\" \"a b\") = \"3\" ]]\n    [[ $(candidate \"1 2 3 1 4 6 7 1 4\" \"1 4 7\") = \"6\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"1 2\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ $_element == $_item ]]; then\n                ((_count++))\n            fi\n        done\n    done\n\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ \"${_element}\" == \"${_tuple_element}\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"${_count}\"",
    "    # Write your code here\n    python -c \"print($1.count($2))\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _element2 in ${_tuple[@]}; do\n            if [[ $_element -eq $_element2 ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -n _result=$3\n    local -a _temp=()\n    local _count=0\n    for i in ${_list[@]}; do\n        for j in ${_tuple[@]}; do\n            if [ $i == $j ]; then\n                _count=$((_count+1))\n            fi\n        done\n        _temp+=($_count)\n        _count=0\n    done\n    _result=(\"${_temp[@]}\")",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _item in \"${_list[@]}\"; do\n        for _tuple_item in \"${_tuple[@]}\"; do\n            if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python -c \"print(tuple(map(lambda x: $1.count(x), $2)))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [ \"$_element\" == \"$_tuple_element\" ]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$_element\" == \"${_list[0]}\" ]]; then\n            _count=$((_count+1))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    local _element\n    for _element in \"${_list[@]}\"; do\n        _count=0\n        for _element2 in \"${_tuple[@]}\"; do\n            if [ \"$_element\" == \"$_element2\" ]; then\n                ((_count++))\n            fi\n        done\n        echo \"$_element: $_count\"\n    done",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -n _result=$3\n  local -i i=0\n  local -i j=0\n  local -i count=0\n  for i in ${_list[@]}; do\n    for j in ${_tuple[@]}; do\n      if [ $i == $j ]; then\n        ((count++))\n      fi\n    done\n    _result[$i]=$count\n    count=0\n  done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _item in ${_list[@]}; do\n        for _tuple_item in ${_tuple[@]}; do\n            if [[ $_item == $_tuple_item ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    local _element\n    for _element in \"${_list[@]}\"; do\n        if [[ \"${_tuple[@]}\" =~ \"$_element\" ]]; then\n            _count=$((_count+1))\n        fi\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _i in \"${_list[@]}\"; do\n        for _j in \"${_tuple[@]}\"; do\n            if [ \"$_i\" == \"$_j\" ]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    echo \"function count_Occurrence($1, $2)\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _item in \"${_list[@]}\"; do\n        for _element in \"${_tuple[@]}\"; do\n            if [[ \"$_item\" == \"$_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _element_tuple in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_element_tuple\" ]]; then\n                (( _count++ ))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=\"$1\"\n    local -n _tuple=\"$2\"\n    local -i _count=0\n\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"${_element}\" == \"${_list[@]}\" ]]; then\n            ((_count++))\n        fi\n    done\n\n    echo \"${_count}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ $_element == $_tuple_element ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python -c \"print(tuple(map(lambda x: $1.count(x), $2)))\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _elem in \"${_tuple[@]}\"; do\n        if [[ \"$_elem\" == \"${_list[0]}\" ]]; then\n            _count=$((_count + 1))\n        fi\n    done\n    echo \"$_count\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -A _occurrence\n  local _element\n  for _element in \"${_list[@]}\"; do\n    _occurrence[\"$_element\"]=0\n  done\n  for _element in \"${_tuple[@]}\"; do\n    ((_occurrence[\"$_element\"]++))\n  done\n  echo \"${_occurrence[@]}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _element in \"${_list[@]}\"; do\n    for _tuple_element in \"${_tuple[@]}\"; do\n      if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -a _result=()\n    for ((i = 0; i < ${#_list[@]}; i++)); do\n        local _count=0\n        for ((j = 0; j < ${#_tuple[@]}; j++)); do\n            if [[ ${_list[$i]} == ${_tuple[$j]} ]]; then\n                _count=$((_count + 1))\n            fi\n        done\n        _result[$i]=$_count\n    done\n    echo \"${_result[@]}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_tuple[@]}; do\n        if [[ \"${_element}\" == \"${_list}\" ]]; then\n            ((_count++))\n        fi\n    done\n    echo \"${_count}\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -A _occurrence\n  for _item in \"${_list[@]}\"; do\n    _occurrence[\"$_item\"]=0\n  done\n  for _item in \"${_tuple[@]}\"; do\n    if [[ ${_occurrence[\"$_item\"]} -eq 0 ]]; then\n      _occurrence[\"$_item\"]=1\n    fi\n  done\n  for _item in \"${_list[@]}\"; do\n    echo \"$_item: ${_occurrence[\"$_item\"]}\"\n  done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ $_element == $_tuple_element ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _element in \"${_list[@]}\"; do\n    for _tuple_element in \"${_tuple[@]}\"; do\n      if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for i in ${_list[@]}; do\n        for j in ${_tuple[@]}; do\n            if [[ $i == $j ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                (( _count++ ))\n            fi\n        done\n    done\n\n    echo \"$_count\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [ \"$_element\" == \"$_tuple_element\" ]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(tuple($1).count($2))\"",
    "    echo \"count_Occurrence not implemented\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local _count=0\n  for _element in ${_list[@]}; do\n    for _item in ${_tuple[@]}; do\n      if [[ \"$_element\" == \"$_item\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _item in ${_list[@]}; do\n        for _tuple_item in ${_tuple[@]}; do\n            if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _i in \"${_list[@]}\"; do\n        for _j in \"${_tuple[@]}\"; do\n            if [[ \"$_i\" == \"$_j\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    python -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -A _occurrence\n    for _element in \"${_tuple[@]}\"; do\n        _occurrence[\"$_element\"]=$((_occurrence[\"$_element\"] + 1))\n    done\n    for _element in \"${_list[@]}\"; do\n        echo \"$_element: ${_occurrence[\"$_element\"]}\"\n    done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in ${_tuple[@]}; do\n        if [[ \"$i\" == \"${_list[0]}\" ]]; then\n            _count=$((_count+1))\n        fi\n    done\n    echo $_count",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _element in \"${_list[@]}\"; do\n    for _tuple_element in \"${_tuple[@]}\"; do\n      if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n        (( _count++ ))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in ${_list[@]}; do\n        for j in ${_tuple[@]}; do\n            if [[ $i == $j ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    python -c \"print tuple(map(lambda x: $2.count(x), $1))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _item in ${_list[@]}; do\n        for _tuple_item in ${_tuple[@]}; do\n            if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    python3 -c \"print(tuple(map(lambda x: $2.count(x), $1)))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _result=()\n    for _element in \"${_list[@]}\"; do\n        local _count=0\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n        _result+=(\"$_count\")\n    done\n    echo \"${_result[@]}\"",
    "\tpython -c \"print tuple($1).count($2)\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for ((i=0; i<${#_list[@]}; i++)); do\n        for ((j=0; j<${#_tuple[@]}; j++)); do\n            if [[ ${_list[$i]} == ${_tuple[$j]} ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    local -n arr=$1\n    local -n tup=$2\n    local -A count\n    for i in \"${arr[@]}\"; do\n        count[$i]=0\n    done\n    for i in \"${tup[@]}\"; do\n        count[$i]=$((count[$i]+1))\n    done\n    for i in \"${!count[@]}\"; do\n        echo \"$i: ${count[$i]}\"\n    done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ $_element == $_item ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -n _result=$3\n\n    for i in \"${_list[@]}\"; do\n        local count=0\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                count=$((count + 1))\n            fi\n        done\n        _result[$i]=$count\n    done",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(tuple(map(lambda x: $1.count(x), $2)))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [ \"$_element\" == \"$_item\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo $_count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _item in \"${_list[@]}\"; do\n        for _tuple_item in \"${_tuple[@]}\"; do\n            if [ \"$_item\" == \"$_tuple_item\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n list=$1\n    local -n tuple=$2\n    local -A count\n    for i in \"${list[@]}\"; do\n        count[$i]=0\n    done\n    for i in \"${tuple[@]}\"; do\n        count[$i]=$((count[$i]+1))\n    done\n    for i in \"${list[@]}\"; do\n        echo \"$i: ${count[$i]}\"\n    done",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [ \"$i\" == \"$j\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _counter=0\n    local _element\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_counter++))\n            fi\n        done\n    done\n    echo \"$_counter\"",
    "    python -c \"print tuple($1).count($2)\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _element2 in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_element2\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"\n    do\n        for _tuple_element in \"${_tuple[@]}\"\n        do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]\n            then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python3 -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "  if [ $# -ne 2 ]; then\n    echo \"Usage: count_Occurrence <list> <tuple>\"\n    return 1\n  fi\n  local list=\"$1\"\n  local tuple=\"$2\"\n  local result=$(python -c \"print($list.count($tuple))\")\n  echo \"$result\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    echo \"count_Occurrence\"\n    echo \"    $1\"\n    echo \"    $2\"\n    echo \"    $3\"\n    echo \"    $4\"\n    echo \"    $5\"\n    echo \"    $6\"\n    echo \"    $7\"\n    echo \"    $8\"\n    echo \"    $9\"\n    echo \"    ${10}\"\n    echo \"    ${11}\"\n    echo \"    ${12}\"\n    echo \"    ${13}\"\n    echo \"    ${14}\"\n    echo \"    ${15}\"\n    echo \"    ${16}\"\n    echo \"    ${17}\"\n    echo \"    ${18}\"\n    echo \"    ${19}\"\n    echo \"    ${20}\"\n    echo \"    ${21}\"\n    echo \"    ${22}\"\n    echo \"    ${23}\"\n    echo \"    ${24}\"\n    echo \"    ${25}\"\n    echo \"    ${26}\"\n    echo \"    ${27}\"\n    echo \"    ${28}\"\n    echo \"    ${29}\"\n    echo \"    ${30}\"\n    echo \"    ${31}\"\n    echo \"    ${32}\"\n    echo \"    ${33}\"\n    echo \"    ${34}\"\n    echo \"    ${35}\"\n    echo \"    ${36}\"\n    echo \"    ${37}\"\n    echo \"    ${38}\"\n    echo \"    ${39}\"\n    echo \"    ${40}\"\n    echo \"    ${41}\"\n    echo \"    ${42}\"\n    echo \"    ${43}\"\n    echo \"    ${44}\"\n    echo \"    ${45}\"\n    echo \"    ${46}\"\n    echo \"    ${47}\"\n    echo \"    ${48}\"\n    echo \"    ${49}\"\n    echo \"    ${50}\"\n    echo \"    ${51}\"\n    echo \"    ${52}\"\n    echo \"    ${53}\"\n    echo \"    ${54}\"\n    echo \"    ${55}\"\n    echo \"    ${56}\"\n    echo \"    ${57}\"\n    echo \"    ${58}\"\n    echo \"    ${59}\"\n    echo \"    ${60}\"\n    echo \"    ${61}\"\n    echo \"    ${62}\"\n    echo \"    ${63",
    "  local -n _list=\"$1\"\n  local -n _tuple=\"$2\"\n  local -i _count=0\n  for _item in \"${_list[@]}\"; do\n    for _tuple_item in \"${_tuple[@]}\"; do\n      if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    python -c \"print(tuple($1).count($2))\"",
    "    python -c \"print(tuple(map(lambda x: $1.count(x), $2)))\"",
    "    python -c \"print(tuple(map(lambda x: $2.count(x), $1)))\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _element in \"${_list[@]}\"; do\n    for _tuple_element in \"${_tuple[@]}\"; do\n      if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    python -c \"print tuple($1).count($2)\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [ \"$_element\" == \"$_item\" ]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [ \"$_element\" == \"$_item\" ]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _element in \"${_list[@]}\"; do\n    for _item in \"${_tuple[@]}\"; do\n      if [[ \"$_element\" == \"$_item\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -a _result=()\n    local _count=0\n    for i in ${_list[@]}; do\n        for j in ${_tuple[@]}; do\n            if [ \"$i\" == \"$j\" ]; then\n                _count=$((_count+1))\n            fi\n        done\n        _result+=($_count)\n        _count=0\n    done\n    echo ${_result[@]}",
    "    local -n _list=$1\n    local -n _tuple=$2\n    for i in \"${_list[@]}\"; do\n        local count=0\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                ((count++))\n            fi\n        done\n        echo \"$i: $count\"\n    done",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print tuple([$1.count(i) for i in $2])\"",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: count_Occurrence <list> <tuple>\"\n        exit 1\n    fi\n    local list=\"$1\"\n    local tuple=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $tuple; do\n            if [ \"$i\" == \"$j\" ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo \"$count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    local _element\n    for _element in \"${_list[@]}\"; do\n        _count=$((_count + ${_tuple[@]/$_element/}))\n    done\n    echo $_count",
    "    echo \"count_Occurrence($1, $2)\"\n    echo \"Not yet implemented\"\n    exit 1",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [ \"$_element\" == \"$_tuple_element\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"${_element}\" == \"${_tuple_element}\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"${_count}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [[ $i == $j ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                (( _count++ ))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [ \"$_element\" == \"$_item\" ]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [ \"$_element\" == \"$_item\" ]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _element in \"${_list[@]}\"; do\n    for _tuple_element in \"${_tuple[@]}\"; do\n      if [[ \"${_element}\" == \"${_tuple_element}\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"${_count}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        for _element_tuple in ${_tuple[@]}; do\n            if [[ $_element == $_element_tuple ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    if [[ $# -ne 2 ]]; then\n        echo \"Usage: count_Occurrence <list> <tuple>\"\n        return 1\n    fi\n    local list=\"$1\"\n    local tuple=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $tuple; do\n            if [[ $i == $j ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(tuple(map(lambda x: $1.count(x), $2)))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python -c \"print($1.count($2))\"",
    "    # Write your code here\n    echo \"function count_Occurrence($1, $2)\"\n    echo \"    # Write your code here\"\n    echo \"    return $1\"\n    echo \"end\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    local _item\n    for _item in \"${_list[@]}\"; do\n        _count=$((_count + ${_tuple[@]/$_item/}))\n    done\n    echo $_count",
    "\tpython -c \"import sys; print(sys.argv[1].count(sys.argv[2]))\" \"$1\" \"$2\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_tuple_element\" == \"$_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _i in \"${_list[@]}\"; do\n        for _j in \"${_tuple[@]}\"; do\n            if [[ \"$_i\" == \"$_j\" ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print tuple(map(lambda x: $1.count(x), $2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [ \"$i\" == \"$j\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo $_count",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -A _dict\n  for _element in \"${_tuple[@]}\"; do\n    _dict[\"$_element\"]=$((_dict[\"$_element\"] + 1))\n  done\n  for _element in \"${_list[@]}\"; do\n    _dict[\"$_element\"]=$((_dict[\"$_element\"] + 1))\n  done\n  for _element in \"${_list[@]}\"; do\n    echo \"$_element: ${_dict[\"$_element\"]}\"\n  done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    local _element\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _item in \"${_list[@]}\"; do\n        for _tuple_item in \"${_tuple[@]}\"; do\n            if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _item in \"${_list[@]}\"; do\n        for _tuple_item in \"${_tuple[@]}\"; do\n            if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -A _occurrence\n    for _item in \"${_list[@]}\"; do\n        _occurrence[\"$_item\"]=0\n    done\n    for _item in \"${_tuple[@]}\"; do\n        _occurrence[\"$_item\"]=$((_occurrence[\"$_item\"]+1))\n    done\n    echo \"${_occurrence[@]}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n list=$1\n    local -n tuple=$2\n    local -A count\n    for i in \"${list[@]}\"; do\n        count[$i]=0\n    done\n    for i in \"${tuple[@]}\"; do\n        count[$i]=$((count[$i] + 1))\n    done\n    for i in \"${list[@]}\"; do\n        echo \"$i: ${count[$i]}\"\n    done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _element2 in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_element2\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _elem in \"${_list[@]}\"; do\n        for _tuple_elem in \"${_tuple[@]}\"; do\n            if [[ \"$_elem\" == \"$_tuple_elem\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _elem in \"${_list[@]}\"; do\n        for _tuple_elem in \"${_tuple[@]}\"; do\n            if [[ \"$_elem\" == \"$_tuple_elem\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in ${_list[@]}; do\n        _count=$(($_count + ${_tuple[@]/$_element/}))\n    done\n    echo $_count",
    "    echo \"count_Occurrence\"\n    echo \"    $1\"\n    echo \"    $2\"\n    echo \"    $3\"\n    echo \"    $4\"\n    echo \"    $5\"\n    echo \"    $6\"\n    echo \"    $7\"\n    echo \"    $8\"\n    echo \"    $9\"\n    echo \"    ${10}\"\n    echo \"    ${11}\"\n    echo \"    ${12}\"\n    echo \"    ${13}\"\n    echo \"    ${14}\"\n    echo \"    ${15}\"\n    echo \"    ${16}\"\n    echo \"    ${17}\"\n    echo \"    ${18}\"\n    echo \"    ${19}\"\n    echo \"    ${20}\"\n    echo \"    ${21}\"\n    echo \"    ${22}\"\n    echo \"    ${23}\"\n    echo \"    ${24}\"\n    echo \"    ${25}\"\n    echo \"    ${26}\"\n    echo \"    ${27}\"\n    echo \"    ${28}\"\n    echo \"    ${29}\"\n    echo \"    ${30}\"\n    echo \"    ${31}\"\n    echo \"    ${32}\"\n    echo \"    ${33}\"\n    echo \"    ${34}\"\n    echo \"    ${35}\"\n    echo \"    ${36}\"\n    echo \"    ${37}\"\n    echo \"    ${38}\"\n    echo \"    ${39}\"\n    echo \"    ${40}\"\n    echo \"    ${41}\"\n    echo \"    ${42}\"\n    echo \"    ${43}\"\n    echo \"    ${44}\"\n    echo \"    ${45}\"\n    echo \"    ${46}\"\n    echo \"    ${47}\"\n    echo \"    ${48}\"\n    echo \"    ${49}\"\n    echo \"    ${50}\"\n    echo \"    ${51}\"\n    echo \"    ${52}\"\n    echo \"    ${53}\"\n    echo \"    ${54}\"\n    echo \"    ${55}\"\n    echo \"    ${56}\"\n    echo \"    ${57}\"\n    echo \"    ${58}\"\n    echo \"    ${59}\"\n    echo \"    ${60}\"\n    echo \"    ${61}\"\n    echo \"    ${62}\"\n    echo \"    ${63",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _item in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local _count=0\n  for i in \"${_tuple[@]}\"; do\n    if [[ \"$i\" == \"${_list[0]}\" ]]; then\n      _count=$((_count + 1))\n    fi\n  done\n  echo \"$_count\"",
    "    # Write your code here\n    echo \"Not implemented\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    python3 -c \"print(tuple($1).count($2))\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [ \"$_element\" == \"$_tuple_element\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    echo \"function count_Occurrence($1, $2)\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -a _result=()\n    local _element\n    for _element in \"${_list[@]}\"; do\n        _result+=($(count_Occurrence_element \"$_element\" \"${_tuple[@]}\"))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -n _result=$3\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                _count=$((_count + 1))\n            fi\n        done\n        _result[\"$_element\"]=$_count\n        _count=0\n    done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _tuple_element in ${_tuple[@]}; do\n            if [ $_element = $_tuple_element ]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    echo \"count_Occurrence($1, $2)\"\n    python -c \"print tuple($1).count($2)\"",
    "    # Write your code here...\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #",
    "  local -n _list=$1\n  local -n _tuple=$2\n  local -i _count=0\n  for _item in \"${_list[@]}\"; do\n    for _tuple_item in \"${_tuple[@]}\"; do\n      if [[ \"$_item\" == \"$_tuple_item\" ]]; then\n        ((_count++))\n      fi\n    done\n  done\n  echo \"$_count\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for i in ${_list[@]}; do\n        for j in ${_tuple[@]}; do\n            if [[ $i == $j ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo $_count",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    echo \"count_Occurrence($1, $2)\"\n    python -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -n _result=$3\n    local _count=0\n    for i in \"${_list[@]}\"; do\n        for j in \"${_tuple[@]}\"; do\n            if [ \"$i\" == \"$j\" ]; then\n                _count=$((_count + 1))\n            fi\n        done\n        _result[$i]=$_count\n        _count=0\n    done",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                _count=$((_count+1))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    python3 -c \"print(tuple($1).count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in ${_list[@]}; do\n        for _item in ${_tuple[@]}; do\n            if [[ \"$_element\" == \"$_item\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    echo \"count_Occurrence($1, $2)\"\n    python -c \"print($1.count($2))\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    print \"Hello world!\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _element2 in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_element2\" ]]; then\n                ((_count++))\n            fi\n        done\n    done\n    echo $_count",
    "    # Write your code here\n    echo \"function count_Occurrence($1, $2)\"",
    "    local -n _list=$1\n    local -n _tuple=$2\n    local -i _count=0\n    for _element in \"${_list[@]}\"; do\n        for _tuple_element in \"${_tuple[@]}\"; do\n            if [[ \"$_element\" == \"$_tuple_element\" ]]; then\n                (( _count++ ))\n            fi\n        done\n    done\n    echo \"$_count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python3 -c \"print($1.count($2))\"",
    "    if [ $# -ne 2 ]; then\n        echo \"Usage: count_Occurrence <list> <tuple>\"\n        return 1\n    fi\n    local list=\"$1\"\n    local tuple=\"$2\"\n    echo \"from collections import Counter\"\n    echo \"print(Counter($list).most_common($tuple))\"",
    "    # Write your code here\n    python -c \"print tuple(map(lambda x: $1.count(x), $2))\""
  ]
}
{
  "name": "mbpp_632_move_zero",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to move all zeroes to the end of the given list.\n#\n# $1 is a space-separated list\nmove_zero() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    move_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 0 2 0 3 4\") = \"1 2 3 4 0 0\" ]]\n    [[ $(candidate \"2 3 2 0 0 4 0 5 0\") = \"2 3 2 4 5 0 0 0 0\" ]]\n    [[ $(candidate \"0 1 0 1 1\") = \"1 1 1 0 0\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local -a array\n    local -a new_array\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n\n    array=($list)\n    len=${#array[@]}\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -ne 0 ]]; then\n            new_array[j]=${array[i]}\n            j=$((j+1))\n        fi\n    done\n    for ((k=j; k<len; k++)); do\n        new_array[k]=0\n    done\n    echo ${new_array[@]}",
    "    echo \"$1\" | python -c 'import sys; print \" \".join(map(str, sorted(map(int, sys.stdin.read().split()), key=lambda x: x == 0)))'",
    "    local list=\"$1\"\n    local zero_count=0\n    local result=\"\"\n\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_count=$((zero_count + 1))\n        else\n            result=\"$result $i\"\n        fi\n    done\n\n    for i in $(seq 1 $zero_count); do\n        result=\"$result 0\"\n    done\n\n    echo \"$result\"",
    "    local list=\"$1\"\n    local new_list=\"\"\n    local zero_count=0\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_count=$((zero_count+1))\n        else\n            new_list=\"$new_list $i\"\n        fi\n    done\n    for i in $(seq 1 $zero_count); do\n        new_list=\"$new_list 0\"\n    done\n    echo $new_list",
    "    python -c \"print(' '.join(map(str, sorted([int(x) for x in '$1'.split(' ')], key=lambda x: x == 0))))\"",
    "    echo \"$1\" | python -c \"\nfrom sys import stdin\n\ndef move_zero(l):\n    return [x for x in l if x != 0] + [x for x in l if x == 0]\n\nprint(' '.join(map(str, move_zero(list(map(int, stdin.read().split()))))))\n\"",
    "    local list=$1\n    local zero_count=0\n    local new_list=\"\"\n\n    for i in ${list}; do\n        if [ ${i} -eq 0 ]; then\n            zero_count=$((zero_count + 1))\n        else\n            new_list=\"${new_list} ${i}\"\n        fi\n    done\n\n    for i in $(seq 1 ${zero_count}); do\n        new_list=\"${new_list} 0\"\n    done\n\n    echo ${new_list}",
    "    local list=$1\n    local new_list=()\n    local zero_count=0\n\n    for item in $list; do\n        if [ $item -eq 0 ]; then\n            zero_count=$((zero_count + 1))\n        else\n            new_list+=($item)\n        fi\n    done\n\n    for ((i=0; i<$zero_count; i++)); do\n        new_list+=(0)\n    done\n\n    echo ${new_list[@]}",
    "    local list=$1\n    local zero_list=\"\"\n    local non_zero_list=\"\"\n\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_list=\"$zero_list $i\"\n        else\n            non_zero_list=\"$non_zero_list $i\"\n        fi\n    done\n\n    echo \"$non_zero_list $zero_list\"",
    "    python -c \"print(' '.join([str(x) for x in sorted([int(x) for x in '$1'.split()], key=lambda x: x == 0)]))\"",
    "    local list=\"$1\"\n    local result=\"\"\n    local zero_count=0\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_count=$((zero_count+1))\n        else\n            result=\"$result $i\"\n        fi\n    done\n    for i in $(seq 1 $zero_count); do\n        result=\"$result 0\"\n    done\n    echo $result",
    "    python -c \"print(' '.join([str(x) for x in sorted([int(x) for x in '$1'.split()], key=lambda x: x == 0)]))\"",
    "    local list=\"$1\"\n    local result=\"\"\n    local zero_count=0\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_count=$((zero_count + 1))\n        else\n            result=\"$result $i\"\n        fi\n    done\n    for i in $(seq 1 $zero_count); do\n        result=\"$result 0\"\n    done\n    echo $result",
    "    local list=\"$1\"\n    local zero_list=\"\"\n    local non_zero_list=\"\"\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_list=\"$zero_list $i\"\n        else\n            non_zero_list=\"$non_zero_list $i\"\n        fi\n    done\n    echo \"$non_zero_list$zero_list\"",
    "    local list=$1\n    local new_list=\"\"\n    local zero_list=\"\"\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_list=\"$zero_list $i\"\n        else\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo \"$new_list $zero_list\"",
    "    local list=$1\n    local zero_list=\"\"\n    local non_zero_list=\"\"\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_list=\"$zero_list $i\"\n        else\n            non_zero_list=\"$non_zero_list $i\"\n        fi\n    done\n    echo \"$non_zero_list$zero_list\"",
    "    local list=$1\n    local zeroes=()\n    local non_zeroes=()\n    for i in $list; do\n        if [[ $i -eq 0 ]]; then\n            zeroes+=($i)\n        else\n            non_zeroes+=($i)\n        fi\n    done\n    echo \"${non_zeroes[@]} ${zeroes[@]}\"",
    "    local list=\"$1\"\n    local new_list=\"\"\n    local zero_count=0\n\n    for item in $list; do\n        if [ \"$item\" -eq 0 ]; then\n            ((zero_count++))\n        else\n            new_list=\"$new_list $item\"\n        fi\n    done\n\n    for ((i=0; i<zero_count; i++)); do\n        new_list=\"$new_list 0\"\n    done\n\n    echo \"$new_list\"",
    "    local list=$1\n    local new_list=\"\"\n    local zero_list=\"\"\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zero_list=\"$zero_list $i\"\n        else\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo \"$new_list $zero_list\"",
    "    local list=\"$1\"\n    local zeros=()\n    local non_zeros=()\n    for i in $list; do\n        if [ $i -eq 0 ]; then\n            zeros+=($i)\n        else\n            non_zeros+=($i)\n        fi\n    done\n    echo \"${non_zeros[@]} ${zeros[@]}\""
  ]
}
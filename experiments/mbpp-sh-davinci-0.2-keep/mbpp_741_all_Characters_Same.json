{
  "name": "mbpp_741_all_Characters_Same",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to check whether all the characters are same or not.\n#\n# $1 is a string\nall_Characters_Same() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    all_Characters_Same \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python\") = \"false\" ]]\n    [[ $(candidate \"aaa\") = \"true\" ]]\n    [[ $(candidate \"data\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"${1//[^$1]}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n\n    first_Char=${1:0:1}\n    rest_Of_String=${1:1}\n\n    for (( i=0; i<${#rest_Of_String}; i++ )); do\n        if [ \"${rest_Of_String:$i:1}\" != \"$first_Char\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return\n    fi\n    local string=$1\n    local first_char=${string:0:1}\n    for (( i=1; i<${#string}; i++ )); do\n        if [ \"${string:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    local str=\"$1\"\n    local first_char=${str:0:1}\n    local rest_of_string=${str:1}\n    if [[ $rest_of_string == *$first_char* ]]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    # If the string is of length 1, then all characters are same\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    # If the first character is not same as the last character, then all characters are not same\n    if [ \"${1:0:1}\" != \"${1: -1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    # If the first and last characters are same, then check for the remaining characters\n    all_Characters_Same \"${1:1:${#1}-2}\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Error: No string passed\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n        all_Characters_Same \"${1:1}\"\n    else\n        echo \"False\"\n        return 0\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"$1\" == \"${1:0:1}\" ]*; then\n        echo \"All characters are same\"\n    else\n        echo \"Not all characters are same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}-1; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:$((i+1)):1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [[ $1 =~ ^(.)\\1+$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string given\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}-1; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:i+1:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Empty string\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    local string=$1\n    local first_char=${string:0:1}\n    local rest_of_string=${string:1}\n\n    for (( i=0; i<${#rest_of_string}; i++ )); do\n        if [ \"${rest_of_string:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n\n    echo \"True\"",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n\n    if [ $# -gt 1 ]; then\n        echo \"Only one argument is allowed\"\n        exit 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n\n    if [ \"$1\" == \"${1:0:1}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n    else\n        for (( i=1; i<${#1}; i++ )); do\n            if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n                echo \"All characters are not same\"\n                return\n            fi\n        done\n        echo \"All characters are same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Error: No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        return 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"More than one argument passed\"\n        return 1\n    fi\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Argument passed is a number\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 0\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ $(echo -n $1 | wc -c) -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    if [ $(echo -n $1 | wc -c) -gt 1 ]; then\n        echo \"False\"\n        exit 0\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" == \"${1:0:1}\"* ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z $1 ]\n    then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"True\"\n        exit 0\n    fi\n    if [ ${1:0:1} = ${1:1:1} ]\n    then\n        all_Characters_Same ${1:1}\n    else\n        echo \"False\"\n        exit 0\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [[ $1 =~ ^(.)\\1+$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Please enter a string\"\n        return 1\n    fi\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=1; i<$(echo \"$1\" | wc -c); i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"All characters are not same\"\n            return 0\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    local str=$1\n    local len=${#str}\n    local i=0\n    local ch=${str:0:1}\n    while [ $i -lt $len ]; do\n        if [ \"$ch\" != \"${str:$i:1}\" ]; then\n            echo \"False\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z $1 ]\n    then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    if [ $(echo $1 | wc -c) -eq 2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n    else\n        for (( i=1; i<${#1}; i++ )); do\n            if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n                echo \"All characters are not same\"\n                exit 0\n            fi\n        done\n        echo \"All characters are same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n    else\n        if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n            all_Characters_Same \"${1:1}\"\n        else\n            echo \"False\"\n        fi\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"No string given\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [[ $1 =~ ^(.)\\1+$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    str=$1\n    if [[ $str =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z $1 ]; then\n        echo \"Please provide a string\"\n        return 1\n    fi\n    if [ $(echo $1 | wc -c) -eq 2 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ $(echo $1 | cut -c1) == $(echo $1 | cut -c2) ]; then\n        all_Characters_Same $(echo $1 | cut -c2-)\n    else\n        echo \"False\"\n        return 0\n    fi",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    local string=$1\n    local first_char=${string:0:1}\n    local rest_chars=${string:1}\n\n    for (( i=0; i<${#rest_chars}; i++ ))\n    do\n        if [ \"${rest_chars:$i:1}\" != \"$first_char\" ]\n        then\n            echo \"False\"\n            return 0\n        fi\n    done\n\n    echo \"True\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"Not all characters are same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"More than one argument passed\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Empty string passed\"\n        exit 1\n    fi\n    if [ -n \"$(echo $1 | sed 's/[^a-zA-Z]//g')\" ]; then\n        echo \"Only alphabets are allowed\"\n        exit 1\n    fi\n    if [ $(echo $1 | wc -c) -eq 2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All the characters are same.\"\n    else\n        echo \"All the characters are not same.\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == $(echo \"$1\" | sed 's/./&\\n/g' | sort | uniq -c | wc -l) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "  if [ \"$1\" == \"\" ]; then\n    echo \"Please provide a string\"\n    return 1\n  fi\n\n  if [ \"${#1}\" -eq 1 ]; then\n    echo \"All characters are same\"\n    return 0\n  fi\n\n  for (( i=1; i<${#1}; i++ )); do\n    if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n      echo \"All characters are not same\"\n      return 1\n    fi\n  done\n\n  echo \"All characters are same\"\n  return 0",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]\n    then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"True\"\n        return 0\n    fi\n    if [ ${#1} -gt 1 ]\n    then\n        if [ \"${1:0:1}\" == \"${1:1:1}\" ]\n        then\n            all_Characters_Same \"${1:1:${#1}}\"\n        else\n            echo \"False\"\n            return 0\n        fi\n    fi",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"More than one argument passed\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Empty string passed\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ ${1:$i:1} != ${1:0:1} ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    if [ -z \"$1\" ]\n    then\n        echo \"No string passed\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"All characters are same\"\n        return\n    fi\n    for (( i=1; i<${#1}; i++ ))\n    do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]\n        then\n            echo \"All characters are not same\"\n            return\n        fi\n    done\n    echo \"All characters are same\"",
    "\tif [ $# -ne 1 ]\n\tthen\n\t\techo \"Usage: $0 <string>\"\n\t\texit 1\n\tfi\n\tif [ -z $1 ]\n\tthen\n\t\techo \"Usage: $0 <string>\"\n\t\texit 1\n\tfi\n\tif [ $(echo $1 | wc -c) -eq 2 ]\n\tthen\n\t\techo \"True\"\n\t\texit 0\n\tfi\n\tfirst_Character=$(echo $1 | cut -c1)\n\tfor i in $(echo $1 | cut -c2-)\n\tdo\n\t\tif [ $i != $first_Character ]\n\t\tthen\n\t\t\techo \"False\"\n\t\t\texit 0\n\t\tfi\n\tdone\n\techo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string given\"\n        return\n    fi\n    if [[ \"$1\" =~ ^(.)\\1+$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    first_Character=\"${1:0:1}\"\n    remaining_Characters=\"${1:1}\"\n\n    if [ \"$first_Character\" != \"$remaining_Characters\" ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    all_Characters_Same \"$remaining_Characters\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"String has only one character\"\n        return 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"String has different characters\"\n            return 1\n        fi\n    done\n    echo \"String has all same characters\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    local str=$1\n    local len=${#str}\n    local i=0\n    local ch=${str:0:1}\n\n    while [ $i -lt $len ]; do\n        if [ \"$ch\" != \"${str:$i:1}\" ]; then\n            return 1\n        fi\n        i=$((i+1))\n    done\n    return 0",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No input string\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Please enter a string\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            return 1\n        fi\n    done\n    return 0",
    "    if [ $# -eq 0 ]\n    then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]\n    then\n        echo \"More than one argument passed\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]\n    then\n        echo \"No argument passed\"\n        exit 1\n    fi\n    if [ \"$1\" == \" \" ]\n    then\n        echo \"Space passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"  \" ]\n    then\n        echo \"Two spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"   \" ]\n    then\n        echo \"Three spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"    \" ]\n    then\n        echo \"Four spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"     \" ]\n    then\n        echo \"Five spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"      \" ]\n    then\n        echo \"Six spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"       \" ]\n    then\n        echo \"Seven spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"        \" ]\n    then\n        echo \"Eight spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"         \" ]\n    then\n        echo \"Nine spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"          \" ]\n    then\n        echo \"Ten spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"           \" ]\n    then\n        echo \"Eleven spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"            \" ]\n    then\n        echo \"Twelve spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"             \" ]\n    then\n        echo \"Thirteen spaces passed as argument\"\n        exit 1\n    fi\n    if [ \"$1\" == \"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z $1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    first_char=${1:0:1}\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string passed\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    if [ ${#1} -eq 0 ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    first_Character=${1:0:1}\n    remaining_Characters=${1:1}\n\n    if [ \"$first_Character\" != \"$remaining_Characters\" ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    all_Characters_Same \"$remaining_Characters\"",
    "    if [ -z \"$1\" ]\n    then\n        echo \"Error: No string provided\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ ))\n    do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]\n        then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "  if [ -z \"$1\" ]; then\n    echo \"No string given\"\n    return 1\n  fi\n  for (( i=1; i<${#1}; i++ )); do\n    if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n      echo \"False\"\n      return 0\n    fi\n  done\n  echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    first_Char=$(echo \"$1\" | cut -c1)\n    rest_Chars=$(echo \"$1\" | cut -c2-)\n\n    if [ \"$first_Char\" != \"$rest_Chars\" ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    all_Characters_Same \"$rest_Chars\"",
    "    if [ $# -eq 0 ]\n    then\n        echo \"No arguments passed\"\n        return\n    fi\n    if [ $# -gt 1 ]\n    then\n        echo \"Only one argument is allowed\"\n        return\n    fi\n    if [ -z \"$1\" ]\n    then\n        echo \"Empty string\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"All characters are same\"\n        return\n    fi\n    for (( i=1; i<${#1}; i++ ))\n    do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]\n        then\n            echo \"All characters are not same\"\n            return\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    first_Character=\"${1:0:1}\"\n    rest_Of_String=\"${1:1}\"\n\n    if [ \"$first_Character\" != \"$rest_Of_String\" ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    all_Characters_Same \"$rest_Of_String\"",
    "    if [ -z $1 ]; then\n        echo \"Please provide a string\"\n        return 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} != ${1:0:1} ]]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ ${1:i:1} != ${1:0:1} ]; then\n            return 1\n        fi\n    done\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"ERROR: No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"TRUE\"\n        return 0\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"FALSE\"\n            return 0\n        fi\n    done\n    echo \"TRUE\"\n    return 0",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"More than one argument passed\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Empty string passed\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ ${1:i:1} != ${1:0:1} ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"String is empty\"\n        exit 1\n    fi\n    if [ $(echo $1 | wc -c) -eq 2 ]; then\n        echo \"String has only one character\"\n        exit 1\n    fi\n    first_Char=$(echo $1 | cut -c1)\n    for (( i=2; i<=$(echo $1 | wc -c); i++ )); do\n        if [ $(echo $1 | cut -c$i) != $first_Char ]; then\n            echo \"All characters are not same\"\n            exit 1\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"${1:1}\" == \"${1:0:1}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [[ \"${1:0:1}\" != \"${1:$i:1}\" ]]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ -z $1 ]]; then\n        echo \"Please provide a string as an argument\"\n        exit 1\n    fi\n    if [[ ${#1} -eq 1 ]]; then\n        echo \"True\"\n    else\n        if [[ ${1:0:1} == ${1:1:1} ]]; then\n            all_Characters_Same ${1:1}\n        else\n            echo \"False\"\n        fi\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" == \"${1//[^$1]/}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    local str=\"$1\"\n    local first_char=\"${str:0:1}\"\n    local rest_of_str=\"${str:1}\"\n\n    for char in $rest_of_str; do\n        if [ \"$char\" != \"$first_char\" ]; then\n            return 1\n        fi\n    done\n\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    first_Character=${1:0:1}\n    rest_Characters=${1:1}\n    if [ \"$first_Character\" == \"$rest_Characters\" ]; then\n        echo \"True\"\n        return 0\n    fi\n    echo \"False\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    first_Char=\"${1:0:1}\"\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"$first_Char\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [[ \"$1\" =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    local string=\"$1\"\n    local first_char=\"${string:0:1}\"\n    local rest_of_string=\"${string:1}\"\n\n    for (( i=0; i<${#rest_of_string}; i++ )); do\n        if [ \"${rest_of_string:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n\n    echo \"True\"",
    "    if [ -z $1 ]; then\n        echo \"Error: No string provided\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    first_Character=${1:0:1}\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"$first_Character\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"No string passed\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"Only one character\"\n        return\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"Not all characters are same\"\n            return\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    local str=$1\n    local first_char=${str:0:1}\n    local rest_of_chars=${str:1}\n    if [[ -z $rest_of_chars ]]; then\n        echo \"True\"\n    elif [[ $first_char != $rest_of_chars ]]; then\n        echo \"False\"\n    else\n        all_Characters_Same $rest_of_chars\n    fi",
    "  if [[ $1 == \"\" ]]; then\n    return 0\n  fi\n  first_Character=${1:0:1}\n  for (( i=1; i<${#1}; i++ )); do\n    if [[ ${1:$i:1} != $first_Character ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    if [ -z $1 ]; then\n        echo \"No string passed\"\n        return 1\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"Not all characters are same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ ${#1} -eq 1 ]\n    then\n        echo \"True\"\n    else\n        first_Character=${1:0:1}\n        rest_Characters=${1:1}\n        if [ \"$first_Character\" == \"$rest_Characters\" ]\n        then\n            echo \"True\"\n        else\n            echo \"False\"\n        fi\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    local str=$1\n    local len=${#str}\n    local i=0\n    local first_char=${str:0:1}\n    for (( i=1; i<len; i++ )); do\n        if [ \"${str:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Empty string\"\n        exit 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n\n    for (( i=0; i<${#1}-1; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:$i+1:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n\n    echo \"All characters are same\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n\n    if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n        all_Characters_Same \"${1:1}\"\n    else\n        echo \"False\"\n        exit 0\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    if [ $(echo \"$1\" | wc -c) -gt 2 ]; then\n        if [ $(echo \"$1\" | cut -c1) = $(echo \"$1\" | cut -c2) ]; then\n            all_Characters_Same $(echo \"$1\" | cut -c2-)\n        else\n            echo \"False\"\n            return 0\n        fi\n    fi",
    "    if [ $# -eq 0 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ $# -gt 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ \"$1\" == \"${1%${1#?}}\" ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:i:1} != ${1:0:1} ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    local string=$1\n    local first_char=${string:0:1}\n    for ((i=1; i<${#string}; i++)); do\n        if [ \"${string:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same.\"\n    else\n        echo \"All characters are not same.\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string entered\"\n        return 1\n    fi\n    for ((i=1; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1+$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Please enter a string\"\n        return\n    fi\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"String has only one character\"\n        return\n    fi\n    if [ $(echo \"$1\" | wc -c) -gt 2 ]; then\n        if [ $(echo \"$1\" | wc -c) -eq $(echo \"$1\" | tr -d \"$1\" | wc -c) ]; then\n            echo \"All characters are same\"\n        else\n            echo \"All characters are not same\"\n        fi\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    string=$1\n    first_char=${string:0:1}\n    for ((i=1; i<${#string}; i++)); do\n        if [ \"${string:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string given\"\n        return\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"Not all characters are same\"\n            return\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    local string=$1\n    local first_char=${string:0:1}\n    for ((i=1; i<${#string}; i++)); do\n        if [ \"${string:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Please provide a string\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 0\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"Please provide a string\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"Only one argument is allowed\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Empty string passed\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    if [ \"${#1}\" -gt 1 ]; then\n        for (( i=1; i<${#1}; i++ )); do\n            if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n                return 1\n            fi\n        done\n    fi\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z $1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ $(echo $1 | wc -c) -eq 2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    local str=$1\n    local first_char=${str:0:1}\n    local rest_of_string=${str:1}\n    if [ -z \"$rest_of_string\" ]; then\n        return 0\n    fi\n    if [ \"$first_char\" != \"$rest_of_string\" ]; then\n        return 1\n    fi\n    all_Characters_Same \"$rest_of_string\"",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"No string provided\"\n        exit 1\n    fi\n    if [[ \"$1\" =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    local string=$1\n    local first_char=${string:0:1}\n    local rest_chars=${string:1}\n\n    for (( i=0; i<${#rest_chars}; i++ )); do\n        if [ \"${rest_chars:$i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ ${#1} -gt 1 ]; then\n        if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n            all_Characters_Same \"${1:1}\"\n        else\n            echo \"False\"\n            return 0\n        fi\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" != \"${1:1:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n    all_Characters_Same \"${1:1}\"",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Please enter a string\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        exit 0\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            exit 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z $1 ]\n    then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ `echo $1 | wc -c` -eq 2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"Only one argument is allowed\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Empty string is not allowed\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    # Check if all the characters are same\n    if [ $(echo $1 | wc -c) -eq $(echo $1 | tr -d $1 | wc -c) ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    local string=$1\n    local first_Character=${string:0:1}\n    local all_Same=1\n\n    for (( i=1; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} != $first_Character ]]; then\n            all_Same=0\n            break\n        fi\n    done\n\n    echo $all_Same",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    local string=\"$1\"\n    local first_char=${string:0:1}\n    local rest_of_string=${string:1}\n\n    if [ -z \"$rest_of_string\" ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    if [ \"$first_char\" != \"${rest_of_string:0:1}\" ]; then\n        echo \"False\"\n        return 0\n    fi\n\n    all_Characters_Same \"$rest_of_string\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string given\"\n        return 1\n    fi\n    for ((i=1; i<${#1}; i++)); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string given\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"String has only one character\"\n        return 1\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"String has different characters\"\n            return 1\n        fi\n    done\n    echo \"String has all same characters\"\n    return 0",
    "  if [ ${#1} -eq 0 ]; then\n    echo \"Empty string\"\n    return\n  fi\n  for (( i=1; i<${#1}; i++ )); do\n    if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n      echo \"Not all characters are same\"\n      return\n    fi\n  done\n  echo \"All characters are same\"",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        exit 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n\n    echo \"True\"",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"Only one argument is allowed\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"No argument passed\"\n        exit 1\n    fi\n    if [ -n \"$(echo \"$1\" | sed 's/[^[:alpha:]]//g')\" ]; then\n        echo \"Only alphabets are allowed\"\n        exit 1\n    fi\n    if [ -n \"$(echo \"$1\" | sed 's/[^[:upper:]]//g')\" ]; then\n        echo \"Only upper case alphabets are allowed\"\n        exit 1\n    fi\n    if [ \"$1\" == \"$(echo \"$1\" | sed 's/./&\\n/g' | sort | uniq | tr -d '\\n')\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -eq 0 ]; then\n        echo \"No arguments passed\"\n        exit 1\n    fi\n    if [ $# -gt 1 ]; then\n        echo \"More than one arguments passed\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Empty string passed\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n    else\n        for (( i=0; i<${#1}; i++ )); do\n            if [ ${1:i:1} != ${1:0:1} ]; then\n                echo \"False\"\n                exit 0\n            fi\n        done\n        echo \"True\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" == \"${1:0:1}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n        all_Characters_Same \"${1:1}\"\n    else\n        echo \"False\"\n        return 0\n    fi",
    "    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n    elif [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n        all_Characters_Same \"${1:1}\"\n    else\n        echo \"False\"\n    fi",
    "  if [ -z \"$1\" ]; then\n    echo \"No string provided\"\n    return 1\n  fi\n  if [ \"$(echo \"$1\" | wc -c)\" -eq 2 ]; then\n    echo \"String has only one character\"\n    return 1\n  fi\n  if [ \"$(echo \"$1\" | wc -c)\" -gt 2 ]; then\n    echo \"String has more than one character\"\n    return 0\n  fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        return 0\n    fi\n\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            return 1\n        fi\n    done\n\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n        all_Characters_Same \"${1:1}\"\n    else\n        echo \"False\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    local first_Char=\"${1:0:1}\"\n    for ((i=1; i<${#1}; i++)); do\n        if [ \"${1:$i:1}\" != \"$first_Char\" ]; then\n            echo \"All characters are not same\"\n            return 0\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \" \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"  \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"   \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"    \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"     \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"      \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"       \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"        \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"         \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"          \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"           \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"            \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"             \" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    local str=\"$1\"\n    local first_char=${str:0:1}\n    local rest_of_str=${str:1}\n    if [ -z \"$rest_of_str\" ]; then\n        echo \"Only one character in string\"\n        return 0\n    fi\n    for (( i=0; i<${#rest_of_str}; i++ )); do\n        if [ \"${rest_of_str:$i:1}\" != \"$first_char\" ]; then\n            echo \"Not all characters are same\"\n            return 0\n        fi\n    done\n    echo \"All characters are same\"",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"No string given\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for (( i = 0; i < ${#1}; i++ )); do\n        if [ \"${1:$i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ -z \"$1\" ]\n    then\n        echo \"Please provide a string\"\n        return 1\n    fi\n    if [ \"$(echo \"$1\" | wc -c)\" -eq \"2\" ]\n    then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for ((i=1; i<${#1}; i++))\n    do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]\n        then\n            echo \"All characters are not same\"\n            return 0\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -eq 1 ]; then\n        if [ $1 -eq $1 2>/dev/null ]; then\n            echo \"Please enter a string\"\n        else\n            if [ $(echo $1 | wc -c) -eq 2 ]; then\n                echo \"True\"\n            else\n                echo \"False\"\n            fi\n        fi\n    else\n        echo \"Please enter a string\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Error: No string passed\"\n        return 1\n    fi\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:0:1}\" != \"${1:$i:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Please enter a string\"\n        return 1\n    fi\n    first_char=${1:0:1}\n    for (( i=1; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"${1//[^$1]}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ $(echo $1 | wc -c) -eq 2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    local string=$1\n    local first_char=${string:0:1}\n    local len=${#string}\n    for (( i=1; i<len; i++ )); do\n        if [ \"${string:i:1}\" != \"$first_char\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    local str=\"$1\"\n    local first_char=${str:0:1}\n    local rest_str=${str:1}\n    if [ -z \"$rest_str\" ]; then\n        return 0\n    fi\n    if [ \"$first_char\" != \"$rest_str\" ]; then\n        return 1\n    fi\n    all_Characters_Same \"$rest_str\"",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided.\"\n        return 1\n    fi\n    local string=\"$1\"\n    local first_Char=\"${string:0:1}\"\n    local rest_Of_String=\"${string:1}\"\n    if [[ \"$rest_Of_String\" == *\"$first_Char\"* ]]; then\n        echo \"All characters are same.\"\n        return 0\n    else\n        echo \"All characters are not same.\"\n        return 1\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string provided\"\n        return 1\n    fi\n    if [ \"${#1}\" -eq 1 ]; then\n        echo \"All characters are same\"\n        return 0\n    fi\n    for ((i=0; i<${#1}; i++)); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"All characters are not same\"\n            return 1\n        fi\n    done\n    echo \"All characters are same\"\n    return 0",
    "    if [ $1 ]\n    then\n        if [ ${#1} -eq 1 ]\n        then\n            echo \"True\"\n        else\n            if [ ${1:0:1} == ${1:1:1} ]\n            then\n                all_Characters_Same ${1:1}\n            else\n                echo \"False\"\n            fi\n        fi\n    else\n        echo \"False\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    local str=$1\n    local first_char=${str:0:1}\n    local rest_of_str=${str:1}\n    if [ -z \"$rest_of_str\" ]; then\n        return 0\n    fi\n    if [ \"$first_char\" != \"$rest_of_str\" ]; then\n        return 1\n    fi\n    all_Characters_Same \"$rest_of_str\"",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n\n    # Check if all the characters are same\n    if [ $(echo \"$1\" | wc -c) -eq $(echo \"$1\" | uniq | wc -c) ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $# -eq 1 ]\n    then\n        if [ $1 -eq $1 2>/dev/null ]\n        then\n            echo \"Please enter a string\"\n        else\n            if [ $(echo $1 | wc -c) -eq 2 ]\n            then\n                echo \"True\"\n            else\n                echo \"False\"\n            fi\n        fi\n    else\n        echo \"Please enter only one argument\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"No string passed\"\n        exit 1\n    fi\n    if [ -n \"$(echo \"$1\" | sed 's/[^a-zA-Z0-9]//g')\" ]; then\n        echo \"Only alphanumeric characters allowed\"\n        exit 1\n    fi\n    if [ -z \"$(echo \"$1\" | sed 's/[a-zA-Z0-9]//g')\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ ${1:i:1} != ${1:0:1} ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    local str=$1\n    local first_char=${str:0:1}\n    local rest_of_str=${str:1}\n    if [[ -z $rest_of_str ]]; then\n        echo \"True\"\n    elif [[ $first_char != $rest_of_str ]]; then\n        echo \"False\"\n    else\n        all_Characters_Same $rest_of_str\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n\n    for (( i=0; i<${#1}; i++ )); do\n        if [ ${1:i:1} != ${1:0:1} ]; then\n            echo \"False\"\n            exit 0\n        fi\n    done\n\n    echo \"True\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"${1//[^$1]}\" ]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ -z $1 ]; then\n        echo \"Error: String is empty\"\n        exit 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        exit 0\n    fi\n    if [ ${#1} -gt 1 ]; then\n        if [ ${1:0:1} == ${1:1:1} ]; then\n            all_Characters_Same ${1:1}\n        else\n            echo \"False\"\n            exit 0\n        fi\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ ${#1} -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n    first_Char=\"${1:0:1}\"\n    rest_Of_String=\"${1:1}\"\n    if [ \"$first_Char\" == \"$rest_Of_String\" ]; then\n        echo \"True\"\n        return 0\n    else\n        echo \"False\"\n        return 1\n    fi",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: all_Characters_Same <string>\"\n        return 1\n    fi\n    local string=$1\n    local first_char=${string:0:1}\n    for ((i=1; i<${#string}; i++))\n    do\n        if [ \"${string:$i:1}\" != \"$first_char\" ]\n        then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"Please provide a string\"\n        return 1\n    fi\n    for (( i=0; i<${#1}; i++ )); do\n        if [ \"${1:i:1}\" != \"${1:0:1}\" ]; then\n            echo \"False\"\n            return 0\n        fi\n    done\n    echo \"True\"",
    "    if [[ $1 =~ ^(.)\\1+$ ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"All characters are same\"\n    else\n        echo \"All characters are not same\"\n    fi",
    "    if [[ $1 =~ ^(.)\\1*$ ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $# -eq 0 ]\n    then\n        echo \"No arguments passed\"\n        return 1\n    fi\n\n    if [ $# -gt 1 ]\n    then\n        echo \"More than one argument passed\"\n        return 1\n    fi\n\n    if [ -z \"$1\" ]\n    then\n        echo \"Empty string passed\"\n        return 1\n    fi\n\n    if [ ${#1} -eq 1 ]\n    then\n        echo \"All characters are same\"\n        return 0\n    fi\n\n    for (( i=0; i<${#1}; i++ ))\n    do\n        if [ ${1:$i:1} != ${1:0:1} ]\n        then\n            echo \"All characters are not same\"\n            return 0\n        fi\n    done\n\n    echo \"All characters are same\"\n    return 0",
    "    if [ -z \"$1\" ]; then\n        echo \"Error: No string provided\"\n        return 1\n    fi\n    if [ $(echo \"$1\" | wc -c) -eq 2 ]; then\n        echo \"True\"\n        return 0\n    fi\n    if [ \"${1:0:1}\" == \"${1:1:1}\" ]; then\n        all_Characters_Same \"${1:1}\"\n    else\n        echo \"False\"\n        return 0\n    fi"
  ]
}
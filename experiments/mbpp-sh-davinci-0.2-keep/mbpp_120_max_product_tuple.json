{
  "name": "mbpp_120_max_product_tuple",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n#\n# $1 is a newline-separated, space-separated list\nmax_product_tuple() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_product_tuple \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 7\\n2 6\\n1 8\\n4 9\") = \"36\" ]]\n    [[ $(candidate \"10 20\\n15 2\\n5 10\") = \"200\" ]]\n    [[ $(candidate \"11 44\\n10 15\\n20 5\\n12 9\") = \"484\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local max=0\n  local product=0\n  local -a tuple\n  local -a list\n  local -a tuple_list\n  local -a tuple_list_product\n  local -a tuple_list_product_abs\n  local -a tuple_list_product_abs_sorted\n  local -a tuple_list_product_abs_sorted_max\n\n  # Split the list into an array\n  IFS=$'\\n' read -d '' -r -a list < <(printf '%s\\n' \"$1\")\n\n  # Split each element of the list into an array\n  for i in \"${!list[@]}\"; do\n    IFS=' ' read -r -a tuple <<< \"${list[$i]}\"\n    tuple_list+=(\"${tuple[@]}\")\n  done\n\n  # Calculate the product of each tuple\n  for i in \"${!tuple_list[@]}\"; do\n    if (( i % 2 == 0 )); then\n      product=$(( tuple_list[i] * tuple_list[i+1] ))\n      tuple_list_product+=(\"$product\")\n    fi\n  done\n\n  # Calculate the absolute value of each product\n  for i in \"${!tuple_list_product[@]}\"; do\n    tuple_list_product_abs+=(\"${tuple_list_product[$i]#-}\")\n  done\n\n  # Sort the absolute values\n  tuple_list_product_abs_sorted=($(printf '%s\\n' \"${tuple_list_product_abs[@]}\" | sort -nr))\n\n  # Get the first element of the sorted array\n  tuple_list_product_abs_sorted_max=(${tuple_list_product_abs_sorted[0]})\n\n  # Print the first element of the sorted array\n  printf '%s\\n' \"${tuple_list_product_abs_sorted_max[0]}\"",
    "  local max=0\n  local product=0\n  local IFS=$'\\n'\n  for tuple in $1; do\n    IFS=$' '\n    set -- $tuple\n    product=$(( $1 * $2 ))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done\n  echo $max",
    "  local max=0\n  local product=0\n  local line\n  local -a tuple\n  while read line; do\n    tuple=( $line )\n    product=$(( ${tuple[0]} * ${tuple[1]} ))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done\n  echo $max",
    "  local max=0\n  local product=0\n  local -a nums\n  local -a tuple\n  local -a tuples\n  local -a tuple_products\n  local -a tuple_products_sorted\n  local -a tuple_products_sorted_desc\n  local -a tuple_products_sorted_desc_max\n  local -a tuple_products_sorted_desc_max_tuple\n  local -a tuple_products_sorted_desc_max_tuple_nums\n\n  # Split the list into tuples\n  IFS=$'\\n' read -d '' -r -a tuples <<< \"$1\"\n\n  # Split each tuple into numbers\n  for tuple in \"${tuples[@]}\"; do\n    IFS=' ' read -r -a nums <<< \"$tuple\"\n    tuple_products+=(\"$((${nums[0]} * ${nums[1]}))\")\n  done\n\n  # Sort the tuple products in ascending order\n  tuple_products_sorted=($(printf '%s\\n' \"${tuple_products[@]}\" | sort -n))\n\n  # Reverse the sorted tuple products to get descending order\n  for product in \"${tuple_products_sorted[@]}\"; do\n    tuple_products_sorted_desc+=($product)\n  done\n\n  # Get the maximum tuple product\n  tuple_products_sorted_desc_max=${tuple_products_sorted_desc[0]}\n\n  # Get the tuple with the maximum product\n  for tuple in \"${tuples[@]}\"; do\n    IFS=' ' read -r -a nums <<< \"$tuple\"\n    if [ \"$((${nums[0]} * ${nums[1]}))\" -eq \"$tuple_products_sorted_desc_max\" ]; then\n      tuple_products_sorted_desc_max_tuple=($tuple)\n    fi\n  done\n\n  # Split the tuple with the maximum product into numbers\n  IFS=' ' read -r -a tuple_products_sorted_desc_max_tuple_nums <<< \"${tuple_products_sorted_desc_max_tuple[",
    "    local max=0\n    while read -r line; do\n        local -a tuple=($line)\n        local product=$((tuple[0] * tuple[1]))\n        if (( product > max )); then\n            max=$product\n        fi\n    done <<< \"$1\"\n    echo $max",
    "    local max_product=0\n    local product=0\n    local tuple=()\n    local tuple_max=()\n    local tuple_min=()\n    local tuple_max_product=0\n    local tuple_min_product=0\n    local tuple_max_product_index=0\n    local tuple_min_product_index=0\n    local tuple_max_product_index_max=0\n    local tuple_min_product_index_max=0\n    local tuple_max_product_index_min=0\n    local tuple_min_product_index_min=0\n    local tuple_max_product_max=0\n    local tuple_min_product_max=0\n    local tuple_max_product_min=0\n    local tuple_min_product_min=0\n    local tuple_max_product_max_index=0\n    local tuple_min_product_max_index=0\n    local tuple_max_product_min_index=0\n    local tuple_min_product_min_index=0\n    local tuple_max_product_min_index_max=0\n    local tuple_min_product_min_index_max=0\n    local tuple_max_product_min_index_min=0\n    local tuple_min_product_min_index_min=0\n    local tuple_max_product_max_index_max=0\n    local tuple_min_product_max_index_max=0\n    local tuple_max_product_max_index_min=0\n    local tuple_min_product_max_index_min=0\n    local tuple_max_product_max_index_min_index=0\n    local tuple_min_product_max_index_min_index=0\n    local tuple_max_product_max_index_max_index=0\n    local tuple_min_product_max_index_max_index=0\n    local tuple_max_product_max_index_min_index_max=0\n    local tuple_min_product_max_index_min_index_max=0\n    local tuple_max_product_max_index_min_index_min=0\n    local tuple_min_product_max_index",
    "  local max=0\n  local product=0\n  local -a tuple\n  local -a list=($(echo \"$1\" | tr ' ' '\\n'))\n  for ((i=0; i<${#list[@]}; i+=2)); do\n    tuple=(${list[i]} ${list[i+1]})\n    product=$((${tuple[0]} * ${tuple[1]}))\n    if ((product > max)); then\n      max=$product\n    fi\n  done\n  echo $max",
    "  local max=0\n  local product=0\n  local -a tuple\n  local -a list\n  IFS=$'\\n' read -d '' -r -a list < <(echo \"$1\")\n  for ((i=0; i<${#list[@]}; i++)); do\n    IFS=' ' read -r -a tuple <<< \"${list[i]}\"\n    product=$((tuple[0] * tuple[1]))\n    if ((product > max)); then\n      max=$product\n    fi\n  done\n  echo \"$max\"",
    "  local max_product=0\n  local product=0\n  local tuple_a\n  local tuple_b\n  local tuple_a_max\n  local tuple_b_max\n  local tuple_a_min\n  local tuple_b_min\n  local tuple_a_abs\n  local tuple_b_abs\n  local tuple_a_abs_max\n  local tuple_b_abs_max\n  local tuple_a_abs_min\n  local tuple_b_abs_min\n\n  while read tuple_a; do\n    tuple_a_max=$(echo \"$tuple_a\" | awk '{print $1}')\n    tuple_a_min=$(echo \"$tuple_a\" | awk '{print $2}')\n    tuple_a_abs_max=$(echo \"$tuple_a_max\" | awk '{print (0 > $1) ? -$1 : $1}')\n    tuple_a_abs_min=$(echo \"$tuple_a_min\" | awk '{print (0 > $1) ? -$1 : $1}')\n\n    while read tuple_b; do\n      tuple_b_max=$(echo \"$tuple_b\" | awk '{print $1}')\n      tuple_b_min=$(echo \"$tuple_b\" | awk '{print $2}')\n      tuple_b_abs_max=$(echo \"$tuple_b_max\" | awk '{print (0 > $1) ? -$1 : $1}')\n      tuple_b_abs_min=$(echo \"$tuple_b_min\" | awk '{print (0 > $1) ? -$1 : $1}')\n\n      product=$(echo \"$tuple_a_abs_max * $tuple_b_abs_max\" | bc)\n      if [[ $product -gt $max_product ]]; then\n        max_product=$product\n      fi\n\n      product=$(echo \"$tuple_a_abs_max * $tuple_b_abs_min\" | bc)\n      if [[ $product -gt $max_product ]]; then\n        max_product=$product\n      fi\n\n      product=$",
    "    local max_product=0\n    local product=0\n    local tuple1=()\n    local tuple2=()\n    local tuple1_str=\"\"\n    local tuple2_str=\"\"\n    local tuple_str=\"\"\n    local tuple_list=($1)\n    local tuple_list_len=${#tuple_list[@]}\n    local tuple_len=0\n    local tuple_index=0\n    local tuple_index2=0\n    local tuple_index3=0\n    local tuple_index4=0\n    local tuple_index5=0\n    local tuple_index6=0\n    local tuple_index7=0\n    local tuple_index8=0\n    local tuple_index9=0\n    local tuple_index10=0\n    local tuple_index11=0\n    local tuple_index12=0\n    local tuple_index13=0\n    local tuple_index14=0\n    local tuple_index15=0\n    local tuple_index16=0\n    local tuple_index17=0\n    local tuple_index18=0\n    local tuple_index19=0\n    local tuple_index20=0\n    local tuple_index21=0\n    local tuple_index22=0\n    local tuple_index23=0\n    local tuple_index24=0\n    local tuple_index25=0\n    local tuple_index26=0\n    local tuple_index27=0\n    local tuple_index28=0\n    local tuple_index29=0\n    local tuple_index30=0\n    local tuple_index31=0\n    local tuple_index32=0\n    local tuple_index33=0\n    local tuple_index34=0\n    local tuple_index35=0\n    local tuple_index36=0\n    local tuple_index37=0\n    local tuple_index38=0\n    local tuple_index39=0\n    local tuple_index40=0\n    local tuple_index41=0\n    local tuple_index42=0\n    local tuple_index43=0\n    local tuple_index44=0\n    local tuple_index45=0\n    local tuple_index46=0\n    local tuple_index47=0\n    local",
    "  local max=0\n  while read -r line; do\n    local -a tuple=($line)\n    local product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done <<< \"$1\"\n  echo $max",
    "  local max_product=0\n  local product\n  while read -r line; do\n    local -a tuple=($line)\n    product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max_product ]]; then\n      max_product=$product\n    fi\n  done <<< \"$1\"\n  echo \"$max_product\"",
    "    local -a list\n    local -a tuple\n    local -a tuple_product\n    local -i i\n    local -i j\n    local -i max_product\n    local -i product\n    local -i tuple_count\n    local -i tuple_length\n    local -i tuple_size\n    local -i tuple_size_max\n    local -i tuple_size_min\n    local -i tuple_size_min_max\n    local -i tuple_size_min_max_product\n    local -i tuple_size_min_product\n    local -i tuple_size_product\n    local -i tuple_size_product_max\n    local -i tuple_size_product_min\n    local -i tuple_size_product_min_max\n    local -i tuple_size_product_min_max_product\n    local -i tuple_size_product_min_product\n    local -i tuple_size_product_product\n    local -i tuple_size_product_product_max\n    local -i tuple_size_product_product_min\n    local -i tuple_size_product_product_min_max\n    local -i tuple_size_product_product_min_max_product\n    local -i tuple_size_product_product_min_product\n    local -i tuple_size_product_product_product\n    local -i tuple_size_product_product_product_max\n    local -i tuple_size_product_product_product_min\n    local -i tuple_size_product_product_product_min_max\n    local -i tuple_size_product_product_product_min_max_product\n    local -i tuple_size_product_product_product_min_product\n    local -i tuple_size_product_product_product_product\n    local -i tuple_size_product_product_product_product_max\n    local -i tuple_size_product_product_product_product_min\n    local -i tuple_size_product_product_product_product_min_max\n    local -i tuple_size_product_product_product_product_min_max_product\n    local -i tuple_size_product_product_product_product_min_product",
    "  local max=0\n  local product\n  local -a tuple\n  local -a tuple_max\n  while read -r line; do\n    tuple=($line)\n    product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max ]]; then\n      max=$product\n      tuple_max=(${tuple[@]})\n    fi\n  done <<< \"$1\"\n  echo \"${tuple_max[@]}\"",
    "    local max_product=0\n    local product=0\n    local -a tuple\n    local -a tuple_list\n    local -a tuple_list_1\n    local -a tuple_list_2\n    local -a tuple_list_3\n    local -a tuple_list_4\n    local -a tuple_list_5\n    local -a tuple_list_6\n    local -a tuple_list_7\n    local -a tuple_list_8\n    local -a tuple_list_9\n    local -a tuple_list_10\n    local -a tuple_list_11\n    local -a tuple_list_12\n    local -a tuple_list_13\n    local -a tuple_list_14\n    local -a tuple_list_15\n    local -a tuple_list_16\n    local -a tuple_list_17\n    local -a tuple_list_18\n    local -a tuple_list_19\n    local -a tuple_list_20\n    local -a tuple_list_21\n    local -a tuple_list_22\n    local -a tuple_list_23\n    local -a tuple_list_24\n    local -a tuple_list_25\n    local -a tuple_list_26\n    local -a tuple_list_27\n    local -a tuple_list_28\n    local -a tuple_list_29\n    local -a tuple_list_30\n    local -a tuple_list_31\n    local -a tuple_list_32\n    local -a tuple_list_33\n    local -a tuple_list_34\n    local -a tuple_list_35\n    local -a tuple_list_36\n    local -a tuple_list_37\n    local -a tuple_list_38\n    local -a tuple_list_39\n    local -a tuple_list_40\n    local -a tuple_list_41\n    local -a tuple_list_42\n    local -a tuple_list_43\n    local -a tuple_list_44\n    local -a tuple_list_45\n    local -a tuple_list_46\n    local -a tuple_list_47\n    local -a tuple_list_48\n    local -",
    "    local max=0\n    while read -r line; do\n        local -a tuple=($line)\n        local product=$(( tuple[0] * tuple[1] ))\n        if (( product > max )); then\n            max=$product\n        fi\n    done <<< \"$1\"\n    echo $max",
    "  local max=0\n  local product=0\n  local -a tuple\n  while read -r line; do\n    tuple=($line)\n    product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done <<< \"$1\"\n  echo $max",
    "    local max=0\n    local product=0\n    local -a tuple\n    local -a tuple_list\n    local -a tuple_list_1\n    local -a tuple_list_2\n    local -a tuple_list_3\n    local -a tuple_list_4\n    local -a tuple_list_5\n    local -a tuple_list_6\n    local -a tuple_list_7\n    local -a tuple_list_8\n    local -a tuple_list_9\n    local -a tuple_list_10\n    local -a tuple_list_11\n    local -a tuple_list_12\n    local -a tuple_list_13\n    local -a tuple_list_14\n    local -a tuple_list_15\n    local -a tuple_list_16\n    local -a tuple_list_17\n    local -a tuple_list_18\n    local -a tuple_list_19\n    local -a tuple_list_20\n    local -a tuple_list_21\n    local -a tuple_list_22\n    local -a tuple_list_23\n    local -a tuple_list_24\n    local -a tuple_list_25\n    local -a tuple_list_26\n    local -a tuple_list_27\n    local -a tuple_list_28\n    local -a tuple_list_29\n    local -a tuple_list_30\n    local -a tuple_list_31\n    local -a tuple_list_32\n    local -a tuple_list_33\n    local -a tuple_list_34\n    local -a tuple_list_35\n    local -a tuple_list_36\n    local -a tuple_list_37\n    local -a tuple_list_38\n    local -a tuple_list_39\n    local -a tuple_list_40\n    local -a tuple_list_41\n    local -a tuple_list_42\n    local -a tuple_list_43\n    local -a tuple_list_44\n    local -a tuple_list_45\n    local -a tuple_list_46\n    local -a tuple_list_47\n    local -a tuple_list_48\n    local -a tuple",
    "  local max_product=0\n  local product=0\n  local tuple_1=()\n  local tuple_2=()\n  local tuple_1_str=''\n  local tuple_2_str=''\n  local tuple_1_str_len=0\n  local tuple_2_str_len=0\n  local tuple_1_str_max_len=0\n  local tuple_2_str_max_len=0\n  local tuple_1_str_max=''\n  local tuple_2_str_max=''\n  local tuple_1_str_max_len=0\n  local tuple_2_str_max_len=0\n  local tuple_1_str_max_len_max=0\n  local tuple_2_str_max_len_max=0\n  local tuple_1_str_max_max=''\n  local tuple_2_str_max_max=''\n  local tuple_1_str_max_len_max=0\n  local tuple_2_str_max_len_max=0\n  local tuple_1_str_max_len_max_max=0\n  local tuple_2_str_max_len_max_max=0\n  local tuple_1_str_max_max_max=''\n  local tuple_2_str_max_max_max=''\n  local tuple_1_str_max_len_max_max=0\n  local tuple_2_str_max_len_max_max=0\n  local tuple_1_str_max_len_max_max_max=0\n  local tuple_2_str_max_len_max_max_max=0\n  local tuple_1_str_max_max_max_max=''\n  local tuple_2_str_max_max_max_max=''\n  local tuple_1_str_max_len_max_max_max=0\n  local tuple_2_str_max_len_max_max_max=0\n  local tuple_1_str_max_len_max_max_max_max=0\n  local tuple_2_str_max_len_max_max_max_max=0\n ",
    "  local max=0\n  local product=0\n  local -a tuple\n  local -a tuples\n  local -a numbers\n  local -a number_pairs\n  local -a number_pair\n  local -a number_pair_products\n  local -a number_pair_products_abs\n  local -a number_pair_products_abs_sorted\n  local -a number_pair_products_abs_sorted_desc\n  local -a number_pair_products_abs_sorted_desc_first\n  local -a number_pair_products_abs_sorted_desc_first_product\n  local -a number_pair_products_abs_sorted_desc_first_product_abs\n\n  # Split the list into tuples\n  IFS=$'\\n' read -r -a tuples <<< \"$1\"\n\n  # Iterate over the tuples\n  for tuple in \"${tuples[@]}\"; do\n    # Split the tuple into numbers\n    IFS=' ' read -r -a numbers <<< \"$tuple\"\n\n    # Iterate over the numbers\n    for (( i=0; i<${#numbers[@]}; i++ )); do\n      # Iterate over the numbers\n      for (( j=0; j<${#numbers[@]}; j++ )); do\n        # Skip if the numbers are the same\n        if (( i == j )); then\n          continue\n        fi\n\n        # Create a pair of numbers\n        number_pair=( \"${numbers[$i]}\" \"${numbers[$j]}\" )\n\n        # Add the pair to the list of pairs\n        number_pairs+=(\"${number_pair[@]}\")\n      done\n    done\n  done\n\n  # Iterate over the pairs\n  for number_pair in \"${number_pairs[@]}\"; do\n    # Split the pair into numbers\n    IFS=' ' read -r -a numbers <<< \"$number_pair\"\n\n    # Multiply the numbers\n    product=$(( ${numbers[0]} * ${numbers[1]} ))\n\n    # Add the product to the list of products\n    number_pair_products+=(\"$product\")\n  done\n\n  # Iterate over the products"
  ]
}
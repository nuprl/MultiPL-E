{
  "name": "mbpp_405_check_tuplex",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether an element exists within a tuple.\n#\n# $1 is a space-separated list\n# $2 is a $Any\ncheck_tuplex() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    check_tuplex \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"w 3 r e s o u r c e\" \"r\") = \"true\" ]]\n    [[ $(candidate \"w 3 r e s o u r c e\" \"5\") = \"false\" ]]\n    [[ $(candidate \"w 3 r e s o u r c e\" \"3\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local tuplex=\"$1\"\n  local needle=\"$2\"\n  for element in $tuplex; do\n    if [[ \"$element\" == \"$needle\" ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local found=0\n    for item in $tuplex; do\n        if [ \"$item\" == \"$element\" ]; then\n            found=1\n            break\n        fi\n    done\n    return $found",
    "    local tuplex=\"$1\"\n    local any=\"$2\"\n\n    for element in $tuplex; do\n        if [[ \"$element\" == \"$any\" ]]; then\n            return 0\n        fi\n    done\n\n    return 1",
    "  local tuplex=\"$1\"\n  local item=\"$2\"\n  local found=0\n  for i in $tuplex; do\n    if [ \"$i\" = \"$item\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local found=0\n    for i in $tuplex; do\n        if [[ \"$i\" == \"$element\" ]]; then\n            found=1\n            break\n        fi\n    done\n    return $found",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local tuplex_array=()\n  local i=0\n  for tuplex_element in $tuplex; do\n    tuplex_array[$i]=\"$tuplex_element\"\n    ((i++))\n  done\n  for tuplex_element in ${tuplex_array[@]}; do\n    if [ \"$tuplex_element\" == \"$element\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local tuplex_array=($tuplex)\n  local i\n  for i in \"${tuplex_array[@]}\"; do\n    if [[ \"$i\" == \"$element\" ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local tuplex_array=($tuplex)\n    for i in \"${tuplex_array[@]}\"; do\n        if [ \"$i\" == \"$element\" ]; then\n            return 0\n        fi\n    done\n    return 1",
    "    local tuplex=\"$1\"\n    local elem=\"$2\"\n    local found=0\n    for i in $tuplex; do\n        if [ \"$i\" = \"$elem\" ]; then\n            found=1\n            break\n        fi\n    done\n    return $found",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local tuplex_array=($tuplex)\n  for i in \"${tuplex_array[@]}\"; do\n    if [[ \"$i\" == \"$element\" ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local found=0\n  for i in $tuplex; do\n    if [ \"$i\" == \"$element\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local found=0\n  for i in $tuplex; do\n    if [ \"$i\" == \"$element\" ]; then\n      found=1\n      break\n    fi\n  done\n  return $found",
    "    local -a tuplex=($1)\n    local -i i=0\n    local -i len=${#tuplex[@]}\n    local -i found=0\n    while [ $i -lt $len ]; do\n        if [ \"${tuplex[$i]}\" == \"$2\" ]; then\n            found=1\n            break\n        fi\n        ((i++))\n    done\n    return $found",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  local tuplex_array=($tuplex)\n  for i in \"${tuplex_array[@]}\"; do\n    if [[ \"$i\" == \"$element\" ]]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local tuplex=\"$1\"\n    local item=\"$2\"\n    for i in $tuplex; do\n        if [ \"$i\" = \"$item\" ]; then\n            return 0\n        fi\n    done\n    return 1",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local tuplex_array=($tuplex)\n    for t in \"${tuplex_array[@]}\"; do\n        if [[ \"$t\" == \"$element\" ]]; then\n            return 0\n        fi\n    done\n    return 1",
    "  local tuplex=\"$1\"\n  local element=\"$2\"\n  for e in $tuplex; do\n    if [ \"$e\" = \"$element\" ]; then\n      return 0\n    fi\n  done\n  return 1",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    local tuplex_len=\"$(echo \"$tuplex\" | wc -w)\"\n    local i=1\n    while [ $i -le $tuplex_len ]; do\n        local tuplex_element=\"$(echo \"$tuplex\" | cut -d ' ' -f $i)\"\n        if [ \"$tuplex_element\" = \"$element\" ]; then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1",
    "    local tuplex=\"$1\"\n    local element=\"$2\"\n    for i in $tuplex; do\n        if [ \"$i\" = \"$element\" ]; then\n            return 0\n        fi\n    done\n    return 1",
    "  local -a tuplex=($1)\n  local -i i=0\n  local -i len=${#tuplex[@]}\n  while (( i < len )); do\n    if [[ ${tuplex[$i]} == $2 ]]; then\n      return 0\n    fi\n    (( i++ ))\n  done\n  return 1"
  ]
}
{
  "name": "mbpp_438_count_bidirectional",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to count bidirectional tuple pairs.\n#\n# $1 is a newline-separated, space-separated list\ncount_bidirectional() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    count_bidirectional \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 6\\n1 2\\n6 5\\n9 1\\n6 5\\n2 1\") = \"3\" ]]\n    [[ $(candidate \"5 6\\n1 3\\n6 5\\n9 1\\n6 5\\n2 1\") = \"2\" ]]\n    [[ $(candidate \"5 6\\n1 2\\n6 5\\n9 2\\n6 5\\n2 1\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -A seen\n  local -i count=0\n  while read -r a b; do\n    if [[ ${seen[$a,$b]} ]]; then\n      (( count++ ))\n    else\n      seen[$a,$b]=1\n    fi\n  done\n  echo \"$count\"",
    "    local -A pairs\n    local -i count=0\n    while read -r line; do\n        local -a tuple=($line)\n        local -i i=0\n        local -i j=1\n        local -i n=${#tuple[@]}\n        while ((i < n)); do\n            while ((j < n)); do\n                local pair=\"${tuple[i]} ${tuple[j]}\"\n                local reverse=\"${tuple[j]} ${tuple[i]}\"\n                if [[ -z \"${pairs[$pair]}\" ]]; then\n                    pairs[$pair]=1\n                    ((count++))\n                elif [[ -z \"${pairs[$reverse]}\" ]]; then\n                    pairs[$reverse]=1\n                    ((count++))\n                fi\n                ((j++))\n            done\n            ((i++))\n            j=$((i + 1))\n        done\n    done\n    echo $count",
    "    local -i count=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0",
    "    local -A map\n    local -a list\n    local i\n    local j\n    local count\n    local line\n    local -i total\n    total=0\n    while read line; do\n        list=($line)\n        for ((i=0; i<${#list[@]}; i++)); do\n            for ((j=0; j<${#list[@]}; j++)); do\n                if ((i != j)); then\n                    count=${map[${list[$i]},${list[$j]}]}\n                    if [[ -z $count ]]; then\n                        count=0\n                    fi\n                    map[${list[$i]},${list[$j]}]=$((count + 1))\n                fi\n            done\n        done\n    done\n    for key in \"${!map[@]}\"; do\n        count=${map[$key]}\n        if ((count > 1)); then\n            total=$((total + count))\n        fi\n    done\n    echo $total",
    "  local -A seen\n  local -i count=0\n  while IFS=' ' read -r a b; do\n    if [[ ${seen[$a,$b]} ]]; then\n      (( count++ ))\n    else\n      seen[$a,$b]=1\n    fi\n  done\n  echo $count",
    "    local -r input=\"$1\"\n    local -r output=\"$(mktemp)\"\n    local -r tmp=\"$(mktemp)\"\n    local -r tmp2=\"$(mktemp)\"\n    local -r tmp3=\"$(mktemp)\"\n    local -r tmp4=\"$(mktemp)\"\n    local -r tmp5=\"$(mktemp)\"\n    local -r tmp6=\"$(mktemp)\"\n    local -r tmp7=\"$(mktemp)\"\n    local -r tmp8=\"$(mktemp)\"\n    local -r tmp9=\"$(mktemp)\"\n    local -r tmp10=\"$(mktemp)\"\n    local -r tmp11=\"$(mktemp)\"\n    local -r tmp12=\"$(mktemp)\"\n    local -r tmp13=\"$(mktemp)\"\n    local -r tmp14=\"$(mktemp)\"\n    local -r tmp15=\"$(mktemp)\"\n    local -r tmp16=\"$(mktemp)\"\n    local -r tmp17=\"$(mktemp)\"\n    local -r tmp18=\"$(mktemp)\"\n    local -r tmp19=\"$(mktemp)\"\n    local -r tmp20=\"$(mktemp)\"\n    local -r tmp21=\"$(mktemp)\"\n    local -r tmp22=\"$(mktemp)\"\n    local -r tmp23=\"$(mktemp)\"\n    local -r tmp24=\"$(mktemp)\"\n    local -r tmp25=\"$(mktemp)\"\n    local -r tmp26=\"$(mktemp)\"\n    local -r tmp27=\"$(mktemp)\"\n    local -r tmp28=\"$(mktemp)\"\n    local -r tmp29=\"$(mktemp)\"\n    local -r tmp30=\"$(mktemp)\"\n    local -r tmp31=\"$(mktemp)\"\n    local -r tmp32=\"$(mktemp)\"\n    local -r tmp33=\"$(mktemp)\"\n    local -r tmp34=\"$(mktemp)\"\n    local -r tmp35=\"$(mktemp)\"\n    local -r tmp36=\"$(mktemp)\"\n    local -r tmp37=\"$(mktemp)\"\n    local -r tmp38=\"$(",
    "  local -a list\n  local -i count=0\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i len_minus_1=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=",
    "  local -a seen\n  local -i count=0\n  local -i i\n  local -i j\n  local -i n\n  local -i m\n  local -i k\n  local -i l\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n ",
    "  local -r list=\"$1\"\n  local -r tmp_file=\"$(mktemp)\"\n  local -r tmp_file2=\"$(mktemp)\"\n  local -r tmp_file3=\"$(mktemp)\"\n  local -r tmp_file4=\"$(mktemp)\"\n  local -r tmp_file5=\"$(mktemp)\"\n  local -r tmp_file6=\"$(mktemp)\"\n  local -r tmp_file7=\"$(mktemp)\"\n  local -r tmp_file8=\"$(mktemp)\"\n  local -r tmp_file9=\"$(mktemp)\"\n  local -r tmp_file10=\"$(mktemp)\"\n  local -r tmp_file11=\"$(mktemp)\"\n  local -r tmp_file12=\"$(mktemp)\"\n  local -r tmp_file13=\"$(mktemp)\"\n  local -r tmp_file14=\"$(mktemp)\"\n  local -r tmp_file15=\"$(mktemp)\"\n  local -r tmp_file16=\"$(mktemp)\"\n  local -r tmp_file17=\"$(mktemp)\"\n  local -r tmp_file18=\"$(mktemp)\"\n  local -r tmp_file19=\"$(mktemp)\"\n  local -r tmp_file20=\"$(mktemp)\"\n  local -r tmp_file21=\"$(mktemp)\"\n  local -r tmp_file22=\"$(mktemp)\"\n  local -r tmp_file23=\"$(mktemp)\"\n  local -r tmp_file24=\"$(mktemp)\"\n  local -r tmp_file25=\"$(mktemp)\"\n  local -r tmp_file26=\"$(mktemp)\"\n  local -r tmp_file27=\"$(mktemp)\"\n  local -r tmp_file28=\"$(mktemp)\"\n  local -r tmp_file29=\"$(mktemp)\"\n  local -r tmp_file30=\"$(mktemp)\"\n  local -r tmp_file31=\"$(mktemp)\"\n  local -r tmp_file32=\"$(mktemp)\"\n  local -r tmp_file33=\"$(mktemp)\"\n  local -r tmp_file",
    "    echo \"$1\" | awk '{\n        for (i = 1; i <= NF; i++) {\n            for (j = i + 1; j <= NF; j++) {\n                if ($i == $j) {\n                    print $i, $j\n                }\n            }\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -c | awk '{\n        if ($1 == 2) {\n            print $2, $3\n        }\n    }' | sort | uniq -",
    "    local -A counts\n    while read -r a b; do\n        (( counts[$a,$b]++ ))\n        (( counts[$b,$a]++ ))\n    done <<< \"$1\"\n    for k in \"${!counts[@]}\"; do\n        echo \"$k ${counts[$k]}\"\n    done",
    "  # Convert the input to a list of tuples.\n  local -a tuples\n  while read -r line; do\n    tuples+=(\"$line\")\n  done < <(echo \"$1\")\n\n  # Count the number of bidirectional tuples.\n  local -i count=0\n  for ((i=0; i<${#tuples[@]}; i++)); do\n    for ((j=0; j<${#tuples[@]}; j++)); do\n      if [[ \"${tuples[$i]}\" == \"${tuples[$j]}\" ]]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n\n  # Return the count.\n  echo \"$count\"",
    "  local -r input=\"$1\"\n  local -r output=\"$(mktemp)\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n  local -r tmp5=\"$(mktemp)\"\n  local -r tmp6=\"$(mktemp)\"\n  local -r tmp7=\"$(mktemp)\"\n  local -r tmp8=\"$(mktemp)\"\n  local -r tmp9=\"$(mktemp)\"\n  local -r tmp10=\"$(mktemp)\"\n  local -r tmp11=\"$(mktemp)\"\n  local -r tmp12=\"$(mktemp)\"\n  local -r tmp13=\"$(mktemp)\"\n  local -r tmp14=\"$(mktemp)\"\n  local -r tmp15=\"$(mktemp)\"\n  local -r tmp16=\"$(mktemp)\"\n  local -r tmp17=\"$(mktemp)\"\n  local -r tmp18=\"$(mktemp)\"\n  local -r tmp19=\"$(mktemp)\"\n  local -r tmp20=\"$(mktemp)\"\n  local -r tmp21=\"$(mktemp)\"\n  local -r tmp22=\"$(mktemp)\"\n  local -r tmp23=\"$(mktemp)\"\n  local -r tmp24=\"$(mktemp)\"\n  local -r tmp25=\"$(mktemp)\"\n  local -r tmp26=\"$(mktemp)\"\n  local -r tmp27=\"$(mktemp)\"\n  local -r tmp28=\"$(mktemp)\"\n  local -r tmp29=\"$(mktemp)\"\n  local -r tmp30=\"$(mktemp)\"\n  local -r tmp31=\"$(mktemp)\"\n  local -r tmp32=\"$(mktemp)\"\n  local -r tmp33=\"$(mktemp)\"\n  local -r tmp34=\"$(mktemp)\"\n  local -r tmp35=\"$(mktemp)\"\n  local -r tmp36=\"$(mktemp)\"\n  local -r tmp37=\"$(mktemp)\"\n  local -r tmp38=\"$(",
    "  local -i count=0\n  local -a seen\n  local -a tuple\n  local -a tuple_reverse\n  local -i tuple_len\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i ab\n  local -i ac\n  local -i ad\n  local -i ae\n  local -i af\n  local -i ag\n  local -i ah\n  local -i ai\n  local -i aj\n  local -i ak\n  local -i al\n  local -i am\n  local -i an\n  local -i ao\n  local -i ap\n  local -i aq\n  local -i ar\n  local -i as\n  local -i at\n  local -i au\n  local -i av\n  local -i aw\n  local -i ax\n  local -i ay\n  local -i az\n  local -i ba\n  local -i bb\n  local -i bc\n  local -i bd\n  local -i be\n  local -i bf\n  local -i bg\n  local -i bh\n  local -i bi\n  local -i bj\n  local -i bk\n  local -i bl\n  local -i bm\n  local -i bn\n  local -i bo\n  local -i bp\n  local -i bq\n  local -i br\n  local -i bs\n  local -i bt\n  local -i bu\n  local -i bv\n  local -i bw\n  local -i bx\n  local -i by\n  local -i bz\n  local -i ca\n  local -i cb\n  local -i cc\n  local -i cd\n  local -i ce\n ",
    "  local -A pairs\n  local pair\n  local count\n  while read -r line; do\n    for pair in $line; do\n      (( pairs[$pair]++ ))\n    done\n  done\n  for pair in \"${!pairs[@]}\"; do\n    count=${pairs[$pair]}\n    if (( count > 1 )); then\n      echo \"$pair $count\"\n    fi\n  done",
    "    local -A map\n    local -a list\n    local item\n    while read -r item; do\n        map[$item]=1\n    done <<< \"$1\"\n    for item in \"${!map[@]}\"; do\n        list+=(\"$item\")\n    done\n    local count=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[ \"${list[i]}\" == \"${list[j]}\" ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo \"$count\"",
    "    local -A pairs\n    local pair\n    local -i count\n    local -i total=0\n    while read -r pair; do\n        count=${pairs[$pair]}\n        (( count++ ))\n        pairs[$pair]=$count\n    done <<< \"$1\"\n    for count in \"${pairs[@]}\"; do\n        (( total += count * (count - 1) ))\n    done\n    echo $total",
    "  local -r list=\"$1\"\n  local -r list_length=\"$(wc -l <<< \"$list\")\"\n  local -r list_length_minus_one=\"$((list_length - 1))\"\n  local -r list_length_minus_two=\"$((list_length - 2))\"\n  local -r list_length_minus_three=\"$((list_length - 3))\"\n  local -r list_length_minus_four=\"$((list_length - 4))\"\n  local -r list_length_minus_five=\"$((list_length - 5))\"\n  local -r list_length_minus_six=\"$((list_length - 6))\"\n  local -r list_length_minus_seven=\"$((list_length - 7))\"\n  local -r list_length_minus_eight=\"$((list_length - 8))\"\n  local -r list_length_minus_nine=\"$((list_length - 9))\"\n  local -r list_length_minus_ten=\"$((list_length - 10))\"\n  local -r list_length_minus_eleven=\"$((list_length - 11))\"\n  local -r list_length_minus_twelve=\"$((list_length - 12))\"\n  local -r list_length_minus_thirteen=\"$((list_length - 13))\"\n  local -r list_length_minus_fourteen=\"$((list_length - 14))\"\n  local -r list_length_minus_fifteen=\"$((list_length - 15))\"\n  local -r list_length_minus_sixteen=\"$((list_length - 16))\"\n  local -r list_length_minus_seventeen=\"$((list_length - 17))\"\n  local -r list_length_minus_eighteen=\"$((list_length - 18))\"\n  local -r list_length_minus_nineteen=\"$((list_length - 19))\"\n  local -r list_length_minus_twenty=\"$((list_length - 20))\"\n  local -r list_length_minus_twenty_one=\"$((list_length - 21))\"\n  local -r",
    "  local count=0\n  local line\n  local tuple\n  local tuple_rev\n  local tuple_count\n  local tuple_rev_count\n  local tuple_count_sum\n  local tuple_rev_count_sum\n  local tuple_count_max\n  local tuple_rev_count_max\n  local tuple_count_max_sum\n  local tuple_rev_count_max_sum\n  local tuple_count_max_sum_max\n  local tuple_rev_count_max_sum_max\n  local tuple_count_max_sum_max_max\n  local tuple_rev_count_max_sum_max_max\n  local tuple_count_max_sum_max_max_max\n  local tuple_rev_count_max_sum_max_max_max\n  local tuple_count_max_sum_max_max_max_max\n  local tuple_rev_count_max_sum_max_max_max_max\n  local tuple_count_max_sum_max_max_max_max_max\n  local tuple_rev_count_max_sum_max_max_max_max_max\n  local tuple_count_max_sum_max_max_max_max_max_max\n  local tuple_rev_count_max_sum_max_max_max_max_max_max\n  local tuple_count_max_sum_max_max_max_max_max_max_max\n  local tuple_rev_count_max_sum_max_max_max_max_max_max_max\n  local tuple_count_max_sum_max_max_max_max_max_max_max_max\n  local tuple_rev_count_max_sum_max_max_max_max_max_max_max_max\n  local tuple_count_max_sum_max_max_max_max_max_max_max_max_max\n  local tuple_rev_count_max_sum_max_max_max_max_max_max_max_max_max\n  local tuple_count_max_sum_max_max_max_max_max_max_max_max_max_max\n  local tuple_rev_count_max_sum",
    "    local -A pairs\n    local -A reverse_pairs\n    local -A counts\n    local -A reverse_counts\n    local line\n    local -i count\n    local -i reverse_count\n    local -i total_count\n    local -i total_reverse_count\n    local -i total_bidirectional_count\n    local -i total_unidirectional_count\n    local -i total_unidirectional_reverse_count\n    local -i total_unidirectional_count_count\n    local -i total_unidirectional_reverse_count_count\n    local -i total_unidirectional_count_reverse_count\n    local -i total_unidirectional_reverse_count_reverse_count\n    local -i total_unidirectional_count_count_reverse_count\n    local -i total_unidirectional_count_reverse_count_reverse_count\n    local -i total_unidirectional_reverse_count_count_reverse_count\n    local -i total_unidirectional_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_count_count_reverse_count_reverse_count\n    local -i total_unidirectional_count_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_reverse_count_count_reverse_count_reverse_count\n    local -i total_unidirectional_reverse_count_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_count_count_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_count_reverse_count_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_reverse_count_count_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_reverse_count_reverse_count_reverse_count_reverse_count_reverse_count\n    local -i total_unidirectional_count_count_reverse_count_reverse_count_reverse_count_reverse_count\n    local -i total_"
  ]
}
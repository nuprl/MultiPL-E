{
  "name": "mbpp_127_multiply_int",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to multiply two integers.\n#\n# $1 is an integer\n# $2 is an integer\nmultiply_int() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    multiply_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\" \"20\") = \"200\" ]]\n    [[ $(candidate \"5\" \"10\") = \"50\" ]]\n    [[ $(candidate \"4\" \"8\") = \"32\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(($1 * $2))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo \"$1 * $2 = $(( $1 * $2 ))\"",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(($1 * $2))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo \"$1 * $2 = $(( $1 * $2 ))\"",
    "  echo $(( $1 * $2 ))",
    "    echo \"$1 * $2 = $(( $1 * $2 ))\"",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(($1 * $2))",
    "  echo $(( $1 * $2 ))",
    "  local result=0\n  local i=0\n  local j=0\n  for ((i=0; i<$1; i++)); do\n    for ((j=0; j<$2; j++)); do\n      result=$((result+1))\n    done\n  done\n  echo $result",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(($1 * $2))",
    "  local a=$1\n  local b=$2\n  local result=$((a*b))\n  echo $result",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(($1 * $2))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo \"$1 * $2\" | bc",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(($1 * $2))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(($1 * $2))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo \"$1 * $2 = $(( $1 * $2 ))\"",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  local result=0\n  local i=0\n  for ((i=0; i<$1; i++)); do\n    result=$((result + $2))\n  done\n  echo $result",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo \"$1 * $2 = $(( $1 * $2 ))\"",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo \"$(( $1 * $2 ))\"",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo \"$1 * $2\" | bc",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo \"$1 * $2\" | bc",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  local result=$(( $1 * $2 ))\n  echo $result",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  local a=$1\n  local b=$2\n  local result=$((a*b))\n  echo \"$result\"",
    "  echo \"$(( $1 * $2 ))\"",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "  echo \"$(( $1 * $2 ))\"",
    "  # TODO: Write a function to multiply two integers.\n  #\n  # $1 is an integer\n  # $2 is an integer\n  #\n  # Example:\n  #   multiply_int 2 3\n  #   6\n  #\n  # Hint: Use the $(( )) syntax to do math.\n  # Hint: Use the echo command to output the result.\n  # Hint: Use the return command to return the result.\n  # Hint: Use the $1 and $2 variables to access the arguments.\n  # Hint: Use the $# variable to access the number of arguments.\n  # Hint: Use the $0 variable to access the name of the script.\n  # Hint: Use the $FUNCNAME variable to access the name of the function.\n  # Hint: Use the $LINENO variable to access the line number.\n  # Hint: Use the $BASH_SOURCE variable to access the name of the script.\n  # Hint: Use the $BASH_LINENO variable to access the line number.\n  # Hint: Use the $BASH_SOURCE_LINENO variable to access the line number.\n  # Hint: Use the $BASH_SOURCE_DIR variable to access the directory of the script.\n  # Hint: Use the $BASH_SOURCE_FILE variable to access the name of the script.\n  # Hint: Use the $BASH_SOURCE_FUNCNAME variable to access the name of the function.\n  # Hint: Use the $BASH_SOURCE_ARG0 variable to access the name of the script.\n  # Hint: Use the $BASH_SOURCE_ARG1 variable to access the first argument.\n  # Hint: Use the $BASH_SOURCE_ARG2 variable to access the second argument.\n  # Hint: Use the $BASH_SOURCE_ARG3 variable to access the third argument.\n  # Hint: Use the $BASH_SOURCE_ARG4 variable to access the fourth argument.\n  # Hint: Use the $BASH_SOURCE_ARG5 variable to access the fifth argument.\n  # Hint: Use the $BASH_SOURCE_ARG6 variable to access the sixth argument.",
    "  echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  local a=$1\n  local b=$2\n  echo $((a * b))",
    "    echo \"$1 * $2 = $(( $1 * $2 ))\"",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "  echo $(( $1 * $2 ))",
    "    echo \"$(($1 * $2))\"",
    "  echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))",
    "    echo \"$1 * $2\" | bc",
    "  echo \"$1 * $2\" | bc",
    "    echo $(( $1 * $2 ))",
    "    echo $(( $1 * $2 ))"
  ]
}
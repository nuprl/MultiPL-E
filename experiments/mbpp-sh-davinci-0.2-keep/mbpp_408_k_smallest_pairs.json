{
  "name": "mbpp_408_k_smallest_pairs",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nk_smallest_pairs() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_408_k_smallest_pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    k_smallest_pairs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 7\" \"2 4 6\" \"2\") = \"1 2\\n1 4\" ]]\n    [[ $(candidate \"1 3 7\" \"2 4 6\" \"1\") = \"1 2\" ]]\n    [[ $(candidate \"1 3 7\" \"2 4 6\" \"7\") = \"1 2\\n1 4\\n3 2\\n1 6\\n3 4\\n3 6\\n7 2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sums\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i] + b[j]))\")\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    local min=999999\n    local min_index=-1\n    for ((j=0; j<${#sums[@]}; j++)); do\n      if [[ ${sums[j]} -lt $min ]]; then\n        min=${sums[j]}\n        min_index=$j\n      fi\n    done\n    echo \"${pairs[min_index]}\"\n    sums[min_index]=999999\n  done",
    "  local -a a=(\"$@\")\n  local -a b=(\"${a[@]:2}\")\n  local -a c=(\"${a[@]:3}\")\n  local -a d=(\"${a[@]:4}\")\n  local -a e=(\"${a[@]:5}\")\n  local -a f=(\"${a[@]:6}\")\n  local -a g=(\"${a[@]:7}\")\n  local -a h=(\"${a[@]:8}\")\n  local -a i=(\"${a[@]:9}\")\n  local -a j=(\"${a[@]:10}\")\n  local -a k=(\"${a[@]:11}\")\n  local -a l=(\"${a[@]:12}\")\n  local -a m=(\"${a[@]:13}\")\n  local -a n=(\"${a[@]:14}\")\n  local -a o=(\"${a[@]:15}\")\n  local -a p=(\"${a[@]:16}\")\n  local -a q=(\"${a[@]:17}\")\n  local -a r=(\"${a[@]:18}\")\n  local -a s=(\"${a[@]:19}\")\n  local -a t=(\"${a[@]:20}\")\n  local -a u=(\"${a[@]:21}\")\n  local -a v=(\"${a[@]:22}\")\n  local -a w=(\"${a[@]:23}\")\n  local -a x=(\"${a[@]:24}\")\n  local -a y=(\"${a[@]:25}\")\n  local -a z=(\"${a[@]:26}\")\n  local -a aa=(\"${a[@]:27}\")\n  local -a bb=(\"${a[@]:28}\")\n  local -a cc=(\"${a[@]:29}\")\n  local -a dd=(\"${a[@]:30}\")\n  local -a ee=(\"${a[@]:31}\")\n  local -a ff=(\"${a[@]:32}\")\n ",
    "  local -a a1=($1)\n  local -a a2=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i=0\n  local -i j=0\n  local -i sum\n  local -i min_sum\n  local -i min_i\n  local -i min_j\n\n  while (( i < ${#a1[@]} && j < ${#a2[@]} && k > 0 )); do\n    min_sum=${a1[0]}+${a2[0]}\n    min_i=0\n    min_j=0\n    for (( i=0; i < ${#a1[@]}; i++ )); do\n      for (( j=0; j < ${#a2[@]}; j++ )); do\n        sum=${a1[i]}+${a2[j]}\n        if (( sum < min_sum )); then\n          min_sum=$sum\n          min_i=$i\n          min_j=$j\n        fi\n      done\n    done\n    pair=(${a1[min_i]} ${a2[min_j]})\n    pairs+=(${pair[@]})\n    unset a1[min_i]\n    unset a2[min_j]\n    a1=(${a1[@]})\n    a2=(${a2[@]})\n    (( k-- ))\n  done\n  echo ${pairs[@]}",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local -a pairs\n  local -a result\n  local i j k\n\n  for ((i=0; i<${#array1[@]}; i++)); do\n    for ((j=0; j<${#array2[@]}; j++)); do\n      pairs+=(\"${array1[i]} ${array2[j]}\")\n    done\n  done\n\n  for ((i=0; i<$3; i++)); do\n    result+=(\"${pairs[i]}\")\n  done\n\n  echo \"${result[@]}\"",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -a pairs\n  local -a result\n  local k=$3\n  local i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      pairs+=(\"${arr1[i]} ${arr2[j]}\")\n    done\n  done\n  pairs=($(echo \"${pairs[*]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '))\n  for ((i=0; i<k; i++)); do\n    result+=(\"${pairs[i]}\")\n  done\n  echo \"${result[*]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sum=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[$i]} ${b[$j]}\")\n      sum+=(\"$((a[i]+b[j]))\")\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    local min=${sum[0]}\n    local min_index=0\n    for ((j=1; j<${#sum[@]}; j++)); do\n      if [[ ${sum[j]} -lt $min ]]; then\n        min=${sum[j]}\n        min_index=$j\n      fi\n    done\n    echo \"${pairs[$min_index]}\"\n    unset sum[$min_index]\n    unset pairs[$min_index]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i\n  local j\n  local sum\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i max_sum=$((a[n-1]+b[m-1]))\n  local -i min_sum=$((a[0]+b[0]))\n  local -i max_i=$((n-1))\n  local -i max_j=$((m-1))\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_i_sum\n  local -i min_j_sum\n  local -i min_i_j_sum\n  local -i min_i_j_k_sum\n  local -i min_i_k_sum\n  local -i min_j_k_sum\n  local -i min_i_j_k_index\n  local -i min_i_k_index\n  local -i min_j_k_index\n  local -i min_i_j_index\n  local -i min_i_index\n  local -i min_j_index\n  local -i min_i_j_k_sum_index\n  local -i min_i_k_sum_index\n  local -i min_j_k_sum_index\n  local -i min_i_j_sum_index\n  local -i min_i_sum_index\n  local -i min_j_sum_index\n  local -i min_i_j_k_sum_index\n  local -i min_i_k_sum_index\n  local -i min_j_k_sum_index\n  local -i min_i_j_sum_index\n  local -i min_i_sum_index\n  local -i min_j_sum_index\n  local -i min_i_j_k_sum_index\n  local -i min_i_k_sum_index\n  local -i min_j_k_sum",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -a pair\n    local i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pair=(${a[i]} ${b[j]})\n            pairs+=(${pair[@]})\n        done\n    done\n    local -a sorted_pairs=($(printf \"%s\\n\" \"${pairs[@]}\" | sort -n))\n    local -a k_smallest_pairs\n    for ((i=0; i<k; i++)); do\n        k_smallest_pairs+=(${sorted_pairs[i]})\n    done\n    echo ${k_smallest_pairs[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -i i=0\n  local -i j=0\n  local -i m=${#a[@]}\n  local -i n=${#b[@]}\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c=()\n    local -i i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c+=(${a[i]} ${b[j]})\n        done\n    done\n    local -a d=()\n    for ((i=0; i<${#c[@]}; i+=2)); do\n        d+=(${c[i]} ${c[i+1]} $((${c[i]}+${c[i+1]})))\n    done\n    local -a e=()\n    for ((i=0; i<${#d[@]}; i+=3)); do\n        e+=(${d[i]} ${d[i+1]} ${d[i+2]})\n    done\n    local -a f=()\n    for ((i=0; i<${#e[@]}; i+=3)); do\n        f+=(${e[i]} ${e[i+1]} ${e[i+2]})\n    done\n    local -a g=()\n    for ((i=0; i<${#f[@]}; i+=3)); do\n        g+=(${f[i]} ${f[i+1]} ${f[i+2]})\n    done\n    local -a h=()\n    for ((i=0; i<${#g[@]}; i+=3)); do\n        h+=(${g[i]} ${g[i+1]} ${g[i+2]})\n    done\n    local -a j=()\n    for ((i=0; i<${#h[@]}; i+=3)); do\n        j+=(${h[i]} ${h[i+1]} ${h[i+2]})\n    done\n    local -a l=()\n    for ((i=0; i<${#j[@]}; i+=3)); do\n        l+=(${j[i]} ${j[i+1]} ${j[i",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a result=()\n  local i j\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      result+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n\n  echo \"${result[@]}\" | sort -n | head -n $k",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local k=$3\n  local -a result\n  local -a tmp\n  local i j\n  local len1=${#arr1[@]}\n  local len2=${#arr2[@]}\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local min_index\n\n  for ((i=0; i<len1; i++)); do\n    for ((j=0; j<len2; j++)); do\n      sum=$((arr1[i] + arr2[j]))\n      tmp+=($sum)\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${tmp[0]}\n    min_index=0\n    for ((j=1; j<${#tmp[@]}; j++)); do\n      if [[ ${tmp[j]} -lt $min_sum ]]; then\n        min_sum=${tmp[j]}\n        min_index=$j\n      fi\n    done\n    unset tmp[$min_index]\n    tmp=(${tmp[@]})\n    min_i=$((min_index / len2))\n    min_j=$((min_index % len2))\n    result+=(${arr1[min_i]} ${arr2[min_j]})\n  done\n\n  echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -a indices_sorted=()\n  local -a sums_sorted=()\n  local -a pairs_sorted=()\n  local -a pairs_sorted_k=()\n  local -a pairs_sorted_k_str=()\n  local i=0\n  local j=0\n  local k_index=0\n  local sum=0\n  local pair=0\n  local pair_str=0\n  local index=0\n  local index_str=0\n  local temp=0\n  local temp_str=0\n  local temp_index=0\n  local temp_index_str=0\n  local len_a=${#a[@]}\n  local len_b=${#b[@]}\n  local len_pairs=0\n  local len_pairs_sorted=0\n  local len_pairs_sorted_k=0\n  local len_indices=0\n  local len_indices_sorted=0\n  local len_sums=0\n  local len_sums_sorted=0\n  local len_pairs_sorted_k_str=0\n  local len_indices_sorted_str=0\n  local len_sums_sorted_str=0\n\n  for ((i=0; i<len_a; i++)); do\n    for ((j=0; j<len_b; j++)); do\n      sum=$((a[i]+b[j]))\n      pair=\"${a[i]},${b[j]}\"\n      pairs+=($pair)\n      sums+=($sum)\n      indices+=($i)\n    done\n  done\n\n  len_pairs=${#pairs[@]}\n  len_sums=${#sums[@]}\n  len_indices=${#indices[@]}\n\n  for ((i=0; i<len_pairs; i++)); do\n    for ((j=i+1; j",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local i j sum\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i] + b[j]))\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$sum\")\n      indices+=(\"$i $j\")\n    done\n  done\n\n  for ((i=0; i<${#sums[@]}; i++)); do\n    for ((j=i+1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[i]} -gt ${sums[j]} ]]; then\n        sum=${sums[i]}\n        sums[i]=${sums[j]}\n        sums[j]=$sum\n\n        pair=${pairs[i]}\n        pairs[i]=${pairs[j]}\n        pairs[j]=$pair\n\n        index=${indices[i]}\n        indices[i]=${indices[j]}\n        indices[j]=$index\n      fi\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    echo \"${pairs[i]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local i=0\n  local j=0\n  local sum=0\n  local index=0\n  local -a result=()\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((${a[$i]} + ${b[$j]}))\n      index=$(($i * ${#b[@]} + $j))\n      pairs[$index]=$sum\n      indices[$index]=$index\n    done\n  done\n\n  for ((i=0; i<${#pairs[@]}; i++)); do\n    for ((j=i+1; j<${#pairs[@]}; j++)); do\n      if [[ ${pairs[$i]} -gt ${pairs[$j]} ]]; then\n        temp=${pairs[$i]}\n        pairs[$i]=${pairs[$j]}\n        pairs[$j]=$temp\n        temp=${indices[$i]}\n        indices[$i]=${indices[$j]}\n        indices[$j]=$temp\n      fi\n    done\n  done\n\n  for ((i=0; i<$k; i++)); do\n    if [[ $i -lt ${#pairs[@]} ]]; then\n      result[$i]=${indices[$i]}\n    fi\n  done\n\n  echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sums\n  local i j sum\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i]+b[j]))\n      pairs[$sum]=\"${a[i]} ${b[j]}\"\n      sums[$sum]=$sum\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    echo \"${pairs[${sums[$i]}]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n  printf '%s\\n' \"${pairs[@]}\" | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[$i]} ${b[$j]})\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sorted_pairs\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[$i]} ${b[$j]}\")\n    done\n  done\n  sorted_pairs=($(printf '%s\\n' \"${pairs[@]}\" | sort -n))\n  for ((i=0; i<k; i++)); do\n    echo \"${sorted_pairs[$i]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]+b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n  local -a sorted_pairs\n  local -a sum\n  local -a sums\n  for ((i=0; i<${#pairs[@]}; i++)); do\n    sum=($(echo \"${pairs[i]}\" | tr ' ' '+'))\n    sums+=(\"$((${sum[@]}))\")\n  done\n  local -a sorted_sums\n  sorted_sums=($(printf \"%s\\n\" \"${sums[@]}\" | sort -n))\n  local -a sorted_pairs_indices\n  for ((i=0; i<${#sorted_sums[@]}; i++)); do\n    for ((j=0; j<${#sums[@]}; j++)); do\n      if [[ \"${sorted_sums[i]}\" == \"${sums[j]}\" ]]; then\n        sorted_pairs_indices+=(\"$j\")\n      fi\n    done\n  done\n  local -a sorted_pairs\n  for ((i=0; i<${#sorted_pairs_indices[@]}; i++)); do\n    sorted_pairs+=(\"${pairs[${sorted_pairs_indices[i]}]}\")\n  done\n  for ((i=0; i<k; i++)); do\n    echo \"${sorted_pairs[i]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n\n  local -a pairs\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n\n  local -a sorted_pairs\n  for ((i=0; i<${#pairs[@]}; i++)); do\n    local pair=${pairs[i]}\n    local sum=$(echo $pair | awk '{print $1 + $2}')\n    sorted_pairs[i]=\"$sum $pair\"\n  done\n\n  IFS=$'\\n' sorted_pairs=($(sort -n <<<\"${sorted_pairs[*]}\"))\n  unset IFS\n\n  for ((i=0; i<k; i++)); do\n    echo ${sorted_pairs[i]} | awk '{print $2}'\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]},${b[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -a pair_sums\n  local -a pair_sum\n  local -i i\n  local -i j\n  local -i sum\n  local -i index\n  local -i count\n  local -i min_index\n  local -i min_sum\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=${a[i]}+${b[j]}\n      pair_sums[${#pair_sums[@]}]=$sum\n      pair_sum[${#pair_sum[@]}]=$i,$j\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${pair_sums[0]}\n    min_index=0\n    for ((j=1; j<${#pair_sums[@]}; j++)); do\n      if [[ ${pair_sums[j]} -lt $min_sum ]]; then\n        min_sum=${pair_sums[j]}\n        min_index=$j\n      fi\n    done\n    pair=(${pair_sum[min_index]//,/ })\n    pairs[${#pairs[@]}]=${a[${pair[0]}]},${b[${pair[1]}]}\n    pair_sums[min_index]=99999999\n  done\n\n  echo ${pairs[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  local -a pairs\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local i j\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i] + b[j]))\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    local min=0\n    for ((j=1; j<${#sums[@]}; j++)); do\n      if ((sums[j] < sums[min])); then\n        min=$j\n      fi\n    done\n    echo \"${pairs[min]}\"\n    unset pairs[min]\n    unset sums[min]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local i j k=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[k++]=$((a[i]+b[j]))\n        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $3",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      pair=(${arr1[i]} ${arr2[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n  local -a sorted_pairs\n  for ((i=0; i<${#pairs[@]}; i+=2)); do\n    sorted_pairs+=(${pairs[i]} ${pairs[i+1]})\n  done\n  local -a sorted_pairs_sums\n  for ((i=0; i<${#sorted_pairs[@]}; i+=2)); do\n    sorted_pairs_sums+=($((${sorted_pairs[i]}+${sorted_pairs[i+1]})) ${sorted_pairs[i]} ${sorted_pairs[i+1]})\n  done\n  local -a sorted_pairs_sums_sorted\n  for ((i=0; i<${#sorted_pairs_sums[@]}; i+=3)); do\n    sorted_pairs_sums_sorted+=(${sorted_pairs_sums[i]} ${sorted_pairs_sums[i+1]} ${sorted_pairs_sums[i+2]})\n  done\n  local -a sorted_pairs_sums_sorted_sorted\n  for ((i=0; i<${#sorted_pairs_sums_sorted[@]}; i+=3)); do\n    sorted_pairs_sums_sorted_sorted+=(${sorted_pairs_sums_sorted[i]} ${sorted_pairs_sums_sorted[i+1]} ${sorted_pairs_sums_sorted[i+2]})\n  done\n  local -a sorted_pairs_s",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a sorted_sums=()\n  local -a sorted_pairs=()\n  local -a result=()\n  local i j sum\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i] + b[j]))\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$sum\")\n    done\n  done\n\n  sorted_sums=($(printf '%s\\n' \"${sums[@]}\" | sort -n))\n  for ((i=0; i<k; i++)); do\n    for ((j=0; j<${#sums[@]}; j++)); do\n      if [[ \"${sorted_sums[i]}\" == \"${sums[j]}\" ]]; then\n        sorted_pairs+=(\"${pairs[j]}\")\n      fi\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    result+=(\"${sorted_pairs[i]}\")\n  done\n\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a C=()\n  local -a D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n  local -a H=()\n  local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a L=()\n  local -a M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n  local -a Q=()\n  local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a U=()\n  local -a V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n  local -a Z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n ",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local -i i j\n    local -i m=${#a[@]}\n    local -i n=${#b[@]}\n\n    for ((i=0; i<m; i++)); do\n        for ((j=0; j<n; j++)); do\n            c+=($((a[i]+b[j])))\n        done\n    done\n\n    printf \"%s\\n\" \"${c[@]}\" | sort -n | head -n $k",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local i j\n\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      pairs+=(\"${arr1[i]} ${arr2[j]}\")\n      sums+=(\"$((arr1[i] + arr2[j]))\")\n    done\n  done\n\n  for ((i=0; i<${#sums[@]}; i++)); do\n    for ((j=i+1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[i]} -gt ${sums[j]} ]]; then\n        local tmp=${sums[i]}\n        sums[i]=${sums[j]}\n        sums[j]=$tmp\n        tmp=${pairs[i]}\n        pairs[i]=${pairs[j]}\n        pairs[j]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    echo ${pairs[i]}\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sums\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i] + b[j]))\")\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    local min=${sums[0]}\n    local min_index=0\n    for ((j=1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[j]} -lt $min ]]; then\n        min=${sums[j]}\n        min_index=$j\n      fi\n    done\n    echo ${pairs[min_index]}\n    unset sums[min_index]\n    unset pairs[min_index]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i=0\n  local -i j=0\n  local -i sum\n  local -i min_sum\n  local -i min_i\n  local -i min_j\n\n  while [[ ${#pairs[@]} -lt $k ]]; do\n    min_sum=9999999999\n    for (( i = 0; i < ${#a[@]}; i++ )); do\n      for (( j = 0; j < ${#b[@]}; j++ )); do\n        sum=$(( a[i] + b[j] ))\n        if [[ $sum -lt $min_sum ]]; then\n          min_sum=$sum\n          min_i=$i\n          min_j=$j\n        fi\n      done\n    done\n    pair=(${a[min_i]} ${b[min_j]})\n    pairs+=(${pair[@]})\n    a[min_i]=9999999999\n    b[min_j]=9999999999\n  done\n\n  echo \"${pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i j\n  local -i a_len=${#a[@]}\n  local -i b_len=${#b[@]}\n  local -i max_pairs=$((a_len * b_len))\n  local -i max_pairs=$((max_pairs < k ? max_pairs : k))\n  for ((i = 0; i < a_len; i++)); do\n    for ((j = 0; j < b_len; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n  pairs=($(printf \"%s\\n\" \"${pairs[@]}\" | sort -n | head -n $max_pairs))\n  printf \"%s\\n\" \"${pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i\n  local j\n  local sum\n  local -i min_sum\n  local -i min_i\n  local -i min_j\n  local -i n\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  n=${#a[@]}\n  m=${#b[@]}\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      sum=$((a[i]+b[j]))\n      if ((${#pairs[@]} < k)); then\n        pairs+=(\"$sum $i $j\")\n      else\n        min_sum=${pairs[0]%% *}\n        if ((sum < min_sum)); then\n          pairs[0]=\"$sum $i $j\"\n          for ((p=1; p<k; p++)); do\n            q=${pairs[p]%% *}\n            if ((q < min_sum)); then\n              min_sum=$q\n              min_i=${pairs[p]#* }\n              min_j=${pairs[p]##* }\n              pairs[p]=\"$min_sum $min_i $min_j\"\n            fi\n          done\n        fi\n      fi\n    done\n  done\n  for ((r=0; r<k; r++)); do\n    s=${pairs[r]%% *}\n    t=${pairs[r]#* }\n    u=${pairs[r]##* }\n    v=${a[t]}\n    w=${b[u]}\n    x=$((v+w))\n    y=$((x/10))\n    z=$((x%10))\n    echo \"$v$y$z",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i]+b[j]))\")\n      indices+=(\"$i $j\")\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    local min=9999999999\n    local min_index=0\n    for ((j=0; j<${#sums[@]}; j++)); do\n      if ((sums[j] < min)); then\n        min=${sums[j]}\n        min_index=$j\n      fi\n    done\n    echo \"${pairs[min_index]}\"\n    sums[min_index]=9999999999\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local i j\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i]+b[j]))\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    local min=${sums[0]}\n    local min_index=0\n    for ((j=1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[j]} -lt $min ]]; then\n        min=${sums[j]}\n        min_index=$j\n      fi\n    done\n    echo \"${pairs[min_index]}\"\n    unset sums[min_index]\n    unset pairs[min_index]\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[${#c[@]}]=$((a[i]+b[j]))\n        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sorted\n  local i j\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n\n  sorted=($(printf \"%s\\n\" \"${pairs[@]}\" | sort -n))\n\n  for ((i=0; i<k; i++)); do\n    echo \"${sorted[i]}\"\n  done",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -i k=$3\n  local -i i j\n  local -i len1=${#arr1[@]}\n  local -i len2=${#arr2[@]}\n  local -a pairs\n  local -i pairs_len=0\n  local -i min_sum=0\n  local -i sum=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_i_j=0\n\n  for ((i=0; i<len1; i++)); do\n    for ((j=0; j<len2; j++)); do\n      sum=$((arr1[i] + arr2[j]))\n      if ((pairs_len < k)); then\n        pairs[pairs_len++]=\"$i $j $sum\"\n        if ((pairs_len == k)); then\n          min_sum=${pairs[0]##* }\n          min_i_j=0\n          for ((i=1; i<k; i++)); do\n            if ((${pairs[i]##* } < min_sum)); then\n              min_sum=${pairs[i]##* }\n              min_i_j=$i\n            fi\n          done\n        fi\n      elif ((sum < min_sum)); then\n        min_sum=$sum\n        pairs[min_i_j]=\"$i $j $sum\"\n        min_sum=${pairs[0]##* }\n        min_i_j=0\n        for ((i=1; i<k; i++)); do\n          if ((${pairs[i]##* } < min_sum)); then\n            min_sum=${pairs[i]##* }\n            min_i_j=$i\n          fi\n        done\n      fi\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_i=${pairs[i]%% *}\n    min_j=${pairs[i]#* }\n    min_j=${min_j%% *}",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -a result\n  local -i k=$3\n  local -i i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      result+=(\"${arr1[i]} ${arr2[j]}\")\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local i j\n  local -i m n\n  local -i p q\n  local -i r s\n  local -i t u\n  local -i v w\n  local -i x y\n  local -i z\n\n  m=${#a[@]}\n  n=${#b[@]}\n  for ((i=0;i<m;i++)); do\n    for ((j=0;j<n;j++)); do\n      c[$i,$j]=$((a[i]+b[j]))\n    done\n  done\n\n  for ((i=0;i<m;i++)); do\n    for ((j=0;j<n;j++)); do\n      d[$i,$j]=$((i*n+j))\n    done\n  done\n\n  for ((i=0;i<m;i++)); do\n    for ((j=0;j<n;j++)); do\n      if ((i<j)); then\n        p=${c[$i,$j]}\n        q=${c[$j,$i]}\n        r=${d[$i,$j]}\n        s=${d[$j,$i]}\n        c[$i,$j]=$q\n        c[$j,$i]=$p\n        d[$i,$j]=$s\n        d[$j,$i]=$r\n      fi\n    done\n  done\n\n  for ((i=0;i<m;i++)); do\n    for ((j=0;j<n;j++)); do\n      if ((i<j)); then\n        p=${c[$i,$j]}\n        q=${c[$j,$i]}\n        r=${d[$i,$j]}\n        s=${d[$j,$i]}\n        c[$i,$j]=$q\n        c[$j,$i]=$p\n        d[$i,$j]=$s\n        d[$j,",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[i]} ${b[j]}\")\n        done\n    done\n    echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sums\n  local -a indices\n  local i j\n  local sum\n  local index\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i count=0\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      sum=$((a[i]+b[j]))\n      index=$((i*m+j))\n      if ((count < k)); then\n        sums[count]=$sum\n        indices[count]=$index\n        ((count++))\n      elif ((sum < ${sums[0]})); then\n        sums[0]=$sum\n        indices[0]=$index\n      fi\n      if ((count == k)); then\n        for ((i=0; i<k-1; i++)); do\n          if ((${sums[i]} > ${sums[i+1]})); then\n            sums[i]=${sums[i+1]}\n            sums[i+1]=${sums[i]}\n            indices[i]=${indices[i+1]}\n            indices[i+1]=${indices[i]}\n          fi\n        done\n      fi\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    j=${indices[i]}\n    pairs[i]=\"${a[j/m]} ${b[j%m]}\"\n  done\n  echo \"${pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sum_pairs=()\n  local -a sum_pairs_sorted=()\n  local -a k_smallest=()\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n  local -i k_smallest_index=0\n  local -i k_smallest_sum=0\n  local -i k_smallest_sum_index=0\n  local -i k_smallest_sum_index_prev=0\n  local -i k_smallest_sum_index_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i k_smallest_sum_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sums\n  local i\n  local j\n  local sum\n  local index\n  local -i count=0\n  local -i max_count=${#a[@]}*${#b[@]}\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((${a[i]}+${b[j]}))\n      index=$((${#sums[@]}-1))\n      if [[ $index -ge 0 ]]; then\n        while [[ $index -ge 0 && ${sums[index]} -gt $sum ]]; do\n          sums[index+1]=${sums[index]}\n          pairs[index+1]=${pairs[index]}\n          index=$(($index-1))\n        done\n      fi\n      sums[index+1]=$sum\n      pairs[index+1]=\"${a[i]},${b[j]}\"\n      count=$(($count+1))\n      if [[ $count -gt $k ]]; then\n        unset sums[0]\n        unset pairs[0]\n      fi\n    done\n  done\n\n  for ((i=0; i<${#pairs[@]}; i++)); do\n    echo \"${pairs[i]}\"\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local -i k=$3\n    local -i i j\n    local -i len_a=${#a[@]}\n    local -i len_b=${#b[@]}\n    local -i len_c=$((len_a * len_b))\n    local -a c\n    local -i c_i=0\n    for ((i=0; i<len_a; i++)); do\n        for ((j=0; j<len_b; j++)); do\n            c[c_i]=$((a[i] + b[j]))\n            ((c_i++))\n        done\n    done\n    local -i min_i\n    local -i min_j\n    local -i min_value\n    local -i tmp\n    for ((i=0; i<len_c; i++)); do\n        min_value=${c[i]}\n        min_i=$i\n        for ((j=i+1; j<len_c; j++)); do\n            if [[ ${c[j]} -lt $min_value ]]; then\n                min_value=${c[j]}\n                min_i=$j\n            fi\n        done\n        tmp=${c[i]}\n        c[i]=${c[min_i]}\n        c[min_i]=$tmp\n    done\n    for ((i=0; i<k; i++)); do\n        echo ${c[i]}\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n  local -a ak=()\n  local -a al=()\n  local -a am=()\n  local -a an=()\n  local -a ao=()\n  local -a ap=()\n  local -a aq=()\n  local -a ar=()\n  local -a as=()\n  local -a at=()\n  local -a au=()\n  local -a av=()\n  local -a aw=()\n  local -a ax=()\n  local -a ay=()\n  local -a az=()\n  local -a ba=()\n  local -a bb=()\n  local -a bc=()\n  local -a bd=()\n  local -a be=()\n  local -a bf=()\n  local -a bg=()\n  local -a bh=()\n  local -a bi=()\n  local",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -a sorted_pairs\n  local -a sorted_pair\n  local i\n  local j\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local -i k_i\n  local -i k_j\n  local -i k_sum\n  local -i k_min_sum\n  local -i k_min_i\n  local -i k_min_j\n  local -i k_pairs_length\n  local -i k_pair_length\n  local -i k_sorted_pairs_length\n  local -i k_sorted_pair_length\n  local -i a_length=${#a[@]}\n  local -i b_length=${#b[@]}\n  local -i pairs_length=0\n  local -i pair_length=0\n  local -i sorted_pairs_length=0\n  local -i sorted_pair_length=0\n\n  for ((i=0; i<a_length; i++)); do\n    for ((j=0; j<b_length; j++)); do\n      sum=$((a[i]+b[j]))\n      if ((sorted_pairs_length < k)); then\n        sorted_pair[sorted_pair_length++]=$i\n        sorted_pair[sorted_pair_length++]=$j\n        sorted_pair[sorted_pair_length++]=$sum\n        sorted_pairs[sorted_pairs_length++]=${sorted_pair[@]}\n        sorted_pair=()\n        sorted_pair_length=0\n      elif ((sum < ${sorted_pairs[sorted_pairs_length-1]:2})); then\n        sorted_pair[sorted_pair_length++]=$i\n        sorted_pair[sorted_pair_length++]=$j\n        sorted_pair[sorted_pair_length++]=$sum\n        sorted_pairs[sorted_pairs_length++]=${sorted_pair",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local -a result\n    local -a tmp\n    local i j\n    local index\n    local -i sum\n    local -i min_sum\n    local -i min_index\n\n    for ((i = 0; i < ${#arr1[@]}; i++)) {\n        for ((j = 0; j < ${#arr2[@]}; j++)) {\n            sum=${arr1[i]}+${arr2[j]}\n            tmp[i,j]=$sum\n        }\n    }\n\n    for ((i = 0; i < k; i++)) {\n        min_sum=${tmp[0,0]}\n        min_index=0\n        for ((j = 0; j < ${#arr1[@]}; j++)) {\n            for ((index = 0; index < ${#arr2[@]}; index++)) {\n                if [[ ${tmp[j,index]} -lt $min_sum ]]; then\n                    min_sum=${tmp[j,index]}\n                    min_index=$index\n                fi\n            }\n            result[i]=\"${arr1[j]},${arr2[min_index]}\"\n            tmp[j,min_index]=999999\n        }\n    }\n\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i]+b[j]))\")\n      indices+=(\"$i $j\")\n    done\n  done\n  local -a sorted_sums=($(printf '%s\\n' \"${sums[@]}\" | sort -n))\n  local -a sorted_indices=()\n  for ((i=0; i<${#sorted_sums[@]}; i++)); do\n    local sum=${sorted_sums[i]}\n    local index\n    for ((j=0; j<${#sums[@]}; j++)); do\n      if [[ \"${sums[j]}\" == \"$sum\" ]]; then\n        index=$j\n        break\n      fi\n    done\n    sorted_indices+=(\"${indices[index]}\")\n  done\n  for ((i=0; i<k; i++)); do\n    local index=${sorted_indices[i]}\n    local a_index=${index% *}\n    local b_index=${index#* }\n    echo \"${a[a_index]} ${b[b_index]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n  local -a sorted_pairs\n  sorted_pairs=($(printf '%s\\n' \"${pairs[@]}\" | sort -n))\n  local -a result\n  for ((i=0; i<k; i++)); do\n    result+=(${sorted_pairs[i]})\n  done\n  printf '%s\\n' \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -i len_a=${#a[@]}\n  local -i len_b=${#b[@]}\n  local -i len_c=$((len_a * len_b))\n  local -a c\n  local -i c_i=0\n  for ((i=0; i<len_a; i++)); do\n    for ((j=0; j<len_b; j++)); do\n      c[c_i++]=$((a[i] + b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a1=($1)\n  local -a a2=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -a sum\n  local -a sum_sorted\n  local -a pairs_sorted\n  local -a pairs_sorted_k\n  local i\n  local j\n  local s\n  local p\n  local k_sorted\n  local k_sorted_index\n  local k_sorted_pair\n  local k_sorted_pair_index\n  local k_sorted_pair_sum\n  local k_sorted_pair_sum_index\n  local k_sorted_pair_sum_index_index\n  local k_sorted_pair_sum_index_index_index\n  local k_sorted_pair_sum_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index_index_index_index_index_index\n  local k_sorted_pair_sum_index_index_index_index_index_index_index_index_index_index_index_index_index_index\n  local k_sorted_pair_",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n  local -a sorted_pairs=($(printf '%s\\n' \"${pairs[@]}\" | sort -n))\n  local -a k_smallest_pairs=(\"${sorted_pairs[@]:0:$k}\")\n  printf '%s\\n' \"${k_smallest_pairs[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[i]} ${b[j]}\")\n        done\n    done\n    echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -a indices_sorted=()\n  local -a pairs_sorted=()\n  local -a sums_sorted=()\n  local -a pairs_k=()\n  local -a sums_k=()\n  local -a indices_k=()\n  local -a indices_sorted_k=()\n  local -a pairs_sorted_k=()\n  local -a sums_sorted_k=()\n\n  # Create pairs\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[$i]} ${b[$j]}\")\n      sums+=(\"$((a[$i]+b[$j]))\")\n      indices+=(\"$i $j\")\n    done\n  done\n\n  # Sort pairs by sums\n  for ((i=0; i<${#sums[@]}; i++)); do\n    sums_sorted+=(\"${sums[$i]}\")\n    indices_sorted+=(\"${indices[$i]}\")\n    pairs_sorted+=(\"${pairs[$i]}\")\n  done\n  for ((i=0; i<${#sums[@]}; i++)); do\n    for ((j=i+1; j<${#sums[@]}; j++)); do\n      if [[ ${sums_sorted[$i]} -gt ${sums_sorted[$j]} ]]; then\n        local tmp=${sums_sorted[$i]}\n        sums_sorted[$i]=${sums_sorted[$j]}\n        sums_sorted[$j]=$tmp\n        tmp=${indices_sorted[$i]}\n        indices_sorted[$i]=${indices_sorted[$j]}\n        indices_sorted[$j]=$tmp\n        tmp=${pairs_sorted[$",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local n=${#a[@]}\n  local m=${#b[@]}\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  local -a d\n  for ((i=0; i<k; i++)); do\n    local min=99999999\n    local min_index=0\n    for ((j=0; j<${#c[@]}; j++)); do\n      local sum=$(echo \"${c[j]}\" | awk '{print $1+$2}')\n      if ((sum < min)); then\n        min=$sum\n        min_index=$j\n      fi\n    done\n    d+=(\"${c[min_index]}\")\n    unset c[min_index]\n  done\n  echo \"${d[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -a pair\n    local i j\n    local sum\n    local -i n=${#a[@]}\n    local -i m=${#b[@]}\n    local -i count=0\n    local -i min_sum=0\n    local -i min_i=0\n    local -i min_j=0\n    local -i min_count=0\n    local -i min_index=0\n    local -i index=0\n    local -i max_index=$((n*m-1))\n    local -i max_count=$((k-1))\n    local -i max_sum=$((a[n-1]+b[m-1]))\n    local -i max_i=$((n-1))\n    local -i max_j=$((m-1))\n    local -i max_index=$((n*m-1))\n    local -i max_count=$((k-1))\n    local -i max_sum=$((a[n-1]+b[m-1]))\n    local -i max_i=$((n-1))\n    local -i max_j=$((m-1))\n    local -i max_index=$((n*m-1))\n    local -i max_count=$((k-1))\n    local -i max_sum=$((a[n-1]+b[m-1]))\n    local -i max_i=$((n-1))\n    local -i max_j=$((m-1))\n    local -i max_index=$((n*m-1))\n    local -i max_count=$((k-1))\n    local -i max_sum=$((a[n-1]+b[m-1]))\n    local -i max_i=$((n-1))\n    local -i max_j=$((m-1))\n    local -i max_index=$((n*m-1))\n    local -i max_count=$((k-1))\n    local -i max_sum=$((a[n-1]+b[m",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i j\n  local -i a_len=${#a[@]}\n  local -i b_len=${#b[@]}\n  local -i min_i min_j\n  local -i min_sum\n  local -i sum\n\n  for ((i=0; i<a_len; i++)); do\n    for ((j=0; j<b_len; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${pairs[0]}+${pairs[1]}\n    min_i=0\n    min_j=1\n    for ((j=2; j<${#pairs[@]}; j+=2)); do\n      sum=${pairs[j]}+${pairs[j+1]}\n      if ((sum < min_sum)); then\n        min_sum=$sum\n        min_i=$j\n        min_j=$((j+1))\n      fi\n    done\n    echo \"${pairs[min_i]} ${pairs[min_j]}\"\n    pairs[min_i]=${pairs[-2]}\n    pairs[min_j]=${pairs[-1]}\n    pairs=(\"${pairs[@]:0:${#pairs[@]}-2}\")\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -i m=${#a[@]}\n  local -i n=${#b[@]}\n  local -i min_i min_j min_sum\n  local -i sum\n  local -i count=0\n  local -a result=()\n  for ((i=0; i<m; i++)); do\n    for ((j=0; j<n; j++)); do\n      sum=$((a[i] + b[j]))\n      if ((count < k)); then\n        result+=(\"$sum\")\n        ((count++))\n      else\n        min_sum=${result[0]}\n        min_i=0\n        min_j=0\n        for ((i=0; i<count; i++)); do\n          if ((result[i] < min_sum)); then\n            min_sum=${result[i]}\n            min_i=$i\n          fi\n        done\n        if ((sum < min_sum)); then\n          result[min_i]=$sum\n        fi\n      fi\n    done\n  done\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local i\n  local j\n  local n\n  local m\n  local -i sum\n  local -i min\n  local -i min_i\n  local -i min_j\n  local -i count=0\n  local -i index=0\n\n  for ((i=0; i<${#a[@]}; i++)) do\n    for ((j=0; j<${#b[@]}; j++)) do\n      sum=$((a[i]+b[j]))\n      c[index]=$sum\n      d[index]=\"${a[i]} ${b[j]}\"\n      ((index++))\n    done\n  done\n\n  for ((i=0; i<${#c[@]}; i++)) do\n    if [[ $count -lt $k ]]; then\n      min=${c[i]}\n      min_i=$i\n      for ((j=i+1; j<${#c[@]}; j++)) do\n        if [[ ${c[j]} -lt $min ]]; then\n          min=${c[j]}\n          min_i=$j\n        fi\n      done\n      tmp=${c[i]}\n      c[i]=${c[min_i]}\n      c[min_i]=$tmp\n      tmp=${d[i]}\n      d[i]=${d[min_i]}\n      d[min_i]=$tmp\n      ((count++))\n    fi\n  done\n\n  for ((i=0; i<$k; i++)) do\n    echo \"${d[i]}\"\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local -a d\n    local -a e\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n    local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n    local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n    local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n    local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n    local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local yyyy\n    local zzzz",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a result\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      result+=(\"${a[i]},${b[j]}\")\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local i j\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs=()\n    local -a sums=()\n    local -a indices=()\n    local -a indices_sorted=()\n    local -a pairs_sorted=()\n    local -a sums_sorted=()\n    local i j\n    local sum\n    local index\n    local pair\n    local sum_sorted\n    local index_sorted\n    local pair_sorted\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            sum=$((a[i]+b[j]))\n            index=$((i*${#b[@]}+j))\n            pair=\"${a[i]} ${b[j]}\"\n            pairs[$index]=$pair\n            sums[$index]=$sum\n            indices[$index]=$index\n        done\n    done\n    indices_sorted=($(printf \"%s\\n\" \"${indices[@]}\" | sort -n))\n    for ((i=0; i<$k; i++)); do\n        index_sorted=${indices_sorted[i]}\n        pair_sorted=${pairs[$index_sorted]}\n        sum_sorted=${sums[$index_sorted]}\n        pairs_sorted[$i]=$pair_sorted\n        sums_sorted[$i]=$sum_sorted\n    done\n    printf \"%s\\n\" \"${pairs_sorted[@]}\"\n    printf \"%s\\n\" \"${sums_sorted[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs=()\n    local -a sums=()\n    local -a indices=()\n    local -a indices_sorted=()\n    local -a pairs_sorted=()\n    local -a sums_sorted=()\n    local i j sum\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[$i]} ${b[$j]}\")\n            sum=$((a[$i] + b[$j]))\n            sums+=(\"$sum\")\n            indices+=(\"$i $j\")\n        done\n    done\n    indices_sorted=($(printf \"%s\\n\" \"${indices[@]}\" | sort -n))\n    sums_sorted=($(printf \"%s\\n\" \"${sums[@]}\" | sort -n))\n    for ((i=0; i<k; i++)); do\n        pairs_sorted+=(\"${pairs[$((${indices_sorted[$i]}))]}\")\n    done\n    echo \"${pairs_sorted[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i\n  local j\n  local sum\n  local -i min\n  local -i min_i\n  local -i min_j\n  local -i len_a\n  local -i len_b\n  local -i len_pairs\n\n  len_a=${#a[@]}\n  len_b=${#b[@]}\n  for ((i=0; i<len_a; i++)); do\n    for ((j=0; j<len_b; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n\n  len_pairs=${#pairs[@]}\n  for ((i=0; i<k; i++)); do\n    min=${pairs[0]}\n    min_i=0\n    min_j=1\n    for ((j=0; j<len_pairs; j+=2)); do\n      if ((${pairs[j]}+${pairs[j+1]} < min)); then\n        min=${pairs[j]}+${pairs[j+1]}\n        min_i=j\n        min_j=j+1\n      fi\n    done\n    echo \"${pairs[min_i]} ${pairs[min_j]}\"\n    pairs[min_i]=${pairs[len_pairs-2]}\n    pairs[min_j]=${pairs[len_pairs-1]}\n    len_pairs-=2\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i min_i min_j min_sum\n  local -i sum\n  local -i cnt=0\n  local -i min_cnt=0\n  local -i min_i_cnt=0\n  local -i min_j_cnt=0\n  local -i min_i_cnt_prev=0\n  local -i min_j_cnt_prev=0\n  local -i min_i_cnt_prev_prev=0\n  local -i min_j_cnt_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev=0\n  local -i min_j_cnt_prev_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev_prev=0\n  local -i min_j_cnt_prev_prev_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev_prev_prev=0\n  local -i min_j_cnt_prev_prev_prev_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev_prev_prev_prev=0\n  local -i min_j_cnt_prev_prev_prev_prev_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev_prev_prev_prev_prev=0\n  local -i min_j_cnt_prev_prev_prev_prev_prev_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i min_j_cnt_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i min_i_cnt_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n ",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -a indices_sorted=()\n  local -a pairs_sorted=()\n  local -a sums_sorted=()\n  local i=0\n  local j=0\n  local sum=0\n  local index=0\n  local index_sorted=0\n  local pair=0\n  local sum_sorted=0\n  local k_smallest_pairs=()\n\n  for i in \"${!a[@]}\"; do\n    for j in \"${!b[@]}\"; do\n      sum=$((a[i] + b[j]))\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$sum\")\n      indices+=(\"$i $j\")\n    done\n  done\n\n  indices_sorted=($(printf '%s\\n' \"${indices[@]}\" | sort -n))\n  sums_sorted=($(printf '%s\\n' \"${sums[@]}\" | sort -n))\n\n  for ((i=0; i<k; i++)); do\n    index_sorted=\"${indices_sorted[i]}\"\n    sum_sorted=\"${sums_sorted[i]}\"\n    index=\"${indices[i]}\"\n    pair=\"${pairs[i]}\"\n    if [[ \"$index_sorted\" == \"$index\" ]]; then\n      k_smallest_pairs+=(\"$pair\")\n    fi\n  done\n\n  echo \"${k_smallest_pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]+b[j]))\n      d[${#d[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  for ((i=0; i<${#c[@]}; i++)); do\n    for ((j=i+1; j<${#c[@]}; j++)); do\n      if [[ ${c[i]} -gt ${c[j]} ]]; then\n        local tmp=${c[i]}\n        c[i]=${c[j]}\n        c[j]=$tmp\n        tmp=${d[i]}\n        d[i]=${d[j]}\n        d[j]=$tmp\n      fi\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    echo \"${d[i]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((${a[i]}+${b[j]})))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a result=()\n  local i j\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      result+=(\"${a[$i]} ${b[$j]}\")\n    done\n  done\n\n  result=($(printf '%s\\n' \"${result[@]}\" | sort -n))\n  echo \"${result[@]:0:$k}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -i x y\n  local -i sum\n  local -i min_sum\n  local -i min_i min_j\n  local -i count=0\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -a result=()\n\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      x=${a[i]}\n      y=${b[j]}\n      sum=$((x+y))\n      if ((count < k)); then\n        result+=($sum)\n        ((count++))\n      else\n        min_sum=${result[0]}\n        min_i=0\n        for ((l=1; l<k; l++)); do\n          if ((min_sum > result[l])); then\n            min_sum=${result[l]}\n            min_i=$l\n          fi\n        done\n        if ((sum < min_sum)); then\n          result[min_i]=$sum\n        fi\n      fi\n    done\n  done\n\n  echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]+b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n  local -a sorted=($(printf \"%s\\n\" \"${pairs[@]}\" | sort -n))\n  local -a result\n  for ((i=0; i<k; i++)); do\n    result+=(${sorted[i]})\n  done\n  echo ${result[@]}",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -a pairs\n  local -a pair\n  local -i k=$3\n  local -i i j\n  local -i len1=${#arr1[@]}\n  local -i len2=${#arr2[@]}\n  local -i sum\n\n  for ((i=0; i<len1; i++)); do\n    for ((j=0; j<len2; j++)); do\n      pair=(${arr1[i]} ${arr2[j]})\n      sum=$((arr1[i] + arr2[j]))\n      pairs[sum]=${pair[@]}\n    done\n  done\n\n  local -i count=0\n  for i in \"${!pairs[@]}\"; do\n    echo \"${pairs[$i]}\"\n    count=$((count + 1))\n    if [[ $count -eq $k ]]; then\n      break\n    fi\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a sums\n  local -a indices\n  local i j\n  local sum\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i] + b[j]))\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$sum\")\n      indices+=(\"$i $j\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min=${sums[0]}\n    min_index=0\n    for ((j=1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[j]} -lt $min ]]; then\n        min=${sums[j]}\n        min_index=$j\n      fi\n    done\n    echo \"${pairs[min_index]}\"\n    unset pairs[min_index]\n    unset sums[min_index]\n    unset indices[min_index]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n  local -i min_sum=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i len_a=${#a[@]}\n  local -i len_b=${#b[@]}\n  local -i len_pairs=0\n\n  while [ $len_pairs -lt $k ] && [ $i -lt $len_a ] && [ $j -lt $len_b ]; do\n    min_sum=$((a[i] + b[j]))\n    min_i=$i\n    min_j=$j\n    for ((i=0; i<len_a; i++)); do\n      for ((j=0; j<len_b; j++)); do\n        sum=$((a[i] + b[j]))\n        if [ $sum -lt $min_sum ]; then\n          min_sum=$sum\n          min_i=$i\n          min_j=$j\n        fi\n      done\n    done\n    pairs+=($min_i $min_j)\n    a[min_i]=$((a[min_i] + 1))\n    b[min_j]=$((b[min_j] + 1))\n    len_pairs=$((len_pairs + 1))\n  done\n\n  echo \"${pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  local sum\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i max_sum=$((a[n-1] + b[m-1]))\n  local -i min_sum=$((a[0] + b[0]))\n  local -i min_sum_index=0\n  local -i max_sum_index=0\n  local -i min_sum_i=0\n  local -i min_sum_j=0\n  local -i max_sum_i=0\n  local -i max_sum_j=0\n  local -i min_sum_count=0\n  local -i max_sum_count=0\n  local -i min_sum_count_i=0\n  local -i min_sum_count_j=0\n  local -i max_sum_count_i=0\n  local -i max_sum_count_j=0\n  local -i min_sum_count_max=0\n  local -i max_sum_count_max=0\n  local -i min_sum_count_max_i=0\n  local -i min_sum_count_max_j=0\n  local -i max_sum_count_max_i=0\n  local -i max_sum_count_max_j=0\n  local -i min_sum_count_max_index=0\n  local -i max_sum_count_max_index=0\n  local -i min_sum_count_max_index_i=0\n  local -i min_sum_count_max_index_j=0\n  local -i max_sum_count_max_index_i=0\n  local -i max_sum_count_max_index_j=0\n  local -i min_sum_count_max_index_count=0\n  local -i max_sum_count_max_index_count=0\n  local -i min_sum_count_",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sum=()\n  local -a index=()\n  local -a result=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sum+=(\"$((a[i]+b[j]))\")\n      index+=(\"$i $j\")\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    local min=${sum[0]}\n    local min_index=0\n    for ((j=1; j<${#sum[@]}; j++)); do\n      if [[ ${sum[j]} -lt $min ]]; then\n        min=${sum[j]}\n        min_index=$j\n      fi\n    done\n    result+=(\"${pairs[min_index]}\")\n    unset sum[min_index]\n    unset pairs[min_index]\n    unset index[min_index]\n    sum=(${sum[@]})\n    pairs=(${pairs[@]})\n    index=(${index[@]})\n  done\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -i i j\n  local -i m=${#a[@]}\n  local -i n=${#b[@]}\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i j\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[${#c[@]}]=\"${a[i]} ${b[j]}\"\n        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(${a[i]} ${b[j]})\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      echo \"${a[i]} ${b[j]}\"\n    done\n  done | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  local sum\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      sum=$((a[i]+b[j]))\n      pairs[$sum]=${pair[@]}\n    done\n  done\n\n  local -a keys=($(printf \"%s\\n\" \"${!pairs[@]}\" | sort -n))\n  local -a result\n  for ((i=0; i<k && i<${#keys[@]}; i++)); do\n    result[$i]=${pairs[${keys[i]}]}\n  done\n\n  echo ${result[@]}",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local k=$3\n  local -a result\n  local -a tmp\n  local i j\n\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      tmp+=(\"${arr1[i]} ${arr2[j]}\")\n    done\n  done\n\n  result=($(printf \"%s\\n\" \"${tmp[@]}\" | sort -n | head -n $k))\n\n  echo \"${result[@]}\"",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local -a pairs=()\n    local -a sums=()\n    local -a result=()\n    local i j sum\n\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        for ((j=0; j<${#arr2[@]}; j++)); do\n            sum=$((arr1[i] + arr2[j]))\n            pairs+=(\"${arr1[i]} ${arr2[j]}\")\n            sums+=(\"$sum\")\n        done\n    done\n\n    IFS=$'\\n' sorted=($(sort -n <<<\"${sums[*]}\"))\n    unset IFS\n\n    for ((i=0; i<k; i++)); do\n        for ((j=0; j<${#sums[@]}; j++)); do\n            if [[ ${sorted[i]} -eq ${sums[j]} ]]; then\n                result+=(\"${pairs[j]}\")\n            fi\n        done\n    done\n\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a pairs\n    local -i k=$3\n    local -i i j\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\n    for ((i=0; i<len1; i++)); do\n        for ((j=0; j<len2; j++)); do\n            pairs+=(\"${list1[i]} ${list2[j]}\")\n        done\n    done\n\n    echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      echo \"${a[i]} ${b[j]}\"\n    done\n  done | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n ",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -a pair\n    local -i i\n    local -i j\n    local -i n=${#a[@]}\n    local -i m=${#b[@]}\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local -",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i w=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i l=0\n  local -i min=0\n  local -i max=0\n  local -i sum=0\n  local -i index=0\n  local -i temp=0\n  local -i temp2=0\n  local -i temp3=0\n  local -i temp4=0\n  local -i temp5=0\n  local -i temp6=0\n  local -i temp7=0\n  local -i temp8=0\n  local -i temp9=0\n  local -i temp10=0\n  local -i temp11=0\n  local -i temp12=0\n  local -i temp13=0\n  local -i temp14=0\n  local -i temp15=0\n  local -i temp16=0\n  local -i temp17=0\n  local -i temp18=0\n  local -i temp19=0\n  local -i temp20=0\n  local -i temp21=0\n  local -i temp22=0\n  local -i temp23=0\n  local -i temp24=0\n  local -i temp25=0\n  local -i temp26=0\n  local -i temp27=0\n  local -i temp28=0\n  local -i temp29=0\n  local -i temp30",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a result\n  local i\n  local j\n  local pair\n  local sum\n  local min_sum\n  local min_pair\n  local min_i\n  local min_j\n  local min_pair_index\n  local pair_index\n\n  for ((i = 0; i < ${#a[@]}; i++)); do\n    for ((j = 0; j < ${#b[@]}; j++)); do\n      pair=\"${a[i]} ${b[j]}\"\n      sum=$((a[i] + b[j]))\n      pairs[$sum]=\"$pair\"\n    done\n  done\n\n  for ((i = 0; i < k; i++)); do\n    min_sum=${!pairs[@]}\n    min_pair=${pairs[$min_sum]}\n    min_i=${min_pair% *}\n    min_j=${min_pair#* }\n    min_pair_index=$((min_i + min_j))\n    result[$i]=\"$min_pair\"\n    unset pairs[$min_sum]\n    for ((pair_index = min_pair_index + 1; pair_index < ${#pairs[@]}; pair_index++)); do\n      if [[ ${pairs[$pair_index]} ]]; then\n        min_sum=$pair_index\n        min_pair=${pairs[$min_sum]}\n        min_i=${min_pair% *}\n        min_j=${min_pair#* }\n        min_pair_index=$((min_i + min_j))\n        break\n      fi\n    done\n  done\n\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a pair=()\n  local -a sums=()\n  local -a sum=()\n  local i\n  local j\n  local s\n  local n\n  local m\n  local l\n  local p\n  local q\n  local r\n  local t\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i x\n  local -i y\n  local -i z\n\n  n=${#a[@]}\n  m=${#b[@]}\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      s=$((a[i]+b[j]))\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$s\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    pair=(${pairs[i]})\n    sum=(${sums[i]})\n    for ((j=i+1; j<n*m; j++)); do\n      if ((sums[j]<sum)); then\n        pair=(${pairs[j]})\n        sum=(${sums[j]})\n        pairs[j]=${pairs[i]}\n        sums[j]=${sums[i]}\n        pairs[i]=${pair[@]}\n        sums[i]=${sum[@]}\n      fi\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    pair=(${pairs[i]})\n    sum=(${sums[i]})\n    echo \"${pair[0]} ${pair[1]}\"\n  done",
    "  declare -a a=($1)\n  declare -a b=($2)\n  declare -a c\n  declare -i k=$3\n  declare -i i=0\n  declare -i j=0\n  declare -i l=0\n  declare -i m=0\n  declare -i n=0\n  declare -i o=0\n  declare -i p=0\n  declare -i q=0\n  declare -i r=0\n  declare -i s=0\n  declare -i t=0\n  declare -i u=0\n  declare -i v=0\n  declare -i w=0\n  declare -i x=0\n  declare -i y=0\n  declare -i z=0\n  declare -i aa=0\n  declare -i bb=0\n  declare -i cc=0\n  declare -i dd=0\n  declare -i ee=0\n  declare -i ff=0\n  declare -i gg=0\n  declare -i hh=0\n  declare -i ii=0\n  declare -i jj=0\n  declare -i kk=0\n  declare -i ll=0\n  declare -i mm=0\n  declare -i nn=0\n  declare -i oo=0\n  declare -i pp=0\n  declare -i qq=0\n  declare -i rr=0\n  declare -i ss=0\n  declare -i tt=0\n  declare -i uu=0\n  declare -i vv=0\n  declare -i ww=0\n  declare -i xx=0\n  declare -i yy=0\n  declare -i zz=0\n  declare -i aaa=0\n  declare -i bbb=0\n  declare -i ccc=0\n  declare -i ddd=0\n  declare -i eee=0\n  declare -i fff=0\n  declare -i ggg=0\n  declare -i hhh=0\n  declare -i iii=0\n  declare -i jjj=0\n  declare -i kkk=0\n  declare -i lll=0\n  declare -i mmm=0\n",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local -a d\n    local i\n    local j\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[$i,$j]=$((a[$i]+b[$j]))\n        done\n    done\n    for ((i=0; i<${#c[@]}; i++)); do\n        d[$i]=${c[$i]}\n    done\n    for ((i=0; i<${#d[@]}; i++)); do\n        for ((j=i+1; j<${#d[@]}; j++)); do\n            if [[ ${d[$i]} -gt ${d[$j]} ]]; then\n                l=${d[$i]}\n                d[$i]=${d[$j]}\n                d[$j]=$l\n            fi\n        done\n    done\n    for ((i=0; i<${#d[@]}; i++)); do\n        for ((j=0; j<${#c[@]}; j++)); do\n            if [[ ${d[$i]} -eq ${c[$j]} ]]; then\n                m=${c[$j]}\n                c[$j]=0\n                break\n            fi\n        done\n        for ((n=0; n<${#a[@]}; n++)); do\n            for ((o=0; o<${#b[@]}; o++)); do\n                if [[ $m -eq $((a[$n]+b[$o])) ]]; then\n                    p=${a[$n]}\n                    q=${b[$o]}\n                    break\n                fi\n            done\n        done\n        r[",
    "  local -n list1=$1\n  local -n list2=$2\n  local k=$3\n  local i j\n  local -a pairs\n  local -i index=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      pairs[index++]=$((list1[i]+list2[j]))\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -a pairs\n  local -i k=$3\n  local -i i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      pairs+=(\"${arr1[i]} ${arr2[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a\n  local -a b\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a A\n  local -a B\n  local -a C\n  local -a D\n  local -a E\n  local -a F\n  local -a G\n  local -a H\n  local -a I\n  local -a J\n  local -a K\n  local -a L\n  local -a M\n  local -a N\n  local -a O\n  local -a P\n  local -a Q\n  local -a R\n  local -a S\n  local -a T\n  local -a U\n  local -a V\n  local -a W\n  local -a X\n  local -a Y\n  local -a Z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aA\n  local -a aB\n  local -a aC\n  local -a aD\n  local -a aE\n  local",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | sort -n | head -n $k",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -a pair\n    local -a pair_sums\n    local -a pair_sum\n    local -i i\n    local -i j\n    local -i k_i\n    local -i k_j\n    local -i k_sum\n    local -i sum\n    local -i min_sum\n    local -i min_i\n    local -i min_j\n    local -i min_k\n    local -i min_k_i\n    local -i min_k_j\n    local -i min_k_sum\n    local -i min_k_sum_i\n    local -i min_k_sum_j\n    local -i min_k_sum_sum\n    local -i min_k_sum_sum_i\n    local -i min_k_sum_sum_j\n    local -i min_k_sum_sum_sum\n    local -i min_k_sum_sum_sum_i\n    local -i min_k_sum_sum_sum_j\n    local -i min_k_sum_sum_sum_sum\n    local -i min_k_sum_sum_sum_sum_i\n    local -i min_k_sum_sum_sum_sum_j\n    local -i min_k_sum_sum_sum_sum_sum\n    local -i min_k_sum_sum_sum_sum_sum_i\n    local -i min_k_sum_sum_sum_sum_sum_j\n    local -i min_k_sum_sum_sum_sum_sum_sum\n    local -i min_k_sum_sum_sum_sum_sum_sum_i\n    local -i min_k_sum_sum_sum_sum_sum_sum_j\n    local -i min_k_sum_sum_sum_sum_sum_sum_sum\n    local -i min_k_sum_sum_sum_sum_sum_sum_sum_i\n    local -i min_k_sum_sum_sum_sum_sum_sum_sum_",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -i i=0 j=0\n  local -i len_a=${#a[@]}\n  local -i len_b=${#b[@]}\n  local -i len_pairs=${#pairs[@]}\n  local -i sum\n  local -i min_sum\n  local -i min_i\n  local -i min_j\n  local -i min_index\n\n  while [[ $len_pairs -lt $k ]]; do\n    min_sum=999999\n    for ((i=0; i<len_a; i++)); do\n      for ((j=0; j<len_b; j++)); do\n        sum=$((a[i] + b[j]))\n        if [[ $sum -lt $min_sum ]]; then\n          min_sum=$sum\n          min_i=$i\n          min_j=$j\n        fi\n      done\n    done\n    pairs+=($min_sum)\n    a[min_i]=999999\n    b[min_j]=999999\n    len_pairs=${#pairs[@]}\n  done\n\n  echo ${pairs[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a result\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(${a[i]} ${b[j]})\n    done\n  done\n\n  for ((i=0; i<${#pairs[@]}; i+=2)); do\n    result+=($((${pairs[i]} + ${pairs[i+1]})))\n  done\n\n  IFS=$'\\n' sorted=($(sort -n <<<\"${result[*]}\"))\n  unset IFS\n\n  for ((i=0; i<k; i++)); do\n    echo -n \"${sorted[i]} \"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -a indices_sorted=()\n  local i=0\n  local j=0\n  local sum=0\n  local index=0\n  local index_sorted=0\n  local pair=''\n  local pairs_string=''\n  local pairs_string_sorted=''\n\n  for i in \"${!a[@]}\"; do\n    for j in \"${!b[@]}\"; do\n      sum=$((a[i] + b[j]))\n      index=\"$i,$j\"\n      pairs+=(\"$index\")\n      sums+=(\"$sum\")\n    done\n  done\n\n  indices=($(printf \"%s\\n\" \"${sums[@]}\" | sort -n | head -n \"$k\" | xargs -I {} printf \"%s\\n\" \"${!sums[@]}\" | grep -w \"{}\"))\n\n  for index in \"${indices[@]}\"; do\n    index_sorted=$((index + 1))\n    indices_sorted+=(\"$index_sorted\")\n  done\n\n  for index_sorted in \"${indices_sorted[@]}\"; do\n    pair=\"${pairs[$index_sorted]}\"\n    pairs_string_sorted+=\"$pair \"\n  done\n\n  for index in \"${!pairs[@]}\"; do\n    pair=\"${pairs[$index]}\"\n    pairs_string+=\"$pair \"\n  done\n\n  echo \"$pairs_string\"\n  echo \"$pairs_string_sorted\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | sort -n | head -n $k | tr ' ' ','",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local -a ba\n    local -a bb\n    local -a bc\n    local -a bd\n    local -a be\n    local -a bf\n    local -a bg\n    local -a bh\n    local -a bi\n    local -a bj\n    local -a bk\n    local -a bl\n    local -a bm\n    local -a bn\n    local -a bo\n    local -a bp\n    local -a bq\n    local -a br\n    local -a bs\n    local -a bt\n    local -a bu\n    local -a bv\n    local -a bw\n    local -a bx\n    local -a by\n    local -a bz\n    local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c=()\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i] + b[j])))\n    done\n  done\n  printf '%s\\n' \"${c[@]}\" | sort -n | head -n $k",
    "  local -a first_array=($1)\n  local -a second_array=($2)\n  local k=$3\n  local -a result=()\n  local i j\n  for ((i=0; i<${#first_array[@]}; i++)); do\n    for ((j=0; j<${#second_array[@]}; j++)); do\n      result+=($((first_array[i] + second_array[j])))\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -a pairs\n  local -i k=$3\n  local -i i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      pairs+=($((${arr1[$i]}+${arr2[$j]})))\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local i\n  local j\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]+b[j]))\n      d[${#d[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  for ((i=0; i<${#c[@]}; i++)); do\n    for ((j=i+1; j<${#c[@]}; j++)); do\n      if ((c[i] > c[j])); then\n        l=${c[i]}\n        m=${d[i]}\n        c[i]=${c[j]}\n        d[i]=${d[j]}\n        c[j]=$l\n        d[j]=$m\n      fi\n    done\n  done\n  for ((i=0; i<$k; i++)); do\n    if ((i < ${#c[@]})); then\n      echo \"${d[i]}\"\n    fi\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i k=$3\n  local -i i j\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i min\n  local -i min_i\n  local -i min_j\n  local -i count=0\n  local -a result\n\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      if ((count < k)); then\n        result[count++]=\"${a[i]} ${b[j]}\"\n      else\n        min=${a[0]}+${b[0]}\n        min_i=0\n        min_j=0\n        for ((i=0; i<n; i++)); do\n          for ((j=0; j<m; j++)); do\n            if ((${a[i]}+${b[j]} < min)); then\n              min=${a[i]}+${b[j]}\n              min_i=$i\n              min_j=$j\n            fi\n          done\n        done\n        if ((${a[min_i]}+${b[min_j]} < ${a[i]}+${b[j]})); then\n          result[min_i*m+min_j]=\"${a[i]} ${b[j]}\"\n        fi\n      fi\n    done\n  done\n\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -i i=0\n  local -i j=0\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i sum=0\n  local -i min_sum=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_index=0\n\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      sum=$((a[i] + b[j]))\n      sums[$((i*m+j))]=$sum\n      indices[$((i*m+j))]=\"$i $j\"\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${sums[0]}\n    min_index=0\n    for ((j=1; j<n*m; j++)); do\n      if [[ ${sums[j]} -lt $min_sum ]]; then\n        min_sum=${sums[j]}\n        min_index=$j\n      fi\n    done\n    sums[$min_index]=$((min_sum+1))\n    read min_i min_j <<< \"${indices[$min_index]}\"\n    pairs[$i]=\"[${a[$min_i]}, ${b[$min_j]}]\"\n  done\n\n  echo \"${pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sum=()\n  local -a result=()\n  local i j\n  local sum_index=0\n  local result_index=0\n  local sum_length=0\n  local result_length=0\n  local min_sum=0\n  local min_sum_index=0\n  local min_sum_a=0\n  local min_sum_b=0\n  local min_sum_a_index=0\n  local min_sum_b_index=0\n  local a_length=${#a[@]}\n  local b_length=${#b[@]}\n\n  for ((i=0; i<a_length; i++)); do\n    for ((j=0; j<b_length; j++)); do\n      sum[$sum_index]=$((a[i]+b[j]))\n      ((sum_index++))\n    done\n  done\n  sum_length=${#sum[@]}\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${sum[0]}\n    min_sum_index=0\n    for ((j=1; j<sum_length; j++)); do\n      if [[ ${sum[j]} -lt $min_sum ]]; then\n        min_sum=${sum[j]}\n        min_sum_index=$j\n      fi\n    done\n    result[$result_index]=$min_sum\n    ((result_index++))\n    sum[$min_sum_index]=999999\n  done\n  result_length=${#result[@]}\n\n  for ((i=0; i<result_length; i++)); do\n    min_sum_a=${a[0]}\n    min_sum_b=${b[0]}\n    min_sum_a_index=0\n    min_sum_b_index=0\n    for ((j=0; j<a_length; j++)); do\n      if [[ ${a[j]} -lt $min_sum_a ]]; then\n        min_",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i j\n  local -i sum\n  local -i min\n  local -i min_i min_j\n  local -i count=0\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=${a[i]}+${b[j]}\n      if (( count < k )); then\n        pairs[count]=$sum\n        (( count++ ))\n      else\n        min=${pairs[0]}\n        min_i=0\n        min_j=0\n        for ((i=0; i<${#pairs[@]}; i++)); do\n          if (( ${pairs[i]} < min )); then\n            min=${pairs[i]}\n            min_i=$i\n          fi\n        done\n        if (( sum < min )); then\n          pairs[min_i]=$sum\n        fi\n      fi\n    done\n  done\n\n  echo ${pairs[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -a indices_sorted=()\n  local -a pairs_sorted=()\n  local -a sums_sorted=()\n  local i\n  local j\n  local index\n  local sum\n  local pair\n  local pairs_sorted_string\n  local sums_sorted_string\n  local indices_sorted_string\n  local pairs_string\n  local sums_string\n  local indices_string\n  local pairs_sorted_string_length\n  local sums_sorted_string_length\n  local indices_sorted_string_length\n  local pairs_string_length\n  local sums_string_length\n  local indices_string_length\n  local pairs_sorted_string_length_max\n  local sums_sorted_string_length_max\n  local indices_sorted_string_length_max\n  local pairs_string_length_max\n  local sums_string_length_max\n  local indices_string_length_max\n  local pairs_sorted_string_length_max_length\n  local sums_sorted_string_length_max_length\n  local indices_sorted_string_length_max_length\n  local pairs_string_length_max_length\n  local sums_string_length_max_length\n  local indices_string_length_max_length\n  local pairs_sorted_string_length_max_length_length\n  local sums_sorted_string_length_max_length_length\n  local indices_sorted_string_length_max_length_length\n  local pairs_string_length_max_length_length\n  local sums_string_length_max_length_length\n  local indices_string_length_max_length_length\n  local pairs_sorted_string_length_max_length_length_length\n  local sums_sorted_string_length_max_length_length_length\n  local indices_sorted_string_length_max_length_length_length\n  local pairs_string_",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(${pair[@]})\n    done\n  done\n  echo ${pairs[@]} | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local k=$3\n  local -a result\n  local -i i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++)); do\n      result+=($((arr1[i]+arr2[j])))\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      echo \"${a[i]} ${b[j]}\"\n    done\n  done | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local i j sum\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i]+b[j]))\n      pairs+=($sum)\n    done\n  done\n  echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sum=()\n  local -a index=()\n  local -a result=()\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n  local n=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs=()\n    local -i i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[i]} ${b[j]}\")\n        done\n    done\n    echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i] + b[j]))\")\n    done\n  done\n  for ((i=0; i<${#sums[@]}; i++)); do\n    for ((j=i+1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[i]} -gt ${sums[j]} ]]; then\n        local tmp=${sums[i]}\n        sums[i]=${sums[j]}\n        sums[j]=$tmp\n        tmp=${pairs[i]}\n        pairs[i]=${pairs[j]}\n        pairs[j]=$tmp\n      fi\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    echo ${pairs[i]}\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a bb\n  local -a cc\n  local -a dd\n  local -a ee\n  local -a ff\n  local -a gg\n  local -a hh\n  local -a ii\n  local -a jj\n  local -a kk\n  local -a ll\n  local -a mm\n  local -a nn\n  local -a oo\n  local -a pp\n  local -a qq\n  local -a rr\n  local -a ss\n  local -a tt\n  local -a uu\n  local -a vv\n  local -a ww\n  local -a xx\n  local -a yy\n  local -a zz\n  local -a aaa\n  local -a bbb\n  local -a ccc\n  local -a ddd\n  local -a eee\n  local -a fff\n  local -a ggg\n  local -a hhh\n  local -a iii\n  local -a jjj\n  local -a kkk\n  local -a lll\n  local -a mmm\n  local -a nnn\n  local -a ooo\n  local -a ppp\n  local -a qqq\n  local -a rrr\n  local -a sss\n  local -a ttt\n  local -a uuu\n  local -a vvv\n  local -a www\n  local -a",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a pairs\n    local -i k=$3\n    local -i i j\n    local -i n1=${#a1[@]}\n    local -i n2=${#a2[@]}\n    local -i n=n1*n2\n    local -i m=0\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i tmp\n    local -i tmp2\n    local -i tmp3\n    local -i tmp4\n    local -i tmp5\n    local -i tmp6\n    local -i tmp7\n    local -i tmp8\n    local -i tmp9\n    local -i tmp10\n    local -i tmp11\n    local -i tmp12\n    local -i tmp13\n    local -i tmp14\n    local -i tmp15\n    local -i tmp16\n    local -i tmp17\n    local -i tmp18\n    local -i tmp19\n    local -i tmp20\n    local -i tmp21\n    local -i tmp22\n    local -i tmp23\n    local -i tmp24\n    local -i tmp25\n    local -i tmp26\n    local -i tmp27\n    local -i tmp28\n    local -i tmp29\n    local -i tmp30\n    local -i tmp31\n    local -i tmp32\n    local -i tmp33\n    local -i tmp34\n    local -i tmp35\n    local -i tmp36\n    local -i tmp37\n    local -i tmp38\n    local -i tmp39\n    local -i tmp40\n    local -i tmp41\n    local -i tmp42\n    local -i tmp43\n    local -i tmp44\n    local -i tmp45\n    local -i tmp46\n    local -i tmp47\n    local -i tmp48\n    local -i tmp49\n    local -i tmp50\n    local -",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -a pair\n    local -i i\n    local -i j\n    local -i k_i\n    local -i k_j\n    local -i k_sum\n    local -i sum\n    local -i i_min\n    local -i j_min\n    local -i sum_min\n\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pair=(${a[i]} ${b[j]})\n            pairs+=(\"${pair[@]}\")\n        done\n    done\n\n    for ((i=0; i<k; i++)); do\n        sum_min=9999999999\n        for ((j=0; j<${#pairs[@]}; j++)); do\n            pair=(${pairs[j]})\n            k_i=${pair[0]}\n            k_j=${pair[1]}\n            k_sum=$((k_i + k_j))\n            if ((k_sum < sum_min)); then\n                sum_min=$k_sum\n                i_min=$k_i\n                j_min=$k_j\n            fi\n        done\n        echo \"$i_min $j_min\"\n        pairs=(${pairs[@]/$i_min $j_min/})\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i j\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c+=($((a[i]+b[j])))\n        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -a sums\n    local i j\n\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[i]} ${b[j]}\")\n            sums+=(\"$((a[i]+b[j]))\")\n        done\n    done\n\n    for ((i=0; i<${#sums[@]}; i++)); do\n        for ((j=i+1; j<${#sums[@]}; j++)); do\n            if [[ ${sums[i]} -gt ${sums[j]} ]]; then\n                local tmp=${sums[i]}\n                sums[i]=${sums[j]}\n                sums[j]=$tmp\n                tmp=${pairs[i]}\n                pairs[i]=${pairs[j]}\n                pairs[j]=$tmp\n            fi\n        done\n    done\n\n    for ((i=0; i<k; i++)); do\n        echo ${pairs[i]}\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local -a ba\n    local -a bb\n    local -a bc\n    local -a bd\n    local -a be\n    local -a bf\n    local -a bg\n    local -a bh\n    local -a bi\n    local -a bj\n    local -a bk\n    local -a bl\n    local -a bm\n    local -a bn\n    local -a bo\n    local -a bp\n    local -a bq\n    local -a br\n    local -a bs\n    local -a bt\n    local -a bu\n    local -a bv\n    local -a bw\n    local -a bx\n    local -a by\n    local -a bz\n    local -a ca\n",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs=()\n    local -a sums=()\n    local i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[i]} ${b[j]}\")\n            sums+=(\"$((a[i]+b[j]))\")\n        done\n    done\n    local -a sorted_sums=($(printf '%s\\n' \"${sums[@]}\" | sort -n))\n    local -a sorted_pairs=()\n    for ((i=0; i<${#sorted_sums[@]}; i++)); do\n        for ((j=0; j<${#sums[@]}; j++)); do\n            if [[ \"${sorted_sums[i]}\" == \"${sums[j]}\" ]]; then\n                sorted_pairs+=(\"${pairs[j]}\")\n            fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n        echo \"${sorted_pairs[i]}\"\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | sort -n | head -n $k | tr ' ' ','",
    "  local -a a\n  local -a b\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a A\n  local -a B\n  local -a C\n  local -a D\n  local -a E\n  local -a F\n  local -a G\n  local -a H\n  local -a I\n  local -a J\n  local -a K\n  local -a L\n  local -a M\n  local -a N\n  local -a O\n  local -a P\n  local -a Q\n  local -a R\n  local -a S\n  local -a T\n  local -a U\n  local -a V\n  local -a W\n  local -a X\n  local -a Y\n  local -a Z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aA\n  local -a aB\n  local -a aC\n  local -a aD\n  local -a aE\n  local",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  printf \"%s\\n\" \"${pairs[@]}\" | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local -i i j k=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[k++]=$((a[i]+b[j]))\n        done\n    done\n    IFS=$'\\n'\n    echo \"${c[*]}\" | sort -n | head -n $3",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local i=0\n  local j=0\n  local pair\n  local sum\n  local -i min_sum\n  local -i min_i\n  local -i min_j\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i n_pairs=0\n\n  while [ $n_pairs -lt $k ] && [ $i -lt $n ] && [ $j -lt $m ]; do\n    min_sum=${a[$i]}+${b[$j]}\n    min_i=$i\n    min_j=$j\n    for i in $(seq $i $((n-1))); do\n      for j in $(seq $j $((m-1))); do\n        sum=${a[$i]}+${b[$j]}\n        if [ $sum -lt $min_sum ]; then\n          min_sum=$sum\n          min_i=$i\n          min_j=$j\n        fi\n      done\n    done\n    pair=\"[${a[$min_i]},${b[$min_j]}]\"\n    pairs[$n_pairs]=$pair\n    n_pairs=$((n_pairs+1))\n    i=$((min_i+1))\n    j=$((min_j+1))\n  done\n  echo ${pairs[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a result=()\n  local -i i=0 j=0\n  local -i a_len=${#a[@]}\n  local -i b_len=${#b[@]}\n  local -i sum\n  local -i min_sum=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i i_start=0\n  local -i j_start=0\n  local -i i_end=0\n  local -i j_end=0\n  local -i i_step=0\n  local -i j_step=0\n  local -i i_step_count=0\n  local -i j_step_count=0\n  local -i i_step_count_max=0\n  local -i j_step_count_max=0\n  local -i i_step_count_min=0\n  local -i j_step_count_min=0\n  local -i i_step_count_min_max=0\n  local -i j_step_count_min_max=0\n  local -i i_step_count_max_min=0\n  local -i j_step_count_max_min=0\n  local -i i_step_count_min_min=0\n  local -i j_step_count_min_min=0\n  local -i i_step_count_max_max=0\n  local -i j_step_count_max_max=0\n  local -i i_step_count_min_max_min=0\n  local -i j_step_count_min_max_min=0\n  local -i i_step_count_max_min_max=0\n  local -i j_step_count_max_min_max=0\n  local -i i_step_count_min_min_max=0\n  local -i j_step_count_min_min_max=0\n  local -i i_step_count_max_max_min=0\n  local -i j_",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local sum\n  local i\n  local j\n  local index\n  local min_index\n  local min_sum\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((${a[i]} + ${b[j]}))\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$sum\")\n      indices+=(\"$i $j\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${sums[0]}\n    min_index=0\n    for ((j=1; j<${#sums[@]}; j++)); do\n      if [[ ${sums[j]} -lt $min_sum ]]; then\n        min_sum=${sums[j]}\n        min_index=$j\n      fi\n    done\n    echo \"${pairs[min_index]}\"\n    unset pairs[min_index]\n    unset sums[min_index]\n    unset indices[min_index]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pair=(${a[i]} ${b[j]})\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n  local -a sorted\n  local -a sorted_pairs\n  local -a sorted_pair\n  local -a tmp\n  local -a tmp_pair\n  local -i n=${#pairs[@]}\n  local -i i j\n  for ((i=0; i<n; i++)); do\n    sorted+=($i)\n  done\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<n; j++)); do\n      sorted_pair=(${pairs[${sorted[i]}]})\n      tmp_pair=(${pairs[${sorted[j]}]})\n      if (( ${sorted_pair[0]}+${sorted_pair[1]} > ${tmp_pair[0]}+${tmp_pair[1]} )); then\n        tmp=${sorted[i]}\n        sorted[i]=${sorted[j]}\n        sorted[j]=$tmp\n      fi\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    sorted_pair=(${pairs[${sorted[i]}]})\n    sorted_pairs+=(\"${sorted_pair[@]}\")\n  done\n  echo \"${sorted_pairs[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i=0\n  local -i j=0\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i sum\n  local -i min_sum\n  local -i min_i\n  local -i min_j\n\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      sum=$((a[i]+b[j]))\n      pair=($sum $i $j)\n      pairs[$i,$j]=${pair[@]}\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_sum=${pairs[0,0]%% *}\n    min_i=0\n    min_j=0\n    for ((j=0; j<m; j++)); do\n      if [[ ${pairs[0,$j]} ]]; then\n        if [[ ${pairs[0,$j]%% *} -lt $min_sum ]]; then\n          min_sum=${pairs[0,$j]%% *}\n          min_i=0\n          min_j=$j\n        fi\n      fi\n    done\n    for ((j=1; j<n; j++)); do\n      if [[ ${pairs[$j,0]} ]]; then\n        if [[ ${pairs[$j,0]%% *} -lt $min_sum ]]; then\n          min_sum=${pairs[$j,0]%% *}\n          min_i=$j\n          min_j=0\n        fi\n      fi\n    done\n    echo \"${a[min_i]} ${b[min_j]}\"\n    unset pairs[$min_i,$min_j]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -i i j\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i min_index\n  local -i min_sum\n  local -i sum\n\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i] + b[j]))\")\n      indices+=(\"$i $j\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min_index=0\n    min_sum=${sums[0]}\n    for ((j=1; j<${#sums[@]}; j++)); do\n      sum=${sums[j]}\n      if ((sum < min_sum)); then\n        min_index=$j\n        min_sum=$sum\n      fi\n    done\n    echo \"${pairs[min_index]}\"\n    unset pairs[min_index]\n    unset sums[min_index]\n    unset indices[min_index]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indexes=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[$i]} ${b[$j]}\")\n      sums+=(\"$((a[$i]+b[$j]))\")\n      indexes+=(\"$i $j\")\n    done\n  done\n  local -a sorted_sums=($(printf \"%s\\n\" \"${sums[@]}\" | sort -n))\n  local -a sorted_indexes=()\n  for ((i=0; i<${#sorted_sums[@]}; i++)); do\n    sorted_indexes+=($(printf \"%s\\n\" \"${!sums[@]}\" | grep -Fx \"${sorted_sums[$i]}\"))\n  done\n  for ((i=0; i<k; i++)); do\n    echo \"${pairs[${sorted_indexes[$i]}]}\"\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]+b[j]))\n    done\n  done\n  echo ${c[@]} | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local -i i\n  local -i j\n  local -i n\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i sum\n  local -i min\n  local -i min_i\n  local -i min_j\n  local -i min_p\n  local -i min_q\n  local -i min_r\n  local -i min_s\n  local -i min_t\n  local -i min_u\n  local -i min_v\n  local -i min_w\n  local -i min_x\n  local -i min_y\n  local -i min_z\n  local -i min_sum\n  local -i min_pair_i\n  local -i min_pair_j\n  local -i min_pair_p\n  local -i min_pair_q\n  local -i min_pair_r\n  local -i min_pair_s\n  local -i min_pair_t\n  local -i min_pair_u\n  local -i min_pair_v\n  local -i min_pair_w\n  local -i min_pair_x\n  local -i min_pair_y\n  local -i min_pair_z\n  local -i min_pair_sum\n  local -i min_pair_index\n  local -i pair_index\n  local -i pair_count\n  local -i pair_sum\n  local -i pair_i\n  local -i pair_j\n  local -i pair_p\n  local -i pair_q\n  local -i pair_r\n  local -i pair_s\n  local -i pair_t\n  local -i pair_u\n  local -i pair_v\n  local -i pair_w\n  local -i pair",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i\n  local j\n  local sum\n  local -i k_smallest_pairs_count=0\n  local -i k_smallest_pairs_max_count=0\n  local -i k_smallest_pairs_max_sum=0\n  local -i k_smallest_pairs_max_i=0\n  local -i k_smallest_pairs_max_j=0\n  local -i k_smallest_pairs_max_index=0\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i]+b[j]))\n      pair=($sum $i $j)\n      pairs[${#pairs[@]}]=${pair[@]}\n    done\n  done\n\n  while ((k_smallest_pairs_count < k)); do\n    for ((i=0; i<${#pairs[@]}; i++)); do\n      pair=(${pairs[i]})\n      if ((pair[0] > k_smallest_pairs_max_sum)); then\n        k_smallest_pairs_max_sum=${pair[0]}\n        k_smallest_pairs_max_i=${pair[1]}\n        k_smallest_pairs_max_j=${pair[2]}\n        k_smallest_pairs_max_index=$i\n      fi\n    done\n    echo \"${a[k_smallest_pairs_max_i]} ${b[k_smallest_pairs_max_j]}\"\n    unset pairs[k_smallest_pairs_max_index]\n    k_smallest_pairs_max_sum=0\n    ((k_smallest_pairs_count++))\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs\n  local -a pair\n  local i\n  local j\n  local sum\n  local index\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((a[i] + b[j]))\n      pair=($sum $i $j)\n      pairs+=(\"${pair[@]}\")\n    done\n  done\n  for ((i=0; i<${#pairs[@]}; i++)); do\n    for ((j=i+1; j<${#pairs[@]}; j++)); do\n      if ((pairs[i] > pairs[j])); then\n        index=${pairs[i]}\n        pairs[i]=${pairs[j]}\n        pairs[j]=$index\n      fi\n    done\n  done\n  for ((i=0; i<k; i++)); do\n    echo \"${a[pairs[i*3+1]]} ${b[pairs[i*3+2]]}\"\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local -a aA\n    local -a aB\n    local -a aC\n    local",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i j\n    local -a pairs\n    local -a distances\n    local -a distances_sorted\n    local -a pairs_sorted\n    local -a distances_sorted_k\n    local -a pairs_sorted_k\n    local -a result\n\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[$i]} ${b[$j]}\")\n            distances+=(\"$((a[$i] + b[$j]))\")\n        done\n    done\n\n    distances_sorted=($(printf \"%s\\n\" \"${distances[@]}\" | sort -n))\n    distances_sorted_k=(${distances_sorted[@]:0:$k})\n\n    for ((i=0; i<${#distances_sorted_k[@]}; i++)); do\n        for ((j=0; j<${#distances[@]}; j++)); do\n            if [[ \"${distances_sorted_k[$i]}\" == \"${distances[$j]}\" ]]; then\n                pairs_sorted+=(\"${pairs[$j]}\")\n                break\n            fi\n        done\n    done\n\n    pairs_sorted_k=(${pairs_sorted[@]:0:$k})\n    result=($(printf \"%s\\n\" \"${pairs_sorted_k[@]}\" | sort -n))\n\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  local -a d\n  for ((i=0; i<${#c[@]}; i++)); do\n    d[i]=$(echo ${c[i]} | awk '{print $1+$2}')\n  done\n  local -a e\n  local -a f\n  local -i n\n  for ((i=0; i<${#d[@]}; i++)); do\n    n=${d[i]}\n    e[n]=${c[i]}\n    f[n]=$n\n  done\n  local -a g\n  local -a h\n  local -i m\n  for ((i=0; i<${#f[@]}; i++)); do\n    m=${f[i]}\n    g[m]=${e[m]}\n    h[m]=$m\n  done\n  local -a j\n  local -a l\n  for ((i=0; i<${#h[@]}; i++)); do\n    if [[ -n ${h[i]} ]]; then\n      j[${#j[@]}]=${h[i]}\n      l[${#l[@]}]=${g[i]}\n    fi\n  done\n  local -a m\n  local -a n\n  for ((i=0; i<${#l[@]}; i++)); do\n    m[i]=$(echo ${l[i]} | awk '{print $1+$2}')\n    n[i]=${l[i]}\n  done\n  local -a o\n  local -a p\n  local -i q\n  for ((i=0; i<${#m[@]}; i++)); do\n    q=${m[",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sum=()\n  local -a index=()\n  local -a result=()\n  local i=0\n  local j=0\n  local m=0\n  local n=0\n  local min=0\n  local min_index=0\n  local min_i=0\n  local min_j=0\n  local -i len_a=${#a[@]}\n  local -i len_b=${#b[@]}\n\n  if [[ $len_a -eq 0 || $len_b -eq 0 || $k -eq 0 ]]; then\n    echo \"\"\n    return\n  fi\n\n  for ((i=0; i<len_a; i++)); do\n    for ((j=0; j<len_b; j++)); do\n      pairs[$i,$j]=$((a[i] + b[j]))\n      sum[$i,$j]=$((a[i] + b[j]))\n      index[$i,$j]=$((i * len_b + j))\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    min=${sum[0,0]}\n    min_index=0\n    for ((m=0; m<len_a; m++)); do\n      for ((n=0; n<len_b; n++)); do\n        if [[ ${sum[$m,$n]} -lt $min ]]; then\n          min=${sum[$m,$n]}\n          min_index=$((m * len_b + n))\n        fi\n      done\n    done\n    min_i=$((min_index / len_b))\n    min_j=$((min_index % len_b))\n    result[$i]=\"[${a[min_i]}, ${b[min_j]}]\"\n    sum[$min_i,$min_j]=$((sum[$min_i,$min_j] + pairs[$min_i,$min_j]))\n ",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local -i k=$3\n    local -i i j\n    local -i len_a=${#a[@]}\n    local -i len_b=${#b[@]}\n    local -i len_c=$((len_a * len_b))\n    local -i len_c_k=$((len_c - k))\n    local -i min_i min_j\n    local -i min_val\n    local -i val\n\n    for ((i = 0; i < len_a; i++)); do\n        for ((j = 0; j < len_b; j++)); do\n            c[$((i * len_b + j))]=$((a[i] + b[j]))\n        done\n    done\n\n    for ((i = 0; i < len_c_k; i++)); do\n        min_val=${c[0]}\n        min_i=0\n        min_j=0\n        for ((j = 0; j < len_c; j++)); do\n            val=${c[j]}\n            if [[ $val -lt $min_val ]]; then\n                min_val=$val\n                min_i=$((j / len_b))\n                min_j=$((j % len_b))\n            fi\n        done\n        c[$((min_i * len_b + min_j))]=$((2 ** 31 - 1))\n    done\n\n    for ((i = 0; i < len_a; i++)); do\n        for ((j = 0; j < len_b; j++)); do\n            val=${c[$((i * len_b + j))]}\n            if [[ $val -ne $((2 ** 31 - 1)) ]]; then\n                echo \"${a[i]} ${b[j]}\"\n            fi\n        done\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local i\n  local j\n  local x\n  local y\n  local z\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]+b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local -i i j k=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[k++]=$((a[i]+b[j]))\n        done\n    done\n    IFS=$'\\n'\n    echo \"${c[*]}\" | sort -n | head -n $3",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n\n  for i in \"${!a[@]}\"; do\n    for j in \"${!b[@]}\"; do\n      pairs+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    local min=${pairs[0]}\n    local min_index=0\n    for ((j=1; j<${#pairs[@]}; j++)); do\n      if [[ ${pairs[j]} < $min ]]; then\n        min=${pairs[j]}\n        min_index=$j\n      fi\n    done\n    echo $min\n    unset pairs[$min_index]\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=(\"${a[i]} ${b[j]}\")\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local -a indices=()\n  local -a indices_sorted=()\n  local -a pairs_sorted=()\n  local -a sums_sorted=()\n  local i j sum index\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      sum=$((${a[$i]} + ${b[$j]}))\n      index=$((${#pairs[@]}))\n      pairs[$index]=\"${a[$i]} ${b[$j]}\"\n      sums[$index]=$sum\n      indices[$index]=$index\n    done\n  done\n  indices_sorted=($(printf '%s\\n' \"${indices[@]}\" | sort -n))\n  for ((i=0; i<$k; i++)); do\n    index=${indices_sorted[$i]}\n    pairs_sorted[$i]=${pairs[$index]}\n    sums_sorted[$i]=${sums[$index]}\n  done\n  echo \"${pairs_sorted[@]}\"\n  echo \"${sums_sorted[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a c\n    local i j\n    local -i n=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[n]=\"${a[i]} ${b[j]}\"\n            ((n++))\n        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local -a pairs\n    local -i i j\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            pairs+=(\"${a[i]} ${b[j]}\")\n        done\n    done\n    echo \"${pairs[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=\"${a[i]} ${b[j]}\"\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -n | head -n $k | tr '\\n' ' '",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a pairs=()\n  local -a sums=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      pairs+=(\"${a[i]} ${b[j]}\")\n      sums+=(\"$((a[i] + b[j]))\")\n    done\n  done\n  local -a sorted_sums=($(printf '%s\\n' \"${sums[@]}\" | sort -n))\n  local -a sorted_pairs=()\n  for ((i=0; i<${#sorted_sums[@]}; i++)); do\n    local sum=${sorted_sums[i]}\n    local pair=${pairs[i]}\n    sorted_pairs+=(\"$pair\")\n  done\n  local -a result=()\n  for ((i=0; i<k; i++)); do\n    result+=(\"${sorted_pairs[i]}\")\n  done\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]+b[j]))\n    done\n  done\n  printf \"%s\\n\" \"${c[@]}\" | sort -n | head -n $k"
  ]
}
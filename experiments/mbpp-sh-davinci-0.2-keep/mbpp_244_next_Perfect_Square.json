{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the next perfect square greater than a given number.\n#\n# $1 is an integer\nnext_Perfect_Square() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    next_Perfect_Square \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"35\") = \"36\" ]]\n    [[ $(candidate \"6\") = \"9\" ]]\n    [[ $(candidate \"9\") = \"16\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # Find the next perfect square\n        local square=$(( $1 + 1 ))\n        while [[ $(( $square * $square )) -lt $1 ]]; do\n            square=$(( $square + 1 ))\n        done\n        echo $(( $square * $square ))\n    else\n        echo \"Error: $1 is not an integer\"\n        exit 1\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 2\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 3\n    fi\n    local i=1\n    local square=0\n    while [ $square -lt $1 ]; do\n        square=$((i*i))\n        i=$((i+1))\n    done\n    echo $square",
    "    # Check if the number is a perfect square\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n            echo \"0 is a perfect square\"\n        elif [[ $1 -eq 1 ]]; then\n            echo \"1 is a perfect square\"\n        else\n            # Check if the number is a perfect square\n            if [[ $(echo \"sqrt($1)\" | bc) =~ ^[0-9]+$ ]]; then\n                echo \"$1 is a perfect square\"\n            else\n                # Find the next perfect square\n                echo \"The next perfect square is $(echo \"($(echo \"sqrt($1)\" | bc) + 1)^2\" | bc)\"\n            fi\n        fi\n    else\n        echo \"Please enter an integer\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    if [[ $num -lt 0 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f1)\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        echo \"$num is already a perfect square\"\n        return 0\n    fi\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc -l)\n    local next_sqrt_int=$(echo \"$next_sqrt\" | cut -d '.' -f1)\n    local next_perfect_square=$(echo \"$next_sqrt_int * $next_sqrt_int\" | bc -l)\n    echo \"$next_perfect_square\"",
    "    local number=$1\n    local sqrt_number=$(bc <<< \"sqrt($number)\")\n    local sqrt_number_int=$(echo $sqrt_number | cut -d '.' -f1)\n    if [ $(bc <<< \"$sqrt_number_int * $sqrt_number_int\") -eq $number ]; then\n        echo $(bc <<< \"($sqrt_number_int + 1) * ($sqrt_number_int + 1)\")\n    else\n        echo $(bc <<< \"($sqrt_number_int + 2) * ($sqrt_number_int + 2)\")\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"sqrt($num+1)\" | bc)\n    if [[ $sqrt -eq $next_sqrt ]]; then\n        echo $num\n    else\n        echo $((next_sqrt*next_sqrt))\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"sqrt($num)+1\" | bc)\n    if [ $sqrt -eq $next_sqrt ]; then\n        echo $(echo \"sqrt($num)+1\" | bc)\n    else\n        echo $(echo \"sqrt($num)+1\" | bc)\n        echo $(echo \"($next_sqrt)^2\" | bc)\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n    else\n        echo \"($(($1/2+1)) * $(($1/2+1)))\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        # Check if $1 is a perfect square\n        if [[ $(( $1 ** 0.5 )) =~ ^-?[0-9]+$ ]]; then\n            # Check if $1 is positive\n            if [[ $1 -gt 0 ]]; then\n                # Find the next perfect square\n                echo $(( $1 + 1 ))\n            else\n                # $1 is negative\n                echo \"Error: $1 is negative\"\n            fi\n        else\n            # $1 is not a perfect square\n            echo \"Error: $1 is not a perfect square\"\n        fi\n    else\n        # $1 is not an integer\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: invalid input\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n    else\n        echo \"($(($1/2))*2+1)^2\" | bc\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    # Check if the number is a perfect square\n    if [[ $(( $1 ** 0.5 )) == $(( $1 ** 0.5 )) ]]; then\n        echo \"The number is a perfect square\"\n    else\n        # Find the next perfect square\n        echo \"The next perfect square is: \" $(( $1 ** 0.5 + 1 ))\n    fi",
    "    local num=$1\n    local sqrt=$(python -c \"import math; print(math.sqrt($num))\")\n    local sqrt_int=$(python -c \"import math; print(math.ceil($sqrt))\")\n    local next_perfect_square=$(python -c \"print($sqrt_int ** 2)\")\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$((sqrt + 1))\n    local next_perfect_square=$((next_sqrt * next_sqrt))\n    echo $next_perfect_square",
    "    local num=$1\n    local i=1\n    local square=1\n    while [ $square -lt $num ]; do\n        i=$((i+1))\n        square=$((i*i))\n    done\n    echo $square",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc -l)\n    local int_sqrt=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [[ $int_sqrt -eq $sqrt ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    fi\n    local next_perfect_square=$((int_sqrt + 1))\n    echo \"$next_perfect_square^2 = $((next_perfect_square * next_perfect_square))\"",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt_num=$(echo \"sqrt($1)\" | bc)\n        local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d. -f1)\n        local next_sqrt_num=$(echo \"$sqrt_num_int + 1\" | bc)\n        local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n        echo \"$next_perfect_square\"\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Number must be non-negative\"\n        exit 1\n    fi\n\n    # Find the square root of the number\n    sqrt=$(python -c \"print($1 ** 0.5)\")\n    # Round up to the next integer\n    sqrt=$(python -c \"print(int($sqrt) + 1)\")\n    # Square the integer\n    echo $(python -c \"print($sqrt ** 2)\")",
    "    if [ $# -eq 0 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 2 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 3 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 4 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 5 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 6 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 7 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 8 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 9 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 10 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 11 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 12 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 13 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    if",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"1\"\n        return 0\n    fi\n\n    # Find the square root of the number\n    sqrt=$(echo \"sqrt($1)\" | bc)\n\n    # Check if the square root is an integer\n    if [ $(echo \"$sqrt % 1\" | bc) -eq 0 ]; then\n        # If the square root is an integer, then the number is a perfect square\n        # So, we add 1 to the square root and square it\n        echo \"$(echo \"$sqrt + 1\" | bc)^2\" | bc\n    else\n        # If the square root is not an integer, then the number is not a perfect square\n        # So, we round up the square root and square it\n        echo \"$(echo \"$sqrt + 1\" | bc)^2\" | bc\n    fi",
    "    # Check if the number is a perfect square\n    if [ $(echo \"$1 % 1\" | bc) -eq 0 ]; then\n        # Check if the number is a perfect square\n        if [ $(echo \"$1 % $1\" | bc) -eq 0 ]; then\n            # Return the number\n            echo $1\n        else\n            # Return the next perfect square\n            echo $(echo \"$1 + 1\" | bc)\n        fi\n    else\n        # Return the next perfect square\n        echo $(echo \"$1 + 1\" | bc)\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]\n    then\n        sqrt=$(echo \"sqrt($1)\" | bc -l)\n        sqrt=$(printf \"%.0f\" $sqrt)\n        if [[ $sqrt -eq $1 ]]\n        then\n            echo \"The number $1 is already a perfect square\"\n        else\n            echo \"The next perfect square greater than $1 is $(($sqrt+1))^2\"\n        fi\n    else\n        echo \"The argument is not an integer\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local next_sqrt=$(($sqrt_int + 1))\n    local next_perfect_square=$(($next_sqrt * $next_sqrt))\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        sqrt=$(echo \"sqrt($1)\" | bc)\n        if [[ $(echo \"$sqrt * $sqrt\" | bc) -eq $1 ]]; then\n            echo \"$1 is a perfect square\"\n        else\n            echo \"$1 is not a perfect square\"\n        fi\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [ $sqrt -eq $1 ]; then\n        echo \"$1 is a perfect square\"\n        return 1\n    fi\n    local next_perfect_square=$(echo \"($sqrt+1)^2\" | bc)\n    echo \"$next_perfect_square\"",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The next perfect square is: $(($1 + 1))\"\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not a number\"\n        return 1\n    fi\n    local i=1\n    while [ $((i*i)) -lt $1 ]; do\n        i=$((i+1))\n    done\n    echo $((i*i))",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"sqrt($num)+1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num*$next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Only positive numbers are allowed\"\n        exit 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: 0 is not a positive number\"\n        exit 1\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1 is a perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"4 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"4 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"4 is a perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"9 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"9 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"9 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"9 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"9 is a perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"16 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"16 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"16 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"16 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"16 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"16 is the next perfect square\"\n        exit 1\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"16 is a perfect",
    "    local number=$1\n    local square_root=$(echo \"sqrt($number)\" | bc -l)\n    local next_square_root=$(echo \"sqrt($number)+1\" | bc -l)\n    local next_square_root_int=$(echo \"($next_square_root+0.5)/1\" | bc)\n    local next_perfect_square=$(echo \"$next_square_root_int*$next_square_root_int\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_perfect_square=$(echo \"($sqrt_number+1)^2\" | bc)\n    echo $next_perfect_square",
    "    if [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $1 * $1 ))\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next=$(echo \"$sqrt + 1\" | bc)\n    local next_square=$(echo \"$next * $next\" | bc)\n    echo $next_square",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"sqrt($num+1)\" | bc)\n    if [ $sqrt -eq $next_sqrt ]; then\n        echo $num\n    else\n        echo $(echo \"($next_sqrt+1)^2\" | bc)\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc -l)\n        local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n        if [[ $sqrt_int -eq $sqrt ]]; then\n            echo \"$1 is a perfect square\"\n        else\n            local next_perfect_square=$(echo \"$sqrt_int + 1\" | bc -l)\n            echo \"The next perfect square is $(echo \"$next_perfect_square * $next_perfect_square\" | bc -l)\"\n        fi\n    else\n        echo \"Please enter an integer\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local next_sqrt=$(($sqrt_int + 1))\n    local next_perfect_square=$(($next_sqrt * $next_sqrt))\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [ $sqrt_int -eq $sqrt ]; then\n        sqrt_int=$(($sqrt_int + 1))\n    else\n        sqrt_int=$(($sqrt_int + 2))\n    fi\n    echo \"$sqrt_int * $sqrt_int\" | bc -l",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local next_sqrt=$(echo \"$sqrt_int + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"sqrt($1+1)\" | bc)\n        if [[ $sqrt == $next_sqrt ]]; then\n            echo $1\n        else\n            echo $((next_sqrt*next_sqrt))\n        fi\n    else\n        echo \"Please enter a valid integer.\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt+1\" | bc)\n    echo \"$next_sqrt^2\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n        echo \"$next_sqrt * $next_sqrt\" | bc\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        sqrt=$(echo \"sqrt($1)\" | bc)\n        if [[ $sqrt =~ ^-?[0-9]+$ ]]; then\n            echo \"$(($sqrt+1))^2\" | bc\n        else\n            echo \"ERROR: $1 is not a perfect square\"\n        fi\n    else\n        echo \"ERROR: $1 is not an integer\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt^2\" | bc",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    # Check if the number is a perfect square\n    if [ $(( $1 ** 2 )) -eq $1 ]; then\n        echo $(( $1 + 1 ))\n    else\n        # Find the next perfect square\n        echo $(( ($1 / 2) * ($1 / 2) + ($1 / 2) + 1 ))\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt_number=$(echo \"sqrt($number)+1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_number^2\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local next_square=$((num + 1))\n    while true; do\n        local sqrt=$(echo \"sqrt($next_square)\" | bc -l)\n        if [[ $(echo \"$sqrt % 1\" | bc -l) == 0 ]]; then\n            echo $next_square\n            break\n        fi\n        next_square=$((next_square + 1))\n    done",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        sqrt=$(echo \"sqrt($1)\" | bc -l)\n        sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f1)\n        if [[ $sqrt_int -eq $sqrt ]]; then\n            echo \"$1 is already a perfect square\"\n        else\n            echo \"$(($sqrt_int + 1))^2\"\n        fi\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    local number=$1\n    local i=0\n    while [ $((i*i)) -lt $number ]; do\n        i=$((i+1))\n    done\n    echo $((i*i))",
    "    local number=$1\n    local next_square=$((number+1))\n    while [[ $((next_square**2)) -lt $number ]]; do\n        next_square=$((next_square+1))\n    done\n    echo $((next_square**2))",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    # Find the next perfect square\n    local next_square=$(( $1 + 1 ))\n    while [ $(( $next_square ** 0.5 )) -ne $(( $next_square ** 0.5 )) ]\n    do\n        next_square=$(( $next_square + 1 ))\n    done\n    echo $next_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n        local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n        echo $next_perfect_square\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc -l)\n        local sqrt_int=${sqrt%.*}\n        local next_sqrt=$((sqrt_int+1))\n        local next_perfect_square=$((next_sqrt*next_sqrt))\n        echo $next_perfect_square\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"sqrt($1+1)\" | bc)\n        if [[ $sqrt =~ ^[0-9]+$ && $next_sqrt =~ ^[0-9]+$ ]]; then\n            echo $(($next_sqrt*$next_sqrt))\n        else\n            echo \"Invalid Input\"\n        fi\n    else\n        echo \"Invalid Input\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo \"$next_perfect_square\"",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"sqrt($num)+1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num^2\" | bc)\n    echo $next_perfect_square",
    "    # Check if the number is a perfect square\n    if [[ $(( $1 ** 0.5 )) == $(( $1 ** 0.5 )) ]]; then\n        echo \"The number is a perfect square\"\n        exit 0\n    fi\n\n    # Find the next perfect square\n    for (( i = $1 + 1; ; i++ )); do\n        if [[ $(( i ** 0.5 )) == $(( i ** 0.5 )) ]]; then\n            echo \"The next perfect square is $i\"\n            exit 0\n        fi\n    done",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local next_sqrt=$(echo \"$sqrt_int + 1\" | bc -l)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc -l)\n    echo $next_perfect_square",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n    else\n        echo \"$(($1 + 1))\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        if [[ $sqrt =~ ^[0-9]+$ ]]; then\n            echo $((sqrt+1))\n        else\n            echo $((sqrt+2))\n        fi\n    else\n        echo \"Invalid input\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n        return\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 17 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 18 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 19 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 20 ]; then\n        echo \"25\"\n        return\n",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n            echo \"0 is a perfect square\"\n        else\n            sqrt=$(echo \"sqrt($1)\" | bc -l)\n            if [[ $sqrt =~ ^[0-9]+$ ]]; then\n                echo \"$1 is a perfect square\"\n            else\n                echo \"The next perfect square is $(echo \"($sqrt + 1)^2\" | bc -l)\"\n            fi\n        fi\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1 is a perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"4 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"4 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"4 is a perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"9 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"9 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"9 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"9 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"9 is a perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"16 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"16 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"16 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"16 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"16 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"16 is the next perfect square.\"\n        return 0\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"16",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local next_sqrt=$((sqrt_int + 1))\n    echo \"$((next_sqrt * next_sqrt))\"",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    echo \"scale=0;sqrt($1)+1\" | bc",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n    else\n        echo \"($1+1)^2\" | bc\n    fi",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: invalid input\"\n        return 1\n    fi\n    # find the next perfect square\n    local i=1\n    while [ $((i*i)) -le $1 ]; do\n        i=$((i+1))\n    done\n    echo $((i*i))",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    # check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # check if $1 is a perfect square\n        if [[ $1 -eq $(echo \"sqrt($1)\" | bc)**2 ]]; then\n            # if $1 is a perfect square, add 1 to it\n            echo $(( $1 + 1 ))\n        else\n            # if $1 is not a perfect square, find the next perfect square\n            echo $(( $(echo \"sqrt($1)\" | bc)**2 + 1 ))\n        fi\n    else\n        # if $1 is not an integer, return an error\n        echo \"error: $1 is not an integer\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n        local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n        echo $next_perfect_square\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    sqrt=$(echo \"sqrt($1)\" | bc)\n    next_square=$(echo \"($sqrt + 1)^2\" | bc)\n    echo $next_square",
    "    # Check if the number is a perfect square\n    if [[ $1 -eq $(( $1 ** 0.5 ))**2 ]]; then\n        echo $(( $1 + 1 ))\n    else\n        echo $(( ($1 / $(( $1 ** 0.5 ))) + 1 ))**2\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next=$(echo \"$sqrt+1\" | bc)\n    echo \"$next*$next\" | bc",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local next_sqrt=$(echo \"$sqrt_int + 1\" | bc)\n    echo \"$next_sqrt ^ 2\" | bc",
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # Check if $1 is a perfect square\n        if [[ $1 -eq $(( $1 ** 0.5 ))**2 ]]; then\n            echo $(( $1 + 1 ))\n        else\n            echo $(( $(( $1 ** 0.5 )) + 1 ))^2\n        fi\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc -l)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc -l)\n    echo $next_perfect_square",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local next_sqrt=$(echo \"$sqrt_int + 1\" | bc -l)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc -l)\n    echo $next_perfect_square",
    "    # Check if $1 is an integer\n    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    # Check if $1 is a perfect square\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n            echo \"Error: $1 is not a perfect square\"\n            return 1\n        fi\n        sqrt=$(echo \"sqrt($1)\" | bc)\n        if [[ $sqrt =~ ^[0-9]+$ ]]; then\n            echo \"Error: $1 is already a perfect square\"\n            return 1\n        fi\n    fi\n\n    # Find the next perfect square\n    next_sqrt=$(echo \"sqrt($1)+1\" | bc)\n    next_perfect_square=$(echo \"$next_sqrt^2\" | bc)\n    echo \"$next_perfect_square\"",
    "    local i=1\n    while [ $((i*i)) -lt $1 ]; do\n        i=$((i+1))\n    done\n    echo $((i*i))",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"sqrt($num+1)\" | bc)\n    if [ $sqrt -eq $next_sqrt ]\n    then\n        echo $num\n    else\n        echo $(echo \"$next_sqrt^2\" | bc)\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"sqrt($num)+1\" | bc)\n    if [[ $sqrt -eq $next_sqrt ]]; then\n        echo $num\n    else\n        echo $(echo \"($next_sqrt)^2\" | bc)\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 2 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 3 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 4 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 5 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 6 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 7 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 8 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 9 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 10 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 11 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 12 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 13 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 14 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"The next perfect square is: \"\n        echo \"scale=0;sqrt($1)+1\" | bc -l\n    else\n        echo \"Please enter an integer\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo $(( $1 + 1 ))\n    else\n        echo \"Error: Argument is not an integer.\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: number must be >= 0\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"0\"\n        return 0\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return 0\n    fi\n    local i=1\n    while [ $((i*i)) -lt $1 ]; do\n        i=$((i+1))\n    done\n    echo $((i*i))",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n        return\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is negative\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"9\"\n        return\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"16\"\n        return\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 17 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 18 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 19 ]; then\n        echo \"25\"\n        return\n    fi\n    if [ $1 -eq 20 ]; then\n        echo \"25\"\n        return\n    fi\n",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_perfect_square=$((sqrt_number + 1))\n    echo \"$next_perfect_square\"",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    # Check if the number is a perfect square\n    if [[ $1 -eq $(( $1 ** 0.5 ))**2 ]]; then\n        echo $(( $1 + 1 ))\n    else\n        echo $(( ($1 / $(( $1 ** 0.5 ))) + 1 ))**2\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local next_sqrt=$(echo \"$sqrt_int + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 2 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 3 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 4 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 5 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 6 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 7 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 8 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 9 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 10 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 11 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 12 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 13 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=${sqrt%.*}\n    local next_perfect_square=$((sqrt_int+1))\n    echo $((next_perfect_square*next_perfect_square))",
    "  # if $1 is not an integer, return 1\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    return 1\n  fi\n\n  # if $1 is 0, return 1\n  if [ $1 -eq 0 ]; then\n    return 1\n  fi\n\n  # if $1 is 1, return 1\n  if [ $1 -eq 1 ]; then\n    return 1\n  fi\n\n  # if $1 is 2, return 4\n  if [ $1 -eq 2 ]; then\n    return 4\n  fi\n\n  # if $1 is 3, return 4\n  if [ $1 -eq 3 ]; then\n    return 4\n  fi\n\n  # if $1 is 4, return 9\n  if [ $1 -eq 4 ]; then\n    return 9\n  fi\n\n  # if $1 is 5, return 9\n  if [ $1 -eq 5 ]; then\n    return 9\n  fi\n\n  # if $1 is 6, return 9\n  if [ $1 -eq 6 ]; then\n    return 9\n  fi\n\n  # if $1 is 7, return 9\n  if [ $1 -eq 7 ]; then\n    return 9\n  fi\n\n  # if $1 is 8, return 9\n  if [ $1 -eq 8 ]; then\n    return 9\n  fi\n\n  # if $1 is 9, return 16\n  if [ $1 -eq 9 ]; then\n    return 16\n  fi\n\n  # if $1 is 10, return 16\n  if [ $1 -eq 10 ]; then\n    return 16\n  fi\n\n  # if $1 is 11, return 16\n  if [ $1 -eq 11 ]; then\n    return 16\n  fi\n\n  # if $1 is 12, return 16\n  if [ $1 -eq 12 ]; then\n    return 16\n  fi\n\n  # if $1 is 13, return 16\n  if [ $1 -eq 13 ]; then\n    return 16\n  fi\n\n  # if $1 is 14, return 16\n  if [ $1 -eq 14 ]; then\n    return 16\n  fi\n\n  # if $1 is 15, return 16\n  if [ $1 -eq 15 ]; then\n    return 16\n  fi\n\n  # if $1 is 16,",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_perfect_square=$((sqrt_number+1))\n    echo $((next_perfect_square*next_perfect_square))",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"sqrt($num)+1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt^2\" | bc)\n    echo $next_perfect_square",
    "    if [ $# -eq 1 ] && [ $1 -gt 0 ]; then\n        local sqrt_result=$(echo \"sqrt($1)\" | bc)\n        local sqrt_result_int=$(echo \"$sqrt_result\" | awk '{print int($1)}')\n        if [ $sqrt_result_int -eq $sqrt_result ]; then\n            echo \"$1 is a perfect square.\"\n        else\n            echo \"$1 is not a perfect square.\"\n        fi\n    else\n        echo \"Usage: next_Perfect_Square <integer>\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        echo \"$1 is already a perfect square\"\n        return 0\n    fi\n    local next_perfect_square=$(echo \"$sqrt_int + 1\" | bc)\n    echo \"$next_perfect_square * $next_perfect_square\" | bc",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_perfect_square=$((sqrt_number+1))\n    echo \"$next_perfect_square\"",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f1)\n    local next_perfect_square=$((sqrt_number_int+1))\n    echo \"$next_perfect_square\"",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc -l)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc -l)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc -l)\n    echo $next_perfect_square",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    local sqrt_of_num=$(echo \"sqrt($1)\" | bc)\n    local next_perfect_square=$(echo \"$sqrt_of_num + 1\" | bc)\n    echo \"$next_perfect_square * $next_perfect_square\" | bc\n  else\n    echo \"Please enter a valid integer\"\n  fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"Error: Not a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"Error: Not a",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$((sqrt + 1))\n    local next_perfect_square=$((next_sqrt * next_sqrt))\n    echo $next_perfect_square",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n\n    if [ $1 -lt 0 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 0 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 1 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 2 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 3 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 4 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 5 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 6 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 7 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 8 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 9 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 10 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 11 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 12 ]\n    then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $",
    "    # Check if the number is a perfect square\n    if [ $(( $1 ** 0.5 )) -eq $(( $1 ** 0.5 )) ] 2>/dev/null; then\n        # If it is, increment it by 1\n        echo $(( $1 + 1 ))\n    else\n        # If it isn't, increment it by 1 and check again\n        next_Perfect_Square $(( $1 + 1 ))\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    # Check if the number is a perfect square\n    if [ $1 -eq $(( $1 ** 0.5 )) ] ; then\n        echo $(( $1 + 1 ))\n    else\n        echo $(( $1 + 2 ))\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n            echo \"0 is not a perfect square.\"\n        else\n            sqrt=$(echo \"sqrt($1)\" | bc)\n            if [[ $(echo \"$sqrt * $sqrt\" | bc) -eq $1 ]]; then\n                echo \"$1 is a perfect square.\"\n            else\n                echo \"$1 is not a perfect square.\"\n            fi\n        fi\n    else\n        echo \"Please enter a valid integer.\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]\n    then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n        local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n        echo $next_perfect_square\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ -z \"$sqrt_dec\" ]; then\n        echo \"$(($sqrt_int + 1))^2\"\n    else\n        echo \"$(($sqrt_int + 2))^2\"\n    fi",
    "    # If the number is not an integer, return an error\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # If the number is less than 1, return an error\n        if [[ $1 -lt 1 ]]; then\n            echo \"Error: Number must be greater than 0\"\n        else\n            # Check if the number is a perfect square\n            if [[ $1 -eq $(( $1 ** 0.5 ))**2 ]]; then\n                # If it is a perfect square, return the next perfect square\n                echo $(( $1 + 1 ))\n            else\n                # If it is not a perfect square, return the next perfect square\n                echo $(( $(( $1 ** 0.5 )) + 1 ))**2\n            fi\n        fi\n    else\n        echo \"Error: Number must be an integer\"\n    fi",
    "    # check if $1 is an integer\n    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        # check if $1 is a perfect square\n        if [[ $1 -eq $(( $1 ** 0.5 ))**2 ]]; then\n            echo $(( ($1 ** 0.5) + 1 ))**2\n        else\n            echo $(( ($1 ** 0.5) + 1 ))**2\n        fi\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_num * $next_num\" | bc)\n    echo $next_perfect_square",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: next_Perfect_Square <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n    local sqrt=$(python -c \"import math; print(math.sqrt($1))\")\n    local sqrt_int=$(python -c \"print(int($sqrt))\")\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    fi\n    local next_sqrt=$(python -c \"print($sqrt_int + 1)\")\n    local next_sqrt_sq=$(python -c \"print($next_sqrt**2)\")\n    echo \"$next_sqrt_sq is the next perfect square greater than $1\"",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next * $next\" | bc",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n\n    local i=1\n    while [ $((i*i)) -lt $1 ]; do\n        i=$((i+1))\n    done\n\n    echo $((i*i))",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^-?[0-9]+$ ]]; then\n        sqrt=$(echo \"sqrt($1)\" | bc)\n        if [[ $sqrt =~ ^-?[0-9]+$ ]]; then\n            echo \"$(($sqrt+1))^2\" | bc\n        else\n            echo \"Not a perfect square\"\n        fi\n    else\n        echo \"Not an integer\"\n    fi",
    "    if [ $# -ne 1 ]\n    then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]\n    then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ]\n    then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]\n    then\n        echo \"Error: $1 is zero\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    # Check if the number is a perfect square\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n            echo \"0 is a perfect square\"\n        else\n            if [[ $1 -eq 1 ]]; then\n                echo \"1 is a perfect square\"\n            else\n                if [[ $1 -eq 4 ]]; then\n                    echo \"4 is a perfect square\"\n                else\n                    if [[ $1 -eq 9 ]]; then\n                        echo \"9 is a perfect square\"\n                    else\n                        if [[ $1 -eq 16 ]]; then\n                            echo \"16 is a perfect square\"\n                        else\n                            if [[ $1 -eq 25 ]]; then\n                                echo \"25 is a perfect square\"\n                            else\n                                if [[ $1 -eq 36 ]]; then\n                                    echo \"36 is a perfect square\"\n                                else\n                                    if [[ $1 -eq 49 ]]; then\n                                        echo \"49 is a perfect square\"\n                                    else\n                                        if [[ $1 -eq 64 ]]; then\n                                            echo \"64 is a perfect square\"\n                                        else\n                                            if [[ $1 -eq 81 ]]; then\n                                                echo \"81 is a perfect square\"\n                                            else\n                                                if [[ $1 -eq 100 ]]; then\n                                                    echo \"100 is a perfect square\"\n                                                else\n                                                    if [[ $1 -eq 121 ]]; then\n                                                        echo \"121 is a perfect square\"\n                                                    else\n                                                        if [[ $1 -eq 144 ]]; then\n                                                            echo \"144 is a perfect square\"\n                                                        else\n                                                            if [[ $1 -eq 169 ]]; then\n                                                                echo \"169 is a perfect square\"\n                                                            else\n                                                                if [[ $1 -eq 196 ]]; then\n                                                                    echo \"196 is a perfect square\"\n                                                                else\n                                                                    if [[ $1 -eq 225 ]]; then\n                                                                        echo \"225 is a perfect square\"\n                                                                    else\n                                                                        if [[ $1 -eq 256 ]]; then\n                ",
    "    local number=$1\n    local root=$(echo \"sqrt($number)\" | bc)\n    local next_root=$(echo \"$root + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_root * $next_root\" | bc)\n    echo $next_perfect_square",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    # Check if the number is a perfect square\n    if [[ $1 -eq $(echo \"sqrt($1)\" | bc)**2 ]]; then\n        # If it is, add 1 to it and square it\n        echo $(echo \"($1+1)^2\" | bc)\n    else\n        # If it isn't, find the next perfect square\n        echo $(echo \"($(echo \"sqrt($1)\" | bc)+1)^2\" | bc)\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f1)\n    local next_perfect_square=$((sqrt_number_int + 1))\n    echo \"$next_perfect_square * $next_perfect_square\" | bc -l",
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # Check if $1 is a perfect square\n        if [[ $1 -eq $(( $1**0.5 ))**2 ]]; then\n            # If $1 is a perfect square, add 1 to it\n            echo $(( $1 + 1 ))\n        else\n            # If $1 is not a perfect square, find the next perfect square\n            echo $(( ($1/2 + 1)**2 ))\n        fi\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc -l)\n    local int_sqrt_n=$(echo \"($sqrt_n+0.5)/1\" | bc)\n    local next_sqrt_n=$(echo \"$int_sqrt_n+1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_n*$next_sqrt_n\" | bc)\n\n    echo \"$next_perfect_square\"",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"($sqrt + 1)^2\" | bc)\n    echo $next_sqrt",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 2 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 3 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 4 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 5 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 6 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 7 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 8 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 9 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 10 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 11 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 12 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 13 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$((sqrt + 1))\n        echo \"$((next_sqrt * next_sqrt))\"\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    if [ $1 -le 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    fi\n    local next_perfect_square=$(echo \"$sqrt_int + 1\" | bc -l)\n    next_perfect_square=$(echo \"$next_perfect_square * $next_perfect_square\" | bc -l)\n    echo \"The next perfect square is $next_perfect_square\"\n    return 0",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Number must be non-negative\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"0\"\n        return 0\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return 0\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"4\"\n        return 0\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"4\"\n        return 0\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"4\"\n        return 0\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"9\"\n        return 0\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"9\"\n        return 0\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"9\"\n        return 0\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"9\"\n        return 0\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"9\"\n        return 0\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"16\"\n        return 0\n    fi\n    if [ $1 -eq 17 ]; then\n        echo \"25\"\n        return 0\n    fi\n    if [ $1 -eq 18 ]; then\n        echo \"25\"\n        return 0\n    fi\n    if [ $1 -eq 19 ]; then\n        echo \"25\"\n        return 0\n    fi\n",
    "    local num=$1\n    local i=1\n    local square=1\n    while [ $square -le $num ]; do\n        square=$((i*i))\n        i=$((i+1))\n    done\n    echo $square",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_num_int=$(echo \"($sqrt_num+0.5)/1\" | bc)\n    local next_perfect_square=$(echo \"$sqrt_num_int*$sqrt_num_int\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local square_root=$(echo \"sqrt($number)\" | bc)\n    local next_square_root=$(echo \"$square_root + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_square_root * $next_square_root\" | bc)\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n            echo \"0\"\n        else\n            local sqrt=$(echo \"sqrt($1)\" | bc -l)\n            local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n            if [[ $sqrt_int -eq $sqrt ]]; then\n                echo \"$1\"\n            else\n                echo \"$((sqrt_int+1))\"\n            fi\n        fi\n    else\n        echo \"0\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n        return\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return\n    fi\n    local sqrt_result=$(echo \"sqrt($1)\" | bc)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d '.' -f 1)\n    if [ $sqrt_result_int -eq $sqrt_result ]; then\n        echo \"$1\"\n        return\n    fi\n    local next_perfect_square=$(echo \"$sqrt_result_int + 1\" | bc)\n    echo \"$next_perfect_square * $next_perfect_square\" | bc",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo \"$next_perfect_square\"",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt_number=$(echo \"$sqrt_number + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_number * $next_sqrt_number\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 2 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 3 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 4 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 5 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 6 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 7 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 8 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 9 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 10 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 11 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 12 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 13 ]]; then\n        echo \"Error: the number must be greater than 0\"\n        exit 1\n    fi\n    if [[ $1 -eq 14 ]]; then\n        echo \"Error",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local next_perfect_square=$((sqrt_number + 1))\n    next_perfect_square=$((next_perfect_square * next_perfect_square))\n    echo $next_perfect_square",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Number must be positive\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(bc <<< \"sqrt($num)\")\n    local sqrt_int=$(echo $sqrt | cut -d '.' -f1)\n    local next_sqrt=$((sqrt_int + 1))\n    local next_perfect_square=$((next_sqrt * next_sqrt))\n    echo $next_perfect_square",
    "    if [ $# -eq 1 ]; then\n        if [ $1 -gt 0 ]; then\n            sqrt=$(echo \"sqrt($1)\" | bc)\n            if [ $(echo \"$sqrt * $sqrt\" | bc) -eq $1 ]; then\n                echo \"$(echo \"$sqrt + 1\" | bc)^2\"\n            else\n                echo \"$(echo \"$sqrt + 1\" | bc)^2\"\n            fi\n        else\n            echo \"Error: $1 is not a positive integer\"\n        fi\n    else\n        echo \"Error: $0 requires 1 argument\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "    local number=$1\n    local next_square=$((number+1))\n    while [[ $((next_square%2)) -ne 0 ]]; do\n        next_square=$((next_square+1))\n    done\n    echo $next_square",
    "    local number=$1\n    local i=1\n    local square=1\n    while [ $square -le $number ]\n    do\n        square=$((i*i))\n        i=$((i+1))\n    done\n    echo $square",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$((sqrt_int + 1))^2\"\n    fi",
    "    local integer=$1\n    local sqrt_integer=$(echo \"sqrt($integer)\" | bc)\n    local next_perfect_square=$((sqrt_integer + 1))\n    echo \"$((next_perfect_square * next_perfect_square))\"",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num ^ 2\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt * $next_sqrt\" | bc",
    "    local num=$1\n    local sqrt=$(bc -l <<< \"sqrt($num)\")\n    local next_sqrt=$(bc -l <<< \"$sqrt + 1\")\n    local next_perfect_square=$(bc -l <<< \"$next_sqrt * $next_sqrt\")\n    echo $next_perfect_square",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 0 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 1 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 2 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 3 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 4 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 5 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 6 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 7 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 8 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 9 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 10 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 11 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 12 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 13 ]]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n  if [[ $1 -eq 14 ]]; then\n    echo \"Error",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: Please enter a positive integer\"\n        return 1\n    fi\n\n    local sqrt_num=$(echo \"sqrt($1)\" | bc)\n    local next_sqrt_num=$(echo \"$sqrt_num + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt_num * $next_sqrt_num\" | bc)\n    echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(bc <<< \"sqrt($num)\")\n    local next_sqrt=$(bc <<< \"$sqrt + 1\")\n    local next_perfect_square=$(bc <<< \"$next_sqrt * $next_sqrt\")\n    echo $next_perfect_square",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc -l)\n        local next_sqrt=$(echo \"$sqrt + 1\" | bc -l)\n        local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc -l)\n        echo $next_perfect_square\n    else\n        echo \"Please enter a valid integer\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n        local next_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n        echo $next_square\n    else\n        echo \"Please enter an integer\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n    if [[ $sqrt_dec -ne 0 ]]; then\n        sqrt_int=$((sqrt_int + 1))\n    fi\n\n    echo \"$((sqrt_int * sqrt_int))\"",
    "    # Check if the number is positive\n    if [ $1 -lt 0 ]; then\n        echo \"Error: Number must be positive\"\n        return 1\n    fi\n\n    # Check if the number is an integer\n    if [ $(echo \"$1 % 1\" | bc) -ne 0 ]; then\n        echo \"Error: Number must be an integer\"\n        return 1\n    fi\n\n    # Check if the number is a perfect square\n    if [ $(echo \"$1 % sqrt($1)\" | bc) -eq 0 ]; then\n        echo \"Error: Number must not be a perfect square\"\n        return 1\n    fi\n\n    # Find the next perfect square\n    next_square=$(echo \"($1 + 1)^2\" | bc)\n\n    echo \"The next perfect square is $next_square\"",
    "    local number=$1\n    local sqrt_number=$(echo \"scale=0;sqrt($number)\" | bc)\n    local next_perfect_square=$((sqrt_number + 1))\n    echo \"$next_perfect_square * $next_perfect_square\" | bc",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n    echo $next_perfect_square",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n  local next_perfect_square=$(echo \"$next_sqrt * $next_sqrt\" | bc)\n  echo $next_perfect_square",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local next_sqrt=$(echo \"$sqrt + 1\" | bc)\n    echo \"$next_sqrt^2\" | bc",
    "  # Check if the number is a perfect square\n  if [[ $1 -eq $(( $1 ** 0.5 ))**2 ]]; then\n    echo \"The number is already a perfect square\"\n  else\n    # Find the next perfect square\n    echo $(( $1 + 1 ))\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local next_sqrt=$(echo \"($sqrt + 1)^2\" | bc)\n    echo $next_sqrt",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        local next_sqrt=$(echo \"sqrt($1)+1\" | bc)\n        if [[ $sqrt =~ ^[0-9]+$ ]]; then\n            echo \"The next perfect square is $((sqrt+1))\"\n        else\n            echo \"The next perfect square is $((next_sqrt**2))\"\n        fi\n    else\n        echo \"Please enter a valid integer\"\n    fi"
  ]
}
{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local str=\"$1\"\n    local dirty_chars=\"$2\"\n    local clean_str=\"\"\n    local i=0\n    local j=0\n    local dirty_chars_len=${#dirty_chars}\n    local str_len=${#str}\n    local dirty_char_found=0\n\n    for ((i=0; i<str_len; i++)); do\n        dirty_char_found=0\n        for ((j=0; j<dirty_chars_len; j++)); do\n            if [[ \"${str:i:1}\" == \"${dirty_chars:j:1}\" ]]; then\n                dirty_char_found=1\n                break\n            fi\n        done\n        if [[ $dirty_char_found -eq 0 ]]; then\n            clean_str+=\"${str:i:1}\"\n        fi\n    done\n\n    echo \"$clean_str\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local -r dirty_chars=\"$1\"\n  local -r string=\"$2\"\n  local -r clean_string=\"${string//[$dirty_chars]}\"\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      clean_char=\"${dirty_chars:$j:1}\"\n      if [ \"$dirty_char\" == \"$clean_char\" ]; then\n        break\n      fi\n    done\n    if [ \"$dirty_char\" != \"$clean_char\" ]; then\n      clean_string=\"$clean_string$dirty_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    fi\n    clean_string+=$char\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local char=\"\"\n    local clean_char=\"\"\n    local clean_chars=\"\"\n    local dirty_char=\"\"\n    local dirty_chars_length=0\n    local string_length=0\n    local clean_chars_length=0\n\n    string_length=${#string}\n    dirty_chars_length=${#dirty_chars}\n\n    for ((i=0; i<string_length; i++)); do\n        char=\"${string:$i:1}\"\n        clean_char=1\n        for ((j=0; j<dirty_chars_length; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$char\" == \"$dirty_char\" ]]; then\n                clean_char=0\n                break\n            fi\n        done\n        if [[ $clean_char -eq 1 ]]; then\n            clean_chars+=\"$char\"\n        fi\n    done\n\n    clean_chars_length=${#clean_chars}\n    for ((i=0; i<clean_chars_length; i++)); do\n        char=\"${clean_chars:$i:1}\"\n        clean_string+=\"$char\"\n    done\n\n    echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"${clean_string}\"",
    "  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  local i=0\n  local j=0\n  local flag=0\n  for ((i=0; i<${#str1}; i++)); do\n    for ((j=0; j<${#str2}; j++)); do\n      if [ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]; then\n        flag=1\n      fi\n    done\n    if [ $flag -eq 0 ]; then\n      str3=\"$str3${str1:$i:1}\"\n    fi\n    flag=0\n  done\n  echo $str3",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:i:1}\"\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local -r clean_string=\"$1\"\n  local -r dirty_string=\"$2\"\n  local -r dirty_chars=\"${dirty_string//[^[:alnum:]]/}\"\n  local -r clean_chars=\"${clean_string//[^[:alnum:]]/}\"\n  local -r dirty_chars_regex=\"[${dirty_chars}]\"\n  local -r clean_chars_regex=\"[${clean_chars}]\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex//\\[/\\\\[}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\]/\\\\]}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\^/\\\\^}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\$/\\\\$}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\*/\\\\*}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\+/\\\\+}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\?/\\\\?}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\(/\\\\(}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\)/\\\\)}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\{/\\\\{}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//\\}/\\\\}}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex_escaped//",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  local i=0\n  local j=0\n  local len1=${#str1}\n  local len2=${#str2}\n  for ((i=0; i<len1; i++)); do\n    for ((j=0; j<len2; j++)); do\n      if [[ ${str1:i:1} == ${str2:j:1} ]]; then\n        break\n      fi\n    done\n    if [[ $j == $len2 ]]; then\n      str3+=\"${str1:i:1}\"\n    fi\n  done\n  echo $str3",
    "  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  for ((i=0; i<${#str1}; i++)); do\n    local char=${str1:$i:1}\n    if [[ $str2 != *\"$char\"* ]]; then\n      str3+=$char\n    fi\n  done\n  echo \"$str3\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str_len=${#str1}\n  local i=0\n  local j=0\n  local k=0\n  local str_out=\"\"\n  local str_out_len=0\n  local str_out_idx=0\n  local str_out_idx_found=0\n  local str_out_idx_found_idx=0\n\n  while [ $i -lt $str_len ]\n  do\n    j=0\n    str_out_idx_found=0\n    while [ $j -lt $str_len ]\n    do\n      if [ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]\n      then\n        str_out_idx_found=1\n        break\n      fi\n      j=$((j+1))\n    done\n\n    if [ $str_out_idx_found -eq 0 ]\n    then\n      str_out_idx=$((str_out_idx+1))\n      str_out_idx_found_idx=$((str_out_idx_found_idx+1))\n      str_out=\"$str_out${str1:$i:1}\"\n    fi\n\n    i=$((i+1))\n  done\n\n  echo \"$str_out\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "\tlocal clean_string=\"\"\n\tfor (( i=0; i<${#1}; i++ )); do\n\t\tlocal char=${1:$i:1}\n\t\tif [[ $2 != *$char* ]]; then\n\t\t\tclean_string+=$char\n\t\tfi\n\tdone\n\techo $clean_string",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    fi\n    clean_string+=$char\n  done\n  echo \"$clean_string\"",
    "  local -r str1=\"$1\"\n  local -r str2=\"$2\"\n  local -r str1_len=${#str1}\n  local -r str2_len=${#str2}\n\n  local -r str1_chars=($(echo \"$str1\" | fold -w1))\n  local -r str2_chars=($(echo \"$str2\" | fold -w1))\n\n  local -r str1_chars_len=${#str1_chars[@]}\n  local -r str2_chars_len=${#str2_chars[@]}\n\n  local -r str1_chars_set=($(echo \"${str1_chars[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n  local -r str2_chars_set=($(echo \"${str2_chars[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n\n  local -r str1_chars_set_len=${#str1_chars_set[@]}\n  local -r str2_chars_set_len=${#str2_chars_set[@]}\n\n  local -r str1_chars_set_str=$(echo \"${str1_chars_set[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n  local -r str2_chars_set_str=$(echo \"${str2_chars_set[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n\n  local -r str1_chars_set_str_len=${#str1_chars_set_str}\n  local -r str2_chars_set_str_len=${#str2_chars_set_str}\n\n  local -r str1_chars_set_str_chars=($(echo \"$str1_chars_set_str\" | fold -w1))\n  local -r str2_chars_set_str_chars=(",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    clean_char=1\n    dirty_char=\"${dirty_string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [[ \"${dirty_chars:$j:1}\" == \"$dirty_char\" ]]; then\n        clean_char=0\n        break\n      fi\n    done\n    if [[ $clean_char -eq 1 ]]; then\n      clean_string+=\"$dirty_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=$2\n  local string=$1\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ $dirty_chars =~ ${string:$i:1} ]]; then\n      continue\n    else\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ \"$2\" != *\"${1:$i:1}\"* ]]; then\n            clean_string+=\"${1:$i:1}\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"$2\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=$1\n  local dirty_chars=$2\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *$char* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local str1=$1\n  local str2=$2\n  local result=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 != *\"$char\"* ]]; then\n      result+=\"$char\"\n    fi\n  done\n  echo \"$result\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  local in_the_list=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    in_the_list=0\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      if [ \"$current_char\" == \"${dirty_chars:$j:1}\" ]; then\n        in_the_list=1\n      fi\n    done\n    if [ $in_the_list -eq 0 ]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local len1=${#str1}\n  local len2=${#str2}\n  for ((i=0; i<len1; i++))\n  do\n    for ((j=0; j<len2; j++))\n    do\n      if [ \"${str1:$i:1}\" != \"${str2:$j:1}\" ]\n      then\n        str3[$k]=${str1:$i:1}\n        k=$((k+1))\n      fi\n    done\n  done\n  echo ${str3[@]}",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$char\" == \"$dirty_char\" ]]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string+=\"$char\"\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  echo \"${1//[$2]}\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [ \"${dirty_chars:$j:1}\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ \"$dirty_char_found\" == \"0\" ]; then\n      clean_string=\"$clean_string$dirty_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local j=0\n    local is_dirty=0\n    local dirty_chars_len=${#dirty_chars}\n    local string_len=${#string}\n    for ((i=0; i<string_len; i++)); do\n        is_dirty=0\n        for ((j=0; j<dirty_chars_len; j++)); do\n            if [[ \"${string:$i:1}\" == \"${dirty_chars:$j:1}\" ]]; then\n                is_dirty=1\n                break\n            fi\n        done\n        if [[ $is_dirty -eq 0 ]]; then\n            clean_string+=\"${string:$i:1}\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ \"$current_char\" ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for ((i=0; i<${#string}; i++)); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=$char\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        local char=\"${1:$i:1}\"\n        if [[ \"$2\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    local i=0\n    local j=0\n    local dirty_char=\"\"\n    local clean_char=\"\"\n    local dirty_char_found=0\n    local dirty_char_count=${#dirty_chars}\n    local dirty_string_count=${#dirty_string}\n    for ((i=0; i<dirty_string_count; i++)); do\n        dirty_char=\"${dirty_string:$i:1}\"\n        dirty_char_found=0\n        for ((j=0; j<dirty_char_count; j++)); do\n            if [ \"$dirty_char\" == \"${dirty_chars:$j:1}\" ]; then\n                dirty_char_found=1\n                break\n            fi\n        done\n        if [ $dirty_char_found -eq 0 ]; then\n            clean_string+=\"$dirty_char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local dirty_string=\"$1\"\n    for ((i=0; i<${#dirty_string}; i++)); do\n        local char=${dirty_string:$i:1}\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=$char\n    done\n    echo $clean_string",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local dirty_char\n  for dirty_char in $(echo \"$dirty_chars\" | grep -o .); do\n    clean_string=\"${dirty_string//$dirty_char}\"\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\n  for ((i=0; i<${#1}; i++)); do\n    if [[ ${2} != *\"${1:$i:1}\"* ]]; then\n      clean_string+=${1:$i:1}\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | sed \"s/[$2]//g\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local i=0\n  local j=0\n  local k=0\n  local new_str=\"\"\n  local is_dirty=0\n  for ((i=0; i<str1_len; i++)); do\n    is_dirty=0\n    for ((j=0; j<str2_len; j++)); do\n      if [[ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]]; then\n        is_dirty=1\n        break\n      fi\n    done\n    if [[ $is_dirty -eq 0 ]]; then\n      new_str=\"${new_str}${str1:$i:1}\"\n    fi\n  done\n  echo \"$new_str\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:i:1}\"\n\n    if [[ ! $dirty_chars =~ \"$current_char\" ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for ((i=0; i<${#1}; i++)); do\n    local char=\"${1:$i:1}\"\n    if [[ \"$2\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=$2\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $dirty_chars != *$char* ]]; then\n            clean_string+=$char\n        fi\n    done\n    echo $clean_string",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | sed \"s/[$2]//g\"",
    "    echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    local char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string=\"$clean_string$char\"\n    fi\n    ((i++))\n  done\n\n  echo \"$clean_string\"",
    "  local CLEAN_STRING=\"\"\n  local DIRTY_STRING=\"$1\"\n  local DIRTY_CHARS=\"$2\"\n  for (( i=0; i<${#DIRTY_STRING}; i++ )); do\n    local CHAR=${DIRTY_STRING:$i:1}\n    if [[ $DIRTY_CHARS != *$CHAR* ]]; then\n      CLEAN_STRING+=$CHAR\n    fi\n  done\n  echo \"$CLEAN_STRING\"",
    "\tlocal str1=$1\n\tlocal str2=$2\n\tlocal i=0\n\tlocal j=0\n\tlocal len1=${#str1}\n\tlocal len2=${#str2}\n\tlocal new_str=\"\"\n\tfor ((i=0; i<len1; i++)); do\n\t\tfor ((j=0; j<len2; j++)); do\n\t\t\tif [[ ${str1:$i:1} == ${str2:$j:1} ]]; then\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [[ $j == $len2 ]]; then\n\t\t\tnew_str=${new_str}${str1:$i:1}\n\t\tfi\n\tdone\n\techo $new_str",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local char=\"\"\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    char=\"${string:$i:1}\"\n    if [[ $dirty_chars =~ $char ]]; then\n      clean_string+=$char\n    fi\n    ((i++))\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    local i=0\n    local j=0\n    local dirty_char=\"\"\n    local clean_char=\"\"\n    local dirty_char_is_dirty=0\n    local clean_char_is_dirty=0\n    local dirty_char_is_clean=0\n    local clean_char_is_clean=0\n    local clean_char_is_dirty_char=0\n    local dirty_char_is_clean_char=0\n    local clean_char_is_dirty_char_index=0\n    local dirty_char_is_clean_char_index=0\n    local clean_char_is_dirty_char_index_found=0\n    local dirty_char_is_clean_char_index_found=0\n    local clean_char_is_dirty_char_index_found_count=0\n    local dirty_char_is_clean_char_index_found_count=0\n    local clean_char_is_dirty_char_index_found_count_max=0\n    local dirty_char_is_clean_char_index_found_count_max=0\n    local clean_char_is_dirty_char_index_found_count_max_index=0\n    local dirty_char_is_clean_char_index_found_count_max_index=0\n    local clean_char_is_dirty_char_index_found_count_max_index_found=0\n    local dirty_char_is_clean_char_index_found_count_max_index_found=0\n    local clean_char_is_dirty_char_index_found_count_max_index_found_count=0\n    local dirty_char_is_clean_char_index_found_count_max_index_found_count=0\n    local clean_char_is_dirty_char_index_found_count_max_index_found_count_max=0\n    local dirty_char_is_clean_char_index_found_count_max_index_found_count_max=0\n    local clean_char_is_dirty_char_index",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=${dirty_string:$i:1}\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=''\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 =~ $char ]]; then\n      continue\n    fi\n    clean_string+=$char\n  done\n  echo $clean_string",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=\"${1:$i:1}\"\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=${dirty_string:$i:1}\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"\"\n  local i=0\n  local j=0\n  local len1=${#str1}\n  local len2=${#str2}\n  local flag=0\n  for ((i=0; i<len1; i++))\n  do\n    flag=0\n    for ((j=0; j<len2; j++))\n    do\n      if [[ \"${str1:i:1}\" == \"${str2:j:1}\" ]]\n      then\n        flag=1\n        break\n      fi\n    done\n    if [[ $flag -eq 0 ]]\n    then\n      str3+=\"${str1:i:1}\"\n    fi\n  done\n  echo \"$str3\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \" ${2} \" =~ \" ${1:$i:1} \" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  local skip=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      if [ \"$current_char\" == \"${dirty_chars:$j:1}\" ]; then\n        skip=1\n        break\n      fi\n    done\n\n    if [ $skip -eq 0 ]; then\n      clean_string+=\"$current_char\"\n    fi\n    skip=0\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local -r dirty_string=\"$1\"\n  local -r clean_string=\"$2\"\n  local -r clean_string_length=${#clean_string}\n  local -r dirty_string_length=${#dirty_string}\n  local -r dirty_string_length_minus_one=$((dirty_string_length - 1))\n  local -r dirty_string_length_minus_two=$((dirty_string_length - 2))\n  local -r dirty_string_length_minus_three=$((dirty_string_length - 3))\n  local -r dirty_string_length_minus_four=$((dirty_string_length - 4))\n  local -r dirty_string_length_minus_five=$((dirty_string_length - 5))\n  local -r dirty_string_length_minus_six=$((dirty_string_length - 6))\n  local -r dirty_string_length_minus_seven=$((dirty_string_length - 7))\n  local -r dirty_string_length_minus_eight=$((dirty_string_length - 8))\n  local -r dirty_string_length_minus_nine=$((dirty_string_length - 9))\n  local -r dirty_string_length_minus_ten=$((dirty_string_length - 10))\n  local -r dirty_string_length_minus_eleven=$((dirty_string_length - 11))\n  local -r dirty_string_length_minus_twelve=$((dirty_string_length - 12))\n  local -r dirty_string_length_minus_thirteen=$((dirty_string_length - 13))\n  local -r dirty_string_length_minus_fourteen=$((dirty_string_length - 14))\n  local -r dirty_string_length_minus_fifteen=$((dirty_string_length - 15))\n  local -r dirty_string_length_minus_sixteen=$((dirty_string_length - 16))\n  local -r dirty_string_length_minus_seventeen=$((dirty_string_length - 17))\n  local -r dirty_string_length_minus_eighteen=$((dirty_string_length - 18))\n  local -r dirty_string_length_minus_",
    "    echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "    local string=$1\n    local dirty_chars=$2\n    local clean_string=\"\"\n    local i=0\n    local j=0\n    local dirty_char_found=0\n    for ((i=0; i<${#string}; i++)); do\n        dirty_char_found=0\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            if [ \"${string:$i:1}\" == \"${dirty_chars:$j:1}\" ]; then\n                dirty_char_found=1\n                break\n            fi\n        done\n        if [ $dirty_char_found -eq 0 ]; then\n            clean_string=\"$clean_string${string:$i:1}\"\n        fi\n    done\n    echo $clean_string",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:i:1}\"\n\n    if [[ $dirty_chars =~ $current_char ]]; then\n      continue\n    fi\n\n    clean_string+=\"$current_char\"\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars =~ $current_char ]]; then\n      continue\n    fi\n\n    clean_string+=\"$current_char\"\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" = \"$dirty_char\" ]; then\n        char=\"\"\n      fi\n    done\n    clean_string=\"$clean_string$char\"\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local str1=$1\n  local str2=$2\n  local new_str=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 =~ $char ]]; then\n      continue\n    else\n      new_str+=$char\n    fi\n  done\n  echo $new_str",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local j=0\n    local char=\"\"\n    local dirty_char=\"\"\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$char\" == \"$dirty_char\" ]]; then\n                char=\"\"\n                break\n            fi\n        done\n        clean_string=\"$clean_string$char\"\n    done\n\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n\n  while [ $i -lt ${#dirty_string} ]; do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ $dirty_chars =~ $char ]]; then\n      clean_string+=\"$char\"\n    fi\n    i=$((i+1))\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    local char_is_dirty=0\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      local dirty_char=${dirty_chars:$j:1}\n      if [[ \"$char\" == \"$dirty_char\" ]]; then\n        char_is_dirty=1\n        break\n      fi\n    done\n    if [[ \"$char_is_dirty\" == 0 ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str1_len=${#str1}\n    local str2_len=${#str2}\n    local i=0\n    local j=0\n    local k=0\n    local result=\"\"\n    local found=0\n\n    for ((i=0; i<str1_len; i++)); do\n        found=0\n        for ((j=0; j<str2_len; j++)); do\n            if [[ ${str1:$i:1} == ${str2:$j:1} ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            result+=${str1:$i:1}\n        fi\n    done\n    echo $result",
    "  echo \"$1\" | sed \"s/[$2]//g\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=''\n  local char=''\n  local is_dirty=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    is_dirty=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        is_dirty=1\n        break\n      fi\n    done\n    if [ $is_dirty -eq 0 ]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=\"${dirty_string:$i:1}\"\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=\"$char\"\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ ! $dirty_chars =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local str1_new=\"\"\n  local str2_new=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local flag=0\n  for ((i=0; i<str1_len; i++))\n  do\n    flag=0\n    for ((j=0; j<str2_len; j++))\n    do\n      if [[ ${str1:i:1} == ${str2:j:1} ]]\n      then\n        flag=1\n        break\n      fi\n    done\n    if [[ $flag -eq 0 ]]\n    then\n      str1_new=\"$str1_new${str1:i:1}\"\n    fi\n  done\n  echo \"$str1_new\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | sed \"s/[$2]//g\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $2 != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "\techo \"$1\" | tr -d \"$2\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local dirty_char=''\n    local clean_char=''\n    local dirty_char_index=0\n\n    for ((i=0; i<${#string}; i++)); do\n        clean_char=\"${string:$i:1}\"\n        dirty_char_index=0\n        for ((dirty_char_index=0; dirty_char_index<${#dirty_chars}; dirty_char_index++)); do\n            dirty_char=\"${dirty_chars:$dirty_char_index:1}\"\n            if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n                clean_char=\"\"\n                break\n            fi\n        done\n        clean_string=\"$clean_string$clean_char\"\n    done\n\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  for ((i=0; i<${#1}; i++)); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=$2\n  local string=$1\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars/${string:$i:1}/}\" == \"$dirty_chars\" ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    echo \"$1\" | tr -d \"$2\"",
    "  local -r str1=\"$1\"\n  local -r str2=\"$2\"\n  local -r str1_len=${#str1}\n  local -r str2_len=${#str2}\n  local -r str1_arr=($(echo \"$str1\" | fold -w1))\n  local -r str2_arr=($(echo \"$str2\" | fold -w1))\n  local -r str1_arr_len=${#str1_arr[@]}\n  local -r str2_arr_len=${#str2_arr[@]}\n  local -r str1_arr_last_index=$((str1_arr_len - 1))\n  local -r str2_arr_last_index=$((str2_arr_len - 1))\n  local -r str1_arr_last_char=${str1_arr[str1_arr_last_index]}\n  local -r str2_arr_last_char=${str2_arr[str2_arr_last_index]}\n  local -r str1_arr_last_char_index=$((str1_len - 1))\n  local -r str2_arr_last_char_index=$((str2_len - 1))\n  local -r str1_arr_last_char_index_plus_one=$((str1_arr_last_char_index + 1))\n  local -r str2_arr_last_char_index_plus_one=$((str2_arr_last_char_index + 1))\n  local -r str1_arr_last_char_index_plus_one_minus_one=$((str1_arr_last_char_index_plus_one - 1))\n  local -r str2_arr_last_char_index_plus_one_minus_one=$((str2_arr_last_char_index_plus_one - 1))\n  local -r str1_arr_last_char_index_plus_one_minus_one_minus_one=$((str1_arr_last_char_index_plus_one_minus_one - 1))\n  local -r str2_arr_last_char_index_",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local char=\"\"\n\n  for ((i=0; i<${#1}; i++)); do\n    char=\"${1:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    echo $1 | sed \"s/[$2]//g\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n  local dirty_chars_len=${#dirty_chars}\n  local dirty_string_len=${#dirty_string}\n\n  for ((i=0; i<dirty_string_len; i++)); do\n    dirty_char_found=0\n    clean_char=\"${dirty_string:$i:1}\"\n    for ((j=0; j<dirty_chars_len; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$clean_char\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ \"$dirty_char_found\" == \"0\" ]; then\n      clean_string=\"$clean_string$clean_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=$1\n    local dirty_chars=$2\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=${dirty_string:$i:1}\n        if [[ $dirty_chars != *$char* ]]; then\n            clean_string+=$char\n        fi\n    done\n    echo $clean_string",
    "    echo \"$1\" | sed \"s/[$2]//g\"",
    "  local string=$1\n  local dirty_chars=$2\n  local clean_string=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=$char\n    fi\n  done\n\n  echo $clean_string",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ $dirty_chars != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local char=\"\"\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    char=\"${dirty_string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i\n\n    for ((i=0; i<${#string}; i++)); do\n        local char=${string:$i:1}\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *$char* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string",
    "  echo $1 | tr -d $2",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      clean_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$dirty_char\" == \"$clean_char\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_string=\"$clean_string$dirty_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str1_len=${#str1}\n    local str2_len=${#str2}\n    local i=0\n    local j=0\n    local tmp=\"\"\n    local result=\"\"\n    local found=0\n\n    for ((i=0; i<str1_len; i++)); do\n        found=0\n        for ((j=0; j<str2_len; j++)); do\n            if [[ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            result=\"$result${str1:$i:1}\"\n        fi\n    done\n    echo \"$result\"",
    "  echo $1 | sed -e \"s/[$2]//g\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local clean_char\n  local dirty_char\n\n  for clean_char in $(echo \"$string\" | fold -w1); do\n    for dirty_char in $(echo \"$dirty_chars\" | fold -w1); do\n      if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n        clean_char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$clean_char\"\n  done\n  echo \"$clean_string\"",
    "  local clean_str=\"\"\n  local dirty_str=$1\n  local dirty_chars=$2\n  for (( i=0; i<${#dirty_str}; i++ )); do\n    local char=${dirty_str:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_str+=$char\n    fi\n  done\n  echo $clean_str",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    local char=${string:$i:1}\n    if [[ $dirty_chars =~ $char ]]; then\n      clean_string+=$char\n    fi\n    ((i++))\n  done\n  echo \"$clean_string\"",
    "    local string=\"$1\"\n    local dirty_chars=\"$2\"\n    local clean_string=\"\"\n    local i=0\n    local j=0\n    local dirty_char=\"\"\n    local char=\"\"\n    local dirty=0\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        dirty=0\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [ \"$char\" == \"$dirty_char\" ]; then\n                dirty=1\n                break\n            fi\n        done\n        if [ $dirty -eq 0 ]; then\n            clean_string=\"$clean_string$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=${dirty_string:$i:1}\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=$char\n    done\n    echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  local i=0\n  local j=0\n  local flag=0\n  for ((i=0; i<${#str1}; i++)); do\n    flag=0\n    for ((j=0; j<${#str2}; j++)); do\n      if [[ ${str1:$i:1} == ${str2:$j:1} ]]; then\n        flag=1\n        break\n      fi\n    done\n    if [[ $flag -eq 0 ]]; then\n      str3+=\"${str1:$i:1}\"\n    fi\n  done\n  echo $str3",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    fi\n    clean_string+=\"$char\"\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=''\n  local clean_char=''\n  local dirty_string=\"$1\"\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    clean_char=\"${dirty_string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n        clean_char=''\n        break\n      fi\n    done\n    clean_string+=\"$clean_char\"\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"$2\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local dirty_char\n  local clean_char\n  for clean_char in $(echo \"$dirty_string\" | fold -w1); do\n    for dirty_char in $(echo \"$dirty_chars\" | fold -w1); do\n      if [ \"$clean_char\" != \"$dirty_char\" ]; then\n        clean_string=\"$clean_string$clean_char\"\n      fi\n    done\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"$2\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    clean_char=\"${dirty_string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$dirty_char\" = \"$clean_char\" ]; then\n        clean_char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$clean_char\"\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"${clean_string}\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_string_len=${#dirty_string}\n  local dirty_chars_len=${#dirty_chars}\n  for ((i=0; i<dirty_string_len; i++)); do\n    clean_char=${dirty_string:$i:1}\n    for ((j=0; j<dirty_chars_len; j++)); do\n      dirty_char=${dirty_chars:$j:1}\n      if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n        clean_char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$clean_char\"\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local char=\"\"\n  local is_dirty=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=\"${string:$i:1}\"\n    is_dirty=0\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        is_dirty=1\n        break\n      fi\n    done\n    if [ $is_dirty -eq 0 ]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    local clean_chars=\"\"\n    local dirty_char=\"\"\n    local clean_char=\"\"\n    local i=0\n\n    for ((i=0; i<${#dirty_chars}; i++)); do\n        dirty_char=\"${dirty_chars:$i:1}\"\n        clean_string=\"${dirty_string//$dirty_char}\"\n    done\n\n    echo \"$clean_string\"",
    "    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $2 != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    fi\n    clean_string+=\"$char\"\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ $dirty_char_found -eq 0 ]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! $dirty_chars =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local char=''\n    local dirty_char=''\n    local clean_char=''\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        clean_char=1\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$char\" == \"$dirty_char\" ]]; then\n                clean_char=0\n                break\n            fi\n        done\n        if [[ $clean_char -eq 1 ]]; then\n            clean_string=\"$clean_string$char\"\n        fi\n    done\n\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"${clean_string}\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  echo \"$1\" | sed \"s/[$2]//g\"",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str1_len=${#str1}\n    local str2_len=${#str2}\n    local i=0\n    local j=0\n    local result=\"\"\n    for ((i=0; i<str1_len; i++)); do\n        local char1=${str1:i:1}\n        local found=0\n        for ((j=0; j<str2_len; j++)); do\n            local char2=${str2:j:1}\n            if [ \"$char1\" = \"$char2\" ]; then\n                found=1\n                break\n            fi\n        done\n        if [ $found -eq 0 ]; then\n            result=\"$result$char1\"\n        fi\n    done\n    echo \"$result\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local clean_string=\"\"\n  local clean_char=\"\"\n  local dirty_char=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    clean_char=1\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      if [ \"${dirty_chars:$j:1}\" == \"$dirty_char\" ]; then\n        clean_char=0\n        break\n      fi\n    done\n    if [ $clean_char -eq 1 ]; then\n      clean_string=\"$clean_string$dirty_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    echo $1 | sed \"s/[$2]//g\"",
    "  echo \"$1\" | sed \"s/[$2]//g\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    else\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local dirty_string=\"$1\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=\"${dirty_string:$i:1}\"\n        if [[ ! $dirty_chars =~ $char ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char\n  local clean_char\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    clean_char=1\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [[ \"${dirty_string:$i:1}\" == \"${dirty_chars:$j:1}\" ]]; then\n        clean_char=0\n      fi\n    done\n    if [[ $clean_char -eq 1 ]]; then\n      clean_string=\"$clean_string${dirty_string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ \"$2\" != *\"${1:$i:1}\"* ]]; then\n            clean_string+=\"${1:$i:1}\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local string=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_string=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"",
    "    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=\"${dirty_string:$i:1}\"\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"",
    "  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"${clean_string}\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "  local -r clean_string=\"$1\"\n  local -r dirty_string=\"$2\"\n  local -r dirty_chars=\"${dirty_string//[^[:alnum:]]/}\"\n  local -r dirty_chars_regex=\"[${dirty_chars//[[:alnum:]]/\\\\}]\"\n  local -r clean_string_cleaned=\"${clean_string//$dirty_chars_regex/}\"\n  echo \"$clean_string_cleaned\"",
    "  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  echo \"$1\" | tr -d \"$2\"",
    "    local str=\"$1\"\n    local dirty_chars=\"$2\"\n    local clean_str=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    local dirty_len=${#dirty_chars}\n    local dirty_char=''\n    local char=''\n\n    for ((i=0; i<len; i++)); do\n        char=${str:i:1}\n        for ((j=0; j<dirty_len; j++)); do\n            dirty_char=${dirty_chars:j:1}\n            if [ \"$char\" == \"$dirty_char\" ]; then\n                break\n            fi\n        done\n        if [ \"$char\" != \"$dirty_char\" ]; then\n            clean_str+=\"$char\"\n        fi\n    done\n    echo \"$clean_str\"",
    "  local string=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_string=\"\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    clean_char=\"${string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$clean_char\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ \"$dirty_char_found\" == \"0\" ]; then\n      clean_string+=\"$clean_char\"\n    fi\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    local char=\"${string:$i:1}\"\n    local j=0\n    local found=0\n    while [ $j -lt ${#dirty_chars} ]; do\n      if [ \"$char\" == \"${dirty_chars:$j:1}\" ]; then\n        found=1\n        break\n      fi\n      j=$((j+1))\n    done\n    if [ $found -eq 0 ]; then\n      clean_string=\"$clean_string$char\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$clean_string\"",
    "  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string_to_clean=\"$1\"\n  local current_char=\"\"\n  local current_char_is_dirty=0\n\n  for (( i=0; i<${#string_to_clean}; i++ )); do\n    current_char=\"${string_to_clean:$i:1}\"\n    current_char_is_dirty=0\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      if [ \"${dirty_chars:$j:1}\" == \"$current_char\" ]; then\n        current_char_is_dirty=1\n        break\n      fi\n    done\n    if [ $current_char_is_dirty -eq 0 ]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n  echo \"$clean_string\""
  ]
}
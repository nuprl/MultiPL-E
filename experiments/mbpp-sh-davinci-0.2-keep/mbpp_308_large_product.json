{
  "name": "mbpp_308_large_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i n=$3\n  local -i i j\n  local -i max_i max_j\n  local -i max_product\n  local -i product\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      product=${a[i]}*${b[j]}\n      if ((product > max_product)); then\n        max_i=$i\n        max_j=$j\n        max_product=$product\n      fi\n    done\n  done\n  echo \"${a[max_i]} ${b[max_j]}\"",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local i j k\n  local -a products\n  local -a sorted_products\n  local -a result\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$i$j]=$((list1[i] * list2[j]))\n    done\n  done\n\n  sorted_products=($(printf '%s\\n' \"${products[@]}\" | sort -nr))\n\n  for ((k=0; k<n; k++)); do\n    result[k]=${sorted_products[k]}\n  done\n\n  echo \"${result[@]}\"",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j\n  local product\n  local products=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -a products\n    local -i i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i j k\n  for ((i=0;i<${#a[@]};i++)); do\n    for ((j=0;j<${#b[@]};j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n  echo ${sorted[@]:0:$n}",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '",
    "  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  local product\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a a=($1)\n  local -a b=($2)\n  local -i n=$3\n  local -i i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  echo ${c[@]} | tr ' ' '\\n' | sort -nr | head -n $n",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -i max_product=-1\n    local -i max_i=-1\n    local -i max_j=-1\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            local -i product=${list1[i]}*${list2[j]}\n            if ((product > max_product)); then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo $max_product ${list1[max_i]} ${list2[max_j]}",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i]*list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product=0\n  local -i max_i=0\n  local -i max_j=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  echo \"${list1[max_i]} ${list2[max_j]}\""
  ]
}
{
  "name": "mbpp_12_sort_matrix",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to sort a given matrix in ascending order according to the sum of its rows.\n#\n# $1 is a newline-separated, space-separated list\nsort_matrix() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_12_sort_matrix.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sort_matrix \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\\n2 4 5\\n1 1 1\") = \"1 1 1\\n1 2 3\\n2 4 5\" ]]\n    [[ $(candidate \"1 2 3\\n-2 4 -5\\n1 -1 1\") = \"-2 4 -5\\n1 -1 1\\n1 2 3\" ]]\n    [[ $(candidate \"5 8 9\\n6 4 3\\n2 1 4\") = \"2 1 4\\n6 4 3\\n5 8 9\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local matrix=\"$1\"\n  local row_sums=()\n  local row_index=0\n  local row_sum=0\n  local row_sum_index=0\n  local row_sum_index_max=0\n  local row_sum_max=0\n  local row_sum_max_index=0\n  local row_sum_max_index_max=0\n  local row_sum_max_max=0\n  local row_sum_max_max_index=0\n  local row_sum_max_max_index_max=0\n  local row_sum_max_max_max=0\n  local row_sum_max_max_max_index=0\n  local row_sum_max_max_max_index_max=0\n  local row_sum_max_max_max_max=0\n  local row_sum_max_max_max_max_index=0\n  local row_sum_max_max_max_max_index_max=0\n  local row_sum_max_max_max_max_max=0\n  local row_sum_max_max_max_max_max_index=0\n  local row_sum_max_max_max_max_max_index_max=0\n  local row_sum_max_max_max_max_max_max=0\n  local row_sum_max_max_max_max_max_max_index=0\n  local row_sum_max_max_max_max_max_max_index_max=0\n  local row_sum_max_max_max_max_max_max_max=0\n  local row_sum_max_max_max_max_max_max_max_index=0\n  local row_sum_max_max_max_max_max_max_max_index_max=0\n  local row_sum_max_max_max_max_max_max_max_max=0\n  local row_sum_max_max_max_max_max_max_max_max_index=0\n  local row_sum_max_max_max_max_max_max_max_max_index_max=0\n",
    "    local -a matrix\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local",
    "\tlocal -a matrix\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i k=0\n\tlocal -i l=0\n\tlocal -i m=0\n\tlocal -i n=0\n\tlocal -i p=0\n\tlocal -i q=0\n\tlocal -i r=0\n\tlocal -i s=0\n\tlocal -i t=0\n\tlocal -i u=0\n\tlocal -i v=0\n\tlocal -i w=0\n\tlocal -i x=0\n\tlocal -i y=0\n\tlocal -i z=0\n\tlocal -i aa=0\n\tlocal -i bb=0\n\tlocal -i cc=0\n\tlocal -i dd=0\n\tlocal -i ee=0\n\tlocal -i ff=0\n\tlocal -i gg=0\n\tlocal -i hh=0\n\tlocal -i ii=0\n\tlocal -i jj=0\n\tlocal -i kk=0\n\tlocal -i ll=0\n\tlocal -i mm=0\n\tlocal -i nn=0\n\tlocal -i oo=0\n\tlocal -i pp=0\n\tlocal -i qq=0\n\tlocal -i rr=0\n\tlocal -i ss=0\n\tlocal -i tt=0\n\tlocal -i uu=0\n\tlocal -i vv=0\n\tlocal -i ww=0\n\tlocal -i xx=0\n\tlocal -i yy=0\n\tlocal -i zz=0\n\tlocal -i aaa=0\n\tlocal -i bbb=0\n\tlocal -i ccc=0\n\tlocal -i ddd=0\n\tlocal -i eee=0\n\tlocal -i fff=0\n\tlocal -i ggg=0\n\tlocal -i hhh=0\n\tlocal -i iii=0\n\tlocal -i jjj=0\n\tlocal -i kkk=0\n\tlocal -i lll=0\n\tlocal -i mmm=0\n\tlocal -i nnn=0\n\tlocal -i ooo=0\n\tlocal -i ppp=0\n\t",
    "    local -a matrix\n    local -a sums\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i o",
    "  local matrix=\"$1\"\n  local -a rows\n  local -a sums\n  local -i i=0\n  local -i j=0\n  local -i max_row_len=0\n  local -i max_col_len=0\n  local -i row_len=0\n  local -i col_len=0\n  local -i sum=0\n  local -i max_sum=0\n  local -i max_sum_index=0\n  local -i max_sum_index_prev=0\n  local -i max_sum_index_tmp=0\n  local -i max_sum_index_prev_tmp=0\n  local -i max_sum_index_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_prev_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max_sum_index_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local -i max",
    "  local -a matrix\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n  local -i bq=0\n",
    "  local matrix=\"$1\"\n  local -a rows\n  local -a sums\n  local -a sorted_rows\n  local -a sorted_sums\n  local -a sorted_matrix\n  local row\n  local sum\n  local i\n  local j\n  local k\n\n  # Split the matrix into rows\n  rows=($(echo \"$matrix\" | tr '\\n' ' '))\n\n  # Calculate the sum of each row\n  for ((i = 0; i < ${#rows[@]}; i++)); do\n    row=\"${rows[$i]}\"\n    sum=0\n    for ((j = 0; j < ${#row}; j++)); do\n      sum=$((sum + ${row:$j:1}))\n    done\n    sums[$i]=$sum\n  done\n\n  # Sort the rows and sums\n  for ((i = 0; i < ${#rows[@]}; i++)); do\n    for ((j = i + 1; j < ${#rows[@]}; j++)); do\n      if [[ ${sums[$i]} -gt ${sums[$j]} ]]; then\n        sum=\"${sums[$i]}\"\n        sums[$i]=\"${sums[$j]}\"\n        sums[$j]=\"$sum\"\n        row=\"${rows[$i]}\"\n        rows[$i]=\"${rows[$j]}\"\n        rows[$j]=\"$row\"\n      fi\n    done\n  done\n\n  # Print the sorted matrix\n  for ((i = 0; i < ${#rows[@]}; i++)); do\n    row=\"${rows[$i]}\"\n    for ((j = 0; j < ${#row}; j++)); do\n      printf \"%d \" \"${row:$j:1}\"\n    done\n    printf \"\\n\"\n  done",
    "    local matrix=\"$1\"\n    local row_sums=()\n    local row_index=0\n    local row_sum=0\n    local row=''\n    local row_sums_index=0\n    local row_sums_sorted=()\n    local row_sums_sorted_index=0\n    local row_sums_sorted_row_index=0\n    local row_sums_sorted_row=''\n    local row_sums_sorted_row_index_index=0\n    local row_sums_sorted_row_index_index_row_index=0\n    local row_sums_sorted_row_index_index_row=''\n    local row_sums_sorted_row_index_index_row_index_index=0\n    local row_sums_sorted_row_index_index_row_index_index_row_index=0\n    local row_sums_sorted_row_index_index_row_index_index_row=''\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index=0\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index_row_index=0\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index_row=''\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index_row_index_index=0\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index_row_index_index_row_index=0\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index_row_index_index_row=''\n    local row_sums_sorted_row_index_index_row_index_index_row_index_index_row_index_index_row_index_index=0\n    local row_sums_sorted_row_index_index",
    "  local -a matrix\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=0\n  local -i m=0\n  local -i sum=0\n  local -i max=0\n  local -i min=0\n  local -i tmp=0\n  local -i tmp_sum=0\n  local -i tmp_max=0\n  local -i tmp_min=0\n  local -i tmp_n=0\n  local -i tmp_m=0\n  local -i tmp_i=0\n  local -i tmp_j=0\n  local -i tmp_k=0\n  local -i tmp_sum_i=0\n  local -i tmp_sum_j=0\n  local -i tmp_sum_k=0\n  local -i tmp_max_i=0\n  local -i tmp_max_j=0\n  local -i tmp_max_k=0\n  local -i tmp_min_i=0\n  local -i tmp_min_j=0\n  local -i tmp_min_k=0\n  local -a tmp_matrix\n  local -a tmp_matrix_i\n  local -a tmp_matrix_j\n  local -a tmp_matrix_k\n  local -a tmp_matrix_sum\n  local -a tmp_matrix_max\n  local -a tmp_matrix_min\n  local -a tmp_matrix_n\n  local -a tmp_matrix_m\n  local -a tmp_matrix_sum_i\n  local -a tmp_matrix_sum_j\n  local -a tmp_matrix_sum_k\n  local -a tmp_matrix_max_i\n  local -a tmp_matrix_max_j\n  local -a tmp_matrix_max_k\n  local -a tmp_matrix_min_i\n  local -a tmp_matrix_min_j\n  local -a tmp_matrix_min_k\n  local -a matrix_sum\n  local -a matrix_max\n  local -a matrix_min\n  local -a matrix_n",
    "    local -a matrix\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i sum=0\n    local -i sum_i=0\n    local -i sum_j=0\n    local -i sum_k=0\n    local -i sum_l=0\n    local -i sum_m=0\n    local -i sum_n=0\n    local -i sum_o=0\n    local -i sum_p=0\n    local -i sum_q=0\n    local -i sum_r=0\n    local -i sum_s=0\n    local -i sum_t=0\n    local -i sum_u=0\n    local -i sum_v=0\n    local -i sum_w=0\n    local -i sum_x=0\n    local -i sum_y=0\n    local -i sum_z=0\n    local -i sum_min=0\n    local -i sum_min_i=0\n    local -i sum_min_j=0\n    local -i sum_min_k=0\n    local -i sum_min_l=0\n    local -i sum_min_m=0\n    local -i sum_min_n=0\n    local -i sum_min_o=0\n    local -i sum_min_p=0\n    local -i sum_min_q=0\n    local -i sum_min_r=0\n    local -i sum_min_s=0\n    local -i sum_min_t=0\n    local -i sum_min_u=0\n    local -i sum_min",
    "  local matrix=\"$1\"\n  local rows=$(echo \"$matrix\" | wc -l)\n  local cols=$(echo \"$matrix\" | head -n 1 | wc -w)\n  local sums=()\n  for ((i=0; i<rows; i++)); do\n    local sum=0\n    for ((j=0; j<cols; j++)); do\n      local num=$(echo \"$matrix\" | head -n $((i+1)) | tail -n 1 | awk -v j=$((j+1)) '{print $j}')\n      sum=$((sum + num))\n    done\n    sums+=(\"$sum\")\n  done\n  local sorted_sums=($(printf \"%s\\n\" \"${sums[@]}\" | sort -n))\n  for ((i=0; i<rows; i++)); do\n    local sum=${sorted_sums[i]}\n    local row=$(echo \"$matrix\" | grep -n \"^.* $sum\\$\" | cut -d: -f1)\n    echo \"$matrix\" | head -n $((row)) | tail -n 1\n  done",
    "    local -a matrix\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i sum=0\n    local -i max=0\n    local -i max_index=0\n    local -i temp=0\n    local -i temp_index=0\n    local -i temp_sum=0\n    local -i temp_max=0\n    local -i temp_max_index=0\n    local -i temp_temp=0\n    local -i temp_temp_index=0\n    local -i temp_temp_sum=0\n    local -i temp_temp_max=0\n    local -i temp_temp_max_index=0\n    local -i temp_temp_temp=0\n    local -i temp_temp_temp_index=0\n    local -i temp_temp_temp_sum=0\n    local -i temp_temp_temp_max=0\n    local -i temp_temp_temp_max_index=0\n    local -i temp_temp_temp_temp=0\n    local -i temp_temp_temp_temp_index=0\n    local -i temp_temp_temp_temp_sum=0\n    local -i temp_temp_temp_temp_max=0\n    local -i temp_temp_temp_temp_max_index=0\n    local -i temp_temp_temp_temp_temp=0\n    local -i temp_temp_temp_temp_temp_index=0\n    local -i temp_temp_temp_temp_temp_sum=0\n    local -i temp_temp_temp_temp_temp_max=0\n    local -i temp_temp_temp_temp_temp_max_index=0\n    local -i temp_temp_temp_temp_temp_temp=0\n    local -i temp_temp_temp_temp_temp_temp_index=0\n    local -i temp_temp_temp_temp_temp_temp_sum=0\n    local -i temp_temp_temp_temp_temp_temp_max=0\n    local -i temp_temp_temp_temp",
    "  local matrix_string=\"$1\"\n  local matrix_array=()\n  local matrix_array_sorted=()\n  local matrix_string_sorted=\"\"\n  local row_sum=0\n  local row_sum_sorted=0\n  local row_index=0\n  local row_index_sorted=0\n  local row_index_sorted_prev=0\n  local row_index_sorted_next=0\n  local row_index_sorted_next_prev=0\n  local row_index_sorted_next_next=0\n  local row_index_sorted_next_next_prev=0\n  local row_index_sorted_next_next_next=0\n  local row_index_sorted_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next=0\n  local row_index_sorted_next_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next_next=0\n  local row_index_sorted_next_next_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next_next_next=0\n  local row_index_sorted_next_next_next_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next_next_next_next=0\n  local row_index_sorted_next_next_next_next_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next_next_next_next_next=0\n  local row_index_sorted_next_next_next_next_next_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next_next_next_next_next_next=0\n  local row_index_sorted_next_next_next_next_next_next_next_next_next_prev=0\n  local row_index_sorted_next_next_next_next_next_next_next_next_",
    "  local -a matrix\n  local -a sums\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=0\n  local -i m=0\n  local -i sum=0\n  local -i max_sum=0\n  local -i max_index=0\n  local -i temp=0\n  local -i temp_index=0\n\n  # read the matrix\n  while read line; do\n    matrix[i++]=$line\n  done\n\n  # get the number of rows and columns\n  n=${#matrix[@]}\n  m=${#matrix[0]}\n\n  # calculate the sums\n  for ((i=0; i<n; i++)); do\n    sum=0\n    for ((j=0; j<m; j++)); do\n      sum=$((sum + ${matrix[i]:j:1}))\n    done\n    sums[i]=$sum\n  done\n\n  # sort the matrix\n  for ((i=0; i<n; i++)); do\n    max_sum=${sums[i]}\n    max_index=$i\n    for ((j=i+1; j<n; j++)); do\n      if ((${sums[j]} > max_sum)); then\n        max_sum=${sums[j]}\n        max_index=$j\n      fi\n    done\n    if ((max_index != i)); then\n      temp=${sums[i]}\n      sums[i]=${sums[max_index]}\n      sums[max_index]=$temp\n      temp=${matrix[i]}\n      matrix[i]=${matrix[max_index]}\n      matrix[max_index]=$temp\n    fi\n  done\n\n  # print the matrix\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      printf \"%d \" ${matrix[i]:j:1}\n    done\n    printf \"\\n\"\n  done",
    "  local matrix=\"$1\"\n  local -a rows\n  local -a sums\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=0\n  local -i m=0\n  local -i sum=0\n  local -i max_sum=0\n  local -i max_sum_index=0\n  local -i row_count=0\n  local -i col_count=0\n  local -i row_index=0\n  local -i col_index=0\n  local -i temp=0\n  local -i temp_index=0\n  local -i temp_sum=0\n  local -i temp_sum_index=0\n  local -i temp_row_count=0\n  local -i temp_col_count=0\n  local -i temp_row_index=0\n  local -i temp_col_index=0\n  local -i temp_max_sum=0\n  local -i temp_max_sum_index=0\n  local -i temp_row_index_2=0\n  local -i temp_col_index_2=0\n  local -i temp_row_index_3=0\n  local -i temp_col_index_3=0\n  local -i temp_row_index_4=0\n  local -i temp_col_index_4=0\n  local -i temp_row_index_5=0\n  local -i temp_col_index_5=0\n  local -i temp_row_index_6=0\n  local -i temp_col_index_6=0\n  local -i temp_row_index_7=0\n  local -i temp_col_index_7=0\n  local -i temp_row_index_8=0\n  local -i temp_col_index_8=0\n  local -i temp_row_index_9=0\n  local -i temp_col_index_9=0\n  local -i temp_row_index_10=0\n  local -i temp_col_index_10=0\n  local -i temp_row_index_11=0\n ",
    "  local matrix=\"$1\"\n  local row_sums=()\n  local row_index=0\n  local row_sum=0\n  local row_count=0\n  local row_sums_index=0\n  local row_sums_count=0\n  local row_sums_sorted=()\n  local row_sums_sorted_index=0\n  local row_sums_sorted_count=0\n  local sorted_matrix=()\n  local sorted_matrix_index=0\n  local sorted_matrix_count=0\n  local sorted_matrix_row=()\n  local sorted_matrix_row_index=0\n  local sorted_matrix_row_count=0\n  local sorted_matrix_row_value=0\n  local sorted_matrix_row_value_index=0\n  local sorted_matrix_row_value_count=0\n  local sorted_matrix_row_value_count_index=0\n  local sorted_matrix_row_value_count_count=0\n  local sorted_matrix_row_value_count_count_index=0\n  local sorted_matrix_row_value_count_count_count=0\n  local row=()\n  local row_index=0\n  local row_count=0\n  local row_value=0\n  local row_value_index=0\n  local row_value_count=0\n  local row_value_count_index=0\n  local row_value_count_count=0\n  local row_value_count_count_index=0\n  local row_value_count_count_count=0\n  local row_value_count_count_count_index=0\n  local row_value_count_count_count_count=0\n  local row_value_count_count_count_count_index=0\n  local row_value_count_count_count_count_count=0\n  local row_value_count_count_count_count_count_index=0\n  local row_value_count_count_count_count_count_count=0\n  local row_value_count_count_count_count_count",
    "\tlocal matrix=\"$1\"\n\tlocal rows=()\n\tlocal row_sums=()\n\tlocal row_index=0\n\tlocal row_sum=0\n\tlocal row=''\n\tlocal row_index_to_swap=0\n\tlocal row_to_swap=''\n\tlocal row_sum_to_swap=0\n\tlocal row_index_to_swap_with=0\n\tlocal row_to_swap_with=''\n\tlocal row_sum_to_swap_with=0\n\tlocal row_index_to_swap_with_temp=0\n\tlocal row_to_swap_with_temp=''\n\tlocal row_sum_to_swap_with_temp=0\n\tlocal row_index_to_swap_temp=0\n\tlocal row_to_swap_temp=''\n\tlocal row_sum_to_swap_temp=0\n\tlocal row_index_to_swap_with_temp_temp=0\n\tlocal row_to_swap_with_temp_temp=''\n\tlocal row_sum_to_swap_with_temp_temp=0\n\tlocal row_index_to_swap_temp_temp=0\n\tlocal row_to_swap_temp_temp=''\n\tlocal row_sum_to_swap_temp_temp=0\n\tlocal row_index_to_swap_with_temp_temp_temp=0\n\tlocal row_to_swap_with_temp_temp_temp=''\n\tlocal row_sum_to_swap_with_temp_temp_temp=0\n\tlocal row_index_to_swap_temp_temp_temp=0\n\tlocal row_to_swap_temp_temp_temp=''\n\tlocal row_sum_to_swap_temp_temp_temp=0\n\tlocal row_index_to_swap_with_temp_temp_temp_temp=0\n\tlocal row_to_swap_with_temp_temp_temp_temp=''\n\tlocal row_sum_to_swap_with_temp_temp_temp_temp=0\n\tlocal row_index_to",
    "    local -a matrix\n    local -a sums\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i sum=0\n    local -i max=0\n    local -i max_i=0\n    local -i max_j=0\n    local -i tmp=0\n\n    # Read the matrix\n    while read line; do\n        matrix[$i]=$line\n        ((i++))\n    done <<< \"$1\"\n\n    # Get the number of rows and columns\n    n=${#matrix[@]}\n    m=${#matrix[0]}\n\n    # Get the sums of the rows\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=0; j<m; j++)); do\n            sum=$((sum + ${matrix[$i]:$j:1}))\n        done\n        sums[$i]=$sum\n    done\n\n    # Sort the matrix\n    for ((i=0; i<n; i++)); do\n        max=${sums[$i]}\n        max_i=$i\n        for ((j=i+1; j<n; j++)); do\n            if ((${sums[$j]} > max)); then\n                max=${sums[$j]}\n                max_i=$j\n            fi\n        done\n        tmp=${sums[$i]}\n        sums[$i]=${sums[$max_i]}\n        sums[$max_i]=$tmp\n        tmp=${matrix[$i]}\n        matrix[$i]=${matrix[$max_i]}\n        matrix[$max_i]=$tmp\n    done\n\n    # Print the matrix\n    for ((i=0; i<n; i++)); do\n        for ((j=0; j<m; j++)); do\n            echo -n \"${matrix[$i]:$j:1} \"\n        done\n        echo\n    done",
    "    local -a matrix\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n    local -i bq=0\n",
    "  local matrix=\"$1\"\n  local -a rows\n  local -a sums\n  local -a sorted_rows\n  local -a sorted_sums\n  local -a sorted_matrix\n  local i=0\n  local j=0\n  local row_count=0\n  local sum=0\n  local row=''\n  local sorted_row=''\n  local sorted_sum=''\n  local sorted_matrix=''\n\n  while read -r row; do\n    rows[$i]=\"$row\"\n    sum=0\n    for j in $row; do\n      (( sum += j ))\n    done\n    sums[$i]=\"$sum\"\n    (( i++ ))\n  done <<< \"$matrix\"\n\n  row_count=$i\n  for (( i=0; i<row_count; i++ )); do\n    sorted_rows[$i]=${rows[$i]}\n    sorted_sums[$i]=${sums[$i]}\n  done\n\n  for (( i=0; i<row_count; i++ )); do\n    for (( j=i+1; j<row_count; j++ )); do\n      if (( sorted_sums[$i] > sorted_sums[$j] )); then\n        sorted_row=${sorted_rows[$i]}\n        sorted_rows[$i]=${sorted_rows[$j]}\n        sorted_rows[$j]=$sorted_row\n        sorted_sum=${sorted_sums[$i]}\n        sorted_sums[$i]=${sorted_sums[$j]}\n        sorted_sums[$j]=$sorted_sum\n      fi\n    done\n  done\n\n  for (( i=0; i<row_count; i++ )); do\n    sorted_matrix=\"$sorted_matrix${sorted_rows[$i]}\\n\"\n  done\n\n  echo -e \"$sorted_matrix\""
  ]
}
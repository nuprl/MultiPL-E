{
  "name": "mbpp_273_substract_elements",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nsubstract_elements() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    substract_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 4 5\" \"2 5 18\") = \"8 -1 -13\" ]]\n    [[ $(candidate \"11 2 3\" \"24 45 16\") = \"-13 -43 -13\" ]]\n    [[ $(candidate \"7 18 9\" \"10 11 12\") = \"-3 7 -3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i = 0; i < ${#_tuple1[@]}; i++)); do\n        _result[$i]=$((_tuple1[$i] - _tuple2[$i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=\"\"\n    for i in \"${!tuple1[@]}\"; do\n        result+=\"$((tuple1[$i] - tuple2[$i])) \"\n    done\n    echo \"$result\"",
    "    local -n arr1=$1\n    local -n arr2=$2\n    local result=()\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        result+=($((${arr1[$i]} - ${arr2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    local result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        result[$i]=$((a[$i] - b[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[i] - _tuple2[i])) \"\n    done\n    echo \"$_result\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=\"\"\n\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result=\"${_result}$((_tuple1[i] - _tuple2[i])) \"\n  done\n\n  echo \"$_result\"",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i = 0; i < ${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[i] - _tuple2[i])) \"\n    done\n    echo \"$_result\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[i]=$((t1[i] - t2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result=()\n    for ((i=0;i<${#tuple1[@]};i++)); do\n        result[i]=$((tuple1[i]-tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=\"\"\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=\"$((${tuple1[$i]} - ${tuple2[$i]})) \"\n    done\n    echo \"$result\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=\"\"\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=\"$(( ${_tuple1[$i]} - ${_tuple2[$i]} )) \"\n  done\n  echo \"${_result% }\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=($((${_tuple1[$i]} - ${_tuple2[$i]})))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result=\"${_result} $((_tuple1[i] - _tuple2[i]))\"\n    done\n    echo \"${_result# }\"",
    "  # Write your code here\n  # Use echo to print the output to stdout\n  #\n  # Example:\n  # echo \"1 2 3\"\n  #\n  # Hint: You can use the following to convert a string to an array:\n  # arr=($1)\n  #\n  # Hint: You can use the following to convert an array to a string:\n  # str=\"${arr[@]}\"\n  #\n  # Hint: You can use the following to convert an array to a string with spaces:\n  # IFS=' ' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert an array to a string with newlines:\n  # IFS=$'\\n' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert an array to a string with tabs:\n  # IFS=$'\\t' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert a string to an array with spaces:\n  # IFS=' ' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert a string to an array with newlines:\n  # IFS=$'\\n' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert a string to an array with tabs:\n  # IFS=$'\\t' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert a string to an array with spaces:\n  # IFS=' ' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert a string to an array with newlines:\n  # IFS=$'\\n' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following to convert a string to an array with tabs:\n  # IFS=$'\\t' read -r -a array <<< \"$1\"\n  #\n  # Hint: You can use the following",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local result=\"\"\n\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result=\"$result $((tuple1[i] - tuple2[i]))\"\n    done\n\n    echo $result",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    local result=\"\"\n    for ((i=0; i<${#a[@]}; i++)); do\n        result=\"$result $((a[i] - b[i]))\"\n    done\n    echo \"$result\"",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n  done\n  echo \"${result[@]}\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local t3=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        t3[$i]=$((t1[$i] - t2[$i]))\n    done\n    echo ${t3[@]}",
    "    local -n first_tuple=$1\n    local -n second_tuple=$2\n    local -a result=()\n    for ((i=0; i<${#first_tuple[@]}; i++)); do\n        result+=($((${first_tuple[$i]} - ${second_tuple[$i]})))\n    done\n    echo ${result[@]}",
    "    local tuple1=\"$1\"\n    local tuple2=\"$2\"\n    local tuple1_array=($tuple1)\n    local tuple2_array=($tuple2)\n    local tuple1_length=${#tuple1_array[@]}\n    local tuple2_length=${#tuple2_array[@]}\n    local tuple_length=$((tuple1_length>tuple2_length?tuple1_length:tuple2_length))\n    local tuple_result=\"\"\n    for ((i=0; i<tuple_length; i++))\n    do\n        local tuple1_value=${tuple1_array[$i]}\n        local tuple2_value=${tuple2_array[$i]}\n        if [ -z \"$tuple1_value\" ]\n        then\n            tuple1_value=0\n        fi\n        if [ -z \"$tuple2_value\" ]\n        then\n            tuple2_value=0\n        fi\n        local tuple_value=$((tuple1_value-tuple2_value))\n        tuple_result=\"$tuple_result $tuple_value\"\n    done\n    echo $tuple_result",
    "    local -n t1=$1\n    local -n t2=$2\n    local -a result\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[i]=$((${t1[i]} - ${t2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n  done\n  echo \"${_result[@]}\"",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  local result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result+=($((tuple1[i] - tuple2[i])))\n  done\n  echo \"${result[@]}\"",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result[i]=$((${tuple1[i]}-${tuple2[i]}))\n  done\n  echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((_tuple1[i] - _tuple2[i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$(( tuple1[i] - tuple2[i] ))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]}-${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  for ((i = 0; i < ${#tuple1[@]}; i++)); do\n    echo \"${tuple1[i]} - ${tuple2[i]}\" | bc\n  done",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n\n  local result=()\n  for (( i = 0; i < ${#tuple1[@]}; i++ )); do\n    result+=($(( ${tuple1[$i]} - ${tuple2[$i]} )))\n  done\n\n  echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo ${tuple3[@]}",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i = 0; i < ${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local a=($1)\n    local b=($2)\n    local result=()\n    for i in ${!a[@]}; do\n        result[$i]=$((a[$i] - b[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n first_tuple=$1\n    local -n second_tuple=$2\n    local -a result=()\n    for ((i=0; i<${#first_tuple[@]}; i++)); do\n        result[$i]=$((${first_tuple[$i]} - ${second_tuple[$i]}))\n    done\n    echo \"${result[@]}\"",
    "  local tuple1=($1)\n  local tuple2=($2)\n  local result=\"\"\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result=\"$result $((tuple1[i] - tuple2[i]))\"\n  done\n  echo $result",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    local i=0\n    for element in ${tuple1[@]}; do\n        result[$i]=$(($element - ${tuple2[$i]}))\n        i=$(($i + 1))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((${_tuple1[$i]} - ${_tuple2[$i]})) \"\n    done\n    echo \"$_result\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=\"\"\n\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=\"$((${_tuple1[$i]} - ${_tuple2[$i]})) \"\n  done\n\n  echo \"$_result\"",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  local result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n  done\n  echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo ${result[@]}",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n\n    echo ${result[@]}",
    "    local -n a=$1\n    local -n b=$2\n    local -a result\n    for ((i=0; i<${#a[@]}; i++)); do\n        result[i]=$((a[i]-b[i]))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]}-${tuple2[$i]}))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=($((${_tuple1[$i]}-${_tuple2[$i]})))\n    done\n    echo \"${_result[@]}\"",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[i] - _tuple2[i])) \"\n    done\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n    echo ${result[@]}",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local -a _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result[i]=$((_tuple1[i] - _tuple2[i]))\n  done\n  echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n\n    for i in ${!_tuple1[@]}; do\n        _result+=\"$(( ${_tuple1[$i]} - ${_tuple2[$i]} )) \"\n    done\n\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo ${result[@]}",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for i in \"${!tuple1[@]}\"; do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i < ${#_tuple1[@]}; i++)); do\n        _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((_tuple1[i] - _tuple2[i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for i in \"${!tuple1[@]}\"; do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    for ((i = 0; i < ${#a[@]}; i++)); do\n        echo $((a[i] - b[i]))\n    done",
    "  local -n a=$1\n  local -n b=$2\n  local i=0\n  local result=()\n  for i in \"${a[@]}\"; do\n    result+=($(($i - ${b[$i]})))\n  done\n  echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]}-${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]}-${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${tuple3[@]}\"",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local result=\"\"\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=\"$((${tuple1[$i]} - ${tuple2[$i]})) \"\n    done\n    echo $result",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i = 0; i < ${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo ${result[@]}",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=\"\"\n\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=\"$((${_tuple1[$i]} - ${_tuple2[$i]})) \"\n  done\n\n  echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i = 0; i < ${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n\n    echo \"${result[*]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=($((${_tuple1[$i]} - ${_tuple2[$i]})))\n    done\n    echo \"${_result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((a[i] - b[i]))\n    done\n    echo ${c[@]}",
    "  local -n a=$1\n  local -n b=$2\n  local result=()\n  for ((i=0; i < ${#a[@]}; i++)); do\n    result[i]=$((${a[i]} - ${b[i]}))\n  done\n  echo \"${result[@]}\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[$i]=$((${t1[$i]} - ${t2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        result[$i]=$((a[$i] - b[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n\n    for ((i = 0; i < ${#_tuple1[@]}; i++)); do\n        _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n    done\n\n    echo \"${_result[@]}\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[$i]=$((t1[$i] - t2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i = 0; i < ${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((_tuple1[$i] - _tuple2[$i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[i]=$((t1[i] - t2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i = 0; i < ${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=\"\"\n    for i in ${!tuple1[@]}; do\n        result+=\"$((${tuple1[$i]} - ${tuple2[$i]})) \"\n    done\n    echo \"$result\"",
    "    local -n t1=$1\n    local -n t2=$2\n    for ((i=0; i<${#t1[@]}; i++)); do\n        t1[$i]=$((t1[$i]-t2[$i]))\n    done",
    "  local -a tuple1=($1)\n  local -a tuple2=($2)\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result[$i]=$((${tuple1[$i]}-${tuple2[$i]}))\n  done\n  echo \"${result[@]}\"",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local result=\"\"\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result=\"$result $((tuple1[i] - tuple2[i]))\"\n    done\n    echo $result",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "  local -n a=$1\n  local -n b=$2\n  local result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    result[i]=$((a[i] - b[i]))\n  done\n  echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=\"\"\n    for i in ${!tuple1[@]}; do\n        result+=\"$((${tuple1[$i]} - ${tuple2[$i]})) \"\n    done\n    echo \"$result\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[i] - _tuple2[i])) \"\n    done\n    echo \"$_result\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((_tuple1[i] - _tuple2[i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=\"\"\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=\"$((${tuple1[$i]} - ${tuple2[$i]})) \"\n    done\n    echo \"$result\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=($((${_tuple1[$i]} - ${_tuple2[$i]})))\n    done\n    echo \"${_result[@]}\"",
    "  local -n a=$1\n  local -n b=$2\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((a[i] - b[i]))\n  done\n  echo \"${c[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=\"\"\n\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=\"$((${_tuple1[$i]} - ${_tuple2[$i]})) \"\n  done\n\n  echo \"$_result\"",
    "  local -n a=$1\n  local -n b=$2\n  local result=\"\"\n  for i in ${!a[@]}; do\n    result+=\"$((a[$i] - b[$i])) \"\n  done\n  echo \"$result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i < ${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]}-${tuple2[i]}))\n    done\n    echo ${result[@]}",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${tuple3[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$(( ${_tuple1[$i]} - ${_tuple2[$i]} )) \"\n    done\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i=0; i<${#tuple1[@]}; i++))\n    do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n\n    for i in ${!_tuple1[@]}; do\n        _result[$i]=$((_tuple1[$i] - _tuple2[$i]))\n    done\n\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n\n    echo \"${result[@]}\"",
    "    local -a t1=($1)\n    local -a t2=($2)\n    local -a t3=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        t3[i]=$((t1[i] - t2[i]))\n    done\n    echo \"${t3[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local result=\"\"\n    for i in ${!tuple1[@]}; do\n        result=\"$result $((tuple1[$i] - tuple2[$i]))\"\n    done\n    echo $result",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[i] - _tuple2[i])) \"\n    done\n    echo \"$_result\"",
    "    local -n a=$1\n    local -n b=$2\n    local result=()\n    for i in \"${!a[@]}\"; do\n        result+=($((${a[$i]} - ${b[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for i in \"${!tuple1[@]}\"; do\n        result[$i]=$(( tuple1[$i] - tuple2[$i] ))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[$i] - _tuple2[$i])) \"\n    done\n\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${tuple3[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result=()\n    for i in \"${!tuple1[@]}\"; do\n        result+=($((tuple1[i] - tuple2[i])))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local tuple_length=${#tuple1[@]}\n    local result=()\n    for ((i=0; i<tuple_length; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]}-${tuple2[$i]}))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${tuple3[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((${_tuple1[$i]} - ${_tuple2[$i]})) \"\n    done\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]}-${tuple2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local t1=($1)\n    local t2=($2)\n    local result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[$i]=$((${t1[$i]} - ${t2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result[$i]=$((_tuple1[$i] - _tuple2[$i]))\n  done\n  echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo ${result[@]}",
    "    local -n arr1=$1\n    local -n arr2=$2\n    local -a result\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        result[$i]=$((arr1[$i] - arr2[$i]))\n    done\n    echo \"${result[@]}\"",
    "  local tuple1=($1)\n  local tuple2=($2)\n  local result=()\n\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n  done\n\n  echo \"${result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=\"\"\n\n  for (( i=0; i<${#_tuple1[@]}; i++ )); do\n    _result+=\"$((${_tuple1[i]} - ${_tuple2[i]})) \"\n  done\n\n  echo \"$_result\"",
    "    # TODO: Write your code here\n    #\n    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]}-${_tuple2[i]}))\n    done\n    echo ${_result[@]}",
    "    local tuple1=($1)\n    local tuple2=($2)\n    local result=()\n    for i in ${!tuple1[@]}; do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo ${result[@]}",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  local result=()\n  for ((i=0; i<${#tuple1[@]}; i++))\n  do\n    result+=($((${tuple1[$i]}-${tuple2[$i]})))\n  done\n  echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=($((${_tuple1[$i]} - ${_tuple2[$i]})))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a tuple3=()\n\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[i]=$((tuple1[i]-tuple2[i]))\n    done\n\n    echo ${tuple3[@]}",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=\"\"\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=\"$((${tuple1[$i]} - ${tuple2[$i]})) \"\n    done\n    echo $result",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((${tuple1[$i]} - ${tuple2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "  local -n _tuple1=$1 _tuple2=$2\n  local _result=\"\"\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=\"$((_tuple1[i] - _tuple2[i])) \"\n  done\n  echo \"$_result\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "  local -n a=$1\n  local -n b=$2\n  local result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    result[i]=$((a[i] - b[i]))\n  done\n  echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo \"${tuple3[@]}\"",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n\n  local result=\"\"\n  for ((i = 0; i < ${#tuple1[@]}; i++)); do\n    result+=\"$((tuple1[i] - tuple2[i])) \"\n  done\n  echo \"$result\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local -a t3=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        t3[i]=$((t1[i] - t2[i]))\n    done\n    echo \"${t3[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "    local -n t1=$1\n    local -n t2=$2\n    local -a result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result+=($((t1[i] - t2[i])))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n\n    local result=()\n    for i in \"${!tuple1[@]}\"; do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]} - ${b[$i]}))\n    done\n    echo ${c[@]}",
    "  local -n tuple1=$1\n  local -n tuple2=$2\n  local result=()\n  for ((i = 0; i < ${#tuple1[@]}; i++)); do\n    result+=(\"$((${tuple1[$i]} - ${tuple2[$i]}))\")\n  done\n  echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((_tuple1[i] - _tuple2[i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i = 0; i < ${#_tuple1[@]}; i++)); do\n        _result[i]=$((_tuple1[i] - _tuple2[i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((${_tuple1[i]} - ${_tuple2[i]}))\n    done\n    echo \"${_result[@]}\"",
    "  local -n a=$1\n  local -n b=$2\n  local i=0\n  for x in ${a[@]}; do\n    echo $((x - b[i]))\n    ((i++))\n  done",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i = 0; i < ${#_tuple1[@]}; i++)); do\n        _result+=\"$((_tuple1[$i] - _tuple2[$i])) \"\n    done\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local -a _result\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((_tuple1[$i] - _tuple2[$i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((_tuple1[$i] - _tuple2[$i]))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    local i=0\n\n    for i in ${!tuple1[@]}; do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n\n    echo ${result[@]}",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result[i]=$((_tuple1[i] - _tuple2[i]))\n  done\n  echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a tuple3=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        tuple3[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${tuple3[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]} - ${b[$i]}))\n    done\n    echo \"${c[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[$i]=$((${_tuple1[$i]} - ${_tuple2[$i]}))\n    done\n    echo \"${_result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    result[i]=$((_tuple1[i] - _tuple2[i]))\n  done\n  echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$(( ${tuple1[$i]} - ${tuple2[$i]} ))\n    done\n    echo \"${result[@]}\"",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++))\n    do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((tuple1[i] - tuple2[i]))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((${_tuple1[$i]}-${_tuple2[$i]})) \"\n    done\n    echo \"$_result\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for (( i = 0; i < ${#_tuple1[@]}; i++ )); do\n        _result[$i]=$(( ${_tuple1[$i]} - ${_tuple2[$i]} ))\n    done\n    echo \"${_result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} - ${tuple2[i]}))\n    done\n    echo ${result[@]}",
    "    local -n a=$1\n    local -n b=$2\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        result+=($((${a[$i]} - ${b[$i]})))\n    done\n    echo ${result[@]}",
    "  local -n t1=$1\n  local -n t2=$2\n  local i=0\n  for e in ${t1[@]}; do\n    t1[$i]=$((e - t2[$i]))\n    ((i++))\n  done",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((${tuple1[$i]} - ${tuple2[$i]}))\n    done\n    echo ${result[@]}",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=\"\"\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result+=\"$((${_tuple1[$i]} - ${_tuple2[$i]})) \"\n    done\n    echo \"$_result\"",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a a3=()\n    for ((i=0; i<${#a1[@]}; i++)); do\n        a3[$i]=$((${a1[$i]} - ${a2[$i]}))\n    done\n    echo \"${a3[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] - tuple2[$i]))\n    done\n    echo ${result[@]}",
    "    local -n tuple1=$1\n    local -n tuple2=$2\n    local result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result+=($((tuple1[i] - tuple2[i])))\n    done\n    echo ${result[@]}",
    "  local -n a=$1\n  local -n b=$2\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    result+=($((a[i] - b[i])))\n  done\n  echo ${result[@]}",
    "    local -n t1=$1\n    local -n t2=$2\n    local -a result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[i]=$((t1[i] - t2[i]))\n    done\n    echo \"${result[@]}\""
  ]
}
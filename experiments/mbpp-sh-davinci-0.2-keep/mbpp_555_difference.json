{
  "name": "mbpp_555_difference",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\n#\n# $1 is an integer\ndifference() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"30\" ]]\n    [[ $(candidate \"5\") = \"210\" ]]\n    [[ $(candidate \"2\") = \"6\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    python -c \"print(sum(map(lambda x: x**3, range(1, $1 + 1))) - sum(range(1, $1 + 1)))\"",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $((($1 * ($1 + 1)) / 2))**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $(((sum - $(((($1 * ($1 + 1)) / 2))**2))))",
    "    sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum + i**3))\n    done\n    echo $(((($1*($1+1))/2)**2 - sum))",
    "    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $(( $1 * ($1 + 1) / 2 ))**2 - $sum ))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum+=i**3 ))\n    done\n    echo $(( (sum - (($1 * ($1 + 1) / 2)**2)) ))",
    "    local sum=0\n    local sum_cubes=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n        sum_cubes=$((sum_cubes + i**3))\n    done\n    echo $((sum_cubes - sum))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i))\n    done\n    sum_cubes=0\n    for i in $(seq 1 $1); do\n        sum_cubes=$((sum_cubes + i**3))\n    done\n    echo $((sum_cubes - sum))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(( ($1*($1+1))/2 ))**2 ))",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1)\n    do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    echo $(( $(python -c \"print(sum(map(lambda x: x**3, range(1, $1+1))))\") - $(python -c \"print(sum(range(1, $1+1)))\") ))",
    "    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(($1*($1+1)/2))**2 ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $(((1 + $1) * $1 / 2))**2))",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$(($sum_of_cubes + $i**3))\n        sum=$(($sum + $i))\n    done\n    echo $(($sum_of_cubes - $sum**2))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "    # Write your code here\n    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in `seq 1 $1`\n    do\n        sum_of_cubes=$((sum_of_cubes + $((i*i*i))))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_numbers*sum_of_numbers - sum_of_cubes))",
    "    # Write your code here\n    sum=0\n    sum_of_cubes=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $(((sum - (($1 * ($1 + 1) / 2))**2)))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for i in $(seq 1 $n); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $(( $1*($1+1)/2 ))**2 - $sum ))",
    "    local sum=0\n    local sum_of_cubes=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + (i * i * i)))\n    done\n    echo $((sum * sum - sum_of_cubes))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for (( i = 1; i <= n; i++ )); do\n        sum=$(($sum + $i))\n        sum_of_cubes=$(($sum_of_cubes + $i**3))\n    done\n    echo $(($sum**2 - $sum_of_cubes))",
    "    if [ $1 -lt 1 ]\n    then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        (( sum=sum+i ))\n    done\n    echo $(( sum*sum ))",
    "    # Write your code here\n    sum=0\n    sum1=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum1=$(( $sum1 + $i * $i * $i ))\n    done\n    echo $(( $sum * $sum - $sum1 ))",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    else\n        echo $(( $(( $1 * $(( $1 + 1 )) * $(( $1 * $1 - 1 )) )) / 6 - $(( $1 * $(( $1 + 1 )) / 2 )) ))\n    fi",
    "    # Write your code here\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $sum",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for (( i=1; i<=$1; i++ )); do\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n        sum_of_numbers=$(( $sum_of_numbers + $i ))\n    done\n    echo $(( $sum_of_numbers * $sum_of_numbers - $sum_of_cubes ))",
    "    # Write your code here\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $sum",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i**3))\n    done\n    echo $((($1*($1+1)/2)**2 - $sum))",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum1=0\n    sum2=0\n    for ((i=1;i<=$1;i++))\n    do\n        sum1=$((sum1+i**3))\n        sum2=$((sum2+i))\n    done\n    print $((sum2**2-sum1))",
    "    echo $(( $(python -c \"print(sum([i**3 for i in range(1, $1+1)]))\") - $(python -c \"print(sum([i for i in range(1, $1+1)]))\") ))",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$(($sum_of_cubes + $i**3))\n        sum=$(($sum + $i))\n    done\n    echo $(($sum_of_cubes - $sum**2))",
    "    sum=0\n    for i in $(seq $1); do\n        sum=$((sum + i**3))\n    done\n    echo $(((sum - $(seq -s+ $1 | bc))**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $1**2))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(($sum+$(($i**3))))\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * $sum ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $(((1 + $1) * $1 / 2))**2))",
    "    local sum=0\n    local sum_cubes=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n        sum_cubes=$((sum_cubes + i**3))\n    done\n    echo $((sum_cubes - sum))",
    "    echo $(( $(python -c \"print(sum(map(lambda x: x**3, range(1, $1+1))))\") - $(python -c \"print(sum(range(1, $1+1)))\") ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $(((sum - $1**2) / 2))",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( sum + $(( i * i * i )) ))\n    done\n\n    echo $(( sum - $(( $1 * $(( $1 + 1 )) / 2 )) ))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum+=$i**3 ))\n    done\n    (( sum-=$(( $1*($1+1)/2 ))**2 ))\n    echo $sum",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum_of_numbers=0\n    for ((i=1; i<=n; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $1**2))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(($1*($1+1)/2))**2 ))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i))\n    done\n    echo $sum",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum_of_numbers=0\n    for ((i=1; i<=n; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(( $1 * ($1 + 1) / 2 ))**2 ))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    # Write your code here\n    sum_of_cubes=0\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum_of_cubes=$((sum_of_cubes+i**3))\n        sum=$((sum+i))\n    done\n    echo $((sum**2-sum_of_cubes))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for i in $(seq 1 $n); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i**3))\n    done\n    echo $((($1 * ($1 + 1) / 2)**2 - $sum))",
    "    echo $(( $(python -c \"print sum(map(lambda x: x**3, range(1, $1+1)))\") - $(python -c \"print sum(range(1, $1+1))\") ))",
    "\tsum=0\n\tfor ((i=1; i<=$1; i++))\n\tdo\n\t\tsum=$((sum + $((i*i*i)) ))\n\tdone\n\techo $sum",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for (( i=1; i<=n; i++ )); do\n        (( sum_of_cubes += i**3 ))\n        (( sum += i ))\n    done\n    echo $(( sum_of_cubes - sum**2 ))",
    "    n=$1\n    sum_of_cubes=0\n    sum=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum_of_cubes - $(( $sum * $sum )) ))",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    else\n        echo $(( $(python -c \"print(sum([i**3 for i in range(1, $1+1)]))\") - $(python -c \"print(sum([i for i in range(1, $1+1)]))\") ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    else\n        echo $(( $(python -c \"print(sum(map(lambda x: x**3, range(1, $1+1))))\") - $(python -c \"print(sum(range(1, $1+1)))\") ))\n    fi",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(( $1 * ($1 + 1) / 2 ))**2 ))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(($sum + $i))\n    done\n    echo $sum",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $(($i * $i * $i))))\n    done\n    echo $sum",
    "    sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$(($sum + $((i**3))))\n    done\n    echo $((($1*$((($1+1)/2)))**2 - $sum))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n    done\n    echo $sum",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $(((sum - $1**2) * ($1 + 1)**2 / 4))",
    "    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum**2 - $sum_of_cubes ))",
    "    echo $(( $(seq -s + $1 | bc) - $(seq -s + $1 | sed 's/^/(/;s/$/^3)/g' | bc) ))",
    "    sum=0\n    for (( i = 1; i <= $1; i++ )); do\n        sum=$((sum + i))\n    done\n    sum_of_cubes=0\n    for (( i = 1; i <= $1; i++ )); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum_of_cubes - sum))",
    "    sum=0\n    for i in `seq 1 $1`; do\n        sum=$(($sum + $i**3))\n    done\n    echo $((($1 * ($1 + 1) / 2)**2 - $sum))",
    "    local n=$1\n    local sum=0\n    local sum_cubes=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n        sum_cubes=$((sum_cubes + i**3))\n    done\n    echo $((sum_cubes - sum))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $sum",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - (($1 * ($1 + 1)) / 2)**2))",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1)\n    do\n        sum_of_cubes=$(($sum_of_cubes+$(($i*$i*$i))))\n        sum=$(($sum+$i))\n    done\n    echo $(($sum*$sum-$sum_of_cubes))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i))\n    done\n    sum_cubes=0\n    for i in $(seq 1 $1); do\n        sum_cubes=$(($sum_cubes + $(($i * $i * $i))))\n    done\n    echo $(($sum_cubes - $sum))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        ((sum_of_cubes+=i**3))\n        ((sum+=i))\n    done\n    echo $((sum_of_cubes-sum**2))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for i in $(seq 1 $n); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n        sum_of_numbers=$(( $sum_of_numbers + $i ))\n    done\n    echo $(( $sum_of_numbers * $sum_of_numbers - $sum_of_cubes ))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for ((i=1; i<=$1; i++)); do\n        ((sum+=i**3))\n    done\n    echo $(((($1*($1+1))/2)**2 - sum))",
    "    local sum=0\n    local sum_of_cubes=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for i in `seq 1 $1`; do\n        sum=$(($sum + $i**3))\n    done\n    echo $((($1 * ($1 + 1) / 2)**2 - $sum))",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i**3))\n    done\n    echo $(((($1*($1+1)/2))**2 - sum))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        sum_of_cubes=$(($sum_of_cubes + $i**3))\n        sum=$(($sum + $i))\n    done\n    echo $(($sum_of_cubes - $sum**2))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum+=i**3 ))\n    done\n    echo $(( (sum - (($1 * ($1 + 1) / 2)**2)) ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $(($1 * ($1 + 1) / 2))**2))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for ((i=1;i<=n;i++)); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "  sum_of_cubes=0\n  sum_of_numbers=0\n  for i in $(seq 1 $1); do\n    sum_of_cubes=$((sum_of_cubes + i**3))\n    sum_of_numbers=$((sum_of_numbers + i))\n  done\n  echo $((sum_of_cubes - sum_of_numbers**2))",
    "\tlocal sum_of_cubes=0\n\tlocal sum=0\n\tfor ((i=1; i<=$1; i++)); do\n\t\tsum_of_cubes=$((sum_of_cubes + i**3))\n\t\tsum=$((sum + i))\n\tdone\n\techo $((sum_of_cubes - sum**2))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(( $1 * ($1 + 1) / 2 ))**2 ))",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    else\n        echo $(( $(python -c \"print(sum(map(lambda x: x**3, range(1, $1+1))))\") - $(python -c \"print(sum(range(1, $1+1)))\") ))\n    fi",
    "    # Write your code here\n    sum=0\n    for ((i=1;i<=$1;i++))\n    do\n        sum=$(($sum+$i**3))\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(( $1 * ($1 + 1) / 2 ))**2 ))",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(($1*($1+1)/2))**2 ))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum_of_numbers=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "  sum=0\n  for i in $(seq 1 $1); do\n    sum=$(($sum + $i**3))\n  done\n  echo $((($1 * ($1 + 1) / 2)**2 - $sum))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $sum",
    "    sum=0\n    for i in $(seq 1 $1)\n    do\n        sum=$(($sum+$(($i**3))))\n    done\n    echo $sum",
    "    echo $(($(python -c \"print sum(map(lambda x: x**3, range(1, $1+1)))\" 2>/dev/null) - $(python -c \"print sum(range(1, $1+1))\" 2>/dev/null)))",
    "    python -c \"print(sum(x**3 for x in range(1, $1+1)) - sum(x for x in range(1, $1+1)))\"",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    else\n        echo $(( $(( $1 * $(( $1 + 1 )) * $(( $1 * $1 - 1 )) )) / 6 - $(( $1 * $(( $1 + 1 )) / 2 )) ))\n    fi",
    "    sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum + $i**3))\n    done\n    echo $((($1*($1+1)/2)**2 - sum))",
    "    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - (($1 * ($1 + 1)) / 2)**2))",
    "    n=$1\n    sum_of_cubes=0\n    sum_of_numbers=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n        sum_of_numbers=$(( $sum_of_numbers + $i ))\n    done\n    echo $(( $sum_of_numbers * $sum_of_numbers - $sum_of_cubes ))",
    "    sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum+i**3))\n    done\n    echo $(((($1*($1+1))/2)**2-sum))",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    else\n        echo $(($(python -c \"print(sum([i**3 for i in range(1,$1+1)]))\") - $(python -c \"print(sum([i for i in range(1,$1+1)]))\")))\n    fi",
    "    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n    done\n    sum_of_cubes=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum=0\n    for i in `seq 1 $1`;\n    do\n        sum=$(($sum + $(($i*$i*$i))))\n    done\n    echo $sum",
    "    sum_of_cubes=0\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum_of_cubes=$((sum_of_cubes+i**3))\n        sum=$((sum+i))\n    done\n    echo $((sum**2-sum_of_cubes))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(( $1*($1+1)/2 ))**2 ))",
    "    sum=0\n    sum_cubes=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i))\n        sum_cubes=$(($sum_cubes + $i**3))\n    done\n    echo $((sum_cubes - sum))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for ((i=1; i<=$1; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $sum",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum_of_numbers=0\n    for ((i=1; i<=$n; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    python -c \"print(sum(range($1+1))**2 - sum(map(lambda x: x**3, range($1+1))))\"",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i**3))\n    done\n    echo $((($1*($1+1)/2)**2 - $sum))",
    "    sum_of_cubes=0\n    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world!\"\n  echo $(( $(python -c \"print(sum([i**3 for i in range(1, $1+1)]))\") - $(python -c \"print(sum([i for i in range(1, $1+1)]))\") ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + $((i**3))))\n    done\n    echo $((sum - $((($1 * ($1 + 1)) / 2))))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum_of_numbers=0\n    for ((i=1;i<=n;i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    local sum=0\n    local sum_of_cubes=0\n    for (( i = 1; i <= $1; i++ )); do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $(( $i * $i * $i )) ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $1**2))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $(((1 + $1) * $1 / 2))**2))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum+=$i**3 ))\n    done\n    echo $(( $(( $1*($1+1)/2 ))**2 - $sum ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + $i**3))\n    done\n    echo $((sum - $(($1 * ($1 + 1) / 2))**2))",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - (($1 * ($1 + 1)) / 2)**2))",
    "    echo $(($(python -c \"print sum(map(lambda x: x**3, range(1, $1+1)))\" 2>/dev/null) - $(python -c \"print sum(range(1, $1+1))\" 2>/dev/null)))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        ((sum_of_cubes+=$i**3))\n        ((sum+=$i))\n    done\n    echo $((sum_of_cubes-sum**2))",
    "    echo $(( $(seq -s \"+\" $1 | bc) - $(seq -s \"+\" $1 | sed 's/^/1\\^3\\+/' | bc) ))",
    "    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum + $i ** 3))\n    done\n    echo $(($sum - $(($1 * ($1 + 1) / 2)) ** 2))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    python -c \"print(sum(map(lambda x: x**3, range(1, $1+1))) - sum(range(1, $1+1)))\"",
    "    # Write your code here\n    sum1=0\n    sum2=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum1=$(($sum1+$(($i*$i*$i))))\n        sum2=$(($sum2+$i))\n    done\n    echo $(($sum1-$(($sum2*$sum2))))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum += i**3 ))\n    done\n    (( sum -= $(seq -s+ $1 | bc)**2 ))\n    echo $sum",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum_of_numbers=0\n    for ((i=1; i<=$n; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i**3))\n    done\n    echo $(((($1 * ($1 + 1)) / 2)**2 - sum))",
    "    sum_of_cubes=0\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum_of_cubes=$(( $sum_of_cubes + $i * $i * $i ))\n        sum=$(( $sum + $i ))\n    done\n    sum=$(( $sum * $sum ))\n    echo $(( $sum - $sum_of_cubes ))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $(((sum - $1**2) / 2))",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    else\n        echo $(( $(python -c \"print(sum(map(lambda x: x**3, range(1, $1 + 1))))\") - $(python -c \"print(sum(range(1, $1 + 1)))\") ))\n    fi",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $1**2))",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $1**2))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i))\n    done\n    sum_of_cubes=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum_of_cubes - sum))",
    "    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + ($i * $i * $i) ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    n=$1\n    sum=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $sum",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum1=0\n    sum2=0\n    for ((i=1;i<=$1;i++))\n    do\n        sum1=$(($sum1+$(($i*$i*$i))))\n        sum2=$(($sum2+$i))\n    done\n    sum2=$(($sum2*$sum2))\n    echo $(($sum2-$sum1))",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - (($1 * ($1 + 1)) / 2)**2))",
    "    sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum + $((i**3))))\n    done\n    echo $((sum - $((($1 * ($1 + 1)) / 2))))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "    if [ $1 -eq 0 ]\n    then\n        echo 0\n    else\n        echo $(( $1 * $1 * $1 + $(difference $(( $1 - 1 ))) ))\n    fi",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$((sum + i**3))\n    done\n    echo $((sum - $(((1 + $1) * $1 / 2))**2))",
    "    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum**2 - $sum_of_cubes ))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$(($sum_of_cubes + $i**3))\n        sum_of_numbers=$(($sum_of_numbers + $i))\n    done\n    echo $((sum_of_numbers**2 - sum_of_cubes))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $(( $1*($1+1)/2 ))**2 - $sum ))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum+=i**3 ))\n    done\n    echo $(( (sum - (($1 * ($1 + 1)) / 2)**2) ))",
    "    sum_of_cubes=0\n    sum_of_numbers=0\n    for (( i = 1; i <= $1; i++ )); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum_of_numbers=$((sum_of_numbers + i))\n    done\n    echo $((sum_of_cubes - sum_of_numbers**2))",
    "    sum=0\n    for (( i = 1; i <= $1; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * $sum ))",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum=0\n    for i in `seq 1 $1`;\n    do\n        sum=$(($sum+$i))\n    done\n    sum=$(($sum*$sum))\n    sum2=0\n    for i in `seq 1 $1`;\n    do\n        sum2=$(($sum2+$(($i*$i*$i))))\n    done\n    echo $(($sum-$sum2))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + $i**3))\n    done\n    echo $((sum - $((($1 * ($1 + 1)) / 2))**2))",
    "\tsum=0\n\tfor i in $(seq 1 $1); do\n\t\tsum=$(($sum + $i**3))\n\tdone\n\techo $(($sum - $(($1 * ($1 + 1) / 2))**2))",
    "    local n=$1\n    local sum_of_cubes=0\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum_of_cubes=0\n    sum=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum_of_cubes - sum**2))",
    "    sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + $i**3))\n    done\n    echo $((sum - $1**2))",
    "  sum=0\n  for (( i=1; i<=$1; i++ ))\n  do\n    sum=$(( $sum + $(( $i * $i * $i )) ))\n  done\n  echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "  sum=0\n  for (( i=1; i<=$1; i++ ))\n  do\n    sum=$(( $sum + $(( $i ** 3 )) ))\n  done\n  echo $(( $(( $(( $(( $1 * ($1 + 1) )) / 2 )) ** 2 )) - $sum ))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $(( $1*($1+1)/2 ))**2 - $sum ))",
    "  local n=$1\n  local sum=0\n  local sum_of_cubes=0\n  for ((i=1;i<=n;i++)); do\n    sum=$((sum+i))\n    sum_of_cubes=$((sum_of_cubes+i**3))\n  done\n  echo $((sum**2-sum_of_cubes))",
    "    echo \"scale=2; $(python -c \"print sum(map(lambda x: x**3, range(1, $1 + 1)))\") - $(python -c \"print sum(range(1, $1 + 1))\")\" | bc",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=$n; i++)); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "  sum=0\n  for (( i=1; i<=$1; i++ ))\n  do\n    sum=$(( $sum + $i**3 ))\n  done\n  echo $(( $sum - $(($1*($1+1)/2))**2 ))",
    "    local sum=0\n    local sum_of_cubes=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n        sum_of_cubes=$((sum_of_cubes + i**3))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i ))\n    done\n    sum_of_cubes=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum1=0\n    sum2=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum1=$((sum1+i**3))\n        sum2=$((sum2+i))\n    done\n    echo $((sum2**2-sum1))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        (( sum += i**3 ))\n    done\n    (( sum -= $(($1*($1+1)/2))**2 ))\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "  local sum=0\n  local sum_of_cubes=0\n  for (( i=1; i<=$1; i++ )); do\n    sum=$(( sum + i ))\n    sum_of_cubes=$(( sum_of_cubes + i**3 ))\n  done\n  echo $(( sum**2 - sum_of_cubes ))",
    "    local sum_of_cubes=0\n    local sum=0\n    for i in $(seq 1 $1); do\n        sum_of_cubes=$((sum_of_cubes + i**3))\n        sum=$((sum + i))\n    done\n    echo $((sum**2 - sum_of_cubes))",
    "  sum=0\n  for ((i=1; i<=$1; i++)); do\n    sum=$((sum + $i**3))\n  done\n  echo $((($1*($1+1)/2)**2 - sum))",
    "    local n=$1\n    local sum=0\n    local sum_of_cubes=0\n    for (( i=1; i<=n; i++ ))\n    do\n        sum=$(( $sum + $i ))\n        sum_of_cubes=$(( $sum_of_cubes + $i**3 ))\n    done\n    echo $(( $sum_of_cubes - $sum ))",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n        return\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $(( $i * $i * $i )) ))\n    done\n    echo $(( $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) * $(( $(( $1 * $(( $1 + 1 )) )) / 2 )) - $sum ))",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  else\n    echo $(( $(( $1 * ($1 + 1) / 2 ))**2 - $(seq -s '+' $1 | bc) ))\n  fi",
    "    sum=0\n    for i in $(seq 1 $1); do\n        sum=$(($sum+$(($i**3))))\n    done\n    echo $((($1*($1+1)/2)**2-$sum))",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $i**3 ))\n    done\n    echo $(( $sum - $(($1*($1+1)/2))**2 ))"
  ]
}
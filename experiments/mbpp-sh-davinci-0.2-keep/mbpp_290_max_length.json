{
  "name": "mbpp_290_max_length",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the list of maximum length in a list of lists.\n#\n# $1 is a newline-separated, space-separated list\nmax_length() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_length \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\\n1 3\\n5 7\\n9 11\\n13 15 17\") = \"3 13 15 17\" ]]\n    [[ $(candidate \"1\\n5 7\\n10 12 14 15\") = \"4 10 12 14 15\" ]]\n    [[ $(candidate \"5\\n15 20 25\") = \"3 15 20 25\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local max=0\n    local length\n    for i in $1; do\n        length=$(echo $i | wc -w)\n        if [ $length -gt $max ]; then\n            max=$length\n        fi\n    done\n    echo $max",
    "  local max_length=0\n  for i in $1; do\n    if [[ ${#i} -gt $max_length ]]; then\n      max_length=${#i}\n    fi\n  done\n  echo $max_length",
    "    local max_length=0\n    local length=0\n    for i in $1; do\n        length=${#i}\n        if [[ $length -gt $max_length ]]; then\n            max_length=$length\n        fi\n    done\n    echo $max_length",
    "    local max_length=0\n    local length\n    for i in $1; do\n        length=${#i}\n        if [[ $length -gt $max_length ]]; then\n            max_length=$length\n        fi\n    done\n    echo $max_length",
    "    # Use a subshell to avoid polluting the environment\n    (\n        # Set the field separator to newline and space\n        IFS=$'\\n '\n        # Read the list into an array\n        read -r -a list\n        # Print the length of each element\n        for element in \"${list[@]}\"; do\n            echo \"${#element}\"\n        done\n    ) <<< \"$1\"",
    "    local max=0\n    local list\n    for list in $1; do\n        local length=$(echo $list | wc -w)\n        if [ $length -gt $max ]; then\n            max=$length\n        fi\n    done\n    echo $max",
    "    local max=0\n    while read -r line; do\n        local length=$(echo \"$line\" | wc -w)\n        if (( length > max )); then\n            max=$length\n        fi\n    done <<< \"$1\"\n    echo \"$max\"",
    "    local max=0\n    while read -r line; do\n        local length=${#line}\n        if [[ $length -gt $max ]]; then\n            max=$length\n        fi\n    done <<< \"$1\"\n    echo \"$max\"",
    "  local max_length=0\n  local length=0\n  local list=()\n  local item=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n",
    "    local max_length=0\n    local length=0\n    for i in $1; do\n        length=${#i}\n        if [[ $length -gt $max_length ]]; then\n            max_length=$length\n        fi\n    done\n    echo $max_length",
    "  local max=0\n  local len=0\n  for i in $1; do\n    len=${#i}\n    if [[ $len -gt $max ]]; then\n      max=$len\n    fi\n  done\n  echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ ${#i} -gt $max ]]; then\n            max=${#i}\n        fi\n    done\n    echo $max",
    "    local max=0\n    local len=0\n    for i in $1; do\n        len=${#i}\n        if [ $len -gt $max ]; then\n            max=$len\n        fi\n    done\n    echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ ${#i} -gt $max ]]; then\n      max=${#i}\n    fi\n  done\n  echo $max",
    "    local max_length=0\n    local length=0\n    local list\n    for list in $1; do\n        length=$(echo $list | wc -w)\n        if [ $length -gt $max_length ]; then\n            max_length=$length\n        fi\n    done\n    echo $max_length",
    "    local max=0\n    while read -r line; do\n        local length=$(echo \"$line\" | wc -w)\n        if [[ $length -gt $max ]]; then\n            max=$length\n        fi\n    done <<< \"$1\"\n    echo \"$max\"",
    "    local max=0\n    local list\n    while read -r list; do\n        local len=$(echo \"$list\" | wc -w)\n        if [[ $len -gt $max ]]; then\n            max=$len\n        fi\n    done <<< \"$1\"\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [ ${#i} -gt $max ]; then\n            max=${#i}\n        fi\n    done\n    echo $max",
    "  local max=0\n  local list\n  for list in $1; do\n    if [[ ${#list} -gt $max ]]; then\n      max=${#list}\n    fi\n  done\n  echo $max",
    "  local max=0\n  local length\n  for i in $1; do\n    length=$(echo $i | wc -w)\n    if [ $length -gt $max ]; then\n      max=$length\n    fi\n  done\n  echo $max"
  ]
}
{
  "name": "mbpp_641_is_nonagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth nonagonal number.\n#\n# $1 is an integer\nis_nonagonal() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_nonagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"325\" ]]\n    [[ $(candidate \"15\") = \"750\" ]]\n    [[ $(candidate \"18\") = \"1089\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local nth_nonagonal=$(((n*(n*3-1))/2))\n    echo $nth_nonagonal",
    "  local n=$1\n  local root=$(echo \"sqrt(8*$n+1)\" | bc)\n  local int_root=$(echo \"$root/1\" | bc)\n  if [ \"$int_root\" -eq \"$root\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth_nonagonal=$(((n * (n * 3 - 1)) / 2))\n    echo $nth_nonagonal",
    "    local n=$1\n    local x=$(echo \"sqrt(8*$n+1)\" | bc)\n    local y=$(echo \"$x % 2\" | bc)\n    if [ $y -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_nonagonal=$(((n * (n * 3 - 1)) / 2))\n  echo \"$nth_nonagonal\"",
    "    local n=$1\n    local nth_nonagonal=$(((n * (n * 3 - 1)) / 2))\n    echo $nth_nonagonal",
    "    local n=$1\n    local nth_nonagonal=$(echo \"scale=0; (sqrt(8*$n+1)-1)/2\" | bc)\n    if [[ $nth_nonagonal -eq $nth_nonagonal ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(1 + 8 * $n)\" | bc)\n    if [ $((x * x)) -eq $((1 + 8 * n)) ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        return 1\n    fi\n    local n=$(echo \"sqrt(8*$1+1)\" | bc)\n    if [[ $n -eq $(echo \"$n/2*2\" | bc) ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local d=$(echo \"sqrt(8*$n+1)\" | bc)\n    local r=$(echo \"$d % 2\" | bc)\n    if [ $r -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(echo \"sqrt(8*$n+1)\" | bc)\n    local y=$(echo \"$x % 2\" | bc)\n    if [ $y -eq 1 ]; then\n        echo \"$n is nonagonal\"\n    else\n        echo \"$n is not nonagonal\"\n    fi",
    "    local n=$1\n    local num=$(echo \"sqrt(8*$n+1)+1\" | bc)\n    if [ $(echo \"$num % 2\" | bc) -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(( (sqrt(1+8*n)-1)/2 ))\n    (( x*(x+1)/2 == n ))",
    "    local n=$1\n    local x=$(echo \"sqrt(8*$n + 1)\" | bc)\n    local y=$(echo \"$x % 2\" | bc)\n    if [ \"$y\" -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(( (sqrt(8*n+1)+1)/2 ))\n    if (( x*(x+1)/2 == n )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local x=$(echo \"sqrt(8*$n+1)+1\" | bc)\n  if [[ $x =~ ^[0-9]+$ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local x=$(( (sqrt(8*n+1)-1)/2 ))\n    if [[ $(( x*(x+1)/2 )) -eq $n ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(1+8*$n)/2\" | bc -l)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    local nth_dec=$(echo \"$nth\" | cut -d. -f2)\n    if [ \"$nth_dec\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi"
  ]
}
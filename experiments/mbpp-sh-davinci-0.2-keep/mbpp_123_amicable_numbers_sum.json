{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to sum all amicable numbers from 1 to a specified number.\n#\n# $1 is an integer\namicable_numbers_sum() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    amicable_numbers_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"999\") = \"504\" ]]\n    [[ $(candidate \"9999\") = \"31626\" ]]\n    [[ $(candidate \"99\") = \"0\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -i sum=0\n    local -i i\n    for ((i=1; i<=$1; i++)); do\n        local -i a=$(divisors_sum $i)\n        local -i b=$(divisors_sum $a)\n        if ((i==b && i!=a)); then\n            sum+=$i\n        fi\n    done\n    echo $sum",
    "    local -i sum=0\n    local -i i=1\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n",
    "    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i sum_i=0\n    local -i sum_j=0\n    local -i max=$1\n\n    for ((i=1; i<max; i++)); do\n        sum_i=$(divisors_sum $i)\n        for ((j=i+1; j<max; j++)); do\n            sum_j=$(divisors_sum $j)\n            if ((sum_i == j && sum_j == i)); then\n                sum=$((sum + i + j))\n            fi\n        done\n    done\n\n    echo $sum",
    "  local max=$1\n  local sum=0\n  local i=1\n  local j=1\n  local a=0\n  local b=0\n  local a_sum=0\n  local b_sum=0\n\n  while [ $i -le $max ]; do\n    a_sum=0\n    j=1\n    while [ $j -lt $i ]; do\n      if [ $((i % j)) -eq 0 ]; then\n        a_sum=$((a_sum + j))\n      fi\n      j=$((j + 1))\n    done\n    a=$a_sum\n    b_sum=0\n    j=1\n    while [ $j -lt $a ]; do\n      if [ $((a % j)) -eq 0 ]; then\n        b_sum=$((b_sum + j))\n      fi\n      j=$((j + 1))\n    done\n    b=$b_sum\n    if [ $a -eq $i ] && [ $b -eq $a ] && [ $a -ne $b ]; then\n      sum=$((sum + a))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum",
    "  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n  local -i bq=",
    "    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n",
    "  local -i i=0\n  local -i sum=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n",
    "    local -i sum=0\n    local -i i=1\n    local -i j=1\n    local -i n=$1\n    local -i d1=0\n    local -i d2=0\n    local -i d1_sum=0\n    local -i d2_sum=0\n    local -i d1_sum_sum=0\n    local -i d2_sum_sum=0\n\n    for ((i=1; i<=n; i++)); do\n        d1_sum=0\n        for ((j=1; j<i; j++)); do\n            if ((i % j == 0)); then\n                ((d1_sum += j))\n            fi\n        done\n        d1_sum_sum=$d1_sum\n        d2_sum=0\n        for ((j=1; j<d1_sum_sum; j++)); do\n            if ((d1_sum_sum % j == 0)); then\n                ((d2_sum += j))\n            fi\n        done\n        d2_sum_sum=$d2_sum\n        if ((i == d2_sum_sum && i != d1_sum_sum)); then\n            ((sum += i))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for ((i=1; i<=$1; i++)); do\n    local a=$(divisors_sum $i)\n    local b=$(divisors_sum $a)\n    if ((a != b)) && ((i == b)); then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum",
    "\tlocal -i sum=0\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i k=0\n\tlocal -i l=0\n\tlocal -i m=0\n\tlocal -i n=0\n\tlocal -i o=0\n\tlocal -i p=0\n\tlocal -i q=0\n\tlocal -i r=0\n\tlocal -i s=0\n\tlocal -i t=0\n\tlocal -i u=0\n\tlocal -i v=0\n\tlocal -i w=0\n\tlocal -i x=0\n\tlocal -i y=0\n\tlocal -i z=0\n\tlocal -i aa=0\n\tlocal -i bb=0\n\tlocal -i cc=0\n\tlocal -i dd=0\n\tlocal -i ee=0\n\tlocal -i ff=0\n\tlocal -i gg=0\n\tlocal -i hh=0\n\tlocal -i ii=0\n\tlocal -i jj=0\n\tlocal -i kk=0\n\tlocal -i ll=0\n\tlocal -i mm=0\n\tlocal -i nn=0\n\tlocal -i oo=0\n\tlocal -i pp=0\n\tlocal -i qq=0\n\tlocal -i rr=0\n\tlocal -i ss=0\n\tlocal -i tt=0\n\tlocal -i uu=0\n\tlocal -i vv=0\n\tlocal -i ww=0\n\tlocal -i xx=0\n\tlocal -i yy=0\n\tlocal -i zz=0\n\tlocal -i aaa=0\n\tlocal -i bbb=0\n\tlocal -i ccc=0\n\tlocal -i ddd=0\n\tlocal -i eee=0\n\tlocal -i fff=0\n\tlocal -i ggg=0\n\tlocal -i hhh=0\n\tlocal -i iii=0\n\tlocal -i jjj=0\n\tlocal -i kkk=0\n\tlocal -i lll=0\n\tlocal -i mmm=0\n\tlocal -i nnn=0\n\tlocal -i ooo=0\n",
    "    local sum=0\n    local i=1\n    while [ $i -lt $1 ]; do\n        local d1=$(divisors_sum $i)\n        local d2=$(divisors_sum $d1)\n        if [ $i -eq $d2 ] && [ $i -ne $d1 ]; then\n            sum=$((sum + i))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local -i sum=0\n    local -i i=1\n    local -i j=1\n    local -i k=1\n    local -i l=1\n    local -i m=1\n    local -i n=1\n    local -i o=1\n    local -i p=1\n    local -i q=1\n    local -i r=1\n    local -i s=1\n    local -i t=1\n    local -i u=1\n    local -i v=1\n    local -i w=1\n    local -i x=1\n    local -i y=1\n    local -i z=1\n    local -i aa=1\n    local -i ab=1\n    local -i ac=1\n    local -i ad=1\n    local -i ae=1\n    local -i af=1\n    local -i ag=1\n    local -i ah=1\n    local -i ai=1\n    local -i aj=1\n    local -i ak=1\n    local -i al=1\n    local -i am=1\n    local -i an=1\n    local -i ao=1\n    local -i ap=1\n    local -i aq=1\n    local -i ar=1\n    local -i as=1\n    local -i at=1\n    local -i au=1\n    local -i av=1\n    local -i aw=1\n    local -i ax=1\n    local -i ay=1\n    local -i az=1\n    local -i ba=1\n    local -i bb=1\n    local -i bc=1\n    local -i bd=1\n    local -i be=1\n    local -i bf=1\n    local -i bg=1\n    local -i bh=1\n    local -i bi=1\n    local -i bj=1\n    local -i bk=1\n    local -i bl=1\n    local -i bm=1\n    local -i bn=1\n    local -i bo=1\n    local -i bp=1\n    local -i bq=",
    "    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i divisors_sum_i=0\n    local -i divisors_sum_j=0\n    local -i divisor=0\n    local -i max=$1\n    for ((i=1; i<=max; i++)); do\n        divisors_sum_i=0\n        for ((divisor=1; divisor<i; divisor++)); do\n            if ((i % divisor == 0)); then\n                divisors_sum_i+=divisor\n            fi\n        done\n        for ((j=i+1; j<=max; j++)); do\n            divisors_sum_j=0\n            for ((divisor=1; divisor<j; divisor++)); do\n                if ((j % divisor == 0)); then\n                    divisors_sum_j+=divisor\n                fi\n            done\n            if ((divisors_sum_i == j && divisors_sum_j == i)); then\n                sum+=i\n                sum+=j\n            fi\n        done\n    done\n    echo $sum",
    "    local max_number=$1\n    local sum=0\n    local i=1\n    while (( i <= max_number )); do\n        local divisors_sum=$(divisors_sum $i)\n        local divisors_sum_of_divisors_sum=$(divisors_sum $divisors_sum)\n        if (( i == divisors_sum_of_divisors_sum && i != divisors_sum )); then\n            sum=$(( sum + i ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo $sum",
    "  local sum=0\n  local i=1\n  while [ $i -le $1 ]; do\n    local j=$(divisors_sum $i)\n    if [ $i -ne $j ] && [ $j -le $1 ] && [ $i -eq $(divisors_sum $j) ]; then\n      sum=$((sum + i + j))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum",
    "    local sum=0\n    local i=1\n    local j=1\n    local divisors_sum_i=0\n    local divisors_sum_j=0\n\n    while [ $i -le $1 ]; do\n        divisors_sum_i=$(divisors_sum $i)\n        j=$((i + 1))\n        while [ $j -le $1 ]; do\n            divisors_sum_j=$(divisors_sum $j)\n            if [ $divisors_sum_i -eq $j ] && [ $divisors_sum_j -eq $i ]; then\n                sum=$((sum + i + j))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n\n    echo $sum",
    "  local -i sum=0\n  local -i i=1\n  while (( i <= $1 )); do\n    local -i a=$(divisors_sum $i)\n    local -i b=$(divisors_sum $a)\n    if (( i == b && i != a )); then\n      sum+=$i\n    fi\n    (( i++ ))\n  done\n  echo $sum",
    "    local i j sum1 sum2\n    local -i sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum1=0\n        for (( j=1; j<i; j++ )); do\n            (( i % j == 0 )) && (( sum1 += j ))\n        done\n        sum2=0\n        for (( j=1; j<sum1; j++ )); do\n            (( sum1 % j == 0 )) && (( sum2 += j ))\n        done\n        (( i == sum2 && i != sum1 )) && (( sum += i ))\n    done\n    echo $sum",
    "  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n",
    "  local sum=0\n  local i=1\n  while [ $i -le $1 ]; do\n    local a=$(amicable_number $i)\n    if [ $a -ne 0 ]; then\n      sum=$((sum + a))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum"
  ]
}
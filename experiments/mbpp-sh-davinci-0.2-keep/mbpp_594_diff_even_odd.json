{
  "name": "mbpp_594_diff_even_odd",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the difference of the first even and first odd number of a given list.\n#\n# $1 is a space-separated list\ndiff_even_odd() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    diff_even_odd \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 7 4 1 6 8\") = \"3\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1\" ]]\n    [[ $(candidate \"1 5 7 9 10\") = \"9\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num%2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num%2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local even=0\n    local odd=0\n    local i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((list[$i] % 2)) -eq 0 ]; then\n            even=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((list[$i] % 2)) -ne 0 ]; then\n            odd=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "  local -a nums=($1)\n  local even_num odd_num\n  for num in \"${nums[@]}\"; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=${num}\n      break\n    fi\n  done\n  for num in \"${nums[@]}\"; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=${num}\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even=0\n    local odd=0\n    local num=0\n    for i in $1; do\n        if [[ $num -eq 0 ]]; then\n            even=$i\n        elif [[ $num -eq 1 ]]; then\n            odd=$i\n        fi\n        if [[ $((i % 2)) -eq 0 ]] && [[ $num -eq 0 ]]; then\n            num=1\n        elif [[ $((i % 2)) -eq 1 ]] && [[ $num -eq 1 ]]; then\n            num=2\n        fi\n    done\n    echo $((even - odd))",
    "  local -a list\n  local -i even odd\n  local -i i\n\n  list=($1)\n  even=0\n  odd=0\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    if ((list[i] % 2 == 0)); then\n      even=${list[i]}\n      break\n    fi\n  done\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    if ((list[i] % 2 != 0)); then\n      odd=${list[i]}\n      break\n    fi\n  done\n\n  echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even odd\n    for n in $1; do\n        if [[ $n =~ ^[0-9]+$ ]]; then\n            if [[ $n%2 -eq 0 ]]; then\n                if [[ -z $even ]]; then\n                    even=$n\n                fi\n            else\n                if [[ -z $odd ]]; then\n                    odd=$n\n                fi\n            fi\n        fi\n    done\n    if [[ -z $even ]] || [[ -z $odd ]]; then\n        echo \"No even or odd number found.\"\n        return 1\n    fi\n    echo $((even - odd))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even_num odd_num\n    even_num=$(echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n 1)\n    odd_num=$(echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n 1)\n    if [ -z \"$even_num\" ] || [ -z \"$odd_num\" ]; then\n        echo \"No even or odd number in the list\"\n    else\n        echo \"$((even_num - odd_num))\"\n    fi",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$n\n    else\n      odd=$n\n    fi\n    i=$((i + 1))\n  done\n  echo $((even - odd))",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((i%2)) -eq 0 ]; then\n      even=$((even+n))\n    else\n      odd=$((odd+n))\n    fi\n    i=$((i+1))\n  done\n  echo $((even-odd))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))"
  ]
}
{
  "name": "mbpp_594_diff_even_odd",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the difference of the first even and first odd number of a given list.\n#\n# $1 is a space-separated list\ndiff_even_odd() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    diff_even_odd \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 7 4 1 6 8\") = \"3\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1\" ]]\n    [[ $(candidate \"1 5 7 9 10\") = \"9\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num%2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num%2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local even=0\n    local odd=0\n    local i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((list[$i] % 2)) -eq 0 ]; then\n            even=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((list[$i] % 2)) -ne 0 ]; then\n            odd=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "  local -a nums=($1)\n  local even_num odd_num\n  for num in \"${nums[@]}\"; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=${num}\n      break\n    fi\n  done\n  for num in \"${nums[@]}\"; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=${num}\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even=0\n    local odd=0\n    local num=0\n    for i in $1; do\n        if [[ $num -eq 0 ]]; then\n            even=$i\n        elif [[ $num -eq 1 ]]; then\n            odd=$i\n        fi\n        if [[ $((i % 2)) -eq 0 ]] && [[ $num -eq 0 ]]; then\n            num=1\n        elif [[ $((i % 2)) -eq 1 ]] && [[ $num -eq 1 ]]; then\n            num=2\n        fi\n    done\n    echo $((even - odd))",
    "  local -a list\n  local -i even odd\n  local -i i\n\n  list=($1)\n  even=0\n  odd=0\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    if ((list[i] % 2 == 0)); then\n      even=${list[i]}\n      break\n    fi\n  done\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    if ((list[i] % 2 != 0)); then\n      odd=${list[i]}\n      break\n    fi\n  done\n\n  echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even odd\n    for n in $1; do\n        if [[ $n =~ ^[0-9]+$ ]]; then\n            if [[ $n%2 -eq 0 ]]; then\n                if [[ -z $even ]]; then\n                    even=$n\n                fi\n            else\n                if [[ -z $odd ]]; then\n                    odd=$n\n                fi\n            fi\n        fi\n    done\n    if [[ -z $even ]] || [[ -z $odd ]]; then\n        echo \"No even or odd number found.\"\n        return 1\n    fi\n    echo $((even - odd))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even_num odd_num\n    even_num=$(echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n 1)\n    odd_num=$(echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n 1)\n    if [ -z \"$even_num\" ] || [ -z \"$odd_num\" ]; then\n        echo \"No even or odd number in the list\"\n    else\n        echo \"$((even_num - odd_num))\"\n    fi",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$n\n    else\n      odd=$n\n    fi\n    i=$((i + 1))\n  done\n  echo $((even - odd))",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((i%2)) -eq 0 ]; then\n      even=$((even+n))\n    else\n      odd=$((odd+n))\n    fi\n    i=$((i+1))\n  done\n  echo $((even-odd))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local even=0\n    local odd=0\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even - odd))",
    "    local list=$1\n    local even=$(echo $list | awk '{for (i=1; i<=NF; i++) if ($i%2==0) {print $i; exit}}')\n    local odd=$(echo $list | awk '{for (i=1; i<=NF; i++) if ($i%2==1) {print $i; exit}}')\n    echo $((even-odd))",
    "  local even odd\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -a arr=(\"$@\")\n  local even_num odd_num\n  for num in \"${arr[@]}\"; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in \"${arr[@]}\"; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for i in $1; do\n    num=$i\n    if [ $((num%2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for i in $1; do\n    num=$i\n    if [ $((num%2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local list=$1\n  local even=0\n  local odd=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even odd\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    elif [[ $num -eq 1 ]]; then\n      odd_num=$num\n      break\n    elif [[ $num -eq 2 ]]; then\n      even_num=$num\n      break\n    elif [[ $num -eq 3 ]]; then\n      odd_num=$num\n      break\n    elif [[ $num -eq 4 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n 1)\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -ne 0 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even odd\n  for i in $list; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $list; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "  local even=$(echo $1 | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n1)\n  local odd=$(echo $1 | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n1)\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local even=0\n    local odd=0\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even odd\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+$')\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+$')\n  echo $((even - odd))",
    "    local -a list=($1)\n    local even=0\n    local odd=0\n    local i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $(( list[$i] % 2 )) -eq 0 ]; then\n            even=${list[$i]}\n            break\n        fi\n        i=$(( i + 1 ))\n    done\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $(( list[$i] % 2 )) -ne 0 ]; then\n            odd=${list[$i]}\n            break\n        fi\n        i=$(( i + 1 ))\n    done\n    echo $(( even - odd ))",
    "  local list=$1\n  local even=$(echo $list | awk '{for(i=1;i<=NF;i++) if($i%2==0) {print $i; exit}}')\n  local odd=$(echo $list | awk '{for(i=1;i<=NF;i++) if($i%2==1) {print $i; exit}}')\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local first=1\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $first -eq 1 ]; then\n                even=$num\n                first=0\n            fi\n        else\n            if [ $first -eq 1 ]; then\n                odd=$num\n                first=0\n            fi\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even odd\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [ $((n % 2)) -ne 0 ]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo \"$list\" | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n 1)\n  echo $((even - odd))",
    "    local -a list=($1)\n    local even_num odd_num\n    local i\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ${list[i]} =~ ^[+-]?[0-9]+$ ]]; then\n            if [[ ${list[i]}%2 -eq 0 ]]; then\n                even_num=${list[i]}\n                break\n            fi\n        fi\n    done\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ${list[i]} =~ ^[+-]?[0-9]+$ ]]; then\n            if [[ ${list[i]}%2 -ne 0 ]]; then\n                odd_num=${list[i]}\n                break\n            fi\n        fi\n    done\n\n    echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n1)\n  echo \"$even - $odd\" | bc",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local -a list\n    local -i even odd\n    IFS=' ' read -r -a list <<< \"$1\"\n    for i in \"${list[@]}\"; do\n        if (( i % 2 == 0 )); then\n            even=$i\n            break\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if (( i % 2 != 0 )); then\n            odd=$i\n            break\n        fi\n    done\n    echo $(( even - odd ))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  local -a even_nums odd_nums\n\n  for num in $list; do\n    if (( num % 2 == 0 )); then\n      even_nums+=($num)\n    else\n      odd_nums+=($num)\n    fi\n  done\n\n  even_num=${even_nums[0]}\n  odd_num=${odd_nums[0]}\n\n  echo $(( even_num - odd_num ))",
    "    local -a list=($1)\n    local even_num=0\n    local odd_num=0\n    local i=0\n    local len=${#list[@]}\n\n    while [ $i -lt $len ]; do\n        if [ $((list[$i] % 2)) -eq 0 ]; then\n            even_num=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    i=0\n    while [ $i -lt $len ]; do\n        if [ $((list[$i] % 2)) -ne 0 ]; then\n            odd_num=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    echo $((even_num - odd_num))",
    "  local -a list\n  list=($1)\n  local even_num=0\n  local odd_num=0\n  local i=0\n  while [[ $even_num -eq 0 || $odd_num -eq 0 ]]; do\n    if [[ ${list[$i]} -eq 0 ]]; then\n      ((i++))\n      continue\n    fi\n    if [[ $((list[$i] % 2)) -eq 0 ]]; then\n      even_num=${list[$i]}\n    else\n      odd_num=${list[$i]}\n    fi\n    ((i++))\n  done\n  echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "    local even odd\n    for n in $1; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n -lt 0 ]]; then\n            n=$((-n))\n        fi\n        if [[ $((n % 2)) -eq 0 ]]; then\n            if [[ -z $even ]]; then\n                even=$n\n            elif [[ $n -lt $even ]]; then\n                even=$n\n            fi\n        else\n            if [[ -z $odd ]]; then\n                odd=$n\n            elif [[ $n -lt $odd ]]; then\n                odd=$n\n            fi\n        fi\n    done\n    if [[ -z $even ]]; then\n        echo \"No even number found in $1\"\n        return 1\n    fi\n    if [[ -z $odd ]]; then\n        echo \"No odd number found in $1\"\n        return 1\n    fi\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local -i even=0 odd=0\n    for i in $1; do\n        if (( i % 2 == 0 )); then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if (( i % 2 != 0 )); then\n            odd=$i\n            break\n        fi\n    done\n    echo $(( even - odd ))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local found_even=false\n    local found_odd=false\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if ! $found_even; then\n                even_num=$num\n                found_even=true\n            fi\n        else\n            if ! $found_odd; then\n                odd_num=$num\n                found_odd=true\n            fi\n        fi\n        if $found_even && $found_odd; then\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n 1)\n  echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even=0\n  local odd=0\n  for i in $list; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $list; do\n    if [ $((i % 2)) -eq 1 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local -a list=($1)\n    local even=0\n    local odd=0\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ $((list[$i] % 2)) -eq 0 ]; then\n            even=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    i=0\n    while [ $i -lt $len ]; do\n        if [ $((list[$i] % 2)) -ne 0 ]; then\n            odd=${list[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  local first_even=0\n  local first_odd=0\n  local first_even_found=0\n  local first_odd_found=0\n\n  for num in $1; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      if [[ $first_even_found -eq 0 ]]; then\n        first_even=$num\n        first_even_found=1\n      fi\n    else\n      if [[ $first_odd_found -eq 0 ]]; then\n        first_odd=$num\n        first_odd_found=1\n      fi\n    fi\n  done\n\n  echo $((first_even - first_odd))",
    "  local -a list=($1)\n  local even odd\n  for n in \"${list[@]}\"; do\n    if (( n % 2 == 0 )); then\n      even=$n\n      break\n    fi\n  done\n  for n in \"${list[@]}\"; do\n    if (( n % 2 == 1 )); then\n      odd=$n\n      break\n    fi\n  done\n  echo $(( even - odd ))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    local first_even_found=false\n    local first_odd_found=false\n    for num in $1; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            if [[ $first_even_found == false ]]; then\n                even_num=$num\n                first_even_found=true\n            fi\n        else\n            if [[ $first_odd_found == false ]]; then\n                odd_num=$num\n                first_odd_found=true\n            fi\n        fi\n        if [[ $first_even_found == true && $first_odd_found == true ]]; then\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local i=0\n    local num=0\n    for num in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$num\n        else\n            odd=$num\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "    local even odd\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n    i=$((i + 1))\n  done\n  i=0\n  for n in $1; do\n    if [ $((n % 2)) -ne 0 ]; then\n      odd=$n\n      break\n    fi\n    i=$((i + 1))\n  done\n  echo $((even - odd))",
    "    local even=0\n    local odd=0\n    local i=0\n    local num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for i in $1\n  do\n    num=$i\n    if [ $((num % 2)) -eq 0 ]\n    then\n      even_num=$num\n      break\n    fi\n  done\n  for i in $1\n  do\n    num=$i\n    if [ $((num % 2)) -ne 0 ]\n    then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even=0\n    local odd=0\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even=0\n  local odd=0\n  local i=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n    i=$((i + 1))\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even odd\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local -a list=($1)\n    local even odd\n    for n in \"${list[@]}\"; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n%2 -eq 0 ]]; then\n            even=$n\n            break\n        fi\n    done\n    for n in \"${list[@]}\"; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n%2 -ne 0 ]]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even-odd))",
    "  local even_num=0\n  local odd_num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local even_num odd_num\n    for num in \"${list[@]}\"; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in \"${list[@]}\"; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+' | head -n1)\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+' | head -n1)\n  echo $((even - odd))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even=0\n  local odd=0\n  for num in $list; do\n    if [[ $num%2 -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even-odd))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $((num % 2)) -eq 0 ]]; then\n        even_num=\"$num\"\n        break\n      fi\n    fi\n  done\n  for num in $list; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $((num % 2)) -ne 0 ]]; then\n        odd_num=\"$num\"\n        break\n      fi\n    fi\n  done\n  if [[ -n $even_num && -n $odd_num ]]; then\n    echo $((even_num - odd_num))\n  else\n    echo \"No even or odd number found\"\n  fi",
    "  local even odd\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [ $((n % 2)) -ne 0 ]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n 1)\n  echo $((even - odd))",
    "  local list=$1\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even_num=0\n  local odd_num=0\n  local found_even=0\n  local found_odd=0\n\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $found_even -eq 0 ]; then\n        even_num=$num\n        found_even=1\n      fi\n    else\n      if [ $found_odd -eq 0 ]; then\n        odd_num=$num\n        found_odd=1\n      fi\n    fi\n\n    if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n      break\n    fi\n  done\n\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even_num=$(echo $list | awk '{for(i=1;i<=NF;i++){if(i%2==0){print $i}}}' | head -n 1)\n  local odd_num=$(echo $list | awk '{for(i=1;i<=NF;i++){if(i%2!=0){print $i}}}' | head -n 1)\n  echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -ne 0 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local even odd\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [ $((n % 2)) -eq 1 ]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even=0\n  local odd=0\n  local first_even=0\n  local first_odd=0\n  local i=0\n  for number in $1; do\n    if [ $((number % 2)) -eq 0 ]; then\n      if [ $first_even -eq 0 ]; then\n        even=$number\n        first_even=1\n      fi\n    else\n      if [ $first_odd -eq 0 ]; then\n        odd=$number\n        first_odd=1\n      fi\n    fi\n    if [ $first_even -eq 1 ] && [ $first_odd -eq 1 ]; then\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    local diff=0\n    for num in $list\n    do\n        if [ $((num%2)) -eq 0 ]\n        then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            odd_num=$num\n            break\n        fi\n    done\n    diff=$((even_num-odd_num))\n    echo $diff",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    fi\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    fi\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even=0\n    local odd=0\n    local i=0\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -eq 1 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n 1)\n    local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n 1)\n    echo $((even - odd))",
    "  local -a arr=(\"$@\")\n  local even_num odd_num\n  for num in \"${arr[@]}\"; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in \"${arr[@]}\"; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 1 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local even=0\n    local odd=0\n    local i=0\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $num -eq 0 ]]; then\n            continue\n        elif [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $num -eq 0 ]]; then\n            continue\n        elif [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local even_num=0\n  local odd_num=0\n  local found_even=false\n  local found_odd=false\n\n  for num in $1; do\n    if (( num % 2 == 0 )); then\n      if ! $found_even; then\n        even_num=$num\n        found_even=true\n      fi\n    else\n      if ! $found_odd; then\n        odd_num=$num\n        found_odd=true\n      fi\n    fi\n\n    if $found_even && $found_odd; then\n      break\n    fi\n  done\n\n  echo $(( even_num - odd_num ))",
    "  local even_num odd_num\n  local -a nums=($1)\n  for num in \"${nums[@]}\"; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in \"${nums[@]}\"; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -a arr=(\"$@\")\n  local even=0\n  local odd=0\n  for i in \"${arr[@]}\"; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in \"${arr[@]}\"; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even odd\n    for n in $list; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $list; do\n        if [ $((n % 2)) -eq 1 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n 1)\n  echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -a list=($1)\n  local even=0\n  local odd=0\n  local i=0\n  local len=${#list[@]}\n  while [ $i -lt $len ]; do\n    if [ $((list[$i]%2)) -eq 0 ]; then\n      even=${list[$i]}\n      break\n    fi\n    i=$((i+1))\n  done\n  i=0\n  while [ $i -lt $len ]; do\n    if [ $((list[$i]%2)) -ne 0 ]; then\n      odd=${list[$i]}\n      break\n    fi\n    i=$((i+1))\n  done\n  echo $((even-odd))",
    "    local even odd\n    for n in $1; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n -lt 0 ]]; then\n            n=$(( -n ))\n        fi\n        if [[ $(( n % 2 )) -eq 0 ]]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n -lt 0 ]]; then\n            n=$(( -n ))\n        fi\n        if [[ $(( n % 2 )) -eq 1 ]]; then\n            odd=$n\n            break\n        fi\n    done\n    if [[ -z $even ]]; then\n        echo \"No even number in the list\"\n        return 1\n    fi\n    if [[ -z $odd ]]; then\n        echo \"No odd number in the list\"\n        return 1\n    fi\n    echo $(( even - odd ))",
    "    local list=\"$1\"\n    local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+' | head -n1)\n    local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+' | head -n1)\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even_num=0\n    local odd_num=0\n    local i=0\n\n    while [[ $even_num -eq 0 ]] || [[ $odd_num -eq 0 ]]; do\n        if [[ ${list[$i]} -eq 0 ]]; then\n            ((i++))\n            continue\n        fi\n\n        if [[ $((list[$i] % 2)) -eq 0 ]] && [[ $even_num -eq 0 ]]; then\n            even_num=${list[$i]}\n        elif [[ $((list[$i] % 2)) -ne 0 ]] && [[ $odd_num -eq 0 ]]; then\n            odd_num=${list[$i]}\n        fi\n\n        ((i++))\n    done\n\n    echo $((even_num - odd_num))",
    "  local even=0\n  local odd=0\n  local num=0\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  num=$((even - odd))\n  echo $num",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  local first_even=0\n  local first_odd=0\n\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $first_even -eq 0 ]; then\n        even_num=$num\n        first_even=1\n      fi\n    else\n      if [ $first_odd -eq 0 ]; then\n        odd_num=$num\n        first_odd=1\n      fi\n    fi\n  done\n\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[02468]$' | head -n 1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[13579]$' | head -n 1)\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[02468]$' | head -n1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[13579]$' | head -n1)\n  echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]*$' | head -n 1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]*$' | head -n 1)\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num=0\n  local odd_num=0\n  local num=0\n  local found_even=0\n  local found_odd=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $found_even -eq 0 ]; then\n        even_num=$num\n        found_even=1\n      fi\n    else\n      if [ $found_odd -eq 0 ]; then\n        odd_num=$num\n        found_odd=1\n      fi\n    fi\n    if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even odd\n    for n in $1; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n -gt 0 ]]; then\n            if [[ -z $even ]]; then\n                even=$n\n            elif [[ -z $odd ]]; then\n                odd=$n\n            fi\n        else\n            if [[ -z $odd ]]; then\n                odd=$n\n            elif [[ -z $even ]]; then\n                even=$n\n            fi\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even=\"\"\n    local odd=\"\"\n    local i=0\n    for n in $list; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=\"$n\"\n            break\n        fi\n        i=$((i + 1))\n    done\n    i=0\n    for n in $list; do\n        if [ $((n % 2)) -eq 1 ]; then\n            odd=\"$n\"\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num=\"\"\n  local odd_num=\"\"\n  local num=\"\"\n  local diff=\"\"\n\n  for num in $list; do\n    if [ -z \"$even_num\" ] && [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n    fi\n\n    if [ -z \"$odd_num\" ] && [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n    fi\n\n    if [ -n \"$even_num\" ] && [ -n \"$odd_num\" ]; then\n      break\n    fi\n  done\n\n  diff=$((even_num - odd_num))\n  echo \"$diff\"",
    "    local even=0\n    local odd=0\n    local num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even=0\n  local odd=0\n  for num in $list; do\n    if [[ $num%2 -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $num%2 -eq 1 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]*$' | head -n1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]*$' | head -n1)\n  if [[ -z \"$even\" ]] || [[ -z \"$odd\" ]]; then\n    echo \"0\"\n  else\n    echo \"$((even - odd))\"\n  fi",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -eq 1 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_number\n  local odd_number\n  local number\n  for number in $1; do\n    if [ $((number % 2)) -eq 0 ]; then\n      even_number=$number\n      break\n    fi\n  done\n  for number in $1; do\n    if [ $((number % 2)) -ne 0 ]; then\n      odd_number=$number\n      break\n    fi\n  done\n  echo $((even_number - odd_number))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even odd\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=$1\n  local even=0\n  local odd=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local even=0\n    local odd=0\n    local i=0\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n        i=$((i + 1))\n    done\n    i=0\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n\n  echo $((even_num - odd_num))",
    "    local list=$1\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even odd\n    for n in $1; do\n        if [[ $n%2 -eq 0 ]]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [[ $n%2 -eq 1 ]]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even=0\n  local odd=0\n  local i=0\n  local num=0\n\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n\n  for num in $list; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd=$num\n      break\n    fi\n  done\n\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[02468]+' | head -n1)\n  local odd=$(echo \"$list\" | grep -Eo '^[13579]+' | head -n1)\n  echo \"$((even - odd))\"",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -i even odd\n  for i in $1; do\n    if (( i % 2 == 0 )); then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if (( i % 2 != 0 )); then\n      odd=$i\n      break\n    fi\n  done\n  echo $(( even - odd ))",
    "  local -a list\n  local even odd\n  list=($1)\n  for i in ${list[@]}; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in ${list[@]}; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even odd\n    for i in $list; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $list; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even odd\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even odd\n  for n in $1; do\n    if [[ $((n % 2)) == 0 ]]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [[ $((n % 2)) == 1 ]]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even=0\n  local odd=0\n  local first_even=0\n  local first_odd=0\n  local i=0\n  local num=0\n\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $first_even -eq 0 ]; then\n        even=$num\n        first_even=1\n      fi\n    else\n      if [ $first_odd -eq 0 ]; then\n        odd=$num\n        first_odd=1\n      fi\n    fi\n    if [ $first_even -eq 1 ] && [ $first_odd -eq 1 ]; then\n      break\n    fi\n  done\n\n  echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local first_even=1\n    local first_odd=1\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $first_even -eq 1 ]; then\n                even_num=$num\n                first_even=0\n            fi\n        else\n            if [ $first_odd -eq 1 ]; then\n                odd_num=$num\n                first_odd=0\n            fi\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local list=\"$1\"\n    local even odd\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=$1\n    local even odd\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | cut -d' ' -f2)\n  local odd=$(echo $list | cut -d' ' -f1)\n  echo $((even - odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]*$' | head -n1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]*$' | head -n1)\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -a list=($1)\n  local even=0\n  local odd=0\n  local i=0\n  while [[ $even -eq 0 || $odd -eq 0 ]]; do\n    if [[ ${list[$i]} -eq 0 ]]; then\n      ((i++))\n      continue\n    fi\n    if [[ ${list[$i]}%2 -eq 0 ]]; then\n      even=${list[$i]}\n    else\n      odd=${list[$i]}\n    fi\n    ((i++))\n  done\n  echo $((even-odd))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even=0\n    local odd=0\n    local num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even odd\n    for n in $1; do\n        if [[ $n =~ ^[0-9]+$ ]]; then\n            if [[ $n%2 -eq 0 ]]; then\n                even=$n\n                break\n            fi\n        fi\n    done\n    for n in $1; do\n        if [[ $n =~ ^[0-9]+$ ]]; then\n            if [[ $n%2 -ne 0 ]]; then\n                odd=$n\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local even odd\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [ $((n % 2)) -eq 1 ]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  even_num=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+')\n  odd_num=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+')\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even=\"\"\n    local odd=\"\"\n    for i in $list; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [[ $((i % 2)) -eq 1 ]]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even odd\n  for i in $1; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n      if [[ $i%2 -eq 0 ]]; then\n        even=$i\n        break\n      else\n        odd=$i\n        break\n      fi\n    fi\n  done\n  for i in $1; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n      if [[ $i%2 -eq 0 ]]; then\n        if [[ $i -lt $even ]]; then\n          even=$i\n        fi\n      else\n        if [[ $i -gt $odd ]]; then\n          odd=$i\n        fi\n      fi\n    fi\n  done\n  echo $((odd-even))",
    "    local even=0\n    local odd=0\n    local i=0\n    for n in $1; do\n        if [ $((n%2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n        i=$((i+1))\n    done\n    i=0\n    for n in $1; do\n        if [ $((n%2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $((even-odd))",
    "    local even odd\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even odd\n    for i in ${list[@]}; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in ${list[@]}; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    local i=0\n    local list=($1)\n\n    while [ $i -lt ${#list[@]} ]; do\n        num=${list[$i]}\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        num=${list[$i]}\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    echo $((even_num - odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $num -eq 0 ]]; then\n            continue\n        fi\n        if [[ $num -lt 0 ]]; then\n            num=$((-num))\n        fi\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $num -eq 0 ]]; then\n            continue\n        fi\n        if [[ $num -lt 0 ]]; then\n            num=$((-num))\n        fi\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((odd-even))",
    "    local -a list=($1)\n    local even_num=0\n    local odd_num=0\n    local i=0\n\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((${list[$i]} % 2)) -eq 0 ]; then\n            even_num=${list[$i]}\n            break\n        fi\n        i=$(($i + 1))\n    done\n\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((${list[$i]} % 2)) -ne 0 ]; then\n            odd_num=${list[$i]}\n            break\n        fi\n        i=$(($i + 1))\n    done\n\n    echo $(($even_num - $odd_num))",
    "  local -a list=($1)\n  local even=0\n  local odd=0\n  local i=0\n  local found_even=false\n  local found_odd=false\n\n  while [ $i -lt ${#list[@]} ]; do\n    if [ $((list[$i] % 2)) -eq 0 ] && ! $found_even; then\n      even=${list[$i]}\n      found_even=true\n    fi\n    if [ $((list[$i] % 2)) -ne 0 ] && ! $found_odd; then\n      odd=${list[$i]}\n      found_odd=true\n    fi\n    if $found_even && $found_odd; then\n      break\n    fi\n    i=$((i + 1))\n  done\n\n  echo $((even - odd))",
    "    local even odd\n    for i in $1; do\n        if [ $(($i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $(($i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $(($even - $odd))",
    "    local even odd\n    for i in $1; do\n        if [ $((i%2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i%2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even=0\n  local odd=0\n  for i in $list; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $list; do\n    if [[ $((i % 2)) -ne 0 ]]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local even odd\n    for num in $1; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even_num=0\n    local odd_num=0\n    for num in \"${list[@]}\"; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in \"${list[@]}\"; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=$1\n    local even=$(echo $list | awk '{for(i=1;i<=NF;i++) if($i%2==0) {print $i; break}}')\n    local odd=$(echo $list | awk '{for(i=1;i<=NF;i++) if($i%2==1) {print $i; break}}')\n    echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num\n  local odd_num\n  local diff\n\n  even_num=$(echo \"$list\" | grep -Eo '[0-9]+' | grep -Eo '^[02468]+$' | head -1)\n  odd_num=$(echo \"$list\" | grep -Eo '[0-9]+' | grep -Eo '^[13579]+$' | head -1)\n\n  if [[ -z \"$even_num\" ]] || [[ -z \"$odd_num\" ]]; then\n    echo \"No even or odd numbers in the list\"\n    return 1\n  fi\n\n  diff=$((even_num - odd_num))\n  echo \"$diff\"",
    "  local even=0\n  local odd=0\n  local i=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n    i=$((i + 1))\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -a list=($1)\n  local even=0\n  local odd=0\n  local i=0\n  while [ $i -lt ${#list[@]} ]; do\n    if [ $((list[$i] % 2)) -eq 0 ]; then\n      even=${list[$i]}\n      break\n    fi\n    i=$((i + 1))\n  done\n  i=0\n  while [ $i -lt ${#list[@]} ]; do\n    if [ $((list[$i] % 2)) -ne 0 ]; then\n      odd=${list[$i]}\n      break\n    fi\n    i=$((i + 1))\n  done\n  echo $((even - odd))"
  ]
}
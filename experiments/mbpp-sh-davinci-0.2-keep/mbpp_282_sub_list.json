{
  "name": "mbpp_282_sub_list",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to subtract two lists element-wise.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nsub_list() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_282_sub_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sub_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\" \"4 5 6\") = \"-3 -3 -3\" ]]\n    [[ $(candidate \"1 2\" \"3 4\") = \"-2 -2\" ]]\n    [[ $(candidate \"90 120\" \"50 70\") = \"40 50\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local list_len=$list1_len\n  local list_arr=(\"${list1_arr[@]}\")\n  local i=0\n  local j=0\n  local k=0\n  local tmp\n  local tmp_arr=()\n  if [ $list2_len -gt $list1_len ]; then\n    list_len=$list2_len\n    list_arr=(\"${list2_arr[@]}\")\n  fi\n  for ((i=0; i<list_len; i++)); do\n    tmp=${list_arr[$i]}\n    for ((j=0; j<list1_len; j++)); do\n      if [ \"$tmp\" = \"${list1_arr[$j]}\" ]; then\n        tmp=\n        break\n      fi\n    done\n    for ((j=0; j<list2_len; j++)); do\n      if [ \"$tmp\" = \"${list2_arr[$j]}\" ]; then\n        tmp=\n        break\n      fi\n    done\n    if [ -n \"$tmp\" ]; then\n      tmp_arr[$k]=$tmp\n      k=$((k+1))\n    fi\n  done\n  echo \"${tmp_arr[@]}\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local list_len=$((list1_len > list2_len ? list1_len : list2_len))\n  local list_arr=()\n  local i\n  for ((i=0; i<list_len; i++)); do\n    local val1=${list1_arr[$i]:-0}\n    local val2=${list2_arr[$i]:-0}\n    list_arr[$i]=$((val1 - val2))\n  done\n  echo \"${list_arr[@]}\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n        if ! echo \"$list2\" | grep -q \"$i\"; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -w)\n    local list2_len=$(echo \"$list2\" | wc -w)\n    local list1_arr=($list1)\n    local list2_arr=($list2)\n    local i\n    local j\n    local k\n    local result\n    local result_arr\n    local result_len\n    local result_str\n\n    if [ $list1_len -ne $list2_len ]; then\n        echo \"Error: list1 and list2 are not the same length.\"\n        return 1\n    fi\n\n    for ((i=0; i<$list1_len; i++)); do\n        result_arr[$i]=$((list1_arr[$i] - list2_arr[$i]))\n    done\n\n    result_str=$(printf \"%s \" \"${result_arr[@]}\")\n    echo \"${result_str% }\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n        if ! echo \" $list2 \" | grep -q \" $i \"; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=`echo \"$list1\" | wc -w`\n  local list2_len=`echo \"$list2\" | wc -w`\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local list_len=`echo \"$list1_len $list2_len\" | awk '{print $1>$2?$1:$2}'`\n  local list_arr=()\n  local i=0\n  while [ $i -lt $list_len ]; do\n    local list1_elem=${list1_arr[$i]}\n    local list2_elem=${list2_arr[$i]}\n    local list_elem=`echo \"$list1_elem $list2_elem\" | awk '{print $1-$2}'`\n    list_arr[$i]=$list_elem\n    i=$((i+1))\n  done\n  echo ${list_arr[@]}",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local i\n  local j\n  local res=\"\"\n  for ((i=0; i<list1_len; i++)); do\n    for ((j=0; j<list2_len; j++)); do\n      if [[ \"${list1_arr[$i]}\" == \"${list2_arr[$j]}\" ]]; then\n        break\n      fi\n    done\n    if [[ $j -eq $list2_len ]]; then\n      res=\"$res ${list1_arr[$i]}\"\n    fi\n  done\n  echo \"$res\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n        if ! echo \"$list2\" | grep -q -w \"$i\"; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local list_len=$((list1_len > list2_len ? list1_len : list2_len))\n  local list_arr=()\n  local i\n  for ((i=0; i<list_len; i++)); do\n    list_arr[$i]=$((list1_arr[$i] - list2_arr[$i]))\n  done\n  echo \"${list_arr[@]}\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_len=`echo \"$list1\" | wc -w`\n    local list2_len=`echo \"$list2\" | wc -w`\n    local list1_arr=($list1)\n    local list2_arr=($list2)\n    local i\n    local j\n    local list1_elem\n    local list2_elem\n    local found\n    local result=()\n    for ((i=0; i<list1_len; i++)); do\n        list1_elem=${list1_arr[$i]}\n        found=0\n        for ((j=0; j<list2_len; j++)); do\n            list2_elem=${list2_arr[$j]}\n            if [[ \"$list1_elem\" == \"$list2_elem\" ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            result+=($list1_elem)\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local list1=($1)\n    local list2=($2)\n    local list3=()\n    local i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq ${#list2[@]} ]]; then\n            list3+=(${list1[i]})\n        fi\n    done\n    echo \"${list3[@]}\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_len=`echo \"$list1\" | wc -w`\n    local list2_len=`echo \"$list2\" | wc -w`\n    local list1_arr=($list1)\n    local list2_arr=($list2)\n    local i\n    local j\n    local result=\"\"\n    for ((i=0; i<list1_len; i++)); do\n        for ((j=0; j<list2_len; j++)); do\n            if [ \"${list1_arr[$i]}\" == \"${list2_arr[$j]}\" ]; then\n                break\n            fi\n        done\n        if [ $j -eq $list2_len ]; then\n            result=\"$result ${list1_arr[$i]}\"\n        fi\n    done\n    echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local i\n  local j\n  local k\n  local result=\"\"\n  for ((i=0; i<list1_len; i++)); do\n    for ((j=0; j<list2_len; j++)); do\n      if [ \"${list1_arr[$i]}\" = \"${list2_arr[$j]}\" ]; then\n        break\n      fi\n    done\n    if [ $j -eq $list2_len ]; then\n      result=\"$result ${list1_arr[$i]}\"\n    fi\n  done\n  echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n        if [[ \"$list2\" != *\"$i\"* ]]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -w)\n    local list2_len=$(echo \"$list2\" | wc -w)\n    local list1_arr=($list1)\n    local list2_arr=($list2)\n    local i\n    local j\n    local k\n    local result=\"\"\n    for ((i=0; i<list1_len; i++)); do\n        for ((j=0; j<list2_len; j++)); do\n            if [[ \"${list1_arr[i]}\" == \"${list2_arr[j]}\" ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $list2_len ]]; then\n            result=\"$result ${list1_arr[i]}\"\n        fi\n    done\n    echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -w)\n    local list2_len=$(echo \"$list2\" | wc -w)\n    local list1_arr=($list1)\n    local list2_arr=($list2)\n    local i\n    local j\n    local result=\"\"\n    for ((i=0; i<list1_len; i++)); do\n        local found=0\n        for ((j=0; j<list2_len; j++)); do\n            if [ \"${list1_arr[$i]}\" == \"${list2_arr[$j]}\" ]; then\n                found=1\n                break\n            fi\n        done\n        if [ \"$found\" == \"0\" ]; then\n            result=\"$result ${list1_arr[$i]}\"\n        fi\n    done\n    echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n        if [[ $list2 != *\"$i\"* ]]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n        if [[ \"$list2\" != *\"$i\"* ]]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local list_len=$(($list1_len > $list2_len ? $list1_len : $list2_len))\n  local list_arr=()\n  for ((i = 0; i < $list_len; i++)); do\n    local list1_elem=${list1_arr[$i]}\n    local list2_elem=${list2_arr[$i]}\n    if [[ -z \"$list1_elem\" ]]; then\n      list1_elem=0\n    fi\n    if [[ -z \"$list2_elem\" ]]; then\n      list2_elem=0\n    fi\n    list_arr[$i]=$(($list1_elem - $list2_elem))\n  done\n  echo \"${list_arr[@]}\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -w)\n    local list2_len=$(echo \"$list2\" | wc -w)\n    local list1_arr=($list1)\n    local list2_arr=($list2)\n    local list_len=$list1_len\n    local list_arr=(\"${list1_arr[@]}\")\n    if [ $list2_len -gt $list1_len ]; then\n        list_len=$list2_len\n        list_arr=(\"${list2_arr[@]}\")\n    fi\n    local i=0\n    local j=0\n    local k=0\n    local list_sub=()\n    for ((i=0; i<list_len; i++)); do\n        if [ $i -lt $list1_len ]; then\n            list_sub[$k]=$((${list1_arr[$i]}-${list2_arr[$j]}))\n            k=$(($k+1))\n        else\n            list_sub[$k]=$((${list2_arr[$j]}))\n            k=$(($k+1))\n        fi\n        j=$(($j+1))\n    done\n    echo \"${list_sub[@]}\""
  ]
}
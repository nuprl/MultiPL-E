{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the sum of the largest contiguous sublist in the given list.\n#\n# $1 is a space-separated list\n# $2 is an integer\nmax_sub_array_sum() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_sub_array_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-2 -3 4 -1 -2 1 5 -3\" \"8\") = \"7\" ]]\n    [[ $(candidate \"-3 -4 5 -2 -3 2 6 -4\" \"8\") = \"8\" ]]\n    [[ $(candidate \"-4 -5 6 -3 -4 3 7 -5\" \"8\") = \"10\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list=$1\n  local max_sum=$2\n  local current_sum=0\n  local max_sub_array_sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n ",
    "    local list=$1\n    local n=$2\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + ${list[i]}))\n    done\n\n    max_sum=$sum\n\n    for ((i=n; i<${#list[@]}; i++)); do\n        sum=$((sum + ${list[i]} - ${list[i-n]}))\n        max_sum=$((max_sum > sum ? max_sum : sum))\n    done\n\n    echo $max_sum",
    "    local -a list=($1)\n    local -i max_sum=0\n    local -i current_sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#list[@]}\n    local -i m=$2\n    for ((i=0; i<n; i++))\n    do\n        current_sum=0\n        for ((j=i; j<n; j++))\n        do\n            current_sum=$((current_sum + list[j]))\n            if ((current_sum > max_sum))\n            then\n                max_sum=$current_sum\n            fi\n        done\n    done\n    echo $max_sum",
    "  local -a list=($1)\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k=0\n\n  for i in $(seq 0 $((${#list[@]} - 1))); do\n    for j in $(seq $i $((${#list[@]} - 1))); do\n      curr_sum=0\n      for k in $(seq $i $j); do\n        curr_sum=$(($curr_sum + ${list[$k]}))\n      done\n      if [ $curr_sum -gt $max_sum ]; then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  echo $max_sum",
    "    local list=\"$1\"\n    local size=\"$2\"\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n\n    for i in $list; do\n        (( sum += i ))\n        (( k++ ))\n        if (( k > size )); then\n            (( sum -= ${list[j]} ))\n            (( j++ ))\n        fi\n        if (( sum > max_sum )); then\n            max_sum=$sum\n        fi\n    done\n\n    echo $max_sum",
    "  local list=$1\n  local length=$2\n  local max_sum=0\n  local current_sum=0\n  local i=0\n  local j=0\n  for i in $(seq 1 $length); do\n    current_sum=$(($current_sum + $(echo $list | cut -d ' ' -f $i)))\n  done\n  max_sum=$current_sum\n  for i in $(seq 1 $((length-1))); do\n    current_sum=$(($current_sum - $(echo $list | cut -d ' ' -f $i) + $(echo $list | cut -d ' ' -f $((i+length)))))\n    if [ $current_sum -gt $max_sum ]; then\n      max_sum=$current_sum\n    fi\n  done\n  echo $max_sum",
    "  local list=\"$1\"\n  local max_len=\"$2\"\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local len=0\n  local num=0\n  local nums=()\n  local sub_list=()\n  local sub_sum=0\n\n  # Convert list to array\n  IFS=' ' read -r -a nums <<< \"$list\"\n\n  # Find the sum of the largest contiguous sublist\n  for ((i=0; i<${#nums[@]}; i++)); do\n    for ((j=i; j<${#nums[@]}; j++)); do\n      len=$((j-i+1))\n      num=${nums[j]}\n      sum=$((sum+num))\n      if ((len <= max_len)); then\n        if ((sum > max_sum)); then\n          max_sum=$sum\n          sub_list=(\"${nums[@]:i:len}\")\n        fi\n      fi\n    done\n    sum=0\n  done\n\n  # Print the largest contiguous sublist\n  for num in \"${sub_list[@]}\"; do\n    sub_sum=$((sub_sum+num))\n    printf \"%d \" \"$num\"\n  done\n  printf \"\\n\"\n\n  # Print the sum of the largest contiguous sublist\n  printf \"%d\\n\" \"$sub_sum\"",
    "    local -a list=($1)\n    local -i max_sum=0\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#list[@]}\n    local -i m=$2\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + list[j]))\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        done\n    done\n\n    echo $max_sum",
    "    local -a list=($1)\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            curr_sum=0\n            for ((k=i; k<=j; k++)); do\n                curr_sum=$((curr_sum + list[k]))\n            done\n            if [[ $curr_sum -gt $max_sum ]]; then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n    echo $max_sum",
    "  local list=$1\n  local n=$2\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  for ((i=0; i<n; i++)); do\n    sum=0\n    for ((j=i; j<n; j++)); do\n      sum=$((sum + ${list[j]}))\n      if [[ $sum -gt $max_sum ]]; then\n        max_sum=$sum\n      fi\n    done\n  done\n  echo $max_sum",
    "  local list=\"$1\"\n  local size=\"$2\"\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local temp=0\n\n  # find the sum of the first sublist\n  for i in $list; do\n    if [ $k -lt $size ]; then\n      sum=$((sum + i))\n      k=$((k + 1))\n    fi\n  done\n  max_sum=$sum\n\n  # find the sum of the rest of the sublists\n  for i in $list; do\n    if [ $j -lt $size ]; then\n      j=$((j + 1))\n    else\n      temp=$((temp + 1))\n      sum=$((sum - ${list[$temp]}))\n      sum=$((sum + i))\n    fi\n    if [ $sum -gt $max_sum ]; then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -a list=($1)\n  local -i max_sum=0\n  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#list[@]}\n  local -i max_i=0\n  local -i max_j=0\n\n  for ((i=0; i<n; i++)); do\n    for ((j=i; j<n; j++)); do\n      sum=0\n      for ((k=i; k<=j; k++)); do\n        sum=$((sum + list[k]))\n      done\n      if ((sum > max_sum)); then\n        max_sum=$sum\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  echo \"Max sum: $max_sum\"\n  echo \"Sublist: ${list[@]:$max_i:$((max_j - max_i + 1))}\"",
    "  local list=\"$1\"\n  local size=\"$2\"\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local num=0\n  for ((i=0; i<size; i++)); do\n    sum=0\n    for ((j=i; j<size; j++)); do\n      num=\"$(echo \"$list\" | cut -d' ' -f$((j+1)))\"\n      sum=$((sum+num))\n      if ((sum>max_sum)); then\n        max_sum=$sum\n      fi\n    done\n  done\n  echo \"$max_sum\"",
    "    local list=($1)\n    local n=$2\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n\n    while [ $i -lt $n ]; do\n        curr_sum=$((curr_sum + list[i]))\n        if [ $curr_sum -lt 0 ]; then\n            curr_sum=0\n            j=$((i + 1))\n        fi\n        if [ $curr_sum -gt $max_sum ]; then\n            max_sum=$curr_sum\n        fi\n        i=$((i + 1))\n    done\n\n    echo $max_sum",
    "    local list=$1\n    local n=$2\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + ${list[$j]}))\n            if [[ $sum -gt $max_sum ]]; then\n                max_sum=$sum\n            fi\n        done\n    done\n    echo $max_sum",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local max=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    for i in $list; do\n        sum=$((sum + i))\n        if [[ $sum -gt $max ]]; then\n            max=$sum\n        fi\n        if [[ $sum -lt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $max",
    "    local -a list=($1)\n    local n=$2\n    local max_sum=0\n    local curr_sum=0\n    for (( i=0; i<n; i++ )); do\n        curr_sum=$(( curr_sum + list[i] ))\n        if (( curr_sum < 0 )); then\n            curr_sum=0\n        fi\n        if (( curr_sum > max_sum )); then\n            max_sum=$curr_sum\n        fi\n    done\n    echo $max_sum",
    "    local -a list=($1)\n    local -i max_sum=0\n    local -i current_sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#list[@]}\n    local -i m=$2\n    for ((i=0; i<n; i++)); do\n        current_sum=0\n        for ((j=i; j<n; j++)); do\n            current_sum=$((current_sum + list[j]))\n            if ((current_sum > max_sum)); then\n                max_sum=$current_sum\n            fi\n        done\n    done\n    echo $max_sum",
    "  local list=\"$1\"\n  local n=\"$2\"\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local len=${#list}\n  for ((i=0; i<len; i++)); do\n    sum=0\n    for ((j=i; j<len; j++)); do\n      sum=$((sum + ${list:j:1}))\n      if ((sum > max_sum)); then\n        max_sum=$sum\n      fi\n    done\n  done\n  echo $max_sum",
    "  local -a arr=(\"$@\")\n  local max_sum=0\n  local curr_sum=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    curr_sum=$(( curr_sum + arr[i] ))\n    if (( curr_sum < 0 )); then\n      curr_sum=0\n    fi\n    if (( curr_sum > max_sum )); then\n      max_sum=$curr_sum\n    fi\n  done\n  echo $max_sum"
  ]
}
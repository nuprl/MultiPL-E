{
  "name": "mbpp_567_issort_list",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether a specified list is sorted or not.\n#\n# $1 is a space-separated list\nissort_list() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    issort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 6 8 10 12 14 16 17\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 6 8 10 12 14 20 17\") = \"false\" ]]\n    [[ $(candidate \"1 2 4 6 8 10 15 14 20\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local prev=\n    for i in $list; do\n        if [ -n \"$prev\" ] && [ \"$prev\" -gt \"$i\" ]; then\n            return 1\n        fi\n        prev=\"$i\"\n    done\n    return 0",
    "    local list=\"$1\"\n    local prev=\n    for item in $list; do\n        if [ \"$prev\" ] && [ \"$prev\" -gt \"$item\" ]; then\n            return 1\n        fi\n        prev=\"$item\"\n    done\n    return 0",
    "    local list=\"$1\"\n    local prev=\n    for i in $list; do\n        if [[ -n $prev && $prev -gt $i ]]; then\n            return 1\n        fi\n        prev=$i\n    done\n    return 0",
    "    local list=\"$1\"\n    local prev=0\n    for i in $list; do\n        if [ $i -lt $prev ]; then\n            return 1\n        fi\n        prev=$i\n    done\n    return 0",
    "\tlocal list=\"$1\"\n\tlocal i=0\n\tlocal j=0\n\tlocal len=0\n\tlocal a=0\n\tlocal b=0\n\tlocal is_sort=0\n\t\n\tlen=`echo $list | wc -w`\n\tfor ((i=1; i<len; i++))\n\tdo\n\t\ta=`echo $list | cut -d \" \" -f $i`\n\t\tb=`echo $list | cut -d \" \" -f $((i+1))`\n\t\tif [ $a -gt $b ]\n\t\tthen\n\t\t\tis_sort=1\n\t\t\tbreak\n\t\tfi\n\tdone\n\t\n\tif [ $is_sort -eq 0 ]\n\tthen\n\t\techo \"The list is sorted.\"\n\telse\n\t\techo \"The list is not sorted.\"\n\tfi",
    "  local list=\"$1\"\n  local prev=\n  for i in $list; do\n    if [[ -n $prev ]]; then\n      if [[ $i -lt $prev ]]; then\n        return 1\n      fi\n    fi\n    prev=$i\n  done\n  return 0",
    "    local list=\"$1\"\n    local prev=\n    for i in $list; do\n        if [[ -n $prev ]]; then\n            if (( $i < $prev )); then\n                return 1\n            fi\n        fi\n        prev=$i\n    done\n    return 0",
    "    local list=\"$1\"\n    local prev=\n    for i in $list; do\n        if [[ -n $prev ]]; then\n            if [[ $i -lt $prev ]]; then\n                return 1\n            fi\n        fi\n        prev=$i\n    done\n    return 0",
    "    local list=\"$1\"\n    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -gt $curr ]; then\n            return 1\n        fi\n        prev=$curr\n    done\n    return 0",
    "\tlocal list=$1\n\tlocal sorted=1\n\tlocal prev=0\n\tfor i in $list; do\n\t\tif [ $i -lt $prev ]; then\n\t\t\tsorted=0\n\t\t\tbreak\n\t\tfi\n\t\tprev=$i\n\tdone\n\techo $sorted",
    "    local list=\"$1\"\n    local prev=\n    for i in $list; do\n        if [ -n \"$prev\" ] && [ \"$prev\" -gt \"$i\" ]; then\n            return 1\n        fi\n        prev=\"$i\"\n    done\n    return 0",
    "    local list=$1\n    local sorted=1\n    local prev=0\n    for i in $list; do\n        if [ $i -lt $prev ]; then\n            sorted=0\n            break\n        fi\n        prev=$i\n    done\n    echo $sorted",
    "    local list=\"$1\"\n    local prev=\n    for word in $list; do\n        if [[ -n $prev ]]; then\n            if [[ $prev -gt $word ]]; then\n                return 1\n            fi\n        fi\n        prev=$word\n    done\n    return 0",
    "    local list=\"$1\"\n    local list_len=$(echo \"$list\" | wc -w)\n    local i=1\n    local j=2\n    local prev=0\n    local curr=0\n    while [ $i -lt $list_len ]; do\n        prev=$(echo \"$list\" | cut -d ' ' -f $i)\n        curr=$(echo \"$list\" | cut -d ' ' -f $j)\n        if [ $prev -gt $curr ]; then\n            return 1\n        fi\n        i=$((i + 1))\n        j=$((j + 1))\n    done\n    return 0",
    "    local list=\"$1\"\n    local i=0\n    local j=0\n    local len=0\n    local tmp=0\n    local sorted=1\n    len=$(echo \"$list\" | wc -w)\n    for ((i=1; i<len; i++)); do\n        tmp=$(echo \"$list\" | cut -d ' ' -f $i)\n        for ((j=i+1; j<=len; j++)); do\n            if [ $tmp -gt $(echo \"$list\" | cut -d ' ' -f $j) ]; then\n                sorted=0\n                break\n            fi\n        done\n        if [ $sorted -eq 0 ]; then\n            break\n        fi\n    done\n    echo $sorted",
    "    local list=\"$1\"\n    local list_len=$(echo \"$list\" | wc -w)\n    local i=1\n    local prev=0\n    local curr=0\n    for i in $(seq 1 $list_len); do\n        curr=$(echo \"$list\" | cut -d ' ' -f $i)\n        if [ $i -gt 1 ] && [ $curr -lt $prev ]; then\n            return 1\n        fi\n        prev=$curr\n    done\n    return 0",
    "    local list=\"$1\"\n    local sorted=1\n    local prev=\n    for i in $list; do\n        if [[ -n $prev ]]; then\n            if [[ $i -lt $prev ]]; then\n                sorted=0\n                break\n            fi\n        fi\n        prev=$i\n    done\n    echo $sorted",
    "    local list=\"$1\"\n    local prev=\n    for item in $list; do\n        if [[ -n $prev ]]; then\n            if [[ $prev -gt $item ]]; then\n                return 1\n            fi\n        fi\n        prev=$item\n    done\n    return 0",
    "    local list=\"$1\"\n    local sorted=1\n    local prev=\n    for item in $list; do\n        if [ -n \"$prev\" ] && [ \"$prev\" -gt \"$item\" ]; then\n            sorted=0\n            break\n        fi\n        prev=\"$item\"\n    done\n    return $sorted",
    "  local list=\"$1\"\n  local prev=\n  for item in $list; do\n    if [[ -n \"$prev\" ]] && [[ \"$prev\" -gt \"$item\" ]]; then\n      return 1\n    fi\n    prev=\"$item\"\n  done\n  return 0"
  ]
}
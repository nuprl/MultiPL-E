{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find nth centered hexagonal number.\n#\n# $1 is an integer\ncentered_hexagonal_number() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    centered_hexagonal_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"271\" ]]\n    [[ $(candidate \"2\") = \"7\" ]]\n    [[ $(candidate \"9\") = \"217\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  echo $((3*$1*$1-3*$1+2))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  # n = 2*k - 1\n  # H(n) = 3*n^2 - 3*n + 1\n  # H(n) = 3*(2*k - 1)^2 - 3*(2*k - 1) + 1\n  # H(n) = 3*(4*k^2 - 4*k + 1) - 3*(2*k - 1) + 1\n  # H(n) = 12*k^2 - 12*k + 3\n  # H(n) = 4*(3*k^2 - 3*k + 1)\n  # H(n) = 4*H(n/2)\n  #\n  # n = 2*k\n  # H(n) = 3*n^2 - 3*n + 1\n  # H(n) = 3*(2*k)^2 - 3*(2*k) + 1\n  # H(n) = 3*(4*k^2 - 4*k + 1) - 3*(2*k) + 1\n  # H(n) = 12*k^2 - 12*k + 3\n  # H(n) = 4*(3*k^2 - 3*k + 1)\n  # H(n) = 4*H(n/2)\n  #\n  # n = 2*k + 1\n  # H(n) = 3*n^2 - 3*n + 1\n  # H(n) = 3*(2*k + 1)^2 - 3*(2*k + 1) + 1\n  # H(n) = 3*(4*k^2 + 4*k + 1) - 3*(2*k + 1) + 1\n  # H(n) = 12*k^2 + 12*k + 3\n  # H(n) = 4*(3*k^2 + 3*k + 1)\n  # H(n) = 4*H(n/2)\n  #\n  # n = 2*k + 2\n  # H(n) = 3*n^2 - 3*n + 1\n  # H(n) = 3*(2*k + 2)^2 - 3*(",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth=$((n * (2 * n - 1)))\n  echo $nth",
    "  local n=$1\n  local nth_centered_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_centered_hexagonal_number",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"Error: Argument must be a positive integer.\"\n    return 1\n  fi\n  echo $((3 * $1 * $1 - 3 * $1 + 2))",
    "    local n=$1\n    local nth_hexagonal_number=$((n * (2 * n - 1)))\n    echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $(( n * (2 * n - 1) ))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_centered_hexagonal_number=$((3 * n * n - 3 * n + 2))\n  echo $nth_centered_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_centered_hexagonal_number=$(( 3 * n * n - 3 * n + 2 ))\n  echo $nth_centered_hexagonal_number",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  echo $((3*$1*$1-3*$1+2))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local result=$((n * (2 * n - 1)))\n  echo $result",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local result=$((n * (2 * n - 1)))\n  echo $result",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_hexagonal_number=$(( n * (2 * n - 1) ))\n  echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    echo $(( ($1 * (2 * $1 - 1)) ))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $(( n * (2 * n - 1) ))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    # nth centered hexagonal number is equal to 3n^2 - 3n + 1\n    echo $((3 * $1 * $1 - 3 * $1 + 1))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $(( n * (2 * n - 1) ))",
    "    local n=$1\n    local result=$(( 3 * n * n - 3 * n + 2 ))\n    echo $result",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=\"$1\"\n  echo $((n * (2 * n - 1)))",
    "\tlocal n=$1\n\techo $((n * (2 * n - 1)))",
    "    local n=$1\n    local nth_hexagonal_number=$((n*(2*n-1)))\n    echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n*(2*n-1)))",
    "  echo $((3 * $1 * $1 - 3 * $1 + 2))",
    "    echo $((3 * $1 * $1 - 3 * $1 + 2))",
    "  local n=$1\n  echo $(( (n * (2 * n - 1)) ))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $(( 3*n*n - 3*n + 2 ))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n*(2*n-1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    local nth_hexagonal_number=$(( n * (2 * n - 1) ))\n    echo $nth_hexagonal_number",
    "  local n=$1\n  echo $((n*(2*n-1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  if [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $((3 * $1 * $1 - 3 * $1 + 2))\n  fi",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    echo $((3 * $1 * $1 - 3 * $1 + 2))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_hexagonal_number=$((n*(2*n-1)))\n  echo $nth_hexagonal_number",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $(( n * (2 * n - 1) ))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $(( n * ((2 * n) - 1) ))",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * ((2 * n) - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    local nth_hexagonal_number=$((n * (2 * n - 1)))\n    echo $nth_hexagonal_number",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_centered_hexagonal_number=$((3 * $n * $n - 3 * $n + 2))\n  echo $nth_centered_hexagonal_number",
    "    local n=$1\n    echo $(( n * (2 * n - 1) ))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    if [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        local n=$1\n        local n_minus_1=$((n - 1))\n        local n_minus_2=$((n - 2))\n        local n_minus_3=$((n - 3))\n        local n_minus_4=$((n - 4))\n        local n_minus_5=$((n - 5))\n        local n_minus_6=$((n - 6))\n        local n_minus_7=$((n - 7))\n        local n_minus_8=$((n - 8))\n        local n_minus_9=$((n - 9))\n        local n_minus_10=$((n - 10))\n        local n_minus_11=$((n - 11))\n        local n_minus_12=$((n - 12))\n        local n_minus_13=$((n - 13))\n        local n_minus_14=$((n - 14))\n        local n_minus_15=$((n - 15))\n        local n_minus_16=$((n - 16))\n        local n_minus_17=$((n - 17))\n        local n_minus_18=$((n - 18))\n        local n_minus_19=$((n - 19))\n        local n_minus_20=$((n - 20))\n        local n_minus_21=$((n - 21))\n        local n_minus_22=$((n - 22))\n        local n_minus_23=$((n - 23))\n        local n_minus_24=$((n - 24))\n        local n_minus_25=$((n - 25))\n        local n_minus_26=$((n - 26))\n        local n_minus_27=$((n - 27))\n        local n_minus_28=$((n - 28))\n        local n_minus_29=$((n - 29))\n        local n_minus_30=$((n - 30))\n        local n_minus_31=$((n - 31))\n        local n_minus_32=$((n - 32))\n        local n_minus_33=$((n - 33))\n        local n_minus_34=$((n - 34))\n        local n_minus_35=$((n",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    echo $((3 * $1 * $1 - 3 * $1 + 2))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "    local n=$1\n    local nth_centered_hexagonal_number=$((3*n*n-3*n+2))\n    echo $nth_centered_hexagonal_number",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "    local n=$1\n    echo $((n * (2 * n - 1)))",
    "  local n=$1\n  echo $((n*(2*n-1)))",
    "  local n=$1\n  echo $((n * (2 * n - 1)))",
    "  local n=$1\n  local nth_hexagonal_number=$((n * (2 * n - 1)))\n  echo $nth_hexagonal_number"
  ]
}
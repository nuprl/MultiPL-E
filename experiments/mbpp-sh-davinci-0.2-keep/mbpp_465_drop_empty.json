{
  "name": "mbpp_465_drop_empty",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to drop empty items from a given dictionary.\n#\n# $1 is a two column CSV in key,value order\ndrop_empty() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_465_drop_empty.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    drop_empty \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"c1,Red\\nc2,Green\\nc3,None\") = \"c1,Red\\nc2,Green\" ]]\n    [[ $(candidate \"c1,Red\\nc2,None\\nc3,None\") = \"c1,Red\" ]]\n    [[ $(candidate \"c1,None\\nc2,Green\\nc3,None\") = \"c2,Green\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "    local file=\"$1\"\n    local line\n    while read line; do\n        local key=$(echo \"$line\" | cut -d, -f1)\n        local value=$(echo \"$line\" | cut -d, -f2)\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$file\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=$1\n  local -a _keys=()\n  local _key\n  for _key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$_key]}\" ]]; then\n      _keys+=(\"$_key\")\n    fi\n  done\n  for _key in \"${_keys[@]}\"; do\n    unset _dict[$_key]\n  done",
    "  local csv=\"$1\"\n  local line\n  while read line; do\n    if [[ \"$line\" =~ ^[^,]+,$ ]]; then\n      continue\n    fi\n    echo \"$line\"\n  done < <(echo \"$csv\")",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n  local -r tmp5=\"$(mktemp)\"\n  local -r tmp6=\"$(mktemp)\"\n  local -r tmp7=\"$(mktemp)\"\n  local -r tmp8=\"$(mktemp)\"\n  local -r tmp9=\"$(mktemp)\"\n  local -r tmp10=\"$(mktemp)\"\n  local -r tmp11=\"$(mktemp)\"\n  local -r tmp12=\"$(mktemp)\"\n  local -r tmp13=\"$(mktemp)\"\n  local -r tmp14=\"$(mktemp)\"\n  local -r tmp15=\"$(mktemp)\"\n  local -r tmp16=\"$(mktemp)\"\n  local -r tmp17=\"$(mktemp)\"\n  local -r tmp18=\"$(mktemp)\"\n  local -r tmp19=\"$(mktemp)\"\n  local -r tmp20=\"$(mktemp)\"\n  local -r tmp21=\"$(mktemp)\"\n  local -r tmp22=\"$(mktemp)\"\n  local -r tmp23=\"$(mktemp)\"\n  local -r tmp24=\"$(mktemp)\"\n  local -r tmp25=\"$(mktemp)\"\n  local -r tmp26=\"$(mktemp)\"\n  local -r tmp27=\"$(mktemp)\"\n  local -r tmp28=\"$(mktemp)\"\n  local -r tmp29=\"$(mktemp)\"\n  local -r tmp30=\"$(mktemp)\"\n  local -r tmp31=\"$(mktemp)\"\n  local -r tmp32=\"$(mktemp)\"\n  local -r tmp33=\"$(mktemp)\"\n  local -r tmp34=\"$(mktemp)\"\n  local -r tmp35=\"$(mktemp)\"\n  local -r tmp36=\"$(mktemp)\"\n  local -r tmp37=\"$(mktemp)\"\n  local -r tmp38=\"$(mktemp)\"\n  local -r tmp39=\"",
    "    awk -F, '$2 != \"\"' \"$1\"",
    "    local csv=\"$1\"\n    local tmpfile=$(mktemp)\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\" >> \"$tmpfile\"\n        fi\n    done < \"$csv\"\n    cat \"$tmpfile\"\n    rm \"$tmpfile\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local -r input=\"$1\"\n  local -r output=\"$2\"\n  local -r tmpfile=\"$(mktemp)\"\n  local -r tmpfile2=\"$(mktemp)\"\n  local -r tmpfile3=\"$(mktemp)\"\n  local -r tmpfile4=\"$(mktemp)\"\n  local -r tmpfile5=\"$(mktemp)\"\n  local -r tmpfile6=\"$(mktemp)\"\n  local -r tmpfile7=\"$(mktemp)\"\n  local -r tmpfile8=\"$(mktemp)\"\n  local -r tmpfile9=\"$(mktemp)\"\n  local -r tmpfile10=\"$(mktemp)\"\n  local -r tmpfile11=\"$(mktemp)\"\n  local -r tmpfile12=\"$(mktemp)\"\n  local -r tmpfile13=\"$(mktemp)\"\n  local -r tmpfile14=\"$(mktemp)\"\n  local -r tmpfile15=\"$(mktemp)\"\n  local -r tmpfile16=\"$(mktemp)\"\n  local -r tmpfile17=\"$(mktemp)\"\n  local -r tmpfile18=\"$(mktemp)\"\n  local -r tmpfile19=\"$(mktemp)\"\n  local -r tmpfile20=\"$(mktemp)\"\n  local -r tmpfile21=\"$(mktemp)\"\n  local -r tmpfile22=\"$(mktemp)\"\n  local -r tmpfile23=\"$(mktemp)\"\n  local -r tmpfile24=\"$(mktemp)\"\n  local -r tmpfile25=\"$(mktemp)\"\n  local -r tmpfile26=\"$(mktemp)\"\n  local -r tmpfile27=\"$(mktemp)\"\n  local -r tmpfile28=\"$(mktemp)\"\n  local -r tmpfile29=\"$(mktemp)\"\n  local -r tmpfile30=\"$(mktemp)\"\n  local -r tmpfile31=\"$(mktemp)\"\n  local -r tmpfile32=\"$(mktemp)\"\n  local -r tmpfile33=\"$(mktemp)\"\n  local -r tmpfile34=\"$(mktemp)\"\n  local -r tmpfile35=\"$(mktemp)\"\n  local",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\""
  ]
}
{
  "name": "mbpp_465_drop_empty",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to drop empty items from a given dictionary.\n#\n# $1 is a two column CSV in key,value order\ndrop_empty() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_465_drop_empty.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    drop_empty \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"c1,Red\\nc2,Green\\nc3,None\") = \"c1,Red\\nc2,Green\" ]]\n    [[ $(candidate \"c1,Red\\nc2,None\\nc3,None\") = \"c1,Red\" ]]\n    [[ $(candidate \"c1,None\\nc2,Green\\nc3,None\") = \"c2,Green\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "    local file=\"$1\"\n    local line\n    while read line; do\n        local key=$(echo \"$line\" | cut -d, -f1)\n        local value=$(echo \"$line\" | cut -d, -f2)\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$file\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=$1\n  local -a _keys=()\n  local _key\n  for _key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$_key]}\" ]]; then\n      _keys+=(\"$_key\")\n    fi\n  done\n  for _key in \"${_keys[@]}\"; do\n    unset _dict[$_key]\n  done",
    "  local csv=\"$1\"\n  local line\n  while read line; do\n    if [[ \"$line\" =~ ^[^,]+,$ ]]; then\n      continue\n    fi\n    echo \"$line\"\n  done < <(echo \"$csv\")",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n  local -r tmp5=\"$(mktemp)\"\n  local -r tmp6=\"$(mktemp)\"\n  local -r tmp7=\"$(mktemp)\"\n  local -r tmp8=\"$(mktemp)\"\n  local -r tmp9=\"$(mktemp)\"\n  local -r tmp10=\"$(mktemp)\"\n  local -r tmp11=\"$(mktemp)\"\n  local -r tmp12=\"$(mktemp)\"\n  local -r tmp13=\"$(mktemp)\"\n  local -r tmp14=\"$(mktemp)\"\n  local -r tmp15=\"$(mktemp)\"\n  local -r tmp16=\"$(mktemp)\"\n  local -r tmp17=\"$(mktemp)\"\n  local -r tmp18=\"$(mktemp)\"\n  local -r tmp19=\"$(mktemp)\"\n  local -r tmp20=\"$(mktemp)\"\n  local -r tmp21=\"$(mktemp)\"\n  local -r tmp22=\"$(mktemp)\"\n  local -r tmp23=\"$(mktemp)\"\n  local -r tmp24=\"$(mktemp)\"\n  local -r tmp25=\"$(mktemp)\"\n  local -r tmp26=\"$(mktemp)\"\n  local -r tmp27=\"$(mktemp)\"\n  local -r tmp28=\"$(mktemp)\"\n  local -r tmp29=\"$(mktemp)\"\n  local -r tmp30=\"$(mktemp)\"\n  local -r tmp31=\"$(mktemp)\"\n  local -r tmp32=\"$(mktemp)\"\n  local -r tmp33=\"$(mktemp)\"\n  local -r tmp34=\"$(mktemp)\"\n  local -r tmp35=\"$(mktemp)\"\n  local -r tmp36=\"$(mktemp)\"\n  local -r tmp37=\"$(mktemp)\"\n  local -r tmp38=\"$(mktemp)\"\n  local -r tmp39=\"",
    "    awk -F, '$2 != \"\"' \"$1\"",
    "    local csv=\"$1\"\n    local tmpfile=$(mktemp)\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\" >> \"$tmpfile\"\n        fi\n    done < \"$csv\"\n    cat \"$tmpfile\"\n    rm \"$tmpfile\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local -r input=\"$1\"\n  local -r output=\"$2\"\n  local -r tmpfile=\"$(mktemp)\"\n  local -r tmpfile2=\"$(mktemp)\"\n  local -r tmpfile3=\"$(mktemp)\"\n  local -r tmpfile4=\"$(mktemp)\"\n  local -r tmpfile5=\"$(mktemp)\"\n  local -r tmpfile6=\"$(mktemp)\"\n  local -r tmpfile7=\"$(mktemp)\"\n  local -r tmpfile8=\"$(mktemp)\"\n  local -r tmpfile9=\"$(mktemp)\"\n  local -r tmpfile10=\"$(mktemp)\"\n  local -r tmpfile11=\"$(mktemp)\"\n  local -r tmpfile12=\"$(mktemp)\"\n  local -r tmpfile13=\"$(mktemp)\"\n  local -r tmpfile14=\"$(mktemp)\"\n  local -r tmpfile15=\"$(mktemp)\"\n  local -r tmpfile16=\"$(mktemp)\"\n  local -r tmpfile17=\"$(mktemp)\"\n  local -r tmpfile18=\"$(mktemp)\"\n  local -r tmpfile19=\"$(mktemp)\"\n  local -r tmpfile20=\"$(mktemp)\"\n  local -r tmpfile21=\"$(mktemp)\"\n  local -r tmpfile22=\"$(mktemp)\"\n  local -r tmpfile23=\"$(mktemp)\"\n  local -r tmpfile24=\"$(mktemp)\"\n  local -r tmpfile25=\"$(mktemp)\"\n  local -r tmpfile26=\"$(mktemp)\"\n  local -r tmpfile27=\"$(mktemp)\"\n  local -r tmpfile28=\"$(mktemp)\"\n  local -r tmpfile29=\"$(mktemp)\"\n  local -r tmpfile30=\"$(mktemp)\"\n  local -r tmpfile31=\"$(mktemp)\"\n  local -r tmpfile32=\"$(mktemp)\"\n  local -r tmpfile33=\"$(mktemp)\"\n  local -r tmpfile34=\"$(mktemp)\"\n  local -r tmpfile35=\"$(mktemp)\"\n  local",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local input=\"$1\"\n    local output=\"$2\"\n    while read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\" >> \"$output\"\n        fi\n    done < \"$input\"",
    "  local file=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -z \"$value\" ]]; then\n      continue\n    fi\n    echo \"$key,$value\"\n  done < \"$file\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local CSV=\"$1\"\n  local TMP=\"$(mktemp)\"\n  local KEY\n  local VALUE\n  while IFS=, read -r KEY VALUE; do\n    if [[ -n \"$VALUE\" ]]; then\n      echo \"$KEY,$VALUE\" >> \"$TMP\"\n    fi\n  done < \"$CSV\"\n  cat \"$TMP\"\n  rm \"$TMP\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=$1\n  for key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$key]}\" ]]; then\n      unset _dict[$key]\n    fi\n  done",
    "  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ \"$value\" != \"\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local -r csv=\"$1\"\n    local -r tmp=\"$(mktemp)\"\n    local -r tmp2=\"$(mktemp)\"\n    local -r tmp3=\"$(mktemp)\"\n\n    # Split the CSV into two files, one with keys, one with values\n    cut -d, -f1 \"$csv\" > \"$tmp\"\n    cut -d, -f2 \"$csv\" > \"$tmp2\"\n\n    # Remove empty values\n    grep -v '^$' \"$tmp2\" > \"$tmp3\"\n\n    # Join the two files back together\n    paste -d, \"$tmp\" \"$tmp3\"\n\n    rm \"$tmp\" \"$tmp2\" \"$tmp3\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local input=\"$1\"\n    local output=\"$2\"\n    local tmpfile=\"$(mktemp)\"\n    local key\n    local value\n    while read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\" >> \"$tmpfile\"\n        fi\n    done < \"$input\"\n    mv \"$tmpfile\" \"$output\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done <<< \"$csv\"",
    "  while read -r line; do\n    if [[ -n \"$line\" ]]; then\n      echo \"$line\"\n    fi\n  done < <(echo \"$1\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local input=\"$1\"\n    local output=\"$2\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\" >> \"$output\"\n        fi\n    done < \"$input\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local file=\"$1\"\n    local tmpfile=\"$(mktemp)\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmpfile\"\n        fi\n    done < \"$file\"\n    mv \"$tmpfile\" \"$file\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n $value ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local key\n  local value\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\" >> \"$tmp\"\n    fi\n  done < \"$csv\"\n  cat \"$tmp\"\n  rm \"$tmp\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n $value ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [[ -n $value ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  awk -F, '$2 != \"\"' \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local tmp=\"$(mktemp)\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmp\"\n        fi\n    done < \"$csv\"\n    cat \"$tmp\"\n    rm \"$tmp\"",
    "  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\" >> \"$tmp\"\n    fi\n  done < \"$csv\"\n  cat \"$tmp\"\n  rm \"$tmp\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n  local -r tmp5=\"$(mktemp)\"\n  local -r tmp6=\"$(mktemp)\"\n  local -r tmp7=\"$(mktemp)\"\n  local -r tmp8=\"$(mktemp)\"\n  local -r tmp9=\"$(mktemp)\"\n  local -r tmp10=\"$(mktemp)\"\n  local -r tmp11=\"$(mktemp)\"\n  local -r tmp12=\"$(mktemp)\"\n  local -r tmp13=\"$(mktemp)\"\n  local -r tmp14=\"$(mktemp)\"\n  local -r tmp15=\"$(mktemp)\"\n  local -r tmp16=\"$(mktemp)\"\n  local -r tmp17=\"$(mktemp)\"\n  local -r tmp18=\"$(mktemp)\"\n  local -r tmp19=\"$(mktemp)\"\n  local -r tmp20=\"$(mktemp)\"\n  local -r tmp21=\"$(mktemp)\"\n  local -r tmp22=\"$(mktemp)\"\n  local -r tmp23=\"$(mktemp)\"\n  local -r tmp24=\"$(mktemp)\"\n  local -r tmp25=\"$(mktemp)\"\n  local -r tmp26=\"$(mktemp)\"\n  local -r tmp27=\"$(mktemp)\"\n  local -r tmp28=\"$(mktemp)\"\n  local -r tmp29=\"$(mktemp)\"\n  local -r tmp30=\"$(mktemp)\"\n  local -r tmp31=\"$(mktemp)\"\n  local -r tmp32=\"$(mktemp)\"\n  local -r tmp33=\"$(mktemp)\"\n  local -r tmp34=\"$(mktemp)\"\n  local -r tmp35=\"$(mktemp)\"\n  local -r tmp36=\"$(mktemp)\"\n  local -r tmp37=\"$(mktemp)\"\n  local -r tmp38=\"$(mktemp)\"\n  local -r tmp39=\"",
    "  local -n dict=$1\n  local -a keys=()\n  local -a values=()\n  local key\n  local value\n  for key in \"${!dict[@]}\"; do\n    value=${dict[$key]}\n    if [[ -n $value ]]; then\n      keys+=(\"$key\")\n      values+=(\"$value\")\n    fi\n  done\n  dict=()\n  for ((i=0; i<${#keys[@]}; i++)); do\n    dict[${keys[$i]}]=${values[$i]}\n  done",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$tmp\"\n    fi\n  done < \"$csv\"\n  cat \"$tmp\"\n  rm \"$tmp\"",
    "  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "    local csv=\"$1\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "    local input=\"$1\"\n    local output=\"$2\"\n    local tmpfile=\"$(mktemp)\"\n    local key\n    local value\n\n    while read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmpfile\"\n        fi\n    done < \"$input\"\n\n    mv \"$tmpfile\" \"$output\"",
    "  awk -F, '$2 != \"\"' \"$1\"",
    "    local input=\"$1\"\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$input\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done <<< \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    [[ -z \"$value\" ]] || echo \"$key,$value\"\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  awk -F, '$2 != \"\"' $1",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=$1\n  for key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$key]}\" ]]; then\n      unset _dict[$key]\n    fi\n  done",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read key value; do\n    if [ -z \"$value\" ]; then\n      continue\n    fi\n    echo \"$key,$value\"\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done <<< \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    awk -F, '{if ($2 != \"\") print $1\",\"$2}' $1",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < <(echo \"$csv\")",
    "  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local -n _dict=$1\n    for key in \"${!_dict[@]}\"; do\n        if [[ -z \"${_dict[$key]}\" ]]; then\n            unset _dict[$key]\n        fi\n    done",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local IFS=','\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local file=\"$1\"\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$file\"",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$tmp\"\n    fi\n  done < \"$csv\"\n  cat \"$tmp\"\n  rm \"$tmp\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local file=\"$1\"\n  local tmp=\"$(mktemp)\"\n  awk -F, '$2 != \"\"' \"$file\" > \"$tmp\"\n  mv \"$tmp\" \"$file\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local IFS=\",\"\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=\"$1\"\n  for key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$key]}\" ]]; then\n      unset _dict[$key]\n    fi\n  done",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=\"$1\"\n  for key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$key]}\" ]]; then\n      unset _dict[$key]\n    fi\n  done",
    "  awk -F, '$2 != \"\" { print $0 }' $1",
    "    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "    local -n dict=$1\n    for key in \"${!dict[@]}\"; do\n        if [ -z \"${dict[$key]}\" ]; then\n            unset dict[$key]\n        fi\n    done",
    "    local file=\"$1\"\n    local tmp=\"$(mktemp)\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmp\"\n        fi\n    done < \"$file\"\n    mv \"$tmp\" \"$file\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  while read -r line; do\n    if [[ \"$line\" =~ ^[^,]+,$ ]]; then\n      continue\n    fi\n    echo \"$line\"\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$tmp\"\n    fi\n  done < \"$csv\"\n  cat \"$tmp\"\n  rm \"$tmp\"",
    "    local -A dict\n    local key value\n    while IFS=, read key value; do\n        [[ -z \"$value\" ]] && continue\n        dict[$key]=$value\n    done < <(echo \"$1\")\n    for key in \"${!dict[@]}\"; do\n        echo \"$key,${dict[$key]}\"\n    done",
    "    local csv=\"$1\"\n    local tmp=\"$(mktemp)\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmp\"\n        fi\n    done < \"$csv\"\n    cat \"$tmp\"\n    rm \"$tmp\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n $value ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n  local -r tmp5=\"$(mktemp)\"\n  local -r tmp6=\"$(mktemp)\"\n  local -r tmp7=\"$(mktemp)\"\n  local -r tmp8=\"$(mktemp)\"\n  local -r tmp9=\"$(mktemp)\"\n  local -r tmp10=\"$(mktemp)\"\n  local -r tmp11=\"$(mktemp)\"\n  local -r tmp12=\"$(mktemp)\"\n  local -r tmp13=\"$(mktemp)\"\n  local -r tmp14=\"$(mktemp)\"\n  local -r tmp15=\"$(mktemp)\"\n  local -r tmp16=\"$(mktemp)\"\n  local -r tmp17=\"$(mktemp)\"\n  local -r tmp18=\"$(mktemp)\"\n  local -r tmp19=\"$(mktemp)\"\n  local -r tmp20=\"$(mktemp)\"\n  local -r tmp21=\"$(mktemp)\"\n  local -r tmp22=\"$(mktemp)\"\n  local -r tmp23=\"$(mktemp)\"\n  local -r tmp24=\"$(mktemp)\"\n  local -r tmp25=\"$(mktemp)\"\n  local -r tmp26=\"$(mktemp)\"\n  local -r tmp27=\"$(mktemp)\"\n  local -r tmp28=\"$(mktemp)\"\n  local -r tmp29=\"$(mktemp)\"\n  local -r tmp30=\"$(mktemp)\"\n  local -r tmp31=\"$(mktemp)\"\n  local -r tmp32=\"$(mktemp)\"\n  local -r tmp33=\"$(mktemp)\"\n  local -r tmp34=\"$(mktemp)\"\n  local -r tmp35=\"$(mktemp)\"\n  local -r tmp36=\"$(mktemp)\"\n  local -r tmp37=\"$(mktemp)\"\n  local -r tmp38=\"$(mktemp)\"\n  local -r tmp39=\"",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n  local -r tmp5=\"$(mktemp)\"\n  local -r tmp6=\"$(mktemp)\"\n  local -r tmp7=\"$(mktemp)\"\n  local -r tmp8=\"$(mktemp)\"\n  local -r tmp9=\"$(mktemp)\"\n  local -r tmp10=\"$(mktemp)\"\n  local -r tmp11=\"$(mktemp)\"\n  local -r tmp12=\"$(mktemp)\"\n  local -r tmp13=\"$(mktemp)\"\n  local -r tmp14=\"$(mktemp)\"\n  local -r tmp15=\"$(mktemp)\"\n  local -r tmp16=\"$(mktemp)\"\n  local -r tmp17=\"$(mktemp)\"\n  local -r tmp18=\"$(mktemp)\"\n  local -r tmp19=\"$(mktemp)\"\n  local -r tmp20=\"$(mktemp)\"\n  local -r tmp21=\"$(mktemp)\"\n  local -r tmp22=\"$(mktemp)\"\n  local -r tmp23=\"$(mktemp)\"\n  local -r tmp24=\"$(mktemp)\"\n  local -r tmp25=\"$(mktemp)\"\n  local -r tmp26=\"$(mktemp)\"\n  local -r tmp27=\"$(mktemp)\"\n  local -r tmp28=\"$(mktemp)\"\n  local -r tmp29=\"$(mktemp)\"\n  local -r tmp30=\"$(mktemp)\"\n  local -r tmp31=\"$(mktemp)\"\n  local -r tmp32=\"$(mktemp)\"\n  local -r tmp33=\"$(mktemp)\"\n  local -r tmp34=\"$(mktemp)\"\n  local -r tmp35=\"$(mktemp)\"\n  local -r tmp36=\"$(mktemp)\"\n  local -r tmp37=\"$(mktemp)\"\n  local -r tmp38=\"$(mktemp)\"\n  local -r tmp39=\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done <<< \"$csv\"",
    "    local -r csv=\"$1\"\n    local -r tmp=\"$(mktemp)\"\n    local -r tmp2=\"$(mktemp)\"\n    local -r tmp3=\"$(mktemp)\"\n    local -r tmp4=\"$(mktemp)\"\n    local -r tmp5=\"$(mktemp)\"\n    local -r tmp6=\"$(mktemp)\"\n    local -r tmp7=\"$(mktemp)\"\n    local -r tmp8=\"$(mktemp)\"\n    local -r tmp9=\"$(mktemp)\"\n    local -r tmp10=\"$(mktemp)\"\n    local -r tmp11=\"$(mktemp)\"\n    local -r tmp12=\"$(mktemp)\"\n    local -r tmp13=\"$(mktemp)\"\n    local -r tmp14=\"$(mktemp)\"\n    local -r tmp15=\"$(mktemp)\"\n    local -r tmp16=\"$(mktemp)\"\n    local -r tmp17=\"$(mktemp)\"\n    local -r tmp18=\"$(mktemp)\"\n    local -r tmp19=\"$(mktemp)\"\n    local -r tmp20=\"$(mktemp)\"\n    local -r tmp21=\"$(mktemp)\"\n    local -r tmp22=\"$(mktemp)\"\n    local -r tmp23=\"$(mktemp)\"\n    local -r tmp24=\"$(mktemp)\"\n    local -r tmp25=\"$(mktemp)\"\n    local -r tmp26=\"$(mktemp)\"\n    local -r tmp27=\"$(mktemp)\"\n    local -r tmp28=\"$(mktemp)\"\n    local -r tmp29=\"$(mktemp)\"\n    local -r tmp30=\"$(mktemp)\"\n    local -r tmp31=\"$(mktemp)\"\n    local -r tmp32=\"$(mktemp)\"\n    local -r tmp33=\"$(mktemp)\"\n    local -r tmp34=\"$(mktemp)\"\n    local -r tmp35=\"$(mktemp)\"\n    local -r tmp36=\"$(mktemp)\"\n    local -r tmp37=\"$(mktemp)\"\n    local -r tmp38=\"$(mktemp)\"\n    local -r tmp39=\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=$1\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    while read key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$1\"",
    "  local -n dict=$1\n  for key in \"${!dict[@]}\"; do\n    if [[ -z \"${dict[$key]}\" ]]; then\n      unset dict[$key]\n    fi\n  done",
    "  awk -F, '$2 != \"\"' \"$1\"",
    "  local csv=\"$1\"\n  local tmpfile=\"$(mktemp)\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$tmpfile\"\n    fi\n  done < \"$csv\"\n  cat \"$tmpfile\"\n  rm \"$tmpfile\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local -r csv=\"$1\"\n  local -r tmp=\"$(mktemp)\"\n  local -r tmp2=\"$(mktemp)\"\n  local -r tmp3=\"$(mktemp)\"\n  local -r tmp4=\"$(mktemp)\"\n\n  # Extract the keys\n  cut -d',' -f1 \"$csv\" > \"$tmp\"\n\n  # Extract the values\n  cut -d',' -f2 \"$csv\" > \"$tmp2\"\n\n  # Remove empty values\n  grep -v '^$' \"$tmp2\" > \"$tmp3\"\n\n  # Remove empty keys\n  grep -v '^$' \"$tmp\" > \"$tmp4\"\n\n  # Join the two files\n  paste -d',' \"$tmp4\" \"$tmp3\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"${key},${value}\"\n    fi\n  done < <(echo \"$csv\")",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  awk -F, '$2 != \"\"' $1",
    "  local input=\"$1\"\n  local output=\"$2\"\n  local key\n  local value\n  while read key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$output\"\n    fi\n  done < \"$input\"",
    "    local csv=\"$1\"\n    local tmp=\"$(mktemp)\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmp\"\n        fi\n    done < \"$csv\"\n    cat \"$tmp\"\n    rm \"$tmp\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local input=\"$1\"\n  local output=\"$2\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$output\"\n    fi\n  done < \"$input\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n $value ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local input=\"$1\"\n  local output=\"$2\"\n  local tmpfile=\"$(mktemp)\"\n  local key\n  local value\n\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\" >> \"$tmpfile\"\n    fi\n  done < \"$input\"\n\n  mv \"$tmpfile\" \"$output\"",
    "  awk -F, '$2 != \"\"' \"$1\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while read key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  local -a keys\n  local -a values\n  local -A dict\n  local -A empty\n  local -A nonempty\n  local -A result\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n ",
    "  cat \"$1\" | awk -F, '$2 != \"\"'",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local -r csv=\"$1\"\n    local -r tmp=\"$(mktemp)\"\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\" >> \"$tmp\"\n        fi\n    done < \"$csv\"\n    mv \"$tmp\" \"$csv\"",
    "    local IFS=,\n    while read key value; do\n        if [[ -n $value ]]; then\n            echo \"$key,$value\"\n        fi\n    done < $1",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local input=\"$1\"\n  local output=\"$2\"\n  local tmpfile=\"$(mktemp)\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\" >> \"$tmpfile\"\n    fi\n  done < \"$input\"\n  mv \"$tmpfile\" \"$output\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [ -n \"$value\" ]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  awk -F, '$2 != \"\" { print $1 \",\" $2 }' $1",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local CSV=\"$1\"\n  local KEY\n  local VALUE\n  while IFS=, read -r KEY VALUE; do\n    if [[ -n \"$VALUE\" ]]; then\n      echo \"$KEY,$VALUE\"\n    fi\n  done < \"$CSV\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local csv=$1\n    local awk_script='\n        BEGIN {\n            FS=\",\";\n            OFS=\",\";\n        }\n        {\n            if ($2 != \"\") {\n                print $0;\n            }\n        }\n    '\n    echo \"$csv\" | awk \"$awk_script\"",
    "  local csv=$1\n  local key\n  local value\n  while read -r key value; do\n    if [[ -n $value ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$csv\")",
    "    local csv=\"$1\"\n    local key\n    local value\n    while read key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  awk -F, '$2 != \"\"' $1",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "    local csv=\"$1\"\n    local key\n    local value\n    while IFS=, read -r key value; do\n        if [[ -n \"$value\" ]]; then\n            echo \"$key,$value\"\n        fi\n    done < \"$csv\"",
    "  local csv=\"$1\"\n  local key\n  local value\n  while IFS=, read -r key value; do\n    if [[ -n \"$value\" ]]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$csv\"",
    "  local -n _dict=\"$1\"\n  for key in \"${!_dict[@]}\"; do\n    if [[ -z \"${_dict[$key]}\" ]]; then\n      unset _dict[$key]\n    fi\n  done",
    "  while read -r key value; do\n    if [[ -n $value ]]; then\n      echo \"$key,$value\"\n    fi\n  done < <(echo \"$1\")",
    "  while read -r key value; do\n    if [ -n \"$value\" ]; then\n      echo \"$key,$value\"\n    fi\n  done < \"$1\""
  ]
}
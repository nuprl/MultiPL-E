{
  "name": "mbpp_733_find_first_occurrence",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the index of the first occurrence of a given number in a sorted array.\n#\n# $1 is a space-separated list\n# $2 is an integer\nfind_first_occurrence() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_733_find_first_occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_first_occurrence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 5 5 5 6 6 8 9 9 9\" \"5\") = \"1\" ]]\n    [[ $(candidate \"2 3 5 5 6 6 8 9 9 9\" \"5\") = \"2\" ]]\n    [[ $(candidate \"2 4 1 5 6 6 8 9 9 9\" \"6\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local target=\"$2\"\n    local -i low=0\n    local -i high=$(echo \"$list\" | wc -w)\n    local -i mid\n    local -i result=-1\n    while [ $low -le $high ]; do\n        mid=$(((low + high) / 2))\n        if [ $target -eq $mid ]; then\n            result=$mid\n            high=$((mid - 1))\n        elif [ $target -lt $mid ]; then\n            high=$((mid - 1))\n        else\n            low=$((mid + 1))\n        fi\n    done\n    echo $result",
    "  local -a array=(\"$@\")\n  local -i first=0\n  local -i last=${#array[@]}\n  local -i middle=0\n  local -i index=-1\n\n  while [ $first -lt $last ]; do\n    middle=$(( (first + last) / 2 ))\n    if [ ${array[$middle]} -lt $2 ]; then\n      first=$(( middle + 1 ))\n    elif [ ${array[$middle]} -gt $2 ]; then\n      last=$(( middle - 1 ))\n    else\n      index=$middle\n      last=$(( middle - 1 ))\n    fi\n  done\n\n  echo $index",
    "    local list=$1\n    local number=$2\n    local index=0\n    local found=0\n\n    for i in $list; do\n        if [ $i -eq $number ]; then\n            found=1\n            break\n        fi\n        index=$((index + 1))\n    done\n\n    if [ $found -eq 1 ]; then\n        echo $index\n    else\n        echo -1\n    fi",
    "    local -a array=($1)\n    local target=$2\n    local min=0\n    local max=${#array[@]}\n    local mid=0\n    local found=0\n    while [[ $min -lt $max ]]; do\n        mid=$((($min + $max) / 2))\n        if [[ ${array[$mid]} -eq $target ]]; then\n            found=1\n            max=$mid\n        elif [[ ${array[$mid]} -lt $target ]]; then\n            min=$((mid + 1))\n        else\n            max=$mid\n        fi\n    done\n    if [[ $found -eq 1 ]]; then\n        echo $min\n    else\n        echo -1\n    fi",
    "    local -a array=(\"$@\")\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i middle=0\n    local -i target=${array[-1]}\n\n    while (( left < right )); do\n        middle=$(( (left + right) / 2 ))\n        if (( array[middle] < target )); then\n            left=$(( middle + 1 ))\n        else\n            right=$(( middle ))\n        fi\n    done\n\n    echo $left",
    "  local list=$1\n  local number=$2\n  local index=0\n\n  for item in $list\n  do\n    if [ $item -eq $number ]; then\n      echo $index\n      return\n    fi\n    index=$((index+1))\n  done",
    "  local list=$1\n  local number=$2\n  local index=0\n  for i in $list; do\n    if [ $i -eq $number ]; then\n      echo $index\n      return\n    fi\n    index=$((index+1))\n  done\n  echo -1",
    "    local -a array=($1)\n    local target=$2\n    local lower=0\n    local upper=${#array[@]}\n    local middle=0\n    local index=-1\n\n    while [ $lower -lt $upper ]; do\n        middle=$(((lower + upper) / 2))\n        if [ ${array[$middle]} -eq $target ]; then\n            index=$middle\n            upper=$middle\n        elif [ ${array[$middle]} -lt $target ]; then\n            lower=$((middle + 1))\n        else\n            upper=$middle\n        fi\n    done\n\n    echo $index",
    "    local -a array=($1)\n    local target=$2\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid=0\n\n    while [[ low -lt high ]]; do\n        mid=$(( (low + high) / 2 ))\n        if [[ ${array[mid]} -lt $target ]]; then\n            low=$(( mid + 1 ))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "  local list=\"$1\"\n  local target=\"$2\"\n  local -i left=0\n  local -i right=$((${#list} - 1))\n  local -i mid\n  local -i result=-1\n  while [ $left -le $right ]; do\n    mid=$((($left + $right) / 2))\n    if [ ${list:$mid:1} -eq $target ]; then\n      result=$mid\n      right=$((mid - 1))\n    elif [ ${list:$mid:1} -lt $target ]; then\n      left=$((mid + 1))\n    else\n      right=$((mid - 1))\n    fi\n  done\n  echo $result",
    "  local -a array=(\"${@:1:$#-1}\")\n  local target=$(echo \"${@: -1}\")\n  local -i low=0\n  local -i high=$(( ${#array[@]} - 1 ))\n  local -i mid\n  while [[ low -le high ]]; do\n    mid=$(( (low + high) / 2 ))\n    if [[ ${array[mid]} -eq $target ]]; then\n      while [[ ${array[mid]} -eq $target ]]; do\n        (( mid-- ))\n      done\n      echo $(( mid + 1 ))\n      return\n    elif [[ ${array[mid]} -lt $target ]]; then\n      low=$(( mid + 1 ))\n    else\n      high=$(( mid - 1 ))\n    fi\n  done\n  echo -1",
    "  local list=$1\n  local number=$2\n  local index=0\n  local found=0\n  for element in $list; do\n    if [ $element -eq $number ]; then\n      found=1\n      break\n    fi\n    index=$((index + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo $index\n  else\n    echo -1\n  fi",
    "    local -a array=($1)\n    local target=$2\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid\n    local -i result=-1\n    while [ $low -lt $high ]; do\n        mid=$(((low + high) / 2))\n        if [ ${array[$mid]} -lt $target ]; then\n            low=$((mid + 1))\n        elif [ ${array[$mid]} -gt $target ]; then\n            high=$((mid - 1))\n        else\n            result=$mid\n            high=$((mid - 1))\n        fi\n    done\n    echo $result",
    "    local -a array=($1)\n    local target=$2\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid=0\n    local -i result=-1\n\n    while [ $low -lt $high ]; do\n        mid=$(((low + high) / 2))\n        if [ ${array[$mid]} -lt $target ]; then\n            low=$((mid + 1))\n        elif [ ${array[$mid]} -gt $target ]; then\n            high=$((mid - 1))\n        else\n            result=$mid\n            high=$((mid - 1))\n        fi\n    done\n\n    echo $result",
    "  local -a array=($1)\n  local target=$2\n  local low=0\n  local high=${#array[@]}\n  local mid=0\n  local result=-1\n\n  while [ $low -le $high ]; do\n    mid=$((low + (high - low) / 2))\n    if [ ${array[$mid]} -eq $target ]; then\n      result=$mid\n      high=$((mid - 1))\n    elif [ ${array[$mid]} -lt $target ]; then\n      low=$((mid + 1))\n    else\n      high=$((mid - 1))\n    fi\n  done\n\n  echo $result",
    "  local list=$1\n  local target=$2\n  local index=0\n  for i in $list; do\n    if [ $i -eq $target ]; then\n      echo $index\n      return\n    fi\n    index=$((index+1))\n  done\n  echo -1",
    "    local -a array=(\"${@:1:$#-1}\")\n    local target=$(echo \"${@: -1}\")\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid=0\n    local -i result=-1\n\n    while [ $low -le $high ]; do\n        mid=$(( (low + high) / 2 ))\n        if [ ${array[$mid]} -eq $target ]; then\n            result=$mid\n            high=$(( mid - 1 ))\n        elif [ ${array[$mid]} -lt $target ]; then\n            low=$(( mid + 1 ))\n        else\n            high=$(( mid - 1 ))\n        fi\n    done\n\n    echo $result",
    "    local -n arr=$1\n    local target=$2\n    local left=0\n    local right=${#arr[@]}\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${arr[$mid]} -eq $target ]]; then\n            while [[ $mid -gt 0 ]] && [[ ${arr[$mid - 1]} -eq $target ]]; do\n                mid=$((mid - 1))\n            done\n            echo $mid\n            return\n        elif [[ ${arr[$mid]} -gt $target ]]; then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid\n    while (( low < high )); do\n        mid=$(( (low + high) / 2 ))\n        if (( array[mid] < target )); then\n            low=$(( mid + 1 ))\n        else\n            high=$mid\n        fi\n    done\n    if (( array[low] == target )); then\n        echo $low\n    else\n        echo -1\n    fi",
    "  local list=$1\n  local num=$2\n  local -a arr=($list)\n  local len=${#arr[@]}\n  local i=0\n  local mid=0\n  local result=-1\n  while [ $i -lt $len ]; do\n    mid=$((i + len))\n    mid=$((mid / 2))\n    if [ ${arr[$mid]} -eq $num ]; then\n      result=$mid\n      len=$mid\n    elif [ ${arr[$mid]} -lt $num ]; then\n      i=$((mid + 1))\n    else\n      len=$((mid - 1))\n    fi\n  done\n  echo $result"
  ]
}
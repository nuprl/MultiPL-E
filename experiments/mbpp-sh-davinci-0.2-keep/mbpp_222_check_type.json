{
  "name": "mbpp_222_check_type",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check if all the elements in tuple have same data type or not.\n#\n# $1 is a $Any\ncheck_type() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    check_type \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 6 7 3 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 2 4\") = \"false\" ]]\n    [[ $(candidate \"3 2 1 4 5\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local type=\"$(type -t $1)\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t $arg)\" != \"$type\" ]] && return 1\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    echo $type",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=$(typeof ${_tuple[0]})\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$(typeof $i)\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=$(typeof $1)\n  for i in \"${@:2}\"; do\n    if [[ $(typeof $i) != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local -n _tuple=$1\n  local _type=${_tuple[0]}\n  for _elem in \"${_tuple[@]}\"; do\n    if [[ \"${_elem}\" != \"${_type}\" ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local -n arr=\"$1\"\n    local type=\"$(typeof \"${arr[0]}\")\"\n    for i in \"${arr[@]}\"; do\n        if [[ \"$(typeof \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    if [[ \"$type\" == \"function\" ]]; then\n        echo \"function\"\n    elif [[ \"$type\" == \"file\" ]]; then\n        echo \"file\"\n    elif [[ \"$type\" == \"alias\" ]]; then\n        echo \"alias\"\n    elif [[ \"$type\" == \"builtin\" ]]; then\n        echo \"builtin\"\n    elif [[ \"$type\" == \"keyword\" ]]; then\n        echo \"keyword\"\n    elif [[ \"$type\" == \"integer\" ]]; then\n        echo \"integer\"\n    elif [[ \"$type\" == \"array\" ]]; then\n        echo \"array\"\n    elif [[ \"$type\" == \"string\" ]]; then\n        echo \"string\"\n    else\n        echo \"unknown\"\n    fi",
    "  local type=\"$(type -t $1)\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t $arg)\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local type=$(type -t $1)\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]; do\n        if [ \"$type\" != \"$(type -t ${tuple[$i]})\" ]; then\n            return 1\n        fi\n        ((i++))\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local types=()\n    for i in ${@:2}; do\n        types+=($(type -t $i))\n    done\n    local unique_types=$(echo \"${types[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    if [[ ${#unique_types[@]} -eq 1 ]]; then\n        echo \"All elements are of type $type\"\n    else\n        echo \"Not all elements are of type $type\"\n    fi",
    "  local type=\"$(type -t $1)\"\n  local i\n  for i in \"${@:2}\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=$(type -t $1)\n  shift\n  for i in $@; do\n    if [[ $(type -t $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg; do\n        [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n    done\n    return 0",
    "    local type=\"$(typeof $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(typeof $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  local result=0\n  for i in $@; do\n    if [ $(type -t $i) != $type ]; then\n      result=1\n      break\n    fi\n  done\n  return $result",
    "    local type=$(type -t \"$1\")\n    for i in \"${@:2}\"; do\n        if [[ $(type -t \"$i\") != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]\n    do\n        if [ $(type -t ${tuple[$i]}) != $type ]\n        then\n            echo \"False\"\n            return\n        fi\n        ((i++))\n    done\n    echo \"True\"",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in ${_tuple[@]}; do\n        if [[ $i != $_type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t \"$1\")\"\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"",
    "    local type=$(type -t $1)\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(typeof \"$1\")\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(typeof \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$type\" != \"$(type -t $i)\" ]]; then\n            return 1\n        fi\n    done",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for item in \"$@\"; do\n        if [[ \"$(type -t \"$item\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $@; do\n        if [[ $(typeof $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    if [ \"$type\" == \"array\" ]; then\n        local type=\"$(type -t ${1[0]})\"\n        for i in \"${!1[@]}\"; do\n            if [ \"$type\" != \"$(type -t ${1[$i]})\" ]; then\n                return 1\n            fi\n        done\n    fi\n    return 0",
    "  local type=\"$(type -t $1)\"\n  local type_list=()\n  for i in \"${@:2}\"; do\n    type_list+=($(type -t $i))\n  done\n  for i in \"${type_list[@]}\"; do\n    if [[ $i != $type ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "  local type=$(type -t $1)\n  for i in $@; do\n    if [[ $(type -t $i) != $type ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"",
    "    local type=\"$(type -t $1)\"\n    local count=0\n    for i in \"$@\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n        ((count++))\n    done\n    if [[ $count -gt 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local type=\"$(type -t $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        [[ \"$(type -t \"$i\")\" != \"$type\" ]] && return 1\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]; do\n        if [ \"$type\" != \"$(type -t ${tuple[$i]})\" ]; then\n            echo \"False\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    shift\n    for i in $@; do\n        if [[ $type != $(type -t $i) ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in $@; do\n        type_list+=($(type -t $i))\n    done\n    for i in ${type_list[@]}; do\n        if [[ $i != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    local type_list=(\"$@\")\n    for i in \"${type_list[@]}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]; do\n        if [ \"$(type -t ${tuple[$i]})\" != \"$type\" ]; then\n            echo \"False\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"True\"",
    "    local -n arr=$1\n    local type=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i != $type ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"",
    "    local type=$(type -t $1)\n    local -a arr=(\"${!2}\")\n    for i in \"${arr[@]}\"; do\n        if [[ $(type -t $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in $@; do\n        type_list+=($(type -t $i))\n    done\n    if [[ ${type_list[@]} =~ $type ]]; then\n        echo \"All elements have same type\"\n    else\n        echo \"Elements have different types\"\n    fi",
    "    local type=$(type -t $1)\n    shift\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $@; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n arr=$1\n    local type=${arr[0]}\n    for i in ${arr[@]}; do\n        if [[ \"$i\" != \"$type\" ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        [[ \"$(type -t \"$i\")\" != \"$type\" ]] && return 1\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local -n _tuple=$1\n    local _type=$(typeof ${_tuple[0]})\n    for _elem in \"${_tuple[@]}\"; do\n        if [[ $(typeof ${_elem}) != $_type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    for i in \"${@:2}\"; do\n        if [[ $(type -t $i) != $type ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"",
    "  local type=\"$(type -t $1)\"\n  for i in $@; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=$(type -t $1)\n  for i in \"${@:2}\"; do\n    if [[ $(type -t $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local -n _tuple=$1\n  local _type=${_tuple[0]}\n  for _elem in \"${_tuple[@]}\"; do\n    if [[ \"$(typeof \"$_elem\")\" != \"$_type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$(typeof \"$i\")\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for _element in \"${_tuple[@]}\"; do\n        if [[ ${_element} != ${_type} ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for _element in \"${_tuple[@]}\"; do\n        if [[ \"$(typeof \"$_element\")\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $@; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  for i in ${@:2}; do\n    if [[ $(type -t $i) != $type ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local -n t=$1\n    local type=${t[0]}\n    for i in \"${t[@]}\"; do\n        if [[ \"$i\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t \"$1\")\n    shift\n    for arg in \"$@\"; do\n        [[ $(type -t \"$arg\") == \"$type\" ]] || return 1\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for element; do\n    if [[ \"$(type -t \"$element\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done",
    "  local type=$(typeof $1)\n  for i in \"${@:2}\"; do\n    if [[ $(typeof $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=$(type -t $1)\n    for i in \"${@:2}\"; do\n        if [[ $(type -t $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local -a array=(\"${!2}\")\n    local -i i=0\n    local -i len=${#array[@]}\n    for ((i=0; i<len; i++)); do\n        if [[ $(type -t ${array[$i]}) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local tuple=$1\n  local type=${tuple[0]}\n  for i in \"${tuple[@]}\"; do\n    if [[ $i != $type ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"",
    "    local type=$(type -t $1)\n    for i in $@; do\n        if [ $(type -t $i) != $type ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local -n _tuple=$1\n    local _type=$2\n    local _result=1\n    for i in \"${_tuple[@]}\"; do\n        if [[ $(typeof \"$i\") != \"$_type\" ]]; then\n            _result=0\n            break\n        fi\n    done\n    echo \"$_result\"",
    "    local -n arr=$1\n    local type=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type_of_first_element=`typeof $1`\n    for element in $@; do\n        if [ `typeof $element` != $type_of_first_element ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in $@; do\n        type_list+=($(type -t $i))\n    done\n    for i in ${type_list[@]}; do\n        if [[ $i != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local i=0\n    for i in ${@:2}\n    do\n        if [[ $(type -t $i) != $type ]]\n        then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    shift\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  for i in $@; do\n    if [[ $(type -t $i) != $type ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]; do\n        if [ $(type -t ${tuple[$i]}) != $type ]; then\n            echo \"False\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in $@; do\n        type_list+=($(type -t $i))\n    done\n    for i in ${type_list[@]}; do\n        if [[ $i != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for i in \"$@\"; do\n    if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=$(type -t $1)\n  for i in \"${@:2}\"; do\n    if [[ $(type -t $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t $1)\"\n    shift\n    for i in \"$@\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t \"$1\")\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=$(typeof \"${_tuple[0]}\")\n    for _elem in \"${_tuple[@]}\"; do\n        if [[ $(typeof \"$_elem\") != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t $1)\"\n  local result=0\n  for i in \"${@:2}\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      result=1\n      break\n    fi\n  done\n  return $result",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t $1)\"\n  shift\n  for arg in \"$@\"; do\n    if [[ \"$type\" != \"$(type -t $arg)\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"${i%${i#?}}\" ]]; then\n            _type=\"${i%${i#?}}\"\n        fi\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    shift\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    local value=\"$1\"\n    shift\n    for i in \"$@\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  for i in $@; do\n    if [[ $(type -t $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in $@; do\n        type_list+=($(type -t $i))\n    done\n    for i in ${type_list[@]}; do\n        if [[ $i != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        [[ \"$(type -t \"$i\")\" != \"$type\" ]] && return 1\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for item in \"$@\"; do\n    if [[ \"$(type -t \"$item\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local -n _tuple=$1\n  local _type=${_tuple[0]}\n  for _elem in \"${_tuple[@]}\"; do\n    if [[ \"${_elem}\" != \"${_type}\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ $i != $_type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -a arr=(\"${!1}\")\n    local type=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    for i in $@; do\n        if [ \"$(type -t $i)\" != \"$type\" ]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  for i in \"${@:2}\"; do\n    if [[ $(type -t $i) != $type ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"${i%${i#?}}\" ]]; then\n            echo \"false\"\n            return\n        fi\n        if [[ \"$i\" != \"${i#${i%?}}\" ]]; then\n            echo \"false\"\n            return\n        fi\n        if [[ \"$i\" != \"${i#[0-9]}\" ]]; then\n            if [[ \"$i\" != \"${i#[0-9][0-9]}\" ]]; then\n                if [[ \"$i\" != \"${i#[0-9][0-9][0-9]}\" ]]; then\n                    if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9]}\" ]]; then\n                        if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9][0-9]}\" ]]; then\n                            if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9][0-9][0-9]}\" ]]; then\n                                if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9][0-9][0-9][0-9]}\" ]]; then\n                                    if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]}\" ]]; then\n                                        if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]}\" ]]; then\n                                            if [[ \"$i\" != \"${i#[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]}\" ]]; then\n                                                if [[ \"$i\" != \"${",
    "    local type=$(type -t \"$1\")\n    shift\n    for arg in \"$@\"; do\n        [[ $(type -t \"$arg\") == \"$type\" ]] || return 1\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for item in \"$@\"; do\n    if [[ \"$(type -t \"$item\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=\"$(type -t $1)\"\n  local value=\"$1\"\n  shift\n  for i in \"$@\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t \"$arg\")\" != \"$type\" ]] && return 1\n  done\n  return 0",
    "    local type=$(type -t $1)\n    local -a array=(\"${!2}\")\n    for i in \"${array[@]}\"; do\n        if [ \"$(type -t $i)\" != \"$type\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for var in \"$@\"; do\n    [[ \"$(type -t \"$var\")\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "  local type=$(type -t $1)\n  for i in \"${@:2}\"; do\n    if [[ $(type -t $i) != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=\"$(type -t $1)\"\n  local type_list=()\n  for i in \"${@:2}\"; do\n    type_list+=(\"$(type -t $i)\")\n  done\n  for i in \"${type_list[@]}\"; do\n    if [[ \"$i\" != \"$type\" ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "  local type=\"$(type -t $1)\"\n  for i in \"${@:2}\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      return 1\n    fi\n  done",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in \"${@:2}\"; do\n        type_list+=(\"$(type -t $i)\")\n    done\n    for i in \"${type_list[@]}\"; do\n        if [[ $i != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type_count=0\n    for i in \"$@\"\n    do\n        if [ \"$type_count\" -eq 0 ]; then\n            local type=$(typeof \"$i\")\n            local type_count=1\n        else\n            if [ \"$(typeof \"$i\")\" != \"$type\" ]; then\n                echo \"False\"\n                return\n            fi\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    local result=0\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            result=1\n            break\n        fi\n    done\n    return $result",
    "    local type=\"$(type -t $1)\"\n    local i=0\n    local result=1\n    while [ $i -lt ${#tuple[@]} ]; do\n        if [ \"$(type -t ${tuple[$i]})\" != \"$type\" ]; then\n            result=0\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $result",
    "    local type=\"$(type -t $1)\"\n    local type_list=()\n    for i in \"$@\"; do\n        type_list+=(\"$(type -t $i)\")\n    done\n    for i in \"${type_list[@]}\"; do\n        if [[ \"$i\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    for i in \"${@:2}\"; do\n        [[ \"$(type -t \"$i\")\" != \"$type\" ]] && return 1\n    done\n    return 0",
    "  local type=$(typeof $1)\n  for i in \"${@:2}\"; do\n    if [[ $(typeof $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(typeof \"$1\")\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(typeof \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for i in \"$@\"; do\n    [[ \"$(type -t \"$i\")\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local type=$(type -t \"$1\")\n    for i in \"${@:2}\"; do\n        if [[ $(type -t \"$i\") != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    local i=0\n    local t=()\n    for i in \"$@\"; do\n        t+=($(type -t $i))\n    done\n    echo ${t[@]} | grep -vq $type\n    return $?",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(typeof $1)\n    for i in $@; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        [[ \"$(type -t \"$i\")\" != \"$type\" ]] && return 1\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local -n _tuple=$1\n  local _type=\"$(typeof \"${_tuple[0]}\")\"\n  for i in \"${_tuple[@]}\"; do\n    if [[ \"$(typeof \"$i\")\" != \"$_type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for _elem in \"${_tuple[@]}\"; do\n        if [[ \"$(typeof \"$_elem\")\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local type=$(type -t $1)\n    local value=$1\n    shift\n    for i in $@\n    do\n        if [[ $(type -t $i) != $type ]]\n        then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(typeof $1)\n    for i in $@; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t \"$1\")\n    local i\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for arg in \"$@\"; do\n    if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t $1)\"\n    local i=0\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"${i//$_type}\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg; do\n        [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local t=()\n    for i in $@; do\n        t+=($(type -t $i))\n    done\n    for i in ${t[@]}; do\n        if [ $i != $type ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local type=\"$(type -t $1)\"\n    local type_list=()\n    for i in $@; do\n        type_list+=($(type -t $i))\n    done\n    if [[ \"${type_list[@]}\" =~ \"$type\" ]]; then\n        echo \"All elements have same type\"\n    else\n        echo \"All elements do not have same type\"\n    fi",
    "  local type=$(type -t $1)\n  for i in \"${@:2}\"; do\n    if [[ $(type -t $i) != $type ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local type=$(type -t \"$1\")\n    for i in \"${@:2}\"; do\n        if [[ $(type -t \"$i\") != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for var in \"$@\"; do\n        if [[ \"$(type -t \"$var\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done",
    "    local -n _tuple=$1\n    local _type=$(typeof ${_tuple[0]})\n    for i in ${_tuple[@]}; do\n        if [[ $(typeof $i) != $_type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for arg; do\n    [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local type=\"$(type -t $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  shift\n  for item in \"$@\"; do\n    if [[ \"$(type -t \"$item\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=\"$(type -t $1)\"\n  local i\n  for i in \"${@:2}\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"",
    "    local type=\"$(type -t $1)\"\n    local value=\"$1\"\n    shift\n    for i in $@; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=\"$(type -t $1)\"\n  for i in $@; do\n    if [ \"$(type -t $i)\" != \"$type\" ]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in \"${@:2}\"; do\n        type_list+=($(type -t $i))\n    done\n    for i in \"${type_list[@]}\"; do\n        if [ \"$i\" != \"$type\" ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=\"$(type -t $1)\"\n  local i=0\n  for i in \"${@:2}\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        [[ \"$(type -t \"$i\")\" != \"$type\" ]] && return 1\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in \"$@\"; do\n        type_list+=($(type -t $i))\n    done\n    if [[ ${type_list[@]} =~ $type ]]; then\n        echo \"All elements in tuple have same data type\"\n    else\n        echo \"All elements in tuple don't have same data type\"\n    fi",
    "    local -n _tuple=$1\n    local _type=$(typeof ${_tuple[0]})\n    for i in ${_tuple[@]}; do\n        if [[ $(typeof $i) != $_type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    local type_list=\"$(type -t $1)\"\n    for i in $@; do\n        if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(typeof $1)\n    for i in $@; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in \"${@:2}\"; do\n        type_list+=($(type -t $i))\n    done\n    [[ ${type_list[@]} =~ $type ]] && echo \"True\" || echo \"False\"",
    "    local type=$(type -t $1)\n    local i=0\n    for i in \"${@:2}\"; do\n        if [[ $(type -t $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    local -a tuple=(\"${!2}\")\n    for i in ${tuple[@]}; do\n        if [[ $(type -t $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  if [ -z \"$1\" ]; then\n    echo \"No arguments supplied\"\n    return 1\n  fi\n\n  local type=\"$(type -t \"$1\")\"\n  for i in \"$@\"; do\n    if [ \"$(type -t \"$i\")\" != \"$type\" ]; then\n      echo \"False\"\n      return 0\n    fi\n  done\n  echo \"True\"",
    "    local type=\"$(typeof $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(typeof $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t $arg)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done",
    "  local -n _tuple=$1\n  local _type=${_tuple[0]}\n  for i in ${_tuple[@]}; do\n    if [[ \"$i\" != \"${i%${i#?}}\" ]]; then\n      if [[ \"${i#?}\" != \"${i%${i#??}}\" ]]; then\n        _type=${i:0:3}\n      else\n        _type=${i:0:2}\n      fi\n    else\n      _type=${i:0:1}\n    fi\n    if [[ \"$_type\" != \"${_tuple[0]:0:${#_type}}\" ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    case \"$type\" in\n        \"integer\")\n            return 0\n            ;;\n        \"string\")\n            return 0\n            ;;\n        \"array\")\n            return 0\n            ;;\n        *)\n            return 1\n            ;;\n    esac",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $@; do\n        [[ $(typeof $i) != $type ]] && return 1\n    done",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    local i=0\n    for arg in \"$@\"; do\n        if [ \"$(type -t $arg)\" != \"$type\" ]; then\n            return 1\n        fi\n        i=$((i+1))\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    if [[ $type == \"function\" ]]; then\n        echo \"function\"\n    elif [[ $type == \"file\" ]]; then\n        echo \"file\"\n    elif [[ $type == \"alias\" ]]; then\n        echo \"alias\"\n    elif [[ $type == \"builtin\" ]]; then\n        echo \"builtin\"\n    elif [[ $type == \"keyword\" ]]; then\n        echo \"keyword\"\n    else\n        echo \"unknown\"\n    fi",
    "    local type=$(type -t $1)\n    local result=1\n    for i in \"${@:2}\"; do\n        if [[ $(type -t $i) != $type ]]; then\n            result=0\n        fi\n    done\n    echo $result",
    "    local type=$(type -t $1)\n    local type_list=()\n    for i in \"${@:2}\"; do\n        type_list+=($(type -t $i))\n    done\n    for i in \"${type_list[@]}\"; do\n        if [[ $i != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local -n __tuple=$1\n    local -i __len=${#__tuple[@]}\n    local -i __i=0\n    local __type=${__tuple[0]}\n    while [[ $__i -lt $__len ]]; do\n        if [[ ${__tuple[$__i]} != $__type ]]; then\n            return 1\n        fi\n        ((__i++))\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]\n    do\n        if [ \"$(type -t ${tuple[$i]})\" != \"$type\" ]\n        then\n            echo \"False\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"True\"",
    "    local type=\"$(type -t $1)\"\n    if [[ \"$type\" == \"function\" ]]; then\n        echo \"function\"\n    elif [[ \"$type\" == \"file\" ]]; then\n        echo \"file\"\n    elif [[ \"$type\" == \"alias\" ]]; then\n        echo \"alias\"\n    elif [[ \"$type\" == \"builtin\" ]]; then\n        echo \"builtin\"\n    elif [[ \"$type\" == \"keyword\" ]]; then\n        echo \"keyword\"\n    elif [[ \"$type\" == \"integer\" ]]; then\n        echo \"integer\"\n    elif [[ \"$type\" == \"array\" ]]; then\n        echo \"array\"\n    elif [[ \"$type\" == \"string\" ]]; then\n        echo \"string\"\n    elif [[ \"$type\" == \"float\" ]]; then\n        echo \"float\"\n    elif [[ \"$type\" == \"boolean\" ]]; then\n        echo \"boolean\"\n    else\n        echo \"unknown\"\n    fi",
    "  local type=$(typeof $1)\n  for i in \"${@:2}\"; do\n    if [[ $(typeof $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=$(typeof $1)\n  for i in $@; do\n    if [[ $(typeof $i) != $type ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ $i != $_type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "    local type=$(type -t $1)\n    local result=1\n    for i in $@; do\n        if [[ $(type -t $i) != $type ]]; then\n            result=0\n            break\n        fi\n    done\n    echo $result",
    "    local type=$(type -t $1)\n    for i in \"${@:2}\"; do\n        if [ \"$type\" != \"$(type -t $i)\" ]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for i in \"$@\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=\"$(type -t \"$1\")\"\n  for i in \"$@\"; do\n    if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n      return 1\n    fi\n  done",
    "    local t=\"$1\"\n    local type=\"$(typeof \"$t\")\"\n    local i=0\n    while [ $i -lt \"${#t[@]}\" ]; do\n        if [ \"$type\" != \"$(typeof \"${t[$i]}\")\" ]; then\n            return 1\n        fi\n        i=$((i + 1))\n    done\n    return 0",
    "    local type=${1:0:1}\n    for i in ${1:1}; do\n        if [[ ${i:0:1} != $type ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  for i in \"${@:2}\"; do\n    if [[ $(type -t $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local -n __tuple=$1\n    local -i __len=${#__tuple[@]}\n    local -i __i=0\n    local __type=\"${__tuple[0]}\"\n    local __type_of\n    for (( __i=1; __i<__len; __i++ )); do\n        __type_of=\"$(typeof \"${__tuple[$__i]}\")\"\n        if [[ \"$__type\" != \"$__type_of\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=${1:0:1}\n    shift\n    for arg in \"$@\"; do\n        if [[ ${arg:0:1} != $type ]]; then\n            return 1\n        fi\n    done\n    return 0"
  ]
}
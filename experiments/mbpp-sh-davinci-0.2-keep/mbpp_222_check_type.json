{
  "name": "mbpp_222_check_type",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check if all the elements in tuple have same data type or not.\n#\n# $1 is a $Any\ncheck_type() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    check_type \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 6 7 3 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 2 4\") = \"false\" ]]\n    [[ $(candidate \"3 2 1 4 5\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local type=\"$(type -t $1)\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t $arg)\" != \"$type\" ]] && return 1\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(type -t \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    echo $type",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=$(typeof ${_tuple[0]})\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$(typeof $i)\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(typeof $1)\n    for i in $1; do\n        if [[ $(typeof $i) != $type ]]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"",
    "  local type=$(typeof $1)\n  for i in \"${@:2}\"; do\n    if [[ $(typeof $i) != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg in \"$@\"; do\n        if [[ \"$(type -t \"$arg\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local -n _tuple=$1\n  local _type=${_tuple[0]}\n  for _elem in \"${_tuple[@]}\"; do\n    if [[ \"${_elem}\" != \"${_type}\" ]]; then\n      echo \"False\"\n      return\n    fi\n  done\n  echo \"True\"",
    "    local -n arr=\"$1\"\n    local type=\"$(typeof \"${arr[0]}\")\"\n    for i in \"${arr[@]}\"; do\n        if [[ \"$(typeof \"$i\")\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=\"$(type -t $1)\"\n    if [[ \"$type\" == \"function\" ]]; then\n        echo \"function\"\n    elif [[ \"$type\" == \"file\" ]]; then\n        echo \"file\"\n    elif [[ \"$type\" == \"alias\" ]]; then\n        echo \"alias\"\n    elif [[ \"$type\" == \"builtin\" ]]; then\n        echo \"builtin\"\n    elif [[ \"$type\" == \"keyword\" ]]; then\n        echo \"keyword\"\n    elif [[ \"$type\" == \"integer\" ]]; then\n        echo \"integer\"\n    elif [[ \"$type\" == \"array\" ]]; then\n        echo \"array\"\n    elif [[ \"$type\" == \"string\" ]]; then\n        echo \"string\"\n    else\n        echo \"unknown\"\n    fi",
    "  local type=\"$(type -t $1)\"\n  shift\n  for arg in \"$@\"; do\n    [[ \"$(type -t $arg)\" == \"$type\" ]] || return 1\n  done\n  return 0",
    "    local type=$(type -t $1)\n    local i=0\n    while [ $i -lt ${#tuple[@]} ]; do\n        if [ \"$type\" != \"$(type -t ${tuple[$i]})\" ]; then\n            return 1\n        fi\n        ((i++))\n    done\n    return 0",
    "    local -n _tuple=$1\n    local _type=${_tuple[0]}\n    for i in \"${_tuple[@]}\"; do\n        if [[ \"$i\" != \"$_type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local type=$(type -t $1)\n    local types=()\n    for i in ${@:2}; do\n        types+=($(type -t $i))\n    done\n    local unique_types=$(echo \"${types[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    if [[ ${#unique_types[@]} -eq 1 ]]; then\n        echo \"All elements are of type $type\"\n    else\n        echo \"Not all elements are of type $type\"\n    fi",
    "  local type=\"$(type -t $1)\"\n  local i\n  for i in \"${@:2}\"; do\n    if [[ \"$(type -t $i)\" != \"$type\" ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "  local type=$(type -t $1)\n  shift\n  for i in $@; do\n    if [[ $(type -t $i) != $type ]]; then\n      return 1\n    fi\n  done\n  return 0",
    "    local type=\"$(type -t \"$1\")\"\n    shift\n    for arg; do\n        [[ \"$(type -t \"$arg\")\" == \"$type\" ]] || return 1\n    done\n    return 0",
    "    local type=\"$(typeof $1)\"\n    for i in \"${@:2}\"; do\n        if [[ \"$(typeof $i)\" != \"$type\" ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "  local type=$(type -t $1)\n  local result=0\n  for i in $@; do\n    if [ $(type -t $i) != $type ]; then\n      result=1\n      break\n    fi\n  done\n  return $result"
  ]
}
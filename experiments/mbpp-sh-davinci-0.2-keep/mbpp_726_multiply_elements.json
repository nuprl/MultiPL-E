{
  "name": "mbpp_726_multiply_elements",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.\n#\n# $1 is a space-separated list\nmultiply_elements() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_726_multiply_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    multiply_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 7 8 10\") = \"5 35 56 80\" ]]\n    [[ $(candidate \"2 4 5 6 7\") = \"8 20 30 42\" ]]\n    [[ $(candidate \"12 13 14 9 15\") = \"156 182 126 135\" ]]\n    [[ $(candidate \"12\") = \"\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local input=($1)\n    local output=()\n    for ((i=0; i < ${#input[@]} - 1; i++)); do\n        output[$i]=$((input[i] * input[i+1]))\n    done\n    echo \"${output[@]}\"",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}; i++)); do\n        if ((i < ${#list[@]} - 1)); then\n            result+=($((list[i] * list[i+1])))\n        fi\n    done\n    echo ${result[@]}",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ $i -eq $(( ${#array[@]} - 1 )) ]]; then\n            break\n        fi\n        echo -n \"$(( ${array[$i]} * ${array[$((i+1))]} )) \"\n    done",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        result[$i]=$((array[i] * array[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a new_array=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        new_array+=($((array[i] * array[i+1])))\n    done\n    echo ${new_array[@]}",
    "    local -a t=($1)\n    local -a result\n    for ((i=0; i<${#t[@]}-1; i++)); do\n        result[$i]=$((t[i] * t[i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a new_array\n\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        new_array[i]=$((array[i] * array[i+1]))\n    done\n\n    echo ${new_array[@]}",
    "    local input=($1)\n    local output=()\n\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output[i]=$((input[i] * input[i+1]))\n    done\n\n    echo \"${output[@]}\"",
    "    local -a arr=($1)\n    local -a result=()\n    for (( i=0; i<${#arr[@]}-1; i++ )); do\n        result[i]=$(( ${arr[i]} * ${arr[i+1]} ))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[i]=$((array[i] * array[i+1]))\n    done\n    echo ${result[@]}",
    "    local input=($1)\n    local output=()\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output[$i]=$((input[$i]*input[$i+1]))\n    done\n    echo ${output[@]}",
    "  local -a input_array=(\"$@\")\n  local -a output_array=()\n  local i=0\n  for ((i=0; i<${#input_array[@]}; i++)); do\n    output_array[$i]=$((input_array[$i] * input_array[$i+1]))\n  done\n  echo \"${output_array[@]}\"",
    "    local -n _array=$1\n    local _result=()\n    for ((i=0; i<${#_array[@]}; i++)); do\n        if [ $i -eq $((${#_array[@]}-1)) ]; then\n            break\n        fi\n        _result+=($((${_array[$i]}*${_array[$(($i+1))]})))\n    done\n    echo \"${_result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i < ${#array[@]}; i++)); do\n        if ((i == ${#array[@]} - 1)); then\n            break\n        fi\n        result+=($((array[i] * array[i + 1])))\n    done\n    echo ${result[@]}",
    "    local -a array=(\"$@\")\n    local -a new_array=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ $i -eq $(( ${#array[@]} - 1 )) ]]; then\n            break\n        fi\n        new_array+=($(( array[$i] * array[$((i+1))] )))\n    done\n    echo \"${new_array[@]}\"",
    "  local -a array=(\"$@\")\n  local -a result\n  for ((i=0; i<${#array[@]}; i++)); do\n    if ((i < ${#array[@]} - 1)); then\n      result[$i]=$((array[i] * array[i+1]))\n    fi\n  done\n  echo \"${result[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -n arr=$1\n    local -a result\n    for ((i=0; i<${#arr[@]}; i++)); do\n        result+=($((arr[i] * arr[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "  local -a array\n  IFS=' ' read -r -a array <<< \"$1\"\n  for (( i=0; i<${#array[@]}-1; i++ )); do\n    echo -n \"$(( array[i] * array[i+1] )) \"\n  done\n  echo",
    "    local -a array=($1)\n    local -a new_array\n    for ((i=0; i<${#array[@]}; i++)); do\n        new_array[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${new_array[@]}",
    "    local list=\"$1\"\n    local result=\"\"\n    local i=0\n    local len=0\n    local first=0\n    local second=0\n\n    len=$(echo \"$list\" | wc -w)\n    for i in $(seq 1 $len); do\n        first=$(echo \"$list\" | cut -d' ' -f$i)\n        second=$(echo \"$list\" | cut -d' ' -f$((i+1)))\n        result=\"$result $(($first * $second))\"\n    done\n    echo \"$result\"",
    "  local -n arr=$1\n  local -a new_arr\n  for ((i=0; i<${#arr[@]}; i++)); do\n    new_arr[$i]=$((arr[$i] * arr[$i+1]))\n  done\n  echo \"${new_arr[@]}\"",
    "    local input=($1)\n    local output=()\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output+=($((input[i] * input[i+1])))\n    done\n    echo \"${output[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a res=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        res+=($((arr[i]*arr[i+1])))\n    done\n    echo \"${res[@]}\"",
    "  local -a arr=(\"$@\")\n  local -a res=()\n  for ((i=0; i<${#arr[@]}-1; i++)); do\n    res[$i]=$((arr[$i] * arr[$i+1]))\n  done\n  echo \"${res[@]}\"",
    "  local list=$1\n  local result=\"\"\n\n  for i in $list; do\n    if [ -z \"$result\" ]; then\n      result=\"$i\"\n    else\n      result=\"$result $(( $i * $result ))\"\n    fi\n  done\n\n  echo $result",
    "    local input=($1)\n    local output=()\n    for ((i=0; i < ${#input[@]} - 1; i++)); do\n        output[i]=$((input[i] * input[i+1]))\n    done\n    echo \"${output[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a res\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        res[$i]=$((arr[$i] * arr[$i+1]))\n    done\n    echo \"${res[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i < ${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result+=($((array[i] * array[i+1])))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local input=($1)\n    local output=()\n    for ((i=0; i < ${#input[@]}-1; i++)); do\n        output+=($((input[i] * input[i+1])))\n    done\n    echo \"${output[@]}\"",
    "  local -a arr=(\"$@\")\n  local -a res=()\n  for ((i=0; i<${#arr[@]}-1; i++)); do\n    res+=($((arr[i] * arr[i+1])))\n  done\n  echo \"${res[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[i]=$((array[i] * array[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i = 0; i < ${#array[@]} - 1; i++)); do\n        result[$i]=$((array[$i] * array[$i + 1]))\n    done\n    echo \"${result[*]}\"",
    "  local list=$1\n  local result=\"\"\n  for i in $list; do\n    if [ -z \"$result\" ]; then\n      result=$i\n    else\n      result=\"$result $(($i * $result))\"\n    fi\n  done\n  echo $result",
    "    local -a array\n    array=($1)\n    for (( i = 0; i < ${#array[@]} - 1; i++ )); do\n        echo -n \"$(( array[i] * array[i + 1] )) \"\n    done\n    echo",
    "    local -n arr=$1\n    local result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((i == ${#arr[@]} - 1)); then\n            break\n        fi\n        result+=($((arr[i] * arr[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for (( i=0; i < ${#array[@]}-1; i++ )); do\n        result+=($(( array[i] * array[i+1] )))\n    done\n    echo ${result[@]}",
    "  local list=$1\n  local result=\"\"\n  for i in $list; do\n    result=\"$result $((i * $list[i+1]))\"\n  done\n  echo $result",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result+=($((array[i] * array[i+1])))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    local i\n\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[$i]=$((arr[i] * arr[i+1]))\n    done\n\n    echo \"${result[@]}\"",
    "  local input=\"$1\"\n  local output=\"\"\n  local i=0\n  local len=${#input}\n  local num1=\"\"\n  local num2=\"\"\n  local result=\"\"\n  while [ $i -lt $len ]; do\n    num1=${input:$i:1}\n    num2=${input:$((i+1)):1}\n    result=$((num1*num2))\n    output=\"$output $result\"\n    i=$((i+2))\n  done\n  echo \"$output\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i]*array[i+1])))\n    done\n    echo ${result[@]}",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result+=(\"$((arr[i] * arr[i+1]))\")\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result\n    local i=0\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i]*array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i < ${#array[@]} - 1; i++)); do\n        result+=(\"$((array[i] * array[i+1]))\")\n    done\n    echo \"${result[@]}\"",
    "  local -a array=(\"$@\")\n  local -a new_array\n  for ((i=0; i<${#array[@]}; i++)); do\n    if [ $i -eq $(( ${#array[@]} - 1 )) ]; then\n      break\n    fi\n    new_array[$i]=$(( array[$i] * array[$i+1] ))\n  done\n  echo ${new_array[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local input=$1\n    local output=\"\"\n    for i in $input; do\n        output=\"$output $((i * $next))\"\n        next=$i\n    done\n    echo $output",
    "    local list=\"$1\"\n    local result=\"\"\n    local i=1\n\n    for item in $list; do\n        if [ $i -eq 1 ]; then\n            result=\"$item\"\n        else\n            result=\"$result $((item * prev))\"\n        fi\n        prev=$item\n        i=$((i + 1))\n    done\n\n    echo \"$result\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((${array[i]}*${array[i+1]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result+=($((arr[i]*arr[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i < ${#array[@]} - 1; i++)); do\n        result[i]=$((array[i] * array[i + 1]))\n    done\n    echo \"${result[@]}\"",
    "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        for j in $list; do\n            if [[ $i != $j ]]; then\n                result=\"$result $((i * j))\"\n            fi\n        done\n    done\n    echo $result",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result+=($((array[i] * array[i+1])))\n        fi\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[i]=$((array[i] * array[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local input=($1)\n    local output=()\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output+=($((${input[$i]}*${input[$i+1]})))\n    done\n    echo ${output[@]}",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[$i]=$((arr[$i] * arr[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a input=($1)\n    local -a output=()\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output[i]=$((input[i] * input[i+1]))\n    done\n    echo \"${output[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i < ${#array[@]}; i++)); do\n        result[i]=$((array[i] * array[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a input=($1)\n    local -a output\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output[i]=$((input[i]*input[i+1]))\n    done\n    echo ${output[@]}",
    "    local -a arr=($1)\n    local -a result\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[$i]=$((arr[$i]*arr[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a arr=(\"$@\")\n    local -a output\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        output[$i]=$((arr[$i] * arr[$i+1]))\n    done\n    echo \"${output[@]}\"",
    "  local -a array=(\"$@\")\n  local -a result=()\n  for ((i=0; i<${#array[@]}-1; i++)); do\n    result[i]=$((array[i]*array[i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[i]=$((arr[i] * arr[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=($1)\n    local -a result\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[i]=$((arr[i] * arr[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -n array=$1\n    local result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for i in \"${!arr[@]}\"; do\n        if [ \"$i\" -eq \"${#arr[@]}\" ]; then\n            break\n        fi\n        result+=(\"$((arr[i] * arr[i+1]))\")\n    done\n    echo \"${result[@]}\"",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result+=($((list[i] * list[i+1])))\n    done\n    echo \"${result[@]}\"",
    "  local -a array=(\"$@\")\n  local -a result\n  for ((i=0; i<${#array[@]}-1; i++)); do\n    result[i]=$((array[i] * array[i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a res\n    for ((i=0; i<${#arr[@]}; i++)); do\n        res[$i]=$((${arr[$i]} * ${arr[$i+1]}))\n    done\n    echo \"${res[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i]*array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "  local -a array=(\"$@\")\n  local -a new_array\n  for ((i=0; i<${#array[@]}; i++)); do\n    if [ $i -eq $(( ${#array[@]} - 1 )) ]; then\n      break\n    fi\n    new_array[$i]=$(( array[$i] * array[$(( i + 1 ))] ))\n  done\n  echo \"${new_array[@]}\"",
    "    local -a t=($1)\n    local -a r=()\n    for ((i=0; i<${#t[@]}-1; i++)); do\n        r[i]=$((t[i]*t[i+1]))\n    done\n    echo ${r[@]}",
    "    local input=($1)\n    local output=()\n    for ((i=0; i < ${#input[@]} - 1; i++)); do\n        output+=($((${input[$i]} * ${input[$i+1]})))\n    done\n    echo ${output[@]}",
    "    local input_list=$1\n    local output_list=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local temp=0\n    local temp_list=\"\"\n\n    len=`echo $input_list | wc -w`\n    for i in $input_list; do\n        j=$((j+1))\n        if [ $j -eq $len ]; then\n            break\n        fi\n        temp_list=\"$temp_list $i\"\n    done\n    for i in $temp_list; do\n        j=$((j+1))\n        if [ $j -eq $len ]; then\n            break\n        fi\n        k=$((k+1))\n        temp=`echo $input_list | cut -d ' ' -f $((k+1))`\n        output_list=\"$output_list $((i*temp))\"\n    done\n    echo $output_list",
    "    local -n arr=$1\n    local result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((i == ${#arr[@]}-1)) && break\n        result+=($((arr[i] * arr[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local list=\"$1\"\n    local result=\"\"\n    local i=1\n    local len=$(echo \"$list\" | wc -w)\n    while [ $i -lt $len ]; do\n        result=\"$result $(echo \"$list\" | cut -d ' ' -f $i | awk '{print $1 * $2}')\"\n        i=$((i+1))\n    done\n    echo \"$result\"",
    "    local -a array\n    local -i i\n    local -i len\n    local -i product\n\n    array=($1)\n    len=${#array[@]}\n    for ((i=0; i<len-1; i++)); do\n        product=$((array[i] * array[i+1]))\n        echo -n \"$product \"\n    done\n    echo",
    "    local -a arr=($1)\n    local -a res\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        res[$i]=$((arr[i]*arr[i+1]))\n    done\n    echo \"${res[@]}\"",
    "  local input=\"$1\"\n  local output=\"\"\n  local i=1\n  for n in $input; do\n    if [ $i -eq 1 ]; then\n      output=\"$n\"\n    else\n      output=\"$output $(($n * $prev))\"\n    fi\n    prev=$n\n    i=$((i + 1))\n  done\n  echo \"$output\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "  local -n _tuple=$1\n  local _result=\"\"\n  for ((i=0; i<${#_tuple[@]}; i++)); do\n    local _element=${_tuple[$i]}\n    local _next_element=${_tuple[$((i+1))]}\n    if [[ -z $_next_element ]]; then\n      break\n    fi\n    _result+=\"$((_element * _next_element)) \"\n  done\n  echo \"$_result\"",
    "    local -a array=($1)\n    local -a new_array=()\n    local i=0\n    for ((i = 0; i < ${#array[@]} - 1; i++)); do\n        new_array[$i]=$((array[$i] * array[$i + 1]))\n    done\n    echo ${new_array[@]}",
    "    local -a array=($1)\n    local -a result\n\n    for ((i=0; i < ${#array[@]}-1; i++)); do\n        result[i]=$((array[i] * array[i+1]))\n    done\n\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result\n    for i in \"${!array[@]}\"; do\n        if [ $i -eq ${#array[@]} ]; then\n            break\n        fi\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local args=($1)\n    local result=\"\"\n    for ((i=0; i<${#args[@]}-1; i++)); do\n        result=\"$result$((${args[$i]} * ${args[$i+1]})) \"\n    done\n    echo $result",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo \"${result[@]}\"",
    "  local -a list=(\"$@\")\n  local -a result\n  local i\n  for ((i=0; i<${#list[@]}-1; i++)); do\n    result[$i]=$((list[$i] * list[$i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a t=($1)\n    local -a result=()\n    for ((i=0; i<${#t[@]}-1; i++)); do\n        result[$i]=$((t[$i] * t[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        echo -n \"$((array[i] * array[i+1])) \"\n    done\n    echo",
    "  local input=\"$1\"\n  local output=\"\"\n  local i=1\n  local len=`echo \"$input\" | wc -w`\n\n  while [ $i -lt $len ]; do\n    local element=`echo \"$input\" | cut -d ' ' -f $i`\n    local next=`echo \"$input\" | cut -d ' ' -f $((i+1))`\n    local product=$((element * next))\n    output=\"$output $product\"\n    i=$((i+1))\n  done\n\n  echo \"$output\"",
    "    local -a list=($1)\n    local -a result=()\n    local i=0\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result[$i]=$((list[$i] * list[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a res=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        res[i]=$((arr[i] * arr[i+1]))\n    done\n    echo \"${res[@]}\"",
    "    local -a input=($1)\n    local -a output=()\n    for ((i=0; i<${#input[@]}-1; i++)); do\n        output[$i]=$((input[$i]*input[$i+1]))\n    done\n    echo ${output[@]}",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[i] * array[i+1]))\n    done\n    echo ${result[@]}",
    "  local -a array=(\"$@\")\n  local -a result\n  for ((i=0; i<${#array[@]}; i++)); do\n    result[$i]=$((array[$i] * array[$i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i == ${#array[@]} - 1)); then\n            break\n        fi\n        result+=($((array[i] * array[i+1])))\n    done\n    echo \"${result[@]}\"",
    "  local -a array=(\"$@\")\n  local -a result\n  local i\n  for ((i=0; i<${#array[@]}-1; i++)); do\n    result[$i]=$((array[$i] * array[$i+1]))\n  done\n  echo \"${result[@]}\"",
    "  local -a array\n  IFS=' ' read -r -a array <<< \"$1\"\n  local -a result\n  for (( i=0; i<${#array[@]}-1; i++ )); do\n    result[$i]=$(( array[$i] * array[$i+1] ))\n  done\n  echo \"${result[*]}\"",
    "    local -a array\n    local -i i\n    local -i len\n    local -i result\n\n    array=($1)\n    len=${#array[@]}\n    for ((i=0; i<len-1; i++)); do\n        result=$((array[i] * array[i+1]))\n        printf \"%d \" $result\n    done\n    printf \"\\n\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[i]=$((array[i]*array[i+1]))\n    done\n    echo ${result[@]}",
    "    local -a t=($1)\n    local -a result\n    for ((i=0; i<${#t[@]}-1; i++)); do\n        result[$i]=$((t[$i]*t[$i+1]))\n    done\n    echo ${result[@]}",
    "  local input=$1\n  local output=\"\"\n  for i in $input; do\n    output=\"$output $((i * $i))\"\n  done\n  echo $output",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a arr=(\"$@\")\n    local -a result\n    local i\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[$i]=$((arr[$i]*arr[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array\n    IFS=' ' read -ra array <<< \"$1\"\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        echo -n \"$((array[i]*array[i+1])) \"\n    done\n    echo",
    "    local -a array=($1)\n    local -a result\n    for (( i=0; i<${#array[@]}-1; i++ )); do\n        result[i]=$(( ${array[i]} * ${array[i+1]} ))\n    done\n    echo ${result[@]}",
    "  local -a array=($1)\n  local -a result=()\n  for ((i=0; i<${#array[@]}-1; i++)); do\n    result[$i]=$((array[$i] * array[$i+1]))\n  done\n  echo \"${result[*]}\"",
    "  local -a arr=(\"$@\")\n  local -a res=()\n  for ((i=0; i < ${#arr[@]}-1; i++)); do\n    res+=(\"$((${arr[$i]} * ${arr[$i+1]}))\")\n  done\n  echo \"${res[@]}\"",
    "    local -a list=($1)\n    local -a result=()\n    local i=0\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result[$i]=$((list[$i] * list[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "  local -a arr=(\"$@\")\n  local -a result=()\n  for ((i=0; i<${#arr[@]}-1; i++)); do\n    result[$i]=$((arr[$i]*arr[$i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result[$i]=$((list[$i] * list[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array\n    array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result[$i]=$((array[i] * array[i+1]))\n        fi\n    done\n    echo ${result[@]}",
    "  local -a list=($1)\n  local -a result=()\n  for ((i=0; i<${#list[@]}-1; i++)); do\n    result[i]=$((list[i]*list[i+1]))\n  done\n  echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo ${result[@]}",
    "    local -a array\n    local -i i\n    local -i N\n    local -i result\n    array=($1)\n    N=${#array[@]}\n    for ((i=0; i<N-1; i++)); do\n        result=$((array[i]*array[i+1]))\n        echo -n \"$result \"\n    done\n    echo",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i]*array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result+=(\"$((array[i] * array[i + 1]))\")\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result+=($((list[i] * list[i+1])))\n    done\n    echo ${result[@]}",
    "    local -a array=(\"$@\")\n    local -a result=()\n    local i=0\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i]*array[i+1])))\n    done\n    echo \"${result[@]}\"",
    "  local input=\"$1\"\n  local output=\"\"\n  local i=0\n  for element in $input; do\n    if [ $i -ne 0 ]; then\n      output=\"$output $((element * prev))\"\n    fi\n    prev=$element\n    i=$((i + 1))\n  done\n  echo \"$output\"",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i < ${#array[@]} - 1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "  local -n arr=$1\n  local result=()\n  for ((i=0; i<${#arr[@]}-1; i++)); do\n    result+=($((arr[i] * arr[i+1])))\n  done\n  echo \"${result[@]}\"",
    "    local t=($1)\n    local result=\"\"\n    for ((i=0; i<${#t[@]}-1; i++)); do\n        result=\"$result$((t[i]*t[i+1])) \"\n    done\n    echo \"$result\"",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result[$i]=$((array[$i] * array[$i+1]))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((i < ${#arr[@]} - 1)); then\n            result[i]=$((arr[i] * arr[i+1]))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i = 0; i < ${#arr[@]} - 1; i++)); do\n        result[$i]=$((arr[$i] * arr[$i + 1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[i]=$((array[i]*array[i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    local i\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i] * array[i+1])))\n    done\n    echo ${result[@]}",
    "  local -a arr=(\"$@\")\n  local -a result\n  for ((i=0; i<${#arr[@]}-1; i++)); do\n    result[$i]=$((arr[i] * arr[i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    local i\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[i] * array[i+1]))\n    done\n    echo ${result[@]}",
    "    local -a list=($1)\n    local -a new_list=()\n    for ((i=0; i < ${#list[@]}; i++)); do\n        if ((i < ${#list[@]} - 1)); then\n            new_list+=($((list[i] * list[i+1])))\n        fi\n    done\n    echo ${new_list[@]}",
    "  local -a array=($1)\n  local -a result\n  for (( i = 0; i < ${#array[@]} - 1; i++ )); do\n    result[i]=$(( array[i] * array[i+1] ))\n  done\n  echo \"${result[@]}\"",
    "  local -a array=($1)\n  local -a result\n  local i\n  for ((i=0; i<${#array[@]}-1; i++)); do\n    result[$i]=$((array[$i] * array[$i+1]))\n  done\n  echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    local i\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[i]=$((array[i] * array[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [ $i -eq $(( ${#array[@]} - 1 )) ]; then\n            break\n        fi\n        result[$i]=$(( ${array[$i]} * ${array[$(( i + 1 ))]} ))\n    done\n    echo ${result[@]}",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}-1; i++))\n    do\n        result[$i]=$((list[$i]*list[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[i]=$((arr[i] * arr[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    local i=0\n    while [ $i -lt $((${#array[@]} - 1)) ]; do\n        result[$i]=$((array[$i] * array[$i+1]))\n        i=$((i + 1))\n    done\n    echo ${result[@]}",
    "    local list=$1\n    local result=\"\"\n    local i=1\n    local len=$(echo $list | wc -w)\n    for elem in $list; do\n        if [ $i -lt $len ]; then\n            result=\"$result$(($elem * $(echo $list | cut -d ' ' -f $((i + 1)))))\"\n            if [ $i -lt $((len - 1)) ]; then\n                result=\"$result \"\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo $result",
    "  local input=($1)\n  local output=()\n  for ((i=0; i < ${#input[@]} - 1; i++)); do\n    output+=(\"$((input[i] * input[i+1]))\")\n  done\n  echo \"${output[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((${array[$i]} * ${array[$i+1]}))\n    done\n    echo ${result[@]}",
    "    local -a array=(\"$@\")\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i]*array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local input=$1\n    local output=\"\"\n    for i in $input; do\n        output=\"$output $((i * ${input%% *}))\"\n        input=\"${input#* }\"\n    done\n    echo $output",
    "  local -a array=(\"$@\")\n  local -a result\n  for ((i=0; i<${#array[@]}-1; i++)); do\n    result[i]=$((array[i] * array[i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i < ${#array[@]} - 1)); then\n            result+=($((${array[$i]} * ${array[$i+1]})))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a input=($1)\n    local -a output=()\n    for ((i=0; i<${#input[@]}; i++)); do\n        if ((i < ${#input[@]} - 1)); then\n            output+=($((input[i] * input[i+1])))\n        fi\n    done\n    echo \"${output[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    local i=0\n    while [ $i -lt $(( ${#array[@]} - 1 )) ]; do\n        result+=($(( array[$i] * array[$(( i + 1 ))] )))\n        i=$(( i + 1 ))\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    local i\n    for (( i=0; i<${#array[@]}-1; i++ )); do\n        result+=($(( array[i] * array[i+1] )))\n    done\n    echo \"${result[*]}\"",
    "    local -a array\n    local -i i\n    local -i len\n    local -i result\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    len=${#array[@]}\n    for ((i=0; i<len; i++)); do\n        if ((i == len-1)); then\n            result=${array[i]}\n        else\n            result=$((array[i] * array[i+1]))\n        fi\n        echo -n \"$result \"\n    done\n    echo",
    "  local input=$1\n  local output=\"\"\n  local i=0\n  for n in $input; do\n    if [ $i -ne 0 ]; then\n      output=\"$output $((n * prev))\"\n    fi\n    prev=$n\n    i=$((i + 1))\n  done\n  echo $output",
    "    local -a array\n    local i\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i < ${#array[@]}-1; i++)); do\n        echo -n \"$((array[i] * array[i+1])) \"\n    done\n    echo",
    "    local list=$1\n    local result=\"\"\n    local i=0\n    for element in $list; do\n        if [ $i -gt 0 ]; then\n            result=\"$result $((element * prev))\"\n        fi\n        prev=$element\n        i=$((i + 1))\n    done\n    echo $result",
    "    local -n arr=$1\n    local -a result\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[$i]=$((arr[i] * arr[i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result\n    local i=0\n    while [ $i -lt ${#array[@]} ]; do\n        result[$i]=$((array[$i] * array[$i+1]))\n        ((i++))\n    done\n    echo ${result[@]}",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[$i]=$((arr[$i] * arr[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result+=($((arr[i] * arr[i+1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=($1)\n    local -a result\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        result[$i]=$((arr[$i] * arr[$i+1]))\n    done\n    echo ${result[@]}",
    "    local list=\"$1\"\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq 1 ]; then\n            result=\"$item\"\n        else\n            result=\"$result $((item * $prev))\"\n        fi\n        prev=$item\n        i=$((i + 1))\n    done\n    echo \"$result\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [ $i -eq $((${#array[@]}-1)) ]; then\n            break\n        fi\n        result+=($((${array[$i]}*${array[$(($i+1))]})))\n    done\n    echo ${result[@]}",
    "    local -a array\n    local i\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]}; i++)); do\n        echo -n \"$((array[i] * array[i+1])) \"\n    done\n    echo",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((i < ${#arr[@]} - 1)); then\n            result+=(\"$((arr[i] * arr[i+1]))\")\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [ $i -eq $((${#array[@]} - 1)) ]; then\n            break\n        fi\n        result+=($((${array[$i]} * ${array[$(($i + 1))]})))\n    done\n    echo ${result[@]}",
    "    local -a array=(\"$@\")\n    local -a result=()\n    for ((i=0; i < ${#array[@]} - 1; i++)); do\n        result+=($((array[i] * array[i + 1])))\n    done\n    echo \"${result[@]}\"",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result+=($((${list[$i]} * ${list[$i+1]})))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[i] * array[i+1]))\n    done\n    echo ${result[@]}",
    "  local -a arr=(\"$@\")\n  local -a result=()\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $i -lt $(( ${#arr[@]} - 1 )) ]]; then\n      result+=($(( arr[i] * arr[i+1] )))\n    fi\n  done\n  echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result+=($((array[i]*array[i+1])))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local result=()\n    local i=0\n    for ((i=0; i<$#-1; i++)); do\n        result+=($((${!i} * ${!i+1})))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((i+1 < ${#arr[@]})); then\n            result+=($((arr[i] * arr[i+1])))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result=()\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo ${result[@]}",
    "    local -n _array=$1\n    local _result=\"\"\n    for ((i=0; i<${#_array[@]}; i++)); do\n        ((i == ${#_array[@]}-1)) && break\n        _result+=\"$((_array[i] * _array[i+1])) \"\n    done\n    echo \"$_result\"",
    "  local -a list=($1)\n  local -a result=()\n  for ((i=0; i<${#list[@]}; i++)); do\n    result[$i]=$((list[$i] * list[$i+1]))\n  done\n  echo \"${result[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result\n    local i\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "  local -a list=($1)\n  local -a new_list=()\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [ $i -eq $((${#list[@]} - 1)) ]; then\n      break\n    fi\n    new_list+=($((${list[$i]} * ${list[$(($i + 1))]})))\n  done\n  echo ${new_list[@]}",
    "    local list=\"$1\"\n    local result=\"\"\n    local i=1\n    local length=$(echo \"$list\" | wc -w)\n    while [ $i -lt $length ]; do\n        local first=$(echo \"$list\" | cut -d \" \" -f $i)\n        local second=$(echo \"$list\" | cut -d \" \" -f $(($i + 1)))\n        local product=$(($first * $second))\n        result=\"$result $product\"\n        i=$(($i + 1))\n    done\n    echo \"$result\"",
    "    local -a list=($1)\n    local -a result=()\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        result[$i]=$((list[i]*list[i+1]))\n    done\n    echo \"${result[*]}\"",
    "    local -a numbers=($1)\n    local -a result=()\n    for ((i=0; i<${#numbers[@]}-1; i++)); do\n        result[$i]=$((numbers[i] * numbers[i+1]))\n    done\n    echo \"${result[*]}\"",
    "    local -a arr=(\"$@\")\n    local -a res=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        res+=(\"$((arr[i]*arr[i+1]))\")\n    done\n    echo \"${res[@]}\"",
    "    local -a array=(\"$@\")\n    local -a result=()\n    local i=0\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[$i] * array[$i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a array\n    local i\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        echo -n \"$((array[i] * array[i+1])) \"\n    done\n    echo",
    "    local -a arr=(\"$@\")\n    local -a result=()\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[i]=$((arr[i]*arr[i+1]))\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=($1)\n    local -a result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((i < ${#arr[@]} - 1)); then\n            result+=($((arr[i] * arr[i+1])))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a arr=(\"$@\")\n    local -a result\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        result[i]=$((arr[i]*arr[i+1]))\n    done\n    echo ${result[@]}",
    "    local -a array=($1)\n    local -a result=()\n    for ((i = 0; i < ${#array[@]} - 1; i++)); do\n        result+=(\"$((array[i] * array[i + 1]))\")\n    done\n    echo \"${result[@]}\"",
    "    local -a array=($1)\n    local -a result\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        result[$i]=$((array[i]*array[i+1]))\n    done\n    echo ${result[@]}"
  ]
}
{
  "name": "mbpp_739_find_Index",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n#\n# $1 is an integer\nfind_Index() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_Index \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"4\" ]]\n    [[ $(candidate \"3\") = \"14\" ]]\n    [[ $(candidate \"4\") = \"45\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local i=1\n    local t=0\n    local d=0\n    while [ $d -ne $n ]\n    do\n        t=$(( $i * ($i + 1) / 2 ))\n        d=$(echo $t | wc -c)\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "  local n=$1\n  local i=1\n  local sum=0\n  local index=0\n  while [ $sum -lt $n ]\n  do\n    sum=$(( $i * ($i + 1) / 2 ))\n    index=$(( $index + 1 ))\n    i=$(( $i + 1 ))\n  done\n  echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$(( $index + 1 ))\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local t=0\n    local len=0\n    while [ $len -lt $n ]\n    do\n        t=$(( $i * ($i + 1) / 2 ))\n        len=${#t}\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local t=1\n    local count=1\n    while [ $count -lt $n ]\n    do\n        i=$((i+1))\n        t=$((t+i))\n        count=$(echo $t | wc -c)\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=0\n    while [ $len -ne $n ]; do\n        t=$(( $i * ($i + 1) / 2 ))\n        len=${#t}\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(($sum + $i))\n        i=$(($i + 1))\n    done\n    echo $((i - 1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=0\n    while [ $len -ne $n ]\n    do\n        t=$((i*(i+1)/2))\n        len=${#t}\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    # Initialize first triangular number\n    tn=0\n    # Initialize index of triangular number\n    i=1\n    # Find the index of triangular number\n    while [ ${#tn} -ne $1 ]\n    do\n        tn=$((tn+i))\n        i=$((i+1))\n    done\n    # Print the index of triangular number\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=1\n    while [ ${#sum} -lt $n ]; do\n        i=$((i+1))\n        sum=$((i*(i+1)/2))\n    done\n    echo $i",
    "    # Write your code here\n    # Store the number of digits in a variable\n    digits=$1\n    # Initialize the index to 1\n    index=1\n    # Initialize the triangular number to 1\n    triangular=1\n    # Loop until the number of digits in the triangular number is equal to the number of digits in the input\n    while [ ${#triangular} -ne $digits ]; do\n        # Increment the index by 1\n        index=$((index+1))\n        # Calculate the triangular number\n        triangular=$((index*(index+1)/2))\n    done\n    # Return the index\n    echo $index",
    "    if [ $1 -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"$(($1*($1+1)/2))\"\n    fi",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]\n        then\n            echo $i\n            return\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if ((${#sum} == n)); then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local t=0\n    while true; do\n        t=$((i*(i+1)/2))\n        if [[ ${#t} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        index=$((index+1))\n        i=$((i+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $j\n            break\n        fi\n        ((i++))\n        ((j++))\n    done",
    "    if [ $1 -eq 1 ]\n    then\n        echo \"1\"\n    else\n        # Find the smallest triangular number with n digits\n        #\n        # The smallest triangular number with n digits is 10^(n-1)\n        #\n        # The largest triangular number with n digits is 10^n - 1\n        #\n        # The largest triangular number with n digits is the sum of the first n natural numbers\n        #\n        # The sum of the first n natural numbers is n(n+1)/2\n        #\n        # The largest triangular number with n digits is n(n+1)/2 - 1\n        #\n        # The smallest triangular number with n digits is n(n+1)/2 - (n-1)\n        #\n        # The smallest triangular number with n digits is n(n+1)/2 - n + 1\n        #\n        # The smallest triangular number with n digits is (n^2 + n)/2 - n + 1\n        #\n        # The smallest triangular number with n digits is (n^2 + n - 2n + 2)/2\n        #\n        # The smallest triangular number with n digits is (n^2 - n + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n - 1) + 2)/2\n        #\n        # The smallest triangular number with n digits is (n(n",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local t=0\n    local len=0\n    while [ $len -ne $n ]; do\n        t=$((i*(i+1)/2))\n        len=${#t}\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$(($sum+$i))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$(( $i * ( $i + 1 ) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local j=1\n    local k=1\n    local num=0\n    while [ $num -lt $n ]\n    do\n        num=$(($i * ($i + 1) / 2))\n        i=$(($i + 1))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -lt $n ]; do\n        t=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local index=1\n    local triangular_number=1\n    local number_of_digits=1\n    while [ $number_of_digits -lt $n ]\n    do\n        i=$((i+1))\n        triangular_number=$((triangular_number+i))\n        number_of_digits=$(echo $triangular_number | wc -c)\n        index=$((index+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    # initialize variables\n    local n=$1\n    local i=1\n    local tri=0\n    local digits=0\n    # loop until we find the index of the first triangular number with n digits\n    while [ $digits -ne $n ]; do\n        # calculate the triangular number\n        tri=$(( $i * ( $i + 1 ) / 2 ))\n        # get the number of digits in the triangular number\n        digits=${#tri}\n        # increment the index\n        i=$(( $i + 1 ))\n    done\n    # return the index\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i*($i+1)/2 ))\n        i=$(( $i+1 ))\n    done\n    echo $(( $i-1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$((sum+i))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local t=0\n    while [ ${#t} -ne $n ]; do\n        t=$((i*(i+1)/2))\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo $j",
    "    local n=$1\n    local i=1\n    local index=1\n    local tri=0\n    while [ ${#tri} -lt $n ]; do\n        tri=$((i*(i+1)/2))\n        i=$((i+1))\n        index=$((index+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $n ]\n    do\n        i=$((i+1))\n        triangular_number=$((triangular_number+i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        index=$i\n        i=$((i+1))\n    done\n    echo $index",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ $((10**$n)) -gt $sum ]\n\tdo\n\t\tsum=$((sum + i))\n\t\ti=$((i + 1))\n\tdone\n\techo $((i - 1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local tri=0\n    local len=0\n    while [ $len -ne $n ]; do\n        tri=$(( $i * ($i + 1) / 2 ))\n        len=${#tri}\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(($i*($i+1)/2))\n        index=$i\n        i=$(($i+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=1\n    while [ $len -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n        len=${#t}\n    done\n    echo $i",
    "    # Write your code here\n    # Return the index of the smallest triangular number with n digits\n    n=$1\n    i=1\n    while true; do\n        if [ $(($i*($i+1)/2)) -gt $(($(echo \"10^$n\" | bc))) ]; then\n            echo $i\n            break\n        fi\n        i=$(($i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    if [ $1 -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"$(($(find_Index $(($1-1)))+1))\"\n    fi",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -ne $n ]\n    do\n        t=$(($i*($i+1)/2))\n        i=$(($i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=1\n    while [ $len -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n        len=${#t}\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i*($i+1)/2 ))\n        i=$(( $i+1 ))\n    done\n    echo $(( $i-1 ))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=1\n    while [ $len -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n        len=${#t}\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(($sum + $i))\n        i=$(($i + 1))\n    done\n    echo $((i - 1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ $n -gt ${#sum} ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -lt $n ]; do\n        t=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(($sum+$i))\n        i=$(($i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local t=0\n    local count=0\n    while [ $count -lt $n ]\n    do\n        t=$(( $i * ($i + 1) / 2 ))\n        count=${#t}\n        ((i++))\n    done\n    echo $((i - 1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$(( $index + 1 ))\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ( $i + 1 ) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local index=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $n ]; do\n        ((index++))\n        ((triangular_number+=index))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        ((i++))\n    done\n    echo $((i - 1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        n=$(( ${#sum} ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $((sum)) ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -lt $n ]; do\n        t=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local j=1\n    local k=1\n    while [ $k -lt $n ]\n    do\n        k=$(($i*($i+1)/2))\n        i=$(($i+1))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$(( i * (i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "  local n=$1\n  local i=1\n  local sum=0\n  while [ $((10**(n-1))) -gt $sum ]; do\n    sum=$((i*(i+1)/2))\n    i=$((i+1))\n  done\n  echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    while true; do\n        if [[ ${#t} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n        ((t+=i))\n    done",
    "    local n=$1\n    local index=1\n    local triangular_number=1\n    local digits=1\n    while [ $digits -lt $n ]\n    do\n        index=$((index+1))\n        triangular_number=$((triangular_number+index))\n        digits=$(echo $triangular_number | wc -c)\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $((sum)) ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ $sum -lt $n ]]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local l=1\n    while [ $l -ne $n ]\n    do\n        t=$((t+i))\n        l=${#t}\n        i=$((i+1))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=0\n    while [[ ${#t} -lt $n ]]; do\n        t=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $((sum)) ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ $((10**$n)) -gt $sum ]\n\tdo\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]\n    do\n        sum=$(( $i*($i+1)/2 ))\n        i=$(( $i+1 ))\n    done\n    echo $(( $i-1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum + i))\n        i=$((i + 1))\n    done\n    echo $((i - 1))",
    "    if [ $1 -eq 1 ]\n    then\n        echo \"1\"\n        return\n    fi\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/l(10)\" | bc -l)\n    # Find the number of digits in the number\n    digits=$(echo \"l($1)/",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -lt $n ]; do\n        t=$(( $i * ($i + 1) / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(($sum+$i))\n        i=$(($i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Invalid input\"\n        return\n    fi\n\n    # Initialize index\n    index=1\n\n    # Initialize triangular number\n    tri_num=1\n\n    # Find the index of the triangular number\n    while [[ ${#tri_num} -lt $1 ]]; do\n        index=$((index+1))\n        tri_num=$((tri_num+index))\n    done\n\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local triangular_number=1\n    while true; do\n        local number_of_digits=$(echo $triangular_number | wc -c)\n        if [ $number_of_digits -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n        triangular_number=$((triangular_number+i))\n    done",
    "    local n=$1\n    local i=1\n    local triangular=0\n    while [ ${#triangular} -lt $n ]\n    do\n        triangular=$((triangular+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    local index=0\n    while [ $(echo \"$triangular_number < 10^$n\" | bc) -eq 1 ]; do\n        triangular_number=$(echo \"$triangular_number + $i\" | bc)\n        i=$(echo \"$i + 1\" | bc)\n        index=$(echo \"$index + 1\" | bc)\n    done\n    echo $index",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local sum=1\n    while [ ${#sum} -lt $n ]\n    do\n        i=$((i+1))\n        sum=$((sum+i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((sum+i))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$((sum+i))\n        n=$((n-1))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local n=$1\n    local i=1\n    local sum=1\n    while [ ${#sum} -lt $n ]; do\n        ((i++))\n        ((sum+=i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 2 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 3 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 4 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 5 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 6 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 7 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 8 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 9 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 10 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 11 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 12 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 13 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi\n\n    if [ $1 -eq 14 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        exit 1\n    fi",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]\n        then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $sum + $i ))\n        local num_digits=$(echo $sum | wc -c)\n        if [ $num_digits -eq $n ]\n        then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "  local n=$1\n  local i=1\n  local t=1\n  while true; do\n    if [ ${#t} -eq $n ]; then\n      echo $i\n      break\n    fi\n    i=$((i+1))\n    t=$((t+i))\n  done",
    "    local n=$1\n    local i=1\n    local t=0\n    while true; do\n        t=$((t+i))\n        if [[ $t -gt $((10**(n-1))) ]]; then\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=0\n    while [ $len -ne $n ]; do\n        t=$(( $i * ($i + 1) / 2 ))\n        len=${#t}\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        ((i++))\n    done\n    echo $((i - 2))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $sum + $i ))\n        if [ ${#sum} -eq $n ]\n        then\n            echo $i\n            break\n        fi\n        (( i++ ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local triangle=0\n    local digits=0\n    while [ $digits -lt $n ]; do\n        triangle=$((triangle+i))\n        digits=${#triangle}\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local triangle=0\n    while [[ ${#triangle} -lt $n ]]; do\n        triangle=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -ne $n ]; do\n        t=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        (( i++ ))\n    done",
    "    local n=$1\n    local i=1\n    local t=0\n    local l=0\n    while [ $l -lt $n ]\n    do\n        t=$(( $i * ($i + 1) / 2 ))\n        l=${#t}\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "  local n=$1\n  local i=1\n  local t=1\n  local len=0\n  while [ $len -lt $n ]; do\n    let t=t+i\n    let i=i+1\n    len=${#t}\n  done\n  echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$(( $index + 1 ))\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local tri=0\n    local digits=0\n    while [ $digits -lt $n ]\n    do\n        tri=$(( $i * ($i + 1) / 2 ))\n        digits=$(echo $tri | wc -c)\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(($sum + $i))\n        i=$(($i + 1))\n    done\n    echo $((i - 2))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    if [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    else\n        local index=1\n        local triangular_number=1\n        while [[ ${#triangular_number} -ne $1 ]]; do\n            ((index++))\n            triangular_number=$((index*(index+1)/2))\n        done\n        echo \"$index\"\n    fi",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]\n    do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt $sum ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((sum)) -lt $((10**(n-1))) ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "  local n=$1\n  local i=1\n  local tri=0\n  while true; do\n    tri=$((i*(i+1)/2))\n    if [[ ${#tri} -eq $n ]]; then\n      echo $i\n      break\n    fi\n    ((i++))\n  done",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal triangular_number=1\n\twhile [ ${#triangular_number} -lt $n ]\n\tdo\n\t\t((i++))\n\t\ttriangular_number=$((i*(i+1)/2))\n\tdone\n\techo $i",
    "    local n=$1\n    local i=1\n    local j=1\n    local k=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        j=$((i+1))\n        k=$((i+2))\n        sum=$((i*j*k))\n        i=$((i+1))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    if [ $1 -lt 1 ]; then\n        echo \"Invalid input\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"3\"\n        return\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"6\"\n        return\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"6\"\n        return\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"28\"\n        return\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"36\"\n        return\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"45\"\n        return\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"55\"\n        return\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"66\"\n        return\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"78\"\n        return\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"91\"\n        return\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"105\"\n        return\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"120\"\n        return\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"136\"\n        return\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"153\"\n        return\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"171\"\n        return\n    fi\n    if [ $1 -eq 17 ]; then\n        echo \"190\"\n        return\n    fi\n    if [ $1 -eq 18 ]; then\n        echo \"210\"\n        return\n    fi\n    if [ $1 -eq 19 ]; then\n        echo \"231\"\n        return\n    fi\n    if [ $1 -eq 20 ]; then\n        echo \"253\"\n        return\n    fi\n    if [ $1 -eq 21 ]; then\n        echo \"276\"\n        return\n    fi\n    if [ $",
    "    local n=$1\n    local i=1\n    local tri=0\n    while [ ${#tri} -lt $n ]; do\n        tri=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ $(( ${#sum} )) -eq $n ]\n        then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    i=1\n    while [ $i -lt $1 ]\n    do\n        i=$((i+1))\n        n=$((i*(i+1)/2))\n        if [ ${#n} -eq $1 ]\n        then\n            echo $i\n            break\n        fi\n    done",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    local number_of_digits=0\n    while [ $number_of_digits -ne $n ]\n    do\n        triangular_number=$((triangular_number+i))\n        number_of_digits=${#triangular_number}\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local tri=0\n    while [ ${#tri} -lt $n ]; do\n        tri=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(($sum+$i))\n        len=$(echo $sum | wc -c)\n        if [ $len -eq $n ]\n        then\n            echo $i\n            break\n        fi\n        i=$(($i+1))\n    done",
    "    local n=$1\n    local i=1\n    local t=1\n    while [[ ${#t} -lt $n ]]; do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -ne $n ]\n    do\n        t=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(($sum+$i))\n        index=$(($index+1))\n        i=$(($i+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [[ $sum -lt $n ]]; do\n        sum=$((i*(i+1)/2))\n        index=$i\n        i=$((i+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(($sum+$i))\n        i=$(($i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local index=1\n    local triangular=0\n    while [ ${#triangular} -lt $n ]\n    do\n        ((triangular+=i))\n        ((i++))\n        ((index++))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $((sum)) ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]\n    do\n        sum=$(( $sum + $i ))\n        local digits=$(echo $sum | wc -c)\n        if [ $digits -eq $n ]\n        then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "  local n=$1\n  local i=1\n  local sum=0\n  while [ $((10**n)) -gt $((sum)) ]; do\n    sum=$((sum+i))\n    i=$((i+1))\n  done\n  echo $((i-1))",
    "  local n=$1\n  local i=1\n  local sum=0\n  while [ $sum -lt $n ]; do\n    sum=$((i*(i+1)/2))\n    i=$((i+1))\n  done\n  echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    if [ $1 -lt 1 ]; then\n        echo \"Please enter a positive integer\"\n        return\n    fi\n    i=1\n    j=1\n    while [ ${#j} -lt $1 ]; do\n        i=$((i+1))\n        j=$((i*(i+1)/2))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        index=$((index+1))\n        i=$((i+1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]\n    do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i"
  ]
}
{
  "name": "mbpp_584_find_adverbs",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the first adverb ending with ly and its positions in a given string.\n#\n# $1 is a string\nfind_adverbs() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_adverbs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Clearly, he has no excuse for such behavior.\") = \"0-7: Clearly\" ]]\n    [[ $(candidate \"Please handle the situation carefuly\") = \"28-36: carefuly\" ]]\n    [[ $(candidate \"Complete the task quickly\") = \"18-25: quickly\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local string=\"$1\"\n  local adverbs=$(echo \"$string\" | grep -o -E '\\w+ly' | sort -u)\n  local adverb\n  for adverb in $adverbs; do\n    echo \"$adverb\"\n    echo \"$string\" | grep -o -E -b \"$adverb\" | cut -d':' -f1\n  done",
    "  local string=\"$1\"\n  local regex='\\b[a-zA-Z]+ly\\b'\n  local adverb\n  local position\n  while [[ $string =~ $regex ]]; do\n    adverb=\"${BASH_REMATCH[0]}\"\n    position=\"${BASH_REMATCH[1]}\"\n    echo \"$adverb: $position\"\n    string=\"${string:position}\"\n  done",
    "  echo \"$1\" | grep -o -E '\\w+ly'",
    "  echo \"$1\" | grep -E -o '\\w+ly' | grep -E -n '\\w+ly'",
    "  echo \"$1\" | grep -o -n -i -E '\\b[a-z]{2,}ly\\b'",
    "    echo \"$1\" | grep -E -o '\\w+ly'",
    "  local string=\"$1\"\n  local adverb\n  local position\n  local count=0\n\n  while read -r adverb; do\n    position=$(grep -b -o \"$adverb\" <<< \"$string\" | cut -d: -f1)\n    echo \"$adverb: $position\"\n    ((count++))\n  done < <(grep -o '\\w\\+ly' <<< \"$string\")\n\n  if [[ $count -eq 0 ]]; then\n    echo \"No adverbs found.\"\n  fi",
    "  echo \"$1\" | grep -o -E '\\w+ly' | tr '\\n' ' '",
    "  echo \"$1\" | grep -o -E '\\w+ly' | grep -n ''",
    "  echo \"$1\" | grep -o -E '\\w+ly' | grep -n -E '\\w+ly'",
    "  echo \"$1\" | grep -o -E '\\w+ly' | tr '\\n' ' '",
    "  echo \"$1\" | grep -o -E '\\w+ly' | grep -o -E '^\\w+'",
    "  echo \"$1\" | grep -Eo '\\b[^ ]+ly\\b' | sed 's/ly//g'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -n 'ly$'",
    "  echo \"$1\" | grep -o -E '\\w+ly' | tr '\\n' ' '\n  echo\n  echo \"$1\" | grep -o -E -b '\\w+ly' | tr '\\n' ' '\n  echo",
    "  echo \"$1\" | grep -o -E '\\w+ly'",
    "    echo \"$1\" | grep -o -E '\\w+ly'",
    "  local string=\"$1\"\n  local regex=\"ly$\"\n  local adverbs=$(echo \"$string\" | grep -oE \"\\w+$regex\")\n  local adverb_positions=$(echo \"$string\" | grep -oE -b \"\\w+$regex\" | cut -d: -f1)\n  echo \"$adverbs\"\n  echo \"$adverb_positions\"",
    "  echo \"$1\" | grep -o -E '\\w+ly' | grep -o -E '^\\w+'",
    "  local string=\"$1\"\n  local adverbs=()\n  local adverb_positions=()\n  local regex='[a-zA-Z]+ly'\n  while [[ $string =~ $regex ]]; do\n    adverbs+=(${BASH_REMATCH[0]})\n    adverb_positions+=(${BASH_REMATCH_START[0]})\n    string=${string:${BASH_REMATCH_END[0]}}\n  done\n  echo \"adverbs: ${adverbs[@]}\"\n  echo \"adverb positions: ${adverb_positions[@]}\""
  ]
}
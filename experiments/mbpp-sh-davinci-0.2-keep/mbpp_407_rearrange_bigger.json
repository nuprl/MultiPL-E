{
  "name": "mbpp_407_rearrange_bigger",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to create the next bigger number by rearranging the digits of a given number.\n#\n# $1 is an integer\nrearrange_bigger() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    rearrange_bigger \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\") = \"21\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"102\") = \"120\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i temp=0\n  local -i temp2=0\n  local -i temp3=0\n  local -i temp4=0\n  local -i temp5=0\n  local -i temp6=0\n  local -i temp7=0\n  local -i temp8=0\n  local -i temp9=0\n  local -i temp10=0\n  local -i temp11=0\n  local -i temp12=0\n  local -i temp13=0\n  local -i temp14=0\n  local -i temp15=0\n  local -i temp16=0\n  local -i temp17=0\n  local -i temp18=0\n  local -i temp19=0\n  local -i temp20=0\n  local -i temp21=0\n  local -i temp22=0\n  local -i temp23=0\n  local -i temp24=0\n  local -i temp25=0\n  local -i temp26=0\n  local -i temp27=0\n  local -i temp28=0\n  local -i temp29=0\n  local -i temp30=0\n  local -i temp31=0\n  local -i temp32=0\n  local -i temp33=0\n  local -i temp34=0\n  local -i temp35=0\n  local -i temp36=0\n  local -i temp37=0\n  local -i temp38=0\n  local -i temp39=0\n  local -i temp40=0\n  local -i temp41=0\n  local -i temp42=0\n  local -i temp43=0\n  local -i temp44=0\n  local -i temp45=0\n  local -i temp46=0\n  local -i temp47=0\n  local -i temp48=0\n  local -i temp49=0\n  local -i temp50=0\n  local -i temp51=0\n  local -i temp52=0\n  local -i temp53=0\n ",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local digit=0\n  local digit_next=0\n  local number_next=0\n  local number_next_min=0\n  local number_next_min_index=0\n  local number_next_min_digit=0\n  local number_next_min_digit_next=0\n  local number_next_min_digit_next_index=0\n  local number_next_min_digit_next_index_digit=0\n  local number_next_min_digit_next_index_digit_next=0\n  local number_next_min_digit_next_index_digit_next_index=0\n  local number_next_min_digit_next_index_digit_next_index_digit=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit_next=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit_next_index=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit_next_index_digit=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit_next_index_digit_next=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit_next_index_digit_next_index=0\n  local number_next_min_digit_next_index_digit_next_index_digit_next_index_digit_next_index_digit_next_index_digit=0\n  local number_next_min_",
    "  local -i num=$1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger=0\n  local -i digit_count=0\n  local -i digit_index=0\n  local -i next_bigger_index=0\n  local -i next_bigger_digit=0\n  local -i next_bigger_digit_index=0\n  local -i next_bigger_digit_count=0\n  local -i next_bigger_digit_index_count=0\n  local -i next_bigger_digit_index_count_digit=0\n  local -i next_bigger_digit_index_count_digit_index=0\n  local -i next_bigger_digit_index_count_digit_index_count=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count_digit=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count_digit_index=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count_digit_index_count=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count_digit_index_count_digit=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count_digit_index_count_digit_index=0\n  local -i next_bigger_digit_index_count_digit_index_count_digit_index_count_digit_index_count_digit_index_count=0\n  local -i next_bigger_digit_index_count_digit_index_count_",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i\n    local j\n    local k\n    local temp\n    local temp_number\n    local temp_number_array\n    local temp_number_length\n    local temp_number_array_length\n    local temp_number_array_length_last\n    local temp_number_array_length_last_minus_one\n    local temp_number_array_length_last_minus_two\n    local temp_number_array_length_last_minus_three\n    local temp_number_array_length_last_minus_four\n    local temp_number_array_length_last_minus_five\n    local temp_number_array_length_last_minus_six\n    local temp_number_array_length_last_minus_seven\n    local temp_number_array_length_last_minus_eight\n    local temp_number_array_length_last_minus_nine\n    local temp_number_array_length_last_minus_ten\n    local temp_number_array_length_last_minus_eleven\n    local temp_number_array_length_last_minus_twelve\n    local temp_number_array_length_last_minus_thirteen\n    local temp_number_array_length_last_minus_fourteen\n    local temp_number_array_length_last_minus_fifteen\n    local temp_number_array_length_last_minus_sixteen\n    local temp_number_array_length_last_minus_seventeen\n    local temp_number_array_length_last_minus_eighteen\n    local temp_number_array_length_last_minus_nineteen\n    local temp_number_array_length_last_minus_twenty\n    local temp_number_array_length_last_minus_twenty_one\n    local temp_number_array_length_last_minus_twenty_two\n    local temp_number_array_length_last_minus_twenty_three\n    local temp_number_array_length_last_minus_twenty_four\n    local temp_number_array_length",
    "  local -i num=$1\n  local -i digits=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "    local -i i j k\n    local -a a\n    local -i n=$1\n    local -i m\n    local -i l=${#n}\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i",
    "    local -i num=$1\n    local -i i=0\n    local -a digits\n    local -i n_digits=0\n    local -i digit=0\n    local -i next_digit=0\n    local -i next_bigger_num=0\n    local -i next_bigger_num_digits=0\n    local -i next_bigger_num_digit=0\n    local -i next_bigger_num_digit_index=0\n    local -i next_bigger_num_digit_index_tmp=0\n    local -i next_bigger_num_digit_tmp=0\n    local -i next_bigger_num_digit_tmp_index=0\n    local -i next_bigger_num_digit_tmp_index_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_index=0\n    local -i next_bigger_num_digit_tmp_tmp_index_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_index=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_index_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp_index=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp_index_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp_tmp_index=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp_tmp_index_tmp=0\n    local -i next_bigger_num_digit_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local -i next_bigger",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=($(echo $num | grep -o .))\n    local i\n    local j\n    local k\n    local tmp\n    local flag=0\n\n    for ((i=num_len-1; i>0; i--)); do\n        if [[ ${num_arr[i]} -gt ${num_arr[i-1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 0 ]]; then\n        echo \"No bigger number\"\n        return\n    fi\n\n    for ((j=num_len-1; j>=i; j--)); do\n        if [[ ${num_arr[j]} -gt ${num_arr[i-1]} ]]; then\n            tmp=${num_arr[i-1]}\n            num_arr[i-1]=${num_arr[j]}\n            num_arr[j]=$tmp\n            break\n        fi\n    done\n\n    for ((k=i; k<=num_len-1; k++)); do\n        for ((j=k+1; j<=num_len-1; j++)); do\n            if [[ ${num_arr[k]} -gt ${num_arr[j]} ]]; then\n                tmp=${num_arr[k]}\n                num_arr[k]=${num_arr[j]}\n                num_arr[j]=$tmp\n            fi\n        done\n    done\n\n    echo ${num_arr[@]}",
    "    local -i num=\"$1\"\n    local -i len=\"${#num}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i",
    "  local -i num=\"$1\"\n  local -i digit\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i result\n  local -i digits=0\n  local -i digits_max=10\n  local -i digits_array[$digits_max]\n  local -i digits_array_sorted[$digits_max]\n  local -i digits_array_sorted_index[$digits_max]\n  local -i digits_array_sorted_index_max=0\n  local -i digits_array_sorted_index_min=0\n  local -i digits_array_sorted_index_min_value=0\n  local -i digits_array_sorted_index_min_value_index=0\n  local -i digits_array_sorted_index_min_value_index_prev=0\n  local -i digits_array_sorted_index_min_value_index_prev_value=0\n  local -i digits_array_sorted_index_min_value_index_prev_value_index=0\n  local -i digits_array_sorted_index_min_value_index_prev_value_index_prev=0\n  local -i digits_array_sorted_index_min_value_index_prev_value_index_prev_value=0\n  local -i digits_array_sorted_index_min_value_index_prev_value_index_prev_value_index=0\n  local -i digits_array_sorted_index_min_value_index_prev_value_index_prev_value_index_prev=0\n  local -i digits_array_sorted_index_min_value_index_prev_value_index_prev_value_index_prev_",
    "    local -i number=$1\n    local -i length=${#number}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i ndigits=0\n  local -i ndigits_max=0\n  local -i ndigits_min=0\n  local -i ndigits_min_index=0\n  local -i ndigits_min_index_prev=0\n  local -i ndigits_min_prev=0\n  local -i ndigits_prev=0\n  local -i ndigits_prev_prev=0\n  local -i ndigits_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i ndigits_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local temp_array_length=0\n  local temp_array_index=0\n  local temp_array_index_length=0\n  local temp_array_index_length_length=0\n  local temp_array_index_length_length_length=0\n  local temp_array_index_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=${#num}\n  local -i digits[$len]\n  local -i next_digits[$len]\n  local -i next_num_digits[$len]\n  local -i next_num_len=0\n  local -i next_num_i=0\n  local -i next_num_j=0\n  local -i next_num_k=0\n  local -i next_num_digit\n  local -i next_num_next_digit\n  local -i next_num_next_num\n  local -i next_num_next_num_len=0\n  local -i next_num_next_num_i=0\n  local -i next_num_next_num_j=0\n  local -i next_num_next_num_k=0\n  local -i next_num_next_num_digit\n  local -i next_num_next_num_next_digit\n  local -i next_num_next_num_next_num\n  local -i next_num_next_num_next_num_len=0\n  local -i next_num_next_num_next_num_i=0\n  local -i next_num_next_num_next_num_j=0\n  local -i next_num_next_num_next_num_k=0\n  local -i next_num_next_num_next_num_digit\n  local -i next_num_next_num_next_num_next_digit\n  local -i next_num_next_num_next_num_next_num\n  local -i next_num_next_num_next_num_next_num_len=0\n  local -i next_num_next_num_next_num_next_num_i=0\n  local -i next_num_next_num_next_num_next_num_j=0\n  local -i next_",
    "  local -i n=\"$1\"\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x",
    "  local -i num=\"$1\"\n  local -i num_len=\"${#num}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_max=0\n    local -i n_arr_max_idx=0\n    local -i n_arr_max_idx_prev=0\n    local -i n_arr_max_idx_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_arr_max_idx_prev_prev_prev_prev_prev_prev_prev_",
    "  local -i i j k\n  local -a digits\n  local -i n=$1\n  local -i len=${#n}\n  local -i min=10**$len\n  local -i max=0\n  local -i min_i=0\n  local -i max_i=0\n  local -i min_j=0\n  local -i max_j=0\n\n  for ((i=0; i<len; i++)); do\n    digits[i]=$((n%10))\n    n=$((n/10))\n  done\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if ((digits[i]>digits[j])); then\n        ((k=digits[i]))\n        ((digits[i]=digits[j]))\n        ((digits[j]=k))\n        k=0\n        for ((k=0; k<len; k++)); do\n          ((k==0)) && k=${digits[k]} || k=$k${digits[k]}\n        done\n        if ((k<min)); then\n          ((min=k))\n          ((min_i=i))\n          ((min_j=j))\n        fi\n        if ((k>max)); then\n          ((max=k))\n          ((max_i=i))\n          ((max_j=j))\n        fi\n        ((k=digits[i]))\n        ((digits[i]=digits[j]))\n        ((digits[j]=k))\n      fi\n    done\n  done\n\n  if ((min==10**$len)); then\n    echo \"Not possible\"\n  else\n    echo \"Next smaller number: $min (swap ${digits[min_i]} and ${digits[min_j]})\"\n    echo \"Next bigger number: $max (swap ${digits[max_i]} and ${digits[max_j]})\"\n  fi",
    "  local number=\"$1\"\n  local digits=\"$(echo \"$number\" | sed 's/./& /g')\"\n  local digit_count=\"$(echo \"$digits\" | wc -w)\"\n  local i=1\n  local j=0\n  local k=0\n  local next_bigger_number=\"\"\n  local next_bigger_number_found=false\n  local temp_number=\"\"\n  local temp_number_digits=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count=\"\"\n  local temp_number_digit_count",
    "  local -i i=${#1}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0",
    "  local number=$1\n  local length=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n\n  for (( i=0; i<length; i++ )); do\n    for (( j=i+1; j<length; j++ )); do\n      if [[ ${number:$i:1} -lt ${number:$j:1} ]]; then\n        temp=${number:$i:1}\n        number=${number:0:$i}${number:$j:1}${number:$((i+1)):$((j-i-1))}${temp}${number:$((j+1))}\n        break\n      fi\n    done\n    if [[ $j -ne $((length)) ]]; then\n      break\n    fi\n  done\n\n  if [[ $j -eq $((length)) ]]; then\n    echo \"Not possible\"\n    return\n  fi\n\n  for (( i=0; i<length; i++ )); do\n    for (( j=i+1; j<length; j++ )); do\n      if [[ ${number:$i:1} -gt ${number:$j:1} ]]; then\n        temp=${number:$i:1}\n        number=${number:0:$i}${number:$j:1}${number:$((i+1)):$((j-i-1))}${temp}${number:$((j+1))}\n      fi\n    done\n  done\n\n  for (( i=0; i<length; i++ )); do\n    result=$((result*10+${number:$i:1}))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i tmp=0\n  local -i min=0\n  local -i min_idx=0\n  local -i max=0\n  local -i max_idx=0\n  local -i arr=()\n  local -i res=0\n\n  # Convert integer to array of digits\n  while (( num > 0 )); do\n    arr+=(num % 10)\n    num /= 10\n  done\n\n  # Find the first digit from the end that is smaller than the digit to its right\n  for (( i = len - 1; i > 0; i-- )); do\n    if (( arr[i] > arr[i - 1] )); then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible\n  if (( i == 0 )); then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above which is greater than the digit found above\n  min=arr[i]\n  min_idx=i\n  for (( j = i + 1; j < len; j++ )); do\n    if (( arr[j] < min && arr[j] > arr[i - 1] )); then\n      min=arr[j]\n      min_idx=j\n    fi\n  done\n\n  # Swap the above two digits\n  tmp=arr[i - 1]\n  arr[i - 1]=arr[min_idx]\n  arr[min_idx]=tmp\n\n  # Sort the digits to the right of the digit found above in ascending order\n  for (( i = i; i < len - 1; i++ )); do\n    max=arr[i]\n    max_idx=i\n    for (( j = i + 1; j < len; j++ )); do\n      if (( arr[j] > max )); then\n        max=arr[j]\n        max_idx=j\n      fi\n    done\n    tmp=arr[i]\n    arr[i]=arr[max_idx]\n    arr[max_",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n\n  # Convert the number to an array of digits\n  for (( i=0; i<number_length; i++ )); do\n    number_array[i]=${number:$i:1}\n  done\n\n  # Find the first digit that is less than the digit to its right\n  for (( i=0; i<number_length-1; i++ )); do\n    if (( number_array[i] < number_array[i+1] )); then\n      break\n    fi\n  done\n\n  # If no such digit exists, the number is already the largest possible\n  if (( i == number_length-1 )); then\n    echo \"No larger number exists\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the pivot that is greater than the pivot\n  for (( j=i+1; j<number_length; j++ )); do\n    if (( number_array[j] > number_array[i] )); then\n      temp=${number_array[i]}\n      number_array[i]=${number_array[j]}\n      number_array[j]=$temp\n      break\n    fi\n  done\n\n  # Sort the digits to the right of the pivot\n  for (( j=i+1; j<number_length; j++ )); do\n    for (( k=j+1; k<number_length; k++ )); do\n      if (( number_array[j] > number_array[k] )); then\n        temp=${number_array[j]}\n        number_array[j]=${number_array[k]}\n        number_array[k]=$temp\n      fi\n    done\n  done\n\n  # Convert the array back to a number\n  for (( i=0; i<number_length; i++ )); do\n    result=$(( result*10 + number_array[i] ))\n  done\n\n  echo $result",
    "  local number=$1\n  local length=${#number}\n  local i=0\n  local j=0\n  local digits=()\n  local digit=0\n  local temp=0\n  local temp_number=0\n  local temp_length=0\n\n  # split the number into digits\n  for (( i=0; i<length; i++ )); do\n    digits[i]=${number:$i:1}\n  done\n\n  # find the first digit that is smaller than the digit to its right\n  for (( i=0; i<length-1; i++ )); do\n    if (( digits[i] < digits[i+1] )); then\n      break\n    fi\n  done\n\n  # if no such digit exists, the number is the largest possible\n  if (( i == length-1 )); then\n    echo -1\n    return\n  fi\n\n  # find the smallest digit to the right of the pivot that is greater than the pivot\n  for (( j=i+1; j<length; j++ )); do\n    if (( digits[j] > digits[i] )); then\n      if (( digit == 0 || digits[j] < digits[digit] )); then\n        digit=$j\n      fi\n    fi\n  done\n\n  # swap the pivot with the smallest digit to its right\n  temp=${digits[i]}\n  digits[i]=${digits[digit]}\n  digits[digit]=$temp\n\n  # sort the digits to the right of the pivot in ascending order\n  for (( i=i+1; i<length; i++ )); do\n    for (( j=i+1; j<length; j++ )); do\n      if (( digits[j] < digits[i] )); then\n        temp=${digits[i]}\n        digits[i]=${digits[j]}\n        digits[j]=$temp\n      fi\n    done\n  done\n\n  # join the digits into a number\n  for (( i=0; i<length; i++ )); do\n    temp_number=$temp_number${digits[i]}\n  done\n\n  # remove leading zeros\n  temp_length=${#temp_number}\n  for (( i=0; i<temp_length; i++ )); do",
    "    local num=$1\n    local num_len=${#num}\n    local i\n    local j\n    local k\n    local temp\n    local temp_num\n    local temp_num_len\n    local temp_num_len_diff\n    local temp_num_len_diff_min\n    local temp_num_len_diff_min_num\n    local temp_num_len_diff_min_num_len\n    local temp_num_len_diff_min_num_len_diff\n    local temp_num_len_diff_min_num_len_diff_min\n    local temp_num_len_diff_min_num_len_diff_min_num\n    local temp_num_len_diff_min_num_len_diff_min_num_len\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len_diff\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len_diff_min\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len_diff_min_num\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len\n    local temp_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len_diff_min_num_len_diff\n    local temp_num_len_diff_min_num_len_diff_min_num_",
    "    local -i num=$1\n    local -i num_len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i temp=0\n    local -i temp_num=0\n    local -i temp_num_len=0\n    local -i temp_num_len_diff=0\n    local -i temp_num_len_diff_len=0\n    local -i temp_num_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_len=0\n    local -i temp_num_len_diff_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_len_diff_len=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff_len=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff_len=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff_len=0\n    local -i temp_num_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff_len_diff=0\n    local -i temp_num_len_diff_len_diff_",
    "  local -i n=$1\n  local -i d\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i Aa\n  local -i Bb\n  local -i Cc\n  local -i Dd\n  local -i Ee\n  local -i Ff\n  local -i Gg\n  local -i Hh\n  local -i Ii\n  local -i Jj\n  local -i K",
    "  local n=$1\n  local n_len=${#n}\n  local n_arr=()\n  local i\n  local j\n  local tmp\n  local tmp_arr=()\n  local tmp_len\n  local tmp_str\n  local tmp_str_len\n  local tmp_str_arr=()\n  local tmp_str_arr_len\n  local tmp_str_arr_last\n  local tmp_str_arr_last_idx\n  local tmp_str_arr_last_idx_2\n  local tmp_str_arr_last_idx_2_val\n  local tmp_str_arr_last_idx_2_val_idx\n  local tmp_str_arr_last_idx_2_val_idx_2\n  local tmp_str_arr_last_idx_2_val_idx_2_val\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2_val\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2_val_idx\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2_val_idx_2\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2_val_idx_2_val\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2_val_idx_2_val_idx\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx_2_val_idx_2_val_idx_2\n  local tmp_str_arr_last_idx_2_val_idx_2_val_idx",
    "    local -i n=$1\n    local -i d=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i tmp=0\n  local -i len=${#num}\n  local -i arr=()\n  local -i res=0\n\n  # convert number to array\n  while [ $num -gt 0 ]; do\n    arr[$i]=$((num%10))\n    num=$((num/10))\n    ((i++))\n  done\n\n  # find the first number that is smaller than the number to its right\n  for ((i=len-1; i>0; i--)); do\n    if [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n      break\n    fi\n  done\n\n  # if no such number exists, return -1\n  if [ $i -eq 0 ]; then\n    echo -1\n    return\n  fi\n\n  # find the smallest number to the right of the number found above that is greater than it\n  tmp=${arr[$i]}\n  for ((j=i+1; j<len; j++)); do\n    if [ ${arr[$j]} -gt ${arr[$((i-1))]} ] && [ ${arr[$j]} -lt $tmp ]; then\n      tmp=${arr[$j]}\n    fi\n  done\n\n  # swap the two numbers\n  arr[$i]=${arr[$((i-1))]}\n  arr[$((i-1))]=$tmp\n\n  # sort the numbers to the right of the number found above in ascending order\n  for ((i=i; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [ ${arr[$i]} -gt ${arr[$j]} ]; then\n        tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n      fi\n    done\n  done\n\n  # convert array to number\n  for ((i=0; i<len; i++)); do\n    res=$((res*10+arr[$i]))\n  done\n\n  echo $res",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=($(echo $num | grep -o .))\n    local i=0\n    local j=0\n    local tmp=0\n    local found=0\n\n    for ((i=0; i<$num_len; i++)); do\n        for ((j=i+1; j<$num_len; j++)); do\n            if [[ ${num_arr[$i]} -lt ${num_arr[$j]} ]]; then\n                tmp=${num_arr[$i]}\n                num_arr[$i]=${num_arr[$j]}\n                num_arr[$j]=$tmp\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 1 ]]; then\n            break\n        fi\n    done\n\n    if [[ $found -eq 1 ]]; then\n        for ((i=0; i<$num_len; i++)); do\n            echo -n \"${num_arr[$i]}\"\n        done\n        echo\n    else\n        echo \"Not found\"\n    fi",
    "    local -i num=\"$1\"\n    local -i len=\"${#num}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max=0\n  local -i next_num_max=0\n  local -i next_num_max_digit_count=0\n  local -i next_num_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local",
    "    local number=\"$1\"\n    local -a digits\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_str=''\n    local -i n_arr_sorted_str_len=0\n    local -i n_arr_sorted_str_arr=()\n    local -i n_arr_sorted_str_arr_len=0\n    local -i n_arr_sorted_str_arr_sorted=()\n    local -i n_arr_sorted_str_arr_sorted_len=0\n    local -i n_arr_sorted_str_arr_sorted_str=''\n    local -i n_arr_sorted_str_arr_sorted_str_len=0\n    local -i n_arr_sorted_str_arr_sorted_str_arr=()\n    local -i n_arr_sorted_str_arr_sorted_str_arr_len=0\n    local -i n_arr_sorted_str_arr_sorted_str_arr_sorted=()\n    local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_len=0\n    local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str=''\n    local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str_len=0\n    local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str_arr=()\n    local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str_arr_len=0\n    local -i n_arr_sorted_str_arr_sorted",
    "    local -i num=\"$1\"\n    local -i digit\n    local -i next_digit\n    local -i next_bigger_num=0\n    local -i next_bigger_num_digit\n    local -i next_bigger_num_digit_power=1\n    local -i digit_power=1\n    local -i digit_count=0\n    local -i next_digit_count=0\n    local -i next_digit_power=1\n    local -i next_digit_found=0\n    local -i next_digit_found_count=0\n    local -i next_digit_found_power=1\n    local -i next_digit_found_digit\n    local -i next_digit_found_digit_power=1\n    local -i next_digit_found_digit_count=0\n    local -i next_digit_found_digit_count_power=1\n    local -i next_digit_found_digit_count_power_count=0\n    local -i next_digit_found_digit_count_power_count_power=1\n    local -i next_digit_found_digit_count_power_count_power_count=0\n    local -i next_digit_found_digit_count_power_count_power_count_power=1\n    local -i next_digit_found_digit_count_power_count_power_count_power_count=0\n    local -i next_digit_found_digit_count_power_count_power_count_power_count_power=1\n    local -i next_digit_found_digit_count_power_count_power_count_power_count_power_count=0\n    local -i next_digit_found_digit_count_power_count_power_count_power_count_power_count_power=1\n    local -i next_digit_found_digit_count_power_count_power_count_power_count_power_count_power_count=0\n    local -i next_digit_found_digit_count_power_count_power_count_power_count_power_count_power_count_power=1\n    local -i next_digit_",
    "  local n=$1\n  local n_len=${#n}\n  local n_arr=()\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_arr=()\n  local tmp_len=0\n  local tmp_str=''\n  local result=''\n\n  # convert $n to an array\n  for (( i=0; i<n_len; i++ )); do\n    n_arr[i]=${n:$i:1}\n  done\n\n  # find the first digit that is smaller than the digit after it\n  for (( i=0; i<n_len-1; i++ )); do\n    if (( n_arr[i] < n_arr[i+1] )); then\n      break\n    fi\n  done\n\n  # if all digits are in descending order, no bigger number exists\n  if (( i == n_len-1 )); then\n    echo 'no bigger number exists'\n    return 1\n  fi\n\n  # find the smallest digit that is bigger than n_arr[i]\n  for (( j=i+1; j<n_len; j++ )); do\n    if (( n_arr[j] > n_arr[i] )); then\n      if (( j == i+1 )); then\n        tmp=n_arr[j]\n        n_arr[j]=n_arr[i]\n        n_arr[i]=tmp\n        break\n      else\n        if (( n_arr[j] < tmp )); then\n          tmp=n_arr[j]\n          k=j\n        fi\n      fi\n    fi\n  done\n\n  # swap n_arr[i] and n_arr[k]\n  if (( j != i+1 )); then\n    tmp=n_arr[k]\n    n_arr[k]=n_arr[i]\n    n_arr[i]=tmp\n  fi\n\n  # sort the digits after n_arr[i] in ascending order\n  tmp_len=n_len-i-1\n  for (( j=0; j<tmp_len; j++ )); do\n    tmp_arr[j]=n_arr[i+j+1]\n ",
    "  local -i n=$1\n  local -i n_digits=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_min=0\n  local -i n_max=0\n  local -i n_min_index=0\n  local -i n_max_index=0\n  local -i n_min_index_prev=0\n  local -i n_max_index_prev=0\n  local -i n_min_index_prev_prev=0\n  local -i n_max_index_prev_prev=0\n  local -i n_min_index_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev=0\n  local -i n_min_index_prev_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev_prev=0\n  local -i n_min_index_prev_prev_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev_prev_prev=0\n  local -i n_min_index_prev_prev_prev_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev_prev_prev_prev=0\n  local -i n_min_index_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_min_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_min_index",
    "  local -i num=$1\n  local -i digit\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=${#1}\n  local -i num_arr\n  local -i tmp_arr\n  local -i tmp_num\n  local -i tmp_digit\n  local -i tmp_len\n  local -i tmp_i\n  local -i tmp_j\n  local -i tmp_k\n  local -i tmp_arr_len\n  local -i tmp_arr_digit\n  local -i tmp_arr_i\n  local -i tmp_arr_j\n  local -i tmp_arr_k\n  local -i tmp_arr_tmp_num\n  local -i tmp_arr_tmp_digit\n  local -i tmp_arr_tmp_len\n  local -i tmp_arr_tmp_i\n  local -i tmp_arr_tmp_j\n  local -i tmp_arr_tmp_k\n  local -i tmp_arr_tmp_arr_len\n  local -i tmp_arr_tmp_arr_digit\n  local -i tmp_arr_tmp_arr_i\n  local -i tmp_arr_tmp_arr_j\n  local -i tmp_arr_tmp_arr_k\n  local -i tmp_arr_tmp_arr_tmp_num\n  local -i tmp_arr_tmp_arr_tmp_digit\n  local -i tmp_arr_tmp_arr_tmp_len\n  local -i tmp_arr_tmp_arr_tmp_i\n  local -i tmp_arr_tmp_arr_tmp_j\n  local -i tmp_arr_tmp_arr_tmp_k\n  local -i tmp_arr_tmp_arr_tmp_arr_len\n  local -i tmp_arr_tmp_arr_tmp_arr_digit\n  local -i tmp_arr_tmp_arr_tmp_arr_i\n  local -i tmp_arr_tmp_arr_tmp_arr_j\n  local -i tmp_arr_tmp_arr_tmp_arr_k\n  local -i tmp_arr_tmp_arr_tmp_arr_tmp_num\n",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_num=0\n\n  # convert n to array\n  n_len=${#n}\n  for ((i=0; i<n_len; i++)); do\n    n_arr[i]=${n:$i:1}\n  done\n  n_arr_len=${#n_arr[@]}\n\n  # sort n_arr\n  for ((i=0; i<n_arr_len; i++)); do\n    for ((j=i; j<n_arr_len; j++)); do\n      if [[ ${n_arr[i]} -gt ${n_arr[j]} ]]; then\n        k=${n_arr[i]}\n        n_arr[i]=${n_arr[j]}\n        n_arr[j]=$k\n      fi\n    done\n  done\n  n_arr_sorted=(\"${n_arr[@]}\")\n  n_arr_sorted_len=${#n_arr_sorted[@]}\n\n  # find next bigger number\n  for ((i=n_arr_sorted_len-1; i>0; i--)); do\n    if [[ ${n_arr_sorted[i]} -gt ${n_arr_sorted[i-1]} ]]; then\n      l=${n_arr_sorted[i-1]}\n      n_arr_sorted[i-1]=${n_arr_sorted[i]}\n      n_arr_sorted[i]=",
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i t=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=()\n  local -i b=()\n  local -i c=()\n  local -i d=()\n  local -i e=()\n  local -i f=()\n  local -i g=()\n  local -i h=()\n  local -i i=()\n  local -i j=()\n  local -i k=()\n  local -i l=()\n  local -i m=()\n  local -i n=()\n  local -i o=()\n  local -i p=()\n  local -i q=()\n  local -i r=()\n  local -i s=()\n  local -i t=()\n  local -i u=()\n  local -i v=()\n  local -i w=()\n  local -i x=()\n  local -i y=()\n  local -i z=()\n  local -i aa=()\n  local -i bb=()\n  local -i cc=()\n  local -i dd=()\n  local -i ee=()\n  local -i ff=()\n  local -i gg=()\n  local -i hh=()\n  local -i ii=()\n  local -i jj=()\n  local -i kk=()\n  local -i ll=()\n  local -i mm=()\n  local -i nn=()\n  local -i oo=()\n  local -i pp=()\n  local -i qq=()\n  local -i rr=()\n  local -i ss=()\n  local -i tt=()\n  local -i uu=()\n  local -i vv=()\n  local -i ww=()\n  local -i xx=()\n  local -i yy=()",
    "    local -i n=$1\n    local -i n_len=${#n}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_bigger=0\n    local -i n_bigger_len=0\n    local -i n_bigger_len_diff=0\n    local -i n_bigger_len_diff_half=0\n    local -i n_bigger_len_diff_half_ceil=0\n    local -i n_bigger_len_diff_half_floor=0\n    local -i n_bigger_len_diff_half_ceil_ceil=0\n    local -i n_bigger_len_diff_half_ceil_floor=0\n    local -i n_bigger_len_diff_half_floor_ceil=0\n    local -i n_bigger_len_diff_half_floor_floor=0\n    local -i n_bigger_len_diff_half_ceil_ceil_ceil=0\n    local -i n_bigger_len_diff_half_ceil_ceil_floor=0\n    local -i n_bigger_len_diff_half_ceil_floor_ceil=0\n    local -i n_bigger_len_diff_half_ceil_floor_floor=0\n    local -i n_bigger_len_diff_half_floor_ceil_ceil=0\n    local -i n_bigger_len_diff_half_floor_ceil_floor=0\n    local -i n_bigger_len_diff_half_floor_floor_ceil=0\n    local -i n_bigger_len_diff_half_floor_floor_floor=0\n    local -i n_bigger_len_diff_half_ceil_ceil_ceil_ceil=0\n    local -i n_bigger_len_diff_half_ceil_ceil_ceil_floor=0\n    local -i n_bigger_len_diff_half",
    "  local -i num=$1\n  local -i digit\n  local -i i=0\n  local -i j\n  local -i len=${#num}\n  local -a digits=()\n  local -a new_digits=()\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    digits[i++]=$digit\n    num=$(( num / 10 ))\n  done\n\n  for (( i = len - 1; i >= 0; i-- )); do\n    for (( j = i - 1; j >= 0; j-- )); do\n      if (( digits[j] < digits[i] )); then\n        new_digits=( \"${digits[@]:0:j}\" \"${digits[i]}\" \"${digits[j]}\" \"${digits[@]:j+1:i-j-1}\" \"${digits[@]:i+1}\" )\n        echo \"${new_digits[*]}\" | sed 's/ /\\n/g' | sort -n | tr '\\n' ' ' | sed 's/ //g'\n        return\n      fi\n    done\n  done\n\n  echo \"$num\"",
    "    local -i n=$1\n    local -i n_len=${#n}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_arr=()\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_last=0\n    local -i n_arr_sorted_last_idx=0\n    local -i n_arr_sorted_last_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n  local -i qqq=0\n  local -i rrr",
    "    local -i n=$1\n    local -i i=0\n    local -a digits=()\n    local -i n_digits=0\n    local -i tmp=0\n    local -i tmp_i=0\n    local -i tmp_j=0\n    local -i tmp_k=0\n    local -i tmp_l=0\n    local -i tmp_m=0\n    local -i tmp_n=0\n    local -i tmp_o=0\n    local -i tmp_p=0\n    local -i tmp_q=0\n    local -i tmp_r=0\n    local -i tmp_s=0\n    local -i tmp_t=0\n    local -i tmp_u=0\n    local -i tmp_v=0\n    local -i tmp_w=0\n    local -i tmp_x=0\n    local -i tmp_y=0\n    local -i tmp_z=0\n    local -i tmp_aa=0\n    local -i tmp_bb=0\n    local -i tmp_cc=0\n    local -i tmp_dd=0\n    local -i tmp_ee=0\n    local -i tmp_ff=0\n    local -i tmp_gg=0\n    local -i tmp_hh=0\n    local -i tmp_ii=0\n    local -i tmp_jj=0\n    local -i tmp_kk=0\n    local -i tmp_ll=0\n    local -i tmp_mm=0\n    local -i tmp_nn=0\n    local -i tmp_oo=0\n    local -i tmp_pp=0\n    local -i tmp_qq=0\n    local -i tmp_rr=0\n    local -i tmp_ss=0\n    local -i tmp_tt=0\n    local -i tmp_uu=0\n    local -i tmp_vv=0\n    local -i tmp_ww=0\n    local -i tmp_xx=0\n    local -i tmp_yy=0\n    local -i tmp_zz=0\n    local -i tmp_aaa=0\n    local -i tmp_bbb=0\n    local -i tmp_cc",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local number_array_length=${#number_array[@]}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=",
    "  local number=\"$1\"\n  local length=\"${#number}\"\n  local i=0\n  local j=0\n  local temp=0\n  local result=0\n  local found=0\n  local digits=()\n\n  # Create an array of digits\n  for (( i=0; i<length; i++ )); do\n    digits[$i]=${number:$i:1}\n  done\n\n  # Find the first digit that is less than the next digit\n  for (( i=0; i<length-1; i++ )); do\n    if (( ${digits[$i]} < ${digits[$i+1]} )); then\n      found=1\n      break\n    fi\n  done\n\n  # If no digit was found, then the number is already the biggest\n  if (( found == 0 )); then\n    echo \"No bigger number found\"\n    return\n  fi\n\n  # Find the smallest digit that is greater than the current digit\n  temp=${digits[$i]}\n  for (( j=i+1; j<length; j++ )); do\n    if (( ${digits[$j]} > ${digits[$i]} )) && (( ${digits[$j]} < temp )); then\n      temp=${digits[$j]}\n    fi\n  done\n\n  # Swap the digits\n  digits[$i]=$temp\n  digits[$j]=${digits[$i]}\n\n  # Sort the digits after the current digit\n  for (( i=i+1; i<length; i++ )); do\n    for (( j=i+1; j<length; j++ )); do\n      if (( ${digits[$i]} > ${digits[$j]} )); then\n        temp=${digits[$i]}\n        digits[$i]=${digits[$j]}\n        digits[$j]=$temp\n      fi\n    done\n  done\n\n  # Create the result\n  for (( i=0; i<length; i++ )); do\n    result=$(( result * 10 + ${digits[$i]} ))\n  done\n\n  echo $result",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=()\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_num=0\n    local temp_num_len=0\n    local temp_num_arr=()\n    local temp_num_arr_len=0\n    local temp_num_arr_last_index=0\n    local temp_num_arr_last_index_value=0\n    local temp_num_arr_last_index_value_index=0\n    local temp_num_arr_last_index_value_index_value=0\n    local temp_num_arr_last_index_value_index_value_index=0\n    local temp_num_arr_last_index_value_index_value_index_value=0\n    local temp_num_arr_last_index_value_index_value_index_value_index=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index_value=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index_value_index=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index_value_index_value=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n    local temp_num_arr_last_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n    local",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i\n  local j\n  local k\n  local temp\n  local temp_array=()\n  local temp_array_length\n  local temp_array_length_minus_one\n  local temp_array_length_minus_two\n  local temp_array_length_minus_three\n  local temp_array_length_minus_four\n  local temp_array_length_minus_five\n  local temp_array_length_minus_six\n  local temp_array_length_minus_seven\n  local temp_array_length_minus_eight\n  local temp_array_length_minus_nine\n  local temp_array_length_minus_ten\n  local temp_array_length_minus_eleven\n  local temp_array_length_minus_twelve\n  local temp_array_length_minus_thirteen\n  local temp_array_length_minus_fourteen\n  local temp_array_length_minus_fifteen\n  local temp_array_length_minus_sixteen\n  local temp_array_length_minus_seventeen\n  local temp_array_length_minus_eighteen\n  local temp_array_length_minus_nineteen\n  local temp_array_length_minus_twenty\n  local temp_array_length_minus_twenty_one\n  local temp_array_length_minus_twenty_two\n  local temp_array_length_minus_twenty_three\n  local temp_array_length_minus_twenty_four\n  local temp_array_length_minus_twenty_five\n  local temp_array_length_minus_twenty_six\n  local temp_array_length_minus_twenty_seven\n  local temp_array_length_minus_twenty_eight\n  local temp_array_length_minus_twenty_nine\n  local temp_array_length_minus_thirty\n  local temp_array_length_minus_thirty_one\n  local temp_array_length_minus_thirty_two\n  local temp_array_length_minus_thirty_three\n  local temp_array_length_minus_",
    "    local -i num=$1\n    local -i digit\n    local -i i=0\n    local -i j=0\n    local -i len=${#num}\n    local -i arr=()\n    local -i tmp\n    local -i flag=0\n    local -i result=0\n\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        arr[$i]=$digit\n        num=$((num / 10))\n        ((i++))\n    done\n\n    for ((i=len-1; i>0; i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if [ ${arr[$i]} -gt ${arr[$j]} ]; then\n                tmp=${arr[$i]}\n                arr[$i]=${arr[$j]}\n                arr[$j]=$tmp\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 1 ]; then\n            break\n        fi\n    done\n\n    if [ $flag -eq 0 ]; then\n        echo \"No bigger number\"\n        return\n    fi\n\n    for ((i=0; i<len; i++)); do\n        result=$((result * 10 + arr[$i]))\n    done\n\n    echo $result",
    "  local -i n=$1\n  local -i d\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n  local arr=()\n  local arr_sorted=()\n  local arr_sorted_str=''\n  local arr_str=''\n  local arr_str_sorted=''\n  local arr_str_sorted_reversed=''\n  local arr_str_reversed=''\n  local arr_str_reversed_sorted=''\n  local arr_str_reversed_sorted_reversed=''\n  local arr_str_reversed_sorted_reversed_sorted=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=''\n  local arr_str_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=()\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_number=0\n    local temp_number_length=0\n    local temp_number_array=()\n    local temp_number_array_length=0\n    local temp_number_array_index=0\n    local temp_number_array_index_length=0\n    local temp_number_array_index_length_length=0\n    local temp_number_array_index_length_length_length=0\n    local temp_number_array_index_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_number_array_index_length_length_",
    "    local num=\"$1\"\n    local num_len=\"${#num}\"\n    local i\n    local j\n    local k\n    local temp\n    local temp_num\n    local temp_num_len\n    local temp_num_len_diff\n    local temp_num_len_diff_prev\n    local temp_num_len_diff_prev_prev\n    local temp_num_len_diff_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local temp_num_len_diff_prev_prev_prev_prev_prev_",
    "    local number=$1\n    local digits=${#number}\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local array=()\n    local result=0\n\n    for (( i=0; i<digits; i++ )); do\n        array[i]=${number:$i:1}\n    done\n\n    for (( i=digits-1; i>0; i-- )); do\n        if (( array[i] > array[i-1] )); then\n            tmp=${array[i]}\n            array[i]=${array[i-1]}\n            array[i-1]=$tmp\n            break\n        fi\n    done\n\n    for (( i=0; i<digits; i++ )); do\n        result=$(( result * 10 + array[i] ))\n    done\n\n    echo $result",
    "    local -i num=\"$1\"\n    local -i num_len=\"${#1}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n",
    "  local num=$1\n  local num_len=${#num}\n  local i\n  local j\n  local k\n  local tmp\n  local tmp_num\n  local tmp_num_len\n  local tmp_num_len_diff\n  local tmp_num_len_diff_abs\n  local tmp_num_len_diff_abs_min\n  local tmp_num_len_diff_abs_min_idx\n  local tmp_num_len_diff_abs_min_idx_prev\n  local tmp_num_len_diff_abs_min_idx_prev_val\n  local tmp_num_len_diff_abs_min_idx_val\n  local tmp_num_len_diff_abs_min_val\n  local tmp_num_len_diff_abs_min_val_idx\n  local tmp_num_len_diff_abs_min_val_idx_prev\n  local tmp_num_len_diff_abs_min_val_idx_prev_val\n  local tmp_num_len_diff_abs_min_val_idx_val\n  local tmp_num_len_diff_abs_min_val_val\n  local tmp_num_len_diff_abs_min_val_val_idx\n  local tmp_num_len_diff_abs_min_val_val_idx_prev\n  local tmp_num_len_diff_abs_min_val_val_idx_prev_val\n  local tmp_num_len_diff_abs_min_val_val_idx_val\n  local tmp_num_len_diff_abs_min_val_val_val\n  local tmp_num_len_diff_abs_min_val_val_val_idx\n  local tmp_num_len_diff_abs_min_val_val_val_idx_prev\n  local tmp_num_len_diff_abs_min_val_val_val_idx_prev_val\n  local tmp_num_len_diff_abs_min_val_val_val_idx_val\n  local tmp_num_len_diff_abs_min_val_val_val_val\n",
    "    local -i number=$1\n    local -i digit\n    local -i next_digit\n    local -i next_bigger_number=0\n    local -i multiplier=1\n    local -i next_bigger_multiplier=1\n    local -i next_bigger_digit\n\n    while (( number > 0 )); do\n        digit=$(( number % 10 ))\n        number=$(( number / 10 ))\n        next_digit=$(( number % 10 ))\n\n        if (( digit < next_digit )); then\n            next_bigger_digit=$digit\n            next_bigger_number=$(( next_bigger_number + next_bigger_digit * next_bigger_multiplier ))\n            next_bigger_multiplier=$(( next_bigger_multiplier * 10 ))\n            next_bigger_number=$(( next_bigger_number + next_digit * next_bigger_multiplier ))\n            next_bigger_multiplier=$(( next_bigger_multiplier * 10 ))\n            next_bigger_number=$(( next_bigger_number + number * next_bigger_multiplier ))\n            next_bigger_multiplier=$(( next_bigger_multiplier * 10 ))\n            next_bigger_number=$(( next_bigger_number + multiplier * next_bigger_multiplier ))\n            break\n        else\n            next_bigger_number=$(( next_bigger_number + digit * next_bigger_multiplier ))\n            next_bigger_multiplier=$(( next_bigger_multiplier * 10 ))\n        fi\n\n        multiplier=$(( multiplier * 10 ))\n    done\n\n    echo $next_bigger_number",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_max=0\n    local -i n_arr_max_idx=0\n    local -i n_arr_max_idx_next=0\n    local -i n_arr_max_idx_next_val=0\n    local -i n_arr_max_idx_next_val_idx=0\n    local -i n_arr_max_idx_next_val_idx_next=0\n    local -i n_arr_max_idx_next_val_idx_next_val=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next_val=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_max_idx_next_val_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n   ",
    "  local -i n=$1\n  local -i i=0\n  local -a digits\n  local -i d\n  local -i j\n  local -i k\n\n  while (( n > 0 )); do\n    d=$(( n % 10 ))\n    n=$(( n / 10 ))\n    digits[i++]=$d\n  done\n\n  for (( i = ${#digits[@]} - 1; i > 0; i-- )); do\n    if (( digits[i] > digits[i-1] )); then\n      j=$i\n      while (( j < ${#digits[@]} - 1 && digits[j] > digits[i-1] )); do\n        (( j++ ))\n      done\n      (( j-- ))\n      k=${digits[i-1]}\n      digits[i-1]=${digits[j]}\n      digits[j]=$k\n      break\n    fi\n  done\n\n  if (( i == 0 )); then\n    echo \"no bigger number\"\n    return\n  fi\n\n  for (( j = i; j < ${#digits[@]} - 1; j++ )); do\n    for (( k = j + 1; k < ${#digits[@]}; k++ )); do\n      if (( digits[j] > digits[k] )); then\n        d=${digits[j]}\n        digits[j]=${digits[k]}\n        digits[k]=$d\n      fi\n    done\n  done\n\n  for (( i = 0; i < ${#digits[@]}; i++ )); do\n    echo -n \"${digits[i]}\"\n  done\n  echo",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i nn=0\n  local -i nnn=0\n  local -i nnnn=0\n  local -i nnnnn=0\n  local -i nnnnnn=0\n  local -i nnnnnnn=0\n  local -i nnnnnnnn=0\n  local -i nnnnnnnnn=0\n  local -i nnnnnnnnnn=0\n  local -i nnnnnnnnnnn=0\n  local -i nnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnn",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i\n    local j\n    local k\n    local temp\n    local temp_array\n    local temp_array_length\n    local temp_array_length_minus_one\n    local temp_array_length_minus_two\n    local temp_array_length_minus_three\n    local temp_array_length_minus_four\n    local temp_array_length_minus_five\n    local temp_array_length_minus_six\n    local temp_array_length_minus_seven\n    local temp_array_length_minus_eight\n    local temp_array_length_minus_nine\n    local temp_array_length_minus_ten\n    local temp_array_length_minus_eleven\n    local temp_array_length_minus_twelve\n    local temp_array_length_minus_thirteen\n    local temp_array_length_minus_fourteen\n    local temp_array_length_minus_fifteen\n    local temp_array_length_minus_sixteen\n    local temp_array_length_minus_seventeen\n    local temp_array_length_minus_eighteen\n    local temp_array_length_minus_nineteen\n    local temp_array_length_minus_twenty\n    local temp_array_length_minus_twenty_one\n    local temp_array_length_minus_twenty_two\n    local temp_array_length_minus_twenty_three\n    local temp_array_length_minus_twenty_four\n    local temp_array_length_minus_twenty_five\n    local temp_array_length_minus_twenty_six\n    local temp_array_length_minus_twenty_seven\n    local temp_array_length_minus_twenty_eight\n    local temp_array_length_minus_twenty_nine\n    local temp_array_length_minus_thirty\n    local temp_array_length_minus_thirty_one\n    local temp_array_length_minus_thirty_two\n    local temp_array_length_minus_thirty_three\n    local",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i arr=()\n  local -i tmp=0\n  local -i res=0\n\n  if (( num < 10 )); then\n    echo \"No bigger number can be created\"\n    return 1\n  fi\n\n  # Convert the number to an array\n  for (( i=0; i<len; i++ )); do\n    arr[i]=${num:i:1}\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i=len-2; i>=0; i-- )); do\n    if (( arr[i] < arr[i+1] )); then\n      break\n    fi\n  done\n\n  # If no such digit is found, then no bigger number can be created\n  if (( i < 0 )); then\n    echo \"No bigger number can be created\"\n    return 1\n  fi\n\n  # Find the smallest digit to the right of the digit found above which is greater than the digit found above\n  for (( j=i+1; j<len; j++ )); do\n    if (( arr[j] > arr[i] )); then\n      break\n    fi\n  done\n\n  # Swap the above two digits\n  tmp=arr[i]\n  arr[i]=arr[j]\n  arr[j]=tmp\n\n  # Sort the digits to the right of the digit found above in ascending order\n  for (( i=i+1, j=len-1; i<j; i++, j-- )); do\n    tmp=arr[i]\n    arr[i]=arr[j]\n    arr[j]=tmp\n  done\n\n  # Convert the array to a number\n  for (( i=0; i<len; i++ )); do\n    res=$(( res*10 + arr[i] ))\n  done\n\n  echo $res",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=\"\"\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_arr=()\n  local -i n_arr_sorted_next_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_str=\"\"\n  local -i n_arr_sorted_next_int_arr_sorted_int=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted_str=\"\"\n  local -i n_arr_sorted_next_int_arr",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i num_arr=()\n  local -i temp=0\n  local -i temp_arr=()\n  local -i temp_len=0\n  local -i temp_num=0\n  local -i temp_num_arr=()\n  local -i temp_num_len=0\n  local -i temp_num_i=0\n  local -i temp_num_j=0\n  local -i temp_num_temp=0\n  local -i temp_num_temp_arr=()\n  local -i temp_num_temp_len=0\n  local -i temp_num_temp_num=0\n  local -i temp_num_temp_num_arr=()\n  local -i temp_num_temp_num_len=0\n  local -i temp_num_temp_num_i=0\n  local -i temp_num_temp_num_j=0\n  local -i temp_num_temp_num_temp=0\n  local -i temp_num_temp_num_temp_arr=()\n  local -i temp_num_temp_num_temp_len=0\n  local -i temp_num_temp_num_temp_num=0\n  local -i temp_num_temp_num_temp_num_arr=()\n  local -i temp_num_temp_num_temp_num_len=0\n  local -i temp_num_temp_num_temp_num_i=0\n  local -i temp_num_temp_num_temp_num_j=0\n  local -i temp_num_temp_num_temp_num_temp=0\n  local -i temp_num_temp_num_temp_num_temp_arr=()\n  local -i temp_num_temp_num_temp_num_temp_len=0\n  local -i temp_num_temp_num_temp_num_temp_num=0\n  local -i temp_num_temp_num_temp_num_temp_num_arr=()\n  local -i temp",
    "  local -i num=$1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_num=0\n  local -i next_num_digit=0\n  local -i next_num_digit_count=0\n  local -i next_num_digit_count_max=0\n  local -i next_num_digit_count_max_digit=0\n  local -i next_num_digit_count_max_digit_index=0\n  local -i next_num_digit_count_max_digit_index_prev=0\n  local -i next_num_digit_count_max_digit_index_prev_digit=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit=0\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit_index=0",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max\n  local -i next_num_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_index\n  local -i next_num_digit_count_max_digit_index_prev\n  local -i next_num_digit_count_max_digit_index_prev_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit_index\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit",
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i nn=0\n  local -i dd=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nnn=0\n  local -i ddd=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnnn=0\n  local -i dddd=0\n  local -i iiii=0\n  local -i jjjj=0\n  local -i kkkk=0\n  local -i llll=0\n  local -i mmmm=0\n  local -i nnnnn=0\n  local -i ddddd=0\n  local -i iiiii=0\n  local -i jjjjj=0\n  local -i kkkkk=0\n  local -i lllll=0\n  local -i mmmmm=0\n  local -i nnnnnn=0\n  local -i dddddd=0\n  local -i iiiiii=0\n  local -i jjjjjj=0\n  local -i kkkkkk=0\n  local -i llllll=0\n  local -i mmmmmm=0\n  local -i nnnnnnn=0\n  local -i ddddddd=0\n  local -i iiiiiii=0\n  local -i jjjjjjj=0\n  local -i kkkkkkk=0\n  local -i lllllll=0\n  local -i mmmmmmm=0\n  local -i nnnnnnnn=0\n  local -i dddddddd=0\n  local -i iiiiiiii=0\n  local -i jjjjjjjj=0\n  local -i k",
    "  local -i num=$1\n  local -a digits\n  local -i i j\n  local -i len=${#num}\n  local -i swap_idx=-1\n  local -i swap_val=0\n  local -i tmp\n\n  for ((i=0; i<len; i++)); do\n    digits[i]=${num:i:1}\n  done\n\n  for ((i=len-1; i>0; i--)); do\n    if ((digits[i] > digits[i-1])); then\n      swap_idx=i-1\n      swap_val=digits[i-1]\n      break\n    fi\n  done\n\n  if ((swap_idx < 0)); then\n    echo \"no answer\"\n    return\n  fi\n\n  for ((i=len-1; i>=0; i--)); do\n    if ((digits[i] > swap_val)); then\n      tmp=digits[i]\n      digits[i]=digits[swap_idx]\n      digits[swap_idx]=tmp\n      break\n    fi\n  done\n\n  for ((i=0; i<len; i++)); do\n    echo -n \"${digits[i]}\"\n  done\n  echo",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_len_diff=0\n  local -i n_arr_sorted_next_len_diff_i=0\n  local -i n_arr_sorted_next_len_diff_j=0\n  local -i n_arr_sorted_next_len_diff_k=0\n  local -i n_arr_sorted_next_len_diff_l=0\n  local -i n_arr_sorted_next_len_diff_m=0\n  local -i n_arr_sorted_next_len_diff_n=0\n  local -i n_arr_sorted_next_len_diff_o=0\n  local -i n_arr_sorted_next_len_diff_p=0\n  local -i n_arr_sorted_next_len_diff_q=0\n  local -i n_arr_sorted_next_len_diff_r=0\n  local -i n_arr_sorted_next_len_diff_s=0\n  local -i n_arr_sorted_next_len_diff_t=0\n  local -i n_arr_sorted_next_len_diff_u=0\n  local -i n_arr_sorted_next_len_diff_v=0\n  local -i n_arr_sorted_next_len_diff_w=0\n  local -i n_arr_sorted_next_len_diff_x=0\n  local -i n_arr_sorted_next_len_diff",
    "  local -i n=$1\n  local -i i=0\n  local -a digits\n  local -i d\n  local -i j\n  local -i k\n  local -i tmp\n  local -i min\n  local -i min_idx\n  local -i max\n  local -i max_idx\n\n  while (( n > 0 )); do\n    d=$(( n % 10 ))\n    digits[i]=$d\n    (( n /= 10 ))\n    (( i++ ))\n  done\n  (( i-- ))\n\n  # find the first digit that is smaller than the one to its right\n  for (( j = i; j > 0; j-- )); do\n    if (( digits[j] < digits[j-1] )); then\n      break\n    fi\n  done\n\n  # if no such digit exists, the number is the largest possible\n  if (( j == 0 )); then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # find the smallest digit to the right of j that is larger than digits[j]\n  min=digits[j]\n  min_idx=j\n  for (( k = j + 1; k <= i; k++ )); do\n    if (( digits[k] < min && digits[k] > digits[j-1] )); then\n      min=digits[k]\n      min_idx=k\n    fi\n  done\n\n  # swap digits[j-1] and digits[min_idx]\n  tmp=digits[j-1]\n  digits[j-1]=digits[min_idx]\n  digits[min_idx]=$tmp\n\n  # sort the digits after j-1 in ascending order\n  for (( k = j; k < i; k++ )); do\n    max=digits[k]\n    max_idx=k\n    for (( l = k + 1; l <= i; l++ )); do\n      if (( digits[l] > max )); then\n        max=digits[l]\n        max_idx=l\n      fi\n    done\n    tmp=digits[k]\n    digits[k]=digits[max_idx]\n    digits[max_idx]=$",
    "  local -i num=$1\n  local -i digit\n  local -i next\n  local -i prev=0\n  local -i prev_digit=0\n  local -i prev_prev=0\n  local -i prev_prev_digit=0\n  local -i new_num=0\n  local -i new_num_digit=0\n  local -i new_num_prev=0\n  local -i new_num_prev_digit=0\n  local -i new_num_prev_prev=0\n  local -i new_num_prev_prev_digit=0\n  local -i new_num_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_digit=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i new_num_prev_prev_prev_prev_prev_prev_prev",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_num=0\n  local -i n_arr_sorted_next_num_len=0\n  local -i n_arr_sorted_next_num_len_diff=0\n  local -i n_arr_sorted_next_num_len_diff_i=0\n  local -i n_arr_sorted_next_num_len_diff_j=0\n  local -i n_arr_sorted_next_num_len_diff_k=0\n  local -i n_arr_sorted_next_num_len_diff_l=0\n  local -i n_arr_sorted_next_num_len_diff_m=0\n  local -i n_arr_sorted_next_num_len_diff_n=0\n  local -i n_arr_sorted_next_num_len_diff_o=0\n  local -i n_arr_sorted_next_num_len_diff_p=0\n  local -i n_arr_sorted_next_num_len_diff_q=0\n  local -i n_arr_sorted_next_num_len_diff_r=0\n  local -i n_arr_sorted_next_num_len_diff_s=0\n  local -i n_arr_sorted_next_num_len_diff_t=0\n  local -i n_arr_sorted_next_num_len_diff_u=",
    "  local -i i=${#1}-1\n  local -i j=${#1}-1\n  local -i k=${#1}-1\n  local -i l=${#1}-1\n  local -i m=${#1}-1\n  local -i n=${#1}-1\n  local -i o=${#1}-1\n  local -i p=${#1}-1\n  local -i q=${#1}-1\n  local -i r=${#1}-1\n  local -i s=${#1}-1\n  local -i t=${#1}-1\n  local -i u=${#1}-1\n  local -i v=${#1}-1\n  local -i w=${#1}-1\n  local -i x=${#1}-1\n  local -i y=${#1}-1\n  local -i z=${#1}-1\n  local -i a=${#1}-1\n  local -i b=${#1}-1\n  local -i c=${#1}-1\n  local -i d=${#1}-1\n  local -i e=${#1}-1\n  local -i f=${#1}-1\n  local -i g=${#1}-1\n  local -i h=${#1}-1\n  local -i ii=${#1}-1\n  local -i jj=${#1}-1\n  local -i kk=${#1}-1\n  local -i ll=${#1}-1\n  local -i mm=${#1}-1\n  local -i nn=${#1}-1\n  local -i oo=${#1}-1\n  local -i pp=${#1}-1\n  local -i qq=${#1}-1\n  local -i rr=${#1}-1\n  local -i ss=${#1}-1\n  local -i tt=${#1}-1\n  local -i uu=${#1",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i min=0\n  local -i min_idx=0\n  local -i max=0\n  local -i max_idx=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_idx=0\n  local -i arr_tmp=0\n  local -i arr_min=0\n  local -i arr_min_idx=0\n  local -i arr_max=0\n  local -i arr_max_idx=0\n  local -i arr_tmp_idx=0\n  local -i arr_tmp_len=0\n  local -i arr_tmp_arr=()\n  local -i arr_tmp_arr_len=0\n  local -i arr_tmp_arr_idx=0\n  local -i arr_tmp_arr_tmp=0\n  local -i arr_tmp_arr_min=0\n  local -i arr_tmp_arr_min_idx=0\n  local -i arr_tmp_arr_max=0\n  local -i arr_tmp_arr_max_idx=0\n  local -i arr_tmp_arr_tmp_idx=0\n  local -i arr_tmp_arr_tmp_len=0\n  local -i arr_tmp_arr_tmp_arr=()\n  local -i arr_tmp_arr_tmp_arr_len=0\n  local -i arr_tmp_arr_tmp_arr_idx=0\n  local -i arr_tmp_arr_tmp_arr_tmp=0\n  local -i arr_tmp_arr_tmp_arr_min=0\n  local -i arr_tmp_arr_tmp_arr_min_idx=0\n  local -i arr_tmp_arr_tmp_arr_max=0\n  local -i arr_tmp_arr_tmp_arr_max_idx=0\n  local -i arr_tmp_arr_tmp_arr_tmp_idx=0\n  local -",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i res=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_len=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr",
    "  local number=$1\n  local digits=($(echo \"$number\" | grep -o .))\n  local length=${#digits[@]}\n  local i=0\n  local j=0\n  local temp=0\n  local found=false\n\n  # Find the first digit that is smaller than the digit to its right\n  for ((i=0; i<length-1; i++)); do\n    if ((digits[i] < digits[i+1])); then\n      found=true\n      break\n    fi\n  done\n\n  # If no such digit was found, the number is the biggest possible\n  if ! $found; then\n    echo \"$number\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the found digit that is bigger than it\n  for ((j=i+1; j<length; j++)); do\n    if ((digits[j] < digits[i] && digits[j] < temp)); then\n      temp=${digits[j]}\n    fi\n  done\n\n  # Swap the found digit with the smallest digit to its right\n  digits[j]=${digits[i]}\n  digits[i]=$temp\n\n  # Sort the digits to the right of the found digit\n  for ((i=i+1; i<length; i++)); do\n    for ((j=i+1; j<length; j++)); do\n      if ((digits[i] > digits[j])); then\n        temp=${digits[i]}\n        digits[i]=${digits[j]}\n        digits[j]=$temp\n      fi\n    done\n  done\n\n  # Print the result\n  for ((i=0; i<length; i++)); do\n    echo -n \"${digits[i]}\"\n  done\n  echo",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i arr=()\n  local -i arr2=()\n  local -i arr3=()\n  local -i arr4=()\n  local -i arr5=()\n  local -i arr6=()\n  local -i arr7=()\n  local -i arr8=()\n  local -i arr9=()\n  local -i arr10=()\n  local -i arr11=()\n  local -i arr12=()\n  local -i arr13=()\n  local -i arr14=()\n  local -i arr15=()\n  local -i arr16=()\n  local -i arr17=()\n  local -i arr18=()\n  local -i arr19=()\n  local -i arr20=()\n  local -i arr21=()\n  local -i arr22=()\n  local -i arr23=()\n  local -i arr24=()\n  local -i arr25=()\n  local -i arr26=()\n  local -i arr27=()\n  local -i arr28=()\n  local -i arr29=()\n  local -i arr30=()\n  local -i arr31=()\n  local -i arr32=()\n  local -i arr33=()\n  local -i arr34=()\n  local -i arr35=()\n  local -i arr36=()\n  local -i arr37=()\n  local -i arr38=()\n  local -i arr39=()\n  local -i arr40=()\n  local -i arr41=()\n  local -i arr42=()\n  local -i arr43=()\n  local -i arr44=()\n  local -i arr45=()\n  local -i arr46=()\n  local -i arr47=()\n  local -i arr48=()\n  local -i arr49=()\n  local -i arr50=()\n  local -i arr51=()\n  local -i arr52=()\n  local -i",
    "    local number=\"$1\"\n    local digits=()\n    local i=0\n    local j=0\n    local k=0\n    local m=0\n    local n=0\n    local temp=0\n    local result=0\n\n    if [[ $number -lt 0 ]]; then\n        echo \"Error: $number is not a positive integer\" >&2\n        return 1\n    fi\n\n    # Convert number to array of digits\n    while [[ $number -gt 0 ]]; do\n        digits[$i]=$(( number % 10 ))\n        number=$(( number / 10 ))\n        (( i++ ))\n    done\n\n    # Find the first digit that is less than the digit to its right\n    for (( j=${#digits[@]}-1; j>0; j-- )); do\n        if [[ ${digits[$j]} -lt ${digits[$(( j-1 ))]} ]]; then\n            break\n        fi\n    done\n\n    # If no such digit exists, the number is already the largest possible\n    if [[ $j -eq 0 ]]; then\n        echo \"Error: $1 is already the largest possible number\" >&2\n        return 1\n    fi\n\n    # Find the smallest digit to the right of the pivot that is larger than the pivot\n    for (( k=${#digits[@]}-1; k>=j; k-- )); do\n        if [[ ${digits[$k]} -gt ${digits[$(( j-1 ))]} ]]; then\n            break\n        fi\n    done\n\n    # Swap the pivot with the smallest digit to its right that is larger than the pivot\n    temp=${digits[$(( j-1 ))]}\n    digits[$(( j-1 ))]=${digits[$k]}\n    digits[$k]=$temp\n\n    # Reverse the digits to the right of the pivot\n    for (( m=j, n=${#digits[@]}-1; m<n; m++, n-- )); do\n        temp=${digits[$m]}\n        digits[$m]=${digits[$n]}\n        digits[$n]=$temp\n    done\n\n    # Convert array of digits back to number\n    for (( i=0;",
    "    local -i n=$1\n    local -i d=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0",
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0",
    "    local -i num=\"$1\"\n    local -i swap_i=0\n    local -i swap_j=0\n    local -i swap_k=0\n    local -i swap_l=0\n    local -i swap_m=0\n    local -i swap_n=0\n    local -i swap_o=0\n    local -i swap_p=0\n    local -i swap_q=0\n    local -i swap_r=0\n    local -i swap_s=0\n    local -i swap_t=0\n    local -i swap_u=0\n    local -i swap_v=0\n    local -i swap_w=0\n    local -i swap_x=0\n    local -i swap_y=0\n    local -i swap_z=0\n    local -i swap_aa=0\n    local -i swap_bb=0\n    local -i swap_cc=0\n    local -i swap_dd=0\n    local -i swap_ee=0\n    local -i swap_ff=0\n    local -i swap_gg=0\n    local -i swap_hh=0\n    local -i swap_ii=0\n    local -i swap_jj=0\n    local -i swap_kk=0\n    local -i swap_ll=0\n    local -i swap_mm=0\n    local -i swap_nn=0\n    local -i swap_oo=0\n    local -i swap_pp=0\n    local -i swap_qq=0\n    local -i swap_rr=0\n    local -i swap_ss=0\n    local -i swap_tt=0\n    local -i swap_uu=0\n    local -i swap_vv=0\n    local -i swap_ww=0\n    local -i swap_xx=0\n    local -i swap_yy=0\n    local -i swap_zz=0\n    local -i swap_aaa=0\n    local -i swap_bbb=0\n    local -i swap_ccc=0\n    local -i swap_ddd=0\n    local -i swap_eee=0\n    local -i swap_fff",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=",
    "  local -i n=$1\n  local -i d1 d2 d3 d4 d5 d6 d7 d8 d9 d10\n  local -i n2\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local",
    "    local number=\"$1\"\n    local number_length=${#number}\n    local number_array=()\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_number=0\n    local temp_number_length=0\n    local temp_number_array=()\n    local temp_number_array_length=0\n    local temp_number_array_last_index=0\n    local temp_number_array_last_index_value=0\n    local temp_number_array_last_index_value_length=0\n    local temp_number_array_last_index_value_length_minus_one=0\n    local temp_number_array_last_index_value_last_digit=0\n    local temp_number_array_last_index_value_last_digit_plus_one=0\n    local temp_number_array_last_index_value_last_digit_plus_one_length=0\n    local temp_number_array_last_index_value_last_digit_plus_one_length_minus_one=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit_plus_one=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit_plus_one_length=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit_plus_one_length_minus_one=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit_plus_one_last_digit=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit_plus_one_last_digit_plus_one=0\n    local temp_number_array_last_index_value_last_digit_plus_one_last_digit_plus_one_last_digit_plus_one_length=0\n",
    "  local number=$1\n  local -a digits\n  local -a permutations\n  local -a bigger\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\n  # Split the number into digits\n  while [ $number -gt 0 ]; do\n    digits+=($((number % 10)))\n    number=$((number / 10))\n  done\n\n  # Generate all permutations of the digits\n  for ((i=0; i<${#digits[@]}; i++)); do\n    for ((j=0; j<${#digits[@]}; j++)); do\n      if [ $i -ne $j ]; then\n        for ((k=0; k<${#digits[@]}; k++)); do\n          if [ $i -ne $k ] && [ $j -ne $k ]; then\n            for ((l=0; l<${#digits[@]}; l++)); do\n              if [ $i -ne $l ] && [ $j -ne $l ] && [ $k -ne $l ]; then\n                for ((m=0; m<${#digits[@]}; m++)); do\n                  if [ $i -ne $m ] && [ $j -ne $m ] && [ $k -ne $m ] && [ $l -ne $m ]; then\n                    for ((n=0; n<${#digits[@]}; n++)); do\n                      if [ $i -ne $n ] && [ $j -ne $n ] && [ $k -ne $n ] && [ $l -ne $n ] && [ $m -ne $n ]; then\n                        for ((o=0; o<${#digits[@]}; o++)); do\n                          if [ $i -ne $o ] && [ $j -ne $o ] && [ $k -ne $o ] && [ $l -ne $o ] && [ $m -ne $o ] && [ $n -ne $o ]; then",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i=0\n    local j=0\n    local temp=0\n    local temp_index=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_array_index=0\n    local temp_array_index_length=0\n    local temp_array_index_array=()\n    local temp_array_index_array_length=0\n    local temp_array_index_array_index=0\n    local temp_array_index_array_index_length=0\n    local temp_array_index_array_index_array=()\n    local temp_array_index_array_index_array_length=0\n    local temp_array_index_array_index_array_index=0\n    local temp_array_index_array_index_array_index_length=0\n    local temp_array_index_array_index_array_index_array=()\n    local temp_array_index_array_index_array_index_array_length=0\n    local temp_array_index_array_index_array_index_array_index=0\n    local temp_array_index_array_index_array_index_array_index_length=0\n    local temp_array_index_array_index_array_index_array_index_array=()\n    local temp_array_index_array_index_array_index_array_index_array_length=0\n    local temp_array_index_array_index_array_index_array_index_array_index=0\n    local temp_array_index_array_index_array_index_array_index_array_index_length=0\n    local temp_array_index_array_index_array_index_array_index_array_index_array=()\n    local temp_array_index_array_index_array_index_array_index_array_index_array_length=0\n    local temp_array_index_array_index_array_index_array_index_array_index_array_index=0\n    local",
    "  local -i n=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_min=0\n  local -i n_arr_sorted_min_idx=0\n  local -i n_arr_sorted_min_idx_next=0\n  local -i n_arr_sorted_min_idx_next_val=0\n  local -i n_arr_sorted_min_idx_next_val_idx=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val_idx=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val_idx_next=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val_idx_next_val_idx=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n  local -i n_arr_sorted_min_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_min_idx_next_val_",
    "    local -i num=$1\n    local -i len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_str_len=0\n  local -i n_arr_sorted_next_str_num=0\n  local -i n_arr_sorted_next_str_num_len=0\n  local -i n_arr_sorted_next_str_num_len_diff=0\n  local -i n_arr_sorted_next_str_num_len_diff_i=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j_k=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j_k_l=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j_k_l_m=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j_k_l_m_n=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j_k_l_m_n_o=0\n  local -i n_arr_sorted_next_str_num_len_diff_i_j_k_l_m_n_o_p=0\n  local -i n_arr_sorted_next_str_num",
    "    local number=$1\n    local digits=${#number}\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local result=0\n    local array=()\n\n    for ((i=0; i<digits; i++)); do\n        array[i]=${number:i:1}\n    done\n\n    for ((i=digits-1; i>0; i--)); do\n        if [[ ${array[i]} -gt ${array[i-1]} ]]; then\n            temp=${array[i]}\n            array[i]=${array[i-1]}\n            array[i-1]=$temp\n            break\n        fi\n    done\n\n    for ((i=0; i<digits; i++)); do\n        result=$((result * 10 + array[i]))\n    done\n\n    echo $result",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max\n  local -i next_num_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_index\n  local -i next_num_digit_count_max_digit_index_prev\n  local -i next_num_digit_count_max_digit_index_prev_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit_index\n  local -i next_num_digit_count_max_digit_index_prev_digit_count_max_digit_index_prev_digit_count_max_digit",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_str=''\n  local -i n_arr_sorted_int=0\n  local -i n_arr_sorted_int_len=0\n  local -i n_arr_sorted_int_len_diff=0\n  local -i n_arr_sorted_int_len_diff_arr=()\n  local -i n_arr_sorted_int_len_diff_arr_len=0\n  local -i n_arr_sorted_int_len_diff_arr_len_diff=0\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr=()\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len=0\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len_diff=0\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len_diff_arr=()\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len_diff_arr_len=0\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len_diff_arr_len_diff=0\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len_diff_arr_len_diff_arr=()\n  local -i n_arr_sorted_int_len_diff_arr_len_diff_arr_len_diff_arr_len_diff_arr_",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_bigger=0\n  local -i n_bigger_len=0\n  local -i n_bigger_digit=0\n  local -i n_bigger_digit_len=0\n  local -i n_bigger_digit_len_max=0\n  local -i n_bigger_digit_len_min=0\n  local -i n_bigger_digit_len_min_index=0\n  local -i n_bigger_digit_len_min_index_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i",
    "    local num=$1\n    local digits=${#num}\n    local i=0\n    local j=0\n    local k=0\n    local num_arr=()\n    local num_arr_sorted=()\n    local num_arr_sorted_str=''\n    local num_arr_sorted_str_len=0\n    local num_arr_sorted_str_last_digit=0\n    local num_arr_sorted_str_last_digit_index=0\n    local num_arr_sorted_str_last_digit_index_plus_1=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit_index=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1_digit=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1_digit_index=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1=0\n    local num_arr_sorted_str_last_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1_digit_index_plus_1_digit=0\n    local",
    "  local num=$1\n  local len=${#num}\n  local i=0\n  local j=0\n  local tmp=0\n  local arr=()\n  local arr2=()\n  local arr3=()\n  local arr4=()\n  local arr5=()\n  local arr6=()\n  local arr7=()\n  local arr8=()\n  local arr9=()\n  local arr0=()\n\n  # split the number into an array\n  for (( i=0; i<len; i++ )); do\n    arr[i]=${num:$i:1}\n  done\n\n  # sort the array\n  for (( i=0; i<len; i++ )); do\n    for (( j=i+1; j<len; j++ )); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n      fi\n    done\n  done\n\n  # split the array into sub-arrays\n  for (( i=0; i<len; i++ )); do\n    case ${arr[i]} in\n      9) arr9+=(${arr[i]}) ;;\n      8) arr8+=(${arr[i]}) ;;\n      7) arr7+=(${arr[i]}) ;;\n      6) arr6+=(${arr[i]}) ;;\n      5) arr5+=(${arr[i]}) ;;\n      4) arr4+=(${arr[i]}) ;;\n      3) arr3+=(${arr[i]}) ;;\n      2) arr2+=(${arr[i]}) ;;\n      1) arr1+=(${arr[i]}) ;;\n      0) arr0+=(${arr[i]}) ;;\n    esac\n  done\n\n  # find the first sub-array with more than one element\n  for (( i=9; i>0; i-- )); do\n    if [[ ${#arr[i]} -gt 1 ]]; then\n      tmp=${arr[i]:0:1}\n      arr[i]=${arr[i]:1:1}\n      break\n   ",
    "    local -i n=$1\n    local -i d\n    local -i i=0\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n_len=${#n}\n    local -i n_arr[$n_len]\n    local -i n_arr_sorted[$n_len]\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_last_idx\n    local -i n_arr_sorted_last_idx_1\n    local -i n_arr_sorted_last_idx_2\n    local -i n_arr_sorted_last_idx_3\n    local -i n_arr_sorted_last_idx_4\n    local -i n_arr_sorted_last_idx_5\n    local -i n_arr_sorted_last_idx_6\n    local -i n_arr_sorted_last_idx_7\n    local -i n_arr_sorted_last_idx_8\n    local -i n_arr_sorted_last_idx_9\n    local -i n_arr_sorted_last_idx_10\n    local -i n_arr_sorted_last_idx_11\n    local -i n_arr_sorted_last_idx_12\n    local -i n_arr_sorted_last_idx_13\n    local -i n_arr_sorted_last_idx_14\n    local -i n_arr_sorted_last_idx_15\n    local -i n_arr_sorted_last_idx_16\n    local -i n_arr_sorted_last_idx_17\n    local -i n_arr_sorted_last_idx_18\n    local -i n_arr_sorted_last_idx_19\n    local -i n_arr_sorted_last_idx_20\n    local -i n_arr_sorted_last_idx_21\n    local -i n_arr_sorted_last",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0",
    "    local -i i j\n    local -a digits\n    local -i num=$1\n    local -i len=${#num}\n    local -i min=0\n    local -i min_index=0\n    local -i min_index_2=0\n\n    # Convert to array of digits\n    for ((i=0; i<len; i++)); do\n        digits[i]=$((num % 10))\n        num=$((num / 10))\n    done\n\n    # Find the first digit that is smaller than the digit to its right\n    for ((i=0; i<len-1; i++)); do\n        if ((digits[i] < digits[i+1])); then\n            min_index=$i\n            break\n        fi\n    done\n\n    # Find the smallest digit to the right of the first digit that is smaller than the digit to its right\n    min=${digits[min_index]}\n    for ((i=min_index+1; i<len; i++)); do\n        if ((digits[i] < min)); then\n            min=${digits[i]}\n            min_index_2=$i\n        fi\n    done\n\n    # Swap the two digits\n    local -i tmp=${digits[min_index]}\n    digits[min_index]=${digits[min_index_2]}\n    digits[min_index_2]=$tmp\n\n    # Sort the digits to the right of the first digit that is smaller than the digit to its right\n    for ((i=min_index+1; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if ((digits[i] > digits[j])); then\n                tmp=${digits[i]}\n                digits[i]=${digits[j]}\n                digits[j]=$tmp\n            fi\n        done\n    done\n\n    # Convert array of digits to number\n    num=0\n    for ((i=0; i<len; i++)); do\n        num=$((num * 10 + digits[i]))\n    done\n\n    echo $num",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local tmp=0\n    local tmp_arr=()\n    local tmp_len=0\n    local tmp_str=''\n    local tmp_num=0\n    local result=0\n\n    # convert number to array\n    for ((i=0; i<num_len; i++)); do\n        num_arr[i]=${num:$i:1}\n    done\n\n    # find the first digit that is smaller than the digit after it\n    for ((i=num_len-1; i>0; i--)); do\n        if ((num_arr[i] > num_arr[i-1])); then\n            break\n        fi\n    done\n\n    # if no such digit is found, then the number is the biggest number\n    if ((i == 0)); then\n        echo $num\n        return\n    fi\n\n    # find the smallest digit that is bigger than the digit at $i-1\n    for ((j=i; j<num_len; j++)); do\n        if ((num_arr[j] > num_arr[i-1])); then\n            break\n        fi\n    done\n\n    # swap the digits at $i-1 and $j\n    tmp=${num_arr[i-1]}\n    num_arr[i-1]=${num_arr[j]}\n    num_arr[j]=$tmp\n\n    # sort the digits after $i-1\n    tmp_arr=(\"${num_arr[@]:$i}\")\n    tmp_len=${#tmp_arr[@]}\n    for ((k=0; k<tmp_len; k++)); do\n        for ((l=k+1; l<tmp_len; l++)); do\n            if ((tmp_arr[k] > tmp_arr[l])); then\n                tmp=${tmp_arr[k]}\n                tmp_arr[k]=${tmp_arr[l]}\n                tmp_arr[l]=$tmp\n            fi\n       ",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_arr=()\n  local -i n_arr_sorted_next_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_str=''\n  local -i n_arr_sorted_next_int_arr_sorted_int=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_str=''\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_int=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_int_len=0\n  local -i n_arr_sorted_next_int_arr_s",
    "  local -i num=$1\n  local -i digit\n  local -i digits=0\n  local -i digit_count=0\n  local -i digit_pos=0\n  local -i digit_pos_count=0\n  local -i digit_pos_count_max=0\n  local -i digit_pos_max=0\n  local -i digit_pos_max_count=0\n  local -i digit_pos_max_count_max=0\n  local -i digit_pos_max_max=0\n  local -i digit_pos_max_max_count=0\n  local -i digit_pos_max_max_count_max=0\n  local -i digit_pos_max_max_max=0\n  local -i digit_pos_max_max_max_count=0\n  local -i digit_pos_max_max_max_count_max=0\n  local -i digit_pos_max_max_max_max=0\n  local -i digit_pos_max_max_max_max_count=0\n  local -i digit_pos_max_max_max_max_count_max=0\n  local -i digit_pos_max_max_max_max_max=0\n  local -i digit_pos_max_max_max_max_max_count=0\n  local -i digit_pos_max_max_max_max_max_count_max=0\n  local -i digit_pos_max_max_max_max_max_max=0\n  local -i digit_pos_max_max_max_max_max_max_count=0\n  local -i digit_pos_max_max_max_max_max_max_count_max=0\n  local -i digit_pos_max_max_max_max_max_max_max=0\n  local -i digit_pos_max_max_max_max_max_max_max_count=0\n  local -i digit_pos_max_max_max_max_max_max_max_count_max=0\n  local -i digit_pos_max_max_max_max_max_max_max_max",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i\n    local j\n    local k\n    local temp\n    local temp_array\n    local temp_array_length\n    local temp_array_length_minus_one\n    local temp_array_length_minus_two\n    local temp_array_length_minus_three\n    local temp_array_length_minus_four\n    local temp_array_length_minus_five\n    local temp_array_length_minus_six\n    local temp_array_length_minus_seven\n    local temp_array_length_minus_eight\n    local temp_array_length_minus_nine\n    local temp_array_length_minus_ten\n    local temp_array_length_minus_eleven\n    local temp_array_length_minus_twelve\n    local temp_array_length_minus_thirteen\n    local temp_array_length_minus_fourteen\n    local temp_array_length_minus_fifteen\n    local temp_array_length_minus_sixteen\n    local temp_array_length_minus_seventeen\n    local temp_array_length_minus_eighteen\n    local temp_array_length_minus_nineteen\n    local temp_array_length_minus_twenty\n    local temp_array_length_minus_twenty_one\n    local temp_array_length_minus_twenty_two\n    local temp_array_length_minus_twenty_three\n    local temp_array_length_minus_twenty_four\n    local temp_array_length_minus_twenty_five\n    local temp_array_length_minus_twenty_six\n    local temp_array_length_minus_twenty_seven\n    local temp_array_length_minus_twenty_eight\n    local temp_array_length_minus_twenty_nine\n    local temp_array_length_minus_thirty\n    local temp_array_length_minus_thirty_one\n    local temp_array_length_minus_thirty_two\n    local temp_array_length_minus_thirty_three\n    local",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_arr=()\n  local -i n_arr_sorted_next_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_str=''\n  local -i n_arr_sorted_next_int_arr_sorted_int=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted_str=''\n  local -i n_arr_sorted_next_",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i temp=0\n  local -i result=0\n  local -i arr=()\n  local -i arr_len=0\n\n  if [[ $num -lt 0 ]]; then\n    echo \"ERROR: $num is not a positive integer\"\n    return 1\n  fi\n\n  # convert num to array\n  while [[ $num -gt 0 ]]; do\n    arr[$i]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n  arr_len=$i\n\n  # find the first digit that is smaller than the digit to its right\n  for (( i=arr_len-1; i>0; i-- )); do\n    if [[ ${arr[$i]} -gt ${arr[$(( i-1 ))]} ]]; then\n      break\n    fi\n  done\n\n  # if there is no such digit, then num is the largest number\n  if [[ $i -eq 0 ]]; then\n    echo \"$num is the largest number\"\n    return 1\n  fi\n\n  # find the smallest digit to the right of the digit found in the previous step\n  # that is larger than the digit found in the previous step\n  for (( j=arr_len-1; j>=i; j-- )); do\n    if [[ ${arr[$j]} -gt ${arr[$(( i-1 ))]} ]]; then\n      break\n    fi\n  done\n\n  # swap the two digits\n  temp=${arr[$(( i-1 ))]}\n  arr[$(( i-1 ))]=${arr[$j]}\n  arr[$j]=$temp\n\n  # reverse the digits to the right of the digit found in the first step\n  for (( j=0; j<$(( (arr_len-i)/2 )); j++ )); do\n    temp=${arr[$(( i+j ))]}\n    arr[$(( i+j ))]=${arr[$(( arr_len-1-j ))]}\n    arr[$(( arr_len-1-j ))]=$temp\n  done\n\n  # convert",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n_bigger\n  local -i n_bigger_len\n  local -i n_bigger_len_diff\n  local -i n_bigger_len_diff_half\n  local -i n_bigger_len_diff_half_floor\n  local -i n_bigger_len_diff_half_ceil\n  local -i n_bigger_len_diff_half_floor_mod\n  local -i n_bigger_len_diff_half_ceil_mod\n  local -i n_bigger_len_diff_half_floor_mod_div\n  local -i n_bigger_len_diff_half_ceil_mod_div\n  local -i n_bigger_len_diff_half_floor_mod_div_floor\n  local -i n_bigger_len_diff_half_ceil_mod_div_floor\n  local -i n_bigger_len_diff_half_floor_mod_div_ceil\n  local -i n_bigger_len_diff_half_ceil_mod_div_ceil\n  local -i n_bigger_len_diff_half_floor_mod_div_floor_mod\n  local -i n_bigger_len_diff_half_ceil_mod_div_floor_mod\n  local -i n_bigger_len_diff_half_floor_mod_div_ceil_mod\n  local -i n_bigger_len_diff_half_ceil_mod_div_ceil_mod\n  local -i n_bigger_len_diff_half_floor_mod_div_floor_mod_div\n  local -i n_bigger_len_diff_half_ceil_mod_div_floor_mod_div\n  local -i n_bigger_len_diff_half_floor_mod_div_ceil_mod_div\n  local -i n_bigger_len_diff",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i",
    "  local number=\"$1\"\n  local length=\"${#number}\"\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n  local digits=()\n\n  # Convert number to array of digits\n  for (( i=0; i<length; i++ )); do\n    digits[i]=${number:i:1}\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i=0; i<length-1; i++ )); do\n    if [ ${digits[i]} -lt ${digits[i+1]} ]; then\n      break\n    fi\n  done\n\n  # If no such digit exists, then the number is already the largest possible\n  if [ $i -eq $((length-1)) ]; then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found in the previous step\n  for (( j=$i+1; j<length; j++ )); do\n    if [ ${digits[j]} -lt ${digits[k]} ]; then\n      k=$j\n    fi\n  done\n\n  # Swap the smallest digit found in the previous step with the digit found in the first step\n  temp=${digits[i]}\n  digits[i]=${digits[k]}\n  digits[k]=$temp\n\n  # Sort the digits to the right of the digit found in the first step in ascending order\n  for (( i=0; i<length-1; i++ )); do\n    for (( j=i+1; j<length; j++ )); do\n      if [ ${digits[i]} -gt ${digits[j]} ]; then\n        temp=${digits[i]}\n        digits[i]=${digits[j]}\n        digits[j]=$temp\n      fi\n    done\n  done\n\n  # Convert array of digits to number\n  for (( i=0; i<length; i++ )); do\n    result=$((result*10+digits[i]))\n  done\n\n  echo $result",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=()\n    local i=0\n    local j=0\n    local temp=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_array_index=0\n    local temp_array_index_length=0\n    local temp_array_index_length_length=0\n    local temp_array_index_length_length_length=0\n    local temp_array_index_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n    local temp_array_index_",
    "    local number=$1\n    local length=${#number}\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_number=0\n\n    for (( i=$length-1; i>0; i-- )); do\n        if [ ${number:$i:1} -gt ${number:$i-1:1} ]; then\n            for (( j=$length-1; j>=i; j-- )); do\n                if [ ${number:$j:1} -gt ${number:$i-1:1} ]; then\n                    temp=${number:$i-1:1}\n                    number=${number:0:$i-1}${number:$j:1}${number:$i:$length-$i}\n                    number=${number:0:$j}${temp}${number:$j+1:$length-$j-1}\n                    break\n                fi\n            done\n            break\n        fi\n    done\n\n    for (( i=$length-1; i>$j; i-- )); do\n        for (( k=$length-1; k>$j; k-- )); do\n            if [ ${number:$k:1} -lt ${number:$k-1:1} ]; then\n                temp=${number:$k-1:1}\n                number=${number:0:$k-1}${number:$k:1}${number:$k+1:$length-$k-1}\n                number=${number:0:$k}${temp}${number:$k+1:$length-$k-1}\n            fi\n        done\n    done\n\n    echo $number",
    "    local -i n=$1\n    local -i d1 d2\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i nn=0\n    local -i nd=0\n    local -i nd1=0\n    local -i nd2=0\n    local -i nd3=0\n    local -i nd4=0\n    local -i nd5=0\n    local -i nd6=0\n    local -i nd7=0\n    local -i nd8=0\n    local -i nd9=0\n    local -i nd10=0\n    local -i nd11=0\n    local -i nd12=0\n    local -i nd13=0\n    local -i nd14=0\n    local -i nd15=0\n    local -i nd16=0\n    local -i nd17=0\n    local -i nd18=0\n    local -i nd19=0\n    local -i nd20=0\n    local -i nd21=0\n    local -i nd22=0\n    local -i nd23=0\n    local -i nd24=0\n    local -i nd25=0\n    local -i nd26=0\n    local -i nd27=0\n    local -i nd28=0\n    local -i nd29=0\n    local -i nd30=0\n    local -i nd31=0\n    local -i nd32=0\n    local -i nd33=0\n    local -i nd34=0\n    local -i nd35=0\n    local -i nd36=0\n    local -i nd37=0\n    local -i nd38=0\n    local -i nd39=0\n    local -i nd40=0\n    local -i nd41=0\n    local -i nd42=0\n    local -i nd43=0\n    local -i nd",
    "    local -i num=\"$1\"\n    local -i i=1\n    local -i j=0\n    local -i tmp=0\n    local -i len=${#num}\n    local -i arr=()\n    local -i arr2=()\n    local -i arr3=()\n    local -i arr4=()\n    local -i arr5=()\n    local -i arr6=()\n    local -i arr7=()\n    local -i arr8=()\n    local -i arr9=()\n    local -i arr0=()\n    local -i arr_all=()\n    local -i arr_all_len=0\n    local -i arr_all_i=0\n    local -i arr_all_j=0\n    local -i arr_all_tmp=0\n    local -i arr_all_min=0\n    local -i arr_all_min_i=0\n    local -i arr_all_min_j=0\n    local -i arr_all_min_tmp=0\n    local -i arr_all_min_len=0\n    local -i arr_all_min_arr=()\n    local -i arr_all_min_arr_len=0\n    local -i arr_all_min_arr_i=0\n    local -i arr_all_min_arr_j=0\n    local -i arr_all_min_arr_tmp=0\n    local -i arr_all_min_arr_min=0\n    local -i arr_all_min_arr_min_i=0\n    local -i arr_all_min_arr_min_j=0\n    local -i arr_all_min_arr_min_tmp=0\n    local -i arr_all_min_arr_min_len=0\n    local -i arr_all_min_arr_min_arr=()\n    local -i arr_all_min_arr_min_arr_len=0\n    local -i arr_all_min_arr_min_arr_i=0\n    local -i arr_all_min_arr_min_arr_j=0\n    local -i arr_all",
    "  local -i num=$1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_num=0\n  local -i next_num_digit=0\n  local -i next_num_digit_count=0\n  local -i next_num_digit_count_max=0\n  local -i next_num_digit_count_max_digit=0\n  local -i next_num_digit_count_max_digit_pos=0\n  local -i next_num_digit_count_max_digit_pos_prev=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos_prev=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos_prev_digit=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos_prev_digit_count=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos_prev_digit_count_max=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos_prev_digit_count_max_digit=0\n  local -i next_num_digit_count_max_digit_pos_prev_digit_count_max_digit_pos_prev_digit_count_max_digit_pos=0",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_bigger=0\n  local -i n_bigger_len=0\n  local -i n_bigger_arr=()\n  local -i n_bigger_arr_len=0\n  local -i n_bigger_arr_idx=0\n  local -i n_bigger_arr_idx_max=0\n  local -i n_bigger_arr_idx_min=0\n  local -i n_bigger_arr_idx_min_idx=0\n  local -i n_bigger_arr_idx_min_idx_max=0\n  local -i n_bigger_arr_idx_min_idx_min=0\n  local -i n_bigger_arr_idx_min_idx_min_idx=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_max=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min_idx=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min_idx_max=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min_idx_min=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min_idx_min_idx=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min_idx_min_idx_max=0\n  local -i n_bigger_arr_idx_min_idx_min_idx_min_",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_min=0\n    local -i n_arr_sorted_min_idx=0\n    local -i n_arr_sorted_min_idx_prev=0\n    local -i n_arr_sorted_min_idx_prev_idx=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev_idx=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev_idx_prev=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev_idx_prev_idx=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev_idx_prev_idx_prev=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev_idx_prev_idx_prev_idx=0\n    local -i n_arr_sorted_min_idx_prev_idx_prev_idx_prev_idx_prev_idx_prev_idx_prev=0\n    local -i n_arr_sorted",
    "  local -i num=$1\n  local -i n=$num\n  local -i digits=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -i arr=()\n\n  # convert to array\n  while [[ $num -gt 0 ]]; do\n    arr[$len]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( len++ ))\n  done\n\n  # find the first number that is smaller than the number after it\n  for (( i = len - 1; i > 0; i-- )); do\n    if [[ ${arr[$i]} -gt ${arr[$(( i - 1 ))]} ]]; then\n      break\n    fi\n  done\n\n  # if no such number exists, return -1\n  if [[ $i -eq 0 ]]; then\n    echo -1\n    return\n  fi\n\n  # find the smallest number that is bigger than arr[i - 1] and swap them\n  tmp=${arr[$(( i - 1 ))]}\n  for (( j = len - 1; j >= i; j-- )); do\n    if [[ ${arr[$j]} -gt $tmp ]]; then\n      arr[$(( i - 1 ))]=${arr[$j]}\n      arr[$j]=$tmp\n      break\n    fi\n  done\n\n  # reverse the numbers after i - 1\n  for (( j = 0; j < $(( (len - i) / 2 )); j++ )); do\n    tmp=${arr[$(( i + j ))]}\n    arr[$(( i + j ))]=${arr[$(( len - j - 1 ))]}\n    arr[$(( len - j - 1 ))]=$tmp\n  done\n\n  # convert to integer\n  for (( i = 0; i < len; i++ )); do\n    result=$(( result * 10 + arr[$i] ))\n  done\n\n  echo $result",
    "    local num=\"$1\"\n    local num_len=\"${#num}\"\n    local num_arr=()\n    local i\n    local j\n    local tmp\n    local ret\n\n    for (( i=0; i<num_len; i++ )); do\n        num_arr[i]=${num:$i:1}\n    done\n\n    for (( i=num_len-2; i>=0; i-- )); do\n        if (( num_arr[i] < num_arr[i+1] )); then\n            for (( j=num_len-1; j>i; j-- )); do\n                if (( num_arr[j] > num_arr[i] )); then\n                    tmp=${num_arr[i]}\n                    num_arr[i]=${num_arr[j]}\n                    num_arr[j]=$tmp\n                    break\n                fi\n            done\n            break\n        fi\n    done\n\n    if (( i >= 0 )); then\n        for (( j=i+1; j<num_len; j++ )); do\n            for (( k=j+1; k<num_len; k++ )); do\n                if (( num_arr[j] > num_arr[k] )); then\n                    tmp=${num_arr[j]}\n                    num_arr[j]=${num_arr[k]}\n                    num_arr[k]=$tmp\n                fi\n            done\n        done\n    fi\n\n    ret=${num_arr[0]}\n    for (( i=1; i<num_len; i++ )); do\n        ret=$ret${num_arr[i]}\n    done\n\n    echo \"$ret\"",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i temp=0\n  local -i arr=()\n  local -i swap=0\n  local -i result=0\n\n  if [[ $num -lt 10 ]]; then\n    echo \"No bigger number\"\n    return 1\n  fi\n\n  while [[ $num -gt 0 ]]; do\n    temp=$(( $num % 10 ))\n    num=$(( $num / 10 ))\n    arr[$i]=$temp\n    (( i++ ))\n  done\n\n  len=$i\n  (( i-- ))\n  while [[ $i -gt 0 ]]; do\n    if [[ ${arr[$i]} -gt ${arr[$(( $i - 1 ))]} ]]; then\n      swap=${arr[$i]}\n      arr[$i]=${arr[$(( $i - 1 ))]}\n      arr[$(( $i - 1 ))]=$swap\n      break\n    fi\n    (( i-- ))\n  done\n\n  if [[ $i -eq 0 ]]; then\n    echo \"No bigger number\"\n    return 1\n  fi\n\n  for (( j=0; j<len; j++ )); do\n    result=$(( $result * 10 + ${arr[$j]} ))\n  done\n\n  echo $result",
    "  local -i num=\"$1\"\n  local -i next_bigger=\"$num\"\n  local -i i=0\n  local -i j=0\n  local -i tmp=0\n  local -i len=0\n  local -i arr=()\n  local -i arr_len=0\n\n  if [[ $num -lt 10 ]]; then\n    echo $num\n    return\n  fi\n\n  len=$(echo -n $num | wc -m)\n  arr_len=$len-1\n\n  for ((i=0; i<$len; i++)); do\n    arr[$i]=$((num%10))\n    num=$((num/10))\n  done\n\n  for ((i=$arr_len; i>0; i--)); do\n    if [[ ${arr[$i]} -gt ${arr[$i-1]} ]]; then\n      tmp=${arr[$i]}\n      arr[$i]=${arr[$i-1]}\n      arr[$i-1]=$tmp\n      break\n    fi\n  done\n\n  for ((i=0; i<$len; i++)); do\n    next_bigger=$((next_bigger*10 + arr[$i]))\n  done\n\n  echo $next_bigger",
    "  local -i num=$1\n  local -i last_digit=0\n  local -i next_digit=0\n  local -i next_bigger_num=0\n  local -i next_bigger_num_len=0\n  local -i next_bigger_num_last_digit=0\n  local -i next_bigger_num_last_digit_index=0\n  local -i next_bigger_num_last_digit_index_minus_one=0\n  local -i next_bigger_num_last_digit_index_minus_two=0\n  local -i next_bigger_num_last_digit_index_minus_three=0\n  local -i next_bigger_num_last_digit_index_minus_four=0\n  local -i next_bigger_num_last_digit_index_minus_five=0\n  local -i next_bigger_num_last_digit_index_minus_six=0\n  local -i next_bigger_num_last_digit_index_minus_seven=0\n  local -i next_bigger_num_last_digit_index_minus_eight=0\n  local -i next_bigger_num_last_digit_index_minus_nine=0\n  local -i next_bigger_num_last_digit_index_minus_ten=0\n  local -i next_bigger_num_last_digit_index_minus_eleven=0\n  local -i next_bigger_num_last_digit_index_minus_twelve=0\n  local -i next_bigger_num_last_digit_index_minus_thirteen=0\n  local -i next_bigger_num_last_digit_index_minus_fourteen=0\n  local -i next_bigger_num_last_digit_index_minus_fifteen=0\n  local -i next_bigger_num_last_digit_index_minus_sixteen=0\n  local -i next_bigger_num_last_digit_index_minus_seventeen=0\n  local -i next_bigger_num_last_digit_index_minus_eight",
    "    local num=\"$1\"\n    local num_len=\"${#num}\"\n    local i\n    local j\n    local tmp\n    local tmp_num\n    local num_arr\n    local num_arr_len\n    local num_arr_last_index\n    local num_arr_last_index_minus_one\n    local num_arr_last_index_minus_two\n    local num_arr_last_index_minus_three\n    local num_arr_last_index_minus_four\n    local num_arr_last_index_minus_five\n    local num_arr_last_index_minus_six\n    local num_arr_last_index_minus_seven\n    local num_arr_last_index_minus_eight\n    local num_arr_last_index_minus_nine\n    local num_arr_last_index_minus_ten\n    local num_arr_last_index_minus_eleven\n    local num_arr_last_index_minus_twelve\n    local num_arr_last_index_minus_thirteen\n    local num_arr_last_index_minus_fourteen\n    local num_arr_last_index_minus_fifteen\n    local num_arr_last_index_minus_sixteen\n    local num_arr_last_index_minus_seventeen\n    local num_arr_last_index_minus_eighteen\n    local num_arr_last_index_minus_nineteen\n    local num_arr_last_index_minus_twenty\n    local num_arr_last_index_minus_twenty_one\n    local num_arr_last_index_minus_twenty_two\n    local num_arr_last_index_minus_twenty_three\n    local num_arr_last_index_minus_twenty_four\n    local num_arr_last_index_minus_twenty_five\n    local num_arr_last_index_minus_twenty_six\n    local num_arr_last_index_minus_twenty_seven\n    local num_arr_last_index_minus_twenty_eight\n    local num_arr_last_index_minus_twenty_nine\n    local num_arr_",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i arr=()\n    local -i tmp=0\n    local -i ret=0\n\n    while (( num > 0 )); do\n        arr[i]=$(( num % 10 ))\n        num=$(( num / 10 ))\n        (( i++ ))\n    done\n    len=$i\n\n    for (( i = len - 1; i > 0; i-- )); do\n        for (( j = i - 1; j >= 0; j-- )); do\n            if (( arr[i] > arr[j] )); then\n                tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n                break\n            fi\n        done\n        if (( j >= 0 )); then\n            break\n        fi\n    done\n\n    if (( i == 0 )); then\n        echo \"No answer\"\n        return\n    fi\n\n    for (( i = 0; i < len; i++ )); do\n        ret=$(( ret * 10 + arr[i] ))\n    done\n\n    echo $ret",
    "  local number=\"$1\"\n  local digits=($(echo \"$number\" | sed -e 's/./& /g'))\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local temp=0\n  local temp2=0\n  local temp3=0\n  local temp4=0\n  local temp5=0\n  local temp6=0\n  local temp7=0\n  local temp8=0\n  local temp9=0\n  local temp10=0\n  local temp11=0\n  local temp12=0\n  local temp13=0\n  local temp14=0\n  local temp15=0\n  local temp16=0\n  local temp17=0\n  local temp18=0\n  local temp19=0\n  local temp20=0\n  local temp21=0\n  local temp22=0\n  local temp23=0\n  local temp24=0\n  local temp25=0\n  local temp26=0\n  local temp27=0\n  local temp28=0\n  local temp29=0\n  local temp30=0\n  local temp31=0\n  local temp32=0\n  local temp33=0\n  local temp34=0\n  local temp35=0\n  local temp36=0\n  local temp37=0\n  local temp38=0\n  local temp39=0\n  local temp40=0\n  local temp41=0\n  local temp42=0\n  local temp43=0\n  local temp44=0\n  local temp45=0\n  local temp46=0\n  local temp47=0\n  local temp48=0\n  local temp49=0\n  local temp50=0\n  local temp51=0\n  local temp52=0\n  local temp53=0\n  local temp54=0\n  local temp55=0\n  local temp56=0\n  local temp57=0\n  local temp58=0\n  local temp59=0\n  local temp60=0\n  local temp61=0\n  local temp62=0\n  local temp63=0\n  local temp64=0\n  local temp65=0\n ",
    "  local num=$1\n  local len=${#num}\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local arr=()\n  local arr2=()\n  local arr3=()\n  local arr4=()\n  local arr5=()\n  local arr6=()\n  local arr7=()\n  local arr8=()\n  local arr9=()\n  local arr0=()\n  local arr_all=()\n  local arr_all_len=0\n  local arr_all_idx=0\n  local arr_all_idx_len=0\n  local arr_all_idx_len_max=0\n  local arr_all_idx_len_max_idx=0\n  local arr_all_idx_len_max_idx_len=0\n  local arr_all_idx_len_max_idx_len_max=0\n  local arr_all_idx_len_max_idx_len_max_idx=0\n  local arr_all_idx_len_max_idx_len_max_idx_len=0\n  local arr_all_idx_len_max_idx_len_max_idx_len_max=0\n  local arr_all_idx_len_max_idx_len_max_idx_len_max_idx=0\n  local arr_all_idx_len_max_idx_len_max_idx_len_max_idx_len=0\n  local arr_all_idx_len_max_idx_len_max_idx_len_max_idx_len_max=0\n  local arr_all_idx_len_max_idx_len_max_idx_len_max_idx_len_max_idx=0\n  local arr_all_idx_len_max_idx_len_max_idx_len_max_idx_len_max_idx_len=0\n  local arr_all_idx_len_max_idx_len_max_idx_",
    "    local -i num=$1\n    local -i digits=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -i n=$1\n    local -i i=0 j=0 k=0\n    local -a digits=()\n    local -i ndigits=0\n    local -i ndigits_1=0\n    local -i ndigits_2=0\n    local -i ndigits_3=0\n    local -i ndigits_4=0\n    local -i ndigits_5=0\n    local -i ndigits_6=0\n    local -i ndigits_7=0\n    local -i ndigits_8=0\n    local -i ndigits_9=0\n    local -i ndigits_0=0\n    local -i ndigits_1_pos=0\n    local -i ndigits_2_pos=0\n    local -i ndigits_3_pos=0\n    local -i ndigits_4_pos=0\n    local -i ndigits_5_pos=0\n    local -i ndigits_6_pos=0\n    local -i ndigits_7_pos=0\n    local -i ndigits_8_pos=0\n    local -i ndigits_9_pos=0\n    local -i ndigits_0_pos=0\n    local -i ndigits_1_pos_1=0\n    local -i ndigits_2_pos_1=0\n    local -i ndigits_3_pos_1=0\n    local -i ndigits_4_pos_1=0\n    local -i ndigits_5_pos_1=0\n    local -i ndigits_6_pos_1=0\n    local -i ndigits_7_pos_1=0\n    local -i ndigits_8_pos_1=0\n    local -i ndigits_9_pos_1=0\n    local -i ndigits_0_pos_1=0\n    local -i ndigits_1_pos_2=0\n    local -i ndigits_2_pos_2=0\n    local -i ndigits_3_pos_2=0\n    local -",
    "  local -i number=$1\n  local -i digit\n  local -i digits=0\n  local -i digits_array=()\n  local -i digits_array_length=0\n  local -i digits_array_index=0\n  local -i digits_array_index_swap=0\n  local -i digits_array_index_swap_temp=0\n  local -i digits_array_index_swap_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n  local -i digits_array_index_swap_temp_temp_temp_temp",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i result=0\n    local -i arr=()\n    local -i arr_len=0\n    local -i arr_i=0\n    local -i arr_j=0\n    local -i arr_tmp=0\n    local -i arr_result=0\n    local -i arr_tmp_len=0\n    local -i arr_tmp_i=0\n    local -i arr_tmp_j=0\n    local -i arr_tmp_result=0\n    local -i arr_tmp_tmp=0\n    local -i arr_tmp_result=0\n    local -i arr_tmp_arr=()\n    local -i arr_tmp_arr_len=0\n    local -i arr_tmp_arr_i=0\n    local -i arr_tmp_arr_j=0\n    local -i arr_tmp_arr_tmp=0\n    local -i arr_tmp_arr_result=0\n    local -i arr_tmp_arr_tmp_len=0\n    local -i arr_tmp_arr_tmp_i=0\n    local -i arr_tmp_arr_tmp_j=0\n    local -i arr_tmp_arr_tmp_tmp=0\n    local -i arr_tmp_arr_tmp_result=0\n    local -i arr_tmp_arr_tmp_arr=()\n    local -i arr_tmp_arr_tmp_arr_len=0\n    local -i arr_tmp_arr_tmp_arr_i=0\n    local -i arr_tmp_arr_tmp_arr_j=0\n    local -i arr_tmp_arr_tmp_arr_tmp=0\n    local -i arr_tmp_arr_tmp_arr_result=0\n    local -i arr_tmp_arr_tmp_arr_tmp_len=0\n    local -i arr_tmp_arr_tmp_arr_tmp_i=0\n    local -i arr_tmp_arr_tmp_arr_tmp_j=0\n    local -i arr",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_max=0\n  local -i n_arr_max_idx=0\n  local -i n_arr_max_idx_prev=0\n  local -i n_arr_max_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_max",
    "  local -i number=$1\n  local -i digit\n  local -i next_digit\n  local -i next_number\n  local -i next_number_digit\n  local -i next_number_digit_count\n  local -i next_number_digit_count_max\n  local -i next_number_digit_count_max_index\n  local -i next_number_digit_count_max_index_prev\n  local -i next_number_digit_count_max_index_prev_digit\n  local -i next_number_digit_count_max_index_prev_digit_count\n  local -i next_number_digit_count_max_index_prev_digit_count_max\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit_count\n  local -i next_number_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=()\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_num=0\n  local tmp_num_len=0\n  local tmp_num_arr=()\n  local tmp_num_arr_len=0\n  local result=0\n\n  # Convert the number to an array\n  for (( i=0; i<num_len; i++ )); do\n    num_arr[i]=${num:$i:1}\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i=0; i<num_len-1; i++ )); do\n    if [[ ${num_arr[i]} -lt ${num_arr[i+1]} ]]; then\n      break\n    fi\n  done\n\n  # If no such digit exists, the number is the largest possible number\n  if [[ $i -eq $num_len-1 ]]; then\n    echo \"No bigger number exists\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above which is greater than the digit found above\n  for (( j=i+1; j<num_len; j++ )); do\n    if [[ ${num_arr[j]} -gt ${num_arr[i]} ]]; then\n      tmp=${num_arr[i]}\n      num_arr[i]=${num_arr[j]}\n      num_arr[j]=$tmp\n      break\n    fi\n  done\n\n  # Sort the digits to the right of the digit found above in ascending order\n  for (( k=i+1; k<num_len; k++ )); do\n    for (( j=i+1; j<num_len-1; j++ )); do\n      if [[ ${num_arr[j]} -gt ${num_arr[j+1]} ]]; then\n        tmp=${num_arr[j]}\n        num_arr[j]=${num_arr[j+1]}\n        num_arr[j+1]=$tmp\n      fi\n    done\n  done\n\n  # Convert the array back to a",
    "  local number=\"$1\"\n  local -i length=${#number}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i",
    "  local number=\"$1\"\n  local digits=($(echo \"$number\" | grep -o .))\n  local len=${#digits[@]}\n  local i\n  for ((i=len-1; i>0; i--)); do\n    if ((digits[i] > digits[i-1])); then\n      local j\n      for ((j=len-1; j>=i; j--)); do\n        if ((digits[j] > digits[i-1])); then\n          local tmp=${digits[j]}\n          digits[j]=${digits[i-1]}\n          digits[i-1]=$tmp\n          break\n        fi\n      done\n      break\n    fi\n  done\n  if ((i == 0)); then\n    echo \"No bigger number found\"\n  else\n    local j\n    for ((j=i; j<len; j++)); do\n      for ((k=j+1; k<len; k++)); do\n        if ((digits[k] < digits[j])); then\n          local tmp=${digits[j]}\n          digits[j]=${digits[k]}\n          digits[k]=$tmp\n        fi\n      done\n    done\n    echo \"${digits[@]}\" | tr -d ' '\n  fi",
    "  local -i n=$1\n  local -i d1 d2\n  local -i -a digits=()\n  local -i -a sorted=()\n  local -i -a bigger=()\n  local -i i j k\n\n  # Convert to array of digits\n  while (( n > 0 )); do\n    digits+=( n % 10 )\n    (( n /= 10 ))\n  done\n\n  # Sort digits in descending order\n  sorted=( $(printf \"%d\\n\" \"${digits[@]}\" | sort -nr) )\n\n  # Find the first digit that is smaller than the next digit\n  for (( i = 0; i < ${#digits[@]} - 1; i++ )); do\n    if (( digits[i] < digits[i+1] )); then\n      d1=${digits[i]}\n      d2=${digits[i+1]}\n      break\n    fi\n  done\n\n  # If no such digit exists, then the number is already the biggest possible\n  if (( d1 == 0 )); then\n    echo \"$1\"\n    return\n  fi\n\n  # Remove the smaller digit from the sorted array\n  for (( i = 0; i < ${#sorted[@]}; i++ )); do\n    if (( sorted[i] == d1 )); then\n      unset sorted[i]\n      break\n    fi\n  done\n\n  # Find the smallest digit that is bigger than the smaller digit\n  for (( i = 0; i < ${#sorted[@]}; i++ )); do\n    if (( sorted[i] > d1 )); then\n      d2=${sorted[i]}\n      unset sorted[i]\n      break\n    fi\n  done\n\n  # Add the smaller digit to the beginning of the sorted array\n  sorted=( \"$d1\" \"${sorted[@]}\" )\n\n  # Add the bigger digit to the beginning of the sorted array\n  sorted=( \"$d2\" \"${sorted[@]}\" )\n\n  # Add the remaining digits to the beginning of the sorted array\n  sorted=( \"${digits[@]}\" \"${sorted[@]}\" )\n\n  # Convert to integer\n  for (( i = 0; i < ${#sorted[@]",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=()\n  local num_arr_len=0\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_len=0\n  local tmp_arr=()\n  local tmp_arr_len=0\n  local tmp_str=''\n  local tmp_str_len=0\n  local result=''\n  local result_len=0\n  local result_arr=()\n  local result_arr_len=0\n  local result_str=''\n  local result_str_len=0\n\n  # Convert the number to an array of digits.\n  for ((i=0; i<num_len; i++)); do\n    num_arr[$i]=${num:$i:1}\n  done\n  num_arr_len=${#num_arr[@]}\n\n  # Find the first digit that is less than the digit to its right.\n  for ((i=0; i<num_arr_len-1; i++)); do\n    if [[ ${num_arr[$i]} -lt ${num_arr[$i+1]} ]]; then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is already the largest possible.\n  if [[ $i -eq $((num_arr_len-1)) ]]; then\n    echo -1\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above that is greater than it.\n  for ((j=$i+1; j<num_arr_len; j++)); do\n    if [[ ${num_arr[$i]} -lt ${num_arr[$j]} ]]; then\n      break\n    fi\n  done\n\n  # Swap the two digits found above.\n  tmp=${num_arr[$i]}\n  num_arr[$i]=${num_arr[$j]}\n  num_arr[$j]=$tmp\n\n  # Reverse the digits to the right of the digit found above.\n  tmp_arr=()\n  for ((k=$i+1; k<num_arr_len; k",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_min=0\n    local -i n_arr_min_idx=0\n    local -i n_arr_min_idx_tmp=0\n    local -i n_arr_min_idx_tmp_idx=0\n    local -i n_arr_min_idx_tmp_idx_tmp=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx_tmp=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx_tmp=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx=0\n    local -i n_arr_min_idx_tmp_idx_tmp_idx_tmp_idx_tmp_idx",
    "    local num=\"$1\"\n    local num_len=${#num}\n    local num_arr=()\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp_num=0\n\n    # convert number to array\n    for (( i=0; i<num_len; i++ )); do\n        num_arr[i]=${num:i:1}\n    done\n\n    # find the first number that is smaller than the number after it\n    for (( i=num_len-1; i>0; i-- )); do\n        if [[ ${num_arr[i]} -lt ${num_arr[i-1]} ]]; then\n            break\n        fi\n    done\n\n    # if no such number found, then the number is the largest\n    if [[ $i -eq 0 ]]; then\n        echo \"No bigger number found\"\n        return 1\n    fi\n\n    # find the smallest number that is larger than the number found above\n    for (( j=num_len-1; j>=i; j-- )); do\n        if [[ ${num_arr[j]} -gt ${num_arr[i-1]} ]]; then\n            break\n        fi\n    done\n\n    # swap the two numbers\n    tmp=${num_arr[i-1]}\n    num_arr[i-1]=${num_arr[j]}\n    num_arr[j]=$tmp\n\n    # reverse the numbers after the number found above\n    for (( j=i, k=num_len-1; j<k; j++, k-- )); do\n        tmp=${num_arr[j]}\n        num_arr[j]=${num_arr[k]}\n        num_arr[k]=$tmp\n    done\n\n    # convert array to number\n    for (( i=0; i<num_len; i++ )); do\n        tmp_num=$(( 10 * tmp_num + num_arr[i] ))\n    done\n\n    echo $tmp_num",
    "    local -i num=$1\n    local -i digit\n    local -i digits=0\n    local -i num_digits=0\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "    local -i num=$1\n    local -i i=0\n    local -i len=${#num}\n    local -i arr=()\n    local -i min_idx=0\n    local -i min_val=0\n    local -i swap_idx=0\n    local -i swap_val=0\n    local -i tmp=0\n    local -i result=0\n\n    # Convert integer to array\n    while [ $num -gt 0 ]; do\n        arr[$i]=$(( num % 10 ))\n        num=$(( num / 10 ))\n        (( i++ ))\n    done\n\n    # Find the first digit that is smaller than the digit to its right\n    for (( i=len-1; i>0; i-- )); do\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            swap_idx=$i\n            swap_val=${arr[$i]}\n            break\n        fi\n    done\n\n    # If no such digit exists, the number is already the largest possible\n    if [ $swap_idx -eq 0 ]; then\n        echo -1\n        return\n    fi\n\n    # Find the smallest digit to the right of the digit found above\n    for (( i=swap_idx; i<len; i++ )); do\n        if [ ${arr[$i]} -lt $swap_val ]; then\n            swap_val=${arr[$i]}\n            min_idx=$i\n        fi\n    done\n\n    # Swap the digits\n    tmp=${arr[$swap_idx-1]}\n    arr[$swap_idx-1]=${arr[$min_idx]}\n    arr[$min_idx]=$tmp\n\n    # Sort the digits to the right of the swapped digit\n    for (( i=swap_idx; i<len-1; i++ )); do\n        min_idx=$i\n        min_val=${arr[$i]}\n        for (( j=i+1; j<len; j++ )); do\n            if [ ${arr[$j]} -lt $min_val ]; then\n                min_idx=$j\n                min_val=${arr",
    "  local number=$1\n  local digits=()\n  local i=0\n  local j=0\n  local tmp=0\n  local tmp_number=0\n  local result=0\n  local result_number=0\n\n  while [ $number -gt 0 ]; do\n    digits[$i]=$((number % 10))\n    number=$((number / 10))\n    ((i++))\n  done\n\n  for ((i=${#digits[@]}-1; i>0; i--)); do\n    for ((j=0; j<i; j++)); do\n      if [ ${digits[$j]} -lt ${digits[$((j+1))]} ]; then\n        tmp=${digits[$j]}\n        digits[$j]=${digits[$((j+1))]}\n        digits[$((j+1))]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<${#digits[@]}; i++)); do\n    tmp_number=$((tmp_number * 10 + digits[$i]))\n  done\n\n  for ((i=0; i<${#digits[@]}; i++)); do\n    for ((j=0; j<${#digits[@]}; j++)); do\n      if [ ${digits[$i]} -gt ${digits[$j]} ]; then\n        tmp=${digits[$i]}\n        digits[$i]=${digits[$j]}\n        digits[$j]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<${#digits[@]}; i++)); do\n    result_number=$((result_number * 10 + digits[$i]))\n  done\n\n  if [ $result_number -eq $tmp_number ]; then\n    echo -1\n  else\n    echo $result_number\n  fi",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -a digits\n  local -a new_digits\n  local -i new_num=0\n\n  for ((i=0; i<len; i++)); do\n    digits[i]=${num:i:1}\n  done\n\n  for ((i=len-1; i>0; i--)); do\n    if ((digits[i] > digits[i-1])); then\n      new_digits=(${digits[@]:0:i-1})\n      new_digits+=(${digits[@]:i})\n      new_digits=($(echo \"${new_digits[*]}\" | tr ' ' '\\n' | sort -n))\n      new_digits=(${new_digits[@]:0:i-1} ${digits[i-1]} ${new_digits[@]:i-1})\n      new_digits+=(${digits[@]:i+1})\n      break\n    fi\n  done\n\n  if ((i == 0)); then\n    echo \"No bigger number possible\"\n    return 1\n  fi\n\n  for ((i=0; i<len; i++)); do\n    new_num+=$((10**i * new_digits[i]))\n  done\n\n  echo $new_num",
    "    local -i num=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i max=0\n    local -i min=0\n    local -i max_i=0\n    local -i min_i=0\n    local -i result=0\n    local -a arr=()\n    local -a arr_tmp=()\n    local -a arr_result=()\n\n    if [[ $num -lt 10 ]]; then\n        echo $num\n        return\n    fi\n\n    while [[ $num -gt 0 ]]; do\n        arr[$i]=$((num % 10))\n        num=$((num / 10))\n        ((i++))\n    done\n\n    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        max=${arr[$i]}\n        max_i=$i\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[$j]} -gt $max ]]; then\n                max=${arr[$j]}\n                max_i=$j\n            fi\n        done\n        tmp=${arr[$i]}\n        arr[$i]=$max\n        arr[$max_i]=$tmp\n    done\n\n    min=${arr[0]}\n    min_i=0\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[$i]} -lt $min ]]; then\n            min=${arr[$i]}\n            min_i=$i\n        fi\n    done\n\n    if [[ $min_i -eq 0 ]]; then\n        for ((i=0; i<len; i++)); do\n            arr_tmp[$i]=${arr[$i]}\n        done\n        for ((i=0; i<len; i++)); do\n            arr_result[$i]=${arr_tmp[$((len-i-1))]}\n        done\n        for ((i=0; i<len; i++)); do\n            result=$((result * 10 + arr_result[$i]))\n        done",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i temp=0\n    local -i arr=()\n    local -i arr_len=0\n    local -i arr_i=0\n    local -i arr_j=0\n    local -i arr_temp=0\n    local -i arr_num=0\n    local -i arr_num_len=0\n    local -i arr_num_i=0\n    local -i arr_num_j=0\n    local -i arr_num_temp=0\n    local -i arr_num_temp2=0\n    local -i arr_num_temp3=0\n    local -i arr_num_temp4=0\n    local -i arr_num_temp5=0\n    local -i arr_num_temp6=0\n    local -i arr_num_temp7=0\n    local -i arr_num_temp8=0\n    local -i arr_num_temp9=0\n    local -i arr_num_temp10=0\n    local -i arr_num_temp11=0\n    local -i arr_num_temp12=0\n    local -i arr_num_temp13=0\n    local -i arr_num_temp14=0\n    local -i arr_num_temp15=0\n    local -i arr_num_temp16=0\n    local -i arr_num_temp17=0\n    local -i arr_num_temp18=0\n    local -i arr_num_temp19=0\n    local -i arr_num_temp20=0\n    local -i arr_num_temp21=0\n    local -i arr_num_temp22=0\n    local -i arr_num_temp23=0\n    local -i arr_num_temp24=0\n    local -i arr_num_temp25=0\n    local -i arr_num_temp26=0\n    local -i arr_num_temp27=0\n    local -i arr_num_temp28=0\n    local -i arr_num_temp29=0\n   ",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local",
    "    local -i num=$1\n    local -i len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "  local -i number=$1\n  local -i digits=${#number}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger_number=0\n  local -i next_bigger_number_digits=0\n  local -i next_bigger_number_digit=0\n  local -i next_bigger_number_digit_index=0\n  local -i next_bigger_number_digit_index_offset=0\n  local -i next_bigger_number_digit_index_offset_max=0\n  local -i next_bigger_number_digit_index_offset_max_index=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset_max=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset_max_index=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset_max_index_offset=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset_max_index_offset_max=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset_max_index_offset_max_index=0\n  local -i next_bigger_number_digit_index_offset_max_index_offset_max_index",
    "  local -i num=$1\n  local -i i=0\n  local -a digits\n  local -i len=0\n  local -i j=0\n  local -i k=0\n  local -i tmp=0\n  local -i next_bigger=0\n\n  while (( num > 0 )); do\n    digits[i++]=$(( num % 10 ))\n    num=$(( num / 10 ))\n  done\n  len=${#digits[@]}\n\n  for (( i = len - 1; i > 0; i-- )); do\n    if (( digits[i] > digits[i - 1] )); then\n      tmp=digits[i]\n      digits[i]=digits[i - 1]\n      digits[i - 1]=tmp\n      break\n    fi\n  done\n\n  for (( i = 0; i < len; i++ )); do\n    next_bigger=$(( next_bigger * 10 + digits[i] ))\n  done\n\n  echo $next_bigger",
    "  local -i num=\"$1\"\n  local -i num_len=\"${#num}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=($(echo $num | grep -o .))\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_arr=()\n  local tmp_len=0\n  local tmp_str=''\n  local result=''\n\n  # find the first digit that is smaller than the digit next to it\n  for ((i=num_len-1; i>0; i--)); do\n    if ((num_arr[i] > num_arr[i-1])); then\n      break\n    fi\n  done\n\n  # if no such digit is found, then the number is already the biggest\n  if ((i == 0)); then\n    echo $num\n    return\n  fi\n\n  # find the smallest digit that is bigger than num_arr[i-1]\n  for ((j=i; j<num_len; j++)); do\n    if ((num_arr[j] > num_arr[i-1])); then\n      break\n    fi\n  done\n\n  # swap num_arr[i-1] and num_arr[j]\n  tmp=${num_arr[i-1]}\n  num_arr[i-1]=${num_arr[j]}\n  num_arr[j]=$tmp\n\n  # sort the digits after num_arr[i-1]\n  tmp_arr=(${num_arr[@]:i})\n  tmp_len=${#tmp_arr[@]}\n  for ((k=0; k<tmp_len; k++)); do\n    for ((j=k+1; j<tmp_len; j++)); do\n      if ((tmp_arr[k] > tmp_arr[j])); then\n        tmp=${tmp_arr[k]}\n        tmp_arr[k]=${tmp_arr[j]}\n        tmp_arr[j]=$tmp\n      fi\n    done\n  done\n\n  # concatenate the result\n  tmp_str=$(echo ${tmp_arr[@]})\n  result=$(echo ${num_arr[@]:0:i}$tmp_str)\n ",
    "    local digits=($(echo $1 | sed 's/./& /g'))\n    local len=${#digits[@]}\n    local i=$((len-1))\n    local j=$((len-1))\n    local tmp\n    local result\n\n    # Find the first digit that is smaller than the digit to its right\n    while [[ $i -gt 0 ]]; do\n        if [[ ${digits[$i]} -lt ${digits[$((i-1))]} ]]; then\n            break\n        fi\n        i=$((i-1))\n    done\n\n    # If no such digit is found, the number is the largest possible\n    if [[ $i -eq 0 ]]; then\n        echo $1\n        return\n    fi\n\n    # Find the smallest digit to the right of the pivot that is larger than the pivot\n    while [[ $j -ge $i ]]; do\n        if [[ ${digits[$j]} -gt ${digits[$((i-1))]} ]]; then\n            break\n        fi\n        j=$((j-1))\n    done\n\n    # Swap the pivot with the smallest digit to its right that is larger than the pivot\n    tmp=${digits[$((i-1))]}\n    digits[$((i-1))]=${digits[$j]}\n    digits[$j]=$tmp\n\n    # Reverse the digits to the right of the pivot\n    for ((j=i; j<len; j++)); do\n        result=$result${digits[$((len-j+i-1))]}\n    done\n\n    # Concatenate the digits to the left of the pivot with the reversed digits to the right of the pivot\n    for ((j=0; j<i; j++)); do\n        result=$result${digits[$j]}\n    done\n\n    echo $result",
    "  local number=\"$1\"\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0",
    "  local -i n=$1\n  local -i d\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -",
    "    local number=$1\n    local n=$number\n    local digits=()\n    local i=0\n    while [ $n -gt 0 ]; do\n        digits[$i]=$((n%10))\n        n=$((n/10))\n        i=$((i+1))\n    done\n    local len=${#digits[@]}\n    local j=$((len-2))\n    while [ $j -ge 0 ]; do\n        if [ ${digits[$j]} -lt ${digits[$((j+1))]} ]; then\n            local k=$((j+1))\n            while [ $k -lt $len ]; do\n                if [ ${digits[$j]} -lt ${digits[$k]} ]; then\n                    break\n                fi\n                k=$((k+1))\n            done\n            local tmp=${digits[$j]}\n            digits[$j]=${digits[$((k-1))]}\n            digits[$((k-1))]=$tmp\n            break\n        fi\n        j=$((j-1))\n    done\n    if [ $j -lt 0 ]; then\n        echo \"No bigger number\"\n        return\n    fi\n    local l=$((j+1))\n    local r=$((len-1))\n    while [ $l -lt $r ]; do\n        local tmp=${digits[$l]}\n        digits[$l]=${digits[$r]}\n        digits[$r]=$tmp\n        l=$((l+1))\n        r=$((r-1))\n    done\n    local result=0\n    for (( i=0; i<len; i++ )); do\n        result=$((result*10+digits[$i]))\n    done\n    echo $result",
    "  local -i num=$1\n  local -i digit\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n ",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n  local array=()\n\n  for (( i=0; i<digits; i++ )); do\n    array[$i]=${number:$i:1}\n  done\n\n  for (( i=0; i<digits; i++ )); do\n    for (( j=i+1; j<digits; j++ )); do\n      if [[ ${array[$i]} -lt ${array[$j]} ]]; then\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n      fi\n    done\n  done\n\n  for (( i=0; i<digits; i++ )); do\n    result=$(( result + array[$i] * 10**$i ))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i digit\n  local -i digit_prev\n  local -i digit_next\n  local -i digit_next_next\n  local -i digit_next_next_next\n  local -i digit_next_next_next_next\n  local -i digit_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n  local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next",
    "  local -i num=$1\n  local -i digit\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n",
    "  local -i num=$1\n  local -i digit\n  local -i last_digit\n  local -i next_digit\n  local -i next_num\n  local -i i=1\n  local -i j\n  local -i k\n  local -i len=${#1}\n  local -a digits\n  local -a next_digits\n\n  # Split the number into digits\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    digits[i]=$digit\n    (( i++ ))\n  done\n\n  # Find the next bigger number\n  for (( i = len - 1; i > 0; i-- )); do\n    last_digit=${digits[i]}\n    next_digit=${digits[i-1]}\n    if (( last_digit > next_digit )); then\n      # Swap the digits\n      digits[i-1]=$last_digit\n      digits[i]=$next_digit\n\n      # Sort the remaining digits\n      for (( j = i + 1; j <= len; j++ )); do\n        for (( k = j + 1; k <= len; k++ )); do\n          if (( digits[j] > digits[k] )); then\n            last_digit=${digits[j]}\n            digits[j]=${digits[k]}\n            digits[k]=$last_digit\n          fi\n        done\n      done\n\n      # Join the digits into a number\n      next_num=0\n      for (( j = 1; j <= len; j++ )); do\n        next_num=$(( next_num * 10 + digits[j] ))\n      done\n\n      echo $next_num\n      return\n    fi\n  done\n\n  echo \"No bigger number\"",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_max=0\n  local -i n_arr_max_idx=0\n  local -i n_arr_min=0\n  local -i n_arr_min_idx=0\n  local -i n_arr_min_idx_gt=0\n  local -i n_arr_min_idx_gt_idx=0\n  local -i n_arr_min_idx_gt_idx_val=0\n  local -i n_arr_min_idx_gt_val=0\n  local -i n_arr_min_idx_val=0\n  local -i n_arr_min_val=0\n  local -i n_arr_min_val_idx=0\n  local -i n_arr_min_val_idx_val=0\n  local -i n_arr_min_val_val=0\n  local -i n_arr_min_val_val_idx=0\n  local -i n_arr_min_val_val_idx_val=0\n  local -i n_arr_min_val_val_val=0\n  local -i n_arr_min_val_val_val_idx=0\n  local -i n_arr_min_val_val_val_idx_val=0\n  local -i n_arr_min_val_val_val_val=0\n  local -i n_arr_min_val_val_val_val_idx=0\n  local -i n_arr_min_val_val_val_val_idx_val=0\n  local -i n_arr_min_val_val_val_val_val=0\n  local -i n_arr_min_val_val_val_val_val_id",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=($(echo $num | grep -o .))\n  local i=0\n  local j=0\n  local tmp=0\n  local found=0\n  local result=0\n\n  for ((i=0; i<num_len; i++)); do\n    for ((j=i+1; j<num_len; j++)); do\n      if [ ${num_arr[$i]} -lt ${num_arr[$j]} ]; then\n        tmp=${num_arr[$i]}\n        num_arr[$i]=${num_arr[$j]}\n        num_arr[$j]=$tmp\n        found=1\n        break\n      fi\n    done\n    if [ $found -eq 1 ]; then\n      break\n    fi\n  done\n\n  if [ $found -eq 0 ]; then\n    echo \"No bigger number found\"\n    return\n  fi\n\n  for ((i=0; i<num_len; i++)); do\n    result=$(($result * 10 + ${num_arr[$i]}))\n  done\n\n  echo $result",
    "  local number=$1\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n ",
    "  local number=\"$1\"\n  local digits=($(echo \"$number\" | grep -o .))\n  local i=${#digits[@]}\n  local j\n  local tmp\n  local found=false\n\n  while (( i > 0 )); do\n    (( i-- ))\n    j=$i\n    while (( j > 0 )); do\n      (( j-- ))\n      if (( digits[j] < digits[i] )); then\n        tmp=${digits[i]}\n        digits[i]=${digits[j]}\n        digits[j]=$tmp\n        found=true\n        break\n      fi\n    done\n    if [[ $found == true ]]; then\n      break\n    fi\n  done\n\n  if [[ $found == true ]]; then\n    echo \"${digits[@]}\" | tr -d ' '\n  else\n    echo \"$number\"\n  fi",
    "    local -i num=\"$1\"\n    local -i num_len=\"${#1}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i arr=()\n    local -i arr_len=0\n    local -i result=0\n\n    # Convert the number to an array\n    while [ $num -gt 0 ]; do\n        arr[$i]=$(( num % 10 ))\n        num=$(( num / 10 ))\n        (( i++ ))\n    done\n    arr_len=$i\n\n    # Find the first digit that is smaller than the digit to its right\n    for (( i=arr_len-1; i>0; i-- )); do\n        if [ ${arr[$i]} -gt ${arr[$(( i-1 ))]} ]; then\n            break\n        fi\n    done\n\n    # If we found a digit that is smaller than the digit to its right,\n    # find the smallest digit to its right that is larger than it\n    if [ $i -gt 0 ]; then\n        for (( j=arr_len-1; j>i-1; j-- )); do\n            if [ ${arr[$j]} -gt ${arr[$(( i-1 ))]} ]; then\n                tmp=${arr[$(( i-1 ))]}\n                arr[$(( i-1 ))]=${arr[$j]}\n                arr[$j]=$tmp\n                break\n            fi\n        done\n    fi\n\n    # Sort the digits to the right of the digit we found\n    for (( i=i; i<arr_len-1; i++ )); do\n        for (( j=i+1; j<arr_len; j++ )); do\n            if [ ${arr[$j]} -lt ${arr[$i]} ]; then\n                tmp=${arr[$i]}\n                arr[$i]=${arr[$j]}\n                arr[$j]=$tmp\n            fi\n        done\n    done\n\n    # Convert the array back to an integer\n    for (( i=0; i<arr_len; i++ )); do\n        result=$(( result * 10 + arr[$i] ))\n    done\n\n    echo $result",
    "  local -i number=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i ret=0\n    local -a arr=()\n\n    # convert number to array\n    while (( num > 0 )); do\n        arr[i++]=$(( num % 10 ))\n        num=$(( num / 10 ))\n    done\n\n    # find the first digit that is smaller than the digit after it\n    len=${#arr[@]}\n    for (( i=len-2; i>=0; i-- )); do\n        if (( arr[i] < arr[i+1] )); then\n            break\n        fi\n    done\n\n    # if no such digit is found, then the number is the largest possible\n    if (( i < 0 )); then\n        echo \"No such number exists\"\n        return\n    fi\n\n    # find the smallest digit to the right of the pivot that is greater than the pivot\n    for (( j=i+1; j<len; j++ )); do\n        if (( arr[j] > arr[i] )); then\n            tmp=${arr[i]}\n            arr[i]=${arr[j]}\n            arr[j]=$tmp\n            break\n        fi\n    done\n\n    # sort the digits to the right of the pivot\n    for (( j=i+1; j<len; j++ )); do\n        for (( k=j+1; k<len; k++ )); do\n            if (( arr[j] > arr[k] )); then\n                tmp=${arr[j]}\n                arr[j]=${arr[k]}\n                arr[k]=$tmp\n            fi\n        done\n    done\n\n    # convert array to number\n    for (( i=0; i<len; i++ )); do\n        ret=$(( ret * 10 + arr[i] ))\n    done\n\n    echo $ret",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max\n  local -i next_num_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit",
    "  local num=$1\n  local digits=${#num}\n  local i=$((digits-1))\n  local j=$((digits-1))\n  local k=$((digits-1))\n  local tmp\n  local result\n\n  while (( i >= 0 )); do\n    while (( j >= 0 )); do\n      if (( num[i] > num[j] )); then\n        tmp=${num[i]}\n        num[i]=${num[j]}\n        num[j]=$tmp\n        result=${num[@]:0:i+1}\n        result+=${num[@]:i+1:j-i}\n        result+=${num[@]:j:k-j+1}\n        echo $result\n        return 0\n      fi\n      (( j-- ))\n    done\n    (( i-- ))\n    j=$k\n  done\n\n  echo -1",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i temp=0\n  local -i ret=0\n  local -i arr=()\n\n  len=${#num}\n  for (( i=0; i<len; i++ )); do\n    arr[i]=${num:$i:1}\n  done\n\n  for (( i=len-1; i>0; i-- )); do\n    if (( arr[i] > arr[i-1] )); then\n      temp=arr[i-1]\n      arr[i-1]=arr[i]\n      arr[i]=temp\n      break\n    fi\n  done\n\n  for (( i=0; i<len; i++ )); do\n    ret=$(( ret * 10 + arr[i] ))\n  done\n\n  echo \"$ret\"",
    "  local -i num=\"$1\"\n  local -i num_len=\"${#1}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -a arr=()\n\n  # Split the number into an array of digits\n  while (( num > 0 )); do\n    arr[i++]=$(( num % 10 ))\n    num=$(( num / 10 ))\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i = ${#arr[@]} - 1; i > 0; i-- )); do\n    if (( arr[i] > arr[i-1] )); then\n      break\n    fi\n  done\n\n  # If no such digit exists, the number is the largest possible\n  if (( i == 0 )); then\n    echo \"No bigger number\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the pivot that is larger than the pivot\n  for (( j = ${#arr[@]} - 1; j > i; j-- )); do\n    if (( arr[j] > arr[i-1] )); then\n      break\n    fi\n  done\n\n  # Swap the pivot with the smallest digit to its right\n  tmp=${arr[j]}\n  arr[j]=${arr[i-1]}\n  arr[i-1]=$tmp\n\n  # Reverse the digits to the right of the pivot\n  len=$(( ${#arr[@]} - i ))\n  for (( j = 0; j < len / 2; j++ )); do\n    tmp=${arr[i+j]}\n    arr[i+j]=${arr[len-1-j]}\n    arr[len-1-j]=$tmp\n  done\n\n  # Reconstruct the number from the array of digits\n  for (( i = 0; i < ${#arr[@]}; i++ )); do\n    result=$(( result * 10 + arr[i] ))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -i arr=()\n  local -i tmp=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n",
    "  local -i num=$1\n  local -i digit\n  local -i last_digit\n  local -i last_digit_index\n  local -i last_digit_index_temp\n  local -i last_digit_temp\n  local -i num_temp\n  local -i num_temp_2\n  local -i num_temp_3\n  local -i num_temp_4\n  local -i num_temp_5\n  local -i num_temp_6\n  local -i num_temp_7\n  local -i num_temp_8\n  local -i num_temp_9\n  local -i num_temp_10\n  local -i num_temp_11\n  local -i num_temp_12\n  local -i num_temp_13\n  local -i num_temp_14\n  local -i num_temp_15\n  local -i num_temp_16\n  local -i num_temp_17\n  local -i num_temp_18\n  local -i num_temp_19\n  local -i num_temp_20\n  local -i num_temp_21\n  local -i num_temp_22\n  local -i num_temp_23\n  local -i num_temp_24\n  local -i num_temp_25\n  local -i num_temp_26\n  local -i num_temp_27\n  local -i num_temp_28\n  local -i num_temp_29\n  local -i num_temp_30\n  local -i num_temp_31\n  local -i num_temp_32\n  local -i num_temp_33\n  local -i num_temp_34\n  local -i num_temp_35\n  local -i num_temp_36\n  local -i num_temp_37\n  local -i num_temp_38\n  local -i num_temp_39\n  local -i num_temp_40\n  local -i num_temp_41\n  local -i num_temp_42\n  local -i num_temp_43\n  local -i num_temp_44\n  local -i num_temp_45\n  local -i num_temp_46",
    "    local number=\"$1\"\n    local number_length=${#number}\n    local number_array=($(echo \"$number\" | grep -o .))\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp_array=()\n    local tmp_array_length=0\n\n    # Find the first digit that is smaller than the digit to its right\n    for ((i=0; i<number_length-1; i++)); do\n        if ((number_array[i] < number_array[i+1])); then\n            break\n        fi\n    done\n\n    # If no such digit is found, the number is the biggest possible\n    if ((i == number_length-1)); then\n        echo \"$number\"\n        return\n    fi\n\n    # Find the smallest digit to the right of the digit found above that is greater than it\n    for ((j=i+1; j<number_length; j++)); do\n        if ((number_array[j] > number_array[i])); then\n            if ((tmp == 0 || number_array[j] < number_array[tmp])); then\n                tmp=$j\n            fi\n        fi\n    done\n\n    # Swap the two digits found above\n    tmp=${number_array[i]}\n    number_array[i]=${number_array[tmp]}\n    number_array[tmp]=$tmp\n\n    # Sort the digits to the right of the digit found above in ascending order\n    tmp_array=(${number_array[@]:i+1})\n    tmp_array_length=${#tmp_array[@]}\n    for ((i=0; i<tmp_array_length; i++)); do\n        for ((j=i+1; j<tmp_array_length; j++)); do\n            if ((tmp_array[i] > tmp_array[j])); then\n                tmp=${tmp_array[i]}\n                tmp_array[i]=${tmp_array[j]}\n                tmp_array[j]=$tmp\n            fi\n        done\n    done\n\n    # Concatenate the digits to the left of the digit found above with the sorted digits to its right\n    for ((",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i max=0\n  local -i max_idx=0\n  local -i min_idx=0\n  local -i min=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i min_idx=0\n  local -i",
    "    local -i num=$1\n    local -i digit\n    local -i next_digit\n    local -i next_num\n    local -i next_num_digit\n    local -i next_num_digit_count\n    local -i next_num_digit_max_count\n    local -i next_num_digit_max\n    local -i next_num_digit_max_index\n    local -i next_num_digit_max_index_count\n    local -i next_num_digit_max_index_count_max\n    local -i next_num_digit_max_index_count_max_index\n    local -i next_num_digit_max_index_count_max_index_count\n    local -i next_num_digit_max_index_count_max_index_count_max\n    local -i next_num_digit_max_index_count_max_index_count_max_index\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max_index\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max_index_count\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max_index_count_max\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max_index_count_max_index\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max_index_count_max_index_count\n    local -i next_num_digit_max_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max\n    local -i next_num_digit_max_index",
    "  local number=\"$1\"\n  local number_length=\"${#number}\"\n  local number_array=()\n  local number_array_length=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_min=0\n    local -i n_arr_sorted_min_idx=0\n    local -i n_arr_sorted_min_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx=0\n    local -i n_arr_sorted_min_idx_idx_idx_idx_",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s",
    "  local -i n=$1\n  local -i m\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iiii",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local number_array_length=${#number_array[@]}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i",
    "  local -i num=$1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger=0\n  local -i power=1\n  local -i next_power=1\n  local -i next_bigger_power=1\n  local -i next_bigger_digit=0\n  local -i next_bigger_next_digit=0\n  local -i next_bigger_next_power=1\n  local -i next_bigger_next_digit_power=1\n  local -i next_bigger_next_digit_next_power=1\n  local -i next_bigger_next_digit_next_digit=0\n  local -i next_bigger_next_digit_next_digit_power=1\n  local -i next_bigger_next_digit_next_digit_next_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit=0\n  local -i next_bigger_next_digit_next_digit_next_digit_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit_next_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit=0\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit_next_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit_next_digit=0\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit_next_digit_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit_next_digit_next_power=1\n  local -i next_bigger_next_digit_next_digit_next_digit_next_digit_next_digit_next_digit=0\n  local -i next",
    "  local number=\"$1\"\n  local number_length=${#number}\n  local number_array=($(echo \"$number\" | grep -o .))\n  local number_array_length=${#number_array[@]}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local temp_array_length=0\n  local temp_string=\"\"\n  local temp_string_length=0\n  local temp_string_array=()\n  local temp_string_array_length=0\n  local temp_string_array_index=0\n  local temp_string_array_index_length=0\n  local temp_string_array_index_length_length=0\n  local temp_string_array_index_length_length_length=0\n  local temp_string_array_index_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_string_array_index_length_length_length_length_length_length_length_length",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max=0\n  local -i next_num_max=0\n  local -i next_num_max_digit_count=0\n  local -i next_num_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i next_num_max_digit_count_max_digit_count_max_digit_count"
  ]
}
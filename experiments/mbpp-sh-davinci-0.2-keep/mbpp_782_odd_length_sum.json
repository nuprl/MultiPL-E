{
  "name": "mbpp_782_odd_length_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n#\n# $1 is a space-separated list\nodd_length_sum() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    odd_length_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4\") = \"14\" ]]\n    [[ $(candidate \"1 2 1 2\") = \"15\" ]]\n    [[ $(candidate \"1 7\") = \"8\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a arr=($1)\n    local sum=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i; j<len; j++))\n        do\n            if (((j-i+1)%2==1))\n            then\n                sum=$((sum+$(sum_array \"${arr[@]:i:j-i+1}\")))\n            fi\n        done\n    done\n    echo $sum",
    "    local sum=0\n    local len=$((${#1}+1))\n    for ((i=1; i<len; i++)); do\n        for ((j=0; j<len-i; j++)); do\n            if [[ $((i%2)) -eq 1 ]]; then\n                sum=$((sum+$(echo ${1:j:i} | tr ' ' '+')))\n            fi\n        done\n    done\n    echo $sum",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            for ((k=i; k<=j; k++)); do\n                sum=$((sum + arr[k]))\n            done\n        done\n    done\n\n    echo $sum",
    "    local -a arr=($1)\n    local sum=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i; j<${#arr[@]}; j++)); do\n            if (((j-i+1)%2)); then\n                for ((k=i; k<=j; k++)); do\n                    sum=$((sum+arr[k]))\n                done\n            fi\n        done\n    done\n    echo $sum",
    "    local list=\"$1\"\n    local sum=0\n    local i=0\n    for x in $list; do\n        ((i++))\n        if ((i % 2 == 1)); then\n            ((sum += x))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    local len=$#\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            local sub_len=$((j-i+1))\n            if [[ $((sub_len%2)) -eq 1 ]]; then\n                for ((k=i; k<=j; k++)); do\n                    sum=$((sum+${!k}))\n                done\n            fi\n        done\n    done\n    echo $sum",
    "    local -n _array=$1\n    local sum=0\n    local array_length=${#_array[@]}\n    for (( i=0; i<array_length; i++ )); do\n        for (( j=i; j<array_length; j++ )); do\n            local subarray_length=$(( j-i+1 ))\n            if [[ $(( subarray_length % 2 )) -ne 0 ]]; then\n                sum=$(( sum + $(IFS=+; echo \"${_array[*]:i:subarray_length}\") ))\n            fi\n        done\n    done\n    echo $sum",
    "    local -a array\n    local -i i j k sum\n    array=($1)\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i; j<${#array[@]}; j++)); do\n            (((j-i+1) % 2)) && continue\n            for ((k=i; k<=j; k++)); do\n                ((sum+=array[k]))\n            done\n        done\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=0; i<${#1}; i++)); do\n        for ((j=i; j<${#1}; j++)); do\n            local subarray=${1:i:j+1}\n            if ((${#subarray} % 2)); then\n                sum=$((sum + subarray))\n            fi\n        done\n    done\n    echo $sum",
    "    local -a arr=(\"$@\")\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local n=${#arr[@]}\n    for ((i=0; i<n; i++)); do\n        for ((j=i; j<n; j++)); do\n            for ((k=i; k<=j; k++)); do\n                sum=$((sum+arr[k]))\n            done\n        done\n    done\n    echo $sum",
    "    local sum=0\n    local len=${#1}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            (((j-i+1)%2)) && ((sum+=${1:i:j-i+1}))\n        done\n    done\n    echo $sum",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            (((j-i+1)%2)) && ((sum+=arr[j]))\n        done\n    done\n    echo $sum",
    "    local -a arr=($1)\n    local len=${#arr[@]}\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            if (((j-i+1)%2)); then\n                for ((k=i; k<=j; k++)); do\n                    sum=$((sum+arr[k]))\n                done\n            fi\n        done\n    done\n    echo $sum",
    "    local -a arr=($1)\n    local len=${#arr[@]}\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            if (((j-i+1) % 2 == 1)); then\n                sum=$((sum + $(sum_subarray \"${arr[@]:i:j-i+1}\")))\n            fi\n        done\n    done\n    echo $sum",
    "    local sum=0\n    local list=($1)\n    local length=${#list[@]}\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            local subarray=${list[@]:i:j+1}\n            local subarray_length=${#subarray[@]}\n            if ((subarray_length % 2 == 1)); then\n                sum=$((sum + subarray))\n            fi\n        done\n    done\n    echo $sum",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            for ((k=i; k<=j; k++)); do\n                sum=$((sum + arr[k]))\n            done\n        done\n    done\n\n    echo $sum",
    "  local -a arr=($1)\n  local len=${#arr[@]}\n  local sum=0\n\n  for ((i=0; i<len; i++)) do\n    for ((j=i; j<len; j++)) do\n      if (((j-i+1) % 2 == 1)) then\n        sum=$((sum + ${arr[@]:i:j-i+1}))\n      fi\n    done\n  done\n\n  echo $sum",
    "    local -a arr=($1)\n    local -i sum=0\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            for ((k=i; k<=j; k++)); do\n                sum=$((sum+arr[k]))\n            done\n        done\n    done\n\n    echo $sum",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            for ((k=i; k<=j; k++)); do\n                sum=$((sum + arr[k]))\n            done\n        done\n    done\n    echo $sum"
  ]
}
{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nrgb_to_hsv() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    rgb_to_hsv \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"255\" \"255\" \"255\") = \"0 0.0 100.0\" ]]\n    [[ $(candidate \"0\" \"215\" \"0\") = \"120.0 100.0 84.31372549019608\" ]]\n    [[ $(candidate \"10\" \"215\" \"110\") = \"149.26829268292684 95.34883720930233 84.31372549019608\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local r=$1\n    local g=$2\n    local b=$3\n    local max=$r\n    local min=$r\n    if (( $g > $max )); then\n        max=$g\n    fi\n    if (( $b > $max )); then\n        max=$b\n    fi\n    if (( $g < $min )); then\n        min=$g\n    fi\n    if (( $b < $min )); then\n        min=$b\n    fi\n    local h=0\n    local s=0\n    local v=$max\n    local d=$(( $max - $min ))\n    if (( $max != 0 )); then\n        s=$(( 100 * $d / $max ))\n    fi\n    if (( $max == $min )); then\n        h=0\n    elif (( $max == $r )); then\n        h=$(( 60 * ($g - $b) / $d ))\n    elif (( $max == $g )); then\n        h=$(( 60 * ($b - $r) / $d + 120 ))\n    elif (( $max == $b )); then\n        h=$(( 60 * ($r - $g) / $d + 240 ))\n    fi\n    if (( $h < 0 )); then\n        h=$(( $h + 360 ))\n    fi\n    echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local h=0\n  local s=0\n  local v=0\n  local max=$r\n  local min=$r\n  local delta=0\n  if [[ $g -gt $max ]]; then\n    max=$g\n  fi\n  if [[ $b -gt $max ]]; then\n    max=$b\n  fi\n  if [[ $g -lt $min ]]; then\n    min=$g\n  fi\n  if [[ $b -lt $min ]]; then\n    min=$b\n  fi\n  v=$max\n  delta=$((max - min))\n  if [[ $max -ne 0 ]]; then\n    s=$((delta * 100 / max))\n  else\n    s=0\n    h=-1\n    return\n  fi\n  if [[ $r -eq $max ]]; then\n    h=$(((g - b) * 60 / delta))\n  elif [[ $g -eq $max ]]; then\n    h=$(((b - r) * 60 / delta + 120))\n  else\n    h=$(((r - g) * 60 / delta + 240))\n  fi\n  if [[ $h -lt 0 ]]; then\n    h=$((h + 360))\n  fi",
    "    r=$1\n    g=$2\n    b=$3\n    if [ $r -gt $g ] && [ $r -gt $b ]; then\n        h=$((60*($g-$b)/($r-$b)+360))\n    elif [ $g -gt $r ] && [ $g -gt $b ]; then\n        h=$((60*($b-$r)/($g-$r)+120))\n    elif [ $b -gt $r ] && [ $b -gt $g ]; then\n        h=$((60*($r-$g)/($b-$g)+240))\n    fi\n    if [ $h -lt 0 ]; then\n        h=$((h+360))\n    fi\n    if [ $r -eq $g ] && [ $r -eq $b ]; then\n        s=0\n    elif [ $r -gt $g ] && [ $r -gt $b ]; then\n        s=$((($r-$g)/$r))\n    elif [ $g -gt $r ] && [ $g -gt $b ]; then\n        s=$((($g-$b)/$g))\n    elif [ $b -gt $r ] && [ $b -gt $g ]; then\n        s=$((($b-$r)/$b))\n    fi\n    v=$r\n    if [ $v -lt $g ]; then\n        v=$g\n    fi\n    if [ $v -lt $b ]; then\n        v=$b\n    fi\n    echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  if (( $g > $max )); then\n    max=$g\n  fi\n  if (( $b > $max )); then\n    max=$b\n  fi\n  if (( $g < $min )); then\n    min=$g\n  fi\n  if (( $b < $min )); then\n    min=$b\n  fi\n  local v=$max\n  local delta=$(( $max - $min ))\n  local s=$(( $max == 0 ? 0 : $delta * 100 / $max ))\n  local h=0\n  if (( $max != 0 )); then\n    if (( $r == $max )); then\n      h=$(( 60 * ($g - $b) / $delta ))\n    elif (( $g == $max )); then\n      h=$(( 60 * ($b - $r) / $delta + 120 ))\n    elif (( $b == $max )); then\n      h=$(( 60 * ($r - $g) / $delta + 240 ))\n    fi\n    if (( $h < 0 )); then\n      h=$(( $h + 360 ))\n    fi\n  fi\n  echo \"$h $s $v\"",
    "    # Check if the input is valid\n    if [[ $1 -lt 0 || $1 -gt 255 || $2 -lt 0 || $2 -gt 255 || $3 -lt 0 || $3 -gt 255 ]]; then\n        echo \"Invalid input\"\n        return\n    fi\n\n    # Calculate the maximum and minimum of the three inputs\n    max=$1\n    min=$1\n    if [[ $2 -gt $max ]]; then\n        max=$2\n    fi\n    if [[ $3 -gt $max ]]; then\n        max=$3\n    fi\n    if [[ $2 -lt $min ]]; then\n        min=$2\n    fi\n    if [[ $3 -lt $min ]]; then\n        min=$3\n    fi\n\n    # Calculate the value\n    v=$max\n\n    # Calculate the saturation\n    if [[ $max -eq 0 ]]; then\n        s=0\n    else\n        s=$(((max - min) * 100 / max))\n    fi\n\n    # Calculate the hue\n    if [[ $max -eq $min ]]; then\n        h=0\n    elif [[ $max -eq $1 ]]; then\n        h=$(((60 * ($2 - $3) / ($max - $min)) + 360))\n    elif [[ $max -eq $2 ]]; then\n        h=$((60 * ($3 - $1) / ($max - $min) + 120))\n    else\n        h=$((60 * ($1 - $2) / ($max - $min) + 240))\n    fi\n\n    # Print the result\n    echo \"Hue: $h\"\n    echo \"Saturation: $s\"\n    echo \"Value: $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  local delta\n  local h\n  local s\n  local v\n\n  if (( g > max )); then\n    max=$g\n  fi\n  if (( b > max )); then\n    max=$b\n  fi\n  if (( g < min )); then\n    min=$g\n  fi\n  if (( b < min )); then\n    min=$b\n  fi\n\n  v=$max\n  delta=$(( max - min ))\n\n  if (( max != 0 )); then\n    s=$(( delta * 100 / max ))\n  else\n    s=0\n  fi\n\n  if (( delta == 0 )); then\n    h=0\n  else\n    if (( r == max )); then\n      h=$(( 60 * ( g - b ) / delta ))\n    elif (( g == max )); then\n      h=$(( 120 + 60 * ( b - r ) / delta ))\n    else\n      h=$(( 240 + 60 * ( r - g ) / delta ))\n    fi\n    if (( h < 0 )); then\n      h=$(( h + 360 ))\n    fi\n  fi\n\n  echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local min=$r\n  local max=$r\n  local delta\n  local h\n  local s\n  local v\n  local r_prime\n  local g_prime\n  local b_prime\n\n  if [ $g -lt $min ]; then\n    min=$g\n  fi\n  if [ $b -lt $min ]; then\n    min=$b\n  fi\n\n  if [ $g -gt $max ]; then\n    max=$g\n  fi\n  if [ $b -gt $max ]; then\n    max=$b\n  fi\n\n  delta=$((max - min))\n  v=$max\n\n  if [ $max -eq 0 ]; then\n    s=0\n  else\n    s=$((delta * 100 / max))\n  fi\n\n  if [ $delta -eq 0 ]; then\n    h=0\n  else\n    if [ $r -eq $max ]; then\n      h=$(((g - b) * 60 / delta))\n    elif [ $g -eq $max ]; then\n      h=$(((b - r) * 60 / delta + 120))\n    else\n      h=$(((r - g) * 60 / delta + 240))\n    fi\n  fi\n\n  if [ $h -lt 0 ]; then\n    h=$((h + 360))\n  fi\n\n  r_prime=$((r * 100 / max))\n  g_prime=$((g * 100 / max))\n  b_prime=$((b * 100 / max))\n\n  echo \"$h $s $v $r_prime $g_prime $b_prime\"",
    "    local r=$1\n    local g=$2\n    local b=$3\n    local max=$r\n    local min=$r\n    local delta=0\n    local h=0\n    local s=0\n    local v=0\n\n    if [ $g -gt $max ]; then\n        max=$g\n    fi\n    if [ $b -gt $max ]; then\n        max=$b\n    fi\n    if [ $g -lt $min ]; then\n        min=$g\n    fi\n    if [ $b -lt $min ]; then\n        min=$b\n    fi\n\n    v=$max\n    delta=$((max - min))\n    if [ $max -eq 0 ]; then\n        s=0\n    else\n        s=$((delta * 100 / max))\n    fi\n    if [ $delta -eq 0 ]; then\n        h=0\n    else\n        if [ $r -eq $max ]; then\n            h=$(((g - b) * 60 / delta))\n        elif [ $g -eq $max ]; then\n            h=$(((b - r) * 60 / delta + 120))\n        else\n            h=$(((r - g) * 60 / delta + 240))\n        fi\n    fi\n    if [ $h -lt 0 ]; then\n        h=$((h + 360))\n    fi\n    echo \"$h $s $v\"",
    "    local r=$1\n    local g=$2\n    local b=$3\n    local max=$r\n    local min=$r\n    local delta\n    local h\n    local s\n    local v\n\n    if [ $g -gt $max ]; then\n        max=$g\n    fi\n    if [ $b -gt $max ]; then\n        max=$b\n    fi\n    if [ $g -lt $min ]; then\n        min=$g\n    fi\n    if [ $b -lt $min ]; then\n        min=$b\n    fi\n\n    v=$max\n    delta=$((max - min))\n    if [ $max -eq 0 ]; then\n        s=0\n    else\n        s=$((delta * 100 / max))\n    fi\n    if [ $delta -eq 0 ]; then\n        h=0\n    else\n        if [ $r -eq $max ]; then\n            h=$(((g - b) * 60 / delta))\n        elif [ $g -eq $max ]; then\n            h=$(((b - r) * 60 / delta + 120))\n        else\n            h=$(((r - g) * 60 / delta + 240))\n        fi\n        if [ $h -lt 0 ]; then\n            h=$((h + 360))\n        fi\n    fi\n    echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  local delta\n  local h\n  local s\n  local v\n\n  if (( g > max )); then\n    max=$g\n  fi\n  if (( b > max )); then\n    max=$b\n  fi\n  if (( g < min )); then\n    min=$g\n  fi\n  if (( b < min )); then\n    min=$b\n  fi\n\n  delta=$(( max - min ))\n  v=$max\n  if (( max != 0 )); then\n    s=$(( delta * 100 / max ))\n  else\n    s=0\n    h=-1\n    return\n  fi\n\n  if (( r == max )); then\n    h=$(( 60 * ( g - b ) / delta ))\n  elif (( g == max )); then\n    h=$(( 120 + 60 * ( b - r ) / delta ))\n  else\n    h=$(( 240 + 60 * ( r - g ) / delta ))\n  fi\n\n  if (( h < 0 )); then\n    h=$(( h + 360 ))\n  fi",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  if (( g > max )); then\n    max=$g\n  fi\n  if (( b > max )); then\n    max=$b\n  fi\n  if (( g < min )); then\n    min=$g\n  fi\n  if (( b < min )); then\n    min=$b\n  fi\n  local diff=$(( max - min ))\n  local v=$max\n  local s=$(( diff * 100 / max ))\n  local h=0\n  if (( diff != 0 )); then\n    if (( r == max )); then\n      h=$(( 60 * (g - b) / diff ))\n    elif (( g == max )); then\n      h=$(( 120 + 60 * (b - r) / diff ))\n    else\n      h=$(( 240 + 60 * (r - g) / diff ))\n    fi\n    if (( h < 0 )); then\n      h=$(( h + 360 ))\n    fi\n  fi\n  echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  local h=0\n  local s=0\n  local v=0\n  local delta=0\n  local rc=0\n  local gc=0\n  local bc=0\n\n  if [ $g -gt $max ]; then\n    max=$g\n  fi\n  if [ $b -gt $max ]; then\n    max=$b\n  fi\n  if [ $g -lt $min ]; then\n    min=$g\n  fi\n  if [ $b -lt $min ]; then\n    min=$b\n  fi\n\n  v=$max\n  delta=$((max - min))\n  if [ $max -eq 0 ]; then\n    s=0\n  else\n    s=$((delta * 100 / max))\n  fi\n  if [ $delta -eq 0 ]; then\n    h=0\n  else\n    if [ $r -eq $max ]; then\n      h=$(((g - b) * 60 / delta))\n    elif [ $g -eq $max ]; then\n      h=$(((b - r) * 60 / delta + 120))\n    else\n      h=$(((r - g) * 60 / delta + 240))\n    fi\n    if [ $h -lt 0 ]; then\n      h=$((h + 360))\n    fi\n  fi\n  echo \"$h $s $v\"",
    "\tlocal r=$1\n\tlocal g=$2\n\tlocal b=$3\n\tlocal max=$r\n\tlocal min=$r\n\tif (( $g > $max )); then\n\t\tmax=$g\n\tfi\n\tif (( $b > $max )); then\n\t\tmax=$b\n\tfi\n\tif (( $g < $min )); then\n\t\tmin=$g\n\tfi\n\tif (( $b < $min )); then\n\t\tmin=$b\n\tfi\n\tlocal v=$max\n\tlocal delta=$(( $max - $min ))\n\tlocal s=$(( $max == 0 ? 0 : $delta * 1000 / $max ))\n\tlocal h=0\n\tif (( $max != 0 )); then\n\t\tif (( $r == $max )); then\n\t\t\th=$(( ( $g - $b ) * 60 / $delta + 360 ))\n\t\telif (( $g == $max )); then\n\t\t\th=$(( ( $b - $r ) * 60 / $delta + 120 ))\n\t\telif (( $b == $max )); then\n\t\t\th=$(( ( $r - $g ) * 60 / $delta + 240 ))\n\t\tfi\n\tfi\n\tif (( $h < 0 )); then\n\t\th=$(( $h + 360 ))\n\tfi\n\tprintf \"%d %d %d\\n\" $h $s $v",
    "    local r=$1\n    local g=$2\n    local b=$3\n    local min=$r\n    local max=$r\n    local delta\n    local h\n    local s\n    local v\n\n    if [ $g -lt $min ]; then\n        min=$g\n    fi\n    if [ $b -lt $min ]; then\n        min=$b\n    fi\n    if [ $g -gt $max ]; then\n        max=$g\n    fi\n    if [ $b -gt $max ]; then\n        max=$b\n    fi\n\n    v=$max\n    delta=$((max - min))\n    if [ $max -eq 0 ]; then\n        s=0\n    else\n        s=$((delta * 1000 / max))\n    fi\n    if [ $delta -eq 0 ]; then\n        h=0\n    else\n        if [ $r -eq $max ]; then\n            h=$(((g - b) * 60 / delta))\n        elif [ $g -eq $max ]; then\n            h=$(((b - r) * 60 / delta + 120))\n        else\n            h=$(((r - g) * 60 / delta + 240))\n        fi\n    fi\n    if [ $h -lt 0 ]; then\n        h=$((h + 360))\n    fi\n    echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  local h=0\n  local s=0\n  local v=0\n  local delta=0\n  if [ $g -gt $max ]; then\n    max=$g\n  fi\n  if [ $b -gt $max ]; then\n    max=$b\n  fi\n  if [ $g -lt $min ]; then\n    min=$g\n  fi\n  if [ $b -lt $min ]; then\n    min=$b\n  fi\n  v=$max\n  delta=$((max-min))\n  if [ $max -eq 0 ]; then\n    s=0\n  else\n    s=$((delta*100/max))\n  fi\n  if [ $delta -eq 0 ]; then\n    h=0\n  else\n    if [ $r -eq $max ]; then\n      h=$(((g-b)*60/delta))\n    elif [ $g -eq $max ]; then\n      h=$(((b-r)*60/delta+120))\n    else\n      h=$(((r-g)*60/delta+240))\n    fi\n  fi\n  if [ $h -lt 0 ]; then\n    h=$((h+360))\n  fi\n  echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  local h=0\n  local s=0\n  local v=0\n  local delta=0\n\n  if (( $g > $max )); then\n    max=$g\n  fi\n  if (( $b > $max )); then\n    max=$b\n  fi\n  if (( $g < $min )); then\n    min=$g\n  fi\n  if (( $b < $min )); then\n    min=$b\n  fi\n  v=$max\n\n  delta=$(( $max - $min ))\n\n  if (( $max != 0 )); then\n    s=$(( $delta * 100 / $max ))\n  else\n    s=0\n    h=-1\n    return\n  fi\n\n  if (( $r == $max )); then\n    h=$(( $g - $b ))\n  elif (( $g == $max )); then\n    h=$(( $b - $r + 2 * $delta ))\n  else\n    h=$(( $r - $g + 4 * $delta ))\n  fi\n\n  h=$(( $h * 60 / $delta ))\n  if (( $h < 0 )); then\n    h=$(( $h + 360 ))\n  fi",
    "    local r=$1\n    local g=$2\n    local b=$3\n    local max=$r\n    local min=$r\n    if (( $g > $max )); then\n        max=$g\n    fi\n    if (( $b > $max )); then\n        max=$b\n    fi\n    if (( $g < $min )); then\n        min=$g\n    fi\n    if (( $b < $min )); then\n        min=$b\n    fi\n    local v=$max\n    local delta=$(( $max - $min ))\n    local s=0\n    if (( $max != 0 )); then\n        s=$(( $delta * 100 / $max ))\n    fi\n    local h=0\n    if (( $delta != 0 )); then\n        if (( $max == $r )); then\n            h=$(( 60 * ($g - $b) / $delta ))\n        elif (( $max == $g )); then\n            h=$(( 60 * ($b - $r) / $delta + 120 ))\n        else\n            h=$(( 60 * ($r - $g) / $delta + 240 ))\n        fi\n        if (( $h < 0 )); then\n            h=$(( $h + 360 ))\n        fi\n    fi\n    echo \"$h $s $v\"",
    "  local r=$1\n  local g=$2\n  local b=$3\n  local max=$r\n  local min=$r\n  local h=0\n  local s=0\n  local v=0\n  local d=0\n\n  if [ $g -gt $max ]; then\n    max=$g\n  fi\n\n  if [ $b -gt $max ]; then\n    max=$b\n  fi\n\n  if [ $g -lt $min ]; then\n    min=$g\n  fi\n\n  if [ $b -lt $min ]; then\n    min=$b\n  fi\n\n  v=$max\n\n  d=$((max - min))\n\n  if [ $max -eq 0 ]; then\n    s=0\n  else\n    s=$((255 * d / max))\n  fi\n\n  if [ $s -eq 0 ]; then\n    h=0\n  else\n    if [ $r -eq $max ]; then\n      h=$((60 * (g - b) / d))\n    elif [ $g -eq $max ]; then\n      h=$((120 + 60 * (b - r) / d))\n    else\n      h=$((240 + 60 * (r - g) / d))\n    fi\n\n    if [ $h -lt 0 ]; then\n      h=$((h + 360))\n    fi\n  fi\n\n  echo \"$h $s $v\"",
    "    r=$1\n    g=$2\n    b=$3\n    max=$r\n    min=$r\n    if [ $g -gt $max ]; then\n        max=$g\n    fi\n    if [ $b -gt $max ]; then\n        max=$b\n    fi\n    if [ $g -lt $min ]; then\n        min=$g\n    fi\n    if [ $b -lt $min ]; then\n        min=$b\n    fi\n    v=$max\n    delta=$((max - min))\n    if [ $max -eq 0 ]; then\n        s=0\n    else\n        s=$((delta * 100 / max))\n    fi\n    if [ $delta -eq 0 ]; then\n        h=0\n    else\n        if [ $r -eq $max ]; then\n            h=$(((g - b) * 60 / delta))\n        elif [ $g -eq $max ]; then\n            h=$(((b - r) * 60 / delta + 120))\n        else\n            h=$(((r - g) * 60 / delta + 240))\n        fi\n    fi\n    if [ $h -lt 0 ]; then\n        h=$((h + 360))\n    fi\n    echo \"$h $s $v\"",
    "    local r=$1\n    local g=$2\n    local b=$3\n    local max=$r\n    local min=$r\n    if [ $g -gt $max ]; then\n        max=$g\n    fi\n    if [ $b -gt $max ]; then\n        max=$b\n    fi\n    if [ $g -lt $min ]; then\n        min=$g\n    fi\n    if [ $b -lt $min ]; then\n        min=$b\n    fi\n    local v=$max\n    local delta=$((max-min))\n    local s=0\n    if [ $max -ne 0 ]; then\n        s=$((delta*100/max))\n    fi\n    local h=0\n    if [ $delta -ne 0 ]; then\n        if [ $r -eq $max ]; then\n            h=$(((g-b)*60/delta))\n        elif [ $g -eq $max ]; then\n            h=$(((b-r)*60/delta+120))\n        else\n            h=$(((r-g)*60/delta+240))\n        fi\n        if [ $h -lt 0 ]; then\n            h=$((h+360))\n        fi\n    fi\n    echo \"$h $s $v\""
  ]
}
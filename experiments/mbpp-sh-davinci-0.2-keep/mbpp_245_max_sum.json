{
  "name": "mbpp_245_max_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\n#\n# $1 is a space-separated list\nmax_sum() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 15 51 45 33 100 12 18 9\") = \"194\" ]]\n    [[ $(candidate \"80 60 30 40 20 10\") = \"210\" ]]\n    [[ $(candidate \"2 3 14 16 21 23 29 30\") = \"138\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a arr=($1)\n  local -a inc_arr=(${arr[0]})\n  local -a dec_arr=(${arr[0]})\n  local -i max_sum=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_arr[i]=${arr[i]}\n    dec_arr[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        inc_arr[i]=$((inc_arr[i] + arr[j]))\n      fi\n      if ((arr[j] > arr[i])); then\n        dec_arr[i]=$((dec_arr[i] + arr[j]))\n      fi\n    done\n    if ((inc_arr[i] > max_sum)); then\n      max_sum=${inc_arr[i]}\n    fi\n    if ((dec_arr[i] > max_sum)); then\n      max_sum=${dec_arr[i]}\n    fi\n  done\n  echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[0]})\n    local -i max=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i])); then\n                inc[i]=$((inc[j] + arr[i]))\n                break\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i])); then\n                dec[i]=$((dec[j] + arr[i]))\n                break\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            for ((k=i+1; k<${#arr[@]}; k++)); do\n                for ((l=k+1; l<${#arr[@]}; l++)); do\n                    for ((m=0; m<j; m++)); do\n                        for ((n=j+1; n<i; n++)); do\n                            for ((o=k+1; o<l; o++)); do\n                                if ((inc[j] + dec[i] + inc[k] + dec[l] + inc[m] + dec[n] + inc[o] > max)); then\n                                    max=$((inc[j] + dec[i] + inc[k] + dec[l] + inc[m] + dec[n] + inc[o]))\n                                fi\n                            done\n                        done\n                    done\n                done\n",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_sum=${arr[0]}\n\n  while (( i < ${#arr[@]} )); do\n    inc_sum[i]=$(( ${inc_sum[i-1]} > ${arr[i]} ? ${inc_sum[i-1]} : ${arr[i]} ))\n    dec_sum[j]=$(( ${dec_sum[j+1]} > ${arr[j]} ? ${dec_sum[j+1]} : ${arr[j]} ))\n    (( i++, j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    local -i sum=$(( ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} ))\n    max_sum=$(( $sum > $max_sum ? $sum : $max_sum ))\n  done\n\n  echo $max_sum",
    "  local -a arr\n  local -i i j k\n  local -i max_sum=0\n  local -i max_sum_i=0\n  local -i max_sum_j=0\n  local -i max_sum_k=0\n  local -i sum=0\n  local -i sum_i=0\n  local -i sum_j=0\n  local -i sum_k=0\n  local -i sum_i_j=0\n  local -i sum_j_k=0\n  local -i sum_i_k=0\n  local -i sum_i_j_k=0\n  local -i sum_i_j_k_max=0\n  local -i sum_i_j_k_max_i=0\n  local -i sum_i_j_k_max_j=0\n  local -i sum_i_j_k_max_k=0\n  local -i sum_i_j_k_max_i_j=0\n  local -i sum_i_j_k_max_j_k=0\n  local -i sum_i_j_k_max_i_k=0\n  local -i sum_i_j_k_max_i_j_k=0\n  local -i sum_i_j_k_max_i_j_k_max=0\n  local -i sum_i_j_k_max_i_j_k_max_i=0\n  local -i sum_i_j_k_max_i_j_k_max_j=0\n  local -i sum_i_j_k_max_i_j_k_max_k=0\n  local -i sum_i_j_k_max_i_j_k_max_i_j=0\n  local -i sum_i_j_k_max_i_j_k_max_j_k=0\n  local -i sum_i_j_k_max_i_j_k_max_i_k=0\n  local -i sum_i_j_k_max_i_j_k_max_i_j",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i\n  local -i j\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] + arr[i] > inc[i])); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] + arr[i] > dec[i])); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=inc[i]+dec[i]-arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum\n  local -a dec_sum\n  local -i max_sum=0\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n\n  inc_sum[0]=${arr[0]}\n  dec_sum[n-1]=${arr[n-1]}\n\n  for ((i=1; i<n; i++)); do\n    inc_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((${arr[j]} < ${arr[i]})); then\n        ((inc_sum[i] += inc_sum[j]))\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    dec_sum[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((${arr[j]} < ${arr[i]})); then\n        ((dec_sum[i] += dec_sum[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    ((max_sum = inc_sum[i] + dec_sum[i] > max_sum ? inc_sum[i] + dec_sum[i] : max_sum))\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=0\n  local -i sum=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > inc[-1] )); then\n      inc+=(${arr[i]})\n    else\n      inc[-1]=${arr[i]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > dec[-1] )); then\n      dec+=(${arr[j]})\n    else\n      dec[-1]=${arr[j]}\n    fi\n    (( j-- ))\n  done\n\n  for (( i = 0; i < ${#arr[@]}; i++ )); do\n    sum=${inc[i]}+${dec[i]}\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i])) && ((inc[i] < inc[j] + arr[i])); then\n                inc[i]=inc[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i])) && ((dec[i] < dec[j] + arr[i])); then\n                dec[i]=dec[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max < inc[i] + dec[i] - arr[i])); then\n            max=inc[i]+dec[i]-arr[i]\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n  local len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] + arr[i] > inc[i])); then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] + arr[i] > dec[i])); then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[0]})\n  local max_sum=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_sum[i]=${arr[i]}\n    dec_sum[i]=${arr[i]}\n\n    for ((j=0; j<i; j++)); do\n      if (( arr[i] > arr[j] )); then\n        inc_sum[i]=$(( inc_sum[i] > inc_sum[j] + arr[i] ? inc_sum[i] : inc_sum[j] + arr[i] ))\n      fi\n      if (( arr[i] < arr[j] )); then\n        dec_sum[i]=$(( dec_sum[i] > dec_sum[j] + arr[i] ? dec_sum[i] : dec_sum[j] + arr[i] ))\n      fi\n    done\n\n    max_sum=${inc_sum[i]}\n    for ((j=0; j<i; j++)); do\n      max_sum=$(( max_sum > inc_sum[j] + dec_sum[i] - arr[i] ? max_sum : inc_sum[j] + dec_sum[i] - arr[i] ))\n    done\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max_sum=${arr[0]}\n  local sum=0\n  local i=0\n  local j=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        if [[ ${inc[i]} -lt $((inc[j] + arr[i])) ]]; then\n          inc[i]=$((inc[j] + arr[i]))\n        fi\n      fi\n      if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n        if [[ ${dec[i]} -lt $((dec[j] + arr[i])) ]]; then\n          dec[i]=$((dec[j] + arr[i]))\n        fi\n      fi\n    done\n    if [[ ${inc[i]} -gt ${dec[i]} ]]; then\n      sum=${inc[i]}\n    else\n      sum=${dec[i]}\n    fi\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -a a=($1)\n  local -a b=($1)\n  local -a c=($1)\n  local -a d=($1)\n  local -a e=($1)\n  local -a f=($1)\n  local -a g=($1)\n  local -a h=($1)\n  local -a i=($1)\n  local -a j=($1)\n  local -a k=($1)\n  local -a l=($1)\n  local -a m=($1)\n  local -a n=($1)\n  local -a o=($1)\n  local -a p=($1)\n  local -a q=($1)\n  local -a r=($1)\n  local -a s=($1)\n  local -a t=($1)\n  local -a u=($1)\n  local -a v=($1)\n  local -a w=($1)\n  local -a x=($1)\n  local -a y=($1)\n  local -a z=($1)\n  local -a A=($1)\n  local -a B=($1)\n  local -a C=($1)\n  local -a D=($1)\n  local -a E=($1)\n  local -a F=($1)\n  local -a G=($1)\n  local -a H=($1)\n  local -a I=($1)\n  local -a J=($1)\n  local -a K=($1)\n  local -a L=($1)\n  local -a M=($1)\n  local -a N=($1)\n  local -a O=($1)\n  local -a P=($1)\n  local -a Q=($1)\n  local -a R=($1)\n  local -a S=($1)\n  local -a T=($1)\n  local -a U=($1)\n  local -a V=($1)\n  local -a W=($1)\n  local -a X=($1)\n  local -a Y=($1)\n ",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=inc[i]+dec[i]-arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc_sum=()\n  local -a dec_sum=()\n  local max_sum=0\n\n  inc_sum[0]=${arr[0]}\n  for ((i = 1; i < ${#arr[@]}; i++)); do\n    inc_sum[$i]=${arr[$i]}\n    for ((j = 0; j < i; j++)); do\n      if ((${arr[$i]} > ${arr[$j]})) && ((${inc_sum[$i]} < ${inc_sum[$j]} + ${arr[$i]})); then\n        inc_sum[$i]=${inc_sum[$j]} + ${arr[$i]}\n      fi\n    done\n  done\n\n  dec_sum[${#arr[@]}-1]=${arr[${#arr[@]}-1]}\n  for ((i = ${#arr[@]} - 2; i >= 0; i--)); do\n    dec_sum[$i]=${arr[$i]}\n    for ((j = ${#arr[@]} - 1; j > i; j--)); do\n      if ((${arr[$i]} > ${arr[$j]})) && ((${dec_sum[$i]} < ${dec_sum[$j]} + ${arr[$i]})); then\n        dec_sum[$i]=${dec_sum[$j]} + ${arr[$i]}\n      fi\n    done\n  done\n\n  for ((i = 0; i < ${#arr[@]}; i++)); do\n    if ((${inc_sum[$i]} + ${dec_sum[$i]} - ${arr[$i]} > $max_sum)); then\n      max_sum=${inc_sum[$i]} + ${dec_sum[$i]} - ${arr[$i]}\n    fi\n  done\n\n  echo $max_sum",
    "  local -a a=($1)\n  local -a l=(0)\n  local -a r=(0)\n  local i j\n  for ((i=1; i<${#a[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((a[j] < a[i])) && ((l[i] < l[j] + a[i])); then\n        l[i]=${l[j]}+${a[i]}\n      fi\n    done\n  done\n  for ((i=${#a[@]}-2; i>=0; i--)); do\n    for ((j=${#a[@]}-1; j>i; j--)); do\n      if ((a[j] < a[i])) && ((r[i] < r[j] + a[i])); then\n        r[i]=${r[j]}+${a[i]}\n      fi\n    done\n  done\n  local max=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((max < l[i] + r[i] - a[i])); then\n      max=${l[i]}+${r[i]}-${a[i]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[$i]=${arr[$i]}\n    dec[$i]=${arr[$i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$j]} -lt ${arr[$i]} ]]; then\n        inc[$i]=$(( ${inc[$i]} > ${inc[$j]} + ${arr[$i]} ? ${inc[$i]} : ${inc[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=$((${#arr[@]}-2)); i>=0; i--)); do\n    for ((j=$((${#arr[@]}-1)); j>i; j--)); do\n      if [[ ${arr[$j]} -lt ${arr[$i]} ]]; then\n        dec[$i]=$(( ${dec[$i]} > ${dec[$j]} + ${arr[$i]} ? ${dec[$i]} : ${dec[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} > $max ? ${inc[$i]} + ${dec[$i]} - ${arr[$i]} : $max ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[$i]=${arr[$i]}\n    dec[$i]=${arr[$i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        inc[$i]=$(( ${inc[$i]} > ${inc[$j]} + ${arr[$i]} ? ${inc[$i]} : ${inc[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        dec[$i]=$(( ${dec[$i]} > ${dec[$j]} + ${arr[$i]} ? ${dec[$i]} : ${dec[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  local max=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} )) -gt $max ]]; then\n      max=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} ))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc=()\n  local -a dec=()\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  inc[0]=${arr[0]}\n  dec[0]=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n      if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc[i] + dec[i] - arr[i]))\n    if [[ sum -gt max ]]; then\n      max=sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i max_inc=${arr[0]}\n  local -i max_dec=${arr[-1]}\n  local -i max_sum=${arr[0]}\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt $max ]; then\n      max=${arr[$i]}\n    fi\n    if [ ${arr[$i]} -gt ${inc[-1]} ]; then\n      inc+=(${arr[$i]})\n    else\n      inc[-1]=${arr[$i]}\n    fi\n    if [ ${arr[$j]} -gt $max ]; then\n      max=${arr[$j]}\n    fi\n    if [ ${arr[$j]} -gt ${dec[-1]} ]; then\n      dec+=(${arr[$j]})\n    else\n      dec[-1]=${arr[$j]}\n    fi\n    ((i++))\n    ((j--))\n  done\n\n  for ((i=0; i<${#inc[@]}; i++)); do\n    if [ ${inc[$i]} -gt $max_inc ]; then\n      max_inc=${inc[$i]}\n    fi\n    if [ ${dec[$i]} -gt $max_dec ]; then\n      max_dec=${dec[$i]}\n    fi\n    if [ $max_inc -eq $max_dec ]; then\n      if [ $max_inc -gt $max_sum ]; then\n        max_sum=$max_inc\n      fi\n    fi\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[j] < arr[i] )); then\n        (( inc[i] = inc[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if (( arr[j] < arr[i] )); then\n        (( dec[i] = dec[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    (( max = inc[i] + dec[i] - arr[i] > max ? inc[i] + dec[i] - arr[i] : max ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n      if ((arr[i] < arr[j])); then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n    if ((inc[i] > max)); then\n      max=${inc[i]}\n    fi\n    if ((dec[i] > max)); then\n      max=${dec[i]}\n    fi\n  done\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                inc[i]=$((inc[j] + arr[i]))\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                dec[i]=$((dec[j] + arr[i]))\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${inc[i]} -gt 0 && ${dec[i]} -gt 0 ]]; then\n            if [[ $((inc[i] + dec[i] - arr[i])) -gt $max ]]; then\n                max=$((inc[i] + dec[i] - arr[i]))\n            fi\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n\n  for ((i = 1; i < ${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n\n    for ((j = 0; j < i; j++)); do\n      if ((arr[j] < arr[i])); then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n      if ((arr[j] > arr[i])); then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  local max=0\n  for ((i = 0; i < ${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[j] < arr[i] )); then\n        inc[i]=$(( inc[i] + inc[j] ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[j] < arr[i] )); then\n        dec[i]=$(( dec[i] + dec[j] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$(( inc[i] + dec[i] - arr[i] ))\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "    local -a arr=(\"$@\")\n    local -a inc_sum=()\n    local -a dec_sum=()\n    local -i max_sum=0\n    local -i i=0\n    local -i j=0\n    local -i inc_sum_i=0\n    local -i dec_sum_i=0\n\n    inc_sum[0]=${arr[0]}\n    dec_sum[0]=${arr[0]}\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        inc_sum_i=${arr[i]}\n        dec_sum_i=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if (( arr[i] > arr[j] )); then\n                if (( inc_sum_i < inc_sum[j] + arr[i] )); then\n                    inc_sum_i=${inc_sum[j]}+${arr[i]}\n                fi\n            fi\n            if (( arr[i] < arr[j] )); then\n                if (( dec_sum_i < dec_sum[j] + arr[i] )); then\n                    dec_sum_i=${dec_sum[j]}+${arr[i]}\n                fi\n            fi\n        done\n        inc_sum[i]=$inc_sum_i\n        dec_sum[i]=$dec_sum_i\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if (( max_sum < inc_sum[i] + dec_sum[i] - arr[i] )); then\n            max_sum=${inc_sum[i]}+${dec_sum[i]}-${arr[i]}\n        fi\n    done\n\n    echo $max_sum",
    "  local -a arr=($1)\n  local -a incr=(${arr[0]})\n  local -a decr=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_incr=${incr[0]}\n  local -i max_decr=${decr[0]}\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > max_incr )); then\n      incr+=(${arr[i]})\n      max_incr=${arr[i]}\n    fi\n    if (( arr[j] > max_decr )); then\n      decr+=(${arr[j]})\n      max_decr=${arr[j]}\n    fi\n    (( i++, j-- ))\n  done\n  echo ${incr[@]}\n  echo ${decr[@]}",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i max=${arr[0]}\n  local -i sum=0\n  local -i len=${#arr[@]}\n\n  while [ $i -lt $len ]; do\n    if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n      inc[$i]=$(( ${inc[$i-1]} + ${arr[$i]} ))\n    else\n      inc[$i]=${arr[$i]}\n    fi\n    (( i++ ))\n  done\n\n  while [ $j -lt $len ]; do\n    if [ ${arr[$j]} -lt ${arr[$j-1]} ]; then\n      dec[$j]=$(( ${dec[$j-1]} + ${arr[$j]} ))\n    else\n      dec[$j]=${arr[$j]}\n    fi\n    (( j++ ))\n  done\n\n  for (( i=0; i<len; i++ )); do\n    sum=$(( ${inc[$i]} + ${dec[$len-i-1]} - ${arr[$i]} ))\n    if [ $sum -gt $max ]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_sum=0\n\n  while (( i < ${#arr[@]} )); do\n    inc_sum[i]=$(( ${arr[i]} > ${arr[i-1]} + ${inc_sum[i-1]} ? ${arr[i]} : ${arr[i-1]} + ${inc_sum[i-1]} ))\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    dec_sum[j]=$(( ${arr[j]} > ${arr[j+1]} + ${dec_sum[j+1]} ? ${arr[j]} : ${arr[j+1]} + ${dec_sum[j+1]} ))\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    max_sum=$(( ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} > $max_sum ? ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} : $max_sum ))\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i max=0\n  local -i inc_max=0\n  local -i dec_max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_max=0\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        inc_max=$(( ${inc[j]} > $inc_max ? ${inc[j]} : $inc_max ))\n      fi\n    done\n    inc[i]=$(( ${arr[i]} + $inc_max ))\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec_max=0\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        dec_max=$(( ${dec[j]} > $dec_max ? ${dec[j]} : $dec_max ))\n      fi\n    done\n    dec[i]=$(( ${arr[i]} + $dec_max ))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=$(( ${inc[i]} + ${dec[i]} - ${arr[i]} > $max ? ${inc[i]} + ${dec[i]} - ${arr[i]} : $max ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max=0\n  local sum=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n      if [[ ${arr[j]} -gt ${arr[i]} ]]; then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n    sum=$((inc[i] + dec[i] - arr[i]))\n    if [[ $sum -gt $max ]]; then\n      max=$sum\n    fi\n  done\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i sum=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                inc[i]=$((${inc[j]} + ${arr[i]}))\n            else\n                inc[i]=${inc[j]}\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                dec[i]=$((${dec[j]} + ${arr[i]}))\n            else\n                dec[i]=${dec[j]}\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((${inc[i]} + ${dec[i]} - ${arr[i]}))\n        if [[ $sum -gt $max ]]; then\n            max=$sum\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i k=1\n  local -i max=${arr[0]}\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt ${inc[$j-1]} ]; then\n      inc[$j]=${arr[$i]}\n      j=$j+1\n    else\n      inc[$j]=${inc[$j-1]}\n    fi\n    i=$i+1\n  done\n\n  while [ $k -lt ${#arr[@]} ]; do\n    if [ ${arr[$k]} -gt ${dec[$j-1]} ]; then\n      dec[$j]=${arr[$k]}\n      j=$j+1\n    else\n      dec[$j]=${dec[$j-1]}\n    fi\n    k=$k+1\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [ $(( ${inc[$i]} + ${dec[$i]} )) -gt $max ]; then\n      max=$(( ${inc[$i]} + ${dec[$i]} ))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc_sum=(0)\n  local -a dec_sum=(0)\n  local max_sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_sum[i]=0\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc_sum[i]=$((inc_sum[i] > inc_sum[j] ? inc_sum[i] : inc_sum[j]))\n      fi\n    done\n    inc_sum[i]=$((inc_sum[i] + arr[i]))\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec_sum[i]=0\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec_sum[i]=$((dec_sum[i] > dec_sum[j] ? dec_sum[i] : dec_sum[j]))\n      fi\n    done\n    dec_sum[i]=$((dec_sum[i] + arr[i]))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max_sum=$((max_sum > inc_sum[i] + dec_sum[i] - arr[i] ? max_sum : inc_sum[i] + dec_sum[i] - arr[i]))\n  done\n\n  echo $max_sum",
    "  local -a a=($1)\n  local -a b=($1)\n  local -a c=($1)\n  local -a d=($1)\n  local -a e=($1)\n  local -a f=($1)\n  local -a g=($1)\n  local -a h=($1)\n  local -a i=($1)\n  local -a j=($1)\n  local -a k=($1)\n  local -a l=($1)\n  local -a m=($1)\n  local -a n=($1)\n  local -a o=($1)\n  local -a p=($1)\n  local -a q=($1)\n  local -a r=($1)\n  local -a s=($1)\n  local -a t=($1)\n  local -a u=($1)\n  local -a v=($1)\n  local -a w=($1)\n  local -a x=($1)\n  local -a y=($1)\n  local -a z=($1)\n  local -a A=($1)\n  local -a B=($1)\n  local -a C=($1)\n  local -a D=($1)\n  local -a E=($1)\n  local -a F=($1)\n  local -a G=($1)\n  local -a H=($1)\n  local -a I=($1)\n  local -a J=($1)\n  local -a K=($1)\n  local -a L=($1)\n  local -a M=($1)\n  local -a N=($1)\n  local -a O=($1)\n  local -a P=($1)\n  local -a Q=($1)\n  local -a R=($1)\n  local -a S=($1)\n  local -a T=($1)\n  local -a U=($1)\n  local -a V=($1)\n  local -a W=($1)\n  local -a X=($1)\n  local -a Y=($1)\n ",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n  local len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[$i]=${arr[$i]}\n    dec[$i]=${arr[$i]}\n  done\n\n  for ((i=1; i<len; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        inc[$i]=$((inc[$i] + arr[$j]))\n      fi\n    done\n  done\n\n  for ((i=$((len-2)); i>=0; i--)); do\n    for ((j=$((len-1)); j>i; j--)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        dec[$i]=$((dec[$i] + arr[$j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    if [[ $((inc[$i] + dec[$i] - arr[$i])) -gt $max ]]; then\n      max=$((inc[$i] + dec[$i] - arr[$i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i sum=0\n  local -i tmp=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > arr[i-1] )); then\n      inc[i]=$(( inc[i-1] + arr[i] ))\n    else\n      inc[i]=${arr[i]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > arr[j+1] )); then\n      dec[j]=$(( dec[j+1] + arr[j] ))\n    else\n      dec[j]=${arr[j]}\n    fi\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    tmp=$(( inc[i] + dec[i] - arr[i] ))\n    if (( tmp > sum )); then\n      sum=$tmp\n    fi\n  done\n\n  echo $sum",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[0]})\n    local max=${arr[0]}\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        inc[i]=${arr[i]}\n        dec[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[i] > arr[j])); then\n                inc[i]=$((inc[i] + inc[j]))\n            fi\n            if ((arr[i] < arr[j])); then\n                dec[i]=$((dec[i] + dec[j]))\n            fi\n        done\n        if ((inc[i] > max)); then\n            max=${inc[i]}\n        fi\n        if ((dec[i] > max)); then\n            max=${dec[i]}\n        fi\n    done\n\n    echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc\n  local -a dec\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n\n  inc[0]=${arr[0]}\n  dec[n-1]=${arr[n-1]}\n\n  for ((i=1; i<n; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$(( inc[i] + inc[j] ))\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec[i]=$(( dec[i] + dec[j] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    if [[ $(( inc[i] + dec[i] - arr[i] )) -gt $max ]]; then\n      max=$(( inc[i] + dec[i] - arr[i] ))\n    fi\n  done\n\n  echo $max",
    "    local -a a=($1)\n    local -a l=(0)\n    local -a r=(0)\n    local -i i=0\n    local -i j=0\n    local -i n=${#a[@]}\n    local -i max=0\n    local -i max_i=0\n    local -i max_j=0\n\n    for ((i=1; i<n; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((a[j] < a[i] && l[i] < l[j] + a[i])); then\n                l[i]=l[j]+a[i]\n            fi\n        done\n    done\n\n    for ((i=n-2; i>=0; i--)); do\n        for ((j=n-1; j>i; j--)); do\n            if ((a[j] < a[i] && r[i] < r[j] + a[i])); then\n                r[i]=r[j]+a[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        if ((max < l[i] + r[i] - a[i])); then\n            max=l[i]+r[i]-a[i]\n            max_i=i\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc\n  local -a dec\n  local max=0\n  local sum=0\n  local i=0\n  local j=0\n\n  inc[0]=${arr[0]}\n  dec[${#arr[@]}-1]=${arr[${#arr[@]}-1]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        if [[ ${inc[j]} -gt ${inc[i]} ]]; then\n          inc[i]=${inc[j]}\n        fi\n      fi\n    done\n    inc[i]=$((inc[i] + arr[i]))\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        if [[ ${dec[j]} -gt ${dec[i]} ]]; then\n          dec[i]=${dec[j]}\n        fi\n      fi\n    done\n    dec[i]=$((dec[i] + arr[i]))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc[i] + dec[i] - arr[i]))\n    if [[ $sum -gt $max ]]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local arr=($1)\n  local max=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local len=${#arr[@]}\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_sum=0\n  local max_len=0\n  local max_arr=()\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      sum=0\n      for ((k=i; k<=j; k++)); do\n        sum=$((sum+arr[k]))\n      done\n      if [[ $sum -gt $max ]]; then\n        max=$sum\n        max_i=$i\n        max_j=$j\n        max_k=$k\n        max_sum=$sum\n        max_len=$((j-i+1))\n        max_arr=(\"${arr[@]:$i:$max_len}\")\n      fi\n    done\n  done\n\n  echo \"${max_arr[@]}\"\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_inc=${inc[0]}\n  local -i max_dec=${dec[0]}\n  local -i max_sum=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > max_inc )); then\n      max_inc=${arr[i]}\n    fi\n    inc[i]=$max_inc\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > max_dec )); then\n      max_dec=${arr[j]}\n    fi\n    dec[j]=$max_dec\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    local -i sum=$(( inc[i] + dec[i] - arr[i] ))\n    if (( sum > max_sum )); then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > inc[-1] )); then\n      inc+=(\"${arr[i]}\")\n    else\n      inc[-1]=\"${arr[i]}\"\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > dec[-1] )); then\n      dec+=(\"${arr[j]}\")\n    else\n      dec[-1]=\"${arr[j]}\"\n    fi\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    if (( inc[i] + dec[i] > max )); then\n      max=$(( inc[i] + dec[i] ))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} && ${inc[i]} -lt $((inc[j] + arr[i])) ]]; then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=$(( ${#arr[@]} - 2 )); i>=0; i--)); do\n    for ((j=$(( ${#arr[@]} - 1 )); j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} && ${dec[i]} -lt $((dec[j] + arr[i])) ]]; then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${inc[i]} -gt $max ]]; then\n      max=${inc[i]}\n    fi\n    if [[ ${dec[i]} -gt $max ]]; then\n      max=${dec[i]}\n    fi\n  done\n\n  echo $max",
    "  local -a a=($1)\n  local -a l=(0)\n  local -a r=(0)\n  local -i i=0\n  local -i j=0\n  local -i n=${#a[@]}\n  local -i max=0\n  local -i sum=0\n\n  for ((i=0; i<n; i++)); do\n    l[i]=${a[i]}\n    for ((j=0; j<i; j++)); do\n      if ((a[j] < a[i])); then\n        ((l[i] = l[i] > l[j] + a[i] ? l[i] : l[j] + a[i]))\n      fi\n    done\n  done\n\n  for ((i=n-1; i>=0; i--)); do\n    r[i]=${a[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((a[j] < a[i])); then\n        ((r[i] = r[i] > r[j] + a[i] ? r[i] : r[j] + a[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    ((sum = l[i] + r[i] - a[i]))\n    ((max = max > sum ? max : sum))\n  done\n\n  echo $max",
    "  local -a arr\n  arr=($1)\n  local -a inc\n  local -a dec\n  local -i i\n  local -i j\n  local -i max\n  local -i sum\n  inc[0]=${arr[0]}\n  dec[0]=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        ((inc[i] = inc[j] + arr[i]))\n      fi\n      if ((arr[i] < arr[j])); then\n        ((dec[i] = dec[j] + arr[i]))\n      fi\n    done\n  done\n  max=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((sum = inc[i] + dec[i] - arr[i]))\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i len=${#arr[@]}\n\n    inc[0]=${arr[0]}\n    dec[len-1]=${arr[len-1]}\n\n    for ((i=1; i<len; i++)); do\n        inc[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                inc[i]=$((inc[i] + inc[j]))\n            fi\n        done\n    done\n\n    for ((i=len-2; i>=0; i--)); do\n        dec[i]=${arr[i]}\n        for ((j=len-1; j>i; j--)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                dec[i]=$((dec[i] + dec[j]))\n            fi\n        done\n    done\n\n    for ((i=0; i<len; i++)); do\n        if [[ $((inc[i] + dec[i])) -gt $max ]]; then\n            max=$((inc[i] + dec[i]))\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i k=1\n  local -i max=${arr[0]}\n  local -i sum=0\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n      inc[$i]=$((inc[$((i-1))]+arr[$i]))\n    else\n      inc[$i]=${arr[$i]}\n    fi\n    i=$((i+1))\n  done\n  while [ $j -lt ${#arr[@]} ]; do\n    if [ ${arr[$j]} -gt ${arr[$((j-1))]} ]; then\n      dec[$j]=${arr[$j]}\n    else\n      dec[$j]=$((dec[$((j-1))]+arr[$j]))\n    fi\n    j=$((j+1))\n  done\n  while [ $k -lt ${#arr[@]} ]; do\n    sum=$((inc[$((k-1))]+dec[$((k+1))]))\n    if [ $sum -gt $max ]; then\n      max=$sum\n    fi\n    k=$((k+1))\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i max=${arr[0]}\n  local -i sum=0\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n      inc[$i]=$((inc[$((i-1))] + arr[$i]))\n    else\n      inc[$i]=${arr[$i]}\n    fi\n    ((i++))\n  done\n\n  while [ $j -lt ${#arr[@]} ]; do\n    if [ ${arr[$j]} -gt ${arr[$((j-1))]} ]; then\n      dec[$j]=${arr[$j]}\n    else\n      dec[$j]=$((dec[$((j-1))] + arr[$j]))\n    fi\n    ((j++))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc[$i] + dec[$i] - arr[$i]))\n    if [ $sum -gt $max ]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr\n  local -i i j k\n  local -i max_sum=0\n  local -i sum=0\n  local -i max_sum_left=0\n  local -i max_sum_right=0\n  local -i max_sum_left_right=0\n  local -i max_sum_right_left=0\n  local -i max_sum_left_right_left=0\n  local -i max_sum_right_left_right=0\n  local -i max_sum_left_right_left_right=0\n  local -i max_sum_right_left_right_left=0\n  local -i max_sum_left_right_left_right_left=0\n  local -i max_sum_right_left_right_left_right=0\n  local -i max_sum_left_right_left_right_left_right=0\n  local -i max_sum_right_left_right_left_right_left=0\n  local -i max_sum_left_right_left_right_left_right_left=0\n  local -i max_sum_right_left_right_left_right_left_right=0\n  local -i max_sum_left_right_left_right_left_right_left_right=0\n  local -i max_sum_right_left_right_left_right_left_right_left=0\n  local -i max_sum_left_right_left_right_left_right_left_right_left=0\n  local -i max_sum_right_left_right_left_right_left_right_left_right=0\n  local -i max_sum_left_right_left_right_left_right_left_right_left_right=0\n  local -i max_sum_right_left_right_left_right_left_right_left_right_left=0\n  local -i max_sum_left_right_left_right_left_right_left_right_left_right_left=0\n  local -i max_sum_right_left_right_left_right_left_right_left_right_left",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if (( arr[i] > arr[j] )); then\n        inc[i]=$(( inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[i] > arr[j] )); then\n        dec[i]=$(( dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=$(( max > inc[i] + dec[i] - arr[i] ? max : inc[i] + dec[i] - arr[i] ))\n  done\n\n  echo $max",
    "  local arr=($1)\n  local len=${#arr[@]}\n  local max_sum=0\n  local i=0\n  local j=0\n  local k=0\n  local sum=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      sum=0\n      for ((k=i; k<=j; k++)); do\n        sum=$((sum+arr[k]))\n      done\n      if [[ $sum -gt $max_sum ]]; then\n        max_sum=$sum\n      fi\n    done\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i max=${arr[0]}\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc[i] + dec[i] - arr[i]))\n    if ((sum > max)); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i n=${#arr[@]}\n\n  for ((i=1; i<n; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j]) && (inc[i] < inc[j] + arr[i])); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[i] > arr[j]) && (dec[i] < dec[j] + arr[i])); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=inc[i]+dec[i]-arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] + arr[i] > inc[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] + arr[i] > dec[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=${inc[i]}+${dec[i]}-${arr[i]}\n    if ((sum > max)); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "    local -a a=($1)\n    local -a l=(0)\n    local -a r=(0)\n    local -i i=0\n    local -i j=0\n    local -i n=${#a[@]}\n    local -i max=0\n\n    for ((i=1; i<n; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((a[j] < a[i])); then\n                l[i]=$((l[j] + a[i]))\n            fi\n        done\n    done\n\n    for ((i=n-2; i>=0; i--)); do\n        for ((j=n-1; j>i; j--)); do\n            if ((a[j] < a[i])); then\n                r[i]=$((r[j] + a[i]))\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        if ((l[i] + r[i] > max)); then\n            max=$((l[i] + r[i]))\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        ((inc[i] = inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        ((dec[i] = dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=inc[i] + dec[i] - arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_sum=0\n  local -i sum=0\n\n  while [[ $i -lt ${#arr[@]} ]]; do\n    inc[$i]=$(( ${arr[$i]} > ${inc[$((i-1))]} ? ${inc[$((i-1))]} + ${arr[$i]} : ${arr[$i]} ))\n    dec[$j]=$(( ${arr[$j]} > ${dec[$((j+1))]} ? ${dec[$((j+1))]} + ${arr[$j]} : ${arr[$j]} ))\n    ((i++, j--))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} ))\n    max_sum=$(( $sum > $max_sum ? $sum : $max_sum ))\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n\n  for ((i=$((${#arr[@]}-2)); i>=0; i--)); do\n    for ((j=$((${#arr[@]}-1)); j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $((inc[i] + dec[i] - arr[i])) -gt $max ]]; then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n\n  echo $max",
    "    local -a a=($1)\n    local -a b=($1)\n    local -a c=($1)\n    local -a d=($1)\n    local -a e=($1)\n    local -a f=($1)\n    local -a g=($1)\n    local -a h=($1)\n    local -a i=($1)\n    local -a j=($1)\n    local -a k=($1)\n    local -a l=($1)\n    local -a m=($1)\n    local -a n=($1)\n    local -a o=($1)\n    local -a p=($1)\n    local -a q=($1)\n    local -a r=($1)\n    local -a s=($1)\n    local -a t=($1)\n    local -a u=($1)\n    local -a v=($1)\n    local -a w=($1)\n    local -a x=($1)\n    local -a y=($1)\n    local -a z=($1)\n    local -a aa=($1)\n    local -a ab=($1)\n    local -a ac=($1)\n    local -a ad=($1)\n    local -a ae=($1)\n    local -a af=($1)\n    local -a ag=($1)\n    local -a ah=($1)\n    local -a ai=($1)\n    local -a aj=($1)\n    local -a ak=($1)\n    local -a al=($1)\n    local -a am=($1)\n    local -a an=($1)\n    local -a ao=($1)\n    local -a ap=($1)\n    local -a aq=($1)\n    local -a ar=($1)\n    local -a as=($1)\n    local -a at=($1)\n    local -a au=($1)\n    local -a av=($1)\n    local -a aw=($1)\n    local -a ax=($1)\n    local -a ay",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])) && ((inc[j] + arr[i] > inc[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i])) && ((dec[j] + arr[i] > dec[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc_sum\n  local -a dec_sum\n  local max_sum=0\n  local i=0\n  local j=0\n  local sum=0\n\n  # Find the increasing sum\n  inc_sum[0]=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    sum=0\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        sum=$((inc_sum[j] + arr[i]))\n      fi\n    done\n    inc_sum[i]=$((sum > inc_sum[i-1] ? sum : inc_sum[i-1]))\n  done\n\n  # Find the decreasing sum\n  dec_sum[${#arr[@]}-1]=${arr[${#arr[@]}-1]}\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    sum=0\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        sum=$((dec_sum[j] + arr[i]))\n      fi\n    done\n    dec_sum[i]=$((sum > dec_sum[i+1] ? sum : dec_sum[i+1]))\n  done\n\n  # Find the maximum sum\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc_sum[i] + dec_sum[i] - arr[i]))\n    max_sum=$((sum > max_sum ? sum : max_sum))\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    if [[ $((inc[i] + dec[i])) -gt $max ]]; then\n      max=$((inc[i] + dec[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$((inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec[i]=$((dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc[i] + dec[i] - arr[i]))\n    max=$((max > sum ? max : sum))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[0]})\n  local -i max_sum=${arr[0]}\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n  local -i sum=0\n\n  for ((i=1; i<len; i++)); do\n    inc_sum[i]=${arr[i]}\n    dec_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        sum=${inc_sum[j]}+${arr[i]}\n        if [[ $sum -gt ${inc_sum[i]} ]]; then\n          inc_sum[i]=$sum\n        fi\n      fi\n      if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n        sum=${dec_sum[j]}+${arr[i]}\n        if [[ $sum -gt ${dec_sum[i]} ]]; then\n          dec_sum[i]=$sum\n        fi\n      fi\n    done\n    if [[ ${inc_sum[i]} -gt $max_sum ]]; then\n      max_sum=${inc_sum[i]}\n    fi\n    if [[ ${dec_sum[i]} -gt $max_sum ]]; then\n      max_sum=${dec_sum[i]}\n    fi\n  done\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] > max)); then\n      max=$((inc[i] + dec[i]))\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++))\n  do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++))\n    do\n      if (( arr[j] < arr[i] )) && (( inc[i] < inc[j] + arr[i] ))\n      then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--))\n  do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--))\n    do\n      if (( arr[j] < arr[i] )) && (( dec[i] < dec[j] + arr[i] ))\n      then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++))\n  do\n    if (( max < inc[i] + dec[i] - arr[i] ))\n    then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] > inc[i])); then\n        inc[i]=inc[j]\n      fi\n    done\n    inc[i]+=arr[i]\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] > dec[i])); then\n        dec[i]=dec[j]\n      fi\n    done\n    dec[i]+=arr[i]\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=inc[i]+dec[i]-arr[i]\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=$((max > inc[i] + dec[i] - arr[i] ? max : inc[i] + dec[i] - arr[i]))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=0\n\n  while (( i < ${#arr[@]} )); do\n    inc[i]=$(( ${arr[i]} > ${inc[i-1]} + ${arr[i]} ? ${arr[i]} : ${inc[i-1]} + ${arr[i]} ))\n    dec[j]=$(( ${arr[j]} > ${dec[j+1]} + ${arr[j]} ? ${arr[j]} : ${dec[j+1]} + ${arr[j]} ))\n    (( i++, j-- ))\n  done\n\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    (( ${inc[i]} + ${dec[i]} > max )) && max=$(( ${inc[i]} + ${dec[i]} ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=0\n    dec[i]=0\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i]))\n      fi\n      if ((arr[i] < arr[j])); then\n        dec[i]=$((dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc[i] + dec[i] - arr[i]))\n    max=$((max > sum ? max : sum))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        sum=${inc[j]} + ${arr[i]}\n        if [[ $sum -gt ${inc[i]} ]]; then\n          inc[i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        sum=${dec[j]} + ${arr[i]}\n        if [[ $sum -gt ${dec[i]} ]]; then\n          dec[i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$(( ${inc[i]} + ${dec[i]} - ${arr[i]} ))\n    if [[ $sum -gt $max ]]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a left=(0)\n  local -a right=(0)\n  local -i i=1\n  local -i j=1\n  local -i max_sum=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    sum=0\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        sum=$((sum > ${left[j]} ? sum : ${left[j]}))\n      fi\n    done\n    left[i]=$((sum + ${arr[i]}))\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    sum=0\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        sum=$((sum > ${right[j]} ? sum : ${right[j]}))\n      fi\n    done\n    right[i]=$((sum + ${arr[i]}))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max_sum=$((max_sum > ${left[i]} + ${right[i]} - ${arr[i]} ? max_sum : ${left[i]} + ${right[i]} - ${arr[i]}))\n  done\n\n  echo $max_sum",
    "  local -a arr=(\"$@\")\n  local -a inc_sum=()\n  local -a dec_sum=()\n  local max_sum=0\n\n  inc_sum[0]=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        if ((inc_sum[i] < inc_sum[j] + arr[i])); then\n          inc_sum[i]=$((inc_sum[j] + arr[i]))\n        fi\n      fi\n    done\n  done\n\n  dec_sum[${#arr[@]}-1]=${arr[${#arr[@]}-1]}\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec_sum[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        if ((dec_sum[i] < dec_sum[j] + arr[i])); then\n          dec_sum[i]=$((dec_sum[j] + arr[i]))\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max_sum < inc_sum[i] + dec_sum[i] - arr[i])); then\n      max_sum=$((inc_sum[i] + dec_sum[i] - arr[i]))\n    fi\n  done\n\n  echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i max=0\n    local -i i=0\n    local -i j=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                inc[i]=$((inc[i]>inc[j]+arr[i]?inc[i]:inc[j]+arr[i]))\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                dec[i]=$((dec[i]>dec[j]+arr[i]?dec[i]:dec[j]+arr[i]))\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        max=$((max>inc[i]+dec[i]-arr[i]?max:inc[i]+dec[i]-arr[i]))\n    done\n\n    echo $max",
    "  local -a a=($1)\n  local -a b=($1)\n  local -a c=($1)\n  local -a d=($1)\n  local -a e=($1)\n  local -a f=($1)\n  local -a g=($1)\n  local -a h=($1)\n  local -a i=($1)\n  local -a j=($1)\n  local -a k=($1)\n  local -a l=($1)\n  local -a m=($1)\n  local -a n=($1)\n  local -a o=($1)\n  local -a p=($1)\n  local -a q=($1)\n  local -a r=($1)\n  local -a s=($1)\n  local -a t=($1)\n  local -a u=($1)\n  local -a v=($1)\n  local -a w=($1)\n  local -a x=($1)\n  local -a y=($1)\n  local -a z=($1)\n  local -a A=($1)\n  local -a B=($1)\n  local -a C=($1)\n  local -a D=($1)\n  local -a E=($1)\n  local -a F=($1)\n  local -a G=($1)\n  local -a H=($1)\n  local -a I=($1)\n  local -a J=($1)\n  local -a K=($1)\n  local -a L=($1)\n  local -a M=($1)\n  local -a N=($1)\n  local -a O=($1)\n  local -a P=($1)\n  local -a Q=($1)\n  local -a R=($1)\n  local -a S=($1)\n  local -a T=($1)\n  local -a U=($1)\n  local -a V=($1)\n  local -a W=($1)\n  local -a X=($1)\n  local -a Y=($1)\n ",
    "  local -a a=($1)\n  local -a b=($1)\n  local -a c=($1)\n  local -a d=($1)\n  local -a e=($1)\n  local -a f=($1)\n  local -a g=($1)\n  local -a h=($1)\n  local -a i=($1)\n  local -a j=($1)\n  local -a k=($1)\n  local -a l=($1)\n  local -a m=($1)\n  local -a n=($1)\n  local -a o=($1)\n  local -a p=($1)\n  local -a q=($1)\n  local -a r=($1)\n  local -a s=($1)\n  local -a t=($1)\n  local -a u=($1)\n  local -a v=($1)\n  local -a w=($1)\n  local -a x=($1)\n  local -a y=($1)\n  local -a z=($1)\n  local -a A=($1)\n  local -a B=($1)\n  local -a C=($1)\n  local -a D=($1)\n  local -a E=($1)\n  local -a F=($1)\n  local -a G=($1)\n  local -a H=($1)\n  local -a I=($1)\n  local -a J=($1)\n  local -a K=($1)\n  local -a L=($1)\n  local -a M=($1)\n  local -a N=($1)\n  local -a O=($1)\n  local -a P=($1)\n  local -a Q=($1)\n  local -a R=($1)\n  local -a S=($1)\n  local -a T=($1)\n  local -a U=($1)\n  local -a V=($1)\n  local -a W=($1)\n  local -a X=($1)\n  local -a Y=($1)\n ",
    "    local -a array=($1)\n    local -a inc_sum=(0)\n    local -a dec_sum=(0)\n    local -a max_sum=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\n    for ((i=1; i<${#array[@]}; i++)); do\n        inc_sum[i]=0\n        dec_sum[i]=0\n        for ((j=0; j<i; j++)); do\n            if ((array[i] > array[j]) && (inc_sum[i] < inc_sum[j] + array[i])); then\n                inc_sum[i]=inc_sum[j]+array[i]\n            fi\n        done\n    done\n\n    for ((i=${#array[@]}-2; i>=0; i--)); do\n        for ((j=${#array[@]}-1; j>i; j--)); do\n            if ((array[i] > array[j]) && (dec_sum[i] < dec_sum[j] + array[i])); then\n                dec_sum[i]=dec_sum[j]+array[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        max_sum[i]=inc_sum[i]+dec_sum[i]-array[i]\n    done\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((max_sum[i] > max)); then\n            max=max_sum[i]\n        fi\n    done\n\n    echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        inc[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i])) && ((inc[i] < inc[j] + arr[i])); then\n                inc[i]=${inc[j]} + ${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n        dec[i]=${arr[i]}\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i])) && ((dec[i] < dec[j] + arr[i])); then\n                dec[i]=${dec[j]} + ${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max < inc[i] + dec[i] - arr[i])); then\n            max=${inc[i]} + ${dec[i]} - ${arr[i]}\n        fi\n    done\n\n    echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max=0\n    local -i sum=0\n\n    while (( i < ${#arr[@]} )); do\n        (( inc[i] = arr[i] > arr[i-1] + inc[i-1] ? arr[i] : arr[i-1] + inc[i-1] ))\n        (( i++ ))\n    done\n\n    while (( j >= 0 )); do\n        (( dec[j] = arr[j] > arr[j+1] + dec[j+1] ? arr[j] : arr[j+1] + dec[j+1] ))\n        (( j-- ))\n    done\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        (( sum = inc[i] + dec[i] - arr[i] ))\n        (( max = sum > max ? sum : max ))\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max=${arr[0]}\n  for ((i=1;i<${#arr[@]};i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0;j<i;j++)); do\n      if (( arr[i] > arr[j] )); then\n        if (( inc[i] < inc[j] + arr[i] )); then\n          inc[i]=${inc[j]}+${arr[i]}\n        fi\n      fi\n    done\n    if (( max < inc[i] )); then\n      max=${inc[i]}\n    fi\n  done\n  for ((i=${#arr[@]}-2;i>=0;i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1;j>i;j--)); do\n      if (( arr[i] > arr[j] )); then\n        if (( dec[i] < dec[j] + arr[i] )); then\n          dec[i]=${dec[j]}+${arr[i]}\n        fi\n      fi\n    done\n    if (( max < dec[i] )); then\n      max=${dec[i]}\n    fi\n  done\n  for ((i=0;i<${#arr[@]}-1;i++)); do\n    if (( max < inc[i] + dec[i+1] )); then\n      max=${inc[i]}+${dec[i+1]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[j] < arr[i] )); then\n        (( inc[i] = inc[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[j] < arr[i] )); then\n        (( dec[i] = dec[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    (( max = max > inc[i] + dec[i] - arr[i] ? max : inc[i] + dec[i] - arr[i] ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i inc_max=${inc[0]}\n  local -i dec_max=${dec[0]}\n  while (( i < ${#arr[@]} )); do\n    (( inc[i] = arr[i] > arr[i-1] ? inc[i-1] + arr[i] : arr[i] ))\n    (( inc_max = inc[i] > inc_max ? inc[i] : inc_max ))\n    (( dec[j] = arr[j] > arr[j+1] ? dec[j+1] + arr[j] : arr[j] ))\n    (( dec_max = dec[j] > dec_max ? dec[j] : dec_max ))\n    (( i++, j-- ))\n  done\n  echo $(( inc_max > dec_max ? inc_max : dec_max ))",
    "    local -a arr=(\"$@\")\n    local -a inc=(0)\n    local -a dec=(0)\n    local max=0\n\n    for ((i = 1; i < ${#arr[@]}; i++)); do\n        inc[i]=0\n        dec[i]=0\n        for ((j = 0; j < i; j++)); do\n            if ((arr[i] > arr[j])); then\n                inc[i]=$((inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i]))\n            fi\n        done\n    done\n\n    for ((i = ${#arr[@]} - 2; i >= 0; i--)); do\n        for ((j = ${#arr[@]} - 1; j > i; j--)); do\n            if ((arr[i] > arr[j])); then\n                dec[i]=$((dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i]))\n            fi\n        done\n    done\n\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        max=$((max > inc[i] + dec[i] - arr[i] ? max : inc[i] + dec[i] - arr[i]))\n    done\n\n    echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[0]})\n    local -i i=1\n    local -i j=1\n    local -i max=0\n    local -i sum=0\n\n    while [ $i -lt ${#arr[@]} ]; do\n        sum=${inc[$i-1]}\n        if [ $sum -lt ${arr[$i]} ]; then\n            sum=${arr[$i]}\n        fi\n        inc[$i]=$sum\n        i=$i+1\n    done\n\n    while [ $j -lt ${#arr[@]} ]; do\n        sum=${dec[$j-1]}\n        if [ $sum -lt ${arr[$j]} ]; then\n            sum=${arr[$j]}\n        fi\n        dec[$j]=$sum\n        j=$j+1\n    done\n\n    i=0\n    while [ $i -lt ${#arr[@]} ]; do\n        sum=${inc[$i]}+${dec[$i]}\n        if [ $sum -gt $max ]; then\n            max=$sum\n        fi\n        i=$i+1\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc_sum\n  local -a dec_sum\n  local max_sum=0\n  local sum=0\n  local i=0\n\n  inc_sum[0]=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[i] > arr[j] )); then\n        sum=$(( inc_sum[j] + arr[i] ))\n        if (( sum > inc_sum[i] )); then\n          inc_sum[i]=$sum\n        fi\n      fi\n    done\n  done\n\n  dec_sum[${#arr[@]}-1]=${arr[${#arr[@]}-1]}\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec_sum[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[i] > arr[j] )); then\n        sum=$(( dec_sum[j] + arr[i] ))\n        if (( sum > dec_sum[i] )); then\n          dec_sum[i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$(( inc_sum[i] + dec_sum[i] - arr[i] ))\n    if (( sum > max_sum )); then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -a arr\n  local -i i j k\n  local -i max_sum=0\n  local -i sum=0\n  local -i len=0\n  local -i max_len=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_k=0\n  local -i max_sum_i=0\n  local -i max_sum_j=0\n  local -i max_sum_k=0\n  local -i max_sum_len=0\n  local -i max_sum_sum=0\n  local -i max_sum_max_sum=0\n  arr=($1)\n  len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      sum=0\n      for ((k=i; k<=j; k++)); do\n        sum+=${arr[k]}\n      done\n      if ((sum > max_sum)); then\n        max_sum=$sum\n        max_i=$i\n        max_j=$j\n        max_k=$k\n        max_len=$((j-i+1))\n      elif ((sum == max_sum)); then\n        if ((j-i+1 > max_len)); then\n          max_sum=$sum\n          max_i=$i\n          max_j=$j\n          max_k=$k\n          max_len=$((j-i+1))\n        fi\n      fi\n    done\n  done\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      for ((k=j; k<len; k++)); do\n        sum=0\n        for ((l=i; l<=k; l++)); do\n          sum+=${arr[l]}\n        done\n        if ((sum > max_sum_sum)); then\n          max_sum_sum=$sum\n          max_sum_i=$i\n          max_sum_j=$j\n          max_sum_k=$k\n          max_sum_len=$((k-i",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i sum=0\n  local -i inc_sum=0\n  local -i dec_sum=0\n\n  while [[ $i -lt ${#arr[@]} ]]; do\n    inc[$i]=$(( ${arr[$i]} > ${inc[$((i-1))]} ? ${arr[$i]} : ${inc[$((i-1))]} ))\n    i=$((i+1))\n  done\n\n  while [[ $j -ge 0 ]]; do\n    dec[$j]=$(( ${arr[$j]} > ${dec[$((j+1))]} ? ${arr[$j]} : ${dec[$((j+1))]} ))\n    j=$((j-1))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    inc_sum=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} ))\n    if [[ $inc_sum -gt $max ]]; then\n      max=$inc_sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i len=${#arr[@]}\n  local -i sum=0\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        ((inc[i] = inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        ((dec[i] = dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    ((sum = inc[i] + dec[i] - arr[i]))\n    if ((sum > max)); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i max=0\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n\n    for ((i=0; i<n; i++)); do\n        inc[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                if [[ ${inc[j]} -gt ${inc[i]} ]]; then\n                    inc[i]=${inc[j]}\n                fi\n            fi\n        done\n        (( inc[i] += arr[i] ))\n    done\n\n    for ((i=n-1; i>=0; i--)); do\n        dec[i]=${arr[i]}\n        for ((j=n-1; j>i; j--)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                if [[ ${dec[j]} -gt ${dec[i]} ]]; then\n                    dec[i]=${dec[j]}\n                fi\n            fi\n        done\n        (( dec[i] += arr[i] ))\n    done\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${inc[i]} -gt ${dec[i]} ]]; then\n            if [[ ${inc[i]} -gt $max ]]; then\n                max=${inc[i]}\n            fi\n        else\n            if [[ ${dec[i]} -gt $max ]]; then\n                max=${dec[i]}\n            fi\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=n-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=0; i<n; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n  echo $max",
    "    local -a arr=($1)\n    local -a inc_sum=(${arr[0]})\n    local -a dec_sum=(${arr[0]})\n    local max_sum=${arr[0]}\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        inc_sum[i]=${arr[i]}\n        dec_sum[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                inc_sum[i]=$((inc_sum[i] + inc_sum[j]))\n            fi\n            if [[ ${arr[j]} -gt ${arr[i]} ]]; then\n                dec_sum[i]=$((dec_sum[i] + dec_sum[j]))\n            fi\n        done\n        max_sum=$((max_sum > inc_sum[i] ? max_sum : inc_sum[i]))\n        max_sum=$((max_sum > dec_sum[i] ? max_sum : dec_sum[i]))\n    done\n\n    echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  while (( i < ${#arr[@]} )); do\n    (( inc[i] = arr[i] > arr[i-1] + inc[i-1] ? arr[i] : arr[i-1] + inc[i-1] ))\n    (( dec[j] = arr[j] > arr[j+1] + dec[j+1] ? arr[j] : arr[j+1] + dec[j+1] ))\n    (( i++, j-- ))\n  done\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( max = inc[i] + dec[i] - arr[i] > max ? inc[i] + dec[i] - arr[i] : max ))\n  done\n  echo $max",
    "    local -a arr=($1)\n    local -a inc_sum=(0)\n    local -a dec_sum=(0)\n    local -i i=0\n    local -i j=0\n    local -i max_sum=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        inc_sum[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i])) && ((inc_sum[i] < inc_sum[j] + arr[i])); then\n                inc_sum[i]=${inc_sum[j]}+${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        dec_sum[i]=${arr[i]}\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i])) && ((dec_sum[i] < dec_sum[j] + arr[i])); then\n                dec_sum[i]=${dec_sum[j]}+${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max_sum < inc_sum[i] + dec_sum[i] - arr[i])); then\n            max_sum=${inc_sum[i]}+${dec_sum[i]}-${arr[i]}\n        fi\n    done\n\n    echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[$i]=${arr[$i]}\n    dec[$i]=${arr[$i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        inc[$i]=$((inc[$i] + inc[$j]))\n      fi\n    done\n  done\n\n  for ((i=$(( ${#arr[@]} - 2 )); i>=0; i--)); do\n    for ((j=$(( ${#arr[@]} - 1 )); j>i; j--)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        dec[$i]=$((dec[$i] + dec[$j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $((inc[$i] + dec[$i] - arr[$i])) -gt $max ]]; then\n      max=$((inc[$i] + dec[$i] - arr[$i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n  local sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[j] < arr[i] )); then\n        if (( inc[i] < inc[j] + arr[i] )); then\n          inc[i]=${inc[j]}+${arr[i]}\n        fi\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[j] < arr[i] )); then\n        if (( dec[i] < dec[j] + arr[i] )); then\n          dec[i]=${dec[j]}+${arr[i]}\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=${inc[i]}+${dec[i]}\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc\n  local -a dec\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n  local -i len=${#arr[@]}\n  inc[0]=${arr[0]}\n  dec[len-1]=${arr[len-1]}\n  for ((i=1; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((${arr[j]} < ${arr[i]})); then\n        if ((inc[i] < inc[j] + ${arr[i]})); then\n          inc[i]=${inc[j]} + ${arr[i]}\n        fi\n      fi\n    done\n  done\n  for ((i=len-2; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if ((${arr[j]} < ${arr[i]})); then\n        if ((dec[i] < dec[j] + ${arr[i]})); then\n          dec[i]=${dec[j]} + ${arr[i]}\n        fi\n      fi\n    done\n  done\n  for ((i=0; i<len; i++)); do\n    sum=${inc[i]}+${dec[i]}-${arr[i]}\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] > max)); then\n      max=$((inc[i] + dec[i]))\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc_sum=(0)\n    local -a dec_sum=(0)\n    local max_sum=0\n    local i=0\n\n    inc_sum[0]=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n        inc_sum[i]=$(( ${arr[i]} > ${arr[i-1]} + ${inc_sum[i-1]} ? ${arr[i]} : ${arr[i-1]} + ${inc_sum[i-1]} ))\n    done\n\n    dec_sum[${#arr[@]}-1]=${arr[${#arr[@]}-1]}\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        dec_sum[i]=$(( ${arr[i]} > ${arr[i+1]} + ${dec_sum[i+1]} ? ${arr[i]} : ${arr[i+1]} + ${dec_sum[i+1]} ))\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        max_sum=$(( ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} > $max_sum ? ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} : $max_sum ))\n    done\n\n    echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=0\n\n  while ((i < ${#arr[@]})); do\n    if ((arr[i] > inc[-1])); then\n      inc+=(\"${arr[i]}\")\n    else\n      inc[-1]=\"${arr[i]}\"\n    fi\n    ((i++))\n  done\n\n  while ((j >= 0)); do\n    if ((arr[j] > dec[-1])); then\n      dec+=(\"${arr[j]}\")\n    else\n      dec[-1]=\"${arr[j]}\"\n    fi\n    ((j--))\n  done\n\n  for ((i=0; i<${#inc[@]}; i++)); do\n    for ((j=0; j<${#dec[@]}; j++)); do\n      if ((i + j < ${#arr[@]} - 1)); then\n        if ((inc[i] + dec[j] > max)); then\n          max=${inc[i]} + ${dec[j]}\n        fi\n      fi\n    done\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j]) && ((inc[i] < inc[j] + arr[i]))); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j]) && ((dec[i] < dec[j] + arr[i]))); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=inc[i]+dec[i]-arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        ((inc[i] = inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        ((dec[i] = dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((sum = inc[i] + dec[i] - arr[i]))\n    if ((sum > max)); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a lis=(${arr[0]})\n  local -a lds=(${arr[0]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i n=${#arr[@]}\n\n  for ((i=1; i<n; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j]) && (lis[i] < lis[j] + arr[i])); then\n        lis[i]=$((lis[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[i] > arr[j]) && (lds[i] < lds[j] + arr[i])); then\n        lds[i]=$((lds[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    if ((max < lis[i] + lds[i] - arr[i])); then\n      max=$((lis[i] + lds[i] - arr[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] + arr[i] > inc[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=n-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] + arr[i] > dec[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=0; i<n; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(0)\n  local -a dec_sum=(0)\n  local max_sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc_sum[j] + arr[i] > inc_sum[i])); then\n        inc_sum[i]=${inc_sum[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec_sum[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec_sum[j] + arr[i] > dec_sum[i])); then\n        dec_sum[i]=${dec_sum[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc_sum[i] + dec_sum[i] - arr[i] > max_sum)); then\n      max_sum=${inc_sum[i]}+${dec_sum[i]}-${arr[i]}\n    fi\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i k=1\n  local -i max=0\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n      inc[$j]=${arr[$i]}\n      ((j++))\n    fi\n    ((i++))\n  done\n\n  i=${#arr[@]}-1\n  while [ $i -gt 0 ]; do\n    if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n      dec[$k]=${arr[$i]}\n      ((k++))\n    fi\n    ((i--))\n  done\n\n  for ((i=0; i<${#inc[@]}; i++)); do\n    for ((j=0; j<${#dec[@]}; j++)); do\n      if [ ${inc[$i]} -eq ${dec[$j]} ]; then\n        if [ $(( ${inc[$i]} + ${dec[$j]} )) -gt $max ]; then\n          max=$(( ${inc[$i]} + ${dec[$j]} ))\n        fi\n      fi\n    done\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > inc[i-1] )); then\n      inc[i]=${arr[i]}\n    else\n      inc[i]=${inc[i-1]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > dec[j+1] )); then\n      dec[j]=${arr[j]}\n    else\n      dec[j]=${dec[j+1]}\n    fi\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    if (( inc[i]+dec[i] > max )); then\n      max=${inc[i]}+${dec[i]}\n    fi\n  done\n\n  echo $max",
    "  local -a a=($1)\n  local -a l=(0)\n  local -a r=(0)\n  local -i i=0 j=0 n=${#a[@]}\n  local -i max=0\n\n  for ((i=1; i<n; i++)); do\n    for ((j=0; j<i; j++)); do\n      (( a[i] > a[j] && l[i] < l[j] + a[i] )) && l[i]=${l[j]}+${a[i]}\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    for ((j=n-1; j>i; j--)); do\n      (( a[i] > a[j] && r[i] < r[j] + a[i] )) && r[i]=${r[j]}+${a[i]}\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    (( max < l[i] + r[i] - a[i] )) && max=${l[i]}+${r[i]}-${a[i]}\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a lis\n  local -a lds\n  local -i i\n  local -i j\n  local -i max_sum=0\n  local -i cur_sum=0\n\n  # find the longest increasing subsequence\n  for ((i=0; i<${#arr[@]}; i++)); do\n    lis[i]=1\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && lis[j] + 1 > lis[i])); then\n        lis[i]=$((lis[j] + 1))\n      fi\n    done\n  done\n\n  # find the longest decreasing subsequence\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    lds[i]=1\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && lds[j] + 1 > lds[i])); then\n        lds[i]=$((lds[j] + 1))\n      fi\n    done\n  done\n\n  # find the maximum sum of a bitonic subsequence\n  for ((i=0; i<${#arr[@]}; i++)); do\n    cur_sum=$((lis[i] + lds[i] - 1))\n    if ((cur_sum > max_sum)); then\n      max_sum=$cur_sum\n    fi\n  done\n\n  echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max=${arr[0]}\n    local -i sum=0\n\n    while [[ $i -lt ${#arr[@]} ]]; do\n        inc[$i]=$(( ${arr[$i]} > ${inc[$((i-1))]} ? ${arr[$i]} : ${inc[$((i-1))]} ))\n        dec[$j]=$(( ${arr[$j]} > ${dec[$((j+1))]} ? ${arr[$j]} : ${dec[$((j+1))]} ))\n        ((i++, j--))\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} ))\n        max=$(( $sum > $max ? $sum : $max ))\n    done\n\n    echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j]) && ((inc[i] < inc[j] + arr[i]))); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j]) && ((dec[i] < dec[j] + arr[i]))); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=inc[i]+dec[i]-arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=inc[i]+dec[i]-arr[i]\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n\n  echo $max",
    "  local -a a=($1)\n  local -a l=(0)\n  local -a r=(0)\n  local max=0\n  local n=${#a[@]}\n  local i=0\n  local j=0\n\n  for ((i=0; i<n; i++)); do\n    l[i]=${a[i]}\n    for ((j=0; j<i; j++)); do\n      if ((a[j] < a[i])) && ((l[i] < l[j] + a[i])); then\n        l[i]=${l[j]} + ${a[i]}\n      fi\n    done\n  done\n\n  for ((i=n-1; i>=0; i--)); do\n    r[i]=${a[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((a[j] < a[i])) && ((r[i] < r[j] + a[i])); then\n        r[i]=${r[j]} + ${a[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    if ((max < l[i] + r[i] - a[i])); then\n      max=${l[i]} + ${r[i]} - ${a[i]}\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[-1]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc_sum[i]=$((inc_sum[i] + inc_sum[j]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec_sum[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec_sum[i]=$((dec_sum[i] + dec_sum[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $((inc_sum[i] + dec_sum[i])) -gt $max ]]; then\n      max=$((inc_sum[i] + dec_sum[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$(( ${inc[j]} + ${arr[i]} ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec[i]=$(( ${dec[j]} + ${arr[i]} ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $(( ${inc[i]} + ${dec[i]} )) -gt $max ]]; then\n      max=$(( ${inc[i]} + ${dec[i]} ))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_inc=0\n  local -i max_dec=0\n  local -i max_sum=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > inc[-1] )); then\n      inc+=(${arr[i]})\n    else\n      inc[-1]=${arr[i]}\n    fi\n\n    if (( arr[j] > dec[-1] )); then\n      dec+=(${arr[j]})\n    else\n      dec[-1]=${arr[j]}\n    fi\n\n    (( i++ ))\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#inc[@]}; i++ )); do\n    for (( j=0; j<${#dec[@]}; j++ )); do\n      if (( inc[i] == dec[j] )); then\n        (( max_sum = inc[i] + max_inc + max_dec ))\n        break\n      elif (( inc[i] > dec[j] )); then\n        (( max_inc += dec[j] ))\n      else\n        (( max_dec += inc[i] ))\n      fi\n    done\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n  local -i i=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])) && ((inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n      if ((arr[j] > arr[i])) && ((dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        ((inc[i] = inc[i] + arr[j]))\n      fi\n    done\n  done\n\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        ((dec[i] = dec[i] + arr[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    ((max = inc[i] + dec[i] > max ? inc[i] + dec[i] : max))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_inc=${arr[0]}\n  local -i max_dec=${arr[-1]}\n  local -i sum=0\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > max_inc )); then\n      max_inc=${arr[i]}\n    fi\n    inc[i]=$max_inc\n    (( i++ ))\n  done\n  while (( j >= 0 )); do\n    if (( arr[j] > max_dec )); then\n      max_dec=${arr[j]}\n    fi\n    dec[j]=$max_dec\n    (( j-- ))\n  done\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( sum = inc[i] + dec[i] - arr[i] ))\n    if (( sum > max_sum )); then\n      max_sum=$sum\n    fi\n  done\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n  local k=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j]<arr[i] && inc[i]<inc[j]+arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j]<arr[i] && dec[i]<dec[j]+arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max<inc[i]+dec[i]-arr[i])); then\n      max=${inc[i]}+${dec[i]}-${arr[i]}\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        inc[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n                inc[i]=${inc[j]}+${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n        dec[i]=${arr[i]}\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n                dec[i]=${dec[j]}+${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max < inc[i] + dec[i] - arr[i])); then\n            max=${inc[i]}+${dec[i]}-${arr[i]}\n        fi\n    done\n\n    echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i len=${#arr[@]}\n\n    for ((i=0; i<len; i++)); do\n        inc[$i]=${arr[$i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[$j] < arr[$i] && inc[$j] + arr[$i] > inc[$i])); then\n                inc[$i]=$((inc[$j] + arr[$i]))\n            fi\n        done\n    done\n\n    for ((i=len-1; i>=0; i--)); do\n        dec[$i]=${arr[$i]}\n        for ((j=len-1; j>i; j--)); do\n            if ((arr[$j] < arr[$i] && dec[$j] + arr[$i] > dec[$i])); then\n                dec[$i]=$((dec[$j] + arr[$i]))\n            fi\n        done\n    done\n\n    for ((i=0; i<len; i++)); do\n        if ((inc[$i] + dec[$i] - arr[$i] > max)); then\n            max=$((inc[$i] + dec[$i] - arr[$i]))\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i sum=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > arr[i-1] )); then\n      inc[i]=$(( inc[i-1] + arr[i] ))\n    else\n      inc[i]=${arr[i]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > arr[j+1] )); then\n      dec[j]=$(( dec[j+1] + arr[j] ))\n    else\n      dec[j]=${arr[j]}\n    fi\n    (( j-- ))\n  done\n\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    sum=$(( inc[i] + dec[i] - arr[i] ))\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max=0\n    while ((i < ${#arr[@]})); do\n        inc[i]=${arr[i]}\n        dec[j]=${arr[j]}\n        local -i k=0\n        while ((k < i)); do\n            if ((arr[i] > arr[k] && inc[i] < inc[k] + arr[i])); then\n                inc[i]=inc[k]+arr[i]\n            fi\n            ((k++))\n        done\n        ((i++))\n        k=${#arr[@]}-1\n        while ((k > j)); do\n            if ((arr[j] > arr[k] && dec[j] < dec[k] + arr[j])); then\n                dec[j]=dec[k]+arr[j]\n            fi\n            ((k--))\n        done\n        ((j--))\n    done\n    i=0\n    while ((i < ${#arr[@]})); do\n        if ((inc[i] + dec[i] - arr[i] > max)); then\n            max=inc[i]+dec[i]-arr[i]\n        fi\n        ((i++))\n    done\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i n=${#arr[@]}\n\n  for ((i=0; i<n; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n\n  for ((i=n-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    if [[ $((inc[i] + dec[i])) -gt $max ]]; then\n      max=$((inc[i] + dec[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=($1)\n  local -a dec=($1)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        (( inc[i] = inc[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        (( dec[i] = dec[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    (( sum = inc[i] + dec[i] - arr[i] ))\n    if [[ sum -gt max ]]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n  local -i n=${#arr[@]}\n\n  for ((i=1; i<n; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    sum=$((inc[i] + dec[i] - arr[i]))\n    if ((sum > max)); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=0\n  local -i sum=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > arr[i-1] )); then\n      inc[i]=$(( inc[i-1] + arr[i] ))\n    else\n      inc[i]=${arr[i]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > arr[j+1] )); then\n      dec[j]=$(( dec[j+1] + arr[j] ))\n    else\n      dec[j]=${arr[j]}\n    fi\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sum=$(( inc[i] + dec[i] - arr[i] ))\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_inc=${arr[0]}\n  local -i max_dec=${arr[-1]}\n  local -i max_sum=0\n  local -i sum=0\n  local -i max_i=0\n  local -i max_j=0\n  while [[ $i -lt ${#arr[@]} ]]; do\n    if [[ ${arr[$i]} -gt $max_inc ]]; then\n      inc[$i]=${arr[$i]}\n      max_inc=${arr[$i]}\n    else\n      inc[$i]=$max_inc\n    fi\n    ((i++))\n  done\n  while [[ $j -ge 0 ]]; do\n    if [[ ${arr[$j]} -gt $max_dec ]]; then\n      dec[$j]=${arr[$j]}\n      max_dec=${arr[$j]}\n    else\n      dec[$j]=$max_dec\n    fi\n    ((j--))\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=${inc[$i]}+${dec[$i]}\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n      max_i=$i\n      max_j=$i\n    fi\n  done\n  echo $max_sum",
    "  local -a arr\n  local -i i j k\n  local -i max_sum=0\n  local -i max_sum_i=0\n  local -i max_sum_j=0\n  local -i sum=0\n  local -i sum_i=0\n  local -i sum_j=0\n  arr=($1)\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=0\n    sum_i=$i\n    for ((j=i; j<${#arr[@]}; j++)); do\n      sum=$((sum + arr[j]))\n      sum_j=$j\n      if ((sum > max_sum)); then\n        max_sum=$sum\n        max_sum_i=$sum_i\n        max_sum_j=$sum_j\n      fi\n    done\n  done\n  echo \"max_sum=$max_sum\"\n  echo \"max_sum_i=$max_sum_i\"\n  echo \"max_sum_j=$max_sum_j\"",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])); then\n        ((inc[i] = inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i])); then\n        ((dec[i] = dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((max = inc[i] + dec[i] - arr[i] > max ? inc[i] + dec[i] - arr[i] : max))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc[i] + dec[i] > max)); then\n      max=$((inc[i] + dec[i]))\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n  local -i sum=0\n\n  for ((i=1; i<len; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        sum=${inc[j]} + ${arr[i]}\n        if [[ $sum -gt ${inc[i]} ]]; then\n          inc[i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=len-2; i>=0; i--)); do\n    for ((j=len-1; j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        sum=${dec[j]} + ${arr[i]}\n        if [[ $sum -gt ${dec[i]} ]]; then\n          dec[i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    sum=${inc[i]} + ${dec[i]} - ${arr[i]}\n    if [[ $sum -gt $max ]]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max_sum=0\n  local -i sum=0\n\n  while (( i < ${#arr[@]} )); do\n    inc_sum[i]=$(( inc_sum[i-1] > 0 ? inc_sum[i-1] + arr[i] : arr[i] ))\n    dec_sum[j]=$(( dec_sum[j+1] > 0 ? dec_sum[j+1] + arr[j] : arr[j] ))\n    (( i++, j-- ))\n  done\n\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    sum=$(( inc_sum[i] + dec_sum[i] - arr[i] ))\n    (( sum > max_sum )) && max_sum=$sum\n  done\n\n  echo $max_sum",
    "    local -a arr=($1)\n    local -a inc_sum=(${arr[0]})\n    local -a dec_sum=(${arr[0]})\n    local max_sum=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n        inc_sum[i]=${arr[i]}\n        dec_sum[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n                inc_sum[i]=$(( ${inc_sum[i]} > ${inc_sum[j]} + ${arr[i]} ? ${inc_sum[i]} : ${inc_sum[j]} + ${arr[i]} ))\n            fi\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n                dec_sum[i]=$(( ${dec_sum[i]} > ${dec_sum[j]} + ${arr[i]} ? ${dec_sum[i]} : ${dec_sum[j]} + ${arr[i]} ))\n            fi\n        done\n        max_sum=$(( ${max_sum} > ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} ? ${max_sum} : ${inc_sum[i]} + ${dec_sum[i]} - ${arr[i]} ))\n    done\n    echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max=0\n    local -i sum=0\n    local -i inc_sum=0\n    local -i dec_sum=0\n\n    while (( i < ${#arr[@]} )); do\n        inc_sum=${inc[i-1]}\n        if (( inc_sum < ${arr[i]} )); then\n            inc_sum=${arr[i]}\n        fi\n        inc+=($inc_sum)\n\n        dec_sum=${dec[j+1]}\n        if (( dec_sum < ${arr[j]} )); then\n            dec_sum=${arr[j]}\n        fi\n        dec+=($dec_sum)\n\n        (( i++, j-- ))\n    done\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sum=${inc[i]}+${dec[i]}\n        if (( sum > max )); then\n            max=$sum\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[$i]=${arr[$i]}\n    dec[$i]=${arr[$i]}\n  done\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        inc[$i]=$(( ${inc[$i]} > ${inc[$j]} + ${arr[$i]} ? ${inc[$i]} : ${inc[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=$((${#arr[@]}-2)); i>=0; i--)); do\n    for ((j=$((${#arr[@]}-1)); j>i; j--)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        dec[$i]=$(( ${dec[$i]} > ${dec[$j]} + ${arr[$i]} ? ${dec[$i]} : ${dec[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} > $max ? ${inc[$i]} + ${dec[$i]} - ${arr[$i]} : $max ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        if ((inc[i] < inc[j] + arr[i])); then\n          inc[i]=inc[j] + arr[i]\n        fi\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        if ((dec[i] < dec[j] + arr[i])); then\n          dec[i]=dec[j] + arr[i]\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((max < inc[i] + dec[i] - arr[i])); then\n      max=inc[i] + dec[i] - arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i sum=0\n\n  while [ $i -lt ${#arr[@]} ]; do\n    inc[$i]=$(( ${arr[$i]} > ${inc[$((i-1))]} ? ${arr[$i]} : ${inc[$((i-1))]} ))\n    dec[$j]=$(( ${arr[$j]} > ${dec[$((j+1))]} ? ${arr[$j]} : ${dec[$((j+1))]} ))\n    (( i++, j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sum=$(( ${inc[$i]} + ${dec[$i]} - ${arr[$i]} ))\n    max=$(( $sum > $max ? $sum : $max ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc_sum=(0)\n  local -a dec_sum=(0)\n  local max_sum=0\n  local len=${#arr[@]}\n  local i=0\n  local j=0\n\n  inc_sum[0]=${arr[0]}\n  dec_sum[0]=${arr[0]}\n\n  for ((i=1; i<len; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        inc_sum[i]=$((inc_sum[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=len-2; i>=0; i--)); do\n    for ((j=len-1; j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        dec_sum[i]=$((dec_sum[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${inc_sum[i]} -gt $max_sum ]]; then\n      max_sum=${inc_sum[i]}\n    fi\n    if [[ ${dec_sum[i]} -gt $max_sum ]]; then\n      max_sum=${dec_sum[i]}\n    fi\n  done\n\n  echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i sum=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[i] > arr[j]) && (inc[i] < inc[j] + arr[i])); then\n                inc[i]=inc[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[i] > arr[j]) && (dec[i] < dec[j] + arr[i])); then\n                dec[i]=dec[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=inc[i]+dec[i]-arr[i]\n        if ((sum > max)); then\n            max=sum\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[j] < arr[i] )); then\n        (( inc[i] = inc[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[j] < arr[i] )); then\n        (( dec[i] = dec[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    (( sum = inc[i] + dec[i] - arr[i] ))\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1 j=${#arr[@]}\n  while ((i<${#arr[@]})); do\n    inc[i]=$((arr[i]>inc[i-1]?inc[i-1]+arr[i]:arr[i]))\n    dec[j-1]=$((arr[j-1]>dec[j]?dec[j]+arr[j-1]:arr[j-1]))\n    ((i++,j--))\n  done\n  local -i max=0\n  for ((i=0;i<${#arr[@]};i++)); do\n    ((inc[i]+dec[i]>max)) && max=$((inc[i]+dec[i]))\n  done\n  echo $max",
    "    local -a arr=($1)\n    local -i n=${#arr[@]}\n    local -i i j k\n    local -i max_sum=0\n    local -i max_sum_i=0\n    local -i max_sum_j=0\n    local -i max_sum_k=0\n    local -i sum=0\n    for ((i=0; i<n; i++)); do\n        for ((j=i; j<n; j++)); do\n            sum=0\n            for ((k=i; k<=j; k++)); do\n                sum+=${arr[k]}\n            done\n            if ((sum > max_sum)); then\n                max_sum=$sum\n                max_sum_i=$i\n                max_sum_j=$j\n                max_sum_k=$k\n            fi\n        done\n    done\n    echo \"max_sum=$max_sum\"\n    echo \"max_sum_i=$max_sum_i\"\n    echo \"max_sum_j=$max_sum_j\"\n    echo \"max_sum_k=$max_sum_k\"",
    "  local -a arr=($1)\n  local -a inc_sum=(0)\n  local -a dec_sum=(0)\n  local -a sum=(0)\n  local max=0\n  local i=0\n  local j=0\n  local k=0\n\n  for ((i=0; i<${#arr[@]}; i++))\n  do\n    inc_sum[i]=${arr[i]}\n    for ((j=0; j<i; j++))\n    do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]\n      then\n        inc_sum[i]=$((${inc_sum[i]} + ${arr[j]}))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--))\n  do\n    dec_sum[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--))\n    do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]\n      then\n        dec_sum[i]=$((${dec_sum[i]} + ${arr[j]}))\n      fi\n    done\n  done\n\n  for ((k=0; k<${#arr[@]}; k++))\n  do\n    sum[k]=$((${inc_sum[k]} + ${dec_sum[k]} - ${arr[k]}))\n  done\n\n  for ((k=0; k<${#arr[@]}; k++))\n  do\n    if [[ ${sum[k]} -gt $max ]]\n    then\n      max=${sum[k]}\n    fi\n  done\n\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=1\n  local -i j=1\n  local -i max=0\n  local -i sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] > inc[i])); then\n        inc[i]=inc[j]\n      fi\n    done\n    inc[i]+=arr[i]\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] > dec[i])); then\n        dec[i]=dec[j]\n      fi\n    done\n    dec[i]+=arr[i]\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=inc[i]+dec[i]-arr[i]\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n  for ((i=n-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n  for ((i=0; i<n; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i inc_sum=${arr[0]}\n  local -i dec_sum=${arr[0]}\n  local -i max_sum=${arr[0]}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n ",
    "  local -a a=($1)\n  local -a b=($1)\n  local -a c=($1)\n  local -a d=($1)\n  local -a e=($1)\n  local -a f=($1)\n  local -a g=($1)\n  local -a h=($1)\n  local -a i=($1)\n  local -a j=($1)\n  local -a k=($1)\n  local -a l=($1)\n  local -a m=($1)\n  local -a n=($1)\n  local -a o=($1)\n  local -a p=($1)\n  local -a q=($1)\n  local -a r=($1)\n  local -a s=($1)\n  local -a t=($1)\n  local -a u=($1)\n  local -a v=($1)\n  local -a w=($1)\n  local -a x=($1)\n  local -a y=($1)\n  local -a z=($1)\n  local -a A=($1)\n  local -a B=($1)\n  local -a C=($1)\n  local -a D=($1)\n  local -a E=($1)\n  local -a F=($1)\n  local -a G=($1)\n  local -a H=($1)\n  local -a I=($1)\n  local -a J=($1)\n  local -a K=($1)\n  local -a L=($1)\n  local -a M=($1)\n  local -a N=($1)\n  local -a O=($1)\n  local -a P=($1)\n  local -a Q=($1)\n  local -a R=($1)\n  local -a S=($1)\n  local -a T=($1)\n  local -a U=($1)\n  local -a V=($1)\n  local -a W=($1)\n  local -a X=($1)\n  local -a Y=($1)\n ",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${inc[i]} -gt 0 && ${dec[i]} -gt 0 ]]; then\n      max=$((max > inc[i] + dec[i] ? max : inc[i] + dec[i]))\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i max=0\n    local -i i=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        inc[i]=${arr[i]}\n        dec[i]=${arr[i]}\n    done\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[i] > arr[j])) && ((inc[i] < inc[j] + arr[i])); then\n                inc[i]=inc[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[i] > arr[j])) && ((dec[i] < dec[j] + arr[i])); then\n                dec[i]=dec[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max < inc[i] + dec[i] - arr[i])); then\n            max=inc[i]+dec[i]-arr[i]\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i])) && ((inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n      if ((arr[j] > arr[i])) && ((dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n    if ((max < inc[i])); then\n      max=${inc[i]}\n    fi\n    if ((max < dec[i])); then\n      max=${dec[i]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[i] > arr[j])); then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n  for ((i=len-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=len-1; j>i; j--)); do\n      if ((arr[i] > arr[j])); then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n  for ((i=0; i<len; i++)); do\n    if ((inc[i] + dec[i] > max)); then\n      max=$((inc[i] + dec[i]))\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i\n  local -i j\n  local -i max=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n      if ((arr[j] > arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n    if ((max < inc[i])); then\n      max=${inc[i]}\n    fi\n    if ((max < dec[i])); then\n      max=${dec[i]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i max=${arr[0]}\n  local -i i=1\n  local -i j=0\n  local -i k=0\n  local -i sum=0\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n      inc[$i]=$((inc[$((i-1))]+arr[$i]))\n    else\n      inc[$i]=${arr[$i]}\n    fi\n\n    if [ ${arr[$i]} -lt ${arr[$((i-1))]} ]; then\n      dec[$i]=$((dec[$((i-1))]+arr[$i]))\n    else\n      dec[$i]=${arr[$i]}\n    fi\n\n    if [ ${inc[$i]} -gt $max ]; then\n      max=${inc[$i]}\n    fi\n\n    if [ ${dec[$i]} -gt $max ]; then\n      max=${dec[$i]}\n    fi\n\n    i=$((i+1))\n  done\n\n  i=$((i-1))\n  while [ $i -gt 0 ]; do\n    j=$((i-1))\n    while [ $j -gt 0 ]; do\n      if [ ${arr[$i]} -gt ${arr[$j]} ]; then\n        sum=$((inc[$j]+dec[$i]))\n        if [ $sum -gt $max ]; then\n          max=$sum\n        fi\n      fi\n      j=$((j-1))\n    done\n    i=$((i-1))\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local sum=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                inc[i]=$(( ${inc[j]} + ${arr[i]} ))\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                dec[i]=$(( ${dec[j]} + ${arr[i]} ))\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$(( ${inc[i]} + ${dec[i]} ))\n        if [[ $sum -gt $max ]]; then\n            max=$sum\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if (( arr[j] < arr[i] )); then\n        (( inc[i] = inc[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if (( arr[j] < arr[i] )); then\n        (( dec[i] = dec[j] + arr[i] ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if (( inc[i] + dec[i] - arr[i] > max )); then\n      max=inc[i]+dec[i]-arr[i]\n    fi\n  done\n\n  echo $max",
    "  local -a array=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n\n  for (( i=1; i<${#array[@]}; i++ )); do\n    for (( j=0; j<i; j++ )); do\n      if (( array[i] > array[j] )); then\n        inc[i]=$(( inc[j] + array[i] ))\n      fi\n    done\n  done\n\n  for (( i=${#array[@]}-2; i>=0; i-- )); do\n    for (( j=${#array[@]}-1; j>i; j-- )); do\n      if (( array[i] > array[j] )); then\n        dec[i]=$(( dec[j] + array[i] ))\n      fi\n    done\n  done\n\n  for (( i=0; i<${#array[@]}; i++ )); do\n    if (( inc[i] + dec[i] > max )); then\n      max=$(( inc[i] + dec[i] ))\n    fi\n  done\n\n  echo $max",
    "  local -a array=($1)\n  local -a inc=(${array[0]})\n  local -a dec=(${array[0]})\n  local -i max=${array[0]}\n  local -i i=1\n  local -i j=1\n  local -i k=1\n  local -i sum=0\n\n  while [[ $i -lt ${#array[@]} ]]; do\n    if [[ ${array[$i]} -gt ${array[$((i-1))]} ]]; then\n      inc[$i]=$((inc[$((i-1))]+array[$i]))\n    else\n      inc[$i]=${array[$i]}\n    fi\n    ((i++))\n  done\n\n  while [[ $j -lt ${#array[@]} ]]; do\n    if [[ ${array[$j]} -gt ${array[$((j-1))]} ]]; then\n      dec[$j]=${array[$j]}\n    else\n      dec[$j]=$((dec[$((j-1))]+array[$j]))\n    fi\n    ((j++))\n  done\n\n  while [[ $k -lt ${#array[@]} ]]; do\n    sum=$((inc[$((k-1))]+dec[$((k+1))]))\n    if [[ $sum -gt $max ]]; then\n      max=$sum\n    fi\n    ((k++))\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i max=0\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n\n    for ((i=0; i<n; i++)); do\n        inc[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[j]<arr[i] && inc[i]<inc[j]+arr[i])); then\n                inc[i]=${inc[j]}+${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=n-1; i>=0; i--)); do\n        dec[i]=${arr[i]}\n        for ((j=n-1; j>i; j--)); do\n            if ((arr[j]<arr[i] && dec[i]<dec[j]+arr[i])); then\n                dec[i]=${dec[j]}+${arr[i]}\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        if ((max<inc[i]+dec[i]-arr[i])); then\n            max=${inc[i]}+${dec[i]}-${arr[i]}\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        inc[$i]=$(( ${inc[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n        dec[$i]=$(( ${dec[$j]} + ${arr[$i]} ))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ $(( ${inc[$i]} + ${dec[$i]} )) -gt $max ]]; then\n      max=$(( ${inc[$i]} + ${dec[$i]} ))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max=${arr[0]}\n  local sum=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        if [[ ${inc[i]} -lt $(( ${inc[j]} + ${arr[i]} )) ]]; then\n          inc[i]=$(( ${inc[j]} + ${arr[i]} ))\n        fi\n      fi\n\n      if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n        if [[ ${dec[i]} -lt $(( ${dec[j]} + ${arr[i]} )) ]]; then\n          dec[i]=$(( ${dec[j]} + ${arr[i]} ))\n        fi\n      fi\n    done\n\n    if [[ ${inc[i]} -gt ${dec[i]} ]]; then\n      sum=${inc[i]}\n    else\n      sum=${dec[i]}\n    fi\n\n    if [[ $sum -gt $max ]]; then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1 j=${#arr[@]}\n  while (( i < j )); do\n    inc[i]=$(( ${arr[i]} + ${inc[i-1]} ))\n    dec[j]=$(( ${arr[j]} + ${dec[j+1]} ))\n    (( i++, j-- ))\n  done\n  local -i max=0\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    (( max < ${inc[i]} + ${dec[i+1]} )) && max=${inc[i]} + ${dec[i+1]}\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=0\n    dec[i]=0\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        if [[ ${inc[i]} -lt ${inc[j]} ]]; then\n          inc[i]=${inc[j]}\n        fi\n      fi\n      if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n        if [[ ${dec[i]} -lt ${dec[j]} ]]; then\n          dec[i]=${dec[j]}\n        fi\n      fi\n    done\n    inc[i]=$(( ${inc[i]} + ${arr[i]} ))\n    dec[i]=$(( ${dec[i]} + ${arr[i]} ))\n    if [[ ${inc[i]} -gt ${dec[i]} ]]; then\n      if [[ ${inc[i]} -gt $max ]]; then\n        max=${inc[i]}\n      fi\n    else\n      if [[ ${dec[i]} -gt $max ]]; then\n        max=${dec[i]}\n      fi\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=${inc[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=${dec[j]}+${arr[i]}\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=${inc[i]}+${dec[i]}\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n\n  echo $max",
    "    local -a array=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local max=0\n    local sum=0\n    for ((i=1; i<${#array[@]}; i++)); do\n        inc[i]=0\n        dec[i]=0\n        for ((j=0; j<i; j++)); do\n            if ((array[j]<array[i])); then\n                inc[i]=$((inc[i]>inc[j]?inc[i]:inc[j]))\n            fi\n            if ((array[j]>array[i])); then\n                dec[i]=$((dec[i]>dec[j]?dec[i]:dec[j]))\n            fi\n        done\n        inc[i]=$((inc[i]+array[i]))\n        dec[i]=$((dec[i]+array[i]))\n        sum=$((inc[i]+dec[i]-array[i]))\n        max=$((max>sum?max:sum))\n    done\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=1\n  while [ $i -lt ${#arr[@]} ]; do\n    inc[$i]=${arr[$i]}\n    dec[$i]=${arr[$i]}\n    local j=0\n    while [ $j -lt $i ]; do\n      if [ ${arr[$j]} -lt ${arr[$i]} ]; then\n        inc[$i]=$((inc[$i] + inc[$j]))\n      fi\n      if [ ${arr[$j]} -gt ${arr[$i]} ]; then\n        dec[$i]=$((dec[$i] + dec[$j]))\n      fi\n      j=$((j + 1))\n    done\n    if [ ${inc[$i]} -gt $max ]; then\n      max=${inc[$i]}\n    fi\n    if [ ${dec[$i]} -gt $max ]; then\n      max=${dec[$i]}\n    fi\n    i=$((i + 1))\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i k=1\n  local -i max=${arr[0]}\n  local -i sum=0\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n      inc[$j]=${arr[$i]}\n      ((j++))\n    else\n      dec[$k]=${arr[$i]}\n      ((k++))\n    fi\n    ((i++))\n  done\n  for ((i=0; i<${#inc[@]}; i++)); do\n    for ((j=i; j<${#inc[@]}; j++)); do\n      sum=0\n      for ((k=i; k<=j; k++)); do\n        sum=$((sum+inc[k]))\n      done\n      if [ $sum -gt $max ]; then\n        max=$sum\n      fi\n    done\n  done\n  for ((i=0; i<${#dec[@]}; i++)); do\n    for ((j=i; j<${#dec[@]}; j++)); do\n      sum=0\n      for ((k=i; k<=j; k++)); do\n        sum=$((sum+dec[k]))\n      done\n      if [ $sum -gt $max ]; then\n        max=$sum\n      fi\n    done\n  done\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc_sum=()\n  local -a dec_sum=()\n  local max_sum=0\n  local sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc_sum[$i]=${arr[$i]}\n    for ((j=0; j<$i; j++)); do\n      if ((${arr[$j]} < ${arr[$i]})); then\n        sum=$((inc_sum[$j] + ${arr[$i]}))\n        if ((sum > inc_sum[$i])); then\n          inc_sum[$i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=$((${#arr[@]}-1)); i>=0; i--)); do\n    dec_sum[$i]=${arr[$i]}\n    for ((j=$((${#arr[@]}-1)); j>$i; j--)); do\n      if ((${arr[$j]} < ${arr[$i]})); then\n        sum=$((dec_sum[$j] + ${arr[$i]}))\n        if ((sum > dec_sum[$i])); then\n          dec_sum[$i]=$sum\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((inc_sum[$i] + dec_sum[$i] - ${arr[$i]}))\n    if ((sum > max_sum)); then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -a arr=(\"$@\")\n  local -a inc_sum\n  local -a dec_sum\n  local max_sum=0\n  local len=${#arr[@]}\n  local i\n\n  inc_sum[0]=${arr[0]}\n  dec_sum[$((len - 1))]=${arr[$((len - 1))]}\n\n  for ((i = 1; i < len; i++)); do\n    inc_sum[$i]=$((inc_sum[$((i - 1))] + arr[$i]))\n    dec_sum[$((len - i - 1))]=$((dec_sum[$((len - i))] + arr[$((len - i - 1))]))\n  done\n\n  for ((i = 0; i < len; i++)); do\n    local sum=$((inc_sum[$i] + dec_sum[$i] - arr[$i]))\n    if ((sum > max_sum)); then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc_sum=(0)\n  local -a dec_sum=(0)\n  local max_sum=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc_sum[$i]=${arr[0]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j]<arr[i] && inc_sum[j]+arr[i]>inc_sum[i])); then\n        inc_sum[i]=${inc_sum[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    dec_sum[$i]=${arr[-1]}\n    for ((j=${#arr[@]}-1; j>i; j--)); do\n      if ((arr[j]<arr[i] && dec_sum[j]+arr[i]>dec_sum[i])); then\n        dec_sum[i]=${dec_sum[j]}+${arr[i]}\n      fi\n    done\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((inc_sum[i]+dec_sum[i]-arr[i]>max_sum)); then\n      max_sum=${inc_sum[i]}+${dec_sum[i]}-${arr[i]}\n    fi\n  done\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n  local -i len=${#arr[@]}\n\n  for ((i=1; i<len; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n        inc[i]=inc[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=len-2; i>=0; i--)); do\n    for ((j=len-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n        dec[i]=dec[j]+arr[i]\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    sum=inc[i]+dec[i]-arr[i]\n    if ((sum > max)); then\n      max=sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n  local sum=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    inc[$i]=${arr[$i]}\n    for ((j=0; j<$i; j++)); do\n      if ((arr[$j] < arr[$i])); then\n        if ((inc[$i] < inc[$j] + arr[$i])); then\n          inc[$i]=${inc[$j]}+${arr[$i]}\n        fi\n      fi\n    done\n  done\n\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    dec[$i]=${arr[$i]}\n    for ((j=${#arr[@]}-1; j>$i; j--)); do\n      if ((arr[$j] < arr[$i])); then\n        if ((dec[$i] < dec[$j] + arr[$i])); then\n          dec[$i]=${dec[$j]}+${arr[$i]}\n        fi\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=${inc[$i]}+${dec[$i]}-${arr[$i]}\n    if ((sum > max)); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i sum=0\n\n  while (( i < ${#arr[@]} )); do\n    if (( arr[i] > arr[i-1] )); then\n      inc[i]=$(( inc[i-1] + arr[i] ))\n    else\n      inc[i]=${arr[i]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j >= 0 )); do\n    if (( arr[j] > arr[j+1] )); then\n      dec[j]=$(( dec[j+1] + arr[j] ))\n    else\n      dec[j]=${arr[j]}\n    fi\n    (( j-- ))\n  done\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sum=$(( inc[i] + dec[i] - arr[i] ))\n    if (( sum > max )); then\n      max=$sum\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[-1]})\n  local -i i=1\n  local -i j=${#arr[@]}-2\n  local -i max=${arr[0]}\n  local -i sum=0\n  local -i max_sum=0\n  while (( i < ${#arr[@]} )); do\n    inc[i]=$(( ${arr[i]} > ${inc[i-1]} ? ${arr[i]} : ${inc[i-1]} ))\n    (( i++ ))\n  done\n  while (( j >= 0 )); do\n    dec[j]=$(( ${arr[j]} > ${dec[j+1]} ? ${arr[j]} : ${dec[j+1]} ))\n    (( j-- ))\n  done\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sum=$(( ${inc[i]} + ${dec[i]} - ${arr[i]} ))\n    max_sum=$(( sum > max_sum ? sum : max_sum ))\n  done\n  echo $max_sum",
    "  local -a arr=($1)\n  local -a inc_sum=(${arr[0]})\n  local -a dec_sum=(${arr[-1]})\n  local max=${arr[0]}\n  local -i i=1\n  local -i j=0\n  local -i k=0\n  local -i n=${#arr[@]}\n  local -i m=0\n\n  while (( i < n )); do\n    inc_sum[i]=${arr[i]}\n    j=0\n    while (( j < i )); do\n      if (( arr[j] < arr[i] )); then\n        inc_sum[i]=$(( inc_sum[i] + inc_sum[j] ))\n      fi\n      (( j++ ))\n    done\n    (( i++ ))\n  done\n\n  (( i = n - 2 ))\n  while (( i >= 0 )); do\n    dec_sum[i]=${arr[i]}\n    j=n-1\n    while (( j > i )); do\n      if (( arr[j] < arr[i] )); then\n        dec_sum[i]=$(( dec_sum[i] + dec_sum[j] ))\n      fi\n      (( j-- ))\n    done\n    (( i-- ))\n  done\n\n  for (( i = 0; i < n; i++ )); do\n    m=$(( inc_sum[i] + dec_sum[i] - arr[i] ))\n    if (( m > max )); then\n      max=$m\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc\n    local -a dec\n    local -i i j k\n    local -i max_sum=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        inc[i]=${arr[i]}\n        dec[i]=${arr[i]}\n    done\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[i] > arr[j] && inc[i] < inc[j] + arr[i])); then\n                inc[i]=inc[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[i] > arr[j] && dec[i] < dec[j] + arr[i])); then\n                dec[i]=dec[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max_sum < inc[i] + dec[i] - arr[i])); then\n            max_sum=inc[i] + dec[i] - arr[i]\n        fi\n    done\n\n    echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        inc[i]=${arr[i]}\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n                inc[i]=inc[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n        dec[i]=${arr[i]}\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n                dec[i]=dec[j]+arr[i]\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max < inc[i] + dec[i] - arr[i])); then\n            max=inc[i] + dec[i] - arr[i]\n        fi\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n  local j=0\n  local k=0\n  local len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    inc[i]=${arr[i]}\n    dec[i]=${arr[i]}\n  done\n\n  for ((i=1; i<len; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        inc[i]=$((inc[i] + inc[j]))\n      fi\n    done\n  done\n\n  for ((i=$((len-2)); i>=0; i--)); do\n    for ((j=$((len-1)); j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        dec[i]=$((dec[i] + dec[j]))\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    if [[ $((inc[i] + dec[i] - arr[i])) -gt $max ]]; then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n\n  echo $max",
    "  local -a arr\n  local -i i j k\n  local -i max_sum=0\n  local -i sum=0\n  local -i max_num=0\n  local -i max_num_index=0\n  local -i max_num_index_2=0\n  local -i max_num_2=0\n  local -i max_num_index_3=0\n  local -i max_num_3=0\n  local -i max_num_index_4=0\n  local -i max_num_4=0\n  local -i max_num_index_5=0\n  local -i max_num_5=0\n  local -i max_num_index_6=0\n  local -i max_num_6=0\n  local -i max_num_index_7=0\n  local -i max_num_7=0\n  local -i max_num_index_8=0\n  local -i max_num_8=0\n  local -i max_num_index_9=0\n  local -i max_num_9=0\n  local -i max_num_index_10=0\n  local -i max_num_10=0\n  local -i max_num_index_11=0\n  local -i max_num_11=0\n  local -i max_num_index_12=0\n  local -i max_num_12=0\n  local -i max_num_index_13=0\n  local -i max_num_13=0\n  local -i max_num_index_14=0\n  local -i max_num_14=0\n  local -i max_num_index_15=0\n  local -i max_num_15=0\n  local -i max_num_index_16=0\n  local -i max_num_16=0\n  local -i max_num_index_17=0\n  local -i max_num_17=0\n  local -i max_num_index_18=0\n  local -i max_num_18=0\n  local -i max_num_index_19=0\n ",
    "    local -a arr=($1)\n    local -a inc=(0)\n    local -a dec=(0)\n    local max=0\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[j] < arr[i] && inc[i] < inc[j] + arr[i])); then\n                inc[i]=inc[j]+arr[i]\n            fi\n        done\n    done\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[j] < arr[i] && dec[i] < dec[j] + arr[i])); then\n                dec[i]=dec[j]+arr[i]\n            fi\n        done\n    done\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((max < inc[i] + dec[i] - arr[i])); then\n            max=inc[i]+dec[i]-arr[i]\n        fi\n    done\n    echo $max",
    "  local -a arr=($1)\n  local -a left=(0)\n  local -a right=(0)\n  local max=0\n  for ((i=1; i<${#arr[@]}; i++)); do\n    left[i]=$(( ${arr[i]} > ${arr[i-1]} + ${left[i-1]} ? ${arr[i]} : ${arr[i-1]} + ${left[i-1]} ))\n  done\n  for ((i=${#arr[@]}-2; i>=0; i--)); do\n    right[i]=$(( ${arr[i]} > ${arr[i+1]} + ${right[i+1]} ? ${arr[i]} : ${arr[i+1]} + ${right[i+1]} ))\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=$(( ${left[i]} + ${right[i]} - ${arr[i]} > $max ? ${left[i]} + ${right[i]} - ${arr[i]} : $max ))\n  done\n  echo $max",
    "  local -a array=($1)\n  local -a inc_sum=(0)\n  local -a dec_sum=(0)\n  local max_sum=0\n\n  for ((i = 1; i < ${#array[@]}; i++)); do\n    for ((j = 0; j < i; j++)); do\n      if ((array[i] > array[j]) && (inc_sum[i] < inc_sum[j] + array[i])); then\n        inc_sum[i]=$((inc_sum[j] + array[i]))\n      fi\n    done\n  done\n\n  for ((i = ${#array[@]} - 2; i >= 0; i--)); do\n    for ((j = ${#array[@]} - 1; j > i; j--)); do\n      if ((array[i] > array[j]) && (dec_sum[i] < dec_sum[j] + array[i])); then\n        dec_sum[i]=$((dec_sum[j] + array[i]))\n      fi\n    done\n  done\n\n  for ((i = 0; i < ${#array[@]}; i++)); do\n    if ((max_sum < inc_sum[i] + dec_sum[i] - array[i])); then\n      max_sum=$((inc_sum[i] + dec_sum[i] - array[i]))\n    fi\n  done\n\n  echo $max_sum",
    "  local -a a=($1)\n  local -a l=(0)\n  local -a r=(0)\n  local -i i=0\n  local -i j=0\n  local -i n=${#a[@]}\n  local -i max=0\n\n  for ((i=1; i<n; i++)); do\n    for ((j=0; j<i; j++)); do\n      if ((a[i] > a[j])); then\n        l[i]=$((l[i] > l[j] + a[i] ? l[i] : l[j] + a[i]))\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    for ((j=n-1; j>i; j--)); do\n      if ((a[i] > a[j])); then\n        r[i]=$((r[i] > r[j] + a[i] ? r[i] : r[j] + a[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    max=$((max > l[i] + r[i] - a[i] ? max : l[i] + r[i] - a[i]))\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max_inc=0\n    local -i max_dec=0\n    local -i max_sum=0\n\n    while (( i < ${#arr[@]} )); do\n        if (( arr[i] > arr[i-1] )); then\n            inc[i]=$(( inc[i-1] + arr[i] ))\n        else\n            inc[i]=${arr[i]}\n        fi\n        (( i++ ))\n    done\n\n    while (( j >= 0 )); do\n        if (( arr[j] > arr[j+1] )); then\n            dec[j]=$(( dec[j+1] + arr[j] ))\n        else\n            dec[j]=${arr[j]}\n        fi\n        (( j-- ))\n    done\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if (( inc[i] > max_inc )); then\n            max_inc=${inc[i]}\n        fi\n        if (( dec[i] > max_dec )); then\n            max_dec=${dec[i]}\n        fi\n    done\n\n    max_sum=$(( max_inc + max_dec - arr[0] - arr[-1] ))\n    echo $max_sum",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max=${arr[0]}\n    local -i sum=0\n\n    while (( i < ${#arr[@]} )); do\n        if (( arr[i] > arr[i-1] )); then\n            inc[i]=$(( inc[i-1] + arr[i] ))\n        else\n            inc[i]=${arr[i]}\n        fi\n        (( i++ ))\n    done\n\n    while (( j >= 0 )); do\n        if (( arr[j] > arr[j+1] )); then\n            dec[j]=$(( dec[j+1] + arr[j] ))\n        else\n            dec[j]=${arr[j]}\n        fi\n        (( j-- ))\n    done\n\n    for (( i=0; i < ${#arr[@]}; i++ )); do\n        sum=$(( inc[i] + dec[i] - arr[i] ))\n        if (( sum > max )); then\n            max=$sum\n        fi\n    done\n\n    echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max_inc=0\n    local -i max_dec=0\n    local -i max_sum=0\n    local -i sum=0\n\n    while [[ $i -lt ${#arr[@]} ]]; do\n        if [[ ${arr[$i]} -gt ${inc[-1]} ]]; then\n            inc+=(${arr[$i]})\n        else\n            inc[-1]=${arr[$i]}\n        fi\n        ((i++))\n    done\n\n    while [[ $j -ge 0 ]]; do\n        if [[ ${arr[$j]} -gt ${dec[-1]} ]]; then\n            dec+=(${arr[$j]})\n        else\n            dec[-1]=${arr[$j]}\n        fi\n        ((j--))\n    done\n\n    for ((i=0; i<${#inc[@]}; i++)); do\n        for ((j=0; j<${#dec[@]}; j++)); do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            sum=${inc[$i]}+${dec[$j]}\n            if [[ $sum -gt $max_sum ]]; then\n                max_sum=$sum\n            fi\n        done\n    done\n\n    echo $max_sum",
    "  local -a arr=(\"$@\")\n  local -a inc=()\n  local -a dec=()\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n\n  inc[0]=${arr[0]}\n  dec[n-1]=${arr[n-1]}\n\n  for ((i=1; i<n; i++)); do\n    inc[i]=${arr[i]}\n    for ((j=0; j<i; j++)); do\n      if ((arr[j] < arr[i] && inc[j] + arr[i] > inc[i])); then\n        inc[i]=$((inc[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    dec[i]=${arr[i]}\n    for ((j=n-1; j>i; j--)); do\n      if ((arr[j] < arr[i] && dec[j] + arr[i] > dec[i])); then\n        dec[i]=$((dec[j] + arr[i]))\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    if ((inc[i] + dec[i] - arr[i] > max)); then\n      max=$((inc[i] + dec[i] - arr[i]))\n    fi\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max=${arr[0]}\n\n    while ((i < ${#arr[@]})); do\n        inc[i]=$((inc[i-1] > arr[i] ? inc[i-1] : arr[i]))\n        dec[j]=$((dec[j+1] > arr[j] ? dec[j+1] : arr[j]))\n        ((i++))\n        ((j--))\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((max < inc[i] + dec[i])) && max=$((inc[i] + dec[i]))\n    done\n\n    echo $max",
    "    local -a arr=($1)\n    local -a inc=(${arr[0]})\n    local -a dec=(${arr[0]})\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i sum=0\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if ((arr[i] > arr[j])); then\n                inc[i]=$((inc[i] > inc[j] + arr[i] ? inc[i] : inc[j] + arr[i]))\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if ((arr[i] > arr[j])); then\n                dec[i]=$((dec[i] > dec[j] + arr[i] ? dec[i] : dec[j] + arr[i]))\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((inc[i] + dec[i] - arr[i]))\n        max=$((max > sum ? max : sum))\n    done\n\n    echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local max_sum=${arr[0]}\n  local max_inc=${arr[0]}\n  local max_dec=${arr[0]}\n  local sum=0\n  local i=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    inc[i]=$((${arr[i]} + ${inc[i-1]}))\n    dec[i]=$((${arr[i]} + ${dec[i-1]}))\n    if [[ ${inc[i]} -gt ${max_inc} ]]; then\n      max_inc=${inc[i]}\n    fi\n    if [[ ${dec[i]} -gt ${max_dec} ]]; then\n      max_dec=${dec[i]}\n    fi\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((${max_inc} - ${inc[i]} + ${dec[i]}))\n    if [[ ${sum} -gt ${max_sum} ]]; then\n      max_sum=${sum}\n    fi\n  done\n\n  echo ${max_sum}",
    "  local -a a=($1)\n  local -a l=(0)\n  local -a r=(0)\n  local i j\n  for ((i=1; i<${#a[@]}; i++)); do\n    l[i]=0\n    for ((j=0; j<i; j++)); do\n      if ((a[j]<a[i] && l[i]<l[j])); then\n        l[i]=${l[j]}\n      fi\n    done\n    ((l[i]+=a[i]))\n  done\n  for ((i=${#a[@]}-2; i>=0; i--)); do\n    r[i]=0\n    for ((j=${#a[@]}-1; j>i; j--)); do\n      if ((a[j]<a[i] && r[i]<r[j])); then\n        r[i]=${r[j]}\n      fi\n    done\n    ((r[i]+=a[i]))\n  done\n  local max=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((max<l[i]+r[i]-a[i])); then\n      max=${l[i]}+${r[i]}-${a[i]}\n    fi\n  done\n  echo $max",
    "  local -a arr=($1)\n  local -a inc=(${arr[0]})\n  local -a dec=(${arr[0]})\n  local -i i=1\n  local -i j=1\n  local -i n=${#arr[@]}\n  local -i max=0\n\n  while (( i < n )); do\n    if (( arr[i] > arr[i-1] )); then\n      inc[i]=$(( inc[i-1] + arr[i] ))\n    else\n      inc[i]=${arr[i]}\n    fi\n    (( i++ ))\n  done\n\n  while (( j < n )); do\n    if (( arr[j] < arr[j-1] )); then\n      dec[j]=$(( dec[j-1] + arr[j] ))\n    else\n      dec[j]=${arr[j]}\n    fi\n    (( j++ ))\n  done\n\n  for (( i=0; i < n; i++ )); do\n    if (( inc[i] + dec[i] > max )); then\n      max=$(( inc[i] + dec[i] ))\n    fi\n  done\n\n  echo $max",
    "  local -a arr=(\"$@\")\n  local -a inc_sum\n  local -a dec_sum\n  local -i max_sum=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#arr[@]}\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_k=0\n\n  for ((i=0; i<n; i++)); do\n    inc_sum[i]=${arr[i]}\n    dec_sum[i]=${arr[i]}\n  done\n\n  for ((i=1; i<n; i++)); do\n    for ((j=0; j<i; j++)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        if [[ ${inc_sum[j]} -gt ${inc_sum[i]} ]]; then\n          inc_sum[i]=${inc_sum[j]}\n        fi\n      fi\n    done\n    inc_sum[i]=$((inc_sum[i] + arr[i]))\n  done\n\n  for ((i=n-2; i>=0; i--)); do\n    for ((j=n-1; j>i; j--)); do\n      if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n        if [[ ${dec_sum[j]} -gt ${dec_sum[i]} ]]; then\n          dec_sum[i]=${dec_sum[j]}\n        fi\n      fi\n    done\n    dec_sum[i]=$((dec_sum[i] + arr[i]))\n  done\n\n  for ((i=0; i<n; i++)); do\n    if [[ ${inc_sum[i]} -gt ${dec_sum[i]} ]]; then\n      if [[ ${inc_sum[i]} -gt $max_sum ]]; then\n        max_sum=${inc_sum[i]}\n        max_i=$i\n      fi\n    else\n      if [[ ${dec_sum[i]} -gt $max_sum ]]; then\n        max_sum=${",
    "    local -a arr=($1)\n    local -a incr=(0)\n    local -a decr=(0)\n    local -i max=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        incr[$i]=${arr[$i]}\n        for ((j=0; j<i; j++)); do\n            if (( arr[j] < arr[i] )); then\n                (( incr[i] = incr[j] + arr[i] ))\n            fi\n        done\n    done\n\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n        decr[$i]=${arr[i]}\n        for ((j=${#arr[@]}-1; j>i; j--)); do\n            if (( arr[j] < arr[i] )); then\n                (( decr[i] = decr[j] + arr[i] ))\n            fi\n        done\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        (( max = incr[i] + decr[i] - arr[i] > max ? incr[i] + decr[i] - arr[i] : max ))\n    done\n\n    echo $max",
    "  local -a array=($1)\n  local -a inc=(0)\n  local -a dec=(0)\n  local max=0\n  local i=0\n\n  for ((i=1; i<${#array[@]}; i++)); do\n    inc[i]=0\n    dec[i]=0\n    for ((j=0; j<i; j++)); do\n      if ((array[j] < array[i])); then\n        inc[i]=$((inc[i] > inc[j] ? inc[i] : inc[j]))\n      fi\n      if ((array[j] > array[i])); then\n        dec[i]=$((dec[i] > dec[j] ? dec[i] : dec[j]))\n      fi\n    done\n    inc[i]=$((inc[i] + array[i]))\n    dec[i]=$((dec[i] + array[i]))\n    max=$((max > inc[i] ? max : inc[i]))\n    max=$((max > dec[i] ? max : dec[i]))\n  done\n\n  echo $max",
    "    local -a arr=($1)\n    local -a inc_sum=(${arr[0]})\n    local -a dec_sum=(${arr[-1]})\n    local -i i=1\n    local -i j=${#arr[@]}-2\n    local -i max_sum=${arr[0]}\n\n    while [ $i -lt ${#arr[@]} ]; do\n        inc_sum[$i]=$(( ${arr[$i]} > ${arr[$i-1]} + ${inc_sum[$i-1]} ? ${arr[$i]} : ${arr[$i-1]} + ${inc_sum[$i-1]} ))\n        dec_sum[$j]=$(( ${arr[$j]} > ${arr[$j+1]} + ${dec_sum[$j+1]} ? ${arr[$j]} : ${arr[$j+1]} + ${dec_sum[$j+1]} ))\n        i=$(( i + 1 ))\n        j=$(( j - 1 ))\n    done\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        max_sum=$(( ${inc_sum[$i]} + ${dec_sum[$i]} > $max_sum ? ${inc_sum[$i]} + ${dec_sum[$i]} : $max_sum ))\n    done\n\n    echo $max_sum"
  ]
}
{
  "name": "mbpp_600_is_Even",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to check whether the given number is even or not.\n#\n# $1 is an integer\nis_Even() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_600_is_Even.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_Even \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"2\") = \"true\" ]]\n    [[ $(candidate \"3\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $1 -eq 0 ]; then\n        echo \"True\"\n    elif [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        is_Even $(( $1 - 2 ))\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"$1 is even\"\n    else\n        echo \"$1 is odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"True\"\n    elif [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        is_Even $(($1 - 2))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is odd\"\n    elif [ $1 -eq 2 ]; then\n        echo \"2 is even\"\n    elif [ $1 -eq 3 ]; then\n        echo \"3 is odd\"\n    elif [ $1 -eq 4 ]; then\n        echo \"4 is even\"\n    elif [ $1 -eq 5 ]; then\n        echo \"5 is odd\"\n    elif [ $1 -eq 6 ]; then\n        echo \"6 is even\"\n    elif [ $1 -eq 7 ]; then\n        echo \"7 is odd\"\n    elif [ $1 -eq 8 ]; then\n        echo \"8 is even\"\n    elif [ $1 -eq 9 ]; then\n        echo \"9 is odd\"\n    elif [ $1 -eq 10 ]; then\n        echo \"10 is even\"\n    else\n        echo \"I don't know\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"$1 is an even number\"\n    else\n        echo \"$1 is an odd number\"\n    fi",
    "    if [ $(($1 % 2)) -eq 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"True\"\n    elif [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        is_Even $(($1 - 2))\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"True\"\n    elif [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        is_Even $(( $1 - 2 ))\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"$1 is even\"\n    else\n        echo \"$1 is odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"True\"\n    elif [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        is_Even `expr $1 - 2`\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"True\"\n    elif [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        is_Even $(( $1 - 2 ))\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"$1 is even\"\n    else\n        echo \"$1 is odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]\n    then\n        echo \"True\"\n    elif [ $1 -eq 1 ]\n    then\n        echo \"False\"\n    else\n        is_Even `expr $1 - 2`\n    fi"
  ]
}
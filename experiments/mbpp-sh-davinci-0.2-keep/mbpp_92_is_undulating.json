{
  "name": "mbpp_92_is_undulating",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given number is undulating or not.\n#\n# $1 is an integer\nis_undulating() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_undulating \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1212121\") = \"true\" ]]\n    [[ $(candidate \"1991\") = \"false\" ]]\n    [[ $(candidate \"121\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "\tlocal number=$1\n\tlocal last_digit=${number: -1}\n\tlocal second_last_digit=${number: -2:1}\n\tlocal third_last_digit=${number: -3:1}\n\tlocal fourth_last_digit=${number: -4:1}\n\tlocal fifth_last_digit=${number: -5:1}\n\tlocal sixth_last_digit=${number: -6:1}\n\tlocal seventh_last_digit=${number: -7:1}\n\tlocal eighth_last_digit=${number: -8:1}\n\tlocal ninth_last_digit=${number: -9:1}\n\tlocal tenth_last_digit=${number: -10:1}\n\tlocal eleventh_last_digit=${number: -11:1}\n\tlocal twelfth_last_digit=${number: -12:1}\n\tlocal thirteenth_last_digit=${number: -13:1}\n\tlocal fourteenth_last_digit=${number: -14:1}\n\tlocal fifteenth_last_digit=${number: -15:1}\n\tlocal sixteenth_last_digit=${number: -16:1}\n\tlocal seventeenth_last_digit=${number: -17:1}\n\tlocal eighteenth_last_digit=${number: -18:1}\n\tlocal nineteenth_last_digit=${number: -19:1}\n\tlocal twentieth_last_digit=${number: -20:1}\n\tlocal twenty_first_last_digit=${number: -21:1}\n\tlocal twenty_second_last_digit=${number: -22:1}\n\tlocal twenty_third_last_digit=${number: -23:1}\n\tlocal twenty_fourth_last_digit=${number: -24:1}\n\tlocal twenty_fifth_last_digit=${number: -25:1}\n\tlocal twenty_sixth_last_digit=${number: -26:1}\n\tlocal twenty_seventh_last_digit=${number: -27:1}\n\tlocal twenty_eighth_last_digit=${number: -28:1}\n\tlocal twenty_ninth",
    "  local num=\"$1\"\n  local num_len=\"${#num}\"\n  local i=0\n  local is_undulating=true\n\n  while [ $i -lt $((num_len - 1)) ]; do\n    local digit1=\"${num:$i:1}\"\n    local digit2=\"${num:$((i + 1)):1}\"\n\n    if [ $digit1 -eq $digit2 ]; then\n      is_undulating=false\n      break\n    fi\n\n    i=$((i + 1))\n  done\n\n  echo \"$is_undulating\"",
    "  local number=$1\n  local last_digit=${number: -1}\n  local first_digit=${number:0:1}\n  local second_digit=${number:1:1}\n  local third_digit=${number:2:1}\n  local fourth_digit=${number:3:1}\n  local fifth_digit=${number:4:1}\n  local sixth_digit=${number:5:1}\n  local seventh_digit=${number:6:1}\n  local eighth_digit=${number:7:1}\n  local ninth_digit=${number:8:1}\n  local tenth_digit=${number:9:1}\n  local eleventh_digit=${number:10:1}\n  local twelfth_digit=${number:11:1}\n  local thirteenth_digit=${number:12:1}\n  local fourteenth_digit=${number:13:1}\n  local fifteenth_digit=${number:14:1}\n  local sixteenth_digit=${number:15:1}\n  local seventeenth_digit=${number:16:1}\n  local eighteenth_digit=${number:17:1}\n  local nineteenth_digit=${number:18:1}\n  local twentieth_digit=${number:19:1}\n  local twentyfirst_digit=${number:20:1}\n  local twentysecond_digit=${number:21:1}\n  local twentythird_digit=${number:22:1}\n  local twentyfourth_digit=${number:23:1}\n  local twentyfifth_digit=${number:24:1}\n  local twentysixth_digit=${number:25:1}\n  local twentyseventh_digit=${number:26:1}\n  local twentyeighth_digit=${number:27:1}\n  local twentyninth_digit=${number:28:1}\n  local thirtieth_digit=${number:29:1}\n  local thirtyfirst_digit=${number:30:1}\n  local thirtysecond_digit=${number:31:1}\n  local thirtythird_digit=${number:32:1}\n  local thirty",
    "    local num=$1\n    local last_digit\n    local curr_digit\n    local next_digit\n    local is_undulating=1\n\n    last_digit=$((num % 10))\n    num=$((num / 10))\n    while [ $num -gt 0 ]; do\n        curr_digit=$((num % 10))\n        num=$((num / 10))\n        next_digit=$((num % 10))\n        if [ $((last_digit - curr_digit)) -ne $((curr_digit - next_digit)) ]; then\n            is_undulating=0\n            break\n        fi\n        last_digit=$curr_digit\n    done\n\n    echo $is_undulating",
    "    local number=$1\n    local digit_count=$(echo $number | wc -c)\n    local last_digit=$(echo $number | cut -c $digit_count)\n    local second_last_digit=$(echo $number | cut -c $(($digit_count - 1)))\n    local third_last_digit=$(echo $number | cut -c $(($digit_count - 2)))\n\n    if [ $last_digit -eq $second_last_digit ]; then\n        return 1\n    fi\n\n    if [ $second_last_digit -eq $third_last_digit ]; then\n        return 1\n    fi\n\n    if [ $last_digit -gt $second_last_digit ]; then\n        if [ $second_last_digit -gt $third_last_digit ]; then\n            return 0\n        fi\n    fi\n\n    if [ $last_digit -lt $second_last_digit ]; then\n        if [ $second_last_digit -lt $third_last_digit ]; then\n            return 0\n        fi\n    fi\n\n    return 1",
    "    local number=$1\n    local last_digit=${number: -1}\n    local second_last_digit=${number: -2:1}\n    local third_last_digit=${number: -3:1}\n    local fourth_last_digit=${number: -4:1}\n    local fifth_last_digit=${number: -5:1}\n    local sixth_last_digit=${number: -6:1}\n    local seventh_last_digit=${number: -7:1}\n    local eighth_last_digit=${number: -8:1}\n    local ninth_last_digit=${number: -9:1}\n    local tenth_last_digit=${number: -10:1}\n\n    if [ $last_digit -eq $second_last_digit ]; then\n        return 1\n    elif [ $second_last_digit -eq $third_last_digit ]; then\n        return 1\n    elif [ $third_last_digit -eq $fourth_last_digit ]; then\n        return 1\n    elif [ $fourth_last_digit -eq $fifth_last_digit ]; then\n        return 1\n    elif [ $fifth_last_digit -eq $sixth_last_digit ]; then\n        return 1\n    elif [ $sixth_last_digit -eq $seventh_last_digit ]; then\n        return 1\n    elif [ $seventh_last_digit -eq $eighth_last_digit ]; then\n        return 1\n    elif [ $eighth_last_digit -eq $ninth_last_digit ]; then\n        return 1\n    elif [ $ninth_last_digit -eq $tenth_last_digit ]; then\n        return 1\n    else\n        return 0\n    fi",
    "  local number=\"$1\"\n  local last_digit\n  local second_last_digit\n  local is_undulating=1\n\n  while [ \"$number\" -gt 0 ]; do\n    last_digit=\"$(($number % 10))\"\n    second_last_digit=\"$(($number / 10 % 10))\"\n    if [ \"$last_digit\" -eq \"$second_last_digit\" ]; then\n      is_undulating=0\n      break\n    fi\n    number=\"$(($number / 10))\"\n  done\n\n  echo \"$is_undulating\"",
    "  local number=$1\n  local last_digit=${number: -1}\n  local second_last_digit=${number: -2:1}\n  local third_last_digit=${number: -3:1}\n  local fourth_last_digit=${number: -4:1}\n  local fifth_last_digit=${number: -5:1}\n  local sixth_last_digit=${number: -6:1}\n  local seventh_last_digit=${number: -7:1}\n  local eighth_last_digit=${number: -8:1}\n  local ninth_last_digit=${number: -9:1}\n  local tenth_last_digit=${number: -10:1}\n\n  if [[ $number =~ ^[0-9]+$ ]]; then\n    if [[ $number -ge 0 && $number -le 9 ]]; then\n      echo \"true\"\n    elif [[ $number -ge 10 && $number -le 99 ]]; then\n      if [[ $last_digit -eq $second_last_digit ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n    elif [[ $number -ge 100 && $number -le 999 ]]; then\n      if [[ $last_digit -eq $second_last_digit || $second_last_digit -eq $third_last_digit ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n    elif [[ $number -ge 1000 && $number -le 9999 ]]; then\n      if [[ $last_digit -eq $second_last_digit || $second_last_digit -eq $third_last_digit || $third_last_digit -eq $fourth_last_digit ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n    elif [[ $number -ge 10000 && $number -le 99999 ]]; then\n      if [[ $last_digit -eq $second_last_digit || $second_last_digit -eq $third_last_digit || $third_last_digit -eq $fourth_last_digit || $fourth_last_digit -eq $fifth_last_digit ]]; then",
    "  local number=$1\n  local last_digit\n  local current_digit\n  local is_undulating=1\n\n  last_digit=$(($number % 10))\n  number=$(($number / 10))\n\n  while [ $number -ne 0 ]; do\n    current_digit=$(($number % 10))\n    if [ $current_digit -eq $last_digit ]; then\n      is_undulating=0\n      break\n    fi\n    last_digit=$current_digit\n    number=$(($number / 10))\n  done\n\n  echo $is_undulating",
    "  local number=\"$1\"\n  local last_digit\n  local current_digit\n  local last_digit_even=0\n  local current_digit_even=0\n\n  while [[ \"$number\" -gt 0 ]]; do\n    last_digit=\"$current_digit\"\n    current_digit=\"$((number % 10))\"\n    last_digit_even=\"$current_digit_even\"\n    current_digit_even=\"$((current_digit % 2))\"\n\n    if [[ \"$last_digit\" -ne 0 ]] && \\\n       [[ \"$last_digit\" -ne \"$current_digit\" ]] && \\\n       [[ \"$last_digit_even\" -eq \"$current_digit_even\" ]]; then\n      return 0\n    fi\n\n    number=\"$((number / 10))\"\n  done\n\n  return 1",
    "  local num=$1\n  local prev_digit=0\n  local curr_digit=0\n  local next_digit=0\n  local is_undulating=1\n  while [ $num -gt 0 ]; do\n    prev_digit=$curr_digit\n    curr_digit=$next_digit\n    next_digit=$((num % 10))\n    if [ $prev_digit -gt 0 ]; then\n      if [ $((prev_digit % 2)) -eq 0 ]; then\n        if [ $curr_digit -ne $((prev_digit - 1)) ]; then\n          is_undulating=0\n          break\n        fi\n      else\n        if [ $curr_digit -ne $((prev_digit + 1)) ]; then\n          is_undulating=0\n          break\n        fi\n      fi\n    fi\n    num=$((num / 10))\n  done\n  echo $is_undulating",
    "  local num=$1\n  local last_digit=0\n  local current_digit=0\n  local is_undulating=0\n  local is_increasing=0\n  local is_decreasing=0\n  local is_first_digit=1\n\n  while [ $num -gt 0 ]; do\n    current_digit=$((num % 10))\n    if [ $is_first_digit -eq 1 ]; then\n      is_first_digit=0\n    else\n      if [ $is_increasing -eq 1 ]; then\n        if [ $current_digit -gt $last_digit ]; then\n          is_increasing=0\n          is_decreasing=1\n        else\n          return 1\n        fi\n      elif [ $is_decreasing -eq 1 ]; then\n        if [ $current_digit -lt $last_digit ]; then\n          is_decreasing=0\n          is_increasing=1\n        else\n          return 1\n        fi\n      else\n        if [ $current_digit -gt $last_digit ]; then\n          is_increasing=1\n        elif [ $current_digit -lt $last_digit ]; then\n          is_decreasing=1\n        else\n          return 1\n        fi\n      fi\n    fi\n    last_digit=$current_digit\n    num=$((num / 10))\n  done\n\n  return 0",
    "    local number=$1\n    local last_digit=0\n    local current_digit=0\n    local last_digit_even=0\n    local current_digit_even=0\n    local is_undulating=1\n\n    while [ $number -gt 0 ]; do\n        current_digit=$(( number % 10 ))\n        current_digit_even=$(( current_digit % 2 ))\n        if [ $last_digit -ne 0 ]; then\n            if [ $last_digit_even -eq $current_digit_even ]; then\n                is_undulating=0\n                break\n            fi\n        fi\n        last_digit=$current_digit\n        last_digit_even=$current_digit_even\n        number=$(( number / 10 ))\n    done\n\n    echo $is_undulating",
    "  local num=$1\n  local last_digit=0\n  local curr_digit=0\n  local next_digit=0\n  local is_undulating=1\n  local num_digits=0\n  local i=0\n  local j=0\n  local k=0\n  local digits=()\n\n  # convert the number to an array of digits\n  while [ $num -gt 0 ]; do\n    digits[$num_digits]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    num_digits=$(( num_digits + 1 ))\n  done\n\n  # check if the number is undulating\n  for (( i = 0; i < num_digits - 2; i++ )); do\n    j=$(( i + 1 ))\n    k=$(( i + 2 ))\n    last_digit=${digits[$i]}\n    curr_digit=${digits[$j]}\n    next_digit=${digits[$k]}\n    if [ $last_digit -gt $curr_digit ]; then\n      if [ $curr_digit -lt $next_digit ]; then\n        is_undulating=0\n        break\n      fi\n    elif [ $last_digit -lt $curr_digit ]; then\n      if [ $curr_digit -gt $next_digit ]; then\n        is_undulating=0\n        break\n      fi\n    else\n      is_undulating=0\n      break\n    fi\n  done\n\n  echo $is_undulating",
    "  local number=$1\n  local last_digit=${number: -1}\n  local second_last_digit=${number: -2:1}\n  local third_last_digit=${number: -3:1}\n  local fourth_last_digit=${number: -4:1}\n  local fifth_last_digit=${number: -5:1}\n  local sixth_last_digit=${number: -6:1}\n  local seventh_last_digit=${number: -7:1}\n  local eighth_last_digit=${number: -8:1}\n  local ninth_last_digit=${number: -9:1}\n  local tenth_last_digit=${number: -10:1}\n\n  if [[ $number -lt 1000000000 ]]; then\n    if [[ $number -lt 1000000 ]]; then\n      if [[ $number -lt 100000 ]]; then\n        if [[ $number -lt 10000 ]]; then\n          if [[ $number -lt 1000 ]]; then\n            if [[ $number -lt 100 ]]; then\n              if [[ $number -lt 10 ]]; then\n                return 1\n              else\n                if [[ $last_digit -eq $second_last_digit ]]; then\n                  return 1\n                else\n                  return 0\n                fi\n              fi\n            else\n              if [[ $last_digit -eq $second_last_digit ]]; then\n                if [[ $second_last_digit -eq $third_last_digit ]]; then\n                  return 1\n                else\n                  return 0\n                fi\n              else\n                if [[ $second_last_digit -eq $third_last_digit ]]; then\n                  return 0\n                else\n                  return 1\n                fi\n              fi\n            fi\n          else\n            if [[ $last_digit -eq $second_last_digit ]]; then\n              if [[ $second_last_digit -eq $third_last_digit ]]; then\n                if [[ $third_last_digit -eq $fourth_last_digit ]]; then\n                  return 1\n                else\n                  return 0\n                fi\n              else\n                if [[ $third_last_digit -eq $fourth_last_digit ]]; then\n                  return 0\n                else",
    "  local number=$1\n  local last_digit=${number: -1}\n  local first_digit=${number:0:1}\n  local undulating=1\n\n  if [[ $number -lt 10 ]]; then\n    echo \"Number is too short to be undulating\"\n    return 1\n  fi\n\n  if [[ $first_digit -eq $last_digit ]]; then\n    echo \"Number is not undulating\"\n    return 1\n  fi\n\n  while [[ $number -gt 0 ]]; do\n    local current_digit=${number:0:1}\n    local next_digit=${number:1:1}\n\n    if [[ $current_digit -eq $next_digit ]]; then\n      echo \"Number is not undulating\"\n      return 1\n    fi\n\n    if [[ $undulating -eq 1 ]]; then\n      if [[ $current_digit -lt $next_digit ]]; then\n        undulating=0\n      fi\n    else\n      if [[ $current_digit -gt $next_digit ]]; then\n        undulating=1\n      fi\n    fi\n\n    number=${number:1}\n  done\n\n  echo \"Number is undulating\"\n  return 0",
    "  local num=$1\n  local last_digit=${num: -1}\n  local next_digit=${num: -2:1}\n  local next_next_digit=${num: -3:1}\n  local is_undulating=0\n  local is_increasing=0\n  local is_decreasing=0\n\n  if [[ $next_digit -gt $last_digit ]]; then\n    is_increasing=1\n  elif [[ $next_digit -lt $last_digit ]]; then\n    is_decreasing=1\n  fi\n\n  if [[ $next_next_digit -gt $next_digit ]]; then\n    if [[ $is_decreasing -eq 1 ]]; then\n      is_undulating=1\n    fi\n  elif [[ $next_next_digit -lt $next_digit ]]; then\n    if [[ $is_increasing -eq 1 ]]; then\n      is_undulating=1\n    fi\n  fi\n\n  if [[ $is_undulating -eq 1 ]]; then\n    echo \"$num is undulating\"\n  else\n    echo \"$num is not undulating\"\n  fi",
    "    local num=$1\n    local prev_digit\n    local curr_digit\n    local is_undulating=1\n    local is_increasing=1\n    local is_decreasing=1\n\n    prev_digit=$(($num % 10))\n    num=$(($num / 10))\n\n    while [ $num -ne 0 ]; do\n        curr_digit=$(($num % 10))\n        if [ $curr_digit -gt $prev_digit ]; then\n            is_decreasing=0\n        elif [ $curr_digit -lt $prev_digit ]; then\n            is_increasing=0\n        fi\n        prev_digit=$curr_digit\n        num=$(($num / 10))\n    done\n\n    if [ $is_increasing -eq 0 -a $is_decreasing -eq 0 ]; then\n        is_undulating=0\n    fi\n\n    echo $is_undulating",
    "  local num=$1\n  local last_digit=${num: -1}\n  local second_last_digit=${num: -2:1}\n  local third_last_digit=${num: -3:1}\n\n  if [[ $last_digit -eq $second_last_digit ]] || [[ $second_last_digit -eq $third_last_digit ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi",
    "    local number=$1\n    local last_digit=0\n    local current_digit=0\n    local next_digit=0\n    local is_undulating=1\n\n    while [ $number -gt 0 ]; do\n        last_digit=$current_digit\n        current_digit=$next_digit\n        next_digit=$(( number % 10 ))\n        number=$(( number / 10 ))\n\n        if [ $last_digit -ne 0 ]; then\n            if [ $(( current_digit - last_digit )) -ne $(( next_digit - current_digit )) ]; then\n                is_undulating=0\n                break\n            fi\n        fi\n    done\n\n    echo $is_undulating"
  ]
}
{
  "name": "mbpp_767_get_pairs_count",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n#\n# $1 is a space-separated list\n# $2 is an integer\nget_pairs_count() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    get_pairs_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 1 1\" \"2\") = \"6\" ]]\n    [[ $(candidate \"1 5 7 -1 5\" \"6\") = \"3\" ]]\n    [[ $(candidate \"1 -2 3\" \"1\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 3\" \"-3\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for i in ${arr[@]}; do\n        for j in ${arr[@]}; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i+j)) -eq $sum ]; then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i\n    local j\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local pairs_count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                pairs_count=$((pairs_count + 1))\n            fi\n        done\n    done\n    echo $pairs_count",
    "    list=$1\n    sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(len([(x,y) for x in $1 for y in $1 if x+y == $2]))\"",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    echo \"Hello world!\"",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for i in ${list[@]}; do\n        for j in ${list[@]}; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(len([(x,y) for x in $1.split() for y in $1.split() if int(x)+int(y)==$2]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local numbers=$1\n    local sum=$2\n    local count=0\n    for i in $numbers; do\n        for j in $numbers; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(sum([1 for x in range(len($1)) for y in range(x+1, len($1)) if int($1[x]) + int($1[y]) == $2]))\"",
    "    local list=\"$1\"\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if [[ ${arr[i]} -eq $((sum - ${arr[j]})) ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local sum=$2\n    local list=($1)\n    local count=0\n    for (( i=0; i<${#list[@]}; i++ )); do\n        for (( j=i+1; j<${#list[@]}; j++ )); do\n            if [[ ${list[$i]} -eq $((sum - ${list[$j]})) ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=\"$1\"\n  local sum=\"$2\"\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i + j)) -eq $sum ]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $((count / 2))",
    "    local numbers=$1\n    local sum=$2\n    local count=0\n    for i in $numbers; do\n        for j in $numbers; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i + j)) -eq $sum ]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(len([(x, y) for x in $1 for y in $1 if x + y == $2]))\"",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i+j)) -eq $sum ]; then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $i -eq $j ]; then\n        continue\n      fi\n      if [ $((i+j)) -eq $sum ]; then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local pairs_count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                ((pairs_count++))\n            fi\n        done\n    done\n    echo $pairs_count",
    "    local list=$1\n    local sum=$2\n    local pairs_count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                pairs_count=$((pairs_count + 1))\n            fi\n        done\n    done\n    echo $pairs_count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $(($i + $j)) -eq $sum ]; then\n                count=$(($count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ $((i+j)) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local sum=$2\n    local list=($1)\n    local count=0\n    for (( i=0; i<${#list[@]}; i++ )); do\n        for (( j=i+1; j<${#list[@]}; j++ )); do\n            if [[ $(( ${list[$i]} + ${list[$j]} )) -eq $sum ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(sum(1 for i in range(len($1)) for j in range(i+1, len($1)) if $1[i] + $1[j] == $2))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i+j)) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    python -c \"print(sum(1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum))\"",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ \"$((i + j))\" -eq \"$sum\" ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo \"$count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(sum(1 for i in range(len($1)) for j in range(i+1, len($1)) if int($1[i]) + int($1[j]) == $2))\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    echo \"Hello world!\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(sum(1 for i in range(len($1)) for j in range(i+1, len($1)) if $1[i] + $1[j] == $2))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    local i=0\n    local j=0\n    local list_len=${#list[@]}\n\n    for ((i=0; i<list_len; i++)); do\n        for ((j=i+1; j<list_len; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]} -eq $((sum - ${arr[j]})) ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i\n    local j\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    python -c \"print(sum(1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum))\"",
    "    python3 -c \"\nimport sys\n\ndef get_pairs_count(lst, s):\n    count = 0\n    for i in range(len(lst)):\n        for j in range(i+1, len(lst)):\n            if lst[i] + lst[j] == s:\n                count += 1\n    return count\n\nprint(get_pairs_count(list(map(int, sys.argv[1].split())), int(sys.argv[2])))\" \"$1\" \"$2\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list\n    do\n        for j in $list\n        do\n            if [ $((i+j)) -eq $sum ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    list=$1\n    sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    local numbers=$1\n    local sum=$2\n    local count=0\n    for i in $numbers; do\n        for j in $numbers; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if [[ $(( arr[i] + arr[j] )) -eq $sum ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    local i=0\n    local j=0\n    local list_len=${#list[@]}\n    for ((i=0; i<list_len; i++)); do\n        for ((j=i+1; j<list_len; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local list_len=0\n    local curr_sum=0\n\n    list_len=$(echo \"$list\" | wc -w)\n\n    for ((i=1; i<=$list_len; i++)); do\n        for ((j=$i+1; j<=$list_len; j++)); do\n            curr_sum=$(echo \"$list\" | cut -d' ' -f$i)\n            curr_sum=$(($curr_sum + $(echo \"$list\" | cut -d' ' -f$j)))\n            if [ $curr_sum -eq $sum ]; then\n                count=$(($count + 1))\n            fi\n        done\n    done\n\n    echo $count",
    "    local -a arr=(\"$@\")\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ $((arr[i] + arr[j])) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    list=$1\n    sum=$2\n    count=0\n    for i in $list\n    do\n        for j in $list\n        do\n            if [ $((i+j)) -eq $sum ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if ((list[i]+list[j]==sum)); then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print($1.count($2))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local list_len=0\n    local list_arr=()\n    local list_arr_len=0\n    local curr_num=0\n    local curr_num_2=0\n\n    list_len=${#list}\n    list_arr=(${list})\n    list_arr_len=${#list_arr[@]}\n\n    for ((i=0; i<list_arr_len; i++)); do\n        curr_num=${list_arr[$i]}\n        for ((j=i+1; j<list_arr_len; j++)); do\n            curr_num_2=${list_arr[$j]}\n            if ((curr_num + curr_num_2 == sum)); then\n                ((count++))\n            fi\n        done\n    done\n\n    echo \"$count\"",
    "    local sum=$2\n    local list=($1)\n    local count=0\n    for ((i=0; i < ${#list[@]}; i++)); do\n        for ((j=i+1; j < ${#list[@]}; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    # TODO: Write your code here\n    # Return 0 or 1 as result\n    return 1",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for i in ${list[@]}; do\n        for j in ${list[@]}; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(sum(1 for i in range(len($1)) for j in range(i+1, len($1)) if $1[i] + $1[j] == $2))\"",
    "    python -c \"from itertools import combinations; print(len(list(filter(lambda x: x[0] + x[1] == $2, combinations($1, 2)))))\"",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if [[ $((${arr[$i]} + ${arr[$j]})) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for i in ${arr[@]}; do\n        for j in ${arr[@]}; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum=$2\n    list=$1\n    count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ \"$((i + j))\" -eq \"$sum\" ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo \"$count\"",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    list=($1)\n    sum=$2\n    count=0\n    for i in \"${list[@]}\"; do\n        for j in \"${list[@]}\"; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(len([(x,y) for x in $1.split() for y in $1.split() if int(x)+int(y)==$2]))\"",
    "    python3 -c \"\nfrom itertools import combinations\n\ndef get_pairs_count(numbers, sum):\n    return len([pair for pair in combinations(numbers, 2) if sum(pair) == sum])\n\nprint(get_pairs_count([$1], $2))\n\"",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i+j)) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    echo \"Hello world!\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i+j)) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i\n    local j\n\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n\n    echo $count",
    "    python -c \"\nimport sys\n\ndef get_pairs_count(l, s):\n    count = 0\n    for i in range(len(l)):\n        for j in range(i+1, len(l)):\n            if l[i] + l[j] == s:\n                count += 1\n    return count\n\nl = [int(x) for x in sys.argv[1].split()]\ns = int(sys.argv[2])\nprint(get_pairs_count(l, s))\n\" \"$1\" \"$2\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python3 -c \"import sys; print(sum(1 for i in range(len(sys.argv[1].split())) for j in range(i+1, len(sys.argv[1].split())) if int(sys.argv[1].split()[i]) + int(sys.argv[1].split()[j]) == int(sys.argv[2])))\" \"$1\" \"$2\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    local i=0\n    local j=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local numbers=$1\n    local sum=$2\n    local count=0\n    for i in $numbers; do\n        for j in $numbers; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    list=$1\n    sum=$2\n    count=0\n    for i in $list\n    do\n        for j in $list\n        do\n            if [ $i -eq $j ]\n            then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]} + ${arr[j]} -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n\n    echo $count",
    "    local numbers=$1\n    local sum=$2\n    local count=0\n    for i in $numbers; do\n        for j in $numbers; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if ((arr[i]+arr[j]==sum)); then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(len([(x,y) for x in $1 for y in $1 if x+y == $2]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for i in ${list[@]}; do\n        for j in ${list[@]}; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    echo \"Hello world!\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -a array=($1)\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            if [[ $((array[i]+array[j])) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[ $((list[i]+list[j])) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    local i=0\n    local j=0\n    local list_len=${#list[@]}\n    for ((i=0; i<list_len; i++)); do\n        for ((j=i+1; j<list_len; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(sum(1 for i in range(len($1)) for j in range(i+1, len($1)) if $1[i] + $1[j] == $2))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i+j)) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python3 -c \"\nfrom itertools import combinations\n\ndef get_pairs_count(numbers, sum):\n    return len(list(filter(lambda x: x[0] + x[1] == sum, combinations(numbers, 2))))\n\nprint(get_pairs_count(list(map(int, '$1'.split())), $2))\n\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i+j)) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for (( i=0; i<${#list[@]}; i++ )); do\n        for (( j=i+1; j<${#list[@]}; j++ )); do\n            if [[ $(( ${list[$i]} + ${list[$j]} )) -eq $sum ]]; then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local list_length=0\n    local list_array=()\n\n    list_array=($list)\n    list_length=${#list_array[@]}\n\n    for ((i=0; i<list_length; i++)); do\n        for ((j=i+1; j<list_length; j++)); do\n            if [ $((list_array[i] + list_array[j])) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in ${list[@]}; do\n        for j in ${list[@]}; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ $((i + j)) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"\nfrom itertools import combinations\n\ndef get_pairs_count(numbers, sum):\n    return len([pair for pair in combinations(numbers, 2) if sum(pair) == sum])\n\nprint(get_pairs_count(list(map(int, '$1'.split())), $2))\n\"",
    "    list=$1\n    sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    python -c \"print(sum(1 for i in range(len($1)) for j in range(i+1, len($1)) if $1[i] + $1[j] == $2))\"",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ $((arr[i] + arr[j])) -eq $sum ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[ $((list[i]+list[j])) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"\nfrom itertools import combinations\n\ndef get_pairs_count(numbers, sum):\n    return len(list(filter(lambda x: x[0] + x[1] == sum, combinations(numbers, 2))))\n\nprint(get_pairs_count(list(map(int, '$1'.split(' '))), $2))\n\"",
    "    python -c \"print(len([(x,y) for x in $1 for y in $1 if x+y == $2]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python3 -c \"import sys; print(sum(1 for i in range(len(sys.argv[1])) for j in range(i+1, len(sys.argv[1])) if int(sys.argv[1][i]) + int(sys.argv[1][j]) == int(sys.argv[2])))\" \"$1\" \"$2\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(sum([1 for x in range(len($1)) for y in range(x+1, len($1)) if int($1[x]) + int($1[y]) == $2]))\"",
    "    list=$1\n    sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local pairs_count=0\n    local i=0\n    local j=0\n    local list_length=0\n    local list_array=()\n\n    list_array=($list)\n    list_length=${#list_array[@]}\n\n    for ((i=0; i<list_length; i++)); do\n        for ((j=i+1; j<list_length; j++)); do\n            if [[ $((list_array[i] + list_array[j])) -eq $sum ]]; then\n                pairs_count=$((pairs_count + 1))\n            fi\n        done\n    done\n\n    echo $pairs_count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    python3 -c \"\nimport sys\n\ndef get_pairs_count(numbers, sum):\n    count = 0\n    for i in range(len(numbers)):\n        for j in range(i+1, len(numbers)):\n            if numbers[i] + numbers[j] == sum:\n                count += 1\n    return count\n\nnumbers = [int(x) for x in sys.argv[1].split(' ')]\nsum = int(sys.argv[2])\nprint(get_pairs_count(numbers, sum))\n\" \"$1\" \"$2\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=\"$1\"\n  local sum=\"$2\"\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i + j)) -eq $sum ]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(len([(x,y) for x in $1.split() for y in $1.split() if int(x)+int(y)==$2]))\"",
    "  local -n arr=$1\n  local sum=$2\n  local count=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ $((arr[i]+arr[j])) -eq $sum ]]; then\n        ((count++))\n      fi\n    done\n  done\n  echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count"
  ]
}
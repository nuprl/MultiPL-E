{
  "name": "mbpp_767_get_pairs_count",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n#\n# $1 is a space-separated list\n# $2 is an integer\nget_pairs_count() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    get_pairs_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 1 1\" \"2\") = \"6\" ]]\n    [[ $(candidate \"1 5 7 -1 5\" \"6\") = \"3\" ]]\n    [[ $(candidate \"1 -2 3\" \"1\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 3\" \"-3\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local -n arr=$1\n    local sum=$2\n    local count=0\n    for i in ${arr[@]}; do\n        for j in ${arr[@]}; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i+j)) -eq $sum ]; then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i\n    local j\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local pairs_count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                pairs_count=$((pairs_count + 1))\n            fi\n        done\n    done\n    echo $pairs_count",
    "    list=$1\n    sum=$2\n    python -c \"print(sum([1 for i in range(len($list)) for j in range(i+1, len($list)) if $list[i] + $list[j] == $sum]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    python -c \"print(len([(x,y) for x in $1 for y in $1 if x+y == $2]))\"",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $((count/2))",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    echo \"Hello world!\"",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for i in ${list[@]}; do\n        for j in ${list[@]}; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    python -c \"print(len([(x,y) for x in $1.split() for y in $1.split() if int(x)+int(y)==$2]))\"",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $((count / 2))",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local numbers=$1\n    local sum=$2\n    local count=0\n    for i in $numbers; do\n        for j in $numbers; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count"
  ]
}
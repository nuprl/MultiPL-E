{
  "name": "mbpp_125_find_length",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n#\n# $1 is a string\nfind_length() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_length \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"11000010001\") = \"6\" ]]\n    [[ $(candidate \"10111\") = \"1\" ]]\n    [[ $(candidate \"11011101100101\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local ch=''\n  local ch1=''\n  local ch2=''\n  local ch3=''\n  local ch4=''\n  local ch5=''\n  local ch6=''\n  local ch7=''\n  local ch8=''\n  local ch9=''\n  local ch10=''\n  local ch11=''\n  local ch12=''\n  local ch13=''\n  local ch14=''\n  local ch15=''\n  local ch16=''\n  local ch17=''\n  local ch18=''\n  local ch19=''\n  local ch20=''\n  local ch21=''\n  local ch22=''\n  local ch23=''\n  local ch24=''\n  local ch25=''\n  local ch26=''\n  local ch27=''\n  local ch28=''\n  local ch29=''\n  local ch30=''\n  local ch31=''\n  local ch32=''\n  local ch33=''\n  local ch34=''\n  local ch35=''\n  local ch36=''\n  local ch37=''\n  local ch38=''\n  local ch39=''\n  local ch40=''\n  local ch41=''\n  local ch42=''\n  local ch43=''\n  local ch44=''\n  local ch45=''\n  local ch46=''\n  local ch47=''\n  local ch48=''\n  local ch49=''\n  local ch50=''\n  local ch51=''\n  local ch52=''\n  local ch53=''\n  local ch54=''\n  local ch55=''\n  local ch56=''\n  local ch57=''\n  local ch58=''\n  local ch59=''\n  local ch60=''\n  local ch61=''\n  local ch62=''\n  local ch63=''\n  local ch64=''\n  local ch65=''\n  local ch66=",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            for ((k=i; k<=j; k++)); do\n                if [[ ${str:k:1} == 0 ]]; then\n                    ((count++))\n                else\n                    ((count--))\n                fi\n            done\n            if [[ $count -gt $max ]]; then\n                max=$count\n            fi\n            count=0\n        done\n    done\n    echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for ((i=0; i<len; i++)); do\n    local char=${str:i:1}\n    if [[ $char == 0 ]]; then\n      ((count--))\n    else\n      ((count++))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local previous_char=0\n  local previous_length=0\n  local previous_length_char=0\n  local previous_length_char_count=0\n  local previous_length_char_count_char=0\n  local previous_length_char_count_char_count=0\n  local previous_length_char_count_char_count_char=0\n  local previous_length_char_count_char_count_char_count=0\n  local previous_length_char_count_char_count_char_count_char=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=${string:$i:1}\n    if [[ $current_char == $previous_char ]]; then\n      current_length=$((current_length+1))\n    else\n      if [[ $current_length -gt $max_length ]]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    previous_char=$current_char\n  done\n\n  if [[ $current_length -gt $max_length ]]; then\n    max_length=$current_length\n  fi\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == '0' ]]; then\n      count=$(( count + 1 ))\n    else\n      count=$(( count - 1 ))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=\"$1\"\n  local max=0\n  local cur=0\n  local i=0\n  local len=${#str}\n  local c=''\n\n  for ((i=0; i<len; i++)); do\n    c=\"${str:$i:1}\"\n    if [[ \"$c\" == \"0\" ]]; then\n      ((cur--))\n    else\n      ((cur++))\n    fi\n    if [[ $cur -gt $max ]]; then\n      max=$cur\n    fi\n    if [[ $cur -lt 0 ]]; then\n      cur=0\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == \"1\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -lt 0 ]; then\n      j=$((i+1))\n      count=0\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${str:i:1} == \"0\" ]]; then\n            count=$(( count + 1 ))\n        else\n            count=$(( count - 1 ))\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    fi\n    echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local str=\"$1\"\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == \"0\" ]; then\n      count_0=$((count_0+1))\n    else\n      count_1=$((count_1+1))\n    fi\n    if [ $count_0 -eq $count_1 ]; then\n      if [ $((i-j+1)) -gt $max_len ]; then\n        max_len=$((i-j+1))\n      fi\n    fi\n    if [ $count_0 -lt $count_1 ]; then\n      while [ $count_0 -lt $count_1 ]; do\n        if [ ${str:$j:1} == \"0\" ]; then\n          count_0=$((count_0-1))\n        else\n          count_1=$((count_1-1))\n        fi\n        j=$((j+1))\n      done\n    fi\n    i=$((i+1))\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      count=$(( count + 1 ))\n    else\n      count=$(( count - 1 ))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local v",
    "    local str=$1\n    local count=0\n    local max_count=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]\n    do\n        if [ ${str:$i:1} == \"0\" ]\n        then\n            count=$((count+1))\n        else\n            count=$((count-1))\n        fi\n        if [ $count -gt $max_count ]\n        then\n            max_count=$count\n        fi\n        i=$((i+1))\n    done\n    echo $max_count",
    "  local str=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local str=$1\n    local max_diff=0\n    local count_zero=0\n    local count_one=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1} == \"0\" ]]; then\n            count_zero=$((count_zero+1))\n        else\n            count_one=$((count_one+1))\n        fi\n        local diff=$((count_zero-count_one))\n        if [[ $diff -lt 0 ]]; then\n            diff=$((-diff))\n        fi\n        if [[ $diff -gt $max_diff ]]; then\n            max_diff=$diff\n        fi\n    done\n    echo $max_diff",
    "  local str=$1\n  local max_diff=0\n  local count_0=0\n  local count_1=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count_0++ ))\n    else\n      (( count_1++ ))\n    fi\n    local diff=$(( count_0 - count_1 ))\n    if (( diff < 0 )); then\n      diff=$(( -diff ))\n    fi\n    if (( diff > max_diff )); then\n      max_diff=$diff\n    fi\n  done\n  echo $max_diff",
    "  local str=\"$1\"\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]\n  do\n    if [ \"${str:$i:1}\" == \"0\" ]; then\n      count_0=$((count_0+1))\n    else\n      count_1=$((count_1+1))\n    fi\n    if [ $count_0 -eq $count_1 ]; then\n      if [ $((count_0+count_1)) -gt $max ]; then\n        max=$((count_0+count_1))\n      fi\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count=0\n    local zero_count=0\n    local one_count=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            if [[ ${str:$j:1} == \"0\" ]]; then\n                ((zero_count++))\n            else\n                ((one_count++))\n            fi\n            if [[ $zero_count -eq $one_count ]]; then\n                ((count++))\n            fi\n        done\n        ((zero_count=0))\n        ((one_count=0))\n    done\n    echo $count",
    "  local str=$1\n  local max_len=0\n  local len=0\n  local i=0\n  local j=0\n  local c=0\n  local len_str=${#str}\n  for ((i=0; i<len_str; i++)); do\n    for ((j=i; j<len_str; j++)); do\n      c=${str:$j:1}\n      if [[ $c == '0' ]]; then\n        len=$((len+1))\n      else\n        len=$((len-1))\n      fi\n      if [[ $len -gt $max_len ]]; then\n        max_len=$len\n      fi\n    done\n  done\n  echo $max_len"
  ]
}
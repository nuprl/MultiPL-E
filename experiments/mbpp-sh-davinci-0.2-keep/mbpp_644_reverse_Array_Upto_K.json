{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to reverse an array upto a given position.\n#\n# $1 is a space-separated list\n# $2 is an integer\nreverse_Array_Upto_K() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    reverse_Array_Upto_K \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"4\") = \"4 3 2 1 5 6\" ]]\n    [[ $(candidate \"4 5 6 7\" \"2\") = \"5 4 6 7\" ]]\n    [[ $(candidate \"9 8 7 6 5\" \"3\") = \"7 8 9 6 5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n\n    while (( i < j )); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++, j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$k\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [ $i -lt $k ]; then\n            reversed_array[$i]=${array[$((k-i-1))]}\n        else\n            reversed_array[$i]=${array[$i]}\n        fi\n    done\n    echo ${reversed_array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local i=0\n    local j=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"${@:1:$(($#-1))}\")\n    local k=$((${@:$#}-1))\n    local -a reversed_array=()\n    for ((i=0; i<=k; i++)); do\n        reversed_array[i]=${array[k-i]}\n    done\n    for ((i=k+1; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<$k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n\n    for ((j=0; j<$n; j++))\n    do\n        echo -n \"${array[$j]} \"\n    done\n    echo",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "  local -n arr=$1\n  local k=$2\n  local i=0\n  local j=$((k-1))\n  while [[ $i -lt $j ]]; do\n    local temp=${arr[$i]}\n    arr[$i]=${arr[$j]}\n    arr[$j]=$temp\n    ((i++))\n    ((j--))\n  done",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    if [[ $k -gt $len ]]; then\n        echo \"k is greater than length of array\"\n        return 1\n    fi\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((j=k; j<len; j++)); do\n        reversed_array[j]=${array[j]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    arr=($1)\n    k=$2\n    for ((i = 0; i < k/2; i++)); do\n        temp=${arr[i]}\n        arr[i]=${arr[k-i-1]}\n        arr[k-i-1]=$temp\n    done\n    echo ${arr[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n\n    while (( i < j )); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++, j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "  local list=$1\n  local k=$2\n  local arr=()\n  local i=0\n  for item in $list; do\n    arr[$i]=$item\n    ((i++))\n  done\n  local j=$((k-1))\n  local temp=0\n  for ((i=0; i<k/2; i++)); do\n    temp=${arr[$i]}\n    arr[$i]=${arr[$j]}\n    arr[$j]=$temp\n    ((j--))\n  done\n  echo ${arr[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done"
  ]
}
{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to reverse an array upto a given position.\n#\n# $1 is a space-separated list\n# $2 is an integer\nreverse_Array_Upto_K() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    reverse_Array_Upto_K \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"4\") = \"4 3 2 1 5 6\" ]]\n    [[ $(candidate \"4 5 6 7\" \"2\") = \"5 4 6 7\" ]]\n    [[ $(candidate \"9 8 7 6 5\" \"3\") = \"7 8 9 6 5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n\n    while (( i < j )); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++, j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$k\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [ $i -lt $k ]; then\n            reversed_array[$i]=${array[$((k-i-1))]}\n        else\n            reversed_array[$i]=${array[$i]}\n        fi\n    done\n    echo ${reversed_array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local i=0\n    local j=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"${@:1:$(($#-1))}\")\n    local k=$((${@:$#}-1))\n    local -a reversed_array=()\n    for ((i=0; i<=k; i++)); do\n        reversed_array[i]=${array[k-i]}\n    done\n    for ((i=k+1; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<$k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n\n    for ((j=0; j<$n; j++))\n    do\n        echo -n \"${array[$j]} \"\n    done\n    echo",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "  local -n arr=$1\n  local k=$2\n  local i=0\n  local j=$((k-1))\n  while [[ $i -lt $j ]]; do\n    local temp=${arr[$i]}\n    arr[$i]=${arr[$j]}\n    arr[$j]=$temp\n    ((i++))\n    ((j--))\n  done",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    if [[ $k -gt $len ]]; then\n        echo \"k is greater than length of array\"\n        return 1\n    fi\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((j=k; j<len; j++)); do\n        reversed_array[j]=${array[j]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    arr=($1)\n    k=$2\n    for ((i = 0; i < k/2; i++)); do\n        temp=${arr[i]}\n        arr[i]=${arr[k-i-1]}\n        arr[k-i-1]=$temp\n    done\n    echo ${arr[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n\n    while (( i < j )); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++, j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "  local list=$1\n  local k=$2\n  local arr=()\n  local i=0\n  for item in $list; do\n    arr[$i]=$item\n    ((i++))\n  done\n  local j=$((k-1))\n  local temp=0\n  for ((i=0; i<k/2; i++)); do\n    temp=${arr[$i]}\n    arr[$i]=${arr[$j]}\n    arr[$j]=$temp\n    ((j--))\n  done\n  echo ${arr[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n array=$1\n    local k=$2\n    local -a reversed_array\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ i -lt j ]]; do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while [ $i -lt $j ]; do\n        tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the length of the array\"\n        return\n    fi\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n\n    if [ $k -gt $len ]; then\n        echo \"Error: k is greater than the length of the array\"\n        return 1\n    fi\n\n    mid=$((k/2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        k=$n\n    fi\n    while [ $i -lt $k ]\n    do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n    done\n    echo ${array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=\"$2\"\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i temp=0\n\n  for ((i=0; i<k; i++))\n  do\n    j=$((n-i-1))\n    temp=\"${array[i]}\"\n    array[i]=\"${array[j]}\"\n    array[j]=\"$temp\"\n  done\n\n  echo \"${array[@]}\"",
    "  local -a array=(\"${!1}\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i m=$((k/2))\n  local -i temp=0\n  if [ $k -gt $n ]\n  then\n    echo \"The given position is greater than the length of the array.\"\n    return 1\n  fi\n  for ((i=0; i<m; i++))\n  do\n    temp=${array[i]}\n    array[i]=${array[k-i-1]}\n    array[k-i-1]=$temp\n  done\n  for ((j=0; j<n; j++))\n  do\n    echo -n \"${array[j]} \"\n  done\n  echo",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n\n    echo \"${reversed_array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local -a reversed_array=()\n    for ((i=k; i>=0; i--)); do\n        reversed_array+=(${array[i]})\n    done\n    echo ${reversed_array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i temp=0\n  for ((i=0; i<k/2; i++))\n  do\n    temp=${array[i]}\n    array[i]=${array[k-i-1]}\n    array[k-i-1]=$temp\n  done\n  echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"K is greater than array size\"\n        return\n    fi\n    for ((i=0; i<$k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    local len=${#array[@]}\n\n    if [ $k -gt $len ]; then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<$k; i++)); do\n        reversed_array[$i]=${array[$((k-i-1))]}\n    done\n\n    for ((j=$k; j<$len; j++)); do\n        reversed_array[$j]=${array[$j]}\n    done\n\n    echo \"${reversed_array[@]}\"",
    "    local -n array=$1\n    local k=$2\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than the size of the array\"\n        return\n    fi\n    while [ $i -lt $k ]\n    do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]\n    do\n        temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local -i i=0\n    local -i j=0\n\n    if [ $k -gt ${#array[@]} ]; then\n        k=${#array[@]}\n    fi\n\n    for ((i=k-1; i>=0; i--)); do\n        reversed_array[j]=${array[i]}\n        j=$j+1\n    done\n\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[j]=${array[i]}\n        j=$j+1\n    done\n\n    echo ${reversed_array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$(($k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local array=\"$1\"\n    local k=\"$2\"\n    local array_length=\"$(echo \"$array\" | wc -w)\"\n    local reversed_array=\"\"\n    local i=0\n\n    if [[ \"$k\" -gt \"$array_length\" ]]; then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n\n    while [[ \"$i\" -lt \"$k\" ]]; do\n        reversed_array=\"$(echo \"$array\" | cut -d ' ' -f \"$((array_length - i))\") $reversed_array\"\n        i=$((i + 1))\n    done\n\n    echo \"$reversed_array\"",
    "    local array=(\"$@\")\n    local k=$2\n    local length=${#array[@]}\n    local i=0\n    local j=$((length-1))\n    while [ $i -lt $k ] && [ $j -gt $k ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than the length of the array\"\n        exit 1\n    fi\n    for ((i=0; i<$k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=0\n    local -i temp=0\n\n    if [[ $k -gt $n ]]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    m=$((k/2))\n    for ((i=0; i<m; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${@:1:$2}\")\n    local -a reversed_array=()\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        reversed_array+=(${array[i]})\n    done\n    echo \"${reversed_array[@]}\"",
    "    local array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo \"${array[@]}\"",
    "    local array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n _array=$1\n    local -i _k=$2\n    local -i _i=0\n    local -i _j=0\n    local -i _temp=0\n    local -i _len=${#_array[@]}\n    if [ $_k -gt $_len ]; then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n    for ((_i=0; _i<_k/2; _i++)); do\n        _temp=${_array[_i]}\n        _array[_i]=${_array[_k-_i-1]}\n        _array[_k-_i-1]=$_temp\n    done\n    echo \"${_array[@]}\"",
    "    local array=(\"$@\")\n    local k=$2\n    local len=${#array[@]}\n    local i=0\n    local j=$((len-1))\n    local temp\n    while [ $i -lt $k ] && [ $j -gt $k ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local array=\"$1\"\n    local k=\"$2\"\n    local array_length=$(echo \"$array\" | wc -w)\n    local new_array=\"\"\n    local i=0\n    while [ $i -lt $k ]; do\n        new_array=\"$new_array $(echo \"$array\" | cut -d ' ' -f $((array_length - i)))\"\n        i=$((i + 1))\n    done\n    echo \"$new_array\"",
    "    local -n array=$1\n    local k=$2\n    local len=${#array[@]}\n    local i=0\n    local j=$((len-1))\n    while [ $i -lt $k ] && [ $j -gt $k ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    array=($1)\n    k=$2\n    for ((i=0; i<k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$(($k-$i-1))]}\n        array[$(($k-$i-1))]=$temp\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    while [ $i -lt $k ]; do\n        j=$((n-1-i))\n        if [ $i -lt $j ]; then\n            temp=${array[$i]}\n            array[$i]=${array[$j]}\n            array[$j]=$temp\n        fi\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i\n    local j\n    local temp\n    for ((i=0; i<k/2; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i temp\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    if [ $k -gt $n ]\n    then\n        k=$n\n    fi\n    for ((i=0, j=k-1; i<j; i++, j--))\n    do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo ${array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i tmp=0\n  if [ $k -gt $n ]; then\n    echo \"K is greater than the length of the array\"\n    return 1\n  fi\n  for ((i=0; i<k/2; i++)); do\n    tmp=${array[i]}\n    array[i]=${array[k-i-1]}\n    array[k-i-1]=$tmp\n  done\n  echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local -a new_array\n    for ((i=0; i<k; i++)); do\n        new_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        new_array[i]=${array[i]}\n    done\n    array=(\"${new_array[@]}\")",
    "    # Split the array into a list\n    IFS=' ' read -r -a list <<< \"$1\"\n    # Reverse the list\n    for ((i=0; i<$2/2; i++)); do\n        temp=${list[i]}\n        list[i]=${list[$2-$i-1]}\n        list[$2-$i-1]=$temp\n    done\n    # Print the list\n    for ((i=0; i<$2; i++)); do\n        echo -n \"${list[i]} \"\n    done\n    echo",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]; do\n        temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local -a result\n    for ((i=0; i<=k; i++)); do\n        result[i]=${array[k-i]}\n    done\n    for ((i=k+1; i<${#array[@]}; i++)); do\n        result[i]=${array[i]}\n    done\n    array=(\"${result[@]}\")",
    "    array=($1)\n    k=$2\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [[ $k -lt 0 ]]; then\n        echo \"k must be greater than 0\"\n        return 1\n    fi\n\n    if [[ $k -gt $n ]]; then\n        echo \"k must be less than or equal to the length of the array\"\n        return 2\n    fi\n\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local len=${#arr[@]}\n    local i\n    for ((i=0; i<k/2; i++)); do\n        temp=${arr[i]}\n        arr[i]=${arr[k-i-1]}\n        arr[k-i-1]=$temp\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    while [ $i -lt $k ]; do\n        j=$((n-i-1))\n        if [ $i -lt $j ]; then\n            temp=${array[$i]}\n            array[$i]=${array[$j]}\n            array[$j]=$temp\n        fi\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "  local -a array=(\"${!1}\")\n  local k=$2\n  local -a reversed_array=()\n  local i=0\n  local j=0\n  for ((i=0; i<k; i++)); do\n    reversed_array[j]=${array[k-i-1]}\n    j=$((j+1))\n  done\n  for ((i=k; i<${#array[@]}; i++)); do\n    reversed_array[j]=${array[i]}\n    j=$((j+1))\n  done\n  echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n\n    while (( i < j )); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++, j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the length of the array\"\n        return\n    fi\n    j=$((n-1))\n    while [ $i -lt $k ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    local len=${#array[@]}\n    if [ $k -gt $len ]; then\n        echo \"k is greater than length of array\"\n        return 1\n    fi\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n\n    while ((i < j)); do\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    local len=${#array[@]}\n    if [ $k -gt $len ]; then\n        echo \"k is greater than length of array\"\n        return\n    fi\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done",
    "    local -n array=$1\n    local k=$2\n    local -a reversed_array\n    for (( i=0; i<k; i++ )); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for (( i=k; i<${#array[@]}; i++ )); do\n        reversed_array[i]=${array[i]}\n    done\n    echo ${reversed_array[@]}",
    "\tlocal -a array=(\"$@\")\n\tlocal -i k=\"$2\"\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i n=${#array[@]}\n\tlocal -i temp=0\n\tif [ $k -gt $n ]; then\n\t\techo \"K is greater than the length of the array\"\n\t\treturn\n\tfi\n\tfor ((i=0; i<k/2; i++)); do\n\t\tj=$((k-i-1))\n\t\ttemp=${array[i]}\n\t\tarray[i]=${array[j]}\n\t\tarray[j]=$temp\n\tdone\n\techo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [[ $i -lt $j ]]; do\n        temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local k=$2\n    local -a reversed_array\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    for ((i=0; i<k; i++)); do\n        reversed_array[j]=${array[len-1-i]}\n        j=$((j+1))\n    done\n    for ((i=k; i<len; i++)); do\n        reversed_array[j]=${array[i]}\n        j=$((j+1))\n    done\n    echo ${reversed_array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=k-1\n    local -i temp=0\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    if [[ $# -ne 2 ]]; then\n        echo \"Usage: $0 <space-separated list> <integer>\"\n        exit 1\n    fi\n\n    local -a array=(\"$1\")\n    local k=$2\n    local -i i=0\n\n    if [[ $k -gt ${#array[@]} ]]; then\n        echo \"Error: k ($k) is greater than the length of the array (${#array[@]})\"\n        exit 1\n    fi\n\n    while [[ $i -lt $k ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$k]}\n        array[$k]=$temp\n        ((i++))\n        ((k--))\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k - 1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i + 1))\n        j=$((j - 1))\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$k\n    while [[ $i -lt $j ]]; do\n        local tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n\n    if [ $k -gt $n ]\n    then\n        k=$n\n    fi\n\n    mid=$((k/2))\n\n    for ((i=0; i<mid; i++))\n    do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    while [ $i -lt $k ]\n    do\n        reversed_array[$i]=${array[$((len-i-1))]}\n        i=$((i+1))\n    done\n    while [ $i -lt $len ]\n    do\n        reversed_array[$i]=${array[$j]}\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo ${reversed_array[@]}",
    "    local array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -lt $n ]\n    then\n        while [ $i -lt $k ]\n        do\n            j=$((n-i-1))\n            temp=${array[$i]}\n            array[$i]=${array[$j]}\n            array[$j]=$temp\n            i=$((i+1))\n        done\n    fi\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    if (( k < n )); then\n        for (( i=0; i<k/2; i++ )); do\n            j=$(( k - i - 1 ))\n            array[i]=$(( array[i] + array[j] ))\n            array[j]=$(( array[i] - array[j] ))\n            array[i]=$(( array[i] - array[j] ))\n        done\n    fi\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=${array[-1]}\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the size of the array\"\n        exit 1\n    fi\n\n    for (( i = 0; i < $k; i++ )); do\n        for (( j = $i; j < $k; j++ )); do\n            if [ ${array[$i]} -gt ${array[$j]} ]; then\n                temp=${array[$i]}\n                array[$i]=${array[$j]}\n                array[$j]=$temp\n            fi\n        done\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n\n    array=($1)\n    k=$2\n    len=${#array[@]}\n    if (( k > len )); then\n        echo \"Error: k is greater than the length of the array\"\n        return 1\n    fi\n    for (( i = 0, j = len - 1; i < j; i++, j-- )); do\n        if (( i < k && j >= k )); then\n            continue\n        fi\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n\n    if (( k > len )); then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n\n    mid=$(( k / 2 ))\n    for (( i = 0; i < mid; i++ )); do\n        j=$(( k - i - 1 ))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    for ((i=k-1; i>=0; i--)); do\n        reversed_array+=(${array[$i]})\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array+=(${array[$i]})\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp=0\n    while [ $i -lt $k ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$i+1\n        j=$j-1\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp=0\n\n    while (( i < j ))\n    do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "    # Create an array from the space-separated list\n    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n\n    # Reverse the array up to the given position\n    local -a reversed_array\n    for (( i = 0; i < $2; i++ )); do\n        reversed_array[$i]=\"${array[$(( $2 - $i - 1 ))]}\"\n    done\n\n    # Print the reversed array\n    printf '%s\\n' \"${reversed_array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n\n  if [[ $k -gt $n ]]; then\n    echo \"Error: k is greater than the length of the array\"\n    return 1\n  fi\n\n  for ((i=0; i<k/2; i++)); do\n    j=$((k-i-1))\n    temp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$temp\n  done\n\n  echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local -a reversed_array\n    local i\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo ${reversed_array[@]}",
    "  local -n array=$1\n  local k=$2\n  local i\n  local j\n  local temp\n  for ((i=0; i<k/2; i++)); do\n    j=$((k-i-1))\n    temp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$temp\n  done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "  local -a arr=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=$((k-1))\n  local -i tmp=0\n  while [ $i -lt $j ]; do\n    tmp=${arr[$i]}\n    arr[$i]=${arr[$j]}\n    arr[$j]=$tmp\n    ((i++))\n    ((j--))\n  done\n  echo \"${arr[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp=0\n    while [ $i -lt $j ]; do\n        tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n    array=($1)\n    k=$2\n    len=${#array[@]}\n    for ((i=0, j=len-1; i<k/2; i++, j--)); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i temp=0\n\n  if [ $k -gt $n ]\n  then\n    k=$n\n  fi\n\n  for ((i=0; i<$k/2; i++))\n  do\n    temp=${array[$i]}\n    array[$i]=${array[$k-$i-1]}\n    array[$k-$i-1]=$temp\n  done\n\n  for ((i=0; i<$n; i++))\n  do\n    echo -n \"${array[$i]} \"\n  done\n  echo",
    "    local array=(\"$@\")\n    local k=$2\n    local len=${#array[@]}\n    local i\n    local j\n    local temp\n\n    for ((i=0; i<k; i++)); do\n        for ((j=i; j<len-i-1; j++)); do\n            temp=${array[j]}\n            array[j]=${array[j+1]}\n            array[j+1]=$temp\n        done\n    done\n\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the size of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i mid=0\n  local -i temp=0\n  if (( k > n )); then\n    echo \"k is greater than the length of the array\"\n    return\n  fi\n  mid=$(( k / 2 ))\n  for (( i = 0; i < mid; i++ )); do\n    j=$(( k - i - 1 ))\n    temp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$temp\n  done\n  echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if (( k > n )); then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n\n    while (( i < k/2 )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n        (( i++ ))\n    done\n\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=$((k-1))\n  local -i temp\n  while [ $i -lt $j ]; do\n    temp=${array[$i]}\n    array[$i]=${array[$j]}\n    array[$j]=$temp\n    ((i++))\n    ((j--))\n  done\n  echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=($1)\n    local k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp\n    while ((i<j)); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local array=(\"$@\")\n    local k=$2\n    local len=${#array[@]}\n    local i=0\n    local j=$((len-1))\n    local temp\n    while [ $i -lt $k ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "  local array=(\"$@\")\n  local k=$2\n  local len=${#array[@]}\n  local i=0\n  local j=$((len-1))\n  local temp\n  while [ $i -lt $k ] && [ $j -gt $k ]; do\n    temp=${array[$i]}\n    array[$i]=${array[$j]}\n    array[$j]=$temp\n    i=$((i+1))\n    j=$((j-1))\n  done\n  echo ${array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i temp=0\n\n  if [ $k -gt $n ]; then\n    echo \"k is greater than the size of the array\"\n    return 1\n  fi\n\n  for (( i=0; i<$k/2; i++ )); do\n    temp=${array[$i]}\n    array[$i]=${array[$k-$i-1]}\n    array[$k-$i-1]=$temp\n  done\n\n  for (( i=0; i<$n; i++ )); do\n    echo -n \"${array[$i]} \"\n  done\n  echo",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i len=${#array[@]}\n  local -i mid=0\n  local -i temp=0\n  if [ $k -gt $len ]; then\n    echo \"ERROR: k is greater than the length of the array\"\n    return 1\n  fi\n  mid=$((k/2))\n  for ((i=0; i<mid; i++)); do\n    j=$((k-i-1))\n    temp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$temp\n  done\n  echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local k=${array[-1]}\n    unset array[-1]\n    local -a reversed_array\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local -a rev_arr\n    for ((i=k; i>=0; i--)); do\n        rev_arr+=(${arr[i]})\n    done\n    echo ${rev_arr[@]}",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k - 1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if (( k >= n )); then\n        echo \"Invalid value for k\"\n        return 1\n    fi\n\n    for (( i = 0; i < k; i++ )); do\n        for (( j = 0; j < k - i; j++ )); do\n            if (( j < k - i - 1 )); then\n                temp=${array[j]}\n                array[j]=${array[j+1]}\n                array[j+1]=$temp\n            fi\n        done\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[*]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "  local -n array=$1\n  local k=$2\n  local -a reversed=()\n  for (( i = 0; i < k; i++ )); do\n    reversed+=(${array[$((k - i - 1))]})\n  done\n  for (( i = k; i < ${#array[@]}; i++ )); do\n    reversed+=(${array[i]})\n  done\n  echo \"${reversed[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    IFS=' ' read -r -a array <<< \"$1\"\n    k=$2\n    for (( i=0; i<k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        exit 1\n    fi\n    for ((i=0, j=n-1; i<j; i++, j--)); do\n        if [ $i -ge $k ]; then\n            break\n        fi\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the size of the array\"\n        exit 1\n    fi\n\n    while [ $i -lt $k ]; do\n        j=$((n-i-1))\n        if [ $i -lt $j ]; then\n            temp=${array[$i]}\n            array[$i]=${array[$j]}\n            array[$j]=$temp\n        fi\n        i=$((i+1))\n    done\n\n    echo ${array[@]}",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n\n    echo ${array[*]}",
    "    local -n array=$1\n    local k=$2\n    local -a reversed_array\n    for ((i=k; i>=0; i--)); do\n        reversed_array+=(${array[i]})\n    done\n    echo ${reversed_array[@]}",
    "    local array=($1)\n    local k=$2\n    local len=${#array[@]}\n    local i\n    local j\n    local temp\n\n    for ((i=0, j=k; i<j; i++, j--)) {\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    }\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    arr=($1)\n    k=$2\n    for ((i=0; i<$k/2; i++)); do\n        temp=${arr[i]}\n        arr[i]=${arr[k-i-1]}\n        arr[k-i-1]=$temp\n    done\n    echo ${arr[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"K is greater than array size\"\n        return 1\n    fi\n    while [ $i -lt $k -a $j -lt $k ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$i+1\n        j=$n-1\n    done\n    echo \"${array[@]}\"",
    "    echo $1 | awk -v k=$2 '{for (i=k;i>=1;i--) printf(\"%s \",$i);for (i=k+1;i<=NF;i++) printf(\"%s \",$i);print \"\"}'",
    "    local -a array=(\"$@\")\n    local k=${array[-1]}\n    unset array[-1]\n    local -a reversed_array\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    if [ $k -gt ${#array[@]} ]; then\n        echo \"k is greater than the length of the array\"\n        exit 1\n    fi\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [[ $k -gt $n ]]; then\n        echo \"Error: k is greater than the size of the array.\"\n        exit 1\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local len=${#array[@]}\n    local i\n    for ((i=0; i<k/2; i++)); do\n        local tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than length of array\"\n        exit 1\n    fi\n\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n\n    echo ${array[@]}",
    "    if [[ $# -ne 2 ]]; then\n        echo \"Usage: $0 <space-separated list> <integer>\"\n        exit 1\n    fi\n\n    local -a array=($1)\n    local k=$2\n    local -a reversed_array\n\n    if [[ $k -gt ${#array[@]} ]]; then\n        echo \"Error: k must be less than or equal to the length of the array\"\n        exit 1\n    fi\n\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"k is greater than length of array\"\n        return 1\n    fi\n    if [ $k -lt 0 ]; then\n        echo \"k is less than 0\"\n        return 1\n    fi\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$((k-i-1))]}\n        array[$((k-i-1))]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]\n    do\n        temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local array=($1)\n    local k=$2\n    local len=${#array[@]}\n    local i=0\n    local j=$((len-1))\n    local temp=0\n    while [ $i -lt $k ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i\n    for ((i=0; i<k/2; i++)); do\n        local temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i tmp=0\n    local -i len=${#array[@]}\n    if [ \"$k\" -gt \"$len\" ]; then\n        k=\"$len\"\n    fi\n    for ((i=0; i<k/2; i++)); do\n        j=\"$((k-i-1))\"\n        tmp=\"${array[i]}\"\n        array[i]=\"${array[j]}\"\n        array[j]=\"$tmp\"\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -ge $n ]\n    then\n        echo \"k is greater than or equal to the length of the array\"\n        return\n    fi\n\n    for ((i=0; i<k/2; i++))\n    do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo ${array[@]}",
    "    array=($1)\n    k=$2\n    for ((i=0; i<$k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a new_array=()\n    local i=0\n    local j=0\n    local n=${#array[@]}\n    for ((i=0; i<n; i++)); do\n        if [[ $i -lt $k ]]; then\n            new_array[$i]=${array[$k-$i-1]}\n        else\n            new_array[$i]=${array[$i]}\n        fi\n    done\n    echo \"${new_array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    local len=${#array[@]}\n    if [ $k -gt $len ]; then\n        k=$len\n    fi\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n    for ((i=0; i<$len; i++)); do\n        echo -n \"${array[$i]} \"\n    done\n    echo",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -n array=$1\n    local k=$2\n    local -a new_array\n    for ((i=0; i<k; i++)); do\n        new_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        new_array[i]=${array[i]}\n    done\n    array=(\"${new_array[@]}\")",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=k-1\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local arr=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${arr[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    for ((i=0; i<k; i++))\n    do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=$((k+1))\n    if [ $k -lt $n ]; then\n        for ((i=k; i>=0; i--)); do\n            reversed_array[j]=${array[i]}\n            j=$((j+1))\n        done\n        for ((i=m; i<n; i++)); do\n            reversed_array[j]=${array[i]}\n            j=$((j+1))\n        done\n        echo \"${reversed_array[@]}\"\n    else\n        echo \"k is greater than the length of the array\"\n    fi",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n    for ((i=0; i<k/2; i++))\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$((k-i-1))]}\n        array[$((k-i-1))]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=k-1\n    local -i temp=0\n\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i\n    for ((i = 0; i < k / 2; i++)); do\n        local temp=${array[i]}\n        array[i]=${array[k - i - 1]}\n        array[k - i - 1]=$temp\n    done",
    "    local -n array=$1\n    local k=$2\n    local i\n    local j\n    local temp\n\n    for ((i=0, j=k; i<j; i++, j--))\n    do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done",
    "  local array=($1)\n  local k=$2\n  local i=0\n  local j=$((k-1))\n  while [ $i -lt $j ]; do\n    local temp=${array[$i]}\n    array[$i]=${array[$j]}\n    array[$j]=$temp\n    i=$((i+1))\n    j=$((j-1))\n  done\n  echo ${array[@]}",
    "    # $1 is a space-separated list\n    # $2 is an integer\n    # $3 is an integer\n    local array=(\"$1\")\n    local k=$2\n    local n=$3\n    local i=0\n    local j=$((n-1))\n    local temp=0\n    while [ $i -lt $k ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=k-1\n    local -i temp\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k - 1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i temp=0\n    local -i len=${#array[@]}\n\n    if [ $k -gt $len ]; then\n        echo \"K is greater than the length of the array\"\n        exit 1\n    fi\n\n    for (( i=0; i<k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local i\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp=0\n\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k - 1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i + 1))\n        j=$((j - 1))\n    done\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local len=${#array[@]}\n    local i=0\n    local j=$((len-1))\n    while [ $i -lt $k ] && [ $j -ge $k ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the size of the array.\"\n        return 1\n    fi\n\n    while [ $i -lt $k ]; do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n    done\n\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    array=($1)\n    k=$2\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}"
  ]
}
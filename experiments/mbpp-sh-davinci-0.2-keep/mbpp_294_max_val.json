{
  "name": "mbpp_294_max_val",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum value in a given heterogeneous list.\n#\n# $1 is a newline-separated, space-separated list\nmax_val() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_val \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Python 3 2 4 5 version\") = \"5\" ]]\n    [[ $(candidate \"Python 15 20 25\") = \"25\" ]]\n    [[ $(candidate \"Python 30 20 40 50 version\") = \"50\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "  local max=0\n  local val=0\n  for val in $1; do\n    if [ $val -gt $max ]; then\n      max=$val\n    fi\n  done\n  echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "    local max=0\n    while read -r line; do\n        for val in $line; do\n            if [[ $val -gt $max ]]; then\n                max=$val\n            fi\n        done\n    done <<< \"$1\"\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "  local max=0\n  local val=0\n  for i in $1; do\n    val=$(echo \"$i\" | sed 's/[^0-9]//g')\n    if [ $val -gt $max ]; then\n      max=$val\n    fi\n  done\n  echo $max",
    "  local max=0\n  local val=0\n  for i in $1; do\n    val=$(echo \"$i\" | sed 's/[^0-9]//g')\n    if [[ $val -gt $max ]]; then\n      max=$val\n    fi\n  done\n  echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    local val=0\n    for i in $1; do\n        val=$(echo $i | sed 's/[^0-9]//g')\n        if [ $val -gt $max ]; then\n            max=$val\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "  local max=0\n  while read -r line; do\n    for val in $line; do\n      if [[ $val -gt $max ]]; then\n        max=$val\n      fi\n    done\n  done <<< \"$1\"\n  echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
    "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max"
  ]
}
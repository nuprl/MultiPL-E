{
  "name": "mbpp_118_string_to_list",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to convert a string to a list of strings split on the space character.\n#\n# $1 is a string\nstring_to_list() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    string_to_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python programming\") = \"python programming\" ]]\n    [[ $(candidate \"lists tuples strings\") = \"lists tuples strings\" ]]\n    [[ $(candidate \"write a program\") = \"write a program\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  echo \"$1\" | tr ' ' '\\n'",
    "    local string=$1\n    local list=()\n    local word=''\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $char == ' ' ]]; then\n            list+=(\"$word\")\n            word=''\n        else\n            word+=\"$char\"\n        fi\n    done\n    list+=(\"$word\")\n    echo \"${list[@]}\"",
    "    echo \"$1\" | tr ' ' '\\n'",
    "    echo $1 | tr ' ' '\\n'",
    "  echo $1 | tr ' ' '\\n'",
    "  echo \"$1\" | tr ' ' '\\n'",
    "    echo $1 | tr ' ' '\\n'",
    "    local string=\"$1\"\n    local list=()\n    while IFS= read -r word; do\n        list+=(\"$word\")\n    done <<< \"$string\"\n    echo \"${list[@]}\"",
    "    echo $1 | tr \" \" \"\\n\"",
    "    local string=$1\n    local list=()\n    while read -r word; do\n        list+=(\"$word\")\n    done < <(echo \"$string\")\n    echo \"${list[@]}\"",
    "    echo $1 | tr ' ' '\\n'",
    "  echo \"$1\" | tr ' ' '\\n'",
    "  echo $1 | tr \" \" \"\\n\"",
    "    local string=\"$1\"\n    local list=()\n    while IFS= read -r word; do\n        list+=(\"$word\")\n    done < <(echo \"$string\")\n    echo \"${list[@]}\"",
    "  echo $1 | tr ' ' '\\n'",
    "  echo $1 | tr \" \" \"\\n\"",
    "  echo \"$1\" | tr ' ' '\\n'",
    "    echo $1 | tr ' ' '\\n'",
    "    echo \"$1\" | tr ' ' '\\n'",
    "  echo $1 | tr \" \" \"\\n\""
  ]
}
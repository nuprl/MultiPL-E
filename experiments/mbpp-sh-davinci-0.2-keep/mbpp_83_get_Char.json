{
  "name": "mbpp_83_get_Char",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\n#\n# $1 is a string\nget_Char() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    get_Char \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"abc\") = \"f\" ]]\n    [[ $(candidate \"gfg\") = \"t\" ]]\n    [[ $(candidate \"ab\") = \"c\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$(( sum + ${1:$i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$(( sum + ${1:$i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$(( sum + ${1:$i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    local str=$1\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        (( sum+=${str:$i:1} ))\n    done\n    echo $(( sum%26 ))",
    "    local str=$1\n    local sum=0\n    for ((i=0;i<${#str};i++)); do\n        sum=$((sum + ${str:$i:1}))\n    done\n    echo $((sum%26))",
    "    local string=$1\n    local sum=0\n    for (( i=0; i<${#string}; i++ )); do\n        sum=$(( sum + $(printf \"%d\" \"'${string:$i:1}\") ))\n    done\n    printf \"%c\" $(( sum % 26 + 97 ))",
    "    local str=\"$1\"\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        sum=$(( sum + ${str:$i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    local str=\"$1\"\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        sum=$(( sum + ${str:$i:1} ))\n    done\n    echo $(( sum % 26 + 97 ))",
    "    sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$((sum+${1:$i:1}))\n    done\n    echo $((sum%26))",
    "    local str=$1\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        sum=$(( sum + ${str:$i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    echo $1 | python -c \"import sys; print(chr(sum(map(ord, sys.stdin.read())) % 26 + ord('a')))\"",
    "    local str=$1\n    local sum=0\n    for ((i=0; i<${#str}; i++)); do\n        local char=${str:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n        sum=$((sum + ascii))\n    done\n    local mod=$((sum % 26))\n    printf \"%c\" \"$(printf '%d' \"'$(printf '%b' \"$(printf '\\\\x%x' \"$mod\")\")\")\"",
    "  local sum=0\n  local str=$1\n  local len=${#str}\n  local i=0\n  while [ $i -lt $len ]; do\n    local c=${str:i:1}\n    local ascii=$(printf \"%d\" \"'$c\")\n    sum=$((sum + ascii))\n    i=$((i + 1))\n  done\n  local mod=$((sum % 26))\n  local char=$(printf \\\\$(printf '%03o' $mod))\n  echo $char",
    "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$(( sum + ${1:i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    local str=\"$1\"\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        sum=$(( sum + ${str:$i:1} ))\n    done\n    echo $(( sum % 26 ))",
    "    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$((sum+${1:$i:1}))\n    done\n    sum=$((sum%26))\n    print \"$(printf '%c' $sum)\"",
    "    local str=$1\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        (( sum+=${str:$i:1} ))\n    done\n    echo $(( sum%26 ))",
    "    local str=\"$1\"\n    local sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        sum=$((sum+${str:$i:1}))\n    done\n    echo $((sum%26))",
    "    local str=$1\n    local sum=0\n    for ((i=0; i<${#str}; i++)); do\n        sum=$((sum + $(printf \"%d\" \"'${str:$i:1}\")))\n    done\n    printf \"%c\" $((sum % 26 + 97))",
    "    sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $((sum % 26))"
  ]
}
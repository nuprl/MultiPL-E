{
  "name": "mbpp_445_index_multiplication",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nindex_multiplication() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_445_index_multiplication.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    index_multiplication \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3\\n4 5\\n2 9\\n1 10\" \"6 7\\n3 9\\n1 1\\n7 3\") = \"6 21\\n12 45\\n2 9\\n7 30\" ]]\n    [[ $(candidate \"2 4\\n5 6\\n3 10\\n2 11\" \"7 8\\n4 10\\n2 2\\n8 4\") = \"14 32\\n20 60\\n6 20\\n16 44\" ]]\n    [[ $(candidate \"3 5\\n6 7\\n4 11\\n3 12\" \"8 9\\n5 11\\n3 3\\n9 5\") = \"24 45\\n30 77\\n12 33\\n27 60\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=($((_tuple1[i] * _tuple2[i])))\n  done\n\n  echo \"${_result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result[$i]=$((_tuple1[$i] * _tuple2[$i]))\n  done\n  echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for (( i=0; i<${#_tuple1[@]}; i++ )); do\n        _result+=($(( _tuple1[i] * _tuple2[i] )))\n    done\n    echo \"${_result[@]}\"",
    "  local -a a=(\"$@\")\n  local -a b=(\"$@\")\n  local -a c=()\n  local i=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[$i]=$((a[$i] * b[$i]))\n  done\n  echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((a[i] * b[i]))\n  done\n  echo ${c[@]}",
    "  local -n a=$1\n  local -n b=$2\n  local result=()\n  for i in \"${!a[@]}\"; do\n    result+=(\"$((a[i] * b[i]))\")\n  done\n  echo \"${result[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    local result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        result+=($((a[i] * b[i])))\n    done\n    echo \"${result[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    local result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        result[$i]=$((a[$i] * b[$i]))\n    done\n    echo \"${result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=($((_tuple1[i] * _tuple2[i])))\n  done\n  echo \"${_result[@]}\"",
    "  local -n arr1=$1\n  local -n arr2=$2\n  local -a res=()\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    res+=($((${arr1[$i]} * ${arr2[$i]})))\n  done\n  echo \"${res[@]}\"",
    "    local -n a=$1\n    local -n b=$2\n    local result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        result[i]=$((a[i] * b[i]))\n    done\n    echo \"${result[@]}\"",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local _result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    _result+=($((_tuple1[i] * _tuple2[i])))\n  done\n  echo \"${_result[@]}\"",
    "    local -n _tuple1=$1\n    local -n _tuple2=$2\n    local _result=()\n    for ((i=0; i<${#_tuple1[@]}; i++)); do\n        _result[i]=$((_tuple1[i] * _tuple2[i]))\n    done\n    echo \"${_result[@]}\"",
    "  local -a tuple1=($1)\n  local -a tuple2=($2)\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++))\n  do\n    result[$i]=$((tuple1[$i] * tuple2[$i]))\n  done\n  echo ${result[@]}",
    "  local -n _tuple1=$1\n  local -n _tuple2=$2\n  local result=()\n  for ((i=0; i<${#_tuple1[@]}; i++)); do\n    result[$i]=$((_tuple1[$i] * _tuple2[$i]))\n  done\n  echo \"${result[@]}\"",
    "  local -n array1=$1\n  local -n array2=$2\n  local result=()\n  for (( i = 0; i < ${#array1[@]}; i++ )); do\n    result+=($(( array1[i] * array2[i] )))\n  done\n  echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[$i]=$((tuple1[$i] * tuple2[$i]))\n    done\n    echo ${result[@]}",
    "    local -n list1=$1\n    local -n list2=$2\n    local result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result+=($((list1[i] * list2[i])))\n    done\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((a[i] * b[i]))\n  done\n  echo ${c[@]}",
    "  local -a t1=($1)\n  local -a t2=($2)\n  local -a result=()\n  for ((i=0; i<${#t1[@]}; i++)); do\n    result[$i]=$((t1[$i] * t2[$i]))\n  done\n  echo \"${result[@]}\""
  ]
}
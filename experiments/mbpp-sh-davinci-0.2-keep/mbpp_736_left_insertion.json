{
  "name": "mbpp_736_left_insertion",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\n#\n# $1 is a space-separated list\n# $2 is an integer\nleft_insertion() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    left_insertion \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 5\" \"6\") = \"4\" ]]\n    [[ $(candidate \"1 2 4 5\" \"3\") = \"2\" ]]\n    [[ $(candidate \"1 2 4 5\" \"7\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array\n    local -i i\n    local -i n\n    local -i value\n    array=($1)\n    value=$2\n    n=${#array[@]}\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -ge $value ]]; then\n            echo $i\n            return\n        fi\n    done\n    echo $n",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        local n=${list:$i:1}\n        if [ $n -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a list\n    local -i i\n    local -i n\n    local -i l\n    local -i r\n    local -i m\n    local -i v\n    list=($1)\n    n=${#list[@]}\n    l=0\n    r=$((n-1))\n    v=$2\n    while l<r; do\n        m=$((l+(r-l)/2))\n        if ((v<=list[m])); then\n            r=$m\n        else\n            l=$((m+1))\n        fi\n    done\n    echo $l",
    "    local -a list=($1)\n    local value=$2\n    local low=0\n    local high=${#list[@]}\n    local mid\n    while (( low < high )); do\n        mid=$(( (low + high) / 2 ))\n        if (( list[mid] < value )); then\n            low=$(( mid + 1 ))\n        else\n            high=$(( mid ))\n        fi\n    done\n    echo $low",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [[ $mid_value -eq $value ]]; then\n            index=$mid\n            break\n        elif [[ $mid_value -gt $value ]]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $index",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            index=$((index+1))\n        else\n            break\n        fi\n    done\n    echo $index",
    "    local list=$1\n    local value=$2\n    local index=0\n    local len=${#list}\n    local mid=$((len/2))\n    local left=0\n    local right=$len\n    local found=0\n\n    while [ $left -lt $right ]; do\n        if [ $value -le ${list:$mid:1} ]; then\n            right=$mid\n        else\n            left=$((mid+1))\n        fi\n        mid=$((left+right)/2)\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local index=0\n    while [[ $index -lt ${#list[@]} ]]; do\n        if [[ ${list[$index]} -ge $value ]]; then\n            break\n        fi\n        ((index++))\n    done\n    echo $index",
    "    local -a array=($1)\n    local value=$2\n    local i=0\n    local j=${#array[@]}\n    while [[ $i -lt $j ]]; do\n        local mid=$(( (i+j)/2 ))\n        if [[ ${array[$mid]} -lt $value ]]; then\n            i=$(( mid+1 ))\n        else\n            j=$mid\n        fi\n    done\n    echo $i",
    "    local -a array=(\"${!1}\")\n    local value=$2\n    local left=0\n    local right=${#array[@]}\n    local mid\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ ${array[$mid]} -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local -a array=($1)\n  local value=$2\n  local length=${#array[@]}\n  local left=0\n  local right=$((length - 1))\n  local mid\n  while [[ $left -lt $right ]]; do\n    mid=$(((left + right) / 2))\n    if [[ ${array[$mid]} -lt $value ]]; then\n      left=$((mid + 1))\n    else\n      right=$((mid - 1))\n    fi\n  done\n  if [[ ${array[$left]} -lt $value ]]; then\n    echo $((left + 1))\n  else\n    echo $left\n  fi",
    "  local -a array\n  local i\n  local n\n  local value\n  array=($1)\n  n=${#array[@]}\n  value=$2\n  for ((i=0; i<n; i++)); do\n    if ((array[i] >= value)); then\n      echo $i\n      return\n    fi\n  done\n  echo $n",
    "    local list=$1\n    local value=$2\n    local index=0\n    local list_length=${#list[@]}\n    local list_length_minus_one=$((list_length-1))\n    local list_length_divided_by_two=$((list_length/2))\n    local list_length_divided_by_two_plus_one=$((list_length_divided_by_two+1))\n    local list_length_divided_by_two_minus_one=$((list_length_divided_by_two-1))\n    local list_length_divided_by_two_plus_one_minus_one=$((list_length_divided_by_two_plus_one-1))\n    local list_length_divided_by_two_plus_one_plus_one=$((list_length_divided_by_two_plus_one+1))\n    local list_length_divided_by_two_plus_one_plus_one_minus_one=$((list_length_divided_by_two_plus_one_plus_one-1))\n    local list_length_divided_by_two_plus_one_plus_one_plus_one=$((list_length_divided_by_two_plus_one_plus_one+1))\n    local list_length_divided_by_two_plus_one_plus_one_plus_one_minus_one=$((list_length_divided_by_two_plus_one_plus_one_plus_one-1))\n    local list_length_divided_by_two_plus_one_plus_one_plus_one_plus_one=$((list_length_divided_by_two_plus_one_plus_one_plus_one+1))\n    local list_length_divided_by_two_plus_one_plus_one_plus_one_plus_one_minus_one=$((list_length_divided_by_two_plus_one_plus_one_plus_one_plus_one-1))\n    local list_length_divided_by_two_plus_one_plus_one_plus_one_",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [[ $i -ge $value ]]; then\n            break\n        fi\n        index=$((index + 1))\n    done\n    echo $index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=$((${#list} - 1))\n    while [ $i -lt $j ]; do\n        local mid=$((($i + $j) / 2))\n        if [ ${list:$mid:1} -lt $value ]; then\n            i=$((mid + 1))\n        else\n            j=$((mid - 1))\n        fi\n    done\n    if [ ${list:$i:1} -lt $value ]; then\n        echo $((i + 1))\n    else\n        echo $i\n    fi",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list[$i]} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a arr=($1)\n    local val=$2\n    local i=0\n    local j=${#arr[@]}\n    local mid=0\n    while ((i < j)); do\n        mid=$((i + (j - i) / 2))\n        if ((val <= arr[mid])); then\n            j=$mid\n        else\n            i=$((mid + 1))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    for i in $list; do\n        if [ \"$i\" -ge \"$value\" ]; then\n            break\n        fi\n        index=$((index+1))\n    done\n    echo $index",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    while ((i < j)); do\n        local mid=$(((i + j) / 2))\n        if ((value <= list[mid])); then\n            j=$mid\n        else\n            i=$((mid + 1))\n        fi\n    done\n    echo $i",
    "    local -a arr=($1)\n    local value=$2\n    local i=0\n    local j=${#arr[@]}\n    local mid=0\n    while (( i < j )); do\n        mid=$(( (i+j)/2 ))\n        if (( arr[mid] < value )); then\n            i=$(( mid+1 ))\n        else\n            j=$(( mid ))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local middle\n    local middle_value\n    while [[ $left -lt $right ]]; do\n        middle=$((($left + $right) / 2))\n        middle_value=${list[$middle]}\n        if [[ $middle_value -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n    echo $left",
    "    local -a arr=(\"${!1}\")\n    local val=$2\n    local len=${#arr[@]}\n    local left=0\n    local right=$len\n    local mid\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((val <= arr[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local i=0\n  local len=${#list}\n  while [ $i -lt $len ]\n  do\n    if [ $value -le ${list:$i:1} ]\n    then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $i",
    "  local -a list=($1)\n  local value=$2\n  local left=0\n  local right=${#list[@]}\n  local mid\n  while [[ $left -lt $right ]]; do\n    mid=$((($left + $right) / 2))\n    if [[ ${list[$mid]} -lt $value ]]; then\n      left=$((mid + 1))\n    else\n      right=$mid\n    fi\n  done\n  echo $left",
    "  local list=$1\n  local value=$2\n  local left=0\n  local right=$((${#list} - 1))\n  local middle\n  while [ $left -lt $right ]; do\n    middle=$((($left + $right) / 2))\n    if [ $value -gt ${list:$middle:1} ]; then\n      left=$((middle + 1))\n    else\n      right=$((middle - 1))\n    fi\n  done\n  echo $left",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a arr=($1)\n    local n=$2\n    local i=0\n    local j=${#arr[@]}\n    while (( i < j )); do\n        local mid=$(( (i+j)/2 ))\n        if (( arr[mid] < n )); then\n            i=$(( mid+1 ))\n        else\n            j=$(( mid ))\n        fi\n    done\n    echo $i",
    "    local -a array\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i x\n    array=($1)\n    x=$2\n    n=${#array[@]}\n    i=0\n    j=$((n-1))\n    while ((i<j)); do\n        k=$(((i+j)/2))\n        if ((x<=array[k])); then\n            j=$k\n        else\n            i=$((k+1))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((list[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    while [[ $i -lt $j ]]; do\n        local mid=$(( (i+j)/2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            i=$(( mid+1 ))\n        else\n            j=$mid\n        fi\n    done\n    echo $i",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local value=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    while [ $low -lt $high ]; do\n        mid=$(((low + high) / 2))\n        if [ ${array[$mid]} -lt $value ]; then\n            low=$((mid + 1))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a array=($1)\n    local value=$2\n    local i=0\n    local j=${#array[@]}\n    local k=0\n    while ((i < j)); do\n        k=$(((i + j) / 2))\n        if ((array[k] < value)); then\n            i=$((k + 1))\n        else\n            j=$k\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local result=0\n    local i=0\n    for n in $list; do\n        if [ $n -lt $value ]; then\n            result=$i\n        fi\n        i=$((i+1))\n    done\n    echo $result",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$((($left+$right)/2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid+1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    local mid\n    local mid_value\n    while [ $i -lt $len ]; do\n        mid=$((i + len))\n        mid=$((mid / 2))\n        mid_value=${list[$mid]}\n        if [ $mid_value -eq $value ]; then\n            echo $mid\n            return\n        elif [ $mid_value -lt $value ]; then\n            i=$((mid + 1))\n        else\n            len=$((mid - 1))\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local left_index=0\n    local right_index=0\n\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            left_index=$index\n        elif [ $i -gt $value ]; then\n            right_index=$index\n            break\n        fi\n        index=$((index + 1))\n    done\n\n    if [ $left_index -eq $right_index ]; then\n        echo \"No insertion point found.\"\n    else\n        echo \"Insertion point is between $left_index and $right_index.\"\n    fi",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local value=$2\n    local left=0\n    local right=${#array[@]}\n    while [ $left -lt $right ]; do\n        local mid=$(( ($left + $right) / 2 ))\n        if [ ${array[$mid]} -lt $value ]; then\n            left=$(( $mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local middle\n\n    while [[ $left -le $right ]]; do\n        middle=$((($left + $right) / 2))\n        if [[ ${list:$middle:1} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n    echo $left",
    "    local -a arr=($1)\n    local val=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=$((len-1))\n    local m\n    while ((i<j)); do\n        m=$((i+(j-i)/2))\n        if ((val<=arr[m])); then\n            j=$m\n        else\n            i=$((m+1))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=${list[$mid]}\n        if [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            index=$((index+1))\n        else\n            break\n        fi\n    done\n    echo $index",
    "    local -a array=($1)\n    local value=$2\n    local length=${#array[@]}\n    local left=0\n    local right=$((length - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$(((left + right) / 2))\n        if [[ ${array[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [[ ${array[$left]} -lt $value ]]; then\n        echo $((left + 1))\n    else\n        echo $left\n    fi",
    "    local -a array=($1)\n    local value=$2\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid=0\n    local -i result=0\n\n    while [ $low -lt $high ]; do\n        mid=$((low + (high - low) / 2))\n        if [ ${array[$mid]} -ge $value ]; then\n            high=$mid\n        else\n            low=$((mid + 1))\n        fi\n    done\n    result=$low\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid=0\n    local -i result=0\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( value <= ${list:mid:1} )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    result=$left\n    echo $result",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local left=0\n  local right=$((${#list} - 1))\n  local mid\n  while [ $left -le $right ]; do\n    mid=$((($left + $right) / 2))\n    if [ $value -gt ${list:$mid:1} ]; then\n      left=$((mid + 1))\n    else\n      right=$((mid - 1))\n    fi\n  done\n  echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local found=0\n    local left=0\n    local right=0\n    local mid=0\n    local len=0\n    len=$(echo \"$list\" | wc -w)\n    while [ $i -lt $len ]\n    do\n        i=$((i+1))\n        if [ $found -eq 0 ]\n        then\n            left=$((left+1))\n            right=$((right+1))\n            mid=$((left+right))\n            mid=$((mid/2))\n            if [ $mid -eq $i ]\n            then\n                found=1\n            fi\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local list_size=${#list}\n    local midpoint=0\n    local left_index=0\n    local right_index=$list_size\n    local midpoint_value=0\n    local left_value=0\n    local right_value=0\n\n    while [ $left_index -lt $right_index ]; do\n        midpoint=$(( (left_index + right_index) / 2 ))\n        midpoint_value=$(echo \"$list\" | cut -d' ' -f$((midpoint+1)))\n        left_value=$(echo \"$list\" | cut -d' ' -f$((left_index+1)))\n        right_value=$(echo \"$list\" | cut -d' ' -f$((right_index+1)))\n\n        if [ $midpoint_value -eq $value ]; then\n            echo $midpoint\n            return\n        elif [ $midpoint_value -gt $value ]; then\n            right_index=$midpoint\n        else\n            left_index=$((midpoint+1))\n        fi\n    done\n\n    echo $left_index",
    "    local -a array=($1)\n    local value=$2\n    local index=0\n\n    while [[ ${array[$index]} -lt $value ]]; do\n        ((index++))\n    done\n\n    echo $index",
    "    local -a arr=(\"${!1}\")\n    local val=$2\n    local l=0\n    local r=${#arr[@]}\n    local m\n    while (( l < r )); do\n        m=$(( (l+r)/2 ))\n        if (( val <= arr[m] )); then\n            r=$m\n        else\n            l=$(( m+1 ))\n        fi\n    done\n    echo $l",
    "    local -a list=($1)\n    local value=$2\n    local length=${#list[@]}\n    local middle=$((length / 2))\n    local index=0\n    local left=0\n    local right=$((length - 1))\n    while [ $index -lt $middle ]\n    do\n        if [ $value -le ${list[$middle]} ]\n        then\n            right=$((middle - 1))\n        else\n            left=$((middle + 1))\n        fi\n        middle=$(((left + right) / 2))\n        index=$((index + 1))\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ \"${list:$i:1}\" -gt \"$value\" ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    local mid=0\n    while [ $i -lt $j ]; do\n        mid=$(((i+j)/2))\n        if [ $value -lt ${list[$mid]} ]; then\n            j=$mid\n        else\n            i=$((mid+1))\n        fi\n    done\n    echo $i",
    "  local -a list=($1)\n  local value=$2\n  local i=0\n  local j=${#list[@]}\n  local mid=0\n  while [ $i -lt $j ]; do\n    mid=$(((i+j)/2))\n    if [ $value -lt ${list[$mid]} ]; then\n      j=$mid\n    else\n      i=$((mid+1))\n    fi\n  done\n  echo $i",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if (( i >= value )); then\n            break\n        fi\n        (( index++ ))\n    done\n    echo $index",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local -i i=0\n  local -i j=$(echo \"$list\" | wc -w)\n  local -i k\n  while ((i < j)); do\n    k=$(((i + j) / 2))\n    if ((value <= $(echo \"$list\" | cut -d' ' -f$((k + 1)))))\n    then\n      j=$k\n    else\n      i=$((k + 1))\n    fi\n  done\n  echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        if [[ ${list[mid]} -lt $value ]]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local len=${#list}\n  local i=0\n  local j=$((len-1))\n  local mid=0\n  while [ $i -le $j ]; do\n    mid=$(((i+j)/2))\n    if [ ${list[$mid]} -eq $value ]; then\n      while [ $mid -ge 0 ] && [ ${list[$mid]} -eq $value ]; do\n        mid=$((mid-1))\n      done\n      echo $((mid+1))\n      return\n    elif [ ${list[$mid]} -lt $value ]; then\n      i=$((mid+1))\n    else\n      j=$((mid-1))\n    fi\n  done\n  echo $i",
    "    local list=$1\n    local value=$2\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i middle\n    while ((left < right)); do\n        middle=$((left + (right - left) / 2))\n        if ((list[middle] < value)); then\n            left=$((middle + 1))\n        else\n            right=$middle\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i mid=0\n    local -i found=0\n    local -i i=0\n    local -i j=0\n\n    # Binary search\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        elif (( list[mid] > value )); then\n            right=$(( mid - 1 ))\n        else\n            found=1\n            break\n        fi\n    done\n\n    # If the value is not found, left is the insertion point\n    if (( ! found )); then\n        echo $left\n        return\n    fi\n\n    # Find the leftmost insertion point\n    for (( i = mid; i >= 0; i-- )); do\n        if (( list[i] == value )); then\n            echo $i\n            return\n        fi\n    done",
    "    local -a list=($1)\n    local value=$2\n    local low=0\n    local high=${#list[@]}\n    local mid=0\n    while [[ $low -lt $high ]]; do\n        mid=$(( (low + high) / 2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            low=$(( mid + 1 ))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "    local -a array=($1)\n    local value=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((array[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=$(( ${#list[@]} - 1 ))\n    local mid=0\n    while [[ $i -lt $j ]]; do\n        mid=$(( (i + j) / 2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            i=$(( mid + 1 ))\n        else\n            j=$(( mid - 1 ))\n        fi\n    done\n    if [[ ${list[$i]} -lt $value ]]; then\n        echo $(( i + 1 ))\n    else\n        echo $i\n    fi",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list[$i]} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a array\n    local -i i\n    local -i left\n    local -i right\n    local -i mid\n    local -i value\n    array=($1)\n    value=$2\n    left=0\n    right=${#array[@]}\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((array[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local middle\n    while [[ $left -lt $right ]]; do\n        middle=$((($left + $right) / 2))\n        if [[ ${list[$middle]} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local val=$2\n    local left=0\n    local right=${#arr[@]}\n    local mid\n    while (( left < right )); do\n        mid=$(( (left+right)/2 ))\n        if (( arr[mid] < val )); then\n            left=$(( mid+1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    local found=false\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            index=$((index + 1))\n        else\n            found=true\n            break\n        fi\n    done\n    if [ $found = false ]; then\n        echo \"Not found\"\n    else\n        echo $index\n    fi",
    "    local -a array=($1)\n    local value=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i middle\n    while ((left < right)); do\n        middle=$((left + (right - left) / 2))\n        if ((array[middle] < value)); then\n            left=$((middle + 1))\n        else\n            right=$middle\n        fi\n    done\n    echo $left",
    "    local -a array\n    local -i i\n    local -i l\n    local -i r\n    local -i m\n    local -i val\n    local -i result\n\n    array=($1)\n    val=$2\n    l=0\n    r=${#array[@]}\n    result=-1\n    while ((l < r)); do\n        m=$(((l + r) / 2))\n        if ((val <= array[m])); then\n            r=$m\n        else\n            l=$((m + 1))\n        fi\n    done\n    if ((l < ${#array[@]})); then\n        if ((val == array[l])); then\n            result=$l\n        fi\n    fi\n    echo $result",
    "    local list=$1\n    local value=$2\n    local i=0\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid))\n        fi\n    done\n    echo $left",
    "  local -a list=($1)\n  local value=$2\n  local len=${#list[@]}\n  local left=0\n  local right=$((len - 1))\n  local mid\n  while [[ $left -lt $right ]]; do\n    mid=$(((left + right) / 2))\n    if [[ ${list[$mid]} -lt $value ]]; then\n      left=$((mid + 1))\n    else\n      right=$((mid - 1))\n    fi\n  done\n  echo $left",
    "    local -a list\n    local -i i\n    local -i n\n    local -i mid\n    local -i low\n    local -i high\n    list=($1)\n    n=${#list[@]}\n    low=0\n    high=$((n-1))\n    while ((low <= high)); do\n        mid=$(((low + high) / 2))\n        if ((list[mid] < $2)); then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n    echo $low",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local i=0\n  local left=0\n  local right=$((${#list} - 1))\n  local mid=0\n  while [ $left -le $right ]; do\n    mid=$((($left + $right) / 2))\n    if [ $value -lt ${list:$mid:1} ]; then\n      right=$((mid - 1))\n    else\n      left=$((mid + 1))\n    fi\n  done\n  echo $left",
    "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i m=0\n    local -i x=$2\n    local -i y=0\n    local -i z=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i l=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ $value -lt ${list:$mid:1} ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo $list | cut -d' ' -f$((mid + 1)))\n        if [[ $mid_value -eq $value ]]; then\n            break\n        elif [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [[ $left -eq $right ]]; then\n        mid=$left\n    fi\n    echo $mid",
    "    local -a array=($1)\n    local value=$2\n    local i=0\n    local j=${#array[@]}\n    while ((i < j)); do\n        local mid=$((i + (j - i) / 2))\n        if ((array[mid] < value)); then\n            i=$((mid + 1))\n        else\n            j=$mid\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local left=0\n    local right=$(echo \"$list\" | wc -w)\n    local mid=$(( (left + right) / 2 ))\n    local mid_value=$(echo \"$list\" | cut -d ' ' -f $mid)\n\n    while [ $left -lt $right ]; do\n        if [ $mid_value -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n        mid=$(( (left + right) / 2 ))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $mid)\n    done\n\n    echo $mid",
    "    local -n arr=$1\n    local n=$2\n    local i=0\n    local j=${#arr[@]}\n    while ((i < j)); do\n        local m=$((i + (j - i) / 2))\n        if ((n <= arr[m])); then\n            j=$m\n        else\n            i=$((m + 1))\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$(( ${#list} - 1 ))\n    local -i mid\n    while (( left <= right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid - 1 ))\n        fi\n    done\n    echo $left",
    "    local -a array\n    local -i i=0\n    local -i len=0\n    local -i mid=0\n    local -i low=0\n    local -i high=0\n    local -i value=$2\n    IFS=' ' read -r -a array <<< \"$1\"\n    len=${#array[@]}\n    low=0\n    high=$((len-1))\n    while ((low <= high)); do\n        mid=$(((low+high)/2))\n        if ((array[mid] < value)); then\n            low=$((mid+1))\n        elif ((array[mid] > value)); then\n            high=$((mid-1))\n        else\n            echo $mid\n            return 0\n        fi\n    done\n    echo $low\n    return 0",
    "    local -a array\n    local -i i=0\n    local -i len=0\n    local -i mid=0\n    local -i left=0\n    local -i right=0\n    local -i target=$2\n    IFS=' ' read -r -a array <<< \"$1\"\n    len=${#array[@]}\n    right=$len\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( array[mid] < target )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ $value -lt ${list[$i]} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "  local list=$1\n  local value=$2\n  local length=${#list[@]}\n  local left=0\n  local right=$((length - 1))\n  local mid=0\n  while [[ $left -lt $right ]]; do\n    mid=$(((left + right) / 2))\n    if [[ ${list[mid]} -lt $value ]]; then\n      left=$((mid + 1))\n    else\n      right=$((mid - 1))\n    fi\n  done\n  echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        ((i++))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local left=0\n    local right=$((${#list} - 1))\n    while [ $left -lt $right ]; do\n        i=$((($left + $right) / 2))\n        if [ ${list:$i:1} -lt $value ]; then\n            left=$((i + 1))\n        else\n            right=$i\n        fi\n    done\n    echo $left",
    "  local -a arr=($1)\n  local val=$2\n  local i=0\n  local j=${#arr[@]}\n  local mid=0\n  while [ $i -lt $j ]; do\n    mid=$(((i+j)/2))\n    if [ $val -le ${arr[$mid]} ]; then\n      j=$mid\n    else\n      i=$((mid+1))\n    fi\n  done\n  echo $i",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((list[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a arr=($1)\n    local len=${#arr[@]}\n    local value=$2\n    local i=0\n    local j=$((len - 1))\n    local mid=0\n    while [[ $i -lt $j ]]; do\n        mid=$((i + (j - i) / 2))\n        if [[ ${arr[$mid]} -lt $value ]]; then\n            i=$((mid + 1))\n        else\n            j=$((mid))\n        fi\n    done\n    echo $i",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  local j=0\n  local len=0\n  local mid=0\n  local list_arr=()\n  local list_arr_len=0\n  local list_arr_mid=0\n  local list_arr_mid_value=0\n  local list_arr_mid_value_prev=0\n  local list_arr_mid_value_next=0\n  local list_arr_mid_value_prev_index=0\n  local list_arr_mid_value_next_index=0\n  local list_arr_mid_value_prev_index_value=0\n  local list_arr_mid_value_next_index_value=0\n  local list_arr_mid_value_prev_index_value_prev=0\n  local list_arr_mid_value_next_index_value_next=0\n  local list_arr_mid_value_prev_index_value_prev_index=0\n  local list_arr_mid_value_next_index_value_next_index=0\n  local list_arr_mid_value_prev_index_value_prev_index_value=0\n  local list_arr_mid_value_next_index_value_next_index_value=0\n  local list_arr_mid_value_prev_index_value_prev_index_value_prev=0\n  local list_arr_mid_value_next_index_value_next_index_value_next=0\n  local list_arr_mid_value_prev_index_value_prev_index_value_prev_index=0\n  local list_arr_mid_value_next_index_value_next_index_value_next_index=0\n  local list_arr_mid_value_prev_index_value_prev_index_value_prev_index_value=0\n  local list_arr_mid_value_next_index_value_next_index_value_next_index_value=0\n  local list_arr_mid_value_prev_index_value_prev_index_value_prev_index_value_prev=0\n  local list",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list[$i]} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a arr=($1)\n    local len=${#arr[@]}\n    local val=$2\n    local i=0\n    local j=$((len-1))\n    local mid=0\n    while ((i<=j)); do\n        mid=$(((i+j)/2))\n        if ((val<=arr[mid])); then\n            j=$((mid-1))\n        else\n            i=$((mid+1))\n        fi\n    done\n    echo $i",
    "  local list=\"$1\"\n  local n=\"$2\"\n  local i=0\n  local left_insertion_point=0\n  for i in $list; do\n    if [[ $i -lt $n ]]; then\n      ((left_insertion_point++))\n    fi\n  done\n  echo $left_insertion_point",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local result=0\n  for i in $list; do\n    if [ \"$i\" -lt \"$value\" ]; then\n      result=$((result+1))\n    fi\n  done\n  echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid=0\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if [[ \"${list[mid]}\" -lt \"$value\" ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo \"$left\"",
    "    local -a array\n    local -i i\n    local -i low\n    local -i high\n    local -i mid\n    local -i value\n    array=($1)\n    value=$2\n    low=0\n    high=${#array[@]}-1\n    while (( low <= high )); do\n        mid=$(( (low+high)/2 ))\n        if (( array[mid] < value )); then\n            low=$(( mid+1 ))\n        elif (( array[mid] > value )); then\n            high=$(( mid-1 ))\n        else\n            while (( array[mid] == value && mid > 0 )); do\n                mid=$(( mid-1 ))\n            done\n            echo $mid\n            return\n        fi\n    done\n    echo $low",
    "    local -a array=($1)\n    local value=$2\n    local index=0\n    local length=${#array[@]}\n    while (( index < length ))\n    do\n        if (( array[index] >= value ))\n        then\n            break\n        fi\n        (( index++ ))\n    done\n    echo $index",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i len=${#list}\n    local -i left=0\n    local -i right=$len\n    local -i mid=0\n    local -i found=0\n    local -i result=0\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ $value -eq ${list:$mid:1} ]; then\n            found=1\n            break\n        elif [ $value -lt ${list:$mid:1} ]; then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    if [ $found -eq 1 ]; then\n        result=$mid\n    else\n        result=$left\n    fi\n    echo $result",
    "    local -a array=($1)\n    local value=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    while [[ $low -lt $high ]]; do\n        mid=$(( (low + high) / 2 ))\n        if [[ ${array[$mid]} -lt $value ]]; then\n            low=$(( mid + 1 ))\n        else\n            high=$(( mid ))\n        fi\n    done\n    echo $low",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local list_length=$(echo \"$list\" | wc -w)\n\n    while [ $index -lt $list_length ]; do\n        local current_value=$(echo \"$list\" | cut -d ' ' -f $((index + 1)))\n        if [ $current_value -ge $value ]; then\n            echo $index\n            return\n        fi\n        index=$((index + 1))\n    done\n    echo $list_length",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list[@]} - 1))\n    local mid=0\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid=0\n    local -i result=0\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ \"${list[mid]}\" -lt \"$value\" ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    result=$left\n    echo $result",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i middle=0\n    while (( left < right )); do\n        middle=$(( (left + right) / 2 ))\n        if (( list[middle] < value )); then\n            left=$(( middle + 1 ))\n        else\n            right=$middle\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$(((left+right)/2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid+1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( value <= list[mid] )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  local left=0\n  local right=0\n  local mid=0\n  local len=0\n  local list_array=()\n  local list_array_len=0\n\n  # Split the list into an array\n  IFS=' ' read -r -a list_array <<< \"$list\"\n  list_array_len=${#list_array[@]}\n\n  # Binary search\n  left=0\n  right=$((list_array_len - 1))\n  while [[ $left -lt $right ]]; do\n    mid=$(((left + right) / 2))\n    if [[ ${list_array[mid]} -lt $value ]]; then\n      left=$((mid + 1))\n    else\n      right=$((mid))\n    fi\n  done\n\n  echo $left",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i val\n    arr=($1)\n    len=${#arr[@]}\n    val=$2\n    left=0\n    right=$len-1\n    while [ $left -lt $right ]; do\n        mid=$(( (left+right)/2 ))\n        if [ ${arr[$mid]} -lt $val ]; then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "  local -a list=($1)\n  local value=$2\n  local left=0\n  local right=${#list[@]}\n  while (( left < right )); do\n    local mid=$(( (left + right) / 2 ))\n    if (( value <= list[mid] )); then\n      right=$mid\n    else\n      left=$(( mid + 1 ))\n    fi\n  done\n  echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list[@]}\n    while (( left < right )); do\n        local -i mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local -a list=($1)\n  local value=$2\n  local low=0\n  local high=${#list[@]}\n  local mid=0\n  while [ $low -lt $high ]; do\n    mid=$(( (low + high) / 2 ))\n    if [ ${list[$mid]} -lt $value ]; then\n      low=$(( mid + 1 ))\n    else\n      high=$mid\n    fi\n  done\n  echo $low",
    "  local -a array\n  local -i i\n  local -i left\n  local -i right\n  local -i mid\n  local -i value\n  local -i result\n  array=($1)\n  value=$2\n  left=0\n  right=${#array[@]}-1\n  while ((left<=right)); do\n    mid=$(((left+right)/2))\n    if ((value<array[mid])); then\n      right=$((mid-1))\n    elif ((value>array[mid])); then\n      left=$((mid+1))\n    else\n      result=$mid\n      break\n    fi\n  done\n  if ((left>right)); then\n    result=$left\n  fi\n  echo $result",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local left_index=0\n    local right_index=0\n    local mid_index=0\n    local mid_value=0\n    local list_length=0\n\n    list_length=$(echo \"$list\" | wc -w)\n    right_index=$((list_length - 1))\n\n    while [[ $left_index -le $right_index ]]; do\n        mid_index=$(((left_index + right_index) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid_index + 1)))\n\n        if [[ $mid_value -eq $value ]]; then\n            index=$mid_index\n            break\n        elif [[ $mid_value -gt $value ]]; then\n            right_index=$((mid_index - 1))\n        else\n            left_index=$((mid_index + 1))\n        fi\n    done\n\n    echo $index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d' ' -f$((mid + 1)))\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    mid_value=$(echo \"$list\" | cut -d' ' -f$((mid + 1)))\n    if [ $mid_value -lt $value ]; then\n        echo $((mid + 1))\n    else\n        echo $mid\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "  local -a array=($1)\n  local value=$2\n  local left=0\n  local right=${#array[@]}\n  local mid\n  while ((left < right)); do\n    mid=$((left + (right - left) / 2))\n    if ((array[mid] < value)); then\n      left=$((mid + 1))\n    else\n      right=$mid\n    fi\n  done\n  echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local left=0\n  local right=\"$(echo \"$list\" | wc -w)\"\n  local mid\n  while (( left < right )); do\n    mid=$(( (left + right) / 2 ))\n    if (( value <= $(echo \"$list\" | cut -d' ' -f\"$mid\") )); then\n      right=$mid\n    else\n      left=$(( mid + 1 ))\n    fi\n  done\n  echo \"$left\"",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local result=0\n    for i in $list; do\n        if [ $i -ge $value ]; then\n            break\n        fi\n        result=$((result+1))\n    done\n    echo $result",
    "  local -a array=( $1 )\n  local value=$2\n  local i=0\n  local j=${#array[@]}\n  while [[ i -lt j ]]; do\n    local k=$(( (i + j) / 2 ))\n    if [[ ${array[k]} -lt $value ]]; then\n      i=$(( k + 1 ))\n    else\n      j=$k\n    fi\n  done\n  echo $i",
    "    local -a list\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i val\n    local -i retval\n\n    list=($1)\n    len=${#list[@]}\n    val=$2\n\n    left=0\n    right=$len-1\n\n    while [ $left -le $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ $val -le ${list[$mid]} ]; then\n            right=$mid-1\n        else\n            left=$mid+1\n        fi\n    done\n\n    retval=$left\n\n    echo $retval",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local index=0\n  for i in $list; do\n    if [ $i -lt $value ]; then\n      index=$((index+1))\n    else\n      break\n    fi\n  done\n  echo $index",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((list[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a array=(\"${@:1:$#-1}\")\n    local value=$2\n    local -i left=0\n    local -i right=$#-2\n    local -i mid\n    while left < right; do\n        mid=$(((left+right)/2))\n        if [[ ${array[mid]} -lt $value ]]; then\n            left=$((mid+1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [[ $mid_value -eq $value ]]; then\n            break\n        elif [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [[ $mid_value -lt $value ]]; then\n        echo $((mid + 1))\n    else\n        echo $mid\n    fi",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  local len=${#list[@]}\n  while [ $i -lt $len ]; do\n    if [ ${list[$i]} -gt $value ]; then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $len",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local left=0\n  local right=$((${#list} - 1))\n  local mid\n  while [ $left -le $right ]; do\n    mid=$((($left + $right) / 2))\n    if [ $value -lt ${list:$mid:1} ]; then\n      right=$((mid - 1))\n    else\n      left=$((mid + 1))\n    fi\n  done\n  echo $left",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ] && [ ${list[$i]} -lt $value ]; do\n        ((i++))\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ ${list[$mid]} -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local middle=0\n    local middle_value=0\n\n    while [[ $left -le $right ]]; do\n        middle=$((($left + $right) / 2))\n        middle_value=${list[$middle]}\n\n        if [[ $middle_value -eq $value ]]; then\n            echo $middle\n            return\n        elif [[ $middle_value -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n\n    echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  local left=0\n  local right=0\n  local mid=0\n  local found=0\n  local list_len=0\n\n  list_len=$(echo \"$list\" | wc -w)\n  right=$((list_len - 1))\n\n  while [[ $left -le $right ]]; do\n    mid=$(((left + right) / 2))\n    if [[ $value -eq $(echo \"$list\" | cut -d' ' -f$((mid + 1))) ]]; then\n      found=1\n      break\n    elif [[ $value -lt $(echo \"$list\" | cut -d' ' -f$((mid + 1))) ]]; then\n      right=$((mid - 1))\n    else\n      left=$((mid + 1))\n    fi\n  done\n\n  if [[ $found -eq 1 ]]; then\n    echo \"$mid\"\n  else\n    echo \"$left\"\n  fi",
    "  local -a list=($1)\n  local value=$2\n  local len=${#list[@]}\n  local mid=$((len/2))\n  local left=0\n  local right=$((len-1))\n  local found=0\n  local index=0\n\n  while [ $left -le $right ] && [ $found -eq 0 ]; do\n    if [ $value -lt ${list[$mid]} ]; then\n      right=$((mid-1))\n    elif [ $value -gt ${list[$mid]} ]; then\n      left=$((mid+1))\n    else\n      found=1\n      index=$mid\n    fi\n    mid=$(((left+right)/2))\n  done\n\n  if [ $found -eq 0 ]; then\n    if [ $value -lt ${list[$mid]} ]; then\n      index=$mid\n    else\n      index=$((mid+1))\n    fi\n  fi\n\n  echo $index",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local left=0\n    local right=$((${#list} - 1))\n    local middle=0\n    local mid_value=0\n\n    while [[ $left -le $right ]]; do\n        middle=$((($left + $right) / 2))\n        mid_value=$(echo $list | cut -d' ' -f$((middle + 1)))\n        if [[ $mid_value -eq $value ]]; then\n            echo $middle\n            return\n        elif [[ $mid_value -gt $value ]]; then\n            right=$((middle - 1))\n        else\n            left=$((middle + 1))\n        fi\n    done\n    echo $left",
    "    local -a arr\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -i dddd\n    local -i eeee\n    local -i f",
    "    local -a list\n    local -i i\n    local -i n\n    local -i m\n    local -i l\n    local -i r\n    local -i mid\n    local -i value\n    list=($1)\n    n=${#list[@]}\n    value=$2\n    l=0\n    r=$((n-1))\n    while ((l<r)); do\n        mid=$(((l+r)/2))\n        if ((value>list[mid])); then\n            l=$((mid+1))\n        else\n            r=$((mid))\n        fi\n    done\n    echo $l",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [[ $i -lt $len ]]; do\n        if [[ ${list[$i]} -ge $value ]]; then\n            echo $i\n            return\n        fi\n        ((i++))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=0\n    local mid=0\n    local len=0\n    local i=0\n    local num=0\n    local arr=()\n    local arr_len=0\n\n    # Convert $list to an array\n    IFS=' ' read -r -a arr <<< \"$list\"\n    arr_len=${#arr[@]}\n\n    # Find the length of $list\n    for i in ${arr[@]}; do\n        let len++\n    done\n\n    # Find the left insertion point\n    right=$((len - 1))\n    while [ $left -le $right ]; do\n        mid=$(((left + right) / 2))\n        num=${arr[$mid]}\n        if [ $num -eq $value ]; then\n            echo \"$mid\"\n            return 0\n        elif [ $num -gt $value ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n\n    echo \"$left\"\n    return 0",
    "    local -n arr=$1\n    local x=$2\n    local i=0\n    local j=${#arr[@]}\n    while (( i < j )); do\n        local k=$(( (i+j)/2 ))\n        if (( arr[k] < x )); then\n            i=$(( k+1 ))\n        else\n            j=$k\n        fi\n    done\n    echo $i",
    "  local -a arr=($1)\n  local n=$2\n  local i=0\n  local j=${#arr[@]}\n  local k=0\n  while ((i < j)); do\n    k=$(((i + j) / 2))\n    if ((arr[k] < n)); then\n      i=$((k + 1))\n    else\n      j=$k\n    fi\n  done\n  echo $i",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            index=$((index+1))\n        fi\n    done\n    echo $index",
    "    local list=$1\n    local value=$2\n    local i=0\n    local j=0\n    local found=0\n    local left=0\n    local right=0\n    local mid=0\n    local len=0\n    local list_arr=()\n    local list_arr_len=0\n\n    # Convert list to array\n    IFS=' ' read -r -a list_arr <<< \"$list\"\n    list_arr_len=${#list_arr[@]}\n\n    # Binary search\n    left=0\n    right=$((list_arr_len - 1))\n    while [ $left -le $right ]; do\n        mid=$(((left + right) / 2))\n        if [ $value -eq ${list_arr[$mid]} ]; then\n            found=1\n            break\n        elif [ $value -lt ${list_arr[$mid]} ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n\n    # If found, find left insertion point\n    if [ $found -eq 1 ]; then\n        while [ $mid -ge 0 ]; do\n            if [ $value -eq ${list_arr[$mid]} ]; then\n                mid=$((mid - 1))\n            else\n                break\n            fi\n        done\n    fi\n\n    echo $((mid + 1))",
    "    local -a list=($1)\n    local value=$2\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i mid=0\n    local -i result=0\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ ${list[mid]} -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    result=$left\n    echo $result",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local -a array=($1)\n    local value=$2\n    local left=0\n    local right=${#array[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(((left + right) / 2))\n        if [[ ${array[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i middle\n    while [[ $left -lt $right ]]; do\n        middle=$((($left + $right) / 2))\n        if [[ ${list:$middle:1} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$middle\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            index=$((index+1))\n        else\n            break\n        fi\n    done\n    echo $index",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i left=0\n    local -i right=$len\n    local -i mid=0\n    local -i val=$2\n\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( arr[mid] < val )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local index=0\n  local found=0\n  for i in $list; do\n    if [[ $i -eq $value ]]; then\n      found=1\n      break\n    fi\n    if [[ $i -gt $value ]]; then\n      break\n    fi\n    index=$((index+1))\n  done\n  if [[ $found -eq 0 ]]; then\n    echo $index\n  else\n    echo -1\n  fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list[@]}\n    local mid=$((len / 2))\n    local left=0\n    local right=$((len - 1))\n\n    while [ $left -lt $right ]; do\n        if [ $value -le ${list[$mid]} ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n        mid=$((left + (right - left) / 2))\n    done\n    echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  for item in $list; do\n    if [ $item -ge $value ]; then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $i",
    "    local -a list\n    local -i i\n    local -i left\n    local -i right\n    local -i mid\n    local -i val\n\n    list=($1)\n    val=$2\n\n    left=0\n    right=${#list[@]}-1\n\n    while ((left <= right)); do\n        mid=$(((left+right)/2))\n        if ((val < list[mid])); then\n            right=$((mid-1))\n        elif ((val > list[mid])); then\n            left=$((mid+1))\n        else\n            while ((mid > 0 && list[mid-1] == val)); do\n                ((mid--))\n            done\n            echo $mid\n            return\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local index=0\n  for i in $list; do\n    if [ $i -lt $value ]; then\n      index=$((index+1))\n    fi\n  done\n  echo $index",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i middle\n    local -i result\n    while [[ left -lt right ]]; do\n        middle=$(( (left + right) / 2 ))\n        if [[ \"${list[middle]}\" -lt \"$value\" ]]; then\n            left=$(( middle + 1 ))\n        else\n            right=$(( middle ))\n        fi\n    done\n    result=$left\n    echo $result",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i target\n    IFS=' ' read -r -a arr <<< \"$1\"\n    len=${#arr[@]}\n    target=$2\n    left=0\n    right=$((len-1))\n    while ((left<=right)); do\n        mid=$(((left+right)/2))\n        if ((arr[mid]<target)); then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local target=$2\n    local left=0\n    local right=${#arr[@]}\n    local mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( arr[mid] < target )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local -a list=($1)\n  local -i n=${#list[@]}\n  local -i i=0\n  local -i value=$2\n  local -i left=0\n  local -i right=$((n-1))\n  local -i mid=0\n  while [[ $left -lt $right ]]; do\n    mid=$(((left+right)/2))\n    if [[ ${list[$mid]} -lt $value ]]; then\n      left=$((mid+1))\n    else\n      right=$mid\n    fi\n  done\n  echo $left",
    "  local -a array=(\"${!1}\")\n  local value=$2\n  local i=0\n  local j=${#array[@]}\n  while ((i < j)); do\n    local mid=$(((i + j) / 2))\n    if ((array[mid] < value)); then\n      i=$((mid + 1))\n    else\n      j=$mid\n    fi\n  done\n  echo $i",
    "  local list=$1\n  local value=$2\n  local i=0\n  local len=${#list}\n  while [ $i -lt $len ]; do\n    if [ $value -le ${list:$i:1} ]; then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    local mid_value\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [[ $mid_value -eq $value ]]; then\n            left=$mid\n            break\n        elif [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local value=$2\n    local low=0\n    local high=${#arr[@]}\n    local mid=0\n    while [[ $low -lt $high ]]; do\n        mid=$((low + (high - low) / 2))\n        if [[ ${arr[$mid]} -lt $value ]]; then\n            low=$((mid + 1))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$(((left + right) / 2))\n        if [[ ${list[mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [ $i -ge $value ]; then\n            break\n        fi\n        index=$((index+1))\n    done\n    echo $index",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( array[mid] < $2 )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local left=0\n  local right=$(( $(echo \"$list\" | wc -w) - 1 ))\n  local mid\n  local mid_value\n\n  while [[ $left -le $right ]]; do\n    mid=$(( (left + right) / 2 ))\n    mid_value=$(echo \"$list\" | cut -d ' ' -f $(( mid + 1 )))\n    if [[ $mid_value -eq $value ]]; then\n      echo $mid\n      return\n    elif [[ $mid_value -lt $value ]]; then\n      left=$(( mid + 1 ))\n    else\n      right=$(( mid - 1 ))\n    fi\n  done\n\n  echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -gt $value ]; then\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    local mid_value\n\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=${list:$mid:1}\n        if [ $mid_value -eq $value ]; then\n            while [ $mid -gt 0 ] && [ ${list:$((mid - 1)):1} -eq $value ]; do\n                mid=$((mid - 1))\n            done\n            echo $mid\n            return\n        elif [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local val=$2\n    local left=0\n    local right=${#arr[@]}\n    local mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( val <= arr[mid] )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local list_len=${#list[@]}\n    local mid=0\n    local mid_value=0\n    local left=0\n    local right=$((list_len - 1))\n\n    while [[ $left -lt $right ]]; do\n        mid=$(((left + right) / 2))\n        mid_value=${list[$mid]}\n        if [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    if [[ ${list[$left]} -lt $value ]]; then\n        echo $((left + 1))\n    else\n        echo $left\n    fi",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ $value -le ${list[$mid]} ]; then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local -a arr=(\"$@\")\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local -i key=$2\n\n    for ((i=1; i<len; i++))\n    do\n        temp=${arr[i]}\n        j=$((i-1))\n        while ((j>=0 && arr[j]>temp))\n        do\n            arr[j+1]=${arr[j]}\n            j=$((j-1))\n        done\n        arr[j+1]=$temp\n    done\n\n    for ((k=0; k<len; k++))\n    do\n        if ((arr[k]>=key))\n        then\n            echo $k\n            break\n        fi\n    done",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local i=0\n  local n=${#list[@]}\n  local result=-1\n  while [ $i -lt $n ]; do\n    if [ ${list[$i]} -lt $value ]; then\n      result=$i\n    else\n      break\n    fi\n    i=$((i + 1))\n  done\n  echo $result",
    "    local -a arr=($1)\n    local target=$2\n    local len=${#arr[@]}\n    local left=0\n    local right=$((len-1))\n    local mid=0\n    local result=0\n\n    while [ $left -le $right ]; do\n        mid=$(((left+right)/2))\n        if [ ${arr[$mid]} -lt $target ]; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    result=$left\n    echo $result",
    "    local -a arr\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i x=0\n    local -i y=0\n    arr=($1)\n    n=${#arr[@]}\n    x=$2\n    y=$((n-1))\n    while ((i<=y)); do\n        j=$((i+y))\n        k=$((j/2))\n        if ((x<arr[k])); then\n            y=$((k-1))\n        elif ((x>arr[k])); then\n            i=$((k+1))\n        else\n            echo $k\n            return\n        fi\n    done\n    echo $i",
    "    local -a array\n    local -i i\n    local -i n\n    local -i x\n    local -i l\n    local -i r\n    local -i m\n    array=($1)\n    n=${#array[@]}\n    x=$2\n    l=0\n    r=$((n-1))\n    while ((l <= r)); do\n        m=$(((l+r)/2))\n        if ((x < array[m])); then\n            r=$((m-1))\n        else\n            l=$((m+1))\n        fi\n    done\n    echo $l",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  for item in $list; do\n    if [ $item -ge $value ]; then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $i",
    "  local -a array=(\"$@\")\n  local value=$2\n  local left=0\n  local right=${#array[@]}\n  local mid\n  while [[ $left -lt $right ]]; do\n    mid=$(( (left + right) / 2 ))\n    if [[ ${array[$mid]} -lt $value ]]; then\n      left=$(( mid + 1 ))\n    else\n      right=$mid\n    fi\n  done\n  echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ \"${list:$i:1}\" -ge \"$value\" ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    echo \"$left\"",
    "  local -a list=($1)\n  local value=$2\n  local -i left=0\n  local -i right=${#list[@]}\n  local -i mid\n  while ((left < right)); do\n    mid=$((left + (right - left) / 2))\n    if ((list[mid] < value)); then\n      left=$((mid + 1))\n    else\n      right=$mid\n    fi\n  done\n  echo $left",
    "  local -a list=($1)\n  local value=$2\n  local i=0\n  local len=${#list[@]}\n  local mid=0\n  local left=0\n  local right=$((len-1))\n  while [ $left -lt $right ]; do\n    mid=$(((left+right)/2))\n    if [ ${list[$mid]} -lt $value ]; then\n      left=$((mid+1))\n    else\n      right=$((mid))\n    fi\n  done\n  echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local middle=0\n    while [[ $left -le $right ]]; do\n        middle=$((($left + $right) / 2))\n        if [[ ${list:$middle:1} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local n=${#list[@]}\n    while [[ $i -lt $n ]]; do\n        if [[ ${list[$i]} -ge $value ]]; then\n            echo $i\n            return\n        fi\n        ((i++))\n    done\n    echo $n"
  ]
}
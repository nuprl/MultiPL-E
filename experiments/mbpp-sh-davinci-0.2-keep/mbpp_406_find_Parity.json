{
  "name": "mbpp_406_find_Parity",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find whether the parity of a given number is odd.\n#\n# $1 is an integer\nfind_Parity() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_406_find_Parity.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_Parity \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\") = \"false\" ]]\n    [[ $(candidate \"7\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $(( $1 % 2 )) -eq 0 ]\n    then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is an even number\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is an odd number\"\n    elif [ $1 -lt 0 ]; then\n        echo \"Negative numbers are not allowed\"\n    else\n        if [ $(($1 % 2)) -eq 0 ]; then\n            echo \"$1 is an even number\"\n        else\n            echo \"$1 is an odd number\"\n        fi\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"Odd\"\n    else\n        find_Parity $(( $1 / 2 ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Parity is even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"Parity is odd\"\n    else\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"Parity is even\"\n        else\n            echo \"Parity is odd\"\n        fi\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"Odd\"\n    else\n        echo \"Invalid\"\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"Even\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"Odd\"\n    else\n        echo \"Invalid\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is even\"\n    elif [ $1 -gt 0 ]; then\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is even\"\n        else\n            echo \"$1 is odd\"\n        fi\n    else\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is even\"\n        else\n            echo \"$1 is odd\"\n        fi\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is an even number\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is an odd number\"\n    else\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is an even number\"\n        else\n            echo \"$1 is an odd number\"\n        fi\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"even\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"odd\"\n    else\n        echo \"invalid\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is odd\"\n    elif [ $1 -eq 2 ]; then\n        echo \"2 is even\"\n    elif [ $1 -eq 3 ]; then\n        echo \"3 is odd\"\n    elif [ $1 -eq 4 ]; then\n        echo \"4 is even\"\n    elif [ $1 -eq 5 ]; then\n        echo \"5 is odd\"\n    elif [ $1 -eq 6 ]; then\n        echo \"6 is even\"\n    elif [ $1 -eq 7 ]; then\n        echo \"7 is odd\"\n    elif [ $1 -eq 8 ]; then\n        echo \"8 is even\"\n    elif [ $1 -eq 9 ]; then\n        echo \"9 is odd\"\n    elif [ $1 -eq 10 ]; then\n        echo \"10 is even\"\n    elif [ $1 -eq 11 ]; then\n        echo \"11 is odd\"\n    elif [ $1 -eq 12 ]; then\n        echo \"12 is even\"\n    elif [ $1 -eq 13 ]; then\n        echo \"13 is odd\"\n    elif [ $1 -eq 14 ]; then\n        echo \"14 is even\"\n    elif [ $1 -eq 15 ]; then\n        echo \"15 is odd\"\n    elif [ $1 -eq 16 ]; then\n        echo \"16 is even\"\n    elif [ $1 -eq 17 ]; then\n        echo \"17 is odd\"\n    elif [ $1 -eq 18 ]; then\n        echo \"18 is even\"\n    elif [ $1 -eq 19 ]; then\n        echo \"19 is odd\"\n    elif [ $1 -eq 20 ]; then\n        echo \"20 is even\"\n    elif [ $1 -eq 21 ]; then\n        echo \"21 is odd\"\n    elif [ $1 -eq 22 ]; then\n        echo \"22 is even\"\n    elif [ $1 -eq 23 ]; then\n        echo \"23 is odd\"\n    elif [ $1 -eq 24 ]; then\n        echo \"24 is even\"\n    elif [ $1 -eq 25 ]; then\n",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is odd\"\n    else\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is even\"\n        else\n            echo \"$1 is odd\"\n        fi\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Parity is even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"Parity is odd\"\n    else\n        echo \"Invalid input\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is an even number\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is an odd number\"\n    elif [ $1 -gt 1 ]; then\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is an even number\"\n        else\n            echo \"$1 is an odd number\"\n        fi\n    else\n        echo \"Please enter a positive number\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is an even number\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is an odd number\"\n    elif [ $1 -lt 0 ]; then\n        find_Parity $((-$1))\n    else\n        find_Parity $(( $1 - 2 ))\n    fi",
    "    if [ $1 -eq 0 ]\n    then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi"
  ]
}
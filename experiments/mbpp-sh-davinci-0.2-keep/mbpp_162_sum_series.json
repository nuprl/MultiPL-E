{
  "name": "mbpp_162_sum_series",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n#\n# $1 is an integer\nsum_series() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sum_series \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"12\" ]]\n    [[ $(candidate \"10\") = \"30\" ]]\n    [[ $(candidate \"9\") = \"25\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -ge $i ]\n  do\n    sum=$((sum + n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $((n-2*i)) -ge 0 ]; do\n        sum=$((sum+n-2*i))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $((n - 2*i)) -gt 0 ]; do\n        sum=$((sum + n - 2*i))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while (( n-2*i >= 0 )); do\n        (( sum += n-2*i ))\n        (( i++ ))\n    done\n    echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n\n    while [ $n -ge 0 ]; do\n        sum=$((sum + n))\n        n=$((n - 2))\n    done\n\n    echo $sum",
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -ge 0 ]; do\n    sum=$((sum + n))\n    n=$((n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $((n - 2*i)) -gt 0 ]; do\n        sum=$((sum + n - 2*i))\n        i=$((i+1))\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  for ((i=0; i<=n/2; i++)); do\n    sum=$((sum + n - 2*i))\n  done\n  echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $((n-2*i)) -gt 0 ]; do\n        sum=$((sum+n-2*i))\n        i=$((i+1))\n    done\n    echo $sum",
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -ge 0 ]; do\n    sum=$((sum + n))\n    n=$((n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "\tlocal n=$1\n\tlocal i=0\n\tlocal sum=0\n\twhile [ $((n-2*i)) -gt 0 ]; do\n\t\tsum=$((sum+n-2*i))\n\t\ti=$((i+1))\n\tdone\n\techo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $((n-2*i)) -gt 0 ]; do\n        sum=$((sum+n-2*i))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $n -ge 0 ]; do\n        sum=$((sum + n))\n        n=$((n - 2*i))\n        i=$((i + 1))\n    done\n    echo $sum",
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -ge 0 ]; do\n    sum=$((sum + n))\n    n=$((n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -ge 0 ]; do\n    sum=$((sum + n))\n    n=$((n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $((n - 2*i)) -gt 0 ]; do\n    sum=$((sum + n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "  n=$1\n  i=0\n  sum=0\n  while [ $n -ge 0 ]; do\n    sum=$((sum + n))\n    n=$((n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=0; i<=n/2; i++ )); do\n        sum=$(( sum + n - 2*i ))\n    done\n    echo $sum",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $((n - 2*i)) -gt 0 ]; do\n        sum=$((sum + n - 2*i))\n        i=$((i + 1))\n    done\n    echo $sum",
    "  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -ge 0 ]; do\n    sum=$((sum + n))\n    n=$((n - 2*i))\n    i=$((i + 1))\n  done\n  echo $sum"
  ]
}
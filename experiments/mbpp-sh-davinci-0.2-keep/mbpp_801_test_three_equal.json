{
  "name": "mbpp_801_test_three_equal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to count the number of equal numbers from three given integers.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\ntest_three_equal() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    test_three_equal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"1\" \"1\") = \"3\" ]]\n    [[ $(candidate \"-1\" \"-2\" \"-3\") = \"0\" ]]\n    [[ $(candidate \"1\" \"2\" \"2\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local num1=$1\n  local num2=$2\n  local num3=$3\n  local count=0\n  if [[ $num1 -eq $num2 ]]; then\n    count=$((count+1))\n  fi\n  if [[ $num2 -eq $num3 ]]; then\n    count=$((count+1))\n  fi\n  if [[ $num1 -eq $num3 ]]; then\n    count=$((count+1))\n  fi\n  echo $count",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local count=0\n    if [[ $a -eq $b ]]; then\n        count=$((count+1))\n    fi\n    if [[ $a -eq $c ]]; then\n        count=$((count+1))\n    fi\n    if [[ $b -eq $c ]]; then\n        count=$((count+1))\n    fi\n    echo $count",
    "    python -c \"print(int($1 == $2 and $2 == $3))\"",
    "    python -c \"print(int($1 == $2 and $2 == $3))\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local count=0\n    if [ $a -eq $b ]; then\n        count=$((count+1))\n    fi\n    if [ $a -eq $c ]; then\n        count=$((count+1))\n    fi\n    if [ $b -eq $c ]; then\n        count=$((count+1))\n    fi\n    echo $count",
    "    python -c \"\nfrom __future__ import print_function\nimport sys\n\ndef count_equal(a, b, c):\n    if a == b and b == c:\n        return 3\n    elif a == b or b == c or a == c:\n        return 2\n    else:\n        return 0\n\nprint(count_equal($1, $2, $3))\n\"",
    "    python -c \"print(int($1 == $2 and $2 == $3))\"",
    "    python -c \"print(int($1 == $2 and $2 == $3))\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local result=0\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        result=3\n    elif [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        result=2\n    fi\n    echo $result",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local result=0\n  if [ $x -eq $y ] && [ $y -eq $z ]; then\n    result=3\n  elif [ $x -eq $y ] || [ $y -eq $z ] || [ $x -eq $z ]; then\n    result=2\n  fi\n  echo $result",
    "  local num1=$1\n  local num2=$2\n  local num3=$3\n  local count=0\n\n  if [ $num1 -eq $num2 ]; then\n    count=$((count+1))\n  fi\n\n  if [ $num1 -eq $num3 ]; then\n    count=$((count+1))\n  fi\n\n  if [ $num2 -eq $num3 ]; then\n    count=$((count+1))\n  fi\n\n  echo $count",
    "    python -c \"print(int($1 == $2 and $2 == $3))\"",
    "    python3 -c \"print(int($1 == $2 and $2 == $3))\"",
    "    python -c \"print(int($1 == $2 and $2 == $3))\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo 3\n    elif [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        echo 2\n    else\n        echo 0\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local count=0\n\n  if [ $a -eq $b ]; then\n    ((count++))\n  fi\n\n  if [ $a -eq $c ]; then\n    ((count++))\n  fi\n\n  if [ $b -eq $c ]; then\n    ((count++))\n  fi\n\n  echo $count",
    "    python3 -c \"print(int($1 == $2 and $2 == $3))\"",
    "    python -c \"\nimport sys\n\ndef three_equal(a, b, c):\n    return a == b == c\n\nprint(three_equal($1, $2, $3))\n\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local result=0\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        result=3\n    elif [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        result=2\n    fi\n    echo $result",
    "    python -c \"print(int($1 == $2 and $2 == $3))\""
  ]
}
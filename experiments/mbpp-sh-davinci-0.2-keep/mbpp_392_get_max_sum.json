{
  "name": "mbpp_392_get_max_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\n#\n# $1 is an integer\nget_max_sum() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    get_max_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"60\") = \"106\" ]]\n    [[ $(candidate \"10\") = \"12\" ]]\n    [[ $(candidate \"2\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i+j+k+l))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n    local max_sum_array_index=0\n    local max_sum_array_size=0\n    local max_sum_array_size_limit=10\n    local max_sum_array_size_limit_reached=0\n    local max_sum_array_size_limit_reached_index=0\n    local max_sum_array_size_limit_reached_sum=0\n    local max_sum_array_size_limit_reached_max_sum=0\n    local max_sum_array_size_limit_reached_max_sum_index=0\n    local max_sum_array_size_limit_reached_max_sum_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_index=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum_index=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum_max_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum_max_sum_index=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum_max_sum_sum=0\n    local max_sum_array_size_limit_reached_max_sum_max_sum_max_sum_max_sum_max_sum=0\n    local max_sum_array_size_limit",
    "    local n=$1\n    local sum=0\n    local divisors=(2 3 4 5)\n    for divisor in ${divisors[@]}; do\n        local quotient=$((n / divisor))\n        if [ $quotient -gt 0 ]; then\n            sum=$((sum + $(get_max_sum $quotient)))\n        fi\n    done\n    if [ $sum -gt $n ]; then\n        echo $sum\n    else\n        echo $n\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for (( i=2; i<=5; i++ )); do\n        sum=$(( $n/$i ))\n        sum=$(get_max_sum $sum)\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $(( $n + $max_sum )) -gt $n ]]; then\n        echo $(( $n + $max_sum ))\n    else\n        echo $n\n    fi",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_list=()\n  local max_sum_list_index=0\n\n  if [ $n -lt 0 ]; then\n    echo \"Invalid input\"\n    return 1\n  fi\n\n  if [ $n -eq 0 ]; then\n    echo \"0\"\n    return 0\n  fi\n\n  if [ $n -eq 1 ]; then\n    echo \"1\"\n    return 0\n  fi\n\n  for i in $(seq 2 5); do\n    sum=$(($n/$i))\n    max_sum_list[$max_sum_list_index]=$(get_max_sum $sum)\n    max_sum_list_index=$(($max_sum_list_index+1))\n  done\n\n  max_sum=$(echo ${max_sum_list[*]} | tr \" \" \"\\n\" | sort -nr | head -n 1)\n  max_sum=$(($max_sum+$n))\n\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i + j + k + l))\n          if [ $sum -eq $n ]; then\n            sum=$((i + j + k + l))\n            if [ $sum -gt $max_sum ]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n    local max_sum_array_index=0\n    local max_sum_array_size=0\n    local max_sum_array_size_index=0\n    local max_sum_array_size_index_value=0\n    local max_sum_array_size_index_value_index=0\n    local max_sum_array_size_index_value_index_value=0\n    local max_sum_array_size_index_value_index_value_index=0\n    local max_sum_array_size_index_value_index_value_index_value=0\n    local max_sum_array_size_index_value_index_value_index_value_index=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n    local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n\n    if [[ $n -lt 0 ]]; then\n        echo \"Error: n must be a positive integer\"\n        return 1\n    fi\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return 0\n    fi\n\n    for i in {2..5}; do\n        sum=$(get_max_sum $((n / i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $((max_sum + n)) -gt $((n * 5)) ]]; then\n        echo $((max_sum + n))\n    else\n        echo $((n * 5))\n    fi",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=$n\n    local max_sum=$n\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        for (( j=1; j<=$n; j++ )); do\n            for (( k=1; k<=$n; k++ )); do\n                for (( l=1; l<=$n; l++ )); do\n                    for (( m=1; m<=$n; m++ )); do\n                        sum=$(( $i + $j + $k + $l + $m ))\n                        if [ $sum -eq $n ]; then\n                            if [ $max_sum -lt $(( $i + $j + $k + $l + $m )) ]; then\n                                max_sum=$(( $i + $j + $k + $l + $m ))\n                                max_i=$i\n                                max_j=$j\n                                max_k=$k\n                                max_l=$l\n                                max_m=$m\n                                max_n=$n\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo \"Max sum is $max_sum for n=$max_n, i=$max_i, j=$max_j, k=$max_k, l=$max_l, m=$max_m\"",
    "  local n=$1\n  local max_sum=0\n  if [[ $n -le 0 ]]; then\n    echo 0\n    return\n  fi\n  if [[ $n -le 5 ]]; then\n    echo $n\n    return\n  fi\n  for (( i=2; i<=5; i++ )); do\n    local sum=$(get_max_sum $(( n / i )))\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n    fi\n  done\n  echo $(( max_sum + n ))",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_n=0\n  local max_sum_n_2=0\n  local max_sum_n_3=0\n  local max_sum_n_4=0\n  local max_sum_n_5=0\n  local max_sum_n_2_3=0\n  local max_sum_n_2_4=0\n  local max_sum_n_2_5=0\n  local max_sum_n_3_4=0\n  local max_sum_n_3_5=0\n  local max_sum_n_4_5=0\n  local max_sum_n_2_3_4=0\n  local max_sum_n_2_3_5=0\n  local max_sum_n_2_4_5=0\n  local max_sum_n_3_4_5=0\n  local max_sum_n_2_3_4_5=0\n\n  if [[ $n -le 0 ]]; then\n    echo 0\n    return\n  fi\n\n  if [[ $n -eq 1 ]]; then\n    echo 1\n    return\n  fi\n\n  max_sum_n=$n\n  max_sum_n_2=$(get_max_sum $((n/2)))\n  max_sum_n_3=$(get_max_sum $((n/3)))\n  max_sum_n_4=$(get_max_sum $((n/4)))\n  max_sum_n_5=$(get_max_sum $((n/5)))\n  max_sum_n_2_3=$((max_sum_n_2 + max_sum_n_3))\n  max_sum_n_2_4=$((max_sum_n_2 + max_sum_n_4))\n  max_sum_n_2_5=$((max_sum_n_2 + max_sum_n_5))\n  max_sum_n_3_4=$((max_sum_n_3 + max_sum_n_4))\n  max_sum_n_3_5",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  if [ $n -lt 0 ]; then\n    echo \"Error: n must be a positive integer\"\n    exit 1\n  fi\n  if [ $n -eq 0 ]; then\n    echo 0\n    return\n  fi\n  if [ $n -eq 1 ]; then\n    echo 1\n    return\n  fi\n  if [ $n -eq 2 ]; then\n    echo 2\n    return\n  fi\n  if [ $n -eq 3 ]; then\n    echo 3\n    return\n  fi\n  if [ $n -eq 4 ]; then\n    echo 4\n    return\n  fi\n  if [ $n -eq 5 ]; then\n    echo 5\n    return\n  fi\n  for i in 2 3 4 5; do\n    sum=$(get_max_sum $(($n/$i)))\n    if [ $sum -gt $max_sum ]; then\n      max_sum=$sum\n    fi\n  done\n  if [ $max_sum -gt $n ]; then\n    echo $max_sum\n  else\n    echo $n\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for ((i=0; i<=n; i+=2)); do\n        for ((j=0; j<=n; j+=3)); do\n            for ((k=0; k<=n; k+=4)); do\n                for ((l=0; l<=n; l+=5)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -le $n ]]; then\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i+j+k+l+m))\n                        if [ $sum -eq $n ]; then\n                            sum=$((i/2+j/3+k/4+l/5+m))\n                            if [ $sum -gt $max_sum ]; then\n                                max_sum=$sum\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        n_div_2=$((n/2))\n                        n_div_3=$((n/3))\n                        n_div_4=$((n/4))\n                        n_div_5=$((n/5))\n                        sum=$((i+j+k+l+m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n/2; i++)); do\n        for ((j=0; j<=n/3; j++)); do\n            for ((k=0; k<=n/4; k++)); do\n                for ((l=0; l<=n/5; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        max_sum=$((max_sum+i+j+k+l))\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_n=0\n    local max_sum_n_1=0\n    local max_sum_n_2=0\n    local max_sum_n_3=0\n    local max_sum_n_4=0\n    local max_sum_n_5=0\n\n    if [ $n -lt 0 ]; then\n        echo \"Invalid input\"\n        return\n    fi\n\n    if [ $n -eq 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -eq 1 ]; then\n        echo 1\n        return\n    fi\n\n    if [ $n -eq 2 ]; then\n        echo 2\n        return\n    fi\n\n    if [ $n -eq 3 ]; then\n        echo 3\n        return\n    fi\n\n    if [ $n -eq 4 ]; then\n        echo 4\n        return\n    fi\n\n    if [ $n -eq 5 ]; then\n        echo 5\n        return\n    fi\n\n    max_sum_n_1=$(get_max_sum $((n-1)))\n    max_sum_n_2=$(get_max_sum $((n-2)))\n    max_sum_n_3=$(get_max_sum $((n-3)))\n    max_sum_n_4=$(get_max_sum $((n-4)))\n    max_sum_n_5=$(get_max_sum $((n-5)))\n\n    max_sum=$((max_sum_n_1 + max_sum_n_2 + max_sum_n_3 + max_sum_n_4 + max_sum_n_5))\n\n    if [ $max_sum -lt $n ]; then\n        echo $n\n    else\n        echo $max_sum\n    fi",
    "    local n=$1\n    local max_sum\n    if [[ $n -le 0 ]]; then\n        max_sum=0\n    elif [[ $n -le 5 ]]; then\n        max_sum=$n\n    else\n        local sum1=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n        local sum2=$n\n        if [[ $sum1 -gt $sum2 ]]; then\n            max_sum=$sum1\n        else\n            max_sum=$sum2\n        fi\n    fi\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for (( i=0; i<=n; i++ )); do\n        for (( j=0; j<=n; j++ )); do\n            for (( k=0; k<=n; k++ )); do\n                for (( l=0; l<=n; l++ )); do\n                    for (( m=0; m<=n; m++ )); do\n                        sum=$(( i + j + k + l + m ))\n                        if [[ $sum -eq $n ]]; then\n                            sum=$(( i + j + k + l + m ))\n                            if [[ $sum -gt $max_sum ]]; then\n                                max_sum=$sum\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_div_2=0\n  local n_div_3=0\n  local n_div_4=0\n  local n_div_5=0\n\n  for i in $(seq 1 $n); do\n    n_div_2=$((i/2))\n    n_div_3=$((i/3))\n    n_div_4=$((i/4))\n    n_div_5=$((i/5))\n    for j in $(seq 1 $n_div_2); do\n      for k in $(seq 1 $n_div_3); do\n        for l in $(seq 1 $n_div_4); do\n          for m in $(seq 1 $n_div_5); do\n            sum=$((j+k+l+m))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          done\n        done\n      done\n    done\n  done\n\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=$((n/2))\n    local n_div_3=$((n/3))\n    local n_div_4=$((n/4))\n    local n_div_5=$((n/5))\n    for i in $(seq 0 $n_div_2); do\n        for j in $(seq 0 $n_div_3); do\n            for k in $(seq 0 $n_div_4); do\n                for l in $(seq 0 $n_div_5); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        m=$((i+j+k+l))\n                        if [ $m -gt $max_sum ]; then\n                            max_sum=$m\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for i in $(seq 2 5); do\n        sum=$(( $n / $i ))\n        max_sum=$(( $max_sum + $(get_max_sum $sum) ))\n    done\n\n    if [[ $max_sum -lt $n ]]; then\n        echo $n\n    else\n        echo $max_sum\n    fi",
    "  local n=$1\n  local sum=0\n  local half=$((n/2))\n  local third=$((n/3))\n  local fourth=$((n/4))\n  local fifth=$((n/5))\n  local half_sum=$(get_max_sum $half)\n  local third_sum=$(get_max_sum $third)\n  local fourth_sum=$(get_max_sum $fourth)\n  local fifth_sum=$(get_max_sum $fifth)\n  local max_sum=$((half_sum + third_sum + fourth_sum + fifth_sum))\n  if [[ $max_sum -gt $n ]]; then\n    sum=$max_sum\n  else\n    sum=$n\n  fi\n  echo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tlocal max_sum=0\n\tlocal max_sum_array=()\n\tlocal max_sum_array_index=0\n\tlocal max_sum_array_size=0\n\tlocal max_sum_array_size_index=0\n\tlocal max_sum_array_size_max=0\n\tlocal max_sum_array_size_max_index=0\n\tlocal max_sum_array_size_max_index_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal max_sum_array_size_max_index_prev_prev_prev_prev_prev",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_half=$((n/2))\n  local n_third=$((n/3))\n  local n_fourth=$((n/4))\n  local n_fifth=$((n/5))\n\n  for i in $(seq 0 $n_half); do\n    for j in $(seq 0 $n_third); do\n      for k in $(seq 0 $n_fourth); do\n        for l in $(seq 0 $n_fifth); do\n          sum=$((i + j + k + l))\n          if [ $sum -le $n ]; then\n            m=$((n - sum))\n            sum=$((sum + m))\n            if [ $sum -gt $max_sum ]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max=0\n  local max_sum=0\n  local i=0\n\n  if [[ $n -le 0 ]]; then\n    echo 0\n    return\n  fi\n\n  if [[ $n -lt 5 ]]; then\n    echo $n\n    return\n  fi\n\n  for (( i=1; i<=5; i++ )); do\n    sum=$(get_max_sum $((n/i)))\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n    fi\n  done\n\n  if [[ $n -gt $max_sum ]]; then\n    max_sum=$n\n  fi\n\n  echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local i=0\n\n  if [[ $n -le 0 ]]; then\n    echo \"0\"\n    return\n  fi\n\n  for ((i=2; i<=5; i++)); do\n    sum=$(($n/$i))\n    max_sum=$(($max_sum + $(get_max_sum $sum)))\n  done\n\n  if [[ $max_sum -lt $n ]]; then\n    echo \"$n\"\n  else\n    echo \"$max_sum\"\n  fi",
    "    local n=$1\n    local max_sum=0\n    local temp_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    local max_sum=0\n    for ((i=1; i<=n; i++)); do\n        for ((j=1; j<=n; j++)); do\n            for ((k=1; k<=n; k++)); do\n                for ((l=1; l<=n; l++)); do\n                    for ((m=1; m<=n; m++)); do\n                        temp_sum=$((i+j+k+l+m))\n                        if [ $temp_sum -gt $max_sum ]; then\n                            max_sum=$temp_sum\n                            max_i=$i\n                            max_j=$j\n                            max_k=$k\n                            max_l=$l\n                            max_m=$m\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo \"max_sum: $max_sum\"\n    echo \"max_i: $max_i\"\n    echo \"max_j: $max_j\"\n    echo \"max_k: $max_k\"\n    echo \"max_l: $max_l\"\n    echo \"max_m: $max_m\"",
    "    local n=$1\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local max=0\n    local max_sum=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_n=0\n    local max_sum_n=0\n    local max_sum_i=0\n    local max_sum_j=0\n    local max_sum_k=0\n    local max_sum_l=0\n    local max_sum_n=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i + j + k + l))\n                    if [[ $sum -eq $n ]]; then\n                        max=$((i + j + k + l))\n                        if [[ $max -gt $max_sum ]]; then\n                            max_sum=$max\n                            max_i=$i\n                            max_j=$j\n                            max_k=$k\n                            max_l=$l\n                            max_n=$n\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo \"max_sum: $max_sum\"\n    echo \"max_i: $max_i\"\n    echo \"max_j: $max_j\"\n    echo \"max_k: $max_k\"\n    echo \"max_l: $max_l\"\n    echo \"max_n: $max_n\"",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n\n    if [[ $n -le 0 ]]; then\n        echo \"Please enter a positive integer\"\n        return 1\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return 0\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        sum=$(( $(get_max_sum $((n/i))) + $(get_max_sum $((n%i))) ))\n        max_sum_array+=($sum)\n    done\n\n    max_sum=$(printf \"%s\\n\" \"${max_sum_array[@]}\" | sort -nr | head -1)\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    local max_sum=0\n    local max_sum_n=0\n    local max_sum_i=0\n    local max_sum_j=0\n    local max_sum_k=0\n    local max_sum_l=0\n    local max_sum_m=0\n    local max_sum_n=0\n    local max_sum_i_j=0\n    local max_sum_j_k=0\n    local max_sum_k_l=0\n    local max_sum_l_m=0\n    local max_sum_m_n=0\n    local max_sum_i_j_k=0\n    local max_sum_j_k_l=0\n    local max_sum_k_l_m=0\n    local max_sum_l_m_n=0\n    local max_sum_i_j_k_l=0\n    local max_sum_j_k_l_m=0\n    local max_sum_k_l_m_n=0\n    local max_sum_i_j_k_l_m=0\n    local max_sum_j_k_l_m_n=0\n    local max_sum_i_j_k_l_m_n=0\n    local max_sum_i_j_k_l_m_n_o=0\n    local max_sum_j_k_l_m_n_o=0\n    local max_sum_k_l_m_n_o=0\n    local max_sum_l_m_n_o=0\n    local max_sum_m_n_o=0\n    local max_sum_n_o=0\n    local max_sum_o=0\n    local max",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_div_2=0\n  local n_div_3=0\n  local n_div_4=0\n  local n_div_5=0\n\n  if [[ $n -eq 0 ]]; then\n    echo 0\n    return\n  fi\n\n  if [[ $n -eq 1 ]]; then\n    echo 1\n    return\n  fi\n\n  if [[ $n -eq 2 ]]; then\n    echo 2\n    return\n  fi\n\n  if [[ $n -eq 3 ]]; then\n    echo 3\n    return\n  fi\n\n  if [[ $n -eq 4 ]]; then\n    echo 4\n    return\n  fi\n\n  if [[ $n -eq 5 ]]; then\n    echo 5\n    return\n  fi\n\n  n_div_2=$(( n / 2 ))\n  n_div_3=$(( n / 3 ))\n  n_div_4=$(( n / 4 ))\n  n_div_5=$(( n / 5 ))\n\n  i=$(get_max_sum $n_div_2)\n  j=$(get_max_sum $n_div_3)\n  k=$(get_max_sum $n_div_4)\n  l=$(get_max_sum $n_div_5)\n  m=$(( i + j + k + l ))\n\n  if [[ $m -gt $n ]]; then\n    max_sum=$m\n  else\n    max_sum=$n\n  fi\n\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for i in $(seq 0 $n); do\n        for j in $(seq 0 $n); do\n            for k in $(seq 0 $n); do\n                for l in $(seq 0 $n); do\n                    sum=$(($i+$j+$k+$l))\n                    if [ $sum -eq $n ]; then\n                        sum=$(($i/2+$j/3+$k/4+$l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    if [[ $n -le 0 ]]; then\n        return 0\n    fi\n\n    for (( i=0; i<=n; i++ )); do\n        for (( j=0; j<=n; j++ )); do\n            for (( k=0; k<=n; k++ )); do\n                for (( l=0; l<=n; l++ )); do\n                    for (( m=0; m<=n; m++ )); do\n                        sum=$(( i + j + k + l + m ))\n                        if [[ $sum -eq $n ]]; then\n                            max=$(( i + j + k + l + m ))\n                            if [[ $max -gt $max_sum ]]; then\n                                max_sum=$max\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local temp=0\n    local temp_sum=0\n    local max_sum_array=()\n    local max_sum_array_index=0\n    local max_sum_array_size=0\n    local max_sum_array_temp=0\n    local max_sum_array_temp_index=0\n    local max_sum_array_temp_size=0\n    local max_sum_array_temp_temp=0\n    local max_sum_array_temp_temp_index=0\n    local max_sum_array_temp_temp_size=0\n    local max_sum_array_temp_temp_temp=0\n    local max_sum_array_temp_temp_temp_index=0\n    local max_sum_array_temp_temp_temp_size=0\n    local max_sum_array_temp_temp_temp_temp=0\n    local max_sum_array_temp_temp_temp_temp_index=0\n    local max_sum_array_temp_temp_temp_temp_size=0\n    local max_sum_array_temp_temp_temp_temp_temp=0\n    local max_sum_array_temp_temp_temp_temp_temp_index=0\n    local max_sum_array_temp_temp_temp_temp_temp_size=0\n    local max_sum_array_temp_temp_temp_temp_temp_temp=0\n    local max_sum_array_temp_temp_temp_temp_temp_temp_index=0\n    local max_sum_array_temp_temp_temp_temp_temp_temp_size=0\n    local max_sum_array_temp_temp_temp_temp_temp_temp_temp=0\n    local max_sum_array_temp_temp_temp_temp_temp_temp_temp_index=0\n    local max_sum_array_temp_temp_temp_temp_temp_temp_temp_size=0\n    local max_sum_array",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_div_2=0\n  local n_div_3=0\n  local n_div_4=0\n  local n_div_5=0\n\n  if [[ $n -le 0 ]]; then\n    echo 0\n    return\n  fi\n\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          for ((m=0; m<=n; m++)); do\n            n_div_2=$((i + j + k + l + m))\n            n_div_3=$((i + j + k + l + m))\n            n_div_4=$((i + j + k + l + m))\n            n_div_5=$((i + j + k + l + m))\n            sum=$((n_div_2 + n_div_3 + n_div_4 + n_div_5))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          done\n        done\n      done\n    done\n  done\n\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if ((sum > max_sum)); then\n                            max_sum=$sum\n                            max_i=$i\n                            max_j=$j\n                            max_k=$k\n                            max_l=$l\n                            max_m=$m\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo \"max_sum = $max_sum\"\n    echo \"max_i = $max_i\"\n    echo \"max_j = $max_j\"\n    echo \"max_k = $max_k\"\n    echo \"max_l = $max_l\"\n    echo \"max_m = $max_m\"",
    "    local n=$1\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n    local max_sum=$n\n    local sum=0\n    for i in 2 3 4 5; do\n        sum=$(get_max_sum $(($n/$i)))\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n    echo $max_sum",
    "    local -i n=$1\n    local -i sum=0\n    local -i max_sum=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_div_2=0\n    local -i n_div_3=0\n    local -i n_div_4=0\n    local -i n_div_5=0\n    local -i max_sum_div_2=0\n    local -i max_sum_div_3=0\n    local -i max_sum_div_4=0\n    local -i max_sum_div_5=0\n\n    if (( n < 0 )); then\n        echo \"Error: n must be a positive integer\"\n        return 1\n    fi\n\n    if (( n == 0 )); then\n        echo \"0\"\n        return 0\n    fi\n\n    if (( n == 1 )); then\n        echo \"1\"\n        return 0\n    fi\n\n    if (( n == 2 )); then\n        echo \"2\"\n        return 0\n    fi\n\n    if (( n == 3 )); then\n        echo \"3\"\n        return 0\n    fi\n\n    if (( n == 4 )); then\n        echo \"4\"\n        return 0\n    fi\n\n    if (( n == 5 )); then\n        echo \"5\"\n        return 0\n    fi\n\n    for (( i=0; i<=n; i++ )); do\n        for (( j=0; j<=n; j++ )); do\n            for (( k=0; k<=n; k++ )); do\n                for (( l=0; l<=n; l++ )); do\n                    for (( m=0; m<=n; m++ )); do\n                        n_div_2=$(( n/2 ))\n                        n_div_3=$(( n/3 ))\n                        n_div_4=$(( n/4 ))\n                        n_div_5=$(( n/5 ))\n                        max_sum_div_2=$(get_max_sum $n_div_2)\n                        max_sum_div_3=$(get_max_sum $n_div_",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_arr=()\n  local max_sum_arr_len=0\n  local max_sum_arr_index=0\n  local max_sum_arr_index_len=0\n  local max_sum_arr_index_len_arr=()\n  local max_sum_arr_index_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr=()\n  local max_sum_arr_index_len_arr_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr_len_arr=()\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr=()\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr=()\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr=()\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr=()\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr_len=0\n  local max_sum_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr_len_arr",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n    local n_div_2_sum=0\n    local n_div_3_sum=0\n    local n_div_4_sum=0\n    local n_div_5_sum=0\n    local n_sum=0\n    local max_sum_array=()\n    local sum_array=()\n    local max_sum_array_index=0\n    local sum_array_index=0\n    local max_sum_array_index_2=0\n    local sum_array_index_2=0\n    local max_sum_array_index_3=0\n    local sum_array_index_3=0\n    local max_sum_array_index_4=0\n    local sum_array_index_4=0\n    local max_sum_array_index_5=0\n    local sum_array_index_5=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for (( i=0; i<=n; i++ )); do\n        max_sum_array[$i]=0\n        sum_array[$i]=0\n    done\n\n    for (( i=1; i<=n; i++ )); do\n        n_div_2=$(( i/2 ))\n        n_div_3=$(( i/3 ))\n        n_div_4=$(( i/4 ))\n        n_div_5=$(( i/5 ))\n        n_div_2_sum=${sum_array[$n_div_2]}\n        n_div_3_sum=${sum_array[$n_div_3]}\n        n_div_4_sum=${sum_array[$n_div_4]}",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local sum_list=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local max_sum=0\n  local max_sum_list=()\n  local max_sum_list_size=0\n  local max_sum_list_index=0\n  local max_sum_list_index_list=()\n  local max_sum_list_index_list_size=0\n  local max_sum_list_index_list_index=0\n  local max_sum_list_index_list_index_list=()\n  local max_sum_list_index_list_index_list_size=0\n  local max_sum_list_index_list_index_list_index=0\n  local max_sum_list_index_list_index_list_index_list=()\n  local max_sum_list_index_list_index_list_index_list_size=0\n  local max_sum_list_index_list_index_list_index_list_index=0\n  local max_sum_list_index_list_index_list_index_list_index_list=()\n  local max_sum_list_index_list_index_list_index_list_index_list_size=0\n  local max_sum_list_index_list_index_list_index_list_index_list_index=0\n  local max_sum_list_index_list_index_list_index_list_index_list_index_list=()\n  local max_sum_list_index_list_index_list_index_list_index_list_index_list_size=0\n  local max_sum_list_index_list_index_list_index_list_index_list_index_list_index=0\n  local max_sum_list_index_list_index_list_index_list_index_list_index_list_index_list=()\n  local max_sum_list_index_list_index_list_index_list_index_list_index_list_index_list_size=0",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if ((sum == n)); then\n                        sum=$((i+j+k+l))\n                        if ((sum > max_sum)); then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i+j+k+l+m))\n                        if [[ $sum -eq $n ]]; then\n                            if [[ $((i/2+j/3+k/4+l/5+m)) -gt $max_sum ]]; then\n                                max_sum=$((i/2+j/3+k/4+l/5+m))\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_div_2=0\n  local n_div_3=0\n  local n_div_4=0\n  local n_div_5=0\n\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          for ((m=0; m<=n; m++)); do\n            n_div_2=$((n/2))\n            n_div_3=$((n/3))\n            n_div_4=$((n/4))\n            n_div_5=$((n/5))\n            sum=$((i+j+k+l+m))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          done\n        done\n      done\n    done\n  done\n\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n    local max_sum_array_index=0\n    local max_sum_array_size=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_divided_by_2=0\n    local n_divided_by_3=0\n    local n_divided_by_4=0\n    local n_divided_by_5=0\n    local max_sum_array_index_2=0\n    local max_sum_array_index_3=0\n    local max_sum_array_index_4=0\n    local max_sum_array_index_5=0\n    local max_sum_array_index_2_value=0\n    local max_sum_array_index_3_value=0\n    local max_sum_array_index_4_value=0\n    local max_sum_array_index_5_value=0\n    local max_sum_array_index_2_value_found=0\n    local max_sum_array_index_3_value_found=0\n    local max_sum_array_index_4_value_found=0\n    local max_sum_array_index_5_value_found=0\n    local max_sum_array_index_2_value_found_index=0\n    local max_sum_array_index_3_value_found_index=0\n    local max_sum_array_index_4_value_found_index=0\n    local max_sum_array_index_5_value_found_index=0\n    local max_sum_array_index_2_value_found_index_value=0\n    local max_sum_array_index_3_value_found_index_value=0\n    local max_sum_array_index_4_value_found_index_value=0\n    local max_sum_array_index_5_value_found_index_value=0\n    local max_sum_array_index_2_value_found",
    "  local n=$1\n  local sum=0\n  if [[ $n -gt 0 ]]; then\n    sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n    if [[ $sum -lt $n ]]; then\n      sum=$n\n    fi\n  fi\n  echo $sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0;i<=n;i++)); do\n        for ((j=0;j<=n;j++)); do\n            for ((k=0;k<=n;k++)); do\n                for ((l=0;l<=n;l++)); do\n                    for ((m=0;m<=n;m++)); do\n                        sum=$((i/2+j/3+k/4+l/5+m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local sum_2=0\n    local sum_3=0\n    local sum_4=0\n    local sum_5=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo 2\n        return\n    fi\n\n    if [[ $n -eq 3 ]]; then\n        echo 3\n        return\n    fi\n\n    if [[ $n -eq 4 ]]; then\n        echo 4\n        return\n    fi\n\n    if [[ $n -eq 5 ]]; then\n        echo 5\n        return\n    fi\n\n    sum_2=$(get_max_sum $((n/2)))\n    sum_3=$(get_max_sum $((n/3)))\n    sum_4=$(get_max_sum $((n/4)))\n    sum_5=$(get_max_sum $((n/5)))\n\n    sum=$((sum_2 + sum_3 + sum_4 + sum_5))\n\n    if [[ $sum -lt $n ]]; then\n        echo $n\n    else\n        echo $sum\n    fi",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n\n  if [[ $n -le 0 ]]; then\n    echo 0\n    return\n  fi\n\n  if [[ $n -le 5 ]]; then\n    echo $n\n    return\n  fi\n\n  for ((i=2; i<=5; i++)); do\n    sum=$(($(get_max_sum $(($n/$i))) + $(($n%$i))))\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n    fi\n  done\n\n  echo $max_sum",
    "\tlocal n=$1\n\tlocal max_sum=0\n\tlocal sum=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tfor ((i=0; i<=n; i++)); do\n\t\tfor ((j=0; j<=n; j++)); do\n\t\t\tfor ((k=0; k<=n; k++)); do\n\t\t\t\tfor ((l=0; l<=n; l++)); do\n\t\t\t\t\tfor ((m=0; m<=n; m++)); do\n\t\t\t\t\t\tsum=$((i+j+k+l+m))\n\t\t\t\t\t\tif [ $sum -gt $max_sum ]; then\n\t\t\t\t\t\t\tmax_sum=$sum\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tdone\n\t\t\tdone\n\t\tdone\n\tdone\n\techo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    for (( i=1; i<=n; i++ )); do\n        sum=$(( $i + $(( $i / 2 )) + $(( $i / 3 )) + $(( $i / 4 )) + $(( $i / 5 )) ))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n    echo $max_sum",
    "  local n=$1\n  if [[ $n -lt 0 ]]; then\n    echo \"ERROR: $n is not a positive integer\"\n    return 1\n  fi\n  if [[ $n -le 5 ]]; then\n    echo $n\n    return 0\n  fi\n  local n2=$((n/2))\n  local n3=$((n/3))\n  local n4=$((n/4))\n  local n5=$((n/5))\n  local sum=$((n2+n3+n4+n5))\n  if [[ $sum -gt $n ]]; then\n    echo $sum\n    return 0\n  else\n    echo $n\n    return 0\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i + j + k + l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i + j + k + l))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n\n    if [ $n -eq 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -eq 1 ]; then\n        echo 1\n        return\n    fi\n\n    if [ $n -eq 2 ]; then\n        echo 2\n        return\n    fi\n\n    if [ $n -eq 3 ]; then\n        echo 3\n        return\n    fi\n\n    if [ $n -eq 4 ]; then\n        echo 4\n        return\n    fi\n\n    if [ $n -eq 5 ]; then\n        echo 5\n        return\n    fi\n\n    local sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n    if [ $sum -gt $n ]; then\n        max_sum=$sum\n    else\n        max_sum=$n\n    fi\n\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i+j+k+l))\n          if [[ $sum -eq $n ]]; then\n            sum=$((i/2+j/3+k/4+l/5))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    if [ $1 -le 0 ]; then\n        echo 0\n    else\n        echo $1\n    fi",
    "  local n=$1\n  local half=$((n/2))\n  local third=$((n/3))\n  local fourth=$((n/4))\n  local fifth=$((n/5))\n  local sum=$((half + third + fourth + fifth))\n  if [[ $sum -gt $n ]]; then\n    echo $sum\n  else\n    echo $n\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=$n\n    local sum=0\n    for (( i=2; i<=5; i++ )); do\n        if (( n%i == 0 )); then\n            sum=$(( $(get_max_sum $((n/i))) + $((n/i)) ))\n            if (( sum > max_sum )); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_n=$n\n  local max_sum_n_1=$((n-1))\n  local max_sum_n_2=$((n-2))\n  local max_sum_n_3=$((n-3))\n  local max_sum_n_4=$((n-4))\n  local max_sum_n_5=$((n-5))\n  local max_sum_n_6=$((n-6))\n  local max_sum_n_7=$((n-7))\n  local max_sum_n_8=$((n-8))\n  local max_sum_n_9=$((n-9))\n  local max_sum_n_10=$((n-10))\n  local max_sum_n_11=$((n-11))\n  local max_sum_n_12=$((n-12))\n  local max_sum_n_13=$((n-13))\n  local max_sum_n_14=$((n-14))\n  local max_sum_n_15=$((n-15))\n  local max_sum_n_16=$((n-16))\n  local max_sum_n_17=$((n-17))\n  local max_sum_n_18=$((n-18))\n  local max_sum_n_19=$((n-19))\n  local max_sum_n_20=$((n-20))\n  local max_sum_n_21=$((n-21))\n  local max_sum_n_22=$((n-22))\n  local max_sum_n_23=$((n-23))\n  local max_sum_n_24=$((n-24))\n  local max_sum_n_25=$((n-25))\n  local max_sum_n_26=$((n-26))\n  local max_sum_n_27=$((n-27))\n  local max_sum_n_28=$((n-28))\n  local max_sum_n_29=$((n-29))\n  local max_sum_n_30=$((n-30))\n ",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_array=()\n  local max_sum_array_index=0\n  local max_sum_array_size=0\n  local max_sum_array_size_index=0\n  local max_sum_array_size_index_value=0\n  local max_sum_array_size_index_value_index=0\n  local max_sum_array_size_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value",
    "  if [[ $1 -le 0 ]]; then\n    echo 0\n  else\n    echo $(( $(get_max_sum $(( $1 / 2 ))) + $(get_max_sum $(( $1 / 3 ))) + $(get_max_sum $(( $1 / 4 ))) + $(get_max_sum $(( $1 / 5 ))) ))\n  fi",
    "    if [[ $1 -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    local max_sum=$1\n    local sum=0\n    for i in 2 3 4 5; do\n        sum=$(($1/$i))\n        sum=$(get_max_sum $sum)\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          for ((m=0; m<=n; m++)); do\n            sum=$((i/2 + j/3 + k/4 + l/5 + m))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          done\n        done\n      done\n    done\n  done\n\n  echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_array=()\n  local max_sum_array_index=0\n  local max_sum_array_length=0\n  local max_sum_array_length_index=0\n  local max_sum_array_length_index_value=0\n  local max_sum_array_length_index_value_sum=0\n  local max_sum_array_length_index_value_sum_max_sum=0\n  local max_sum_array_length_index_value_sum_max_sum_array=()\n  local max_sum_array_length_index_value_sum_max_sum_array_index=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value_sum=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value_sum_max_sum=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value_sum_max_sum_array=()\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value_sum_max_sum_array_index=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value_sum_max_sum_array_length=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index_value_sum_max_sum_array_length_index=0\n  local max_sum_array_length_index_value_sum_max_sum_array_length_index",
    "  local -i n=$1\n  local -i sum=0\n  local -i half=$((n/2))\n  local -i third=$((n/3))\n  local -i fourth=$((n/4))\n  local -i fifth=$((n/5))\n  if ((n < 12)); then\n    echo $n\n  else\n    sum=$((half+third+fourth+fifth))\n    if ((sum < n)); then\n      echo $n\n    else\n      echo $sum\n    fi\n  fi",
    "    local n=$1\n    local n2=$(($n/2))\n    local n3=$(($n/3))\n    local n4=$(($n/4))\n    local n5=$(($n/5))\n    local sum=$(($n2+$n3+$n4+$n5))\n    if [ $sum -gt $n ]; then\n        echo $sum\n    else\n        echo $n\n    fi",
    "  local n=$1\n  if [[ $n -eq 0 ]]; then\n    echo 0\n  elif [[ $n -eq 1 ]]; then\n    echo 1\n  else\n    local half=$((n/2))\n    local third=$((n/3))\n    local fourth=$((n/4))\n    local fifth=$((n/5))\n    local half_sum=$(get_max_sum $half)\n    local third_sum=$(get_max_sum $third)\n    local fourth_sum=$(get_max_sum $fourth)\n    local fifth_sum=$(get_max_sum $fifth)\n    local sum=$((half_sum + third_sum + fourth_sum + fifth_sum))\n    if [[ $sum -gt $n ]]; then\n      echo $sum\n    else\n      echo $n\n    fi\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if (( n == 0 )); then\n        echo 0\n        return\n    fi\n\n    if (( n < 5 )); then\n        echo $n\n        return\n    fi\n\n    for (( i=2; i<=5; i++ )); do\n        sum=$(get_max_sum $(( n / i )))\n        if (( sum > max_sum )); then\n            max_sum=$sum\n        fi\n    done\n\n    (( max_sum += n ))\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    local max_sum=$n\n    local sum=0\n    for i in 2 3 4 5; do\n        sum=$(get_max_sum $((n / i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    echo $((max_sum + n))",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i+j+k+l))\n          if [ $sum -eq $n ]; then\n            sum=$((i/2+j/3+k/4+l/5))\n            if [ $sum -gt $max_sum ]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=1; i<=n; i++)); do\n        for ((j=1; j<=n; j++)); do\n            for ((k=1; k<=n; k++)); do\n                for ((l=1; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i+j+k+l))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_list=()\n    local max_sum_list_index=0\n    local max_sum_list_size=0\n    local i=0\n    local j=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for ((i=1; i<=$n; i++)); do\n        if [[ $i -le 5 ]]; then\n            max_sum_list[$i]=$i\n            continue\n        fi\n\n        max_sum_list_size=${#max_sum_list[@]}\n        for ((j=1; j<=5; j++)); do\n            sum=$((max_sum_list[$((i/j))] + max_sum_list[$((i%j))]))\n            if [[ $sum -gt $max_sum ]]; then\n                max_sum=$sum\n            fi\n        done\n        max_sum_list[$i]=$max_sum\n        max_sum=0\n    done\n\n    echo ${max_sum_list[$n]}",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for i in $(seq 0 $n); do\n        for j in $(seq 0 $n); do\n            for k in $(seq 0 $n); do\n                for l in $(seq 0 $n); do\n                    for m in $(seq 0 $n); do\n                        sum=$((i + j + k + l + m))\n                        if [ $sum -eq $n ]; then\n                            if [ $((i + j + k + l + m)) -gt $max_sum ]; then\n                                max_sum=$((i + j + k + l + m))\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n\n  if [ $n -lt 0 ]; then\n    echo \"Error: n must be a positive integer\"\n    exit 1\n  fi\n\n  if [ $n -eq 0 ]; then\n    echo 0\n    return\n  fi\n\n  if [ $n -eq 1 ]; then\n    echo 1\n    return\n  fi\n\n  if [ $n -eq 2 ]; then\n    echo 2\n    return\n  fi\n\n  if [ $n -eq 3 ]; then\n    echo 3\n    return\n  fi\n\n  if [ $n -eq 4 ]; then\n    echo 4\n    return\n  fi\n\n  if [ $n -eq 5 ]; then\n    echo 5\n    return\n  fi\n\n  local n_2=$(($n / 2))\n  local n_3=$(($n / 3))\n  local n_4=$(($n / 4))\n  local n_5=$(($n / 5))\n\n  local max_sum_n_2=$(get_max_sum $n_2)\n  local max_sum_n_3=$(get_max_sum $n_3)\n  local max_sum_n_4=$(get_max_sum $n_4)\n  local max_sum_n_5=$(get_max_sum $n_5)\n\n  local max_sum_1=$(($max_sum_n_2 + $max_sum_n_3 + $max_sum_n_4 + $max_sum_n_5))\n  local max_sum_2=$n\n\n  if [ $max_sum_1 -gt $max_sum_2 ]; then\n    max_sum=$max_sum_1\n  else\n    max_sum=$max_sum_2\n  fi\n\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n\n    if [[ $n -le 0 ]]; then\n        echo \"0\"\n        return\n    fi\n\n    while [[ $i -lt $n ]]; do\n        sum=$(($sum + $i))\n        i=$(($i + 1))\n    done\n\n    max_sum=$(($sum + $n))\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        sum=$(( $(get_max_sum $((n/i))) + $(get_max_sum $((n%i))) ))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $max_sum -lt $n ]]; then\n        echo $n\n    else\n        echo $max_sum\n    fi",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_array=()\n  local max_sum_array_index=0\n  local max_sum_array_size=0\n  local max_sum_array_size_index=0\n  local max_sum_array_size_index_value=0\n\n  if [ $n -gt 0 ]; then\n    max_sum_array[$max_sum_array_index]=$n\n    max_sum_array_index=$(($max_sum_array_index + 1))\n  fi\n\n  while [ $n -gt 0 ]; do\n    sum=$(($n / 2 + $n / 3 + $n / 4 + $n / 5))\n    if [ $sum -gt $n ]; then\n      max_sum_array[$max_sum_array_index]=$sum\n      max_sum_array_index=$(($max_sum_array_index + 1))\n      n=$sum\n    else\n      n=0\n    fi\n  done\n\n  max_sum_array_size=${#max_sum_array[@]}\n  for (( max_sum_array_size_index=0; max_sum_array_size_index<$max_sum_array_size; max_sum_array_size_index++ )); do\n    max_sum_array_size_index_value=${max_sum_array[$max_sum_array_size_index]}\n    max_sum=$(($max_sum + $max_sum_array_size_index_value))\n  done\n\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n\n    if [[ $n -lt 0 ]]; then\n        echo \"ERROR: n must be a positive integer\"\n        exit 1\n    fi\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo 2\n        return\n    fi\n\n    if [[ $n -eq 3 ]]; then\n        echo 3\n        return\n    fi\n\n    if [[ $n -eq 4 ]]; then\n        echo 4\n        return\n    fi\n\n    if [[ $n -eq 5 ]]; then\n        echo 5\n        return\n    fi\n\n    n_div_2=$((n/2))\n    n_div_3=$((n/3))\n    n_div_4=$((n/4))\n    n_div_5=$((n/5))\n\n    i=$(get_max_sum $n_div_2)\n    j=$(get_max_sum $n_div_3)\n    k=$(get_max_sum $n_div_4)\n    l=$(get_max_sum $n_div_5)\n    m=$((i+j+k+l))\n\n    if [[ $m -gt $n ]]; then\n        max_sum=$m\n    else\n        max_sum=$n\n    fi\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for i in $(seq 0 $n); do\n        for j in $(seq 0 $n); do\n            for k in $(seq 0 $n); do\n                for l in $(seq 0 $n); do\n                    sum=$((i + j + k + l))\n                    if [ $sum -eq $n ]; then\n                        max_sum=$((max_sum + i + j + k + l))\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        if [[ $((i+j+k+l)) -gt $max_sum ]]; then\n                            max_sum=$((i+j+k+l))\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    local max_sum=0\n\n    for ((i=1; i<=n; i++)); do\n        for ((j=1; j<=n; j++)); do\n            for ((k=1; k<=n; k++)); do\n                for ((l=1; l<=n; l++)); do\n                    for ((m=1; m<=n; m++)); do\n                        sum=$((i + j + k + l + m))\n                        if [ $sum -eq $n ]; then\n                            if [ $max_sum -lt $((i + j + k + l + m)) ]; then\n                                max_sum=$((i + j + k + l + m))\n                                max_i=$i\n                                max_j=$j\n                                max_k=$k\n                                max_l=$l\n                                max_m=$m\n                                max_n=$n\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo \"max_sum: $max_sum\"\n    echo \"max_i: $max_i\"\n    echo \"max_j: $max_j\"\n    echo \"max_k: $max_k\"\n    echo \"max_l: $max_l\"\n    echo \"max_m: $max_m\"\n    echo \"max_n: $max_n\"",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i + j + k + l + m))\n                        if [ $sum -eq $n ]; then\n                            max_sum=$((i + j + k + l + m))\n                            break\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        sum=$(get_max_sum $((n/i)))\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [ $((max_sum + n)) -gt $n ]; then\n        echo $((max_sum + n))\n    else\n        echo $n\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for i in $(seq 0 $((n/2))); do\n        for j in $(seq 0 $((n/3))); do\n            for k in $(seq 0 $((n/4))); do\n                for l in $(seq 0 $((n/5))); do\n                    sum=$((i + j + k + l))\n                    if [[ $sum -le $n ]]; then\n                        max_sum=$((max_sum > sum ? max_sum : sum))\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    for ((i=1; i<=n; i++)); do\n        for ((j=1; j<=n; j++)); do\n            for ((k=1; k<=n; k++)); do\n                for ((l=1; l<=n; l++)); do\n                    for ((m=1; m<=n; m++)); do\n                        sum=$((i+j+k+l+m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "  if [[ $1 -le 0 ]]; then\n    echo 0\n    return\n  fi\n  if [[ $1 -le 5 ]]; then\n    echo $1\n    return\n  fi\n  local max_sum=0\n  local sum=0\n  for (( i=2; i<=5; i++ )); do\n    sum=$(get_max_sum $(( $1 / $i )))\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n    fi\n  done\n  echo $(( $max_sum + $1 ))",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for i in $(seq $n); do\n    for j in $(seq $n); do\n      for k in $(seq $n); do\n        for l in $(seq $n); do\n          sum=$((i + j + k + l))\n          if [ $sum -eq $n ]; then\n            if [ $((i + j + k + l)) -gt $max_sum ]; then\n              max_sum=$((i + j + k + l))\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    n_div_2=$((n / 2))\n    n_div_3=$((n / 3))\n    n_div_4=$((n / 4))\n    n_div_5=$((n / 5))\n\n    for i in $(seq 0 $n_div_2); do\n        for j in $(seq 0 $n_div_3); do\n            for k in $(seq 0 $n_div_4); do\n                for l in $(seq 0 $n_div_5); do\n                    m=$((n - (i * 2) - (j * 3) - (k * 4) - (l * 5)))\n                    if [[ $m -ge 0 ]]; then\n                        sum=$((i + j + k + l + m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        local sum=$(get_max_sum $((n/i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $((max_sum + n)) -gt $max_sum ]]; then\n        max_sum=$((max_sum + n))\n    fi\n\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local n_divided_by_2=$((n/2))\n  local n_divided_by_3=$((n/3))\n  local n_divided_by_4=$((n/4))\n  local n_divided_by_5=$((n/5))\n  local max_sum_divided_by_2=$(get_max_sum $n_divided_by_2)\n  local max_sum_divided_by_3=$(get_max_sum $n_divided_by_3)\n  local max_sum_divided_by_4=$(get_max_sum $n_divided_by_4)\n  local max_sum_divided_by_5=$(get_max_sum $n_divided_by_5)\n  sum=$((max_sum_divided_by_2 + max_sum_divided_by_3 + max_sum_divided_by_4 + max_sum_divided_by_5))\n  if [ $sum -gt $n ]; then\n    max_sum=$sum\n  else\n    max_sum=$n\n  fi\n  echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i + j + k + l + m))\n                        if [[ $sum -eq $n ]]; then\n                            max_sum=$((i + j + k + l + m))\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i+j+k+l))\n          if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "  if [ $1 -le 0 ]; then\n    echo 0\n  else\n    local max_sum=$1\n    local sum=$(($1/2 + $1/3 + $1/4 + $1/5))\n    if [ $sum -gt $max_sum ]; then\n      max_sum=$sum\n    fi\n    echo $max_sum\n  fi",
    "    local n=$1\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    local max_sum=$n\n    local sum=0\n    for i in 2 3 4 5; do\n        sum=$(get_max_sum $(($n/$i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local sum1=0\n  local sum2=0\n  local sum3=0\n  local sum4=0\n  local sum5=0\n  local sum6=0\n  local sum7=0\n  local sum8=0\n  local sum9=0\n  local sum10=0\n  local sum11=0\n  local sum12=0\n  local sum13=0\n  local sum14=0\n  local sum15=0\n  local sum16=0\n  local sum17=0\n  local sum18=0\n  local sum19=0\n  local sum20=0\n  local sum21=0\n  local sum22=0\n  local sum23=0\n  local sum24=0\n  local sum25=0\n  local sum26=0\n  local sum27=0\n  local sum28=0\n  local sum29=0\n  local sum30=0\n  local sum31=0\n  local sum32=0\n  local sum33=0\n  local sum34=0\n  local sum35=0\n  local sum36=0\n  local sum37=0\n  local sum38=0\n  local sum39=0\n  local sum40=0\n  local sum41=0\n  local sum42=0\n  local sum43=0\n  local sum44=0\n  local sum45=0\n  local sum46=0\n  local sum47=0\n  local sum48=0\n  local sum49=0\n  local sum50=0\n  local sum51=0\n  local sum52=0\n  local sum53=0\n  local sum54=0\n  local sum55=0\n  local sum56=0\n  local sum57=0\n  local sum58=0\n  local sum59=0\n  local sum60=0\n  local sum61=0\n  local sum62=0\n  local sum63=0\n  local sum64=0\n  local sum65=0\n  local sum66=0\n  local sum67=0\n  local sum68=0\n  local sum69=0\n  local sum70=0\n  local sum71=0\n  local",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo 2\n        return\n    fi\n\n    if [[ $n -eq 3 ]]; then\n        echo 3\n        return\n    fi\n\n    if [[ $n -eq 4 ]]; then\n        echo 4\n        return\n    fi\n\n    if [[ $n -eq 5 ]]; then\n        echo 5\n        return\n    fi\n\n    sum=$(($(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5)))))\n    max_sum=$((sum > n ? sum : n))\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i+=2)); do\n        for ((j=0; j<=n; j+=3)); do\n            for ((k=0; k<=n; k+=4)); do\n                for ((l=0; l<=n; l+=5)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_1=0\n    local max_sum_2=0\n    local max_sum_3=0\n    local max_sum_4=0\n    local max_sum_5=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    max_sum_1=$(get_max_sum $((n/2)))\n    max_sum_2=$(get_max_sum $((n/3)))\n    max_sum_3=$(get_max_sum $((n/4)))\n    max_sum_4=$(get_max_sum $((n/5)))\n    max_sum_5=$(get_max_sum $((n/6)))\n\n    sum=$((max_sum_1 + max_sum_2 + max_sum_3 + max_sum_4 + max_sum_5))\n    if [[ $sum -gt $n ]]; then\n        max_sum=$sum\n    else\n        max_sum=$n\n    fi\n\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  for i in $(seq 1 $n); do\n    for j in $(seq 1 $n); do\n      for k in $(seq 1 $n); do\n        for l in $(seq 1 $n); do\n          for m in $(seq 1 $n); do\n            sum=$((i + j + k + l + m))\n            if [ $sum -eq $n ]; then\n              if [ $((i + j + k + l)) -gt $max_sum ]; then\n                max_sum=$((i + j + k + l))\n              fi\n            fi\n          done\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n\n  if [ $n -le 0 ]; then\n    echo 0\n    return\n  fi\n\n  for ((i=1; i<=5; i++)); do\n    sum=$(( $(get_max_sum $((n/i))) + $(get_max_sum $((n%i))) ))\n    if [ $sum -gt $max_sum ]; then\n      max_sum=$sum\n    fi\n  done\n\n  if [ $n -gt $max_sum ]; then\n    max_sum=$n\n  fi\n\n  echo $max_sum",
    "  local n=$1\n  local sum=$n\n  local sum1=0\n  local sum2=0\n  local sum3=0\n  local sum4=0\n  local sum5=0\n  if [ $n -gt 0 ]; then\n    if [ $n -gt 1 ]; then\n      sum1=$(get_max_sum $((n/2)))\n      sum2=$(get_max_sum $((n/3)))\n      sum3=$(get_max_sum $((n/4)))\n      sum4=$(get_max_sum $((n/5)))\n      sum5=$(get_max_sum $((n/6)))\n      sum=$((sum1+sum2+sum3+sum4+sum5))\n    fi\n  fi\n  if [ $sum -lt $n ]; then\n    sum=$n\n  fi\n  echo $sum",
    "  local n=$1\n  local sum=0\n  local max=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local tmp=0\n  local max_sum=0\n  local max_sum_array=()\n  local max_sum_array_index=0\n  local max_sum_array_size=0\n  local max_sum_array_size_index=0\n  local max_sum_array_size_index_value=0\n  local max_sum_array_size_index_value_index=0\n  local max_sum_array_size_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n  local max_sum_array_size_index_value_index_value_index_value_index_value_index_value_index_value_index_value",
    "  local n=$1\n  local sum=0\n  local sum_n=0\n  local sum_n_2=0\n  local sum_n_3=0\n  local sum_n_4=0\n  local sum_n_5=0\n\n  if [[ $n -le 0 ]]; then\n    echo 0\n  else\n    sum_n=$(get_max_sum $n)\n    sum_n_2=$(get_max_sum $((n/2)))\n    sum_n_3=$(get_max_sum $((n/3)))\n    sum_n_4=$(get_max_sum $((n/4)))\n    sum_n_5=$(get_max_sum $((n/5)))\n    sum=$((sum_n_2 + sum_n_3 + sum_n_4 + sum_n_5))\n    if [[ $sum -gt $n ]]; then\n      echo $sum\n    else\n      echo $n\n    fi\n  fi",
    "    local n=$1\n    local sum=0\n    local sum_2=0\n    local sum_3=0\n    local sum_4=0\n    local sum_5=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -le 5 ]; then\n        echo $n\n        return\n    fi\n\n    sum_2=$(get_max_sum $((n/2)))\n    sum_3=$(get_max_sum $((n/3)))\n    sum_4=$(get_max_sum $((n/4)))\n    sum_5=$(get_max_sum $((n/5)))\n\n    sum=$((sum_2 + sum_3 + sum_4 + sum_5))\n\n    if [ $sum -lt $n ]; then\n        echo $n\n    else\n        echo $sum\n    fi",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_list=()\n    local max_sum_list_index=0\n    local max_sum_list_length=0\n    local i=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\n    for ((i=1; i<=n; i++)); do\n        sum=$(($i + $(get_max_sum $((i/2)))))\n        sum=$(($sum + $(get_max_sum $((i/3)))))\n        sum=$(($sum + $(get_max_sum $((i/4)))))\n        sum=$(($sum + $(get_max_sum $((i/5)))))\n\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n            max_sum_list[$max_sum_list_index]=$i\n            max_sum_list_index=$((max_sum_list_index+1))\n        fi\n    done\n\n    max_sum_list_length=${#max_sum_list[@]}\n    for ((i=0; i<$max_sum_list_length; i++)); do\n        echo ${max_sum_list[$i]}\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    for i in $(seq 2 5); do\n        sum=$((n / i))\n        sum=$(get_max_sum $sum)\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n    if [ $((max_sum + n)) -gt $n ]; then\n        echo $((max_sum + n))\n    else\n        echo $n\n    fi",
    "  local n=$1\n  local sum=0\n  local half=$((n/2))\n  local third=$((n/3))\n  local fourth=$((n/4))\n  local fifth=$((n/5))\n  if [[ $n -le 0 ]]; then\n    echo 0\n  else\n    sum=$(get_max_sum $half)\n    sum=$((sum + $(get_max_sum $third)))\n    sum=$((sum + $(get_max_sum $fourth)))\n    sum=$((sum + $(get_max_sum $fifth)))\n    if [[ $sum -lt $n ]]; then\n      echo $n\n    else\n      echo $sum\n    fi\n  fi",
    "    local n=$1\n    local sum=0\n    if [ $n -gt 0 ]; then\n        sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n        if [ $sum -lt $n ]; then\n            sum=$n\n        fi\n    fi\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n    local max_sum_div_2=0\n    local max_sum_div_3=0\n    local max_sum_div_4=0\n    local max_sum_div_5=0\n\n    if [[ $n -le 0 ]]; then\n        echo \"0\"\n        return\n    fi\n\n    for ((i=0; i<=$n; i++)); do\n        for ((j=0; j<=$n; j++)); do\n            for ((k=0; k<=$n; k++)); do\n                for ((l=0; l<=$n; l++)); do\n                    for ((m=0; m<=$n; m++)); do\n                        n_div_2=$((i + j + k + l + m))\n                        n_div_3=$((i + j + k + l + m))\n                        n_div_4=$((i + j + k + l + m))\n                        n_div_5=$((i + j + k + l + m))\n                        max_sum_div_2=$(get_max_sum $n_div_2)\n                        max_sum_div_3=$(get_max_sum $n_div_3)\n                        max_sum_div_4=$(get_max_sum $n_div_4)\n                        max_sum_div_5=$(get_max_sum $n_div_5)\n                        sum=$((max_sum_div_2 + max_sum_div_3 + max_sum_div_4 + max_sum_div_5))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo \"$max_sum\"",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n    local max_sum_array_index=0\n    local max_sum_array_length=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_divided_by_2=0\n    local n_divided_by_3=0\n    local n_divided_by_4=0\n    local n_divided_by_5=0\n    local n_divided_by_2_max_sum=0\n    local n_divided_by_3_max_sum=0\n    local n_divided_by_4_max_sum=0\n    local n_divided_by_5_max_sum=0\n\n    if [ $n -lt 0 ]; then\n        echo \"Error: Invalid input\"\n        return 1\n    fi\n\n    if [ $n -eq 0 ]; then\n        echo \"0\"\n        return 0\n    fi\n\n    if [ $n -eq 1 ]; then\n        echo \"1\"\n        return 0\n    fi\n\n    if [ $n -eq 2 ]; then\n        echo \"2\"\n        return 0\n    fi\n\n    if [ $n -eq 3 ]; then\n        echo \"3\"\n        return 0\n    fi\n\n    if [ $n -eq 4 ]; then\n        echo \"4\"\n        return 0\n    fi\n\n    if [ $n -eq 5 ]; then\n        echo \"5\"\n        return 0\n    fi\n\n    n_divided_by_2=$((n/2))\n    n_divided_by_3=$((n/3))\n    n_divided_by_4=$((n/4))\n    n_divided_by_5=$((n/5))\n\n    n_divided_by_2_max_sum=$(get_max_sum $n_divided_by_2)\n    n_divided_by_3_max_sum=$(get_max_sum $n_divided_by_3)\n    n_divided_by_4_",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_arr=()\n    local max_sum_arr_index=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for ((i=1; i<=$n; i++)); do\n        sum=$(($i/2 + $i/3 + $i/4 + $i/5))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n            max_sum_arr[$max_sum_arr_index]=$i\n            ((max_sum_arr_index++))\n        fi\n    done\n\n    echo \"Max sum: $max_sum\"\n    echo \"Max sum array: ${max_sum_arr[@]}\"",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return 0\n    fi\n\n    if [ $n -le 5 ]; then\n        echo $n\n        return 0\n    fi\n\n    for i in $(seq 2 5); do\n        sum=$(get_max_sum $((n / i)))\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [ $((max_sum + n)) -gt $((n * 5)) ]; then\n        echo $((max_sum + n))\n    else\n        echo $((n * 5))\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_divided_by_2=0\n    local n_divided_by_3=0\n    local n_divided_by_4=0\n    local n_divided_by_5=0\n\n    if [[ $n -lt 0 ]]; then\n        echo \"Error: $n is not a positive integer.\"\n        return 1\n    fi\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return 0\n    fi\n\n    n_divided_by_2=$((n / 2))\n    n_divided_by_3=$((n / 3))\n    n_divided_by_4=$((n / 4))\n    n_divided_by_5=$((n / 5))\n\n    for i in $(seq 0 $n_divided_by_2); do\n        for j in $(seq 0 $n_divided_by_3); do\n            for k in $(seq 0 $n_divided_by_4); do\n                for l in $(seq 0 $n_divided_by_5); do\n                    m=$((n - (2 * i) - (3 * j) - (4 * k) - (5 * l)))\n                    if [[ $m -ge 0 ]]; then\n                        sum=$((i + j + k + l + m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    if [[ $n -gt 5 ]]; then\n        sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n    fi\n\n    if [[ $sum -gt $n ]]; then\n        echo $sum\n    else\n        echo $n\n    fi",
    "    local -i n=$1\n    local -i sum=0\n    local -i sum1=0\n    local -i sum2=0\n    local -i sum3=0\n    local -i sum4=0\n\n    if [ $n -lt 0 ]; then\n        echo \"Error: $n is not a positive integer\"\n        return 1\n    fi\n\n    if [ $n -eq 0 ]; then\n        echo \"0\"\n        return 0\n    fi\n\n    if [ $n -eq 1 ]; then\n        echo \"1\"\n        return 0\n    fi\n\n    if [ $n -eq 2 ]; then\n        echo \"2\"\n        return 0\n    fi\n\n    if [ $n -eq 3 ]; then\n        echo \"3\"\n        return 0\n    fi\n\n    if [ $n -eq 4 ]; then\n        echo \"4\"\n        return 0\n    fi\n\n    if [ $n -eq 5 ]; then\n        echo \"5\"\n        return 0\n    fi\n\n    sum1=$(get_max_sum $((n/2)))\n    sum2=$(get_max_sum $((n/3)))\n    sum3=$(get_max_sum $((n/4)))\n    sum4=$(get_max_sum $((n/5)))\n\n    sum=$((sum1 + sum2 + sum3 + sum4))\n\n    if [ $sum -gt $n ]; then\n        echo \"$sum\"\n    else\n        echo \"$n\"\n    fi",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_list=()\n    local max_sum_list_index=0\n    local max_sum_list_length=0\n    local max_sum_list_length_index=0\n    local max_sum_list_length_index_value=0\n    local max_sum_list_length_index_value_index=0\n    local max_sum_list_length_index_value_index_value=0\n    local max_sum_list_length_index_value_index_value_index=0\n    local max_sum_list_length_index_value_index_value_index_value=0\n    local max_sum_list_length_index_value_index_value_index_value_index=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value_index=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value_index_value=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n    local max_sum_list_length_index_value_index_value_index_value_index_value_index_value_index_value_index_value",
    "    local n=$1\n    local sum=0\n    local sum_2=0\n    local sum_3=0\n    local sum_4=0\n    local sum_5=0\n\n    if [[ $n -lt 0 ]]; then\n        echo \"Invalid input\"\n        return 1\n    fi\n\n    if [[ $n -lt 5 ]]; then\n        echo $n\n        return 0\n    fi\n\n    sum_2=$(get_max_sum $((n/2)))\n    sum_3=$(get_max_sum $((n/3)))\n    sum_4=$(get_max_sum $((n/4)))\n    sum_5=$(get_max_sum $((n/5)))\n\n    sum=$((sum_2 + sum_3 + sum_4 + sum_5))\n    if [[ $sum -lt $n ]]; then\n        echo $n\n    else\n        echo $sum\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -le 5 ]; then\n        echo $n\n        return\n    fi\n\n    for i in 2 3 4 5; do\n        sum=$(get_max_sum $(($n/$i)))\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [ $(($max_sum + $n)) -gt $max_sum ]; then\n        max_sum=$(($max_sum + $n))\n    fi\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    for ((i=2; i<=5; i++)); do\n        if [ $((n/i)) -gt 0 ]; then\n            sum=$(get_max_sum $((n/i)))\n            if [ $sum -gt $max_sum ]; then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $((max_sum+n))",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  if [[ $n -le 0 ]]; then\n    echo 0\n    return\n  fi\n  if [[ $n -le 5 ]]; then\n    echo $n\n    return\n  fi\n  for ((i=2; i<=5; i++)); do\n    sum=$(( $(get_max_sum $((n/i))) + $(get_max_sum $((n%i))) ))\n    if [[ $sum -gt $max_sum ]]; then\n      max_sum=$sum\n    fi\n  done\n  if [[ $max_sum -lt $n ]]; then\n    max_sum=$n\n  fi\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_half=$((n/2))\n    local n_third=$((n/3))\n    local n_fourth=$((n/4))\n    local n_fifth=$((n/5))\n    for ((i=0; i<=n_half; i++)); do\n        for ((j=0; j<=n_third; j++)); do\n            for ((k=0; k<=n_fourth; k++)); do\n                for ((l=0; l<=n_fifth; l++)); do\n                    m=$((n - i - j - k - l))\n                    sum=$((i + j + k + l + m))\n                    if [[ $sum -gt $max_sum ]]; then\n                        max_sum=$sum\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i+=2)); do\n        for ((j=0; j<=n; j+=3)); do\n            for ((k=0; k<=n; k+=4)); do\n                for ((l=0; l<=n; l+=5)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -le $n ]]; then\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for i in $(seq 0 $n); do\n        for j in $(seq 0 $n); do\n            for k in $(seq 0 $n); do\n                for l in $(seq 0 $n); do\n                    sum=$((i + j + k + l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i + j + k + l))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -le 5 ]; then\n        echo $n\n        return\n    fi\n\n    for i in $(seq 2 5); do\n        local sum=$(get_max_sum $(($n/$i)))\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [ $(($max_sum + $n)) -gt $max_sum ]; then\n        max_sum=$(($max_sum + $n))\n    fi\n\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n\n  if [ $n -eq 0 ]; then\n    echo 0\n    return\n  fi\n\n  if [ $n -eq 1 ]; then\n    echo 1\n    return\n  fi\n\n  if [ $n -eq 2 ]; then\n    echo 2\n    return\n  fi\n\n  if [ $n -eq 3 ]; then\n    echo 3\n    return\n  fi\n\n  if [ $n -eq 4 ]; then\n    echo 4\n    return\n  fi\n\n  if [ $n -eq 5 ]; then\n    echo 5\n    return\n  fi\n\n  sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n  max_sum=$(( $n > $sum ? $n : $sum ))\n\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i + j + k + l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i/2 + j/3 + k/4 + l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for i in $(seq 0 $n); do\n        for j in $(seq 0 $n); do\n            for k in $(seq 0 $n); do\n                for l in $(seq 0 $n); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        if [ $((i*2+j*3+k*4+l*5)) -gt $max_sum ]; then\n                            max_sum=$((i*2+j*3+k*4+l*5))\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i + j + k + l))\n                    if ((sum == n)); then\n                        sum=$((i/2 + j/3 + k/4 + l/5))\n                        if ((sum > max_sum)); then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n    local max_sum_array_index=0\n    local max_sum_array_size=0\n    local max_sum_array_last_index=0\n    local max_sum_array_last_value=0\n    local max_sum_array_last_value_index=0\n    local max_sum_array_last_value_index_2=0\n    local max_sum_array_last_value_index_3=0\n    local max_sum_array_last_value_index_4=0\n    local max_sum_array_last_value_index_5=0\n    local max_sum_array_last_value_index_6=0\n    local max_sum_array_last_value_index_7=0\n    local max_sum_array_last_value_index_8=0\n    local max_sum_array_last_value_index_9=0\n    local max_sum_array_last_value_index_10=0\n    local max_sum_array_last_value_index_11=0\n    local max_sum_array_last_value_index_12=0\n    local max_sum_array_last_value_index_13=0\n    local max_sum_array_last_value_index_14=0\n    local max_sum_array_last_value_index_15=0\n    local max_sum_array_last_value_index_16=0\n    local max_sum_array_last_value_index_17=0\n    local max_sum_array_last_value_index_18=0\n    local max_sum_array_last_value_index_19=0\n    local max_sum_array_last_value_index_20=0\n    local max_sum_array_last_value_index_21=0\n    local max_sum_array_last_value_index_22=0\n    local max_sum_array_last_value_index_23=0\n    local max_sum_array_last_value_index_24=0",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    for i in $(seq 1 $n); do\n        for j in $(seq 1 $n); do\n            for k in $(seq 1 $n); do\n                for l in $(seq 1 $n); do\n                    for m in $(seq 1 $n); do\n                        sum=$((i + j + k + l + m))\n                        if [ $sum -eq $n ]; then\n                            sum=$((i + j + k + l + m))\n                            if [ $sum -gt $max_sum ]; then\n                                max_sum=$sum\n                                max_i=$i\n                                max_j=$j\n                                max_k=$k\n                                max_l=$l\n                                max_m=$m\n                                max_n=$n\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local sum_list=()\n    local max_sum_list=()\n    local sum_list_len=0\n    local max_sum_list_len=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n    local n_div_2_sum=0\n    local n_div_3_sum=0\n    local n_div_4_sum=0\n    local n_div_5_sum=0\n    local n_div_2_sum_list=()\n    local n_div_3_sum_list=()\n    local n_div_4_sum_list=()\n    local n_div_5_sum_list=()\n    local n_div_2_sum_list_len=0\n    local n_div_3_sum_list_len=0\n    local n_div_4_sum_list_len=0\n    local n_div_5_sum_list_len=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return 0\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo 2\n        return 0\n    fi\n\n    if [[ $n -eq 3 ]]; then\n        echo 3\n        return 0\n    fi\n\n    if [[ $n -eq 4 ]]; then\n        echo 4\n        return 0\n    fi\n\n    if [[ $n -eq 5 ]]; then\n        echo 5\n        return 0\n    fi\n\n    n_div_2=$((n / 2))\n    n_div_3=$((n / 3))\n    n_div_4=$((n / 4))\n    n_div_5=$((n / 5))\n\n    n_div_2_sum=$(get_max_sum $n_div_2)\n",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local sum_n=0\n    local sum_n_2=0\n    local sum_n_3=0\n    local sum_n_4=0\n    local sum_n_5=0\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return\n    fi\n    sum_n=$(get_max_sum $n)\n    sum_n_2=$(get_max_sum $((n/2)))\n    sum_n_3=$(get_max_sum $((n/3)))\n    sum_n_4=$(get_max_sum $((n/4)))\n    sum_n_5=$(get_max_sum $((n/5)))\n    sum=$((sum_n_2 + sum_n_3 + sum_n_4 + sum_n_5))\n    if [[ $sum -gt $n ]]; then\n        echo $sum\n    else\n        echo $n\n    fi",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    local max_sum=0\n\n    for (( i=0; i<=n; i++ )); do\n        for (( j=0; j<=n; j++ )); do\n            for (( k=0; k<=n; k++ )); do\n                for (( l=0; l<=n; l++ )); do\n                    for (( m=0; m<=n; m++ )); do\n                        sum=$((i+j+k+l+m))\n                        if [ $sum -eq $n ]; then\n                            max_sum=$((i+j+k+l+m))\n                            if [ $max_sum -gt $max_n ]; then\n                                max_n=$max_sum\n                                max_i=$i\n                                max_j=$j\n                                max_k=$k\n                                max_l=$l\n                                max_m=$m\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo \"n=$n, max_n=$max_n, max_i=$max_i, max_j=$max_j, max_k=$max_k, max_l=$max_l, max_m=$max_m\"",
    "  local n=$1\n  local sum=0\n\n  if [[ $n -lt 5 ]]; then\n    echo $n\n    return\n  fi\n\n  for i in {2..5}; do\n    sum=$((sum + $(get_max_sum $((n / i)))))\n  done\n\n  if [[ $sum -gt $n ]]; then\n    echo $sum\n  else\n    echo $n\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i+j+k+l+m))\n                        if [ $sum -eq $n ]; then\n                            sum=$((i/2+j/3+k/4+l/5+m))\n                            if [ $sum -gt $max_sum ]; then\n                                max_sum=$sum\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [[ $n -le 0 ]]; then\n        echo \"0\"\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo \"$n\"\n        return\n    fi\n\n    for (( i=2; i<=5; i++ )); do\n        sum=$(get_max_sum $(($n/$i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $(($max_sum + $n)) -gt $max_sum ]]; then\n        max_sum=$(($max_sum + $n))\n    fi\n\n    echo \"$max_sum\"",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n_div_2=0\n    local n_div_3=0\n    local n_div_4=0\n    local n_div_5=0\n    local n_div_2_sum=0\n    local n_div_3_sum=0\n    local n_div_4_sum=0\n    local n_div_5_sum=0\n    local n_sum=0\n\n    # If n is less than or equal to 0, return 0\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    # If n is less than or equal to 5, return n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    # Get the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n)\n    for (( i=0; i<=n; i++ )); do\n        n_div_2=$(( $n / 2 ))\n        n_div_3=$(( $n / 3 ))\n        n_div_4=$(( $n / 4 ))\n        n_div_5=$(( $n / 5 ))\n        n_div_2_sum=$(get_max_sum $n_div_2)\n        n_div_3_sum=$(get_max_sum $n_div_3)\n        n_div_4_sum=$(get_max_sum $n_div_4)\n        n_div_5_sum=$(get_max_sum $n_div_5)\n        n_sum=$(( $n_div_2_sum + $n_div_3_sum + $n_div_4_sum + $n_div_5_sum ))\n        if [[ $n_sum -gt $n ]]; then\n            sum=$n_sum\n        else\n            sum=$n\n        fi",
    "  local n=$1\n  if [ $n -le 0 ]; then\n    echo 0\n    return\n  fi\n  local sum=$n\n  local sum_2=$(get_max_sum $((n/2)))\n  local sum_3=$(get_max_sum $((n/3)))\n  local sum_4=$(get_max_sum $((n/4)))\n  local sum_5=$(get_max_sum $((n/5)))\n  local max_sum=$((sum_2 + sum_3 + sum_4 + sum_5))\n  if [ $max_sum -gt $sum ]; then\n    echo $max_sum\n  else\n    echo $sum\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i + j + k + l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i + j + k + l))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    sum=$((i+j+k+l))\n                    if [ $sum -eq $n ]; then\n                        sum=$((i/2+j/3+k/4+l/5))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    if [ $1 -le 0 ]; then\n        echo 0\n    else\n        echo $1\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i+=2)); do\n        for ((j=0; j<=n; j+=3)); do\n            for ((k=0; k<=n; k+=4)); do\n                for ((l=0; l<=n; l+=5)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -le $n ]]; then\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i+j+k+l+m))\n                        if [[ $sum -eq $n ]]; then\n                            sum=$((i/2+j/3+k/4+l/5+m))\n                            if [[ $sum -gt $max_sum ]]; then\n                                max_sum=$sum\n                            fi\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_array=()\n  local max_sum_array_index=0\n  local max_sum_array_length=0\n  local max_sum_array_length_index=0\n  local max_sum_array_length_index_value=0\n  local max_sum_array_length_index_value_length=0\n  local max_sum_array_length_index_value_length_index=0\n  local max_sum_array_length_index_value_length_index_value=0\n  local max_sum_array_length_index_value_length_index_value_length=0\n  local max_sum_array_length_index_value_length_index_value_length_index=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index_value=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index_value_length=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index_value_length_index=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index_value_length_index_value=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index_value_length_index_value_length=0\n  local max_sum_array_length_index_value_length_index_value_length_index_value_length_index_value_length_index_value",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i+j+k+l))\n          if [[ $sum -le $n ]]; then\n            max_sum=$((max_sum+sum))\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    if [[ $n -le 0 ]]; then\n        echo \"Error: $n is not a positive integer\"\n        return 1\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return 0\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        sum=$(( $(get_max_sum $((n/i))) + $(get_max_sum $((n%i))) ))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $max_sum -lt $n ]]; then\n        max_sum=$n\n    fi\n\n    echo $max_sum\n    return 0",
    "    local n=$1\n    local sum=0\n    local half=$((n/2))\n    local third=$((n/3))\n    local fourth=$((n/4))\n    local fifth=$((n/5))\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -gt 0 ]]; then\n        sum=$((half + third + fourth + fifth))\n        if [[ $sum -lt $n ]]; then\n            echo $n\n            return\n        fi\n    fi\n\n    echo $sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    done\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "  if [[ $1 -le 0 ]]; then\n    echo 0\n  elif [[ $1 -le 5 ]]; then\n    echo $1\n  else\n    local half=$(( $1 / 2 ))\n    local third=$(( $1 / 3 ))\n    local fourth=$(( $1 / 4 ))\n    local fifth=$(( $1 / 5 ))\n    local max_sum=$(( $(get_max_sum $half) + $(get_max_sum $third) + $(get_max_sum $fourth) + $(get_max_sum $fifth) ))\n    if [[ $max_sum -gt $1 ]]; then\n      echo $max_sum\n    else\n      echo $1\n    fi\n  fi",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_array=()\n    local i=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for ((i=0; i<5; i++)); do\n        sum=$(get_max_sum $((n/2+i)))\n        max_sum_array[$i]=$sum\n    done\n\n    max_sum=$(printf \"%s\\n\" \"${max_sum_array[@]}\" | sort -nr | head -n1)\n\n    if [[ $max_sum -lt $n ]]; then\n        echo $n\n    else\n        echo $max_sum\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    if [ $n -gt 0 ]; then\n        if [ $n -gt 5 ]; then\n            sum=$(($(get_max_sum $(($n/2))) + $(get_max_sum $(($n/3))) + $(get_max_sum $(($n/4))) + $(get_max_sum $(($n/5)))))\n            if [ $sum -gt $n ]; then\n                max_sum=$sum\n            else\n                max_sum=$n\n            fi\n        else\n            max_sum=$n\n        fi\n    fi\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -le 5 ]; then\n        echo $n\n        return\n    fi\n\n    for i in $(seq 1 $((n/2))); do\n        for j in $(seq 1 $((n/3))); do\n            for k in $(seq 1 $((n/4))); do\n                for l in $(seq 1 $((n/5))); do\n                    sum=$((i + j + k + l))\n                    if [ $sum -eq $n ]; then\n                        max_sum=$((max_sum + i + j + k + l))\n                    fi\n                done\n            done\n        done\n    done\n\n    if [ $max_sum -eq 0 ]; then\n        echo $n\n    else\n        echo $max_sum\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=n; k++)); do\n                for ((l=0; l<=n; l++)); do\n                    for ((m=0; m<=n; m++)); do\n                        sum=$((i/2 + j/3 + k/4 + l/5 + m))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                            max_i=$i\n                            max_j=$j\n                            max_k=$k\n                            max_l=$l\n                            max_m=$m\n                            max_n=$n\n                        fi\n                    done\n                done\n            done\n        done\n    done\n    echo \"max_sum: $max_sum\"\n    echo \"max_i: $max_i\"\n    echo \"max_j: $max_j\"\n    echo \"max_k: $max_k\"\n    echo \"max_l: $max_l\"\n    echo \"max_m: $max_m\"\n    echo \"max_n: $max_n\"",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n\n  for (( i=1; i<=n; i++ )); do\n    sum=$(($i/2 + $i/3 + $i/4 + $i/5))\n    if [[ $sum -gt $i ]]; then\n      max_sum=$(($max_sum + $sum))\n    else\n      max_sum=$(($max_sum + $i))\n    fi\n  done\n\n  echo $max_sum",
    "    local n=\"$1\"\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    for i in $(seq 0 $((n/2))); do\n        for j in $(seq 0 $((n/3))); do\n            for k in $(seq 0 $((n/4))); do\n                for l in $(seq 0 $((n/5))); do\n                    m=$((n - i - j - k - l))\n                    if [ $m -ge 0 ]; then\n                        sum=$((i + j + k + l + m))\n                        if [ $sum -gt $max_sum ]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_n=0\n  local max_sum_n_1=0\n  local max_sum_n_2=0\n  local max_sum_n_3=0\n  local max_sum_n_4=0\n  local max_sum_n_5=0\n  local max_sum_n_6=0\n  local max_sum_n_7=0\n  local max_sum_n_8=0\n  local max_sum_n_9=0\n  local max_sum_n_10=0\n  local max_sum_n_11=0\n  local max_sum_n_12=0\n  local max_sum_n_13=0\n  local max_sum_n_14=0\n  local max_sum_n_15=0\n  local max_sum_n_16=0\n  local max_sum_n_17=0\n  local max_sum_n_18=0\n  local max_sum_n_19=0\n  local max_sum_n_20=0\n  local max_sum_n_21=0\n  local max_sum_n_22=0\n  local max_sum_n_23=0\n  local max_sum_n_24=0\n  local max_sum_n_25=0\n  local max_sum_n_26=0\n  local max_sum_n_27=0\n  local max_sum_n_28=0\n  local max_sum_n_29=0\n  local max_sum_n_30=0\n  local max_sum_n_31=0\n  local max_sum_n_32=0\n  local max_sum_n_33=0\n  local max_sum_n_34=0\n  local max_sum_n_35=0\n  local max_sum_n_36=0\n  local max_sum_n_37=0\n  local max_sum_n_38=0\n  local max_sum_n_39=0\n  local max_sum_n_40=0\n ",
    "    local n=$1\n    local max_sum=$n\n    local sum=0\n    local i=0\n    for i in 2 3 4 5; do\n        if [ $((n % i)) -eq 0 ]; then\n            sum=$((n / i))\n            max_sum=$((max_sum + get_max_sum(sum)))\n        fi\n    done\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for i in {2..5}; do\n        sum=$(($(get_max_sum $((n / i))) + $(get_max_sum $((n % i)))))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $n -gt $max_sum ]]; then\n        echo $n\n    else\n        echo $max_sum\n    fi",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i + j + k + l))\n          if [ $sum -eq $n ]; then\n            sum=$((i + j + k + l))\n            if [ $sum -gt $max_sum ]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [ $n -le 0 ]; then\n        echo 0\n        return\n    fi\n\n    if [ $n -le 5 ]; then\n        echo $n\n        return\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        sum=$(get_max_sum $((n/i)))\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [ $((max_sum + n)) -gt $((max_sum + max_sum/5)) ]; then\n        echo $((max_sum + n))\n    else\n        echo $((max_sum + max_sum/5))\n    fi",
    "  local n=$1\n  local sum=0\n  local sum1=0\n  local sum2=0\n  local sum3=0\n  local sum4=0\n  local sum5=0\n  local sum6=0\n  local sum7=0\n  local sum8=0\n  local sum9=0\n  local sum10=0\n  local sum11=0\n  local sum12=0\n  local sum13=0\n  local sum14=0\n  local sum15=0\n  local sum16=0\n  local sum17=0\n  local sum18=0\n  local sum19=0\n  local sum20=0\n  local sum21=0\n  local sum22=0\n  local sum23=0\n  local sum24=0\n  local sum25=0\n  local sum26=0\n  local sum27=0\n  local sum28=0\n  local sum29=0\n  local sum30=0\n  local sum31=0\n  local sum32=0\n  local sum33=0\n  local sum34=0\n  local sum35=0\n  local sum36=0\n  local sum37=0\n  local sum38=0\n  local sum39=0\n  local sum40=0\n  local sum41=0\n  local sum42=0\n  local sum43=0\n  local sum44=0\n  local sum45=0\n  local sum46=0\n  local sum47=0\n  local sum48=0\n  local sum49=0\n  local sum50=0\n  local sum51=0\n  local sum52=0\n  local sum53=0\n  local sum54=0\n  local sum55=0\n  local sum56=0\n  local sum57=0\n  local sum58=0\n  local sum59=0\n  local sum60=0\n  local sum61=0\n  local sum62=0\n  local sum63=0\n  local sum64=0\n  local sum65=0\n  local sum66=0\n  local sum67=0\n  local sum68=0\n  local sum69=0\n  local sum70=0\n  local sum71=0\n  local",
    "    if [ $1 -le 0 ]; then\n        echo 0\n    else\n        echo $(( $(get_max_sum $(( $1 / 2 ))) + $(get_max_sum $(( $1 / 3 ))) + $(get_max_sum $(( $1 / 4 ))) + $(get_max_sum $(( $1 / 5 ))) ))\n    fi",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n\n    if [ $n -lt 5 ]; then\n        echo $n\n        return\n    fi\n\n    for (( i=2; i<=5; i++ )); do\n        sum=$(get_max_sum $(( n/i )) )\n        if [ $sum -gt $max_sum ]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [ $(( n + max_sum )) -gt $n ]; then\n        echo $(( n + max_sum ))\n    else\n        echo $n\n    fi",
    "    local n=$1\n    local max_sum=$n\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\n    if [ $n -gt 1 ]; then\n        for ((i=1; i<=$n; i++)); do\n            for ((j=1; j<=$n; j++)); do\n                for ((k=1; k<=$n; k++)); do\n                    for ((l=1; l<=$n; l++)); do\n                        for ((m=1; m<=$n; m++)); do\n                            sum=$(( $i + $j + $k + $l + $m ))\n                            if [ $sum -eq $n ]; then\n                                if [ $i -gt $max_sum ]; then\n                                    max_sum=$i\n                                fi\n                                if [ $j -gt $max_sum ]; then\n                                    max_sum=$j\n                                fi\n                                if [ $k -gt $max_sum ]; then\n                                    max_sum=$k\n                                fi\n                                if [ $l -gt $max_sum ]; then\n                                    max_sum=$l\n                                fi\n                                if [ $m -gt $max_sum ]; then\n                                    max_sum=$m\n                                fi\n                            fi\n                        done\n                    done\n                done\n            done\n        done\n    fi\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n\n    if [[ $n -lt 0 ]]; then\n        echo \"Error: n must be a positive integer\"\n        exit 1\n    fi\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return\n    fi\n\n    for ((i=2; i<=5; i++)); do\n        sum=$(get_max_sum $(($n/$i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $max_sum -gt $n ]]; then\n        echo $max_sum\n    else\n        echo $n\n    fi",
    "  local n=$1\n  if [[ $n -le 0 ]]; then\n    echo 0\n  elif [[ $n -le 5 ]]; then\n    echo $n\n  else\n    local sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n    if [[ $sum -gt $n ]]; then\n      echo $sum\n    else\n      echo $n\n    fi\n  fi",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_n=0\n  local max_sum_n_1=0\n  local max_sum_n_2=0\n  local max_sum_n_3=0\n  local max_sum_n_4=0\n  local max_sum_n_5=0\n  local max_sum_n_6=0\n  local max_sum_n_7=0\n  local max_sum_n_8=0\n  local max_sum_n_9=0\n  local max_sum_n_10=0\n  local max_sum_n_11=0\n  local max_sum_n_12=0\n  local max_sum_n_13=0\n  local max_sum_n_14=0\n  local max_sum_n_15=0\n  local max_sum_n_16=0\n  local max_sum_n_17=0\n  local max_sum_n_18=0\n  local max_sum_n_19=0\n  local max_sum_n_20=0\n  local max_sum_n_21=0\n  local max_sum_n_22=0\n  local max_sum_n_23=0\n  local max_sum_n_24=0\n  local max_sum_n_25=0\n  local max_sum_n_26=0\n  local max_sum_n_27=0\n  local max_sum_n_28=0\n  local max_sum_n_29=0\n  local max_sum_n_30=0\n  local max_sum_n_31=0\n  local max_sum_n_32=0\n  local max_sum_n_33=0\n  local max_sum_n_34=0\n  local max_sum_n_35=0\n  local max_sum_n_36=0\n  local max_sum_n_37=0\n  local max_sum_n_38=0\n  local max_sum_n_39=0\n  local max_sum_n_40=0\n ",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i + j + k + l))\n          if [[ $sum -eq $n ]]; then\n            sum=$((i + j + k + l))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    if [[ $n -le 0 ]]; then\n        echo 0\n    else\n        local sum=$(( $(get_max_sum $((n/2))) + $(get_max_sum $((n/3))) + $(get_max_sum $((n/4))) + $(get_max_sum $((n/5))) ))\n        if [[ $sum -lt $n ]]; then\n            echo $n\n        else\n            echo $sum\n        fi\n    fi",
    "    local n=$1\n    local sum=0\n    if [ $n -gt 0 ]; then\n        local sum_1=$(($n/2))\n        local sum_2=$(($n/3))\n        local sum_3=$(($n/4))\n        local sum_4=$(($n/5))\n        local sum_1_max=$(get_max_sum $sum_1)\n        local sum_2_max=$(get_max_sum $sum_2)\n        local sum_3_max=$(get_max_sum $sum_3)\n        local sum_4_max=$(get_max_sum $sum_4)\n        local sum_max=$(($sum_1_max + $sum_2_max + $sum_3_max + $sum_4_max))\n        if [ $sum_max -gt $n ]; then\n            sum=$sum_max\n        else\n            sum=$n\n        fi\n    fi\n    echo $sum",
    "  if [ $1 -le 0 ]; then\n    echo 0\n    return\n  fi\n  if [ $1 -le 5 ]; then\n    echo $1\n    return\n  fi\n  local sum=$(($1/2 + $1/3 + $1/4 + $1/5))\n  if [ $sum -gt $1 ]; then\n    echo $sum\n  else\n    echo $1\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local divisors=(2 3 4 5)\n    local divisor=0\n\n    if (( n < 0 )); then\n        echo \"Invalid input\"\n        return 1\n    fi\n\n    if (( n == 0 )); then\n        echo 0\n        return 0\n    fi\n\n    if (( n == 1 )); then\n        echo 1\n        return 0\n    fi\n\n    for (( i = 0; i < ${#divisors[@]}; i++ )); do\n        divisor=${divisors[$i]}\n        sum=$(get_max_sum $(( n / divisor )))\n        if (( sum > max_sum )); then\n            max_sum=$sum\n        fi\n    done\n\n    if (( max_sum > n )); then\n        echo $max_sum\n    else\n        echo $n\n    fi",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local i=0\n\n  if [[ $n -le 0 ]]; then\n    echo \"0\"\n  else\n    for ((i=1; i<=n; i++)); do\n      sum=$(($sum + $i))\n      max_sum=$(($max_sum + $i))\n    done\n    echo \"$max_sum\"\n  fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for ((i=0; i<=n/2; i++)); do\n        for ((j=0; j<=n/3; j++)); do\n            for ((k=0; k<=n/4; k++)); do\n                for ((l=0; l<=n/5; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i+j+k+l+n))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for ((i=0; i<=n/2; i++)); do\n        for ((j=0; j<=n/3; j++)); do\n            for ((k=0; k<=n/4; k++)); do\n                for ((l=0; l<=n/5; l++)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -eq $n ]]; then\n                        sum=$((i+j+k+l))\n                        if [[ $sum -gt $max_sum ]]; then\n                            max_sum=$sum\n                        fi\n                    fi\n                done\n            done\n        done\n    done\n\n    echo $max_sum",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=n; k++)); do\n        for ((l=0; l<=n; l++)); do\n          sum=$((i+j+k+l))\n          if [[ $sum -eq $n ]]; then\n            sum=$((i/2+j/3+k/4+l/5))\n            if [[ $sum -gt $max_sum ]]; then\n              max_sum=$sum\n            fi\n          fi\n        done\n      done\n    done\n  done\n  echo $max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    for ((i=2; i<=5; i++)); do\n        if ((n%i==0)); then\n            sum=$((n/i))\n            max_sum=$((max_sum+sum))\n        fi\n    done\n    if ((max_sum>n)); then\n        echo $max_sum\n    else\n        echo $n\n    fi",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_div_2=0\n  local n_div_3=0\n  local n_div_4=0\n  local n_div_5=0\n  local n_div_2_sum=0\n  local n_div_3_sum=0\n  local n_div_4_sum=0\n  local n_div_5_sum=0\n  local n_div_2_max_sum=0\n  local n_div_3_max_sum=0\n  local n_div_4_max_sum=0\n  local n_div_5_max_sum=0\n  local n_div_2_sum_max_sum=0\n  local n_div_3_sum_max_sum=0\n  local n_div_4_sum_max_sum=0\n  local n_div_5_sum_max_sum=0\n  local n_div_2_max_sum_max_sum=0\n  local n_div_3_max_sum_max_sum=0\n  local n_div_4_max_sum_max_sum=0\n  local n_div_5_max_sum_max_sum=0\n  local n_div_2_sum_max_sum_max_sum=0\n  local n_div_3_sum_max_sum_max_sum=0\n  local n_div_4_sum_max_sum_max_sum=0\n  local n_div_5_sum_max_sum_max_sum=0\n  local n_div_2_max_sum_max_sum_max_sum=0\n  local n_div_3_max_sum_max_sum_max_sum=0\n  local n_div_4_max_sum_max_sum_max_sum=0\n  local n_div_5_max_sum_max_sum_max_sum=0\n  local n_div_2_sum_max_sum",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for ((i=0; i<=n; i+=2)); do\n        for ((j=0; j<=n; j+=3)); do\n            for ((k=0; k<=n; k+=4)); do\n                for ((l=0; l<=n; l+=5)); do\n                    sum=$((i+j+k+l))\n                    if [[ $sum -gt $n ]]; then\n                        continue\n                    fi\n                    if [[ $sum -gt $max_sum ]]; then\n                        max_sum=$sum\n                    fi\n                done\n            done\n        done\n    done\n    echo $max_sum",
    "    local n=$1\n    local sum=0\n    local max_sum=0\n    local max_sum_n=0\n    local max_sum_n_2=0\n    local max_sum_n_3=0\n    local max_sum_n_4=0\n    local max_sum_n_5=0\n\n    if [[ $n -lt 0 ]]; then\n        echo \"Invalid input\"\n        return 1\n    fi\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return 0\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo 2\n        return 0\n    fi\n\n    if [[ $n -eq 3 ]]; then\n        echo 3\n        return 0\n    fi\n\n    if [[ $n -eq 4 ]]; then\n        echo 4\n        return 0\n    fi\n\n    if [[ $n -eq 5 ]]; then\n        echo 5\n        return 0\n    fi\n\n    max_sum_n_2=$(get_max_sum $((n/2)))\n    max_sum_n_3=$(get_max_sum $((n/3)))\n    max_sum_n_4=$(get_max_sum $((n/4)))\n    max_sum_n_5=$(get_max_sum $((n/5)))\n\n    max_sum=$((max_sum_n_2 + max_sum_n_3 + max_sum_n_4 + max_sum_n_5))\n    max_sum_n=$n\n\n    if [[ $max_sum -gt $max_sum_n ]]; then\n        echo $max_sum\n    else\n        echo $max_sum_n\n    fi",
    "  local n=$1\n  if [[ $n -le 0 ]]; then\n    echo 0\n  else\n    local sum=$(($n/2 + $n/3 + $n/4 + $n/5))\n    if [[ $sum -gt $n ]]; then\n      echo $sum\n    else\n      echo $n\n    fi\n  fi",
    "  local n=$1\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n_divided_by_2=0\n  local n_divided_by_3=0\n  local n_divided_by_4=0\n  local n_divided_by_5=0\n  local sum_of_n_divided_by_2_3_4_5=0\n\n  if [[ $n -eq 0 ]]; then\n    echo 0\n    return\n  fi\n\n  if [[ $n -eq 1 ]]; then\n    echo 1\n    return\n  fi\n\n  if [[ $n -eq 2 ]]; then\n    echo 2\n    return\n  fi\n\n  if [[ $n -eq 3 ]]; then\n    echo 3\n    return\n  fi\n\n  if [[ $n -eq 4 ]]; then\n    echo 4\n    return\n  fi\n\n  if [[ $n -eq 5 ]]; then\n    echo 5\n    return\n  fi\n\n  n_divided_by_2=$(( n / 2 ))\n  n_divided_by_3=$(( n / 3 ))\n  n_divided_by_4=$(( n / 4 ))\n  n_divided_by_5=$(( n / 5 ))\n\n  i=$(get_max_sum $n_divided_by_2)\n  j=$(get_max_sum $n_divided_by_3)\n  k=$(get_max_sum $n_divided_by_4)\n  l=$(get_max_sum $n_divided_by_5)\n  m=$(( i + j + k + l ))\n\n  if [[ $m -gt $n ]]; then\n    max_sum=$m\n  else\n    max_sum=$n\n  fi\n\n  echo $max_sum",
    "  local n=$1\n  local sum=0\n  local max_sum=0\n  local max_sum_n=0\n  local max_sum_n_2=0\n  local max_sum_n_3=0\n  local max_sum_n_4=0\n  local max_sum_n_5=0\n\n  if [ $n -eq 0 ]; then\n    echo 0\n    return\n  fi\n\n  if [ $n -eq 1 ]; then\n    echo 1\n    return\n  fi\n\n  max_sum_n_2=$(get_max_sum $((n/2)))\n  max_sum_n_3=$(get_max_sum $((n/3)))\n  max_sum_n_4=$(get_max_sum $((n/4)))\n  max_sum_n_5=$(get_max_sum $((n/5)))\n\n  max_sum=$((max_sum_n_2 + max_sum_n_3 + max_sum_n_4 + max_sum_n_5))\n\n  if [ $max_sum -gt $n ]; then\n    echo $max_sum\n  else\n    echo $n\n  fi",
    "    local n=$1\n    local half=$((n / 2))\n    local third=$((n / 3))\n    local fourth=$((n / 4))\n    local fifth=$((n / 5))\n    local sum=$((half + third + fourth + fifth))\n    if [[ $sum -gt $n ]]; then\n        echo $sum\n    else\n        echo $n\n    fi",
    "    local n=$1\n    local max_sum=0\n    local sum=0\n    local i=0\n\n    if [[ $n -le 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -le 5 ]]; then\n        echo $n\n        return\n    fi\n\n    for ((i=1; i<=5; i++)); do\n        sum=$(get_max_sum $((n/i)))\n        if [[ $sum -gt $max_sum ]]; then\n            max_sum=$sum\n        fi\n    done\n\n    if [[ $((max_sum + n)) -gt $max_sum ]]; then\n        max_sum=$((max_sum + n))\n    fi\n\n    echo $max_sum"
  ]
}
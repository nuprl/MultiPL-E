{
  "name": "mbpp_448_cal_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to calculate the sum of perrin numbers.\n#\n# $1 is an integer\ncal_sum() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    cal_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"9\") = \"49\" ]]\n    [[ $(candidate \"10\") = \"66\" ]]\n    [[ $(candidate \"11\") = \"88\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $i -le $n ]; do\n        sum=$((sum + perrin($i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    if [ $1 -eq 1 ]\n    then\n        echo 0\n    elif [ $1 -eq 2 ]\n    then\n        echo 2\n    elif [ $1 -eq 3 ]\n    then\n        echo 3\n    else\n        local sum=0\n        local i=3\n        local p1=2\n        local p2=3\n        local p3=3\n        while [ $i -lt $1 ]\n        do\n            let sum=p1+p2\n            let p1=p2\n            let p2=p3\n            let p3=sum\n            let i=i+1\n        done\n        echo $sum\n    fi",
    "    local sum=0\n    local i=0\n    while [ $i -lt $1 ]; do\n        sum=$((sum+perrin[i]))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    while [ $i -lt $1 ]; do\n        sum=$(($sum + $(perrin $i)))\n        i=$(($i + 1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    while [ $i -lt $1 ]; do\n        sum=$((sum + $(perrin $i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $i -le $n ]\n    do\n        sum=$((sum + $(perrin $i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local a=3\n    local b=0\n    local c=2\n    local n=$1\n    while [ $i -lt $n ]\n    do\n        sum=$((sum+a))\n        j=$((j+1))\n        if [ $j -eq 3 ]\n        then\n            j=0\n            a=$((a+2))\n        fi\n        i=$((i+1))\n    done\n    while [ $k -lt $n ]\n    do\n        sum=$((sum+b))\n        k=$((k+1))\n        if [ $k -eq 2 ]\n        then\n            k=0\n            b=$((b+c))\n            c=$((c+2))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    local perrin=3\n    while [ $i -le $1 ]; do\n        sum=$((sum + perrin))\n        perrin=$((perrin + 2))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    while [ $i -lt $1 ]; do\n        sum=$((sum + perrin($i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local i=3\n    local sum=0\n    local perrin_num=()\n    perrin_num[0]=3\n    perrin_num[1]=0\n    perrin_num[2]=2\n    while [ $i -lt $1 ]; do\n        perrin_num[$i]=$(( ${perrin_num[$((i-2))]} + ${perrin_num[$((i-3))]} ))\n        sum=$(( sum + ${perrin_num[$i]} ))\n        i=$(( i + 1 ))\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]; do\n        sum=$((sum + perrin($i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]; do\n        sum=$((sum + $(perrin $i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    local perrin=3\n    local perrin_prev=2\n    local perrin_prev_prev=3\n\n    while [ $i -lt $n ]; do\n        sum=$((sum + perrin))\n        perrin_prev_prev=$perrin_prev\n        perrin_prev=$perrin\n        perrin=$((perrin_prev + perrin_prev_prev))\n        i=$((i + 1))\n    done\n\n    echo $sum",
    "    local sum=0\n    local i=0\n    while [ $i -lt $1 ]; do\n        sum=$(($sum + $(perrin $i)))\n        i=$(($i + 1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local perrin_num=0\n    for ((i=1; i<=$1; i++))\n    do\n        if [ $i -eq 1 ]; then\n            perrin_num=3\n        elif [ $i -eq 2 ]; then\n            perrin_num=0\n        elif [ $i -eq 3 ]; then\n            perrin_num=2\n        else\n            perrin_num=$((j+k))\n        fi\n        sum=$((sum+perrin_num))\n        j=$k\n        k=$perrin_num\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum+perrin($i)))\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]\n    do\n        sum=$((sum + perrin($i)))\n        i=$((i + 1))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    local perrin=0\n    while [ $i -lt $n ]; do\n        if [ $i -eq 0 ]; then\n            perrin=3\n        elif [ $i -eq 1 ]; then\n            perrin=0\n        elif [ $i -eq 2 ]; then\n            perrin=2\n        else\n            perrin=$((${perrin_array[$(($i-2))]}+${perrin_array[$(($i-3))]}))\n        fi\n        perrin_array[$i]=$perrin\n        sum=$(($sum+$perrin))\n        i=$(($i+1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]; do\n        sum=$((sum+perrin($i)))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local sum=0\n    local i=0\n    local perrin=3\n    local perrin_prev=2\n    local perrin_prev_prev=1\n    while [ $i -lt $1 ]; do\n        sum=$((sum + perrin))\n        perrin_prev_prev=$perrin_prev\n        perrin_prev=$perrin\n        perrin=$((perrin_prev + perrin_prev_prev))\n        i=$((i + 1))\n    done\n    echo $sum"
  ]
}
{
  "name": "mbpp_306_max_sum_increasing_subseq",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n#\n# $1 is a space-separated list\n# $2 is an integer\n# $3 is an integer\n# $4 is an integer\nmax_sum_increasing_subseq() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_306_max_sum_increasing_subseq.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_sum_increasing_subseq \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 101 2 3 100 4 5\" \"7\" \"4\" \"6\") = \"11\" ]]\n    [[ $(candidate \"1 101 2 3 100 4 5\" \"7\" \"2\" \"5\") = \"7\" ]]\n    [[ $(candidate \"11 15 19 21 26 28 31\" \"7\" \"2\" \"4\") = \"71\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a arr\n    local -i k\n    local -i i\n    local -i j\n    local -i max\n    local -i sum\n    local -i max_sum\n    local -i max_sum_k\n    local -i max_sum_i\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    i=\"$3\"\n    j=\"$4\"\n\n    max=0\n    sum=0\n    max_sum=0\n    max_sum_k=0\n    max_sum_i=0\n\n    for (( ; i < k; i++ )); do\n        max=0\n        for (( ; j < i; j++ )); do\n            if (( arr[j] < arr[i] )); then\n                if (( arr[j] > max )); then\n                    max=\"${arr[j]}\"\n                fi\n            fi\n        done\n        sum=\"$(( sum + max ))\"\n        if (( sum > max_sum )); then\n            max_sum=\"$sum\"\n            max_sum_k=\"$k\"\n            max_sum_i=\"$i\"\n        fi\n    done\n\n    echo \"$max_sum_k $max_sum_i $max_sum\"",
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local sum=0\n  local max=0\n  for ((j=0; j<i; j++)); do\n    if ((arr[j] < arr[k])); then\n      sum=$(max_sum_increasing_subseq arr k j)\n      if ((sum > max)); then\n        max=$sum\n      fi\n    fi\n  done\n  echo $((max + arr[k]))",
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local n=$4\n\n  if [ $i -eq $n ]; then\n    echo 0\n    return\n  fi\n\n  local max_sum=0\n  for j in $(seq $i $((k-1))); do\n    local sum=$(max_sum_increasing_subseq arr $k $((j+1)) $n)\n    if [ $((arr[j] + sum)) -gt $max_sum ]; then\n      max_sum=$((arr[j] + sum))\n    fi\n  done\n\n  echo $max_sum",
    "    local -a arr=(\"$@\")\n    local k=$2\n    local i=$3\n    local j=$4\n    local max=0\n    local sum=0\n    local sum_k=0\n    local sum_j=0\n    local sum_k_j=0\n    local sum_i_j=0\n    local sum_i_k=0\n    local sum_i_k_j=0\n    local sum_i_k_j_1=0\n    local sum_i_k_j_2=0\n    local sum_i_k_j_3=0\n    local sum_i_k_j_4=0\n    local sum_i_k_j_5=0\n    local sum_i_k_j_6=0\n    local sum_i_k_j_7=0\n    local sum_i_k_j_8=0\n    local sum_i_k_j_9=0\n    local sum_i_k_j_10=0\n    local sum_i_k_j_11=0\n    local sum_i_k_j_12=0\n    local sum_i_k_j_13=0\n    local sum_i_k_j_14=0\n    local sum_i_k_j_15=0\n    local sum_i_k_j_16=0\n    local sum_i_k_j_17=0\n    local sum_i_k_j_18=0\n    local sum_i_k_j_19=0\n    local sum_i_k_j_20=0\n    local sum_i_k_j_21=0\n    local sum_i_k_j_22=0\n    local sum_i_k_j_23=0\n    local sum_i_k_j_24=0\n    local sum_i_k_j_25=0\n    local sum_i_k_j_26=0\n    local sum_i_k_j_27=0\n    local sum_i_k_j_28=0\n    local sum_i_k_j_29=0\n    local sum_i_",
    "    local -a list=($1)\n    local k=$2\n    local i=$3\n    local j=$4\n    local max_sum=0\n    local sum=0\n    for ((; j < k; j++)); do\n        if ((list[j] < list[k])); then\n            sum=$(max_sum_increasing_subseq \"$1\" \"$2\" \"$3\" \"$((j + 1))\")\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $((max_sum + list[k]))",
    "  local -a arr=($1)\n  local k=$2\n  local i=$3\n  local n=$4\n  local max_sum=0\n  local sum=0\n  local j=0\n\n  for ((j=0; j<i; j++)); do\n    sum=0\n    if ((arr[j] < arr[k])); then\n      sum=$(max_sum_increasing_subseq \"${arr[@]}\" $j $i $n)\n    fi\n    if ((sum > max_sum)); then\n      max_sum=$sum\n    fi\n  done\n\n  echo $((max_sum + arr[k]))",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local sum=0\n    local max=0\n    local j=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq arr k j n)\n            if ((sum > max)); then\n                max=$sum\n            fi\n        fi\n    done\n    echo $((max + arr[k]))",
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local sum=0\n  local max=0\n  local j=0\n  for ((j=0; j<k; j++)); do\n    if ((arr[j] < arr[k] && j != k)); then\n      sum=$(max_sum_increasing_subseq arr[@] j $i)\n      if ((sum > max)); then\n        max=$sum\n      fi\n    fi\n  done\n  echo $((max + arr[k]))",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq arr j n)\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $((max_sum + arr[k]))",
    "    local -a arr=(\"${!1}\")\n    local k=$2\n    local i=$3\n    local sum=0\n    local max_sum=0\n    local max_sum_k=0\n    local max_sum_i=0\n    local max_sum_j=0\n    local max_sum_k_i=0\n    local max_sum_k_j=0\n    local max_sum_i_j=0\n    local max_sum_k_i_j=0\n    local max_sum_k_i_j_j=0\n    local max_sum_k_i_j_j_1=0\n    local max_sum_k_i_j_j_1_j=0\n    local max_sum_k_i_j_j_1_j_1=0\n    local max_sum_k_i_j_j_1_j_1_j=0\n    local max_sum_k_i_j_j_1_j_1_j_1=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1_j=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1_j_1=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1_j_1_j=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1_j_1_j_1=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1_j_1_j_1_j=0\n    local max_sum_k_i_j_j_1_j_1_j_1_j_1_",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local sum=0\n    local max_sum=0\n\n    if (( k <= i )); then\n        echo \"k must be greater than i\" >&2\n        return 1\n    fi\n\n    for (( j = 0; j < i; j++ )); do\n        if (( arr[j] < arr[k] )); then\n            sum=$(( arr[j] + max_sum_increasing_subseq arr k j ))\n            if (( sum > max_sum )); then\n                max_sum=$sum\n            fi\n        fi\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n\n    if [ $i -eq 0 ]; then\n        echo ${arr[$k]}\n    else\n        local max=0\n        for ((j=0; j<i; j++)); do\n            local sum=$(max_sum_increasing_subseq arr $k $j $n)\n            if [ $sum -gt $max ]; then\n                max=$sum\n            fi\n        done\n        echo $((max + ${arr[$k]}))\n    fi",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local sum=0\n    local max_sum=0\n    local j=0\n    local temp_sum=0\n    local temp_max_sum=0\n    local temp_j=0\n    local temp_i=0\n    local temp_k=0\n    local temp_arr=()\n\n    if [ $k -eq $i ]; then\n        echo \"${arr[$i]}\"\n        return\n    fi\n\n    for ((j=0; j<$i; j++)); do\n        if [ ${arr[$j]} -lt ${arr[$i]} ]; then\n            temp_sum=$(max_sum_increasing_subseq arr $i $j)\n            if [ $temp_sum -gt $max_sum ]; then\n                max_sum=$temp_sum\n            fi\n        fi\n    done\n\n    echo \"$((max_sum + arr[$i]))\"",
    "    local -a arr\n    local -i k\n    local -i i\n    local -i j\n    local -i max_sum\n    local -i sum\n    local -i max_sum_k\n    local -i sum_k\n    local -i max_sum_k_i\n    local -i sum_k_i\n\n    arr=($1)\n    k=$2\n    i=$3\n    j=$4\n\n    if (( i < 0 || i >= ${#arr[@]} || j < 0 || j >= ${#arr[@]} || k < 0 || k >= ${#arr[@]} || k <= i )); then\n        echo \"Invalid arguments\"\n        return 1\n    fi\n\n    max_sum=0\n    sum=0\n    max_sum_k=0\n    sum_k=0\n    max_sum_k_i=0\n    sum_k_i=0\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sum=${arr[i]}\n        sum_k=${arr[i]}\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if (( arr[j] > arr[i] )); then\n                sum+=arr[j]\n            fi\n            if (( arr[j] > arr[i] && j <= k )); then\n                sum_k+=arr[j]\n            fi\n        done\n        if (( sum > max_sum )); then\n            max_sum=$sum\n        fi\n        if (( sum_k > max_sum_k )); then\n            max_sum_k=$sum_k\n        fi\n    done\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sum_k_i=${arr[i]}\n        for (( j=i+1; j<${#arr[@]}; j++ )); do\n            if (( arr[j] > arr[i] && j <= k )); then\n                sum_k_i+=arr[j]\n            fi\n        done\n        if (( sum_k_i > max_sum_k_i )); then\n            max_sum_k_i=$sum",
    "    local list=$1\n    local i=$2\n    local k=$3\n    local sum=0\n    local max_sum=0\n    local max_k=0\n    local max_i=0\n    local max_j=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    local max_o=0\n    local max_p=0\n    local max_q=0\n    local max_r=0\n    local max_s=0\n    local max_t=0\n    local max_u=0\n    local max_v=0\n    local max_w=0\n    local max_x=0\n    local max_y=0\n    local max_z=0\n    local max_aa=0\n    local max_ab=0\n    local max_ac=0\n    local max_ad=0\n    local max_ae=0\n    local max_af=0\n    local max_ag=0\n    local max_ah=0\n    local max_ai=0\n    local max_aj=0\n    local max_ak=0\n    local max_al=0\n    local max_am=0\n    local max_an=0\n    local max_ao=0\n    local max_ap=0\n    local max_aq=0\n    local max_ar=0\n    local max_as=0\n    local max_at=0\n    local max_au=0\n    local max_av=0\n    local max_aw=0\n    local max_ax=0\n    local max_ay=0\n    local max_az=0\n    local max_ba=0\n    local max_bb=0\n    local max_bc=0\n    local max_bd=0\n    local max_be=0\n    local max_bf=0\n    local max_bg=0\n    local max_bh=0\n    local max_bi=0\n    local max_bj=0\n    local max_bk=0\n    local max_bl=0\n    local max_bm=0\n    local max_bn=0\n    local max_bo=0\n    local max_bp=",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local sum=0\n    local max_sum=0\n    local j=0\n    local n=${#arr[@]}\n\n    if [ $i -eq $n ]\n    then\n        echo 0\n        return\n    fi\n\n    if [ $k -eq $n ]\n    then\n        echo 0\n        return\n    fi\n\n    if [ $k -eq $i ]\n    then\n        echo 0\n        return\n    fi\n\n    if [ $k -lt $i ]\n    then\n        echo 0\n        return\n    fi\n\n    if [ $k -gt $n ]\n    then\n        echo 0\n        return\n    fi\n\n    for (( j=0; j<$i; j++ ))\n    do\n        if [ ${arr[$j]} -lt ${arr[$k]} ]\n        then\n            sum=$(max_sum_increasing_subseq arr $k $j)\n            if [ $sum -gt $max_sum ]\n            then\n                max_sum=$sum\n            fi\n        fi\n    done\n\n    max_sum=$(( max_sum + arr[k] ))\n    echo $max_sum",
    "    local -a arr=(\"${!1}\")\n    local k=$2\n    local i=$3\n    local j=$4\n    local max_sum=0\n    local sum=0\n    local -a max_arr=()\n    local -a arr_i=()\n    local -a arr_j=()\n    local -a arr_k=()\n    local -a arr_sum=()\n    local -a arr_max=()\n    local -a arr_max_sum=()\n\n    for ((j=0; j<${#arr[@]}; j++)); do\n        arr_i[$j]=$i\n        arr_j[$j]=$j\n        arr_k[$j]=$k\n        arr_sum[$j]=0\n        arr_max[$j]=0\n        arr_max_sum[$j]=0\n    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=0; j<${#arr[@]}; j++)); do\n            for ((k=0; k<${#arr[@]}; k++)); do\n                if [[ $i -lt $j && $j -lt $k ]]; then\n                    sum=$((arr[$i] + arr[$j] + arr[$k]))\n                    if [[ $sum -gt ${arr_sum[$k]} ]]; then\n                        arr_sum[$k]=$sum\n                        arr_max[$k]=$i\n                    fi\n                fi\n            done\n        done\n    done\n\n    for ((k=0; k<${#arr[@]}; k++)); do\n        if [[ ${arr_sum[$k]} -gt $max_sum ]]; then\n            max_sum=${arr_sum[$k]}\n            max_arr=(\"${arr[@]:${arr_max[$k]}:$k}\")\n        fi\n    done\n\n    echo \"max_sum: $max_sum\"\n    echo \"max_arr: ${max_arr[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    local j=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq arr j n)\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $((max_sum + arr[k]))",
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local n=$4\n\n  if (( i == k )); then\n    echo \"${arr[i]}\"\n    return\n  fi\n\n  local max_sum=0\n  local sum=0\n\n  for (( j = 0; j < i; j++ )); do\n    sum=$(max_sum_increasing_subseq arr $k $j $n)\n    if (( sum > max_sum && arr[j] < arr[i] )); then\n      max_sum=$sum\n    fi\n  done\n\n  echo $(( max_sum + arr[i] ))",
    "    local -a arr\n    local -i k\n    local -i i\n    local -i j\n    local -i max\n    local -i sum\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=$2\n    i=$3\n    j=$4\n    max=0\n    sum=0\n    for (( ; i < k; i++ )); do\n        sum=0\n        for (( ; j < k; j++ )); do\n            if (( arr[j] > arr[i] )); then\n                sum=$(( sum + arr[j] ))\n            fi\n        done\n        if (( sum > max )); then\n            max=$sum\n        fi\n    done\n    echo $max"
  ]
}
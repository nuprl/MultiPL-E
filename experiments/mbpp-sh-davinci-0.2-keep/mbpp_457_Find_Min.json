{
  "name": "mbpp_457_Find_Min",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n _List=$1\n    local _Min=${#_List[@]}\n    local _Index=0\n    for (( i=0; i<${#_List[@]}; i++ )); do\n        if [[ ${#_List[i]} -lt _Min ]]; then\n            _Min=${#_List[i]}\n            _Index=$i\n        fi\n    done\n    echo $_Index",
    "  local -a List=(\"${!1}\")\n  local -i Min=${#List[@]}\n  local -i Index=0\n  for ((i=0; i<${#List[@]}; i++)); do\n    if [[ ${#List[i]} -lt $Min ]]; then\n      Min=${#List[i]}\n      Index=$i\n    fi\n  done\n  echo $Index",
    "    local -n _list=$1\n    local min=${#_list[@]}\n    local min_index=0\n    local index=0\n    for i in \"${_list[@]}\"; do\n        if [[ ${#i} -lt $min ]]; then\n            min=${#i}\n            min_index=$index\n        fi\n        ((index++))\n    done\n    echo $min_index",
    "    local -n _list=$1\n    local min=${#_list[@]}\n    local min_index=0\n    for ((i=0; i<${#_list[@]}; i++)); do\n        if [[ ${#_list[$i]} -lt $min ]]; then\n            min=${#_list[$i]}\n            min_index=$i\n        fi\n    done\n    echo $min_index",
    "    local -n _list=$1\n    local _min=${#_list[@]}\n    local _index=0\n    for ((i=0; i<${#_list[@]}; i++)); do\n        if [[ ${#_list[i]} -lt $_min ]]; then\n            _min=${#_list[i]}\n            _index=$i\n        fi\n    done\n    echo $_index",
    "    local -n _List=$1\n    local -i _Min=${#_List[@]}\n    local -i _Index=0\n    for (( i=0; i<${#_List[@]}; i++ )); do\n        if [[ ${#_List[$i]} -lt $_Min ]]; then\n            _Min=${#_List[$i]}\n            _Index=$i\n        fi\n    done\n    echo $_Index",
    "  local -a List=(\"${!1}\")\n  local -i Min=${#List[0]}\n  local -i Index=0\n  for ((i=1; i<${#List[@]}; i++)); do\n    if ((${#List[i]} < Min)); then\n      Min=${#List[i]}\n      Index=$i\n    fi\n  done\n  echo $Index",
    "    local -n _list=$1\n    local min_len=${#_list[@]}\n    local min_idx=0\n    for ((i = 0; i < ${#_list[@]}; i++)); do\n        if [[ ${#_list[$i]} -lt $min_len ]]; then\n            min_len=${#_list[$i]}\n            min_idx=$i\n        fi\n    done\n    echo $min_idx",
    "    local -n _List=$1\n    local -i _Min=${#_List[@]}\n    local -i _Index=0\n    local -i _Length=0\n    for _Length in ${#_List[@]}; do\n        if [[ $_Length -lt $_Min ]]; then\n            _Min=$_Length\n            _Index=$_Length\n        fi\n    done\n    echo $_Index",
    "  local -n _array=$1\n  local _min=${#_array[@]}\n  local _index=0\n  for ((i=0; i<${#_array[@]}; i++)); do\n    if [[ ${#_array[i]} -lt $_min ]]; then\n      _min=${#_array[i]}\n      _index=$i\n    fi\n  done\n  echo $_index",
    "    local -n _Array=$1\n    local _Min=${#_Array[@]}\n    local _Min_Index=0\n    for ((i=0; i<${#_Array[@]}; i++)); do\n        if [[ ${#_Array[i]} -lt $_Min ]]; then\n            _Min=${#_Array[i]}\n            _Min_Index=$i\n        fi\n    done\n    echo $_Min_Index",
    "  local -n _list=$1\n  local min_len=${#_list[@]}\n  local min_index=0\n  for ((i=0; i<${#_list[@]}; i++)); do\n    if [[ ${#_list[$i]} -lt $min_len ]]; then\n      min_len=${#_list[$i]}\n      min_index=$i\n    fi\n  done\n  echo $min_index",
    "    local -n _list=$1\n    local min_len=${#_list[0]}\n    local min_idx=0\n    for ((i=1; i<${#_list[@]}; i++)); do\n        if [[ ${#_list[i]} -lt $min_len ]]; then\n            min_len=${#_list[i]}\n            min_idx=$i\n        fi\n    done\n    echo $min_idx",
    "  local -n _List=$1\n  local _Min=${#_List[@]}\n  local _Min_Index=0\n  local _Index=0\n  for _Sublist in \"${_List[@]}\"; do\n    if [[ ${#_Sublist[@]} -lt _Min ]]; then\n      _Min=${#_Sublist[@]}\n      _Min_Index=$_Index\n    fi\n    ((_Index++))\n  done\n  echo $_Min_Index",
    "    local -n _list=$1\n    local min=${#_list[@]}\n    local min_index=0\n    local i=0\n    for sublist in \"${_list[@]}\"; do\n        if [ ${#sublist[@]} -lt $min ]; then\n            min=${#sublist[@]}\n            min_index=$i\n        fi\n        ((i++))\n    done\n    echo $min_index",
    "  local -n _list=$1\n  local min=${#_list[@]}\n  local min_index=0\n  for (( i = 0; i < ${#_list[@]}; i++ )); do\n    if [[ ${#_list[$i]} -lt $min ]]; then\n      min=${#_list[$i]}\n      min_index=$i\n    fi\n  done\n  echo $min_index",
    "    local -n _list=$1\n    local min=${#_list[@]}\n    local min_index=0\n    for ((i=0; i<${#_list[@]}; i++)); do\n        if [[ ${#_list[$i]} -lt $min ]]; then\n            min=${#_list[$i]}\n            min_index=$i\n        fi\n    done\n    echo $min_index",
    "  local -n _List=$1\n  local -i Min=${#_List[@]}\n  local -i Index=0\n  local -i I=0\n  for I in ${!_List[@]}; do\n    if [[ ${#_List[I]} -lt Min ]]; then\n      Min=${#_List[I]}\n      Index=$I\n    fi\n  done\n  echo $Index",
    "  local -n _list=$1\n  local min=${#_list[@]}\n  local min_index=0\n  for ((i=0; i<${#_list[@]}; i++)); do\n    if [[ ${#_list[i]} -lt $min ]]; then\n      min=${#_list[i]}\n      min_index=$i\n    fi\n  done\n  echo $min_index",
    "  local -n _List=$1\n  local _Min=${#_List[@]}\n  local _Min_Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[i]} -lt $_Min ]]; then\n      _Min=${#_List[i]}\n      _Min_Index=$i\n    fi\n  done\n  echo $_Min_Index"
  ]
}
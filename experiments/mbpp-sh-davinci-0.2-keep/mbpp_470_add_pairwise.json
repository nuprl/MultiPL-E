{
  "name": "mbpp_470_add_pairwise",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the pairwise addition of the neighboring elements of the given tuple.\n#\n# $1 is a space-separated list\nadd_pairwise() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_470_add_pairwise.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    add_pairwise \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 7 8 10\") = \"6 12 15 18\" ]]\n    [[ $(candidate \"2 6 8 9 11\") = \"8 14 17 20\" ]]\n    [[ $(candidate \"3 7 9 10 12\") = \"10 16 19 22\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local sum=0\n    for ((i=0; i<$#-1; i++)); do\n        sum=$((sum + $(( ${@:i+1:1} + ${@:i+2:1} ))))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=0; i<$#-1; i++)); do\n        sum=$((sum + $(( ${@:i+1:1} + ${@:i+2:1} ))))\n    done\n    echo $sum",
    "  local -n list=$1\n  local sum=0\n  for ((i=0; i<${#list[@]}; i++)); do\n    ((i == ${#list[@]} - 1)) && break\n    ((sum += list[i] + list[i+1]))\n  done\n  echo $sum",
    "    local sum=0\n    for (( i=0; i<$#-1; i++ )); do\n        sum=$(( sum + $(( ${@:$i:1} + ${@:$((i+1)):1} )) ))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=0; i<$#-1; i++)); do\n        sum=$((sum + $(( ${@:$i+1:1} + ${@:$i+2:1} ))))\n    done\n    echo $sum",
    "  local -a array=($1)\n  local -i sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n    ((i < ${#array[@]}-1)) && ((sum += array[i] + array[i+1]))\n  done\n  echo $sum",
    "  local -a list=($1)\n  local -a result=()\n  for ((i=0; i<${#list[@]}; i++)); do\n    if ((i == ${#list[@]} - 1)); then\n      result+=($((list[i] + list[0])))\n    else\n      result+=($((list[i] + list[i+1])))\n    fi\n  done\n  echo ${result[@]}",
    "    local -a array\n    local -i i\n    local -i sum=0\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]}; i++)); do\n        ((sum += array[i] + array[i+1]))\n    done\n    echo \"$sum\"",
    "    local sum=0\n    local i=0\n    local nums=($1)\n    local len=${#nums[@]}\n    while [ $i -lt $len ]; do\n        sum=$((sum + nums[$i] + nums[$((i+1))]))\n        i=$((i+2))\n    done\n    echo $sum",
    "  local sum=0\n  for (( i=0; i<$#; i++ )); do\n    (( sum += ${!i} + ${!i+1} ))\n  done\n  echo $sum",
    "    local sum=0\n    for ((i=0; i<$#-1; i++)); do\n        sum=$((sum + $(( ${@:$i:1} + ${@:$((i+1)):1} ))))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=0; i<${#1}; i++)); do\n        sum=$((sum + ${1:i:1} + ${1:i+1:1}))\n    done\n    echo $sum",
    "    local -a array=(\"$@\")\n    local -a result\n    local i\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i == ${#array[@]}-1)); then\n            result[$i]=$((array[i] + array[0]))\n        else\n            result[$i]=$((array[i] + array[i+1]))\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local sum=0\n    for ((i=0; i<$#; i++)); do\n        sum=$((sum + ${!i} + ${!i+1}))\n    done\n    echo $sum",
    "  local sum=0\n  local list=($1)\n  for ((i=0; i<${#list[@]}; i++)); do\n    ((i == ${#list[@]} - 1)) && break\n    ((sum += list[i] + list[i+1]))\n  done\n  echo $sum",
    "    local -a array=($1)\n    local -a result\n    local i\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((i == 0)); then\n            result[$i]=$((array[i] + array[i+1]))\n        elif ((i == ${#array[@]} - 1)); then\n            result[$i]=$((array[i] + array[i-1]))\n        else\n            result[$i]=$((array[i] + array[i-1] + array[i+1]))\n        fi\n    done\n    echo ${result[@]}",
    "  local -n arr=$1\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((i==${#arr[@]}-1)) && break\n    ((sum+=arr[i]+arr[i+1]))\n  done\n  echo $sum",
    "  local -a array=(\"$@\")\n  local -i sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n    sum=$((sum + array[i] + array[i+1]))\n    i=$((i+1))\n  done\n  echo $sum",
    "  local sum=0\n  local list=$1\n  local n=$(echo $list | wc -w)\n  for i in $(seq 1 $n)\n  do\n    local x=$(echo $list | cut -d' ' -f$i)\n    local y=$(echo $list | cut -d' ' -f$((i+1)))\n    sum=$((sum + x + y))\n  done\n  echo $sum",
    "    local sum=0\n    local list=($1)\n    for ((i=0; i<${#list[@]}; i++))\n    do\n        ((sum+=list[i]))\n        ((i++))\n        ((sum+=list[i]))\n    done\n    echo $sum"
  ]
}
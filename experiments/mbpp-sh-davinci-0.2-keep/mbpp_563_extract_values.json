{
  "name": "mbpp_563_extract_values",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to extract values between quotation marks from a string.\n#\n# $1 is a string\nextract_values() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    extract_values \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\\\"Python\\\", \\\"PHP\\\", \\\"Java\\\"\") = \"Python PHP Java\" ]]\n    [[ $(candidate \"\\\"python\\\",\\\"program\\\",\\\"language\\\"\") = \"python program language\" ]]\n    [[ $(candidate \"\\\"red\\\",\\\"blue\\\",\\\"green\\\",\\\"yellow\\\"\") = \"red blue green yellow\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo $1 | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo $1 | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    local string=\"$1\"\n    local values=()\n    local value\n    while [[ \"$string\" =~ \\\"([^\\\"]+)\\\" ]]; do\n        value=\"${BASH_REMATCH[1]}\"\n        values+=(\"$value\")\n        string=\"${string#*\\\"$value\\\"}\"\n    done\n    echo \"${values[@]}\"",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo $1 | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo $1 | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -r 's/^.*\"([^\"]*)\".*$/\\1/'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/^.*\"\\(.*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -E 's/[^\"]*\"([^\"]*)\"[^\"]*/\\1/g'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/\\(\".*\"\\)/\\1/p'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | grep -oP '\"(.*?)\"'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    local string=\"$1\"\n    local values=()\n    local value=\"\"\n    local in_quotes=0\n    local i=0\n    local c=\"\"\n\n    while [ $i -lt ${#string} ]; do\n        c=\"${string:$i:1}\"\n        if [ \"$c\" == \"\\\"\" ]; then\n            if [ $in_quotes -eq 0 ]; then\n                in_quotes=1\n            else\n                in_quotes=0\n                values+=(\"$value\")\n                value=\"\"\n            fi\n        elif [ $in_quotes -eq 1 ]; then\n            value+=\"$c\"\n        fi\n        i=$((i + 1))\n    done\n\n    echo \"${values[@]}\"",
    "    local str=\"$1\"\n    local values=()\n    local value\n    while [[ \"$str\" =~ \\\"([^\\\"]+)\\\" ]]; do\n        value=\"${BASH_REMATCH[1]}\"\n        values+=(\"$value\")\n        str=\"${str#*\\\"$value\\\"}\"\n    done\n    echo \"${values[@]}\"",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo $1 | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -r 's/^.*\"([^\"]*)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo $1 | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "  local string=\"$1\"\n  local values=()\n  local value=''\n  local in_quotes=0\n  local i=0\n  local c=''\n\n  for ((i=0; i<${#string}; i++)); do\n    c=\"${string:$i:1}\"\n    if [[ $c == '\"' ]]; then\n      if [[ $in_quotes -eq 0 ]]; then\n        in_quotes=1\n      else\n        in_quotes=0\n        values+=(\"$value\")\n        value=''\n      fi\n    elif [[ $in_quotes -eq 1 ]]; then\n      value+=\"$c\"\n    fi\n  done\n\n  echo \"${values[@]}\"",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo $1 | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -r 's/.*\"([^\"]+)\".*/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -r 's/^.*\"([^\"]*)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | grep -o '\"[^\"]*\"' | tr -d '\"'",
    "    local string=\"$1\"\n    local regex='\"([^\"]*)\"'\n    [[ $string =~ $regex ]]\n    echo \"${BASH_REMATCH[1]}\"",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    local string=\"$1\"\n    local values=()\n    local value=''\n    local in_quotes=false\n    local i=0\n    local c=''\n    local len=${#string}\n    while [ $i -lt $len ]; do\n        c=${string:$i:1}\n        if [ \"$c\" = '\"' ]; then\n            if $in_quotes; then\n                values+=(\"$value\")\n                value=''\n            fi\n            in_quotes=!$in_quotes\n        elif $in_quotes; then\n            value+=\"$c\"\n        fi\n        i=$((i+1))\n    done\n    echo \"${values[@]}\"",
    "  echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo $1 | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo $1 | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -E 's/^.*\"([^\"]*)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\(.*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -E 's/\"[^\"]*\"/\\n&\\n/g' | grep -E '^\"[^\"]*\"$' | sed -E 's/^\"//g;s/\"$//g'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\(.*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    # remove everything before the first quote\n    local string=\"${1#*\\\"}\"\n    # remove everything after the last quote\n    string=\"${string%\\\"*}\"\n    # replace all quotes with newlines\n    string=\"${string//\\\"/\\\\n}\"\n    # replace all commas with newlines\n    string=\"${string//,/\\\\n}\"\n    # replace all spaces with newlines\n    string=\"${string// /\\\\n}\"\n    # remove all empty lines\n    string=\"$(echo \"$string\" | grep -v '^$')\"\n    # remove all lines that start with a number\n    string=\"$(echo \"$string\" | grep -v '^[0-9]')\"\n    # remove all lines that start with a dash\n    string=\"$(echo \"$string\" | grep -v '^-')\"\n    # remove all lines that start with a plus\n    string=\"$(echo \"$string\" | grep -v '^+')\"\n    # remove all lines that start with a slash\n    string=\"$(echo \"$string\" | grep -v '^/')\"\n    # remove all lines that start with a backslash\n    string=\"$(echo \"$string\" | grep -v '^\\\\')\"\n    # remove all lines that start with a dot\n    string=\"$(echo \"$string\" | grep -v '^\\.')\"\n    # remove all lines that start with a colon\n    string=\"$(echo \"$string\" | grep -v '^:')\"\n    # remove all lines that start with a semicolon\n    string=\"$(echo \"$string\" | grep -v '^;')\"\n    # remove all lines that start with a pipe\n    string=\"$(echo \"$string\" | grep -v '^|')\"\n    # remove all lines that start with a backtick\n    string=\"$(echo \"$string\" | grep -v '^`')\"\n    # remove all lines that start with a tilde\n    string=\"$(echo \"$string\" | grep -v '^~')\"\n    # remove all lines that start with a less than\n    string=\"$(echo \"$string\" | grep -v '^<')\"\n    # remove all lines that start with a greater than\n",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo $1 | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\(.*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "  echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | grep -oP '(?<=\")[^\"]*(?=\")'",
    "    echo \"$1\" | sed -n 's/^.*\"\\([^\"]*\\)\".*$/\\1/p'",
    "    echo \"$1\" | sed -n 's/.*\"\\([^\"]*\\)\".*/\\1/p'",
    "    echo \"$1\" | sed -E 's/\"[^\"]*\"/\\n&\\n/g' | grep -E '^\"[^\"]*\"$' | sed -E 's/^\"//;s/\"$//'",
    "    echo \"$1\" | sed -e 's/^.*\"\\([^\"]*\\)\".*$/\\1/'"
  ]
}
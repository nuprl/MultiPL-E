{
  "name": "mbpp_259_maximize_elements",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to maximize the given two tuples.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nmaximize_elements() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_259_maximize_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    maximize_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3\\n4 5\\n2 9\\n1 10\" \"6 7\\n3 9\\n1 1\\n7 3\") = \"6 7\\n4 9\\n2 9\\n7 10\" ]]\n    [[ $(candidate \"2 4\\n5 6\\n3 10\\n2 11\" \"7 8\\n4 10\\n2 2\\n8 4\") = \"7 8\\n5 10\\n3 10\\n8 11\" ]]\n    [[ $(candidate \"3 5\\n6 7\\n4 11\\n3 12\" \"8 9\\n5 11\\n3 3\\n9 5\") = \"8 9\\n6 11\\n4 11\\n9 12\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | awk '{print $1>$2?$1:$2}')\n    done\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(max ${a[i]} ${b[i]})\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++))\n    do\n        c[$i]=$(echo \"${a[$i]} ${b[$i]}\" | awk '{print $1 > $2 ? $1 : $2}')\n    done\n    echo ${c[@]}",
    "    local a=($1)\n    local b=($2)\n    local max=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            max[i]=${a[i]}\n        else\n            max[i]=${b[i]}\n        fi\n    done\n    echo ${max[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a\n    local -a b\n    local -a c\n    local i\n    local j\n    local k\n    local n\n    local m\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    IFS=\" \" read -a a <<< \"$1\"\n    IFS=\" \" read -a b <<< \"$2\"\n    n=${#a[@]}\n    m=${#b[@]}\n    if [[ $n -lt $m ]]; then\n        p=$n\n        q=$m\n        r=${a[@]}\n        s=${b[@]}\n    else\n        p=$m\n        q=$n\n        r=${b[@]}\n        s=${a[@]}\n    fi\n    for ((i=0; i<p; i++)); do\n        t=${r[$i]}\n        u=${s[$i]}\n        if [[ $t -gt $u ]]; then\n            v=$t\n            w=$u\n        else\n            v=$u\n            w=$t\n        fi\n        c[$i]=$v\n        c[$((q+i))]=$w\n    done\n    for ((j=p; j<q; j++)); do\n        c[$j]=${s[$j]}\n    done\n    x=$(IFS=\" \"; echo \"${c[*]}\")\n    echo \"$x\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo \"${c[*]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local -a result=()\n  for ((i=0; i<${#array1[@]}; i++)); do\n    if ((array1[i] > array2[i])); then\n      result[i]=${array1[i]}\n    else\n      result[i]=${array2[i]}\n    fi\n  done\n  echo \"${result[@]}\"",
    "    local -a first=($1)\n    local -a second=($2)\n    local -a result=()\n    local i\n    for ((i=0; i<${#first[@]}; i++)); do\n        if (( ${first[$i]} > ${second[$i]} )); then\n            result+=(${first[$i]})\n        else\n            result+=(${second[$i]})\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a list1\n  local -a list2\n  local -a list3\n  local -a list4\n  local -a list5\n  local -a list6\n  local -a list7\n  local -a list8\n  local -a list9\n  local -a list10\n  local -a list11\n  local -a list12\n  local -a list13\n  local -a list14\n  local -a list15\n  local -a list16\n  local -a list17\n  local -a list18\n  local -a list19\n  local -a list20\n  local -a list21\n  local -a list22\n  local -a list23\n  local -a list24\n  local -a list25\n  local -a list26\n  local -a list27\n  local -a list28\n  local -a list29\n  local -a list30\n  local -a list31\n  local -a list32\n  local -a list33\n  local -a list34\n  local -a list35\n  local -a list36\n  local -a list37\n  local -a list38\n  local -a list39\n  local -a list40\n  local -a list41\n  local -a list42\n  local -a list43\n  local -a list44\n  local -a list45\n  local -a list46\n  local -a list47\n  local -a list48\n  local -a list49\n  local -a list50\n  local -a list51\n  local -a list52\n  local -a list53\n  local -a list54\n  local -a list55\n  local -a list56\n  local -a list57\n  local -a list58\n  local -a list59\n  local -a list60\n  local -a list61\n  local -a list62\n  local -a list63\n  local -a list64\n  local -a list65\n  local -a list66\n  local -a list67\n  local -a list68\n  local -a list69\n  local -a list70\n  local -a list71\n  local -a list72\n  local -a list73\n",
    "  local -a first=($1)\n  local -a second=($2)\n  local -a result=()\n  for ((i=0; i<${#first[@]}; i++)); do\n    if (( ${first[$i]} > ${second[$i]} )); then\n      result[$i]=${first[$i]}\n    else\n      result[$i]=${second[$i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local i\n    for ((i = 0; i < ${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo ${c[@]}",
    "    local -a array1=($1)\n    local -a array2=($2)\n    local -a result=()\n    local i=0\n    for ((i=0; i<${#array1[@]}; i++)); do\n        if (( ${array1[$i]} > ${array2[$i]} )); then\n            result[$i]=${array1[$i]}\n        else\n            result[$i]=${array2[$i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        if ((tuple1[i] > tuple2[i])); then\n            result[i]=${tuple1[i]}\n        else\n            result[i]=${tuple2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      result[i]=${a[i]}\n    else\n      result[i]=${b[i]}\n    fi\n  done\n  echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "  local -a tuple1=($1)\n  local -a tuple2=($2)\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    if ((tuple1[i] > tuple2[i])); then\n      result[i]=${tuple1[i]}\n    else\n      result[i]=${tuple2[i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a result=()\n    for ((i=0; i<${#a1[@]}; i++)); do\n        if ((a1[i] > a2[i])); then\n            result[i]=${a1[i]}\n        else\n            result[i]=${a2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      result[i]=${a[i]}\n    else\n      result[i]=${b[i]}\n    fi\n  done\n  echo \"${result[*]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -n | tail -n1)\n  done\n  echo \"${c[@]}\"",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local -a result\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    if ((arr1[i] > arr2[i])); then\n      result[i]=${arr1[i]}\n    else\n      result[i]=${arr2[i]}\n    fi\n  done\n  echo \"${result[@]}\"",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a a3=()\n    local i=0\n    for i in ${!a1[@]}; do\n        if [[ ${a1[$i]} -gt ${a2[$i]} ]]; then\n            a3[$i]=${a1[$i]}\n        else\n            a3[$i]=${a2[$i]}\n        fi\n    done\n    echo ${a3[@]}",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local -a result=()\n\n  for ((i=0; i<${#array1[@]}; i++)); do\n    if ((array1[i] > array2[i])); then\n      result+=(${array1[i]})\n    else\n      result+=(${array2[i]})\n    fi\n  done\n\n  echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i < ${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a max=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            max[i]=${a[i]}\n        else\n            max[i]=${b[i]}\n        fi\n    done\n    echo \"${max[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo \"${c[*]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -1)\n    done\n    echo ${c[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        if ((tuple1[i] > tuple2[i])); then\n            result+=(${tuple1[i]})\n        else\n            result+=(${tuple2[i]})\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | awk '{print $1>$2?$1:$2}')\n    done\n    echo \"${c[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if (( ${list1[$i]} > ${list2[$i]} )); then\n            result[$i]=${list1[$i]}\n        else\n            result[$i]=${list2[$i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local i\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if (( list1[i] > list2[i] )); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(max ${a[i]} ${b[i]})\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((${a[i]} > ${b[i]})); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo \"${c[*]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n  done\n  echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    if (( a[i] > b[i] )); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i < ${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a a3\n    local i\n    for ((i=0; i<${#a1[@]}; i++)); do\n        a3[$i]=$((${a1[$i]}>${a2[$i]}?${a1[$i]}:${a2[$i]}))\n    done\n    echo \"${a3[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if (( a[i] > b[i] )); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      result[i]=${a[i]}\n    else\n      result[i]=${b[i]}\n    fi\n  done\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n  done\n  echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n  done\n  echo ${c[@]}",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local -a result=()\n  for ((i=0; i<${#array1[@]}; i++)); do\n    if ((array1[i] > array2[i])); then\n      result+=(${array1[i]})\n    else\n      result+=(${array2[i]})\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if [[ ${a[$i]} -gt ${b[$i]} ]]; then\n      c[$i]=${a[$i]}\n    else\n      c[$i]=${b[$i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local i\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[*]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i=0\n  while [ $i -lt ${#a[@]} ]; do\n    if [ ${a[$i]} -gt ${b[$i]} ]; then\n      c[$i]=${a[$i]}\n    else\n      c[$i]=${b[$i]}\n    fi\n    i=$((i+1))\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | awk '{print $1>$2?$1:$2}')\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]} > ${b[$i]} ? ${a[$i]} : ${b[$i]}))\n    done\n    echo ${c[@]}",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    result[$i]=$(max ${list1[$i]} ${list2[$i]})\n  done\n  echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((a[i] > b[i] ? a[i] : b[i]))\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -1)\n    done\n    echo \"${c[@]}\"",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local -a result=()\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        if (( arr1[i] > arr2[i] )); then\n            result+=(${arr1[i]})\n        else\n            result+=(${arr2[i]})\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n  done\n  echo \"${c[*]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n  done\n  echo \"${c[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        if ((tuple1[i] > tuple2[i])); then\n            result[i]=${tuple1[i]}\n        else\n            result[i]=${tuple2[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n  done\n  echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[*]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local i\n    for (( i=0; i<${#list1[@]}; i++ )); do\n        if (( list1[i] > list2[i] )); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n  done\n  echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a a\n    local -a b\n    local -a c\n    local i\n    local j\n    local k\n\n    a=($1)\n    b=($2)\n\n    k=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[k]=$((a[i] * b[j]))\n            k=$((k + 1))\n        done\n    done\n\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(max ${a[i]} ${b[i]})\n  done\n  echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(max ${a[i]} ${b[i]})\n  done\n  echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result+=(${list1[i]})\n        else\n            result+=(${list2[i]})\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result+=(${list1[i]})\n        else\n            result+=(${list2[i]})\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i = 0; i < ${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | awk '{print $1 > $2 ? $1 : $2}')\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]}>${b[$i]}?${a[$i]}:${b[$i]}))\n    done\n    echo ${c[@]}",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a result=()\n    for ((i=0; i<${#a1[@]}; i++)); do\n        if ((a1[i] > a2[i])); then\n            result[i]=${a1[i]}\n        else\n            result[i]=${a2[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(max ${a[i]} ${b[i]})\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i=0\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[$i]=$((${a[$i]}>${b[$i]}?${a[$i]}:${b[$i]}))\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$(echo \"${list1[i]} ${list2[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${result[@]}\"",
    "  local -a tuple1=($1)\n  local -a tuple2=($2)\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    if ((tuple1[i] > tuple2[i])); then\n      result[i]=${tuple1[i]}\n    else\n      result[i]=${tuple2[i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((a[i] > b[i] ? a[i] : b[i]))\n    done\n    echo \"${c[@]}\"",
    "    local -a first_list=($1)\n    local -a second_list=($2)\n    local -a result=()\n    for ((i = 0; i < ${#first_list[@]}; i++)); do\n        if ((${first_list[$i]} > ${second_list[$i]})); then\n            result+=(\"${first_list[$i]}\")\n        else\n            result+=(\"${second_list[$i]}\")\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$(echo \"${a[$i]} ${b[$i]}\" | awk '{print $1>$2?$1:$2}')\n    done\n    echo \"${c[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local i\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if (( ${a[$i]} > ${b[$i]} )); then\n      result+=(${a[$i]})\n    else\n      result+=(${b[$i]})\n    fi\n  done\n\n  echo \"${result[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        if ((tuple1[i] > tuple2[i])); then\n            result[i]=${tuple1[i]}\n        else\n            result[i]=${tuple2[i]}\n        fi\n    done\n\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -1)\n    done\n    echo \"${c[@]}\"",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    if ((list1[i] > list2[i])); then\n      result+=(${list1[i]})\n    else\n      result+=(${list2[i]})\n    fi\n  done\n\n  echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -1)\n  done\n  echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if (( ${list1[i]} > ${list2[i]} )); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((a[i] > b[i] ? a[i] : b[i]))\n    done\n    echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a array1=($1)\n    local -a array2=($2)\n    local -i max=0\n    local -i i=0\n    local -i j=0\n    local -i len1=${#array1[@]}\n    local -i len2=${#array2[@]}\n    local -i max_i=0\n    local -i max_j=0\n    for (( i=0; i<len1; i++ )); do\n        for (( j=0; j<len2; j++ )); do\n            if [[ ${array1[i]} -eq ${array2[j]} ]]; then\n                if [[ ${array1[i]} -gt $max ]]; then\n                    max=${array1[i]}\n                    max_i=$i\n                    max_j=$j\n                fi\n            fi\n        done\n    done\n    echo \"${array1[max_i]} ${array2[max_j]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if (( ${list1[i]} > ${list2[i]} )); then\n            result+=(${list1[i]})\n        else\n            result+=(${list2[i]})\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local max=0\n    local max_index=0\n    local i=0\n    for element in $1; do\n        if [ $element -gt $max ]; then\n            max=$element\n            max_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo \"$max $max_index\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$(echo \"${a[$i]} ${b[$i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo \"${c[@]}\"",
    "  local -a tuple1=($1)\n  local -a tuple2=($2)\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    if (( tuple1[i] > tuple2[i] )); then\n      result[i]=${tuple1[i]}\n    else\n      result[i]=${tuple2[i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo \"${c[@]}\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        if ((tuple1[i] > tuple2[i])); then\n            result[i]=${tuple1[i]}\n        else\n            result[i]=${tuple2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(max ${a[i]} ${b[i]})\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]}>${b[$i]}?${a[$i]}:${b[$i]}))\n    done\n    echo ${c[@]}",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local -a result\n  for ((i=0; i<${#array1[@]}; i++)); do\n    result[i]=$((${array1[i]}>${array2[i]}?${array1[i]}:${array2[i]}))\n  done\n  echo ${result[@]}",
    "    local -a array1=($1)\n    local -a array2=($2)\n    local -a result=()\n    local i\n    for ((i=0; i<${#array1[@]}; i++)); do\n        if ((array1[i] > array2[i])); then\n            result[i]=${array1[i]}\n        else\n            result[i]=${array2[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[$i]=$(echo \"${a[$i]} ${b[$i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n  done\n  echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if ((list1[i] > list2[i])); then\n            result[i]=${list1[i]}\n        else\n            result[i]=${list2[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if (( ${a[i]} > ${b[i]} )); then\n      result[i]=${a[i]}\n    else\n      result[i]=${b[i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -1)\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n    echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | awk '{print $1>$2?$1:$2}')\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local -a result=()\n  for ((i=0; i<${#array1[@]}; i++)); do\n    if (( array1[i] > array2[i] )); then\n      result[i]=${array1[i]}\n    else\n      result[i]=${array2[i]}\n    fi\n  done\n  echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[$i]=$((${a[$i]}>${b[$i]}?${a[$i]}:${b[$i]}))\n  done\n  echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i=0\n  for ((i=0; i < ${#a[@]}; i++)); do\n    if [[ ${a[$i]} -gt ${b[$i]} ]]; then\n      c[$i]=${a[$i]}\n    else\n      c[$i]=${b[$i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]} > ${b[$i]} ? ${a[$i]} : ${b[$i]}))\n    done\n    echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n\n  echo \"${c[*]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -1)\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((a[i] > b[i] ? a[i] : b[i]))\n    done\n    echo ${c[@]}",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    if (( ${list1[$i]} > ${list2[$i]} )); then\n      result[$i]=${list1[$i]}\n    else\n      result[$i]=${list2[$i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$(echo \"${list1[i]} ${list2[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo \"${result[@]}\"",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  local -i i=0\n  local -i len=${#list1[@]}\n  while [ $i -lt $len ]; do\n    if [ ${list1[$i]} -gt ${list2[$i]} ]; then\n      result[$i]=${list1[$i]}\n    else\n      result[$i]=${list2[$i]}\n    fi\n    i=$i+1\n  done\n  echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for i in ${!list1[@]}; do\n        if [[ ${list1[$i]} -gt ${list2[$i]} ]]; then\n            result+=(${list1[$i]})\n        else\n            result+=(${list2[$i]})\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[$i]=$((${a[$i]}>${b[$i]}?${a[$i]}:${b[$i]}))\n  done\n  echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(max ${a[i]} ${b[i]})\n  done\n  echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(max ${a[i]} ${b[i]})\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c+=(\"$(max ${a[i]} ${b[i]})\")\n    done\n    echo \"${c[@]}\"",
    "    # TODO: Write your code here\n    # Hint: You can use tr to replace space with newline\n    #       and then use sort -n to sort the numbers.\n    #       Finally, use tr again to replace newline with space.\n    #       For example:\n    #       echo \"1 2 3\" | tr \" \" \"\\n\" | sort -n | tr \"\\n\" \" \"\n    #       will output \"1 2 3\"\n    echo \"1 2 3\"",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        if ((tuple1[i] > tuple2[i])); then\n            result[i]=${tuple1[i]}\n        else\n            result[i]=${tuple2[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a max=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            max+=(${a[i]})\n        else\n            max+=(${b[i]})\n        fi\n    done\n    echo ${max[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((a[i] > b[i] ? a[i] : b[i]))\n  done\n  echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      result[i]=${a[i]}\n    else\n      result[i]=${b[i]}\n    fi\n  done\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a result=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      result[i]=${a[i]}\n    else\n      result[i]=${b[i]}\n    fi\n  done\n  echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]} > ${b[$i]} ? ${a[$i]} : ${b[$i]}))\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a list1=($1)\n  local -a list2=($2)\n\n  local -a result=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    if (( ${list1[$i]} > ${list2[$i]} )); then\n      result[$i]=${list1[$i]}\n    else\n      result[$i]=${list2[$i]}\n    fi\n  done\n\n  echo ${result[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n  done\n  echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a max\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      max[i]=${a[i]}\n    else\n      max[i]=${b[i]}\n    fi\n  done\n  echo ${max[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i = 0; i < ${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | awk '{print $1 > $2 ? $1 : $2}')\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[$i]=$((${a[$i]} > ${b[$i]} ? ${a[$i]} : ${b[$i]}))\n    done\n    echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n  done\n  echo \"${c[@]}\"",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a a3=()\n    local i\n    for ((i=0; i<${#a1[@]}; i++)); do\n        a3[i]=$((${a1[i]} > ${a2[i]} ? ${a1[i]} : ${a2[i]}))\n    done\n    echo \"${a3[@]}\"",
    "    if [ \"$#\" -ne 2 ]; then\n        echo \"Usage: maximize_elements <list1> <list2>\"\n        return 1\n    fi\n\n    local -a list1=($1)\n    local -a list2=($2)\n\n    if [ ${#list1[@]} -ne ${#list2[@]} ]; then\n        echo \"Error: lists are not of the same length\"\n        return 1\n    fi\n\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        if [ ${list1[$i]} -gt ${list2[$i]} ]; then\n            result+=(\"${list1[$i]}\")\n        else\n            result+=(\"${list2[$i]}\")\n        fi\n    done\n\n    echo \"${result[@]}\"",
    "    local -a array1=($1)\n    local -a array2=($2)\n    local -a result=()\n    for ((i=0; i<${#array1[@]}; i++)); do\n        if (( ${array1[$i]} > ${array2[$i]} )); then\n            result+=(${array1[$i]})\n        else\n            result+=(${array2[$i]})\n        fi\n    done\n    echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(max ${a[i]} ${b[i]})\n  done\n  echo ${c[@]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$((a[i] > b[i] ? a[i] : b[i]))\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(max ${a[i]} ${b[i]})\n    done\n    echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]} > ${b[i]} ? ${a[i]} : ${b[i]}))\n    done\n    echo \"${c[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > b[i])); then\n      c[i]=${a[i]}\n    else\n      c[i]=${b[i]}\n    fi\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n\n    for ((i=0; i < ${#a[@]}; i++)); do\n        if (( ${a[$i]} > ${b[$i]} )); then\n            result[$i]=${a[$i]}\n        else\n            result[$i]=${b[$i]}\n        fi\n    done\n\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo ${c[@]}",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for ((i = 0; i < ${#list1[@]}; i++)); do\n    result[i]=$(max ${list1[i]} ${list2[i]})\n  done\n  echo \"${result[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    done\n    echo \"${c[*]}\"",
    "    local -a a1=($1)\n    local -a a2=($2)\n    local -a a3\n    local i\n    for ((i=0; i<${#a1[@]}; i++)); do\n        a3[$i]=$(echo \"${a1[$i]} ${a2[$i]}\" | awk '{print $1>$2?$1:$2}')\n    done\n    echo ${a3[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} ${b[i]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    done\n    echo \"${c[*]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a result=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((a[i] > b[i])); then\n            result[i]=${a[i]}\n        else\n            result[i]=${b[i]}\n        fi\n    done\n    echo ${result[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        if ((${a[i]} > ${b[i]})); then\n            c[i]=${a[i]}\n        else\n            c[i]=${b[i]}\n        fi\n    done\n    echo \"${c[@]}\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$((${a[i]}>${b[i]}?${a[i]}:${b[i]}))\n    done\n    echo ${c[@]}",
    "  local -a tuple1=($1)\n  local -a tuple2=($2)\n  local -a result=()\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    if (( ${tuple1[$i]} > ${tuple2[$i]} )); then\n      result[$i]=${tuple1[$i]}\n    else\n      result[$i]=${tuple2[$i]}\n    fi\n  done\n  echo \"${result[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[i]=$(max ${a[i]} ${b[i]})\n  done\n  echo ${c[@]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local i\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(maximize ${a[i]} ${b[i]})\n    done\n    echo \"${c[@]}\"",
    "    local -a a=(\"$@\")\n    local -a b=(\"$@\")\n    local -a c=(\"$@\")\n    local -a d=(\"$@\")\n    local -a e=(\"$@\")\n    local -a f=(\"$@\")\n    local -a g=(\"$@\")\n    local -a h=(\"$@\")\n    local -a i=(\"$@\")\n    local -a j=(\"$@\")\n    local -a k=(\"$@\")\n    local -a l=(\"$@\")\n    local -a m=(\"$@\")\n    local -a n=(\"$@\")\n    local -a o=(\"$@\")\n    local -a p=(\"$@\")\n    local -a q=(\"$@\")\n    local -a r=(\"$@\")\n    local -a s=(\"$@\")\n    local -a t=(\"$@\")\n    local -a u=(\"$@\")\n    local -a v=(\"$@\")\n    local -a w=(\"$@\")\n    local -a x=(\"$@\")\n    local -a y=(\"$@\")\n    local -a z=(\"$@\")\n    local -a aa=(\"$@\")\n    local -a bb=(\"$@\")\n    local -a cc=(\"$@\")\n    local -a dd=(\"$@\")\n    local -a ee=(\"$@\")\n    local -a ff=(\"$@\")\n    local -a gg=(\"$@\")\n    local -a hh=(\"$@\")\n    local -a ii=(\"$@\")\n    local -a jj=(\"$@\")\n    local -a kk=(\"$@\")\n    local -a ll=(\"$@\")\n    local -a mm=(\"$@\")\n    local -a nn=(\"$@\")\n    local -a oo=(\"$@\")\n    local -a pp=(\"$@\")\n    local -a qq=(\"$@\")\n    local -a rr=(\"$@\")\n    local -a ss=(\"$@\")\n    local -a t",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i\n  for ((i=0; i<${#a[@]}; i++)); do\n    c[$i]=$(echo \"${a[$i]} ${b[$i]}\" | tr ' ' '\\n' | sort -n | tail -1)\n  done\n  echo \"${c[@]}\"",
    "    # Write your code here\n    local -a arr1=($1)\n    local -a arr2=($2)\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n    local -a arr69\n    local -a arr70\n    local -a arr71"
  ]
}
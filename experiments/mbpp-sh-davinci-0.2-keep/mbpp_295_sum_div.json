{
  "name": "mbpp_295_sum_div",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to return the sum of all divisors of a number.\n#\n# $1 is an integer\nsum_div() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_295_sum_div.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    sum_div \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"7\" ]]\n    [[ $(candidate \"12\") = \"16\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local num=$1\n    local sum=0\n    for ((i=1; i<=$num; i++)); do\n        if ((num % i == 0)); then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        if ((n % i == 0)); then\n            ((sum += i))\n        fi\n    done\n    echo $sum",
    "    local i=1\n    local sum=0\n    while [ $i -le $1 ]; do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++)); do\n    ((n % i == 0)) && ((sum += i))\n  done\n  echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if (($1 % i == 0)); then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo $sum",
    "  local sum=0\n  for ((i=1; i<=$1; i++)); do\n    if [[ $(( $1 % $i )) -eq 0 ]]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo $sum",
    "  local i=1\n  local sum=0\n  while [ $i -le $1 ]; do\n    if [ $(( $1 % $i )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n    i=$(( $i + 1 ))\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        ((n % i == 0)) && ((sum += i))\n    done\n    echo $sum",
    "  local sum=0\n  for ((i=1; i<=$1; i++)); do\n    if (($1 % i == 0)); then\n      ((sum += i))\n    fi\n  done\n  echo $sum",
    "  local sum=0\n  for ((i=1; i<=$1; i++)); do\n    if [[ $(( $1 % $i )) -eq 0 ]]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo $sum",
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++)); do\n    if ((n % i == 0)); then\n      ((sum += i))\n    fi\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        if ((n % i == 0)); then\n            ((sum += i))\n        fi\n    done\n    echo $sum",
    "    local i=1\n    local sum=0\n    while [ $i -le $1 ]; do\n        if [ $(($1 % $i)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n        i=$(($i + 1))\n    done\n    echo $sum",
    "  local sum=0\n  local i=1\n  while [ $i -le $1 ]; do\n    if [ $(( $1 % $i )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n    i=$(( $i + 1 ))\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        if ((n % i == 0)); then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for ((i=1;i<=$1;i++)); do\n    if (($1 % i == 0)); then\n      ((sum+=i))\n    fi\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        if ((n % i == 0)); then\n            ((sum += i))\n        fi\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        if (( n % i == 0 )); then\n            sum=$(( sum + i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if (($1 % i == 0)); then\n            ((sum += i))\n        fi\n    done\n    echo $sum"
  ]
}
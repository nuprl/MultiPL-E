{
  "name": "mbpp_752_jacobsthal_num",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\n#\n# $1 is an integer\njacobsthal_num() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    jacobsthal_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"11\" ]]\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"4\") = \"5\" ]]\n    [[ $(candidate \"13\") = \"2731\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    if [ $1 -eq 0 ]\n    then\n        echo 0\n    elif [ $1 -eq 1 ]\n    then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=2; i<=n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=2; i<=n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "    local n=$1\n    local a=0\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n        local c=$((a + 2*b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  for (( i=2; i<=n; i++ )); do\n    c=$(( a + 2*b ))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $a",
    "    if (( $1 < 0 )); then\n        echo \"Error: Argument to jacobsthal_num must be a non-negative integer\" >&2\n        return 1\n    fi\n\n    if (( $1 == 0 )); then\n        echo 0\n        return 0\n    fi\n\n    if (( $1 == 1 )); then\n        echo 1\n        return 0\n    fi\n\n    # Use a recursive function to find the nth jacobsthal number.\n    #\n    # $1 is an integer\n    _jacobsthal_num() {\n        if (( $1 == 0 )); then\n            echo 0\n            return 0\n        fi\n\n        if (( $1 == 1 )); then\n            echo 1\n            return 0\n        fi\n\n        local prev_prev_num=$(_jacobsthal_num $(( $1 - 2 )))\n        local prev_num=$(_jacobsthal_num $(( $1 - 1 )))\n\n        echo $(( $prev_prev_num + (2 * $prev_num) ))\n    }\n\n    _jacobsthal_num $1",
    "    local n=$1\n    local a=0\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n        local c=$((a + 2 * b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n    done\n    echo $a",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: argument must be a positive integer\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo 0\n        return 0\n    fi\n    if [ $1 -eq 1 ]; then\n        echo 1\n        return 0\n    fi\n    # j(n) = j(n-1) + 2*j(n-2)\n    jacobsthal_num $(( $1 - 1 ))\n    jacobsthal_num $(( $1 - 2 ))\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local i=2\n  while [[ $i -le $n ]]; do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n    ((i++))\n  done\n  echo $c",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=2; i<=n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=2\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        while [ $i -le $n ]; do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2 * jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n            i=$((i + 1))\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    if [[ $n -eq 0 ]]; then\n        echo $a\n    elif [[ $n -eq 1 ]]; then\n        echo $b\n    else\n        for (( i=2; i<=n; i++ )); do\n            c=$(( a + 2*b ))\n            a=$b\n            b=$c\n        done\n        echo $c\n    fi",
    "  local n=$1\n  local jacobsthal_num=0\n  local jacobsthal_num_prev=0\n  local jacobsthal_num_prev2=0\n  for (( i=0; i<=n; i++ )); do\n    if (( i == 0 )); then\n      jacobsthal_num=0\n    elif (( i == 1 )); then\n      jacobsthal_num=1\n    else\n      jacobsthal_num=$(( jacobsthal_num_prev + 2 * jacobsthal_num_prev2 ))\n    fi\n    jacobsthal_num_prev2=$jacobsthal_num_prev\n    jacobsthal_num_prev=$jacobsthal_num\n  done\n  echo $jacobsthal_num",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local jacobsthal_nums=(0 1)\n    local i=1\n    while [ $i -lt $n ]; do\n        jacobsthal_nums[$i+1]=$((jacobsthal_nums[$i-1]+2*jacobsthal_nums[$i]))\n        i=$((i+1))\n    done\n    echo ${jacobsthal_nums[$n]}",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=2\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        while [ $i -le $n ]; do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n            i=$((i+1))\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local jacobsthal_num=0\n    local jacobsthal_num_prev=0\n    local jacobsthal_num_prev_prev=0\n    local i=0\n    while [ $i -lt $n ]; do\n        if [ $i -eq 0 ]; then\n            jacobsthal_num=0\n        elif [ $i -eq 1 ]; then\n            jacobsthal_num=1\n        else\n            jacobsthal_num=$((jacobsthal_num_prev + 2*jacobsthal_num_prev_prev))\n        fi\n        jacobsthal_num_prev_prev=$jacobsthal_num_prev\n        jacobsthal_num_prev=$jacobsthal_num\n        i=$((i+1))\n    done\n    echo $jacobsthal_num",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=2; i<=n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $c",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for i in $(seq 1 $n); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    jacobsthal_num $(( $1 - 1 ))\n    jacobsthal_num $(( $1 - 2 ))\n  fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for (( i=0; i<n; i++ )); do\n    c=$(( a + 2*b ))\n    a=$b\n    b=$c\n  done\n  echo $a",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n  fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for i in $(seq 2 $n); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2 * jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for (( i=0; i<n; i++ )); do\n        c=$(( a + 2*b ))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_n=0\n  local i=2\n  if [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo 1\n  else\n    while [ $i -le $n ]; do\n      jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n      jacobsthal_num_1=$jacobsthal_num_2\n      jacobsthal_num_2=$jacobsthal_num_n\n      i=$((i+1))\n    done\n    echo $jacobsthal_num_n\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $a",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_a=0\n  local jacobsthal_num_b=1\n  local jacobsthal_num_c=0\n  local i=0\n  while [ $i -lt $n ]; do\n    jacobsthal_num_c=$((jacobsthal_num_a + 2 * jacobsthal_num_b))\n    jacobsthal_num_a=$jacobsthal_num_b\n    jacobsthal_num_b=$jacobsthal_num_c\n    i=$((i + 1))\n  done\n  echo $jacobsthal_num_a",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n    fi",
    "    if [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n        return\n    elif [ $1 -eq 1 ]; then\n        echo 1\n        return\n    fi\n    jacobsthal_num $(( $1 - 1 ))\n    jacobsthal_num $(( $1 - 2 ))",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    for ((i=2; i<=n; i++)); do\n        jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n        jacobsthal_num_1=$jacobsthal_num_2\n        jacobsthal_num_2=$jacobsthal_num_n\n    done\n    echo $jacobsthal_num_n",
    "    local n=$1\n    local jacobsthal_num_prev_prev=0\n    local jacobsthal_num_prev=1\n    local jacobsthal_num_curr=0\n    for ((i=0; i<n; i++)); do\n        jacobsthal_num_curr=$((jacobsthal_num_prev_prev + 2*jacobsthal_num_prev))\n        jacobsthal_num_prev_prev=$jacobsthal_num_prev\n        jacobsthal_num_prev=$jacobsthal_num_curr\n    done\n    echo $jacobsthal_num_curr",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=0\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $jacobsthal_num_1\n    elif [[ $n -eq 1 ]]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_a=0\n  local jacobsthal_num_b=1\n  local jacobsthal_num_c=0\n  local i=0\n  while [ $i -lt $n ]; do\n    jacobsthal_num_c=$((jacobsthal_num_a + 2*jacobsthal_num_b))\n    jacobsthal_num_a=$jacobsthal_num_b\n    jacobsthal_num_b=$jacobsthal_num_c\n    i=$((i+1))\n  done\n  echo $jacobsthal_num_a",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for (( i=2; i<=n; i++ )); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n    fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=1; i<=n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $a",
    "    local n=$1\n    local jacobsthal_num_prev1=0\n    local jacobsthal_num_prev2=1\n    local jacobsthal_num_curr=0\n    local i=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 1\n        return 0\n    fi\n\n    while [[ $i -lt $n ]]; do\n        jacobsthal_num_curr=$((jacobsthal_num_prev1 + 2 * jacobsthal_num_prev2))\n        jacobsthal_num_prev1=$jacobsthal_num_prev2\n        jacobsthal_num_prev2=$jacobsthal_num_curr\n        i=$((i + 1))\n    done\n\n    echo $jacobsthal_num_curr",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local i=0\n    while [ $i -lt $n ]; do\n        let c=a+b\n        let a=b\n        let b=c\n        let i=i+1\n    done\n    echo $a",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        for (( i=2; i<=n; i++ )); do\n            c=$(( a + 2*b ))\n            a=$b\n            b=$c\n        done\n        echo $c\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(($(jacobsthal_num $(($1 - 1))) + 2 * $(jacobsthal_num $(($1 - 2)))))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=2; i<=n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $c",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $jacobsthal_num_1\n    elif [[ $n -eq 1 ]]; then\n        echo $jacobsthal_num_2\n    else\n        for (( i=2; i<=n; i++ )); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2 * jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        let c=a+2*b\n        let a=b\n        let b=c\n        let i=i+1\n    done\n    echo $a",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    for ((i=2; i<=n; i++)); do\n        jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n        jacobsthal_num_1=$jacobsthal_num_2\n        jacobsthal_num_2=$jacobsthal_num_n\n    done\n    echo $jacobsthal_num_n",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_prev2=0\n    local jacobsthal_num_prev1=1\n    local jacobsthal_num_curr=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        for (( i=2; i<=n; i++ )); do\n            jacobsthal_num_curr=$(( jacobsthal_num_prev1 + 2*jacobsthal_num_prev2 ))\n            jacobsthal_num_prev2=$jacobsthal_num_prev1\n            jacobsthal_num_prev1=$jacobsthal_num_curr\n        done\n        echo $jacobsthal_num_curr\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n  fi",
    "    local n=$1\n    local jacobsthal_nums=(0 1)\n    local i=2\n    while [[ $i -le $n ]]; do\n        jacobsthal_nums[$i]=$(( ${jacobsthal_nums[$((i-1))]} + 2*${jacobsthal_nums[$((i-2))]} ))\n        i=$((i+1))\n    done\n    echo ${jacobsthal_nums[$n]}",
    "    local n=$1\n    local jacobsthal_num=0\n    local jacobsthal_num_prev=0\n    local jacobsthal_num_prev_prev=0\n    for (( i=0; i<=n; i++ )); do\n        if (( i == 0 )); then\n            jacobsthal_num=0\n        elif (( i == 1 )); then\n            jacobsthal_num=1\n        else\n            jacobsthal_num=$(( jacobsthal_num_prev + 2 * jacobsthal_num_prev_prev ))\n        fi\n        jacobsthal_num_prev_prev=$jacobsthal_num_prev\n        jacobsthal_num_prev=$jacobsthal_num\n    done\n    echo $jacobsthal_num",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if (( $1 == 0 )); then\n        echo 0\n    elif (( $1 == 1 )); then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_a=0\n  local jacobsthal_num_b=1\n  local jacobsthal_num_c=0\n  for (( i=1; i<=n; i++ )); do\n    jacobsthal_num_c=$((jacobsthal_num_a + 2*jacobsthal_num_b))\n    jacobsthal_num_a=$jacobsthal_num_b\n    jacobsthal_num_b=$jacobsthal_num_c\n  done\n  echo $jacobsthal_num_a",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + $(jacobsthal_num $(( $1 - 2 )) ) * 2 ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n    fi",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=2; i<=n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  for ((i=2; i<=n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_n=0\n  for ((i=2; i<=n; i++)); do\n    jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n    jacobsthal_num_1=$jacobsthal_num_2\n    jacobsthal_num_2=$jacobsthal_num_n\n  done\n  echo $jacobsthal_num_n",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + $(jacobsthal_num $(( $1 - 2 )) ) * 2 ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_prev_prev=0\n    local jacobsthal_num_prev=1\n    local jacobsthal_num=1\n    for ((i=2; i<=n; i++)); do\n        jacobsthal_num=$((jacobsthal_num_prev + 2*jacobsthal_num_prev_prev))\n        jacobsthal_num_prev_prev=$jacobsthal_num_prev\n        jacobsthal_num_prev=$jacobsthal_num\n    done\n    echo $jacobsthal_num",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $jacobsthal_num_1\n    elif [[ $n -eq 1 ]]; then\n        echo $jacobsthal_num_2\n    else\n        for (( i=2; i<=$n; i++ )); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=2\n    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        while [[ $i -le $n ]]; do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n            i=$((i+1))\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=0\n    if [[ $n -eq 0 ]]; then\n        echo 0\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: argument must be a positive integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo 0\n        return 0\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo 1\n        return 0\n    fi\n\n    jacobsthal_num $(( $1 - 1 ))\n    jacobsthal_num $(( $1 - 2 ))",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    for ((i=2; i<=n; i++)); do\n        jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n        jacobsthal_num_1=$jacobsthal_num_2\n        jacobsthal_num_2=$jacobsthal_num_n\n    done\n    echo $jacobsthal_num_n",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=2\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        while [ $i -le $n ]; do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n            i=$((i+1))\n        done\n        echo $jacobsthal_num_n\n    fi",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=0; i<n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $a",
    "    local n=$1\n    local jacobsthal_num_prev2=0\n    local jacobsthal_num_prev1=1\n    local jacobsthal_num_curr=0\n\n    for (( i=2; i<=n; i++ )); do\n        jacobsthal_num_curr=$(( jacobsthal_num_prev2 + 2 * jacobsthal_num_prev1 ))\n        jacobsthal_num_prev2=$jacobsthal_num_prev1\n        jacobsthal_num_prev1=$jacobsthal_num_curr\n    done\n\n    echo $jacobsthal_num_curr",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=0; i<n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_3=0\n  if [ $n -eq 0 ]; then\n    echo $jacobsthal_num_1\n  elif [ $n -eq 1 ]; then\n    echo $jacobsthal_num_2\n  else\n    for ((i=2; i<=n; i++)); do\n      jacobsthal_num_3=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n      jacobsthal_num_1=$jacobsthal_num_2\n      jacobsthal_num_2=$jacobsthal_num_3\n    done\n    echo $jacobsthal_num_3\n  fi",
    "\tif [[ $1 -eq 0 ]]; then\n\t\techo 0\n\telif [[ $1 -eq 1 ]]; then\n\t\techo 1\n\telse\n\t\techo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n\tfi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_n=0\n\n  if [ $n -eq 0 ]; then\n    echo $jacobsthal_num_1\n  elif [ $n -eq 1 ]; then\n    echo $jacobsthal_num_2\n  else\n    for (( i=2; i<=n; i++ )); do\n      jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n      jacobsthal_num_1=$jacobsthal_num_2\n      jacobsthal_num_2=$jacobsthal_num_n\n    done\n    echo $jacobsthal_num_n\n  fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for (( i=2; i<=$n; i++ )); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "  local n=$1\n  local jacobsthal_num=0\n  local jacobsthal_num_prev=0\n  local jacobsthal_num_prev_prev=0\n  local i=0\n  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      jacobsthal_num=0\n    elif [ $i -eq 1 ]; then\n      jacobsthal_num=1\n    else\n      jacobsthal_num=$((jacobsthal_num_prev + 2*jacobsthal_num_prev_prev))\n    fi\n    jacobsthal_num_prev_prev=$jacobsthal_num_prev\n    jacobsthal_num_prev=$jacobsthal_num\n    i=$((i+1))\n  done\n  echo $jacobsthal_num",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "  local n=$1\n  local jacobsthal_num=0\n  local jacobsthal_num_prev=0\n  local jacobsthal_num_prev_prev=0\n\n  for ((i=0; i<=n; i++)); do\n    if [[ $i -eq 0 ]]; then\n      jacobsthal_num=0\n    elif [[ $i -eq 1 ]]; then\n      jacobsthal_num=1\n    else\n      jacobsthal_num=$((jacobsthal_num_prev + 2 * jacobsthal_num_prev_prev))\n    fi\n    jacobsthal_num_prev_prev=$jacobsthal_num_prev\n    jacobsthal_num_prev=$jacobsthal_num\n  done\n  echo $jacobsthal_num",
    "  local n=$1\n  local jacobsthal_num_prev_prev=0\n  local jacobsthal_num_prev=1\n  local jacobsthal_num=0\n  for (( i=2; i<=n; i++ )); do\n    jacobsthal_num=$(( jacobsthal_num_prev + 2 * jacobsthal_num_prev_prev ))\n    jacobsthal_num_prev_prev=$jacobsthal_num_prev\n    jacobsthal_num_prev=$jacobsthal_num\n  done\n  echo $jacobsthal_num",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2 * jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=2; i<=n; i++)); do\n        c=$((a + 2*b))\n        a=$b\n        b=$c\n    done\n    echo $c",
    "  local n=$1\n  local jacobsthal_num=0\n  local jacobsthal_num_prev=0\n  local jacobsthal_num_prev2=0\n  for (( i=0; i<=n; i++ )); do\n    if [[ $i -eq 0 ]]; then\n      jacobsthal_num=0\n    elif [[ $i -eq 1 ]]; then\n      jacobsthal_num=1\n    else\n      jacobsthal_num=$(( jacobsthal_num_prev + 2 * jacobsthal_num_prev2 ))\n    fi\n    jacobsthal_num_prev2=$jacobsthal_num_prev\n    jacobsthal_num_prev=$jacobsthal_num\n  done\n  echo $jacobsthal_num",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $jacobsthal_num_1\n    elif [[ $n -eq 1 ]]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    local n=$1\n    local jacobsthal_nums=(0 1)\n    local i=2\n    while [ $i -le $n ]; do\n        jacobsthal_nums[$i]=$((jacobsthal_nums[$((i-1))] + 2*jacobsthal_nums[$((i-2))]))\n        ((i++))\n    done\n    echo ${jacobsthal_nums[$n]}",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [ $n -eq 0 ]; then\n        echo $jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        echo $jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n        echo $jacobsthal_num_n\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_3=1\n  local i=2\n  while [ $i -le $n ]; do\n    jacobsthal_num_3=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n    jacobsthal_num_1=$jacobsthal_num_2\n    jacobsthal_num_2=$jacobsthal_num_3\n    i=$((i+1))\n  done\n  echo $jacobsthal_num_3",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=2\n    if [[ $n -eq 0 ]]; then\n        echo $jacobsthal_num_1\n    elif [[ $n -eq 1 ]]; then\n        echo $jacobsthal_num_2\n    else\n        while [[ $i -le $n ]]; do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n            i=$((i+1))\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for (( i=0; i<n; i++ )); do\n    c=$(( a + 2*b ))\n    a=$b\n    b=$c\n  done\n  echo $a",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local i=2\n  while [ $i -le $n ]; do\n    c=$((a + 2*b))\n    a=$b\n    b=$c\n    i=$((i+1))\n  done\n  echo $c",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0;i<n;i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_n=0\n  for ((i=2; i<=n; i++)); do\n    jacobsthal_num_n=$((jacobsthal_num_1 + 2 * jacobsthal_num_2))\n    jacobsthal_num_1=$jacobsthal_num_2\n    jacobsthal_num_2=$jacobsthal_num_n\n  done\n  echo $jacobsthal_num_n",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    for ((i=2; i<=n; i++)); do\n        jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n        jacobsthal_num_1=$jacobsthal_num_2\n        jacobsthal_num_2=$jacobsthal_num_n\n    done\n    echo $jacobsthal_num_n",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for (( i=0; i<n; i++ )); do\n        c=$(( a + 2 * b ))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=0; i<n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    local i=2\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        while [ $i -le $n ]; do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2 * jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n            i=$((i + 1))\n        done\n        echo $jacobsthal_num_n\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_nums=(0 1)\n    if [ $n -eq 0 ] || [ $n -eq 1 ]; then\n        echo ${jacobsthal_nums[$n]}\n        return\n    fi\n    for i in $(seq 2 $n); do\n        jacobsthal_nums[$i]=$(( ${jacobsthal_nums[$((i-2))]} + 2 * ${jacobsthal_nums[$((i-1))]} ))\n    done\n    echo ${jacobsthal_nums[$n]}",
    "    local n=$1\n    local jacobsthal_num_prev=0\n    local jacobsthal_num_curr=1\n    local jacobsthal_num_next=0\n    local i=0\n    if [[ $n -eq 0 ]]; then\n        echo $jacobsthal_num_prev\n    elif [[ $n -eq 1 ]]; then\n        echo $jacobsthal_num_curr\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_next=$((jacobsthal_num_prev+2*jacobsthal_num_curr))\n            jacobsthal_num_prev=$jacobsthal_num_curr\n            jacobsthal_num_curr=$jacobsthal_num_next\n        done\n        echo $jacobsthal_num_next\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for ((i=1; i<=n; i++)); do\n        c=$((a+2*b))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n  fi",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_3=0\n  local i=0\n  while [ $i -lt $n ]; do\n    jacobsthal_num_3=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n    jacobsthal_num_1=$jacobsthal_num_2\n    jacobsthal_num_2=$jacobsthal_num_3\n    i=$((i+1))\n  done\n  echo $jacobsthal_num_1",
    "  local n=$1\n  local jacobsthal_num_a=0\n  local jacobsthal_num_b=1\n  local jacobsthal_num_c=0\n  for (( i=0; i<n; i++ )); do\n    jacobsthal_num_c=$((jacobsthal_num_a + 2*jacobsthal_num_b))\n    jacobsthal_num_a=$jacobsthal_num_b\n    jacobsthal_num_b=$jacobsthal_num_c\n  done\n  echo $jacobsthal_num_a",
    "    local n=$1\n    local i=0\n    local j=1\n    local k=1\n    while [ $i -lt $n ]; do\n        i=$((i+1))\n        j=$((j+2*k))\n        k=$j\n    done\n    echo $j",
    "  local n=$1\n  local jacobsthal_num_a=0\n  local jacobsthal_num_b=1\n  local jacobsthal_num_c=0\n  for (( i=0; i<n; i++ )); do\n    jacobsthal_num_c=$((jacobsthal_num_a + 2*jacobsthal_num_b))\n    jacobsthal_num_a=$jacobsthal_num_b\n    jacobsthal_num_b=$jacobsthal_num_c\n  done\n  echo $jacobsthal_num_a",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local i=2\n    while [ $i -le $n ]; do\n        let c=a+b\n        let a=b\n        let b=c\n        let i=i+1\n    done\n    echo $c",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local jacobsthal_nums=(0 1)\n    local i=1\n\n    while [ $i -lt $n ]; do\n        jacobsthal_nums[$i+1]=$((jacobsthal_nums[$i-1]+2*jacobsthal_nums[$i]))\n        i=$((i+1))\n    done\n\n    echo ${jacobsthal_nums[$n]}",
    "    local n=$1\n    local jacobsthal_num_1=0\n    local jacobsthal_num_2=1\n    local jacobsthal_num_n=0\n    if [ $n -eq 0 ]; then\n        jacobsthal_num_n=$jacobsthal_num_1\n    elif [ $n -eq 1 ]; then\n        jacobsthal_num_n=$jacobsthal_num_2\n    else\n        for ((i=2; i<=n; i++)); do\n            jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n            jacobsthal_num_1=$jacobsthal_num_2\n            jacobsthal_num_2=$jacobsthal_num_n\n        done\n    fi\n    echo $jacobsthal_num_n",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for (( i=1; i<=n; i++ )); do\n        c=$(( a + 2*b ))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "  local n=$1\n  local jacobsthal_num_a=0\n  local jacobsthal_num_b=1\n  local jacobsthal_num_c=0\n  for ((i=2; i<=n; i++)); do\n    jacobsthal_num_c=$((jacobsthal_num_a + 2*jacobsthal_num_b))\n    jacobsthal_num_a=$jacobsthal_num_b\n    jacobsthal_num_b=$jacobsthal_num_c\n  done\n  echo $jacobsthal_num_c",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + $(jacobsthal_num $(( $1 - 2 ))) * 2 ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 )) ) + 2 * $(jacobsthal_num $(( $1 - 2 )) ) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    jacobsthal_num $(( $1 - 1 ))\n    local jacobsthal_num_1=$?\n    jacobsthal_num $(( $1 - 2 ))\n    local jacobsthal_num_2=$?\n    echo $(( $jacobsthal_num_1 + 2 * $jacobsthal_num_2 ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local jacobsthal_nums=(0 1)\n    local i=2\n    while [ $i -le $n ]; do\n        jacobsthal_nums[$i]=$(( ${jacobsthal_nums[$((i-1))]} + 2 * ${jacobsthal_nums[$((i-2))]} ))\n        i=$((i+1))\n    done\n    echo ${jacobsthal_nums[$n]}",
    "  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  for ((i=2; i<=n; i++)); do\n    c=$((a+2*b))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=0\n    local b=1\n    local c=0\n    for (( i=0; i<n; i++ )); do\n        c=$(( a + 2*b ))\n        a=$b\n        b=$c\n    done\n    echo $a",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local jacobsthal_num_1=0\n  local jacobsthal_num_2=1\n  local jacobsthal_num_n=0\n  local i=2\n  if [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo 1\n  else\n    while [ $i -le $n ]; do\n      jacobsthal_num_n=$((jacobsthal_num_1 + 2*jacobsthal_num_2))\n      jacobsthal_num_1=$jacobsthal_num_2\n      jacobsthal_num_2=$jacobsthal_num_n\n      i=$((i+1))\n    done\n    echo $jacobsthal_num_n\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        jacobsthal_num $(( $1 - 1 ))\n        jacobsthal_num $(( $1 - 2 ))\n        echo $(( $(jacobsthal_num $(( $1 - 1 ))) + 2 * $(jacobsthal_num $(( $1 - 2 ))) ))\n    fi"
  ]
}
{
  "name": "mbpp_788_new_tuple",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to create a new tuple from the given string and list.\n#\n# $1 is a space-separated list\n# $2 is a string\nnew_tuple() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_788_new_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    new_tuple \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"WEB is\" \"best\") = \"WEB is best\" ]]\n    [[ $(candidate \"We are\" \"Developers\") = \"We are Developers\" ]]\n    [[ $(candidate \"Part is\" \"Wrong\") = \"Part is Wrong\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a list=()\n    local str=\"\"\n    for i in $1; do\n        list+=(\"$i\")\n    done\n    str=\"$2\"\n    echo \"(${list[@]}, $str)\"",
    "    local list=\"$1\"\n    local string=\"$2\"\n    echo \"$list $string\"",
    "    echo \"$1 $2\"",
    "  echo \"$1\" | sed \"s/ /,/g\" | sed \"s/^/$2,/\"",
    "  local list=\"$1\"\n  local string=\"$2\"\n  echo \"$list $string\"",
    "    local list=$1\n    local string=$2\n    local tuple=\"($list, $string)\"\n    echo $tuple",
    "    local -n list=$1\n    local str=$2\n    list=(${list[@]} $str)",
    "    local -n list=$1\n    local str=$2\n    list=( \"${list[@]}\" \"$str\" )",
    "  echo \"$1 $2\"",
    "    echo \"$1 $2\"",
    "  local list=\"$1\"\n  local string=\"$2\"\n  local tuple=\"$list $string\"\n  echo \"$tuple\"",
    "  local list=\"$1\"\n  local string=\"$2\"\n  local tuple=\"$list $string\"\n  echo \"$tuple\"",
    "  local list=\"$1\"\n  local string=\"$2\"\n  local tuple=\"$list $string\"\n  echo \"$tuple\"",
    "    local list=\"$1\"\n    local string=\"$2\"\n    echo \"$list $string\"",
    "  local list=\"$1\"\n  local string=\"$2\"\n  local tuple=\"$list $string\"\n  echo \"$tuple\"",
    "  echo \"$1 $2\"",
    "  echo \"$1\" \"$2\"",
    "    local list=$1\n    local string=$2\n    echo \"($list, $string)\"",
    "    local list=$1\n    local string=$2\n    local tuple=\"(${list} ${string})\"\n    echo \"${tuple}\"",
    "  local list=\"$1\"\n  local string=\"$2\"\n  local tuple=\"$list $string\"\n  echo \"$tuple\""
  ]
}
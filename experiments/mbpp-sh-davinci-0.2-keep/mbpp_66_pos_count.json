{
  "name": "mbpp_66_pos_count",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to count the number of positive numbers in a list.\n#\n# $1 is a space-separated list\npos_count() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_66_pos_count.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    pos_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 3 -4\") = \"2\" ]]\n    [[ $(candidate \"3 4 5 -1\") = \"3\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.?[0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]\\+$'",
    "    local list=$1\n    local count=0\n    for i in $list; do\n        if [ $i -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.?[0-9]*$'",
    "    local count=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
    "  local count=0\n  for i in $1; do\n    if [ $i -gt 0 ]; then\n      ((count++))\n    fi\n  done\n  echo $count",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.?[0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]\\+$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.\\?[0-9]*$'",
    "    python -c \"print(sum([1 for x in $1 if x > 0]))\"",
    "    echo $1 | tr ' ' '\\n' | grep -c '^[0-9]*\\.\\?[0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.?[0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.?[0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]\\+$'",
    "    local count=0\n    for i in $1; do\n        if [ $i -gt 0 ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*\\.?[0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]\\+$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*[1-9][0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]*[1-9][0-9]*$'",
    "    echo \"$1\" | tr ' ' '\\n' | grep -c '^[0-9]\\+$'"
  ]
}
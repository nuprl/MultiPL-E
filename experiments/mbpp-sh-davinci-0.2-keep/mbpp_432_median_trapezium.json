{
  "name": "mbpp_432_median_trapezium",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n\n    local median=$(echo \"sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc -l)\n\n    echo \"Median length of a trapezium with sides $a, $b, $c is $median\"",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 2\n  fi\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 3\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    else\n        echo $3\n    fi",
    "  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"The longest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n        echo \"The shortest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n        echo \"The middle side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ] && [ $1 -gt $3 ]; then\n        echo \"The middle side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $1 -gt $3 ]; then\n        echo \"The longest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $1 -lt $3 ]; then\n        echo \"The shortest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ] && [ $1 -gt $2 ]; then\n        echo \"The longest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ] && [ $1 -lt $2 ]; then\n        echo \"The shortest side must be the base\"\n        return 1\n    fi\n\n    if [ $2 -eq $3 ] && [ $2 -gt $1 ]; then\n        echo \"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"The median length of a trapezium is $median\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -eq $2 -a $2 -eq $3 ]; then\n    echo \"The median length is $1.\"\n  elif [ $1 -eq $2 ]; then\n    echo \"The median length is $3.\"\n  elif [ $2 -eq $3 ]; then\n    echo \"The median length is $1.\"\n  elif [ $1 -eq $3 ]; then\n    echo \"The median length is $2.\"\n  else\n    echo \"The median length is $2.\"\n  fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n    echo \"Median length of a trapezium with sides $a, $b, $c is $median\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n    local area=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n    local median=$(echo \"scale=2; $area * 2 / $a\" | bc)\n\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <int> <int> <int>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/2\" | bc)\n    echo \"The median of the trapezium is $median\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; sqrt($a*$a + $b*$b + $c*$c - $a*$b - $a*$c - $b*$c)\" | bc)\n  echo \"Median of trapezium with sides $a, $b, $c is $median\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All arguments must be positive integers\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"All arguments must be different\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"Argument 1 must be an integer\"\n    return 1\n  fi\n\n  if ! [[ $2 =~ ^[0-9]+$ ]]; then\n    echo \"Argument 2 must be an integer\"\n    return 1\n  fi\n\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Argument 3 must be an integer\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Arguments must be greater than 0\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo $2\n  else\n    echo $3\n  fi",
    "    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo $1\n    elif [ $1 -eq $2 ] || [ $2 -eq $3 ]; then\n        if [ $1 -eq $2 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            if [ $1 -gt $3 ]; then\n                echo $1\n            else\n                echo $3\n            fi\n        else\n            if [ $2 -gt $3 ]; then\n                echo $2\n            else\n                echo $3\n            fi\n        fi\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All sides must be greater than 0\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All sides must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Two sides must be equal\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $1 -gt $3 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $1 -eq $3 ] && [ $1 -gt $2 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $2 -eq $3 ] && [ $2 -gt $1 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"The longest side must be the base\"\n    return 1\n  fi\n\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n   ",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median",
    "    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"The median length of the trapezium is $1\"\n        else\n            if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n                if [ $1 -eq $2 ]; then\n                    echo \"The median length of the trapezium is $1\"\n                elif [ $2 -eq $3 ]; then\n                    echo \"The median length of the trapezium is $2\"\n                else\n                    echo \"The median length of the trapezium is $3\"\n                fi\n            else\n                if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n                    if [ $2 -gt $3 ]; then\n                        echo \"The median length of the trapezium is $2\"\n                    else\n                        echo \"The median length of the trapezium is $3\"\n                    fi\n                elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n                    if [ $1 -gt $3 ]; then\n                        echo \"The median length of the trapezium is $1\"\n                    else\n                        echo \"The median length of the trapezium is $3\"\n                    fi\n                else\n                    if [ $1 -gt $2 ]; then\n                        echo \"The median length of the trapezium is $1\"\n                    else\n                        echo \"The median length of the trapezium is $2\"\n                    fi\n                fi\n            fi\n        fi\n    else\n        echo \"Error: the lengths of the sides of a trapezium must be positive integers.\"\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"All sides must be greater than 0\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"All sides are equal\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        echo \"Two sides are equal\"\n        return 1\n    fi\n\n    local median=$(echo \"scale=2; sqrt(($a + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a + $b + $c)) / 4\" | bc)\n    echo \"The median length is $median\"",
    "    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [ $1 -eq $2 ]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all sides must be positive\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: two sides must be equal\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  local p=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  local s=$(echo \"scale=2; sqrt($p * ($p - $a) * ($p - $b) * ($p - $c))\" | bc)\n\n  echo \"scale=2; 2 * $s / $c\" | bc",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: the first argument must be the smallest.\"\n    return 1\n  fi\n\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"Error: the third argument must be the biggest.\"\n    return 1\n  fi\n\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"Error: the second argument must be the biggest.\"\n    return 1\n  fi\n\n  if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n    echo \"Error: the first argument must be the smallest.\"\n    return 1\n  fi\n\n  if [ $3 -lt $2 ] && [ $3 -lt $1 ]; then\n    echo \"Error: the third argument must be the biggest.\"\n    return 1\n  fi\n\n  if [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n    echo \"Error: the second argument must be the biggest.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 1",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    exit 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All arguments must be positive integers\"\n    exit 1\n  fi\n\n  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -lt $3 ]; then\n    echo $1\n  elif [ $2 -lt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "  if [ $# -ne 3 ]\n  then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(((a+b+c)/3))\n  echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median_length=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median_length",
    "\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 3\" | bc)\n\techo \"The median length of the trapezium is $median\"",
    "    echo \"scale=2;($1+$2)*$3/2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 2\n    fi\n\n    local median=$(echo \"scale=2; ($1 + $2 + $3) / 2\" | bc)\n    echo \"The median length of the trapezium is $median\"",
    "    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\techo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"All sides must be positive integers.\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"All sides must be different.\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        echo \"Two sides must be equal.\"\n        return 1\n    fi\n\n    if [ $a -gt $b ] && [ $a -gt $c ]; then\n        echo \"Side $a is the longest.\"\n        return 0\n    fi\n\n    if [ $b -gt $a ] && [ $b -gt $c ]; then\n        echo \"Side $b is the longest.\"\n        return 0\n    fi\n\n    if [ $c -gt $a ] && [ $c -gt $b ]; then\n        echo \"Side $c is the longest.\"\n        return 0\n    fi",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    elif [ $2 -eq $3 ]\n    then\n        echo $2\n    elif [ $1 -eq $3 ]\n    then\n        echo $3\n    else\n        echo \"The median length of a trapezium is not defined.\"\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$((($a + $b + $c) / 2))\n  echo $median",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    else\n        echo $3\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: all arguments must be integers\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: the first argument must be the shortest side\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"Error: the third argument must be the longest side\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"Error: the second argument must be the middle side\"\n    return 1\n  fi\n  echo \"The median length of the trapezium is:\"\n  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n\n    echo \"The median of the trapezium is $median\"",
    "    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $2 -lt $3 ]; then\n    if [ $1 -lt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    echo $2\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -lt 0 ] || [ $b -lt 0 ] || [ $c -lt 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 1\n  fi\n\n  if [ $a -eq $b ] && [ $b -eq $c ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n\n  if [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n    echo \"Error: only two arguments can be equal\"\n    return 1\n  fi\n\n  if [ $a -gt $b ] && [ $a -gt $c ]; then\n    echo \"Error: the first argument must be the smallest\"\n    return 1\n  fi\n\n  if [ $c -gt $b ] && [ $c -gt $a ]; then\n    echo \"Error: the third argument must be the largest\"\n    return 1\n  fi\n\n  local median=$((($a + $b + $c) / 2))\n\n  echo \"The median of the trapezium is $median\"\n  return 0",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"Median of trapezium is $median\"",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <length1> <length2> <length3>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all lengths must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all lengths must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo $2\n    else\n        echo $3\n    fi",
    "  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "  if [ $1 -eq $2 -a $2 -eq $3 ]; then\n    echo $1\n  elif [ $1 -eq $2 ]; then\n    echo $3\n  elif [ $1 -eq $3 ]; then\n    echo $2\n  elif [ $2 -eq $3 ]; then\n    echo $1\n  else\n    echo \"The lengths of the sides are not equal.\"\n  fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 3 ))\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 1\n  fi\n\n  if [ $a -eq $b ] && [ $b -eq $c ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\n  echo \"Median: $median\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median_length=$(echo \"scale=2; (sqrt($a*$a + $b*$b) + $c) / 2\" | bc)\n  echo $median_length",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n    echo $median",
    "    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n        echo \"scale=2; sqrt(($1*$1+$2*$2+$3*$3)/2)\" | bc\n    else\n        echo \"Error: All arguments must be positive integers.\"\n    fi",
    "  # Write your code here\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo $1\n    else\n      if [ $1 -eq $2 ]; then\n        if [ $3 -gt $1 ]; then\n          echo $1\n        else\n          echo $3\n        fi\n      else\n        if [ $2 -eq $3 ]; then\n          if [ $1 -gt $2 ]; then\n            echo $2\n          else\n            echo $1\n          fi\n        else\n          if [ $1 -eq $3 ]; then\n            if [ $2 -gt $1 ]; then\n              echo $1\n            else\n              echo $2\n            fi\n          else\n            if [ $1 -gt $2 ]; then\n              if [ $1 -gt $3 ]; then\n                if [ $2 -gt $3 ]; then\n                  echo $2\n                else\n                  echo $3\n                fi\n              else\n                echo $1\n              fi\n            else\n              if [ $2 -gt $3 ]; then\n                echo $2\n              else\n                echo $3\n              fi\n            fi\n          fi\n        fi\n      fi\n    fi\n  else\n    echo \"Error: All arguments must be greater than 0.\"\n  fi",
    "    if [ $1 -eq $2 -a $2 -eq $3 ]; then\n        echo \"The median length of the trapezium is $1.\"\n    elif [ $1 -eq $2 -a $2 -ne $3 ]; then\n        echo \"The median length of the trapezium is $1.\"\n    elif [ $1 -eq $3 -a $3 -ne $2 ]; then\n        echo \"The median length of the trapezium is $1.\"\n    elif [ $2 -eq $3 -a $3 -ne $1 ]; then\n        echo \"The median length of the trapezium is $2.\"\n    elif [ $1 -gt $2 -a $1 -gt $3 ]; then\n        echo \"The median length of the trapezium is $2.\"\n    elif [ $2 -gt $1 -a $2 -gt $3 ]; then\n        echo \"The median length of the trapezium is $1.\"\n    else\n        echo \"The median length of the trapezium is $2.\"\n    fi",
    "\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=0\n\tlocal sum=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal aa=0\n\tlocal bb=0\n\tlocal cc=0\n\tlocal dd=0\n\tlocal ee=0\n\tlocal ff=0\n\tlocal gg=0\n\tlocal hh=0\n\tlocal ii=0\n\tlocal jj=0\n\tlocal kk=0\n\tlocal ll=0\n\tlocal mm=0\n\tlocal nn=0\n\tlocal oo=0\n\tlocal pp=0\n\tlocal qq=0\n\tlocal rr=0\n\tlocal ss=0\n\tlocal tt=0\n\tlocal uu=0\n\tlocal vv=0\n\tlocal ww=0\n\tlocal xx=0\n\tlocal yy=0\n\tlocal zz=0\n\tlocal aaa=0\n\tlocal bbb=0\n\tlocal ccc=0\n\tlocal ddd=0\n\tlocal eee=0\n\tlocal fff=0\n\tlocal ggg=0\n\tlocal hhh=0\n\tlocal iii=0\n\tlocal jjj=0\n\tlocal kkk=0\n\tlocal lll=0\n\tlocal mmm=0\n\tlocal nnn=0\n\tlocal ooo=0\n\tlocal ppp=0\n\tlocal qqq=0\n\tlocal rrr=0\n\tlocal sss=0\n\tlocal ttt=0\n\tlocal uuu=0\n\tlocal vvv=0\n\tlocal www=0\n\tlocal xxx=0\n\tlocal yyy=0\n\tlocal zzz=0\n\tlocal aaaa=0\n\tlocal bbbb=0\n\tlocal cccc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: a must be the smallest side\"\n        return 1\n    fi\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n        echo \"Error: c must be the largest side\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: a must be the smallest side\"\n        return 1\n    fi\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n        echo \"Error: c must be the largest side\"\n        return 1\n    fi\n    if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n        echo \"Error: a must be the smallest side\"\n        return 1\n    fi\n    if [ $3 -lt $2 ] && [ $3 -lt $1 ]; then\n        echo \"Error: c must be the largest side\"\n        return 1\n    fi\n    if [",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local s=$(($a+$b+$c))\n    local p=$(($s/2))\n    local median=$(echo \"sqrt($p*($p-$a)*($p-$b)*($p-$c))\" | bc)\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all lengths must be greater than zero.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"Error: all lengths must be different.\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n  return 0",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median_length=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median_length",
    "\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: $0 <length1> <length2> <length3>\"\n\t\texit 1\n\tfi\n\tif [ $1 -lt $2 ]; then\n\t\tif [ $2 -lt $3 ]; then\n\t\t\techo $2\n\t\telif [ $1 -lt $3 ]; then\n\t\t\techo $3\n\t\telse\n\t\t\techo $1\n\t\tfi\n\telse\n\t\tif [ $1 -lt $3 ]; then\n\t\t\techo $1\n\t\telif [ $2 -lt $3 ]; then\n\t\t\techo $3\n\t\telse\n\t\t\techo $2\n\t\tfi\n\tfi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local d=$4\n    local median=$(( (a+b+c+d)/4 ))\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=0\n    if [ $a -gt $b ]; then\n        if [ $a -gt $c ]; then\n            median=$a\n        else\n            median=$c\n        fi\n    else\n        if [ $b -gt $c ]; then\n            median=$b\n        else\n            median=$c\n        fi\n    fi\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive.\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different.\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal.\"\n        return 4\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n    local m=$(echo \"scale=2; ($a + $b) / 2\" | bc)\n    local area=$(echo \"scale=2; $m * $h\" | bc)\n    echo \"Area of trapezium is $area\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]] || ! [[ $2 =~ ^[0-9]+$ ]] || ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -eq $2 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $2 -eq $3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -eq $3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    else\n      if [ $1 -lt $3 ]; then\n        echo $3\n      else\n        echo $1\n      fi\n    fi\n  else\n    if [ $1 -lt $3 ]; then\n      echo $1\n    else\n      if [ $2 -lt $3 ]; then\n        echo $3\n      else\n        echo $2\n      fi\n    fi\n  fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median_length\n    median_length=$(echo \"scale=2; sqrt(($a*$a+$b*$b+$c*$c)/2)\" | bc)\n    echo $median_length",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$((($a + $b + $c) / 2))\n    echo $median",
    "  echo \"scale=2;($1+$2)*$3/2\" | bc",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 3\" | bc)\n    echo $median",
    "    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$((a + b + c))\n    local p=$((p / 2))\n    local s=$((p * (p - a) * (p - b) * (p - c)))\n    local s=$(echo \"sqrt($s)\" | bc -l)\n\n    echo $s",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n    a=$1\n    b=$2\n    c=$3\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n    if [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n    if [ $a -gt $b ] && [ $a -gt $c ]; then\n        if [ $b -gt $c ]; then\n            echo $b\n        else\n            echo $c\n        fi\n    elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $a -gt $c ]; then\n            echo $a\n        else\n            echo $c\n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $a -gt $b ]; then\n            echo $a\n        else\n            echo $b\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers.\"\n        return 1\n    fi\n    echo \"scale=2;($1+$2)*$3/2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers\"\n        return 2\n    fi\n\n    echo \"scale=2; ($1 + $2) * $3 / 2\" | bc",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local p=$(($a+$b+$c))\n    local s=$(($p/2))\n    local median=$(echo \"sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc -l)\n    echo \"Median length of trapezium is $median\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"Error: argument 1 must be an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~ ^[0-9]+$ ]]; then\n    echo \"Error: argument 2 must be an integer\"\n    return 1\n  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: argument 3 must be an integer\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(((a+b+c)/2))\n  echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all sides must be positive\"\n    return 2\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 3\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: two sides must be equal\"\n    return 4\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all lengths must be positive\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all lengths must be different\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo $2\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo $1\n  else\n    echo $3\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(($a + $b + $c))\n  local s=$(($p / 2))\n  local h=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n  echo \"scale=2; $2 * $h / ($a - $b)\" | bc",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(($a+$b+$c))\n  local s=$(($p/2))\n  local median=$(echo \"scale=2; sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc)\n  echo \"Median length of trapezium with sides $a, $b, $c is $median\"",
    "    # $1 is the first side\n    # $2 is the second side\n    # $3 is the height\n    echo \"scale=2; ($1 + $2) * $3 / 2\" | bc",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    elif [ $2 -eq $3 ]\n    then\n        echo $2\n    elif [ $1 -eq $3 ]\n    then\n        echo $3\n    else\n        echo \"The median length is not equal to any of the sides.\"\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(($a + $b + $c))\n  local s=$(($p / 2))\n  local median=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n  echo \"Median length of a trapezium with sides $a, $b, $c is $median\"",
    "    if [[ $# -ne 3 ]]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo \"The median length of a trapezium is $median\"",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All arguments must be different.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two arguments must be equal.\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"The first argument must be the smallest.\"\n        return 1\n    fi\n\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n        echo \"The third argument must be the largest.\"\n        return 1\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"The second argument must be the middle.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -lt $3 ]; then\n        echo \"The first and second arguments must be equal and smaller than the third.\"\n        return 1\n    fi\n\n    if [ $2 -eq $3 ] && [ $2 -lt $1 ]; then\n        echo \"The second and third arguments must be equal and smaller than the first.\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ] && [ $1 -lt $2 ]; then\n        echo \"The first and third arguments must be equal and smaller than the second.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -gt $3 ]; then\n        echo \"The first and second arguments must be equal and larger than the third.\"\n        return 1\n    fi\n\n    if [ $2 -eq $3 ] && [ $2 -gt $1 ]; then\n        echo \"The second and third arguments must be equal and larger than the first.\"\n",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <length1> <length2> <length3>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All lengths must be positive\"\n    return 2\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"All lengths must be different\"\n    return 3\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$((a + b + c))\n  local s=$((p / 2))\n  local median=$(echo \"sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc -l)\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"Median length of trapezium is $median\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    exit 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: All arguments must be positive integers.\"\n    exit 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: All arguments must be different.\"\n    exit 1\n  fi\n  if [ $1 -lt $2 ] && [ $2 -lt $3 ]; then\n    echo \"Error: Arguments must be in ascending order.\"\n    exit 1\n  fi\n  if [ $3 -lt $2 ] && [ $2 -lt $1 ]; then\n    echo \"Error: Arguments must be in ascending order.\"\n    exit 1\n  fi\n  if [ $2 -lt $1 ] && [ $1 -lt $3 ]; then\n    echo \"Error: Arguments must be in ascending order.\"\n    exit 1\n  fi\n  if [ $2 -lt $3 ] && [ $3 -lt $1 ]; then\n    echo \"Error: Arguments must be in ascending order.\"\n    exit 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: All arguments must be different.\"\n    exit 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -lt $3 ]; then\n    echo \"Error: All arguments must be different.\"\n    exit 1\n  fi\n  if [ $1 -eq $3 ] && [ $3 -lt $2 ]; then\n    echo \"Error: All arguments must be different.\"\n    exit 1\n  fi\n  if [ $2 -eq $3 ] && [ $3 -lt $1 ]; then\n    echo \"Error: All arguments must be different.\"\n    exit 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -gt $3 ]; then\n    echo \"Error: All arguments must be different.\"\n    exit 1\n  fi\n  if [ $1 -eq $3",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <side1> <side2> <side3>\"\n        return 1\n    fi\n\n    local side1=$1\n    local side2=$2\n    local side3=$3\n\n    if [ $side1 -le 0 ] || [ $side2 -le 0 ] || [ $side3 -le 0 ]; then\n        echo \"Error: sides must be positive integers\"\n        return 2\n    fi\n\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ]; then\n        echo \"Error: sides must be different\"\n        return 3\n    fi\n\n    local median=$(( ($side1 + $side2 + $side3) / 2 ))\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: All arguments must be greater than zero.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: All arguments must be different.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: All arguments must be different.\"\n    return 1\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    else\n      if [ $1 -lt $3 ]; then\n        echo $3\n      else\n        echo $1\n      fi\n    fi\n  else\n    if [ $1 -lt $3 ]; then\n      echo $1\n    else\n      if [ $2 -lt $3 ]; then\n        echo $3\n      else\n        echo $2\n      fi\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <h>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 1\n  fi\n  echo \"scale=2; $3*($1+$2)/2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: all arguments must be positive\"\n        return 2\n    fi\n    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -lt $3 ]; then\n        echo $1\n    elif [ $2 -lt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n        return 1\n    fi\n    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -lt $3 ]; then\n        echo $1\n    elif [ $2 -lt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median_length\n  median_length=$(echo \"scale=2; sqrt($a^2 + $b^2 + $c^2 - $a*$b - $a*$c - $b*$c)/2\" | bc)\n  echo $median_length",
    "    if [ $1 -eq $2 ]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(( ($a + $b + $c) / 2 ))\n\techo $median",
    "    if [ $1 -eq $2 ] && [ $2 -eq $3 ]\n    then\n        echo $1\n    else\n        if [ $1 -gt $2 ]\n        then\n            if [ $1 -gt $3 ]\n            then\n                if [ $2 -gt $3 ]\n                then\n                    echo $2\n                else\n                    echo $3\n                fi\n            else\n                echo $1\n            fi\n        else\n            if [ $2 -gt $3 ]\n            then\n                if [ $1 -gt $3 ]\n                then\n                    echo $1\n                else\n                    echo $3\n                fi\n            else\n                echo $2\n            fi\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(( ($a + $b + $c) / 2 ))\n  echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(((a+b+c)/3))\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive\"\n        return 2\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All arguments must be different\"\n        return 3\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"All arguments must be different\"\n        return 3\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        exit 1\n    fi\n    a=$1\n    b=$2\n    h=$3\n    echo \"scale=2; ($a+$b)*$h/2\" | bc",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2;($a+$b+$c)/3\" | bc)\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo \"The median of a trapezium with sides $a, $b, $c is $median\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( ($a + $b + $c) / 2 ))\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$((a + b + c))\n    local s=$((p / 2))\n\n    local median=$(echo \"sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc -l)\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be greater than 0\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  if [ \"$#\" -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$((a+b+c))\n  local s=$((p/2))\n  local median=$(echo \"sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc -l)\n  echo \"Median length of trapezium is $median\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local h=$3\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <h>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local h=$3\n  echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: $0 <a> <b> <h>\"\n\t\treturn 1\n\tfi\n\n\tlocal a=$1\n\tlocal b=$2\n\tlocal h=$3\n\n\techo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n    local median=$(echo \"scale=2; ($a + $b) / 2\" | bc)\n    local area=$(echo \"scale=2; $median * $h\" | bc)\n    echo \"Median length: $median\"\n    echo \"Area: $area\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: sides must be greater than 0\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: sides must be different\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: sides must be different\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: a must be the smallest side\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"Error: c must be the largest side\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"Error: b must be the middle side\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n    echo \"Error: a must be the smallest side\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -lt $1 ]; then\n    echo \"Error: c must be the largest side\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -lt $3 ]; then\n    echo \"Error: b must be the middle side\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -lt $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n  if [ $3 -eq $2 ] && [ $2 -lt $1 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n  if [ $2 -eq $1 ] &&",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/2\" | bc)\n    echo $median",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"The median of a trapezium with sides $a, $b and $c is $median\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    # Check if the number of arguments is correct\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    # Check if the arguments are integers\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]] || ! [[ \"$2\" =~ ^[0-9]+$ ]] || ! [[ \"$3\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: all arguments must be integers\"\n        return 2\n    fi\n\n    # Check if the arguments are positive\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: all arguments must be positive\"\n        return 3\n    fi\n\n    # Check if the arguments are valid\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 4\n    fi\n\n    # Check if the arguments are valid\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: the first argument must be the smallest\"\n        return 5\n    fi\n\n    # Check if the arguments are valid\n    if [ $3 -lt $2 ] && [ $3 -lt $1 ]; then\n        echo \"Error: the third argument must be the biggest\"\n        return 6\n    fi\n\n    # Calculate the median length\n    median=$(echo \"scale=2; ($1 + $2 + $3) / 2\" | bc)\n    echo \"The median length of the trapezium is $median\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -lt $3 ]; then\n    echo $1\n  elif [ $2 -lt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ]; then\n        echo \"a and b are equal\"\n        return 1\n    fi\n\n    if [ $2 -eq $3 ]; then\n        echo \"b and c are equal\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ]; then\n        echo \"a and c are equal\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -lt $3 ]; then\n            echo $1\n        elif [ $2 -lt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( ($a + $b + $c) / 2 ))\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n    return 1\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -lt $3 ]; then\n    echo $1\n  elif [ $2 -lt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local p=$(($a+$b+$c))\n    local s=$(($p/2))\n    local area=$(echo \"scale=2; sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc)\n    local median=$(echo \"scale=2; 2*$area/$p\" | bc)\n    echo \"Median length of trapezium is $median\"",
    "  if [ $# -ne 3 ]\n  then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]\n  then\n    echo \"All arguments must be positive integers.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]\n  then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]\n  then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]\n  then\n    if [ $2 -gt $3 ]\n    then\n      echo $2\n    else\n      echo $3\n    fi\n  fi\n\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]\n  then\n    if [ $1 -gt $3 ]\n    then\n      echo $1\n    else\n      echo $3\n    fi\n  fi\n\n  if [ $3 -gt $1 ] && [ $3 -gt $2 ]\n  then\n    if [ $1 -gt $2 ]\n    then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -eq $3 ]]; then\n        echo $1\n    elif [[ $2 -eq $3 ]]; then\n        echo $2\n    elif [[ $1 -gt $2 ]] && [[ $1 -gt $3 ]]; then\n        echo $2\n    elif [[ $2 -gt $1 ]] && [[ $2 -gt $3 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(($a + $b + $c))\n  local s=$(($p / 2))\n  local area=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n  local median=$(echo \"scale=2; 2 * $area / $a\" | bc)\n  echo \"$median\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(( ($a + $b + $c) / 2 ))\n  local s=$(echo \"scale=2; sqrt($p * ($p - $a) * ($p - $b) * ($p - $c))\" | bc)\n  local h=$(echo \"scale=2; $s * 2 / $a\" | bc)\n  echo \"scale=2; $h / 2\" | bc",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"The median length of a trapezium is $median\"",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"Error: sides must be positive integers\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All arguments must be positive integers.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Two arguments must be equal.\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"The first argument must be the smallest.\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"The third argument must be the largest.\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"The second argument must be the largest.\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n    echo \"The first argument must be the smallest.\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -lt $1 ]; then\n    echo \"The third argument must be the largest.\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -lt $3 ]; then\n    echo \"The second argument must be the largest.\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"The median of the trapezium is $median.\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers.\"\n    return 2\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $3 -lt $1 ] && [ $3 -lt $2 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different.\"\n    return 3\n  fi\n  if [ $1 -gt $",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2;($a+$b+$c)/2\" | bc)\n  echo $median",
    "    echo \"scale=2; ($1 + $2) / 2\" | bc",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(( ($a + $b + $c) / 2 ))\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( ($a + $b + $c) / 2 ))\n\n    echo \"The median length of a trapezium is $median.\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all sides must be greater than zero.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all sides must be different.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: two sides must be equal.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: the longest side must be the base.\"\n    return 1\n  fi\n\n  if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n    echo \"Error: the shortest side must be the base.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n    echo \"Error: the base must be the longest side.\"\n    return 1\n  fi\n\n  if [ $1 -lt $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: the base must be the longest side.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $1 -gt $3 ]; then\n    echo \"Error: the base must be the longest side.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $1 -lt $3 ]; then\n    echo \"Error: the base must be the longest side.\"\n    return 1\n  fi\n\n  if [ $1 -eq $3 ] && [ $1 -gt $2 ]; then\n    echo \"Error: the base must be the longest side.\"\n    return 1\n  fi\n\n  if [ $1 -eq $3 ] && [ $1 -lt $2 ]; then\n    echo \"Error: the base must be the longest side.\"\n    return 1\n  fi\n\n",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local p=$((($a + $b + $c) / 2))\n    local s=$(echo \"scale=2; sqrt($p * ($p - $a) * ($p - $b) * ($p - $c))\" | bc)\n    local h=$(echo \"scale=2; 2 * $s / $a\" | bc)\n    echo \"scale=2; ($a + $b) / 2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All arguments must be different\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two arguments must be equal\"\n        return 4\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"The first argument must be the smallest\"\n        return 5\n    fi\n\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n        echo \"The third argument must be the largest\"\n        return 6\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"The second argument must be the middle\"\n        return 7\n    fi\n\n    echo \"The median length of the trapezium is $2\"",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"All arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"Median of trapezium is $median\"",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$((($a+$b+$c)/3))\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"Error: sides must be positive\"\n        return 2\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"Error: sides must be different\"\n        return 3\n    fi\n\n    local median=$(echo \"scale=2; sqrt($a*$b*($a+$b+$c)*($a+$b-$c))/4\" | bc)\n    echo \"Median length: $median\"",
    "    echo \"scale=2;($1+$2+$3)/3\" | bc",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    exit 1\n  fi\n  a=$1\n  b=$2\n  c=$3\n  if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n    echo \"Error: all arguments must be greater than zero.\"\n    exit 1\n  fi\n  if [ $a -gt $b ]; then\n    if [ $b -gt $c ]; then\n      echo $b\n    elif [ $a -gt $c ]; then\n      echo $c\n    else\n      echo $a\n    fi\n  else\n    if [ $a -gt $c ]; then\n      echo $a\n    elif [ $b -gt $c ]; then\n      echo $c\n    else\n      echo $b\n    fi\n  fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2;($a+$b+$c)/2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <length1> <length2> <length3>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all lengths must be positive\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all lengths must be different\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all lengths must be different\"\n        return 3\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n    echo \"scale=2; ($1 + $2) * $3 / 2\" | bc",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <h>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local h=$3\n  echo \"scale=2; ($a + $b) * $h / 2\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: all sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    exit 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    exit 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    exit 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"Argument 1 must be an integer\"\n        return 1\n    fi\n    if ! [[ \"$2\" =~ ^[0-9]+$ ]]; then\n        echo \"Argument 2 must be an integer\"\n        return 1\n    fi\n    if ! [[ \"$3\" =~ ^[0-9]+$ ]]; then\n        echo \"Argument 3 must be an integer\"\n        return 1\n    fi\n    if [ $1 -lt $2 ]; then\n        echo \"Argument 1 must be greater than argument 2\"\n        return 1\n    fi\n    if [ $2 -lt $3 ]; then\n        echo \"Argument 2 must be greater than argument 3\"\n        return 1\n    fi\n    if [ $3 -lt 0 ]; then\n        echo \"Argument 3 must be greater than 0\"\n        return 1\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Argument 1 must be greater than 0\"\n        return 1\n    fi\n    if [ $2 -lt 0 ]; then\n        echo \"Argument 2 must be greater than 0\"\n        return 1\n    fi\n    if [ $1 -eq $2 ]; then\n        echo \"Argument 1 must be different from argument 2\"\n        return 1\n    fi\n    if [ $2 -eq $3 ]; then\n        echo \"Argument 2 must be different from argument 3\"\n        return 1\n    fi\n    if [ $1 -eq $3 ]; then\n        echo \"Argument 1 must be different from argument 3\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"Argument 1 must be different from 0\"\n        return 1\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"Argument 2 must be different from 0\"\n        return 1\n    fi\n    if [ $3 -eq 0 ]; then\n        echo \"Argument 3 must be different from 0\"\n        return 1\n    fi\n    if [ $1 -eq 1",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local h=$3\n    echo \"scale=2; ($a + $b) / 2 * $h\" | bc",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All lengths must be greater than 0.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All lengths are equal.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Two lengths are equal.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ]; then\n    if [ $1 -gt $3 ]; then\n      if [ $2 -gt $3 ]; then\n        echo $2\n      else\n        echo $3\n      fi\n    else\n      echo $1\n    fi\n  else\n    if [ $2 -gt $3 ]; then\n      if [ $1 -gt $3 ]; then\n        echo $1\n      else\n        echo $3\n      fi\n    else\n      echo $2\n    fi\n  fi"
  ]
}
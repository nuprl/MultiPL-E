{
  "name": "mbpp_432_median_trapezium",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n\n    local median=$(echo \"sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc -l)\n\n    echo \"Median length of a trapezium with sides $a, $b, $c is $median\"",
    "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 2\n  fi\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 3\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $1 -eq $2 ]\n    then\n        echo $1\n    else\n        echo $3\n    fi",
    "  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"The longest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n        echo \"The shortest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n        echo \"The middle side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ] && [ $1 -gt $3 ]; then\n        echo \"The middle side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $1 -gt $3 ]; then\n        echo \"The longest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $1 -lt $3 ]; then\n        echo \"The shortest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ] && [ $1 -gt $2 ]; then\n        echo \"The longest side must be the base\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ] && [ $1 -lt $2 ]; then\n        echo \"The shortest side must be the base\"\n        return 1\n    fi\n\n    if [ $2 -eq $3 ] && [ $2 -gt $1 ]; then\n        echo \"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n    echo $median",
    "    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"The median length of a trapezium is $median\"",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -eq $2 -a $2 -eq $3 ]; then\n    echo \"The median length is $1.\"\n  elif [ $1 -eq $2 ]; then\n    echo \"The median length is $3.\"\n  elif [ $2 -eq $3 ]; then\n    echo \"The median length is $1.\"\n  elif [ $1 -eq $3 ]; then\n    echo \"The median length is $2.\"\n  else\n    echo \"The median length is $2.\"\n  fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n    echo \"Median length of a trapezium with sides $a, $b, $c is $median\"",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n    local area=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n    local median=$(echo \"scale=2; $area * 2 / $a\" | bc)\n\n    echo $median",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <int> <int> <int>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/2\" | bc)\n    echo \"The median of the trapezium is $median\""
  ]
}
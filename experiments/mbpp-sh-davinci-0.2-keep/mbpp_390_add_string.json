{
  "name": "mbpp_390_add_string",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to apply a given format string to all of the elements in a list.\n#\n# $1 is a $Any\n# $2 is a string\nadd_string() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_390_add_string.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    add_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"temp{0}\") = \"temp1 temp2 temp3 temp4\" ]]\n    [[ $(candidate \"a b c d\" \"python{0}\") = \"pythona pythonb pythonc pythond\" ]]\n    [[ $(candidate \"5 6 7 8\" \"string{0}\") = \"string5 string6 string7 string8\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list=$1\n  local string=$2\n  local result=\"\"\n  for element in $list; do\n    result=\"$result $string\"\n  done\n  echo $result",
    "    local -n list=$1\n    local string=$2\n    for i in \"${list[@]}\"; do\n        echo \"$string$i\"\n    done",
    "    local list=$1\n    local format=$2\n    local result=\"\"\n    for item in $list; do\n        result=\"$result $(printf \"$format\" \"$item\")\"\n    done\n    echo \"$result\"",
    "    local list=$1\n    local string=$2\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $string\"\n    done\n    echo $result",
    "  local list=$1\n  local string=$2\n  local new_list=()\n  for item in $list; do\n    new_list+=($(printf \"$string\" \"$item\"))\n  done\n  echo \"${new_list[@]}\"",
    "  local -n _list=$1\n  local _string=$2\n  local _element\n  for _element in \"${_list[@]}\"; do\n    echo \"$_string$_element\"\n  done",
    "    local -n _list=$1\n    local _format=$2\n    local _item\n    for _item in \"${_list[@]}\"; do\n        printf \"$_format\" \"$_item\"\n    done",
    "  local list=$1\n  local string=$2\n  local result=\"\"\n  for item in $list; do\n    result=\"$result $string\"\n  done\n  echo $result",
    "    local list=$1\n    local format=$2\n    local result=\"\"\n    for item in $list; do\n        result=\"$result $(printf \"$format\" \"$item\")\"\n    done\n    echo \"$result\"",
    "  local list=$1\n  local format=$2\n  local result=\"\"\n  for item in $list; do\n    result=\"$result $format\"\n  done\n  echo $result",
    "  local list=$1\n  local string=$2\n  local result=()\n  for i in $list; do\n    result+=(\"$string$i\")\n  done\n  echo \"${result[@]}\"",
    "    local -n list=$1\n    local format_string=$2\n\n    for item in \"${list[@]}\"; do\n        printf \"$format_string\" \"$item\"\n    done",
    "    local -n _list=$1\n    local _string=$2\n    for ((i=0; i<${#_list[@]}; i++)); do\n        _list[i]=\"${_list[i]}${_string}\"\n    done",
    "    local list=\"$1\"\n    local format=\"$2\"\n    local result=\"\"\n    for item in $list; do\n        result=\"$result$(printf \"$format\" \"$item\")\"\n    done\n    echo \"$result\"",
    "  local -n list=$1\n  local string=$2\n  for i in \"${list[@]}\"; do\n    echo \"$string$i\"\n  done",
    "    local -n list=$1\n    local format=$2\n    for item in \"${list[@]}\"; do\n        printf \"$format\" \"$item\"\n    done",
    "  local list=\"$1\"\n  local format=\"$2\"\n  local result=\"\"\n\n  for item in $list; do\n    result=\"${result}${format} \"\n  done\n\n  echo \"${result}\"",
    "  local string=\"$2\"\n  local result=\"\"\n  for element in \"${@:3}\"; do\n    result=\"$result $(printf \"$string\" \"$element\")\"\n  done\n  echo \"$result\"",
    "  local result=\"\"\n  for i in \"${@:2}\"; do\n    result=\"$result $1\"\n  done\n  echo \"$result\"",
    "  local list=$1\n  local string=$2\n  local result=\"\"\n  for element in $list; do\n    result=\"$result $string\"\n  done\n  echo \"$result\""
  ]
}
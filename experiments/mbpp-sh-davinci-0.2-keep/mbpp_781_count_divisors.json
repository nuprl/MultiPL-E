{
  "name": "mbpp_781_count_divisors",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\n#\n# $1 is an integer\ncount_divisors() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_781_count_divisors.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    count_divisors \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"100\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if ((num % i == 0)); then\n            ((divisors++))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=num; i++)); do\n        if [[ $((num % i)) -eq 0 ]]; then\n            ((divisors++))\n        fi\n    done\n    echo $divisors",
    "    if [ $1 -lt 2 ]; then\n        echo \"Please enter an integer greater than 1\"\n        exit 1\n    fi\n\n    count=0\n    for((i=1;i<=$1;i++)); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            count=$(( $count + 1 ))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n    if [ $1 -eq 2 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 3 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 4 ]; then\n        echo \"3\"\n        return\n    fi\n    if [ $1 -eq 5 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 6 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 7 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 8 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 9 ]; then\n        echo \"3\"\n        return\n    fi\n    if [ $1 -eq 10 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 11 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 12 ]; then\n        echo \"6\"\n        return\n    fi\n    if [ $1 -eq 13 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 14 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 15 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1 -eq 16 ]; then\n        echo \"5\"\n        return\n    fi\n    if [ $1 -eq 17 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 18 ]; then\n        echo \"6\"\n        return\n    fi\n    if [ $1 -eq 19 ]; then\n        echo \"2\"\n        return\n    fi\n    if [ $1 -eq 20 ]; then\n        echo \"6\"\n        return\n    fi\n    if [ $1 -eq 21 ]; then\n        echo \"4\"\n        return\n    fi\n    if [ $1",
    "    local i=1\n    local count=0\n    while [ $i -le $1 ]\n    do\n        if [ $(( $1 % $i )) -eq 0 ]\n        then\n            count=$(( $count + 1 ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo $count",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        exit 1\n    fi\n    if [ $1 -lt 1 ]; then\n        echo \"Error: Only integers greater than 0 are allowed\"\n        exit 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: Only integers are allowed\"\n        exit 1\n    fi\n    divisors=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            divisors=$(( $divisors + 1 ))\n        fi\n    done\n    if [ $(( $divisors % 2 )) -eq 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local number=$1\n    local divisor=1\n    local count=0\n    while [ $divisor -le $number ]\n    do\n        if [ $((number % divisor)) -eq 0 ]\n        then\n            count=$((count + 1))\n        fi\n        divisor=$((divisor + 1))\n    done\n    echo $count",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if ((num % i == 0)); then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local count=0\n    for (( i=1; i<=$num; i++ )); do\n        if [ $(( $num % $i )) -eq 0 ]; then\n            count=$(( $count + 1 ))\n        fi\n    done\n    echo $count",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: Only natural numbers are allowed\"\n        return 1\n    fi\n    divisors=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            divisors=$(( $divisors + 1 ))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=$num; i++)); do\n        if (( $num % $i == 0 )); then\n            ((divisors++))\n        fi\n    done\n    echo $divisors",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=num; i++)); do\n        if ((num % i == 0)); then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    local number=$1\n    local divisors=0\n    for ((i=1; i<=$number; i++)); do\n        if [ $(($number % $i)) -eq 0 ]; then\n            divisors=$(($divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    local n=$1\n    local count=0\n    for (( i=1; i<=$n; i++ )); do\n        if (( n % i == 0 )); then\n            (( count++ ))\n        fi\n    done\n    echo $count",
    "    local num=$1\n    local divisors=0\n    for ((i=1; i<=num; i++)); do\n        if ((num % i == 0)); then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors",
    "    local number=$1\n    local divisor=0\n    for ((i=1; i<=$number; i++)); do\n        if [[ $((number % i)) -eq 0 ]]; then\n            divisor=$((divisor + 1))\n        fi\n    done\n    echo $divisor",
    "    local num=$1\n    local count=0\n    for ((i=1; i<=$num; i++)); do\n        if [[ $((num % i)) -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local count=0\n    for ((i=1; i<=$1; i++)); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
    "    local number=$1\n    local divisors=0\n    for ((i=1; i<=$number; i++)); do\n        if [[ $((number % i)) -eq 0 ]]; then\n            divisors=$((divisors + 1))\n        fi\n    done\n    echo $divisors"
  ]
}
{
  "name": "mbpp_80_tetrahedral_number",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth tetrahedral number.\n#\n# $1 is an integer\ntetrahedral_number() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    tetrahedral_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"35\" ]]\n    [[ $(candidate \"6\") = \"56\" ]]\n    [[ $(candidate \"7\") = \"84\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    echo $(( $1 * ($1 + 1) * ($1 + 2) / 6 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        ((sum+=i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2))/6)",
    "    local n=$1\n    echo \"$((n * (n + 1) * (n + 2) / 6))\"",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    (( n * (n + 1) * (n + 2) / 6 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum+i))\n    done\n    echo $((sum*(sum+1)/2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    (( n * (n + 1) * (n + 2) / 6 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        ((sum+=i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    # $1 is an integer\n    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    # The formula for the nth tetrahedral number is:\n    # n*(n+1)*(n+2)/6\n    echo $((n*(n+1)*(n+2)/6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    # nth tetrahedral number is the sum of the first n triangular numbers\n    # (1 + 2 + 3 + ... + n)\n    #\n    # Triangular number is the sum of the first n natural numbers\n    # (1 + 2 + 3 + ... + n)\n    #\n    # So, nth tetrahedral number is the sum of the first n natural numbers\n    # squared\n    # (1^2 + 2^2 + 3^2 + ... + n^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    # (1^2 + 3^2 + 5^2 + ... + (2n-1)^2)\n    #\n    # This can be rewritten as the sum of the first n odd numbers squared\n    #",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        ((sum+=i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    if [ $1 -le 0 ]; then\n        echo 0\n    else\n        echo $(( $1 * ($1 + 1) * ($1 + 2) / 6 ))\n    fi",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++)); do\n    ((sum+=i))\n  done\n  echo $((sum*(sum+1)/2))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: Argument must be greater than 0\"\n        return 1\n    fi\n\n    # nth tetrahedral number is the sum of the first n triangular numbers\n    # nth triangular number is the sum of the first n natural numbers\n    # nth natural number is n\n    #\n    # So, nth tetrahedral number is the sum of the first n natural numbers\n    # which is n(n+1)/2\n    echo $(( $1 * ($1 + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ ))\n    do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum+i))\n    done\n    echo $((sum*(sum+1)/2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "  local n=$1\n  echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++)); do\n    sum=$((sum + i))\n  done\n  echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    echo $(( $1 * ($1 + 1) * ($1 + 2) / 6 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"Error: argument must be a positive integer\" >&2\n    return 1\n  fi\n\n  local n=$1\n  local sum=0\n  while [[ $n -gt 0 ]]; do\n    sum=$((sum + n))\n    n=$((n - 1))\n  done\n\n  echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    echo $(( $1 * ($1 + 1) * ( $1 + 2) / 6 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    # $1 is an integer\n    local n=$1\n    # $2 is an integer\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ( $sum + 1 ) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum+i))\n    done\n    echo $((sum*(sum+1)/2))",
    "    local n=$1\n    local sum=0\n\n    for (( i=1; i<=$n; i++ ))\n    do\n        let sum+=$i\n    done\n\n    echo $sum",
    "    echo $(( $1 * ( $1 + 1 ) * ( $1 + 2 ) / 6 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    n=$1\n    echo $((n*(n+1)*(n+2))/6)",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: Argument must be a positive integer.\"\n        return 1\n    fi\n\n    local n=$1\n    local sum=0\n    while [ $n -gt 0 ]; do\n        sum=$((sum + n))\n        n=$((n - 1))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: argument must be a positive integer\"\n        return 1\n    fi\n    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    echo \"scale=0; ($1 * ($1 + 1) * ($1 + 2)) / 6\" | bc",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "\tif [[ $1 -lt 1 ]]; then\n\t\techo \"Error: Argument must be a positive integer.\"\n\t\treturn 1\n\tfi\n\techo $(( ($1 * ($1 + 1) * ( $1 + 2)) / 6 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  echo $(( $1 * ( $1 + 1 ) * ( $1 + 2 ) / 6 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: argument must be greater than 0\"\n        return 1\n    fi\n\n    # The nth tetrahedral number is the sum of the first n triangular numbers.\n    # The nth triangular number is the sum of the first n natural numbers.\n    # The sum of the first n natural numbers is n(n+1)/2.\n    # The nth tetrahedral number is n(n+1)(n+2)/6.\n    echo $(( $1 * ($1 + 1) * ($1 + 2) / 6 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    if [ $1 -lt 1 ]; then\n        echo \"Error: argument must be a positive integer\" >&2\n        return 1\n    fi\n    echo $((($1 * ($1 + 1) * ( $1 + 2)) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    else\n        echo $(( $1 * ($1 + 1) * ( $1 + 2) / 6 ))\n    fi",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "    local n=$1\n    local sum=0\n\n    for (( i=1; i<=n; i++ )); do\n        sum=$(( sum + i ))\n    done\n\n    echo $(( sum * (sum + 1) / 2 ))",
    "    if [ $1 -eq 0 ]; then\n        echo 0\n    else\n        echo $(($1 * $(($1 + 1)) * $(($1 + 2)) / 6))\n    fi",
    "  local n=$1\n  echo $((n * (n + 1) * (n + 2) / 6))"
  ]
}
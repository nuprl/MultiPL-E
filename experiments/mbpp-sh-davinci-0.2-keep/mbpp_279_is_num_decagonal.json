{
  "name": "mbpp_279_is_num_decagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth decagonal number.\n#\n# $1 is an integer\nis_num_decagonal() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_num_decagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"27\" ]]\n    [[ $(candidate \"7\") = \"175\" ]]\n    [[ $(candidate \"10\") = \"370\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)\" | bc)\n    local n_dec=$(echo \"($n+1)/2\" | bc)\n    local n_dec_sq=$(echo \"$n_dec*$n_dec\" | bc)\n    local n_dec_sq_dec=$(echo \"$n_dec_sq*10+$n_dec\" | bc)\n    if [ $n_dec_sq_dec -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(4*$n+1)\" | bc)\n    local nth_decagonal=$(echo \"scale=0; $nth*(3*$nth-1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_pentagonal=$(pentagonal $n)\n    local nth_hexagonal=$(hexagonal $n)\n    local nth_triangular=$(triangular $n)\n    local nth_square=$(square $n)\n    local nth_heptagonal=$(heptagonal $n)\n    local nth_octagonal=$(octagonal $n)\n    local nth_nonagonal=$(nonagonal $n)\n    if [ $nth_decagonal -eq $nth_pentagonal ] ||\n       [ $nth_decagonal -eq $nth_hexagonal ] ||\n       [ $nth_decagonal -eq $nth_triangular ] ||\n       [ $nth_decagonal -eq $nth_square ] ||\n       [ $nth_decagonal -eq $nth_heptagonal ] ||\n       [ $nth_decagonal -eq $nth_octagonal ] ||\n       [ $nth_decagonal -eq $nth_nonagonal ]; then\n        echo $nth_decagonal\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(2*$num+0.25)+0.5\" | bc -l)\n    local n_decagonal=$(echo \"($n*($n*3-1))/2\" | bc -l)\n    if [[ $n_decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((10*n*n - 9*n + 2))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_one=$((nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_int_plus_one_sqr=$((nth_decagonal_sqrt_int_plus_one * nth_decagonal_sqrt_int_plus_one))\n    if [[ $nth_decagonal -eq $nth_decagonal_sqrt_int_plus_one_sqr ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" = \"0\" ]; then\n        echo \"$n_int\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n * (3 * n - 2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed -e 's/\\..*//')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed -e 's/^.*\\.//')\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_int_sq=$((nth_decagonal_sqrt_int * nth_decagonal_sqrt_int))\n        local nth_decagonal_sqrt_int_sq_dec=$((nth_decagonal_sqrt_int_sq % 10))\n        if [ \"$nth_decagonal_sqrt_int_sq_dec\" == \"5\" ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4 * $num + 1) + 1\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [ \"$num\" -eq \"$n_decagonal\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(2*$num+0.25)-0.5\" | bc -l)\n    local n_int=$(echo \"$n\" | awk '{printf(\"%d\", $1)}')\n    local n_dec=$(echo \"$n\" | awk '{printf(\"%f\", $1)}')\n    [ \"$n_int\" -eq \"$n_dec\" ] && return 0 || return 1",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($1)}')\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    local n_sqrt_dec_int=$(echo \"$n_sqrt_dec * 10\" | bc | awk '{print int($1)}')\n    if [ $n_sqrt_dec_int -eq 3 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    if [[ $(( n * (3 * n - 2) )) -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 4 * 2 * $n) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth * (3 * $nth - 1) / 2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi"
  ]
}
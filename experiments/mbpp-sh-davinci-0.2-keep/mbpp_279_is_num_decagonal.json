{
  "name": "mbpp_279_is_num_decagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth decagonal number.\n#\n# $1 is an integer\nis_num_decagonal() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_num_decagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"27\" ]]\n    [[ $(candidate \"7\") = \"175\" ]]\n    [[ $(candidate \"10\") = \"370\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)\" | bc)\n    local n_dec=$(echo \"($n+1)/2\" | bc)\n    local n_dec_sq=$(echo \"$n_dec*$n_dec\" | bc)\n    local n_dec_sq_dec=$(echo \"$n_dec_sq*10+$n_dec\" | bc)\n    if [ $n_dec_sq_dec -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(4*$n+1)\" | bc)\n    local nth_decagonal=$(echo \"scale=0; $nth*(3*$nth-1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_pentagonal=$(pentagonal $n)\n    local nth_hexagonal=$(hexagonal $n)\n    local nth_triangular=$(triangular $n)\n    local nth_square=$(square $n)\n    local nth_heptagonal=$(heptagonal $n)\n    local nth_octagonal=$(octagonal $n)\n    local nth_nonagonal=$(nonagonal $n)\n    if [ $nth_decagonal -eq $nth_pentagonal ] ||\n       [ $nth_decagonal -eq $nth_hexagonal ] ||\n       [ $nth_decagonal -eq $nth_triangular ] ||\n       [ $nth_decagonal -eq $nth_square ] ||\n       [ $nth_decagonal -eq $nth_heptagonal ] ||\n       [ $nth_decagonal -eq $nth_octagonal ] ||\n       [ $nth_decagonal -eq $nth_nonagonal ]; then\n        echo $nth_decagonal\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(2*$num+0.25)+0.5\" | bc -l)\n    local n_decagonal=$(echo \"($n*($n*3-1))/2\" | bc -l)\n    if [[ $n_decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((10*n*n - 9*n + 2))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_one=$((nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_int_plus_one_sqr=$((nth_decagonal_sqrt_int_plus_one * nth_decagonal_sqrt_int_plus_one))\n    if [[ $nth_decagonal -eq $nth_decagonal_sqrt_int_plus_one_sqr ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" = \"0\" ]; then\n        echo \"$n_int\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n * (3 * n - 2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed -e 's/\\..*//')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed -e 's/^.*\\.//')\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_int_sq=$((nth_decagonal_sqrt_int * nth_decagonal_sqrt_int))\n        local nth_decagonal_sqrt_int_sq_dec=$((nth_decagonal_sqrt_int_sq % 10))\n        if [ \"$nth_decagonal_sqrt_int_sq_dec\" == \"5\" ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4 * $num + 1) + 1\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [ \"$num\" -eq \"$n_decagonal\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(2*$num+0.25)-0.5\" | bc -l)\n    local n_int=$(echo \"$n\" | awk '{printf(\"%d\", $1)}')\n    local n_dec=$(echo \"$n\" | awk '{printf(\"%f\", $1)}')\n    [ \"$n_int\" -eq \"$n_dec\" ] && return 0 || return 1",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($1)}')\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    local n_sqrt_dec_int=$(echo \"$n_sqrt_dec * 10\" | bc | awk '{print int($1)}')\n    if [ $n_sqrt_dec_int -eq 3 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    if [[ $(( n * (3 * n - 2) )) -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 4 * 2 * $n) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth * (3 * $nth - 1) / 2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(nth_decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_dec=${nth_decagonal_sqrt#*.}\n    if [[ $nth_decagonal_sqrt_dec == 0 && $nth_decagonal_sqrt_int == $nth_decagonal_sqrt ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local d=$(echo \"scale=0; sqrt(4*$n + 1) + 1\" | bc)\n    [[ $((d*(3*d - 1)/2)) -eq $n ]]",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d '.' -f 1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d '.' -f 2)\n    if [ \"$nth_decagonal_sqrt_dec\" = \"0\" ]; then\n        local nth_decagonal_sqrt_dec_int=$(echo \"$nth_decagonal_sqrt_dec\" | cut -d '.' -f 1)\n        if [ \"$nth_decagonal_sqrt_dec_int\" = \"0\" ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n + 1) + 1) / 2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [[ $n_decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    [[ $decagonal -eq $num ]] && return 0 || return 1",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n  local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n  if [ $n -eq $decagonal ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local n_decagonal=$((10*n*(n-1)/2+n))\n    local n_decagonal_sqrt=$(echo \"sqrt($n_decagonal)\" | bc)\n    local n_decagonal_sqrt_int=${n_decagonal_sqrt%.*}\n    local n_decagonal_sqrt_int_sq=$((n_decagonal_sqrt_int*n_decagonal_sqrt_int))\n    if [[ $n_decagonal_sqrt_int_sq -eq $n_decagonal ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_decagonal=$(decagonal $n)\n    local n_decagonal_sqrt=$(echo \"sqrt($n_decagonal)\" | bc)\n    local n_decagonal_sqrt_int=${n_decagonal_sqrt%.*}\n    local n_decagonal_sqrt_dec=${n_decagonal_sqrt#*.}\n    if [ $n_decagonal_sqrt_dec -eq 0 ]; then\n        local n_decagonal_sqrt_dec_sqrt=$(echo \"sqrt($n_decagonal_sqrt_int)\" | bc)\n        local n_decagonal_sqrt_dec_sqrt_int=${n_decagonal_sqrt_dec_sqrt%.*}\n        local n_decagonal_sqrt_dec_sqrt_dec=${n_decagonal_sqrt_dec_sqrt#*.}\n        if [ $n_decagonal_sqrt_dec_sqrt_dec -eq 0 ]; then\n            local n_decagonal_sqrt_dec_sqrt_dec_sqrt=$(echo \"sqrt($n_decagonal_sqrt_dec_sqrt_int)\" | bc)\n            local n_decagonal_sqrt_dec_sqrt_dec_sqrt_int=${n_decagonal_sqrt_dec_sqrt_dec_sqrt%.*}\n            local n_decagonal_sqrt_dec_sqrt_dec_sqrt_dec=${n_decagonal_sqrt_dec_sqrt_dec_sqrt#*.}\n            if [ $n_decagonal_sqrt_dec_sqrt_dec_sqrt_dec -eq 0 ]; then\n                local n_decagonal_sqrt_dec_sqrt_dec_sqrt_dec_sqrt=$(echo \"sqrt($n_decagonal_sqrt_dec_sqrt_dec_sqrt_int)\" | bc)\n                local n_decagonal_sqrt_dec_sqrt_dec_sqrt_dec_sqrt_int=${n_decagonal_sqrt_dec_sqrt_dec_sqrt_dec_sqrt%.*}\n               ",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) + 1) / 2 ))\n    local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f2)\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_plus_1=$(echo \"$nth_decagonal_sqrt_int + 1\" | bc)\n        local nth_decagonal_sqrt_plus_1_sq=$(echo \"$nth_decagonal_sqrt_plus_1 * $nth_decagonal_sqrt_plus_1\" | bc)\n        local nth_decagonal_sqrt_plus_1_sq_minus_1=$(echo \"$nth_decagonal_sqrt_plus_1_sq - 1\" | bc)\n        local nth_decagonal_sqrt_plus_1_sq_minus_1_div_10=$(echo \"$nth_decagonal_sqrt_plus_1_sq_minus_1 / 10\" | bc)\n        if [ \"$nth_decagonal_sqrt_plus_1_sq_minus_1_div_10\" == \"$n\" ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n * (3 * n - 2)))\n    local nth_triangular=$(is_num_triangular $nth_decagonal)\n    if [ $nth_triangular -eq 1 ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_1=$((nth_decagonal_sqrt_int+1))\n    local nth_decagonal_sqrt_int_plus_1_sq=$((nth_decagonal_sqrt_int_plus_1*nth_decagonal_sqrt_int_plus_1))\n    local nth_decagonal_sqrt_int_sq=$((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int))\n    if [[ $nth_decagonal_sqrt_int_sq -eq $nth_decagonal ]] || [[ $nth_decagonal_sqrt_int_plus_1_sq -eq $nth_decagonal ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( $(( n * (3 * n - 1) / 2 )) == $num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"$n is decagonal\"\n    else\n        echo \"$n is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        echo \"$num is a decagonal number\"\n    else\n        echo \"$num is not a decagonal number\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [[ $decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local decagonal=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    if [ $(echo \"$decagonal % 4\" | bc) -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(( $n * (3 * $n - 1) / 2 ))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_dec=${nth_decagonal_sqrt#*.}\n    if [[ $nth_decagonal_sqrt_dec == 0 ]]; then\n        local nth_decagonal_sqrt_int_sq=$(( $nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int ))\n        local nth_decagonal_sqrt_int_sq_dec=$(( $nth_decagonal_sqrt_int_sq % 10 ))\n        if [[ $nth_decagonal_sqrt_int_sq_dec == 5 ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(nth_decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f2)\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_plus_one=$(echo \"$nth_decagonal_sqrt_int + 1\" | bc)\n        local nth_decagonal_sqrt_plus_one_sq=$(echo \"$nth_decagonal_sqrt_plus_one * $nth_decagonal_sqrt_plus_one\" | bc)\n        local nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal=$(echo \"$nth_decagonal_sqrt_plus_one_sq - $nth_decagonal\" | bc)\n        local nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal_div_2=$(echo \"$nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal / 2\" | bc)\n        local nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal_div_2_int=$(echo \"$nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal_div_2\" | cut -d'.' -f1)\n        local nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal_div_2_dec=$(echo \"$nth_decagonal_sqrt_plus_one_sq_minus_nth_decagonal_div_2\" | cut -d'.' -f2)\n        if [ \"$nth_decagonal_sqrt_plus_one_sq_minus_",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: is_num_decagonal <integer>\"\n    return 1\n  fi\n  if [ $1 -lt 1 ]; then\n    return 1\n  fi\n  local n=$1\n  local nth_decagonal=$((n*(3*n-2)))\n  local nth_triangular=$((n*(n+1)/2))\n  if [ $nth_decagonal -eq $nth_triangular ]; then\n    return 0\n  else\n    return 1\n  fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed 's/\\..*//')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed 's/^.*\\.//')\n    if [[ $nth_decagonal_sqrt_dec -eq 0 ]]; then\n        local nth_decagonal_sqrt_sq=$(echo \"$nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int\" | bc)\n        if [[ $nth_decagonal_sqrt_sq -eq $nth_decagonal ]]; then\n            echo 1\n        else\n            echo 0\n        fi\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    if [[ $n_decagonal -eq $n ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"$n is decagonal\"\n    else\n        echo \"$n is not decagonal\"\n    fi",
    "    local num=$1\n    local result=$(echo \"sqrt(4*$num+1)\" | bc -l)\n    local int_result=$(echo \"$result\" | cut -d. -f1)\n    if [ \"$result\" == \"$int_result\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    local nth_int=$(echo \"$nth/2\" | bc)\n    local nth_dec=$(echo \"$nth/2\" | bc -l)\n    if [ \"$nth_dec\" = \"$nth_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ \"$decagonal\" -eq \"$num\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local sqrt_nth_decagonal=$(bc <<< \"sqrt($nth_decagonal)\")\n    local sqrt_nth_decagonal_int=$(echo $sqrt_nth_decagonal | cut -d '.' -f 1)\n    local sqrt_nth_decagonal_dec=$(echo $sqrt_nth_decagonal | cut -d '.' -f 2)\n    if [[ $sqrt_nth_decagonal_dec == 0 ]]; then\n        local sqrt_nth_decagonal_dec=0\n    fi\n    if [[ $sqrt_nth_decagonal_dec == 0 && $sqrt_nth_decagonal_int%6 == 0 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n  local decagonal=$(( n * (3 * n - 1) / 2 ))\n  if [[ $decagonal -eq $num ]]; then\n    return 0\n  else\n    return 1\n  fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_dec=${nth_decagonal_sqrt#*.}\n    if [[ $nth_decagonal_sqrt_dec -eq 0 ]]; then\n        local nth_decagonal_sqrt_sqrt=$(echo \"sqrt($nth_decagonal_sqrt_int)\" | bc)\n        local nth_decagonal_sqrt_sqrt_int=${nth_decagonal_sqrt_sqrt%.*}\n        local nth_decagonal_sqrt_sqrt_dec=${nth_decagonal_sqrt_sqrt#*.}\n        if [[ $nth_decagonal_sqrt_sqrt_dec -eq 0 ]]; then\n            local nth_decagonal_sqrt_sqrt_sqrt=$(echo \"sqrt($nth_decagonal_sqrt_sqrt_int)\" | bc)\n            local nth_decagonal_sqrt_sqrt_sqrt_int=${nth_decagonal_sqrt_sqrt_sqrt%.*}\n            local nth_decagonal_sqrt_sqrt_sqrt_dec=${nth_decagonal_sqrt_sqrt_sqrt#*.}\n            if [[ $nth_decagonal_sqrt_sqrt_sqrt_dec -eq 0 ]]; then\n                if [[ $nth_decagonal_sqrt_sqrt_sqrt_int -eq 3 ]]; then\n                    echo \"true\"\n                else\n                    echo \"false\"\n                fi\n            else\n                echo \"false\"\n            fi\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"$n is a decagonal number\"\n    else\n        echo \"$n is not a decagonal number\"\n    fi",
    "  local n=$1\n  local nth_decagonal=$(decagonal $n)\n  local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n  local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n  local nth_decagonal_sqrt_dec=${nth_decagonal_sqrt#*.}\n  if [[ $nth_decagonal_sqrt_dec == 0 ]]; then\n    local nth_decagonal_sqrt_plus_1=$((nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_plus_1_sq=$((nth_decagonal_sqrt_plus_1 * nth_decagonal_sqrt_plus_1))\n    local nth_decagonal_sqrt_plus_1_sq_minus_1=$((nth_decagonal_sqrt_plus_1_sq - 1))\n    local nth_decagonal_sqrt_plus_1_sq_minus_1_div_10=$((nth_decagonal_sqrt_plus_1_sq_minus_1 / 10))\n    if [[ $nth_decagonal_sqrt_plus_1_sq_minus_1_div_10 == $n ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    local nth_decagonal_int=$(echo \"$nth_decagonal/2\" | bc)\n    local nth_decagonal_dec=$(echo \"$nth_decagonal-$nth_decagonal_int*2\" | bc)\n    if [ \"$nth_decagonal_dec\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(((sqrt(1 + 4 * 2 * num) + 1) / 2))\n    local decagonal=$((n * (3 * n - 1) / 2))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local n_decagonal=$(decagonal $n)\n    local n_decagonal_sqrt=$(echo \"sqrt($n_decagonal)\" | bc)\n    local n_decagonal_sqrt_int=$(echo \"($n_decagonal_sqrt/1)\" | bc)\n    if [ $n_decagonal_sqrt_int -eq $n_decagonal_sqrt ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    if [ $(echo \"$n%4\" | bc) -eq 3 ]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    if [ \"$n\" == \"$n_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local d=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    local r=$(echo \"$d % 4\" | bc)\n    if [ $r -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)-1)/2 ))\n    local decagonal=$(( n*(3*n-2)/2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal == $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $n*(3*$n-1)/2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(8*$num+1)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    if [[ $n_int == $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo $n\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n  local decagonal=$(( n * (3 * n - 1) / 2 ))\n  if [[ $decagonal -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n  local decagonal=$(( n * (3 * n - 1) / 2 ))\n  if [[ $decagonal -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    echo $nth_decagonal",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local n_decagonal=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    local n_decagonal_int=$(echo \"$n_decagonal\" | cut -d. -f1)\n    if [ \"$n_decagonal\" == \"$n_decagonal_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [[ $n_dec == 0 ]]; then\n        if [[ $n_int == $n ]]; then\n            echo \"$num is decagonal\"\n        else\n            echo \"$num is not decagonal\"\n        fi\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2 + 4*$n + 1) + 1)/2\" | bc)\n    if [ $n -eq $nth_decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo $n\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(nth_decagonal $n)\n    local nth_decagonal_sqr=$((nth_decagonal * nth_decagonal))\n    local nth_decagonal_sqr_str=$(echo $nth_decagonal_sqr | sed 's/^\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)$/\\1\\6\\2\\7\\3\\8\\4\\9\\5\\10/')\n    local nth_decagonal_sqr_str_num=$(echo $nth_decagonal_sqr_str | sed 's/^\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)\\(.\\{1\\}\\)$/\\1\\2\\3\\4\\5\\6\\7\\8\\9\\10/')\n    local nth_decagonal_sqr_str_num_dec=$((10#$nth_decagonal_sqr_str_num))\n    if [ $nth_decagonal_sqr_str_num_dec -eq $nth_decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( $n * (3 * $n - 1) / 2 == $num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local d=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    if [[ $((d % 2)) -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" = \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    if [[ \"$n\" == \"$n_int\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d. -f2)\n    local n_sqrt_dec_len=${#n_sqrt_dec}\n    local n_sqrt_dec_last_digit=${n_sqrt_dec:$n_sqrt_dec_len-1:1}\n    if [[ $n_sqrt_dec_last_digit == \"0\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) + 1) / 2 ))\n    if (( $n * (3 * $n - 2) == $num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    local nth_dec=$(echo \"$nth/2\" | bc)\n    if [ $(echo \"$nth_dec%1\" | bc) -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4 * $num + 1) + 1\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [[ $n_decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)-1)/2 ))\n    local decagonal=$(( n*(3*n-2)/2 ))\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local decagonal=$(echo \"sqrt(4*$num+1)\" | bc)\n    local decagonal_int=$(echo \"$decagonal\" | cut -d. -f1)\n    if [ \"$decagonal\" == \"$decagonal_int\" ]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | awk '{print int($1)}')\n    local nth_decagonal_sqrt_int_sqr=$(echo \"$nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int\" | bc)\n    if [ \"$nth_decagonal_sqrt_int_sqr\" -eq \"$nth_decagonal\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local decagonal=$(echo \"scale=0; $num * (3 * $num - 1) / 2\" | bc)\n    if [[ $num -eq $decagonal ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n  local d=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n  if [[ $d -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $n*(3*$n - 1)/2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    echo $nth_decagonal",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d. -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d. -f2)\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_int_sqr=$((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int))\n        if [ \"$nth_decagonal_sqrt_int_sqr\" == \"$nth_decagonal\" ]; then\n            echo 1\n        else\n            echo 0\n        fi\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | awk '{print int($1)}')\n    local nth_decagonal_sqrt_int_sq=$(echo \"$nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int\" | bc)\n    if [ $nth_decagonal_sqrt_int_sq -eq $nth_decagonal ]; then\n        echo \"yes\"\n    else\n        echo \"no\"\n    fi",
    "    local n=$1\n    local m=$(echo \"sqrt(4*$n+1)\" | bc)\n    local r=$(echo \"$m % 1\" | bc)\n    if [ \"$r\" == \"0\" ]; then\n        local m=$(echo \"$m + 1\" | bc)\n        local r=$(echo \"$m % 4\" | bc)\n        if [ \"$r\" == \"0\" ]; then\n            echo \"1\"\n        else\n            echo \"0\"\n        fi\n    else\n        echo \"0\"\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n  local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n  if [[ $decagonal -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(nth_decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_sqr=$((nth_decagonal_sqrt_int * nth_decagonal_sqrt_int))\n    local nth_decagonal_sqrt_int_sqr_plus_nth_decagonal_sqrt_int=$((nth_decagonal_sqrt_int_sqr + nth_decagonal_sqrt_int))\n    local nth_decagonal_sqrt_int_sqr_plus_nth_decagonal_sqrt_int_div_2=$((nth_decagonal_sqrt_int_sqr_plus_nth_decagonal_sqrt_int / 2))\n    if [[ $nth_decagonal -eq $nth_decagonal_sqrt_int_sqr_plus_nth_decagonal_sqrt_int_div_2 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]] && return 0 || return 1",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=\"$1\"\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ \"$decagonal\" -eq \"$num\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(1 + 4 * 2 * $n) + 1) / 2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    local nth_dec=$(echo \"$nth/2\" | bc)\n    local nth_dec_int=$(echo \"$nth_dec % 1\" | bc)\n    if [[ $nth_dec_int == 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( (n * ((3 * n) - 1)) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)-1)/2 ))\n    if (( n*(3*n-2) == num )); then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    [[ $decagonal -eq $num ]] && echo \"$num is decagonal\" || echo \"$num is not decagonal\"",
    "\tlocal num=$1\n\tlocal n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n\tlocal n_dec=$(echo \"($n*(3*$n-1))/2\" | bc)\n\tif [ $n_dec -eq $num ]; then\n\t\techo 1\n\telse\n\t\techo 0\n\tfi",
    "    local num=$1\n    local n=$(((sqrt(1 + 4 * 2 * num) - 1) / 2))\n    (( n * (3 * n - 1) / 2 == num ))",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ \"$decagonal\" -eq \"$num\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_1=$((nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_int_plus_1_sqr=$((nth_decagonal_sqrt_int_plus_1 * nth_decagonal_sqrt_int_plus_1))\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal=$((nth_decagonal_sqrt_int_plus_1_sqr - nth_decagonal))\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2=$((nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal / 2))\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2_sqrt=$(echo \"sqrt($nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2)\" | bc)\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2_sqrt_int=${nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2_sqrt%.*}\n    if [[ $nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2_sqrt_int -eq $nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_2_sqrt ]]; then\n        echo 1\n    else\n        echo 0\n",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n + 4*$n + 1) + 1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local n=$(echo \"sqrt(2*$num/3+1/36)\" | bc -l)\n  local n_int=$(echo \"$n\" | cut -d. -f1)\n  local n_dec=$(echo \"$n\" | cut -d. -f2)\n  if [ \"$n_dec\" == \"0\" ]; then\n    echo \"$n_int\"\n  else\n    echo \"0\"\n  fi",
    "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    return 0\n  else\n    return 1\n  fi",
    "  local n=$1\n  local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n  if [ $nth_decagonal -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    [[ $decagonal -eq $num ]] && return 0 || return 1",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num) - 1) / 2 ))\n    local decagonal=$(( n*(3*n-2) ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_triangular=$(triangular $n)\n    local nth_pentagonal=$(pentagonal $n)\n    local nth_hexagonal=$(hexagonal $n)\n    local nth_heptagonal=$(heptagonal $n)\n    local nth_octagonal=$(octagonal $n)\n    if [[ $nth_decagonal -eq $nth_triangular || \\\n          $nth_decagonal -eq $nth_pentagonal || \\\n          $nth_decagonal -eq $nth_hexagonal || \\\n          $nth_decagonal -eq $nth_heptagonal || \\\n          $nth_decagonal -eq $nth_octagonal ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num + 1)\" | bc)\n    local n_dec=$(echo \"$n/2\" | bc)\n    local n_dec_sq=$(echo \"$n_dec*$n_dec\" | bc)\n    local n_dec_sq_10=$(echo \"$n_dec_sq*10\" | bc)\n    local n_dec_sq_10_1=$(echo \"$n_dec_sq_10+1\" | bc)\n    if [ \"$n_dec_sq_10_1\" -eq \"$num\" ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0;$n*(3*$n-2)/2\" | bc)\n    local nth_decagonal_sqrt=$(echo \"scale=0;sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"scale=0;$nth_decagonal_sqrt/1\" | bc)\n    if [ \"$nth_decagonal_sqrt_int\" == \"$nth_decagonal_sqrt\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local d=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    local r=$(echo \"$d % 4\" | bc)\n    if [ $r -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)-1)/2 ))\n    local decagonal=$(( n*(3*n-2)/2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    local decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_dec=$(echo \"$n_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_int_sqrt=$(echo \"sqrt($n_sqrt_int)\" | bc)\n    local n_sqrt_int_sqrt_int=$(echo \"$n_sqrt_int_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_int_sqrt_dec=$(echo \"$n_sqrt_int_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_int_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    local n_sqrt_int_sqrt_int_sqrt=$(echo \"sqrt($n_sqrt_int_sqrt_int)\" | bc)\n    local n_sqrt_int_sqrt_int_sqrt_int=$(echo \"$n_sqrt_int_sqrt_int_sqrt\" | cut -d '.' -f 1)\n    local n_sqrt_int_sqrt_int_sqrt_dec=$(echo \"$n_sqrt_int_sqrt_int_sqrt\" | cut -d '.' -f 2)\n    if [ \"$n_sqrt_int_sqrt_int_sqrt_dec\" != \"0\" ]; then\n        return 1\n    fi\n    if [ \"$n_sqrt_int_sqrt_int_sqrt_int\" != \"10\" ]; then\n        return 1\n    fi\n    return 0",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n\n    if [ \"$nth_decagonal_sqrt_int\" -eq \"$nth_decagonal_sqrt\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"$n * (3 * $n - 1) / 2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)-1)/2 ))\n    local decagonal=$(( n*(3*n-2)/2 ))\n    if [[ $decagonal -eq $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d . -f 1)\n    if [ \"$n\" == \"$n_int\" ]; then\n        echo \"$n\"\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+24*num)+1)/6 ))\n    local decagonal=$(( n*(3*n-2) ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"$n * (3 * $n - 1) / 2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [[ \"$n_dec\" == \"0\" ]]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num / 1\" | bc)\n    local sqrt_num_dec=$(echo \"$sqrt_num - $sqrt_num_int\" | bc)\n    if [[ $sqrt_num_dec == 0 ]]; then\n        local sqrt_num_int_plus_1=$(echo \"$sqrt_num_int + 1\" | bc)\n        local sqrt_num_int_plus_1_dec=$(echo \"$sqrt_num_int_plus_1 / 3\" | bc)\n        local sqrt_num_int_plus_1_dec_int=$(echo \"$sqrt_num_int_plus_1_dec / 1\" | bc)\n        local sqrt_num_int_plus_1_dec_dec=$(echo \"$sqrt_num_int_plus_1_dec - $sqrt_num_int_plus_1_dec_int\" | bc)\n        if [[ $sqrt_num_int_plus_1_dec_dec == 0 ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(1+4*2*$n)/2\" | bc)\n    local nth_int=$(echo \"$nth\" | cut -d. -f1)\n    if [ \"$nth\" == \"$nth_int\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_dec=$(echo \"($n_sqrt + 1) / 2\" | bc)\n    local n_dec_sq=$(echo \"$n_dec * $n_dec\" | bc)\n    local n_dec_sq_dec=$(echo \"$n_dec_sq * 10\" | bc)\n    local n_dec_sq_dec_dec=$(echo \"$n_dec_sq_dec + $n_dec\" | bc)\n    local n_dec_sq_dec_dec_dec=$(echo \"$n_dec_sq_dec_dec * 2\" | bc)\n    local n_dec_sq_dec_dec_dec_dec=$(echo \"$n_dec_sq_dec_dec_dec - 1\" | bc)\n    local n_dec_sq_dec_dec_dec_dec_dec=$(echo \"$n_dec_sq_dec_dec_dec_dec / 3\" | bc)\n    if [ \"$n\" -eq \"$n_dec_sq_dec_dec_dec_dec_dec\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  local n=$1\n  local nth_decagonal=$((n * (3 * n - 2)))\n  local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n  local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d '.' -f 1)\n  local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d '.' -f 2)\n  if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n    local nth_decagonal_sqrt_int_plus_one=$((nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_int_plus_one_sqrt=$(echo \"sqrt($nth_decagonal_sqrt_int_plus_one)\" | bc)\n    local nth_decagonal_sqrt_int_plus_one_sqrt_int=$(echo \"$nth_decagonal_sqrt_int_plus_one_sqrt\" | cut -d '.' -f 1)\n    local nth_decagonal_sqrt_int_plus_one_sqrt_dec=$(echo \"$nth_decagonal_sqrt_int_plus_one_sqrt\" | cut -d '.' -f 2)\n    if [ \"$nth_decagonal_sqrt_int_plus_one_sqrt_dec\" == \"0\" ]; then\n      echo \"$nth_decagonal_sqrt_int_plus_one_sqrt_int\"\n    fi\n  fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    if [ \"$n\" -eq \"$nth_decagonal\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n\n    if [ $nth_decagonal_sqrt_int -eq $nth_decagonal_sqrt ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $num -eq $n_decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    if [[ $(echo \"$n % 4\" | bc) -eq 3 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ \"$n_decagonal\" -eq \"$num\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4*2*num) + 1) / 2 ))\n    local decagonal=$(( n*(3*n-2) ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    local nth_decagonal_int=${nth_decagonal%.*}\n    if [ $nth_decagonal_int -eq $nth_decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $n -eq $nth_decagonal ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(((sqrt(1+4*2*num)-1)/2))\n    local decagonal=$((n*(3*n-2)))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local r=$(echo \"sqrt(4*$n+1)\" | bc)\n    local r_int=$(echo \"$r/1\" | bc)\n    if [ \"$r\" = \"$r_int\" ]; then\n        echo \"$n is a decagonal number\"\n    else\n        echo \"$n is not a decagonal number\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    if [[ $(echo \"$n*(3*$n-1)/2\" | bc) -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2 + 4*$n + 1) + 1)/2\" | bc)\n    if [ \"$n\" -eq \"$nth_decagonal\" ]; then\n        return 0\n    else\n        return 1\n    fi"
  ]
}
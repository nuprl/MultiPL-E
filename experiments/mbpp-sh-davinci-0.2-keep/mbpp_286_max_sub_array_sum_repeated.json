{
  "name": "mbpp_286_max_sub_array_sum_repeated",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\n#\n# $1 is a space-separated list\n# $2 is an integer\n# $3 is an integer\nmax_sub_array_sum_repeated() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_sub_array_sum_repeated \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 20 -30 -1\" \"4\" \"3\") = \"30\" ]]\n    [[ $(candidate \"-1 10 20\" \"3\" \"2\") = \"59\" ]]\n    [[ $(candidate \"-1 -2 -3\" \"3\" \"3\") = \"-1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local max_wrap=0\n    local i=0\n    local j=0\n    local l=0\n\n    for ((i=0; i<n; i++)); do\n        curr_sum+=${arr[$i]}\n    done\n    max_wrap=$curr_sum\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n+i; j++)); do\n            l=$((j%n))\n            curr_sum+=${arr[$l]}\n            if [[ $curr_sum -gt $max_sum ]]; then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    if [[ $k -gt 2 ]]; then\n        max_wrap=$((max_wrap*(k-2)))\n        max_sum=$((max_sum+max_wrap))\n    fi\n\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local max_sum_so_far=0\n  local max_sum_ending_here=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<n; i++)); do\n    max_sum_ending_here=$((max_sum_ending_here + arr[i]))\n    if ((max_sum_ending_here < 0)); then\n      max_sum_ending_here=0\n    fi\n    if ((max_sum_so_far < max_sum_ending_here)); then\n      max_sum_so_far=$max_sum_ending_here\n    fi\n  done\n\n  max_sum=$max_sum_so_far\n\n  for ((i=0; i<n; i++)); do\n    max_sum_ending_here=$((max_sum_ending_here + arr[i]))\n    if ((max_sum_ending_here < 0)); then\n      max_sum_ending_here=0\n    fi\n    if ((max_sum_so_far < max_sum_ending_here)); then\n      max_sum_so_far=$max_sum_ending_here\n    fi\n  done\n\n  max_sum=$((max_sum + max_sum_so_far * (k - 2)))\n\n  for ((i=0; i<n; i++)); do\n    max_sum_ending_here=$((max_sum_ending_here + arr[i]))\n    if ((max_sum_ending_here < 0)); then\n      max_sum_ending_here=0\n    fi\n    if ((max_sum_so_far < max_sum_ending_here)); then\n      max_sum_so_far=$max_sum_ending_here\n    fi\n  done\n\n  max_sum=$((max_sum + max_sum_so_far))\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local max_i=0\n  local max_j=0\n  local max_k_i=0\n  local max_k_j=0\n  local sum_i=0\n  local sum_j=0\n  local sum_k_i=0\n  local sum_k_j=0\n  local sum_max_i=0\n  local sum_max_j=0\n  local sum_max_k_i=0\n  local sum_max_k_j=0\n  local sum_curr_i=0\n  local sum_curr_j=0\n  local sum_curr_k_i=0\n  local sum_curr_k_j=0\n  local sum_curr_max_i=0\n  local sum_curr_max_j=0\n  local sum_curr_max_k_i=0\n  local sum_curr_max_k_j=0\n  local sum_curr_max_k_j_i=0\n  local sum_curr_max_k_j_j=0\n  local sum_curr_max_k_j_k_i=0\n  local sum_curr_max_k_j_k_j=0\n  local sum_curr_max_k_j_max_i=0\n  local sum_curr_max_k_j_max_j=0\n  local sum_curr_max_k_j_max_k_i=0\n  local sum_curr_max_k_j_max_k_j=0\n  local sum_curr_max_k_j_sum_i=0\n  local sum_curr_max_k_j_sum_j=0\n  local sum_curr_max_k_j_sum_k_i=0\n  local sum_curr_max_k_j_sum_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_sum=0\n    local k_curr_sum=0\n    local k_max_sum=0\n\n    # Find the max sum of the array\n    while (( i < n )); do\n        curr_sum=$(( curr_sum + arr[i] ))\n        if (( curr_sum < 0 )); then\n            curr_sum=0\n        fi\n        if (( curr_sum > max_sum )); then\n            max_sum=$curr_sum\n        fi\n        (( i++ ))\n    done\n\n    # Find the max sum of the array repeated k times\n    if (( k > 1 )); then\n        k_sum=$(( k * (arr[0] + arr[n - 1]) ))\n        k_i=0\n        k_j=n - 1\n        while (( k_i < n )); do\n            k_curr_sum=$(( k_curr_sum + arr[k_i] ))\n            if (( k_curr_sum < 0 )); then\n                k_curr_sum=0\n            fi\n            if (( k_curr_sum > k_max_sum )); then\n                k_max_sum=$k_curr_sum\n            fi\n            (( k_i++ ))\n        done\n        while (( k_j > 0 )); do\n            k_curr_sum=$(( k_curr_sum + arr[k_j] ))\n            if (( k_curr_sum < 0 )); then\n                k_curr_sum=0\n            fi\n            if (( k_curr_sum > k_max_sum )); then\n                k_max_sum=$k_curr_sum\n            fi\n            (( k_j-- ))\n        done\n        k_max_sum=$(( k_max_sum * (k - 2) ))\n        k_max_sum=$(( k_max_sum + k_sum ))\n    fi\n\n    if",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_sum=0\n    local k_curr_sum=0\n    local k_max_sum=0\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        k_sum=$((k_sum + arr[i]))\n    done\n\n    for ((i=0; i<n; i++)); do\n        k_curr_sum=0\n        for ((j=i; j<n; j++)); do\n            k_curr_sum=$((k_curr_sum + arr[j]))\n            if ((k_curr_sum > k_max_sum)); then\n                k_max_sum=$k_curr_sum\n            fi\n        done\n    done\n\n    if ((k_max_sum > 0)); then\n        k_max_sum=$((k_max_sum * (k-2)))\n    fi\n\n    echo $((k_max_sum + max_sum))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n  local sum=0\n  local max_sum_so_far=0\n  local max_sum_ending_here=0\n  local max_left=0\n  local max_right=0\n  local left=0\n  local right=0\n  local max_left_so_far=0\n  local max_right_so_far=0\n\n  for ((i=0; i<n; i++))\n  do\n    curr_sum=$((curr_sum + arr[i]))\n  done\n\n  max_sum=$curr_sum\n\n  for ((i=1; i<k; i++))\n  do\n    for ((j=0; j<n; j++))\n    do\n      arr[n*i+j]=arr[j]\n    done\n  done\n\n  for ((i=1; i<k; i++))\n  do\n    for ((j=0; j<n; j++))\n    do\n      curr_sum=$((curr_sum + arr[n*i+j]))\n    done\n    if ((curr_sum > max_sum))\n    then\n      max_sum=$curr_sum\n    fi\n  done\n\n  for ((i=0; i<k*n; i++))\n  do\n    sum=$((sum + arr[i]))\n  done\n\n  if ((sum > 0))\n  then\n    max_sum=$((max_sum + sum*(k-2)))\n  else\n    max_sum_so_far=arr[0]\n    max_left_so_far=0\n    max_right_so_far=0\n    for ((i=0; i<k; i++))\n    do\n      max_sum_ending_here=0\n      left=0\n      right=0\n      for ((j=0; j<n; j++))\n      do\n        max_sum_ending_here=$((",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=0\n    j=$i\n    while [ $j -lt $n ]; do\n      curr_sum=$((curr_sum + arr[j]))\n      max_sum=$((max_sum > curr_sum ? max_sum : curr_sum))\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n        max_l=$i\n        max_r=$j\n      fi\n    done\n  done\n\n  for ((i=0; i<k-1; i++)); do\n    for ((j=max_l; j<=max_r; j++)); do\n      arr[n+j-max_l]=${arr[j]}\n    done\n    n=$((n + max_r - max_l + 1))\n  done\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    echo $((max_sum * k))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_curr_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n  local k_max_k=0\n  local k_max_n=0\n  local k_max_arr=()\n  local k_max_arr_sum=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum+arr[j]))\n      if ((curr_sum>max_sum)); then\n        max_sum=curr_sum\n      fi\n    done\n  done\n\n  for ((k_i=0; k_i<k; k_i++)); do\n    k_curr_sum=0\n    for ((k_j=0; k_j<n; k_j++)); do\n      k_curr_sum=$((k_curr_sum+arr[k_j]))\n      if ((k_curr_sum>k_max_sum)); then\n        k_max_sum=k_curr_sum\n        k_max_i=$k_i\n        k_max_j=$k_j\n        k_max_k=$k\n        k_max_n=$n\n        k_max_arr=(\"${arr[@]}\")\n        k_max_arr_sum=$((k_max_arr_sum+arr[k_j]))\n      fi\n    done\n  done\n\n  echo \"k_max_sum: $k_max_sum\"\n  echo \"k_max_i: $k_max_i\"\n  echo \"k_max_j: $k_max_j\"\n  echo \"k_max_k: $k_max_k\"\n  echo \"k",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i max_sum=$3\n  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_k=0\n  local -i max_l=0\n  local -i max_m=0\n  local -i max_n=0\n  local -i max_o=0\n  local -i max_p=0\n  local -i max_q=0\n  local -i max_r=0\n  local -i max_s=0\n  local -i max_t=0\n  local -i max_u=0\n  local -i max_v=0\n  local -i max_w=0\n  local -i max_x=0\n  local -i max_y=0\n  local -i max_z=0\n  local -i max_aa=0\n  local -i max_ab=0\n  local -i max_ac=0\n  local -i max_ad=0\n  local -i max_ae=0\n  local -i max_af=0\n  local -i max_ag=0\n  local -i max_ah=0\n  local -i max_ai=0\n  local -i max_aj=0\n  local -i max_ak=0\n  local -i max_al=0\n  local -i max_am=0\n  local -i max_an=0\n  local -i max_ao=0\n  local -i max_ap=0\n  local -i max_aq=0\n  local -i max_ar=0\n  local -i max_as=0\n  local -i max_at=0\n  local -i max_au=0\n  local -i max_av=0\n  local -i max_aw=0\n  local -i max_ax=0\n  local -i max_ay=0\n  local -i max_az=0\n  local -i max",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_n=0\n    local max_arr=()\n    local curr_arr=()\n    local curr_k=0\n    local curr_n=0\n    local curr_i=0\n    local curr_j=0\n    local curr_l=0\n    local curr_r=0\n    local sum_arr=()\n    local sum_arr_len=0\n    local sum_arr_i=0\n    local sum_arr_j=0\n    local sum_arr_k=0\n    local sum_arr_n=0\n    local sum_arr_l=0\n    local sum_arr_r=0\n    local sum_arr_sum=0\n    local sum_arr_max_sum=0\n    local sum_arr_max_i=0\n    local sum_arr_max_j=0\n    local sum_arr_max_k=0\n    local sum_arr_max_n=0\n    local sum_arr_max_l=0\n    local sum_arr_max_r=0\n    local sum_arr_max_arr=()\n    local sum_arr_curr_arr=()\n    local sum_arr_curr_k=0\n    local sum_arr_curr_n=0\n    local sum_arr_curr_i=0\n    local sum_arr_curr_j=0\n    local sum_arr_curr_l=0\n    local sum_arr_curr_r=0\n    local sum_arr_curr_sum=0\n    local sum_arr_curr_max_sum=0\n    local sum_arr_curr_max_i=0\n    local sum_arr_curr_max_j=",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local k_i\n\n    for ((i=0; i<n; i++))\n    do\n        curr_sum=0\n        for ((j=i; j<n; j++))\n        do\n            curr_sum=$((curr_sum+arr[j]))\n            if ((curr_sum>max_sum))\n            then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++))\n    do\n        curr_sum=0\n        for ((k_i=1; k_i<k; k_i++))\n        do\n            for ((j=i; j<n; j++))\n            do\n                curr_sum=$((curr_sum+arr[j]))\n                if ((curr_sum>max_sum))\n                then\n                    max_sum=$curr_sum\n                fi\n            done\n        done\n    done\n\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_i_tmp=0\n  local max_j_tmp=0\n  local curr_i=0\n  local curr_j=0\n  local curr_i_tmp=0\n  local curr_j_tmp=0\n  local sum_arr=()\n  local sum_arr_tmp=()\n  local sum_arr_size=0\n  local sum_arr_tmp_size=0\n  local sum_arr_size_tmp=0\n  local sum_arr_tmp_size_tmp=0\n  local sum_arr_size_max=0\n  local sum_arr_tmp_size_max=0\n  local sum_arr_size_max_tmp=0\n  local sum_arr_tmp_size_max_tmp=0\n  local sum_arr_size_max_tmp_tmp=0\n  local sum_arr_tmp_size_max_tmp_tmp=0\n  local max_sum_tmp=0\n  local curr_sum_tmp=0\n  local max_sum_tmp_tmp=0\n  local curr_sum_tmp_tmp=0\n  local max_sum_tmp_tmp_tmp=0\n  local curr_sum_tmp_tmp_tmp=0\n  local max_sum_tmp_tmp_tmp_tmp=0\n  local curr_sum_tmp_tmp_tmp_tmp=0\n  local max_sum_tmp_tmp_tmp_tmp_tmp=0\n  local curr_sum_tmp_tmp_tmp_tmp_tmp=0\n  local max_sum_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local curr_sum_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local max_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n  local curr_sum_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local min_sum=0\n    local max_prefix_sum=0\n    local min_prefix_sum=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n        max_val=$((max_val > arr[i] ? max_val : arr[i]))\n        min_val=$((min_val < arr[i] ? min_val : arr[i]))\n    done\n\n    if ((max_val <= 0)); then\n        echo $((max_val * k))\n        return\n    fi\n\n    max_sum=$sum\n    min_sum=$sum\n    max_prefix_sum=$sum\n    min_prefix_sum=$sum\n    total_sum=$((sum * k))\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        max_prefix_sum=$((max_prefix_sum > curr_sum ? max_prefix_sum : curr_sum))\n        min_prefix_sum=$((min_prefix_sum < curr_sum ? min_prefix_sum : curr_sum))\n        max_sum=$((max_sum > (curr_sum + (total_sum - sum)) ? max_sum : (curr_sum + (total_sum - sum))))\n        min_sum=$((min_sum < (curr_sum + (total_sum - sum)) ? min_sum : (curr_sum + (total_sum - sum))))\n    done\n\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            max_prefix_sum=$((max_prefix_sum > curr_",
    "  local -a arr\n  local -i k\n  local -i n\n  local -i i\n  local -i j\n  local -i max_so_far\n  local -i max_ending_here\n  local -i curr_sum\n  local -i max_sum\n  local -i start\n  local -i end\n  local -i s\n  local -i e\n  local -i max_start\n  local -i max_end\n  local -i max_start_idx\n  local -i max_end_idx\n  local -i max_start_idx_tmp\n  local -i max_end_idx_tmp\n  local -i max_start_idx_tmp2\n  local -i max_end_idx_tmp2\n  local -i max_start_idx_tmp3\n  local -i max_end_idx_tmp3\n  local -i max_start_idx_tmp4\n  local -i max_end_idx_tmp4\n  local -i max_start_idx_tmp5\n  local -i max_end_idx_tmp5\n  local -i max_start_idx_tmp6\n  local -i max_end_idx_tmp6\n  local -i max_start_idx_tmp7\n  local -i max_end_idx_tmp7\n  local -i max_start_idx_tmp8\n  local -i max_end_idx_tmp8\n  local -i max_start_idx_tmp9\n  local -i max_end_idx_tmp9\n  local -i max_start_idx_tmp10\n  local -i max_end_idx_tmp10\n  local -i max_start_idx_tmp11\n  local -i max_end_idx_tmp11\n  local -i max_start_idx_tmp12\n  local -i max_end_idx_tmp12\n  local -i max_start_idx_tmp13\n  local -i max_end_idx_tmp13\n  local -i max_start_idx_tmp14\n  local -i max_",
    "    local -n arr=\"$1\"\n    local k=\"$2\"\n    local n=\"$3\"\n\n    local max_so_far=0\n    local max_ending_here=0\n    local i=0\n    local j=0\n    local sum=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n\n    for ((i=0; i<n; i++)); do\n        max_ending_here=$((max_ending_here + arr[i]))\n        if ((max_ending_here < 0)); then\n            max_ending_here=0\n        fi\n        if ((max_so_far < max_ending_here)); then\n            max_so_far=\"$max_ending_here\"\n        fi\n    done\n\n    if ((sum > 0)); then\n        max_so_far=$((max_so_far * k))\n        local curr_prefix_sum=0\n        local curr_suffix_sum=0\n        for ((i=0; i<n; i++)); do\n            curr_prefix_sum=$((curr_prefix_sum + arr[i]))\n            if ((curr_prefix_sum < 0)); then\n                curr_prefix_sum=0\n            fi\n            if ((curr_prefix_sum > max_so_far)); then\n                max_so_far=\"$curr_prefix_sum\"\n            fi\n        done\n        for ((j=n-1; j>=0; j--)); do\n            curr_suffix_sum=$((curr_suffix_sum + arr[j]))\n            if ((curr_suffix_sum < 0)); then\n                curr_suffix_sum=0\n            fi\n            if ((curr_suffix_sum > max_so_far)); then\n                max_so_far=\"$curr_suffix_sum\"\n            fi\n        done\n    fi\n\n    echo \"$max_so_far\"",
    "    local -a arr=()\n    local -i k=$2\n    local -i n=$3\n    local -i i=0\n    local -i j=0\n    local -i max_sum=0\n    local -i curr_sum=0\n    local -i max_sum_so_far=0\n    local -i start=0\n    local -i end=0\n    local -i s=0\n    local -i e=0\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    for ((i=0; i<k; i++)); do\n        for ((j=0; j<n; j++)); do\n            curr_sum+=${arr[j]}\n            if ((curr_sum > max_sum_so_far)); then\n                max_sum_so_far=curr_sum\n                start=s\n                end=e\n            fi\n            if ((curr_sum < 0)); then\n                curr_sum=0\n                s=j+1\n            fi\n            e=$j\n        done\n    done\n\n    for ((i=start; i<=end; i++)); do\n        max_sum+=${arr[i]}\n    done\n\n    echo $max_sum",
    "    local -a arr=($1)\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n\n    for i in $(seq 0 $((n-1))); do\n        sum=0\n        for j in $(seq 0 $((n-1))); do\n            sum=$((sum + arr[(($i + $j) % $n)]))\n        done\n        max_sum=$((max_sum + sum))\n    done\n\n    max_sum=$((max_sum * k))\n\n    for i in $(seq 0 $((n-1))); do\n        sum=0\n        for j in $(seq 0 $((n-1))); do\n            sum=$((sum + arr[(($i + $j) % $n)]))\n        done\n        max_sum=$((max_sum + sum))\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local max_index=0\n    local min_index=0\n    local max_wrap=0\n    local min_wrap=0\n    local wrap_sum=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        if ((arr[i] > max_val)); then\n            max_val=${arr[i]}\n            max_index=$i\n        fi\n        if ((arr[i] < min_val)); then\n            min_val=${arr[i]}\n            min_index=$i\n        fi\n        total_sum=$((total_sum + arr[i]))\n    done\n\n    if ((k == 1)); then\n        for ((i=0; i<n; i++)); do\n            curr_sum=$((curr_sum + arr[i]))\n            if ((curr_sum < 0)); then\n                curr_sum=0\n            fi\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n        echo $max_sum\n        return\n    fi\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum < 0)); then\n            curr_sum=0\n        fi\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n        fi\n    done\n\n    if ((max_sum == 0)); then\n        echo $max_val\n        return\n    fi\n\n    if ((max_index == min_index)); then\n        echo $((max_sum + (k-2)*total_sum))\n        return\n    fi\n\n    for ((i=0; i<n; i++)); do\n        if ((i == max_index)); then\n            max_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n\n  while (( i < n )); do\n    curr_sum=0\n    j=i\n    while (( j < n )); do\n      curr_sum=$(( curr_sum + arr[j] ))\n      if (( curr_sum > max_sum )); then\n        max_sum=$curr_sum\n        k_i=$i\n        k_j=$j\n      fi\n      j=$(( j + 1 ))\n    done\n    i=$(( i + 1 ))\n  done\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local curr_k=0\n    local curr_i=0\n    local curr_j=0\n    local curr_l=0\n    local curr_r=0\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n                max_l=$i\n                max_r=$j\n                max_i=$curr_i\n                max_j=$curr_j\n                max_k=$curr_k\n            fi\n        done\n        if ((i == n-1)); then\n            i=0\n            curr_i=$((curr_i + 1))\n            if ((curr_i == k)); then\n                curr_i=0\n                curr_j=$((curr_j + 1))\n                if ((curr_j == k)); then\n                    curr_j=0\n                    curr_k=$((curr_k + 1))\n                fi\n            fi\n        fi\n    done\n    echo \"max_sum=$max_sum\"\n    echo \"max_l=$max_l\"\n    echo \"max_r=$max_r\"\n    echo \"max_i=$max_i\"\n    echo \"max_j=$max_j\"\n    echo \"max_k=$max_k\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n  local max_i=0\n  local max_j=0\n\n  while [[ $i -lt $n ]]; do\n    while [[ $j -lt $n ]]; do\n      curr_sum=$((curr_sum + arr[j]))\n      if [[ $curr_sum -gt $max_sum ]]; then\n        max_sum=$curr_sum\n        max_l=$l\n        max_r=$r\n        max_i=$i\n        max_j=$j\n      fi\n      j=$((j + 1))\n      r=$((r + 1))\n    done\n    i=$((i + 1))\n    l=$((l + 1))\n    r=$((r + 1))\n    j=$i\n    curr_sum=0\n  done\n\n  i=$max_i\n  j=$max_j\n  l=$max_l\n  r=$max_r\n\n  while [[ $i -lt $n ]]; do\n    while [[ $j -lt $n ]]; do\n      curr_sum=$((curr_sum + arr[j]))\n      if [[ $curr_sum -gt $max_sum ]]; then\n        max_sum=$curr_sum\n        max_l=$l\n        max_r=$r\n        max_i=$i\n        max_j=$j\n      fi\n      j=$((j + 1))\n      r=$((r + 1))\n    done\n    i=$((i + 1))\n    l=$((l + 1))\n    r=$((r + 1))\n    j=$i\n    curr_sum=0\n  done\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n\n    while [ $i -lt $n ]; do\n        curr_sum=0\n        j=$i\n        while [ $j -lt $n ]; do\n            curr_sum=$((curr_sum + arr[j]))\n            max_sum=$((max_sum > curr_sum ? max_sum : curr_sum))\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n\n    echo $((max_sum * k))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local sum_arr=()\n  local sum=0\n\n  # Find the sum of the first k elements\n  for ((i=0; i<k; i++)); do\n    sum=$((sum + arr[i]))\n  done\n  sum_arr[0]=$sum\n  max_sum=$sum\n\n  # Find the sum of the remaining elements\n  for ((i=1; i<n; i++)); do\n    sum=$((sum + arr[i+k-1] - arr[i-1]))\n    sum_arr[i]=$sum\n    if ((sum > max_sum)); then\n      max_sum=$sum\n    fi\n  done\n\n  # Find the maximum sum of the sub-arrays\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<n; j++)); do\n      curr_sum=$((sum_arr[j] - sum_arr[i]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_start=0\n  local max_end=0\n  local curr_start=0\n  local curr_end=0\n  local sum_arr=()\n  local sum_arr_len=0\n  local sum_arr_start=0\n  local sum_arr_end=0\n  local sum_arr_max=0\n  local sum_arr_max_start=0\n  local sum_arr_max_end=0\n  local sum_arr_max_len=0\n  local sum_arr_max_start_index=0\n  local sum_arr_max_end_index=0\n  local sum_arr_max_len_index=0\n  local sum_arr_max_start_index_mod=0\n  local sum_arr_max_end_index_mod=0\n  local sum_arr_max_len_index_mod=0\n  local sum_arr_max_start_index_mod_k=0\n  local sum_arr_max_end_index_mod_k=0\n  local sum_arr_max_len_index_mod_k=0\n  local sum_arr_max_start_index_mod_k_n=0\n  local sum_arr_max_end_index_mod_k_n=0\n  local sum_arr_max_len_index_mod_k_n=0\n  local sum_arr_max_start_index_mod_k_n_i=0\n  local sum_arr_max_end_index_mod_k_n_i=0\n  local sum_arr_max_len_index_mod_k_n_i=0\n  local sum_arr_max_start_index_mod_k_n_i_j=0\n  local sum_arr_max_end_index_mod_k_n_i_j=0\n  local sum_arr_max_len_index_mod_k_n_i_j=0\n  local",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_sum_so_far=0\n    local max_ending_here=0\n    local min_sum_so_far=0\n    local min_ending_here=0\n    local max_sum_wrap=0\n    local min_sum_wrap=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        total_sum=$((total_sum + arr[i]))\n        max_ending_here=$((max_ending_here + arr[i]))\n        if ((max_ending_here > max_sum_so_far)); then\n            max_sum_so_far=$max_ending_here\n        fi\n        if ((max_ending_here < 0)); then\n            max_ending_here=0\n        fi\n        min_ending_here=$((min_ending_here + arr[i]))\n        if ((min_ending_here < min_sum_so_far)); then\n            min_sum_so_far=$min_ending_here\n        fi\n        if ((min_ending_here > 0)); then\n            min_ending_here=0\n        fi\n    done\n\n    max_sum_wrap=$((total_sum - min_sum_so_far))\n    min_sum_wrap=$((total_sum - max_sum_so_far))\n\n    if ((k == 1)); then\n        echo $max_sum_so_far\n    elif ((max_sum_wrap > 0)); then\n        echo $(((k-2)*total_sum + max_sum_wrap))\n    else\n        echo $(((k-2)*total_sum + max_sum_so_far))\n    fi",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local max_index=0\n    local min_index=0\n    local max_wrap=0\n    local min_wrap=0\n    local wrap_sum=0\n    local non_wrap_sum=0\n\n    for ((i=0; i<n; i++)); do\n        sum+=arr[i]\n        if ((arr[i] > max_val)); then\n            max_val=arr[i]\n            max_index=$i\n        fi\n        if ((arr[i] < min_val)); then\n            min_val=arr[i]\n            min_index=$i\n        fi\n    done\n\n    max_wrap=sum-min_val\n    min_wrap=sum-max_val\n\n    if ((k == 1)); then\n        max_sum=$sum\n    elif ((k == 2)); then\n        max_sum=$max_wrap\n    else\n        if ((max_index > min_index)); then\n            max_wrap=max_wrap-min_val\n            min_wrap=min_wrap+min_val\n        else\n            max_wrap=max_wrap+max_val\n            min_wrap=min_wrap-max_val\n        fi\n\n        if ((max_wrap > min_wrap)); then\n            max_sum=$max_wrap\n        else\n            max_sum=$min_wrap\n        fi\n    fi\n\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local sum=0\n  local max_left=0\n  local max_right=0\n  local left_sum=0\n  local right_sum=0\n  local total_sum=0\n\n  for ((i=0; i<n; i++)); do\n    total_sum=$((total_sum + arr[i]))\n  done\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=$((curr_sum + arr[i]))\n    if ((curr_sum > max_sum)); then\n      max_sum=$curr_sum\n      max_left=$l\n      max_right=$i\n    fi\n    if ((curr_sum < 0)); then\n      curr_sum=0\n      l=$((i+1))\n    fi\n  done\n\n  left_sum=$max_sum\n  curr_sum=0\n  r=$((n-1))\n  for ((i=n-1; i>=0; i--)); do\n    curr_sum=$((curr_sum + arr[i]))\n    if ((curr_sum > left_sum)); then\n      left_sum=$curr_sum\n      max_left=$i\n      max_right=$r\n    fi\n    if ((curr_sum < 0)); then\n      curr_sum=0\n      r=$((i-1))\n    fi\n  done\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum > max_sum)); then\n      max_sum=$sum\n      max_left=$l\n      max_right=$i\n    fi\n    if ((sum < 0)); then\n      sum=0\n      l=$((i+1))\n    fi\n  done\n\n  if ((k == 1)); then\n    echo $max_sum\n    return\n  fi\n\n  sum=0\n ",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local curr_k=0\n  local curr_i=0\n  local curr_j=0\n  local sum=0\n  local sum_k=0\n  local sum_i=0\n  local sum_j=0\n  local sum_k_i=0\n  local sum_k_j=0\n  local sum_k_i_j=0\n  local sum_k_i_j_1=0\n  local sum_k_i_j_2=0\n  local sum_k_i_j_3=0\n  local sum_k_i_j_4=0\n  local sum_k_i_j_5=0\n  local sum_k_i_j_6=0\n  local sum_k_i_j_7=0\n  local sum_k_i_j_8=0\n  local sum_k_i_j_9=0\n  local sum_k_i_j_10=0\n  local sum_k_i_j_11=0\n  local sum_k_i_j_12=0\n  local sum_k_i_j_13=0\n  local sum_k_i_j_14=0\n  local sum_k_i_j_15=0\n  local sum_k_i_j_16=0\n  local sum_k_i_j_17=0\n  local sum_k_i_j_18=0\n  local sum_k_i_j_19=0\n  local sum_k_i_j_20=0\n  local sum_k_i_j_21=0\n  local sum_k_i_j_22=0\n  local sum_k_i_j_23=0\n  local sum_k_i_j_24=0\n  local sum_k_i_j_25=0",
    "    local -a arr=(\"$@\")\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\n    for ((i=0; i<k; i++)); do\n        curr_sum=0\n        for ((j=0; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if [[ $curr_sum -gt $max_sum ]]; then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n\n    local max_so_far=0\n    local max_ending_here=0\n    local max_sub_array_sum=0\n    local i=0\n    local j=0\n\n    while [ $i -lt $k ]; do\n        j=0\n        while [ $j -lt $n ]; do\n            max_ending_here=$((max_ending_here + arr[j]))\n            if [ $max_ending_here -lt 0 ]; then\n                max_ending_here=0\n            fi\n            if [ $max_so_far -lt $max_ending_here ]; then\n                max_so_far=$max_ending_here\n            fi\n            j=$((j + 1))\n        done\n        max_sub_array_sum=$((max_sub_array_sum + max_so_far))\n        max_so_far=0\n        max_ending_here=0\n        i=$((i + 1))\n    done\n\n    echo $max_sub_array_sum",
    "  local -a arr\n  local -i k\n  local -i n\n  local -i i\n  local -i j\n  local -i max_so_far\n  local -i max_ending_here\n  local -i sum\n  local -i max_sum\n  local -i max_sum_index\n  local -i max_sum_index_end\n  local -i max_sum_index_start\n  local -i max_sum_index_end_temp\n  local -i max_sum_index_start_temp\n  local -i max_sum_index_end_temp_2\n  local -i max_sum_index_start_temp_2\n  local -i max_sum_index_end_temp_3\n  local -i max_sum_index_start_temp_3\n  local -i max_sum_index_end_temp_4\n  local -i max_sum_index_start_temp_4\n  local -i max_sum_index_end_temp_5\n  local -i max_sum_index_start_temp_5\n  local -i max_sum_index_end_temp_6\n  local -i max_sum_index_start_temp_6\n  local -i max_sum_index_end_temp_7\n  local -i max_sum_index_start_temp_7\n  local -i max_sum_index_end_temp_8\n  local -i max_sum_index_start_temp_8\n  local -i max_sum_index_end_temp_9\n  local -i max_sum_index_start_temp_9\n  local -i max_sum_index_end_temp_10\n  local -i max_sum_index_start_temp_10\n  local -i max_sum_index_end_temp_11\n  local -i max_sum_index_start_temp_11\n  local -i max_sum_index_end_temp_12\n  local -i max_sum_index_start_temp_12\n  local -i max_sum_index_end_temp_13\n  local -i max_sum_index_start_temp_13\n ",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_sum=0\n  local k_curr_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n  local k_max_k=0\n  local k_max_curr_sum=0\n  local k_max_sum=0\n  local k_max_k_i=0\n  local k_max_k_j=0\n  local k_max_k_sum=0\n  local k_max_k_curr_sum=0\n  local k_max_k_max_sum=0\n  local k_max_k_max_i=0\n  local k_max_k_max_j=0\n  local k_max_k_max_k=0\n  local k_max_k_max_curr_sum=0\n  local k_max_k_max_sum=0\n  local k_max_k_max_k_i=0\n  local k_max_k_max_k_j=0\n  local k_max_k_max_k_sum=0\n  local k_max_k_max_k_curr_sum=0\n  local k_max_k_max_k_max_sum=0\n  local k_max_k_max_k_max_i=0\n  local k_max_k_max_k_max_j=0\n  local k_max_k_max_k_max_k=0\n  local k_max_k_max_k_max_curr_sum=0\n  local k_max_k_max_k_max_sum=0\n  local k_max_k_max_k_max_k_i=0\n  local k_max_k_max_k_max_k_j=0\n  local k_max_k_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local i\n    local j\n    local sum\n    local max_sum=0\n    local max_index=0\n    local max_arr=()\n    local max_arr_index=0\n    local max_arr_sum=0\n    local max_arr_sum_index=0\n    local max_arr_sum_arr=()\n    local max_arr_sum_arr_index=0\n    local max_arr_sum_arr_sum=0\n    local max_arr_sum_arr_sum_index=0\n    local max_arr_sum_arr_sum_arr=()\n    local max_arr_sum_arr_sum_arr_index=0\n    local max_arr_sum_arr_sum_arr_sum=0\n    local max_arr_sum_arr_sum_arr_sum_index=0\n    local max_arr_sum_arr_sum_arr_sum_arr=()\n    local max_arr_sum_arr_sum_arr_sum_arr_index=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_index=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr=()\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr_index=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_index=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr=()\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_index=0\n    local max_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr",
    "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i k=$2\n    local -i max_sum=$3\n    local -i i=0\n    local -i j=0\n    local -i curr_sum=0\n    local -i max_so_far=0\n    local -i max_ending_here=0\n    local -i start=0\n    local -i end=0\n    local -i s=0\n\n    for ((i=0; i<n*k; i++))\n    do\n        curr_sum=${arr[i%n]}\n        max_so_far=$((max_so_far + curr_sum))\n        if ((max_so_far < 0))\n        then\n            max_so_far=0\n            s=$((i+1))\n        fi\n        if ((max_so_far > max_ending_here))\n        then\n            max_ending_here=$max_so_far\n            start=$s\n            end=$((i))\n        fi\n    done\n    if ((max_ending_here > max_sum))\n    then\n        echo $max_ending_here\n    else\n        echo $max_sum\n    fi",
    "  local -a arr=()\n  local -i k=$2\n  local -i max_sum=$3\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n  local -i max_sum_so_far=0\n  local -i max_sum_ending_here=0\n  local -i n=0\n  local -i len=0\n  local -i max_len=0\n  local -i max_len_so_far=0\n  local -i max_len_ending_here=0\n  local -i max_len_start=0\n  local -i max_len_end=0\n  local -i max_len_start_so_far=0\n  local -i max_len_end_so_far=0\n  local -i max_len_start_ending_here=0\n  local -i max_len_end_ending_here=0\n  local -i max_len_start_temp=0\n  local -i max_len_end_temp=0\n  local -i max_len_start_temp_so_far=0\n  local -i max_len_end_temp_so_far=0\n  local -i max_len_start_temp_ending_here=0\n  local -i max_len_end_temp_ending_here=0\n  local -i max_len_start_temp_so_far_ending_here=0\n  local -i max_len_end_temp_so_far_ending_here=0\n  local -i max_len_start_temp_so_far_ending_here_temp=0\n  local -i max_len_end_temp_so_far_ending_here_temp=0\n  local -i max_len_start_temp_so_far_ending_here_temp_so_far=0\n  local -i max_len_end_temp_so_far_ending_here_temp_so_far=0\n  local -i max_len_start_temp_so_far_ending_here_temp_so_far_ending_here=0\n  local -i max_len_end_temp",
    "  local -a arr=($1)\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n\n  for ((i=0; i<n; i++))\n  do\n    sum=0\n    for ((j=i; j<n; j++))\n    do\n      sum=$((sum + arr[j]))\n      if ((sum > max_sum))\n      then\n        max_sum=$sum\n        max_l=$i\n        max_r=$j\n      fi\n    done\n  done\n\n  for ((i=0; i<k-1; i++))\n  do\n    l=$(((n - max_l + max_r) % n))\n    r=$(((max_r - max_l + n) % n))\n    sum=0\n    for ((j=l; j!=r; j=(j+1)%n))\n    do\n      sum=$((sum + arr[j]))\n      if ((sum > max_sum))\n      then\n        max_sum=$sum\n        max_l=$l\n        max_r=$r\n      fi\n    done\n  done\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_i_j=0\n    local k_i_j_1=0\n    local k_i_j_2=0\n    local k_i_j_3=0\n    local k_i_j_4=0\n    local k_i_j_5=0\n    local k_i_j_6=0\n    local k_i_j_7=0\n    local k_i_j_8=0\n    local k_i_j_9=0\n    local k_i_j_10=0\n    local k_i_j_11=0\n    local k_i_j_12=0\n    local k_i_j_13=0\n    local k_i_j_14=0\n    local k_i_j_15=0\n    local k_i_j_16=0\n    local k_i_j_17=0\n    local k_i_j_18=0\n    local k_i_j_19=0\n    local k_i_j_20=0\n    local k_i_j_21=0\n    local k_i_j_22=0\n    local k_i_j_23=0\n    local k_i_j_24=0\n    local k_i_j_25=0\n    local k_i_j_26=0\n    local k_i_j_27=0\n    local k_i_j_28=0\n    local k_i_j_29=0\n    local k_i_j_30=0\n    local k_i_j_31=0\n    local k_i_j_32=0\n    local k_i_j_33=0\n    local k_i_j_34=0\n    local k_i_j_35=0\n    local k_i_j_36=0\n    local k_",
    "    local -a array=($1)\n    local k=$2\n    local n=$3\n\n    local max_so_far=0\n    local max_ending_here=0\n    local i=0\n    local j=0\n    local sum=0\n\n    while [ $i -lt $n ]; do\n        sum=$(($sum + ${array[$i]}))\n        i=$(($i + 1))\n    done\n\n    max_so_far=$sum\n\n    while [ $j -lt $n ]; do\n        max_ending_here=$(($max_ending_here + ${array[$j]}))\n        max_so_far=$(($max_so_far + ${array[$j]}))\n        j=$(($j + 1))\n    done\n\n    max_so_far=$(($max_so_far + $max_ending_here * ($k - 2)))\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n\n  for ((i=0; i < n; i++))\n  do\n    sum=0\n    for ((j=i; j < n; j++))\n    do\n      sum=$((sum + arr[j]))\n      if ((sum > max_sum))\n      then\n        max_sum=$sum\n      fi\n    done\n  done\n\n  echo $((max_sum * k))",
    "    local -a arr=(\"$@\")\n    local -i k=$2\n    local -i n=$3\n    local -i max_so_far=0\n    local -i max_ending_here=0\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i max_sub_array_sum=0\n    local -i max_sub_array_sum_repeated=0\n    local -i max_sub_array_sum_repeated_temp=0\n    local -i max_sub_array_sum_repeated_temp_2=0\n    local -i max_sub_array_sum_repeated_temp_3=0\n    local -i max_sub_array_sum_repeated_temp_4=0\n\n    for ((i=0; i<n; i++))\n    do\n        sum=$((sum+arr[i]))\n    done\n\n    max_sub_array_sum=$((sum))\n\n    for ((i=1; i<k; i++))\n    do\n        max_sub_array_sum_repeated_temp=0\n        for ((j=0; j<n; j++))\n        do\n            max_sub_array_sum_repeated_temp=$((max_sub_array_sum_repeated_temp+arr[j]))\n        done\n        max_sub_array_sum_repeated_temp_2=$((max_sub_array_sum_repeated_temp+max_sub_array_sum))\n        max_sub_array_sum_repeated_temp_3=$((max_sub_array_sum_repeated_temp_2-sum))\n        max_sub_array_sum_repeated_temp_4=$((max_sub_array_sum_repeated_temp_3+max_sub_array_sum))\n        max_sub_array_sum=$((max_sub_array_sum_repeated_temp_4))\n    done\n\n    max_sub_array_sum_repeated=$((max_sub_array_sum))\n\n    echo $max_sub_array_sum_repeated",
    "  local -a arr=()\n  local -i k=$2\n  local -i max_sum=$3\n  local -i max_sum_so_far=0\n  local -i max_ending_here=0\n  local -i i=0\n  local -i j=0\n  local -i n=0\n  local -i sum=0\n\n  # read the array\n  IFS=' ' read -r -a arr <<< \"$1\"\n  n=${#arr[@]}\n\n  # find the max sum of the original array\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n  done\n\n  # find the max sum of the repeated array\n  for ((i=0; i<k; i++)); do\n    for ((j=0; j<n; j++)); do\n      max_ending_here=$((max_ending_here + arr[j]))\n      if ((max_ending_here < 0)); then\n        max_ending_here=0\n      fi\n      if ((max_ending_here > max_sum_so_far)); then\n        max_sum_so_far=$max_ending_here\n      fi\n    done\n  done\n\n  # return the max sum of the repeated array\n  if ((max_sum_so_far > max_sum)); then\n    echo $max_sum_so_far\n  else\n    echo $max_sum\n  fi",
    "    local -a arr\n    local -i k\n    local -i n\n    local -i max_sum\n    local -i max_so_far\n    local -i i\n    local -i j\n    local -i sum\n    local -i sum_so_far\n    local -i max_left\n    local -i max_right\n    local -i left_index\n    local -i right_index\n    local -i left_index_so_far\n    local -i right_index_so_far\n    local -i temp\n    local -i temp_left\n    local -i temp_right\n    local -i temp_sum\n    local -i temp_left_index\n    local -i temp_right_index\n    local -i temp_sum_so_far\n    local -i temp_left_index_so_far\n    local -i temp_right_index_so_far\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=$2\n    n=${#arr[@]}\n    max_sum=0\n    max_so_far=0\n    i=0\n    j=0\n    sum=0\n    sum_so_far=0\n    max_left=0\n    max_right=0\n    left_index=0\n    right_index=0\n    left_index_so_far=0\n    right_index_so_far=0\n    temp=0\n    temp_left=0\n    temp_right=0\n    temp_sum=0\n    temp_left_index=0\n    temp_right_index=0\n    temp_sum_so_far=0\n    temp_left_index_so_far=0\n    temp_right_index_so_far=0\n\n    for ((i=0; i<n; i++))\n    do\n        sum=0\n        sum_so_far=0\n        left_index=i\n        right_index=i\n        left_index_so_far=i\n        right_index_so_far=i\n        for ((j=0; j<k; j++))\n        do\n            sum=sum+arr[i]\n            sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_curr_sum=0\n    local k_max_sum=0\n\n    while [ $i -lt $n ]; do\n        curr_sum=$((curr_sum + arr[$i]))\n        if [ $curr_sum -lt 0 ]; then\n            curr_sum=0\n            j=$((i + 1))\n        fi\n        if [ $curr_sum -gt $max_sum ]; then\n            max_sum=$curr_sum\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $k -eq 1 ]; then\n        echo $max_sum\n        return\n    fi\n\n    k_curr_sum=$max_sum\n    k_max_sum=$max_sum\n    k_i=$((n - 1))\n    k_j=0\n\n    while [ $k_i -ge 0 ]; do\n        k_curr_sum=$((k_curr_sum + arr[$k_i]))\n        if [ $k_curr_sum -lt 0 ]; then\n            k_curr_sum=0\n            k_j=$((k_i + 1))\n        fi\n        if [ $k_curr_sum -gt $k_max_sum ]; then\n            k_max_sum=$k_curr_sum\n        fi\n        k_i=$((k_i - 1))\n    done\n\n    if [ $k_max_sum -eq 0 ]; then\n        echo $max_sum\n        return\n    fi\n\n    echo $((max_sum + (k - 2) * k_max_sum))",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_curr_sum=0\n    local k_max_sum=0\n\n    # Find the maximum sum of a contiguous array in the original array\n    while (( i < n )); do\n        curr_sum=0\n        j=i\n        while (( j < n )); do\n            curr_sum=$(( curr_sum + arr[j] ))\n            if (( curr_sum > max_sum )); then\n                max_sum=$curr_sum\n            fi\n            (( j++ ))\n        done\n        (( i++ ))\n    done\n\n    # Find the maximum sum of a contiguous array in the modified array\n    # which is formed by repeating the given array k times\n    if (( k > 1 )); then\n        i=0\n        while (( i < n )); do\n            k_curr_sum=0\n            k_i=i\n            while (( k_i < n )); do\n                k_curr_sum=$(( k_curr_sum + arr[k_i] ))\n                if (( k_curr_sum > k_max_sum )); then\n                    k_max_sum=$k_curr_sum\n                fi\n                (( k_i++ ))\n            done\n            (( i++ ))\n        done\n        max_sum=$(( k_max_sum + (k - 2) * max_sum ))\n    fi\n\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local max_sum=$3\n  local sum=0\n  local i=0\n  local j=0\n  local len=${#arr[@]}\n  local max_len=len*k\n  local max_i=0\n  local max_j=0\n  local max_sum_i=0\n  local max_sum_j=0\n  local max_sum_len=0\n  local max_sum_sum=0\n  local max_sum_k=0\n  local max_sum_i_k=0\n  local max_sum_j_k=0\n  local max_sum_len_k=0\n  local max_sum_sum_k=0\n  local max_sum_k_k=0\n  local max_sum_i_k_k=0\n  local max_sum_j_k_k=0\n  local max_sum_len_k_k=0\n  local max_sum_sum_k_k=0\n  local max_sum_k_k_k=0\n  local max_sum_i_k_k_k=0\n  local max_sum_j_k_k_k=0\n  local max_sum_len_k_k_k=0\n  local max_sum_sum_k_k_k=0\n  local max_sum_k_k_k_k=0\n  local max_sum_i_k_k_k_k=0\n  local max_sum_j_k_k_k_k=0\n  local max_sum_len_k_k_k_k=0\n  local max_sum_sum_k_k_k_k=0\n  local max_sum_k_k_k_k_k=0\n  local max_sum_i_k_k_k_k_k=0\n  local max_sum_j_k_k_k_k_k=0\n  local max_sum_len_k_k_k_k_k=0\n  local max_sum_sum_k_k_k_k_k=0\n  local max_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local current_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n  local sum=0\n  local max_prefix_sum=0\n  local max_suffix_sum=0\n  local min_prefix_sum=0\n  local min_suffix_sum=0\n  local total_sum=0\n\n  for ((i=0; i<n; i++))\n  do\n    total_sum=$((total_sum + arr[i]))\n  done\n\n  for ((i=0; i<n; i++))\n  do\n    current_sum=$((current_sum + arr[i]))\n    if [[ $current_sum -gt $max_sum ]]\n    then\n      max_sum=$current_sum\n    fi\n    if [[ $current_sum -lt 0 ]]\n    then\n      current_sum=0\n    fi\n  done\n\n  max_prefix_sum=$current_sum\n  current_sum=0\n\n  for ((i=$((n-1)); i>=0; i--))\n  do\n    current_sum=$((current_sum + arr[i]))\n    if [[ $current_sum -gt $max_suffix_sum ]]\n    then\n      max_suffix_sum=$current_sum\n    fi\n  done\n\n  min_prefix_sum=$current_sum\n  current_sum=0\n\n  for ((i=0; i<n; i++))\n  do\n    current_sum=$((current_sum + arr[i]))\n    if [[ $current_sum -lt $min_prefix_sum ]]\n    then\n      min_prefix_sum=$current_sum\n    fi\n  done\n\n  min_suffix_sum=$current_sum\n  current_sum=0\n\n  for ((i=$((n-1)); i>=0; i--))\n  do\n    current_sum=$((current_sum + arr[i]))\n    if [[ $current_sum -lt $min_suffix_sum ]]\n    then",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local sum=0\n  local max_sum_i=0\n  local max_sum_j=0\n  local max_sum_k_i=0\n  local max_sum_k_j=0\n  local max_sum_k=0\n  local max_sum_k_sum=0\n  local max_sum_k_sum_i=0\n  local max_sum_k_sum_j=0\n  local max_sum_k_sum_k_i=0\n  local max_sum_k_sum_k_j=0\n  local max_sum_k_sum_k=0\n  local max_sum_k_sum_k_sum=0\n  local max_sum_k_sum_k_sum_i=0\n  local max_sum_k_sum_k_sum_j=0\n  local max_sum_k_sum_k_sum_k_i=0\n  local max_sum_k_sum_k_sum_k_j=0\n  local max_sum_k_sum_k_sum_k=0\n  local max_sum_k_sum_k_sum_k_sum=0\n  local max_sum_k_sum_k_sum_k_sum_i=0\n  local max_sum_k_sum_k_sum_k_sum_j=0\n  local max_sum_k_sum_k_sum_k_sum_k_i=0\n  local max_sum_k_sum_k_sum_k_sum_k_j=0\n  local max_sum_k_sum_k_sum_k_sum_k=0\n  local max_sum_k_sum_k_sum_k_sum_k_sum=0\n  local max_sum_k_sum_k_sum_k_sum_k_sum_i=0\n  local max_sum_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local sum_arr=()\n  local sum_arr_size=0\n  local sum_arr_index=0\n  local sum_arr_index_max=0\n  local sum_arr_index_min=0\n  local sum_arr_index_max_sum=0\n  local sum_arr_index_min_sum=0\n  local sum_arr_index_max_sum_index=0\n  local sum_arr_index_min_sum_index=0\n  local sum_arr_index_max_sum_index_max=0\n  local sum_arr_index_min_sum_index_min=0\n  local sum_arr_index_max_sum_index_max_sum=0\n  local sum_arr_index_min_sum_index_min_sum=0\n  local sum_arr_index_max_sum_index_max_sum_index=0\n  local sum_arr_index_min_sum_index_min_sum_index=0\n  local sum_arr_index_max_sum_index_max_sum_index_max=0\n  local sum_arr_index_min_sum_index_min_sum_index_min=0\n  local sum_arr_index_max_sum_index_max_sum_index_max_sum=0\n  local sum_arr_index_min_sum_index_min_sum_index_min_sum=0\n  local sum_arr_index_max_sum_index_max_sum_index_max_sum_index=0\n  local sum_arr_index_min_sum_index_min_sum_index_min_sum_index=0\n  local sum_arr_index_max_sum_index_max_sum_index_max_sum_index_max=0\n  local sum_arr_index_min_sum_index_min_sum_index_min_sum_index_min=",
    "    local -n arr=\"$1\"\n    local k=\"$2\"\n    local n=\"$3\"\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n        max_val=$((max_val > arr[i] ? max_val : arr[i]))\n        min_val=$((min_val < arr[i] ? min_val : arr[i]))\n    done\n\n    if [[ $((max_val)) -le 0 ]]; then\n        echo $((max_val))\n        return\n    fi\n\n    max_sum=$((sum))\n    curr_sum=$((sum))\n\n    for ((i=1; i<k; i++)); do\n        for ((j=0; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            max_sum=$((max_sum > curr_sum ? max_sum : curr_sum))\n            curr_sum=$((curr_sum < 0 ? 0 : curr_sum))\n        done\n    done\n\n    echo $((max_sum))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local sum=0\n  local sum_arr=()\n  local max_sum_arr=()\n  local max_sum_arr_len=0\n  local curr_sum_arr=()\n  local curr_sum_arr_len=0\n  local max_sum_arr_len_prev=0\n  local curr_sum_arr_len_prev=0\n  local max_sum_arr_len_prev_prev=0\n  local curr_sum_arr_len_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev_prev_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev_prev_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev_prev_prev_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local max_sum_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local curr_sum_arr_len_prev_prev_prev",
    "    local arr=($1)\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local m=0\n    local sum=0\n    local max_sum_so_far=0\n    local max_sum_ending_here=0\n    local max_sum_ending_here_temp=0\n    local max_sum_so_far_temp=0\n    local max_sum_ending_here_temp_2=0\n    local max_sum_so_far_temp_2=0\n    local max_sum_ending_here_temp_3=0\n    local max_sum_so_far_temp_3=0\n    local max_sum_ending_here_temp_4=0\n    local max_sum_so_far_temp_4=0\n    local max_sum_ending_here_temp_5=0\n    local max_sum_so_far_temp_5=0\n    local max_sum_ending_here_temp_6=0\n    local max_sum_so_far_temp_6=0\n    local max_sum_ending_here_temp_7=0\n    local max_sum_so_far_temp_7=0\n    local max_sum_ending_here_temp_8=0\n    local max_sum_so_far_temp_8=0\n    local max_sum_ending_here_temp_9=0\n    local max_sum_so_far_temp_9=0\n    local max_sum_ending_here_temp_10=0\n    local max_sum_so_far_temp_10=0\n    local max_sum_ending_here_temp_11=0\n    local max_sum_so_far_temp_11=0\n    local max_sum_ending_here_temp_12=0\n    local max_sum_so_far_temp_12=0\n    local max_sum_ending_here_temp_13=0\n    local max_sum_so_far_temp_13=0\n    local max_sum_ending_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    for ((k=1; k<k; k++)); do\n        curr_sum=0\n        for ((l=0; l<n; l++)); do\n            curr_sum=$((curr_sum + arr[l]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n        for ((m=0; m<n; m++)); do\n            curr_sum=$((curr_sum - arr[m] + arr[(m+n)%n]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    echo $max_sum",
    "    local -a arr=($1)\n    local k=$2\n    local n=$3\n    local max=0\n    local sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum=0\n    local temp_l=0\n    local temp_r=0\n    local temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_max=0\n    local temp_sum",
    "    local -a arr=()\n    local -i i=0\n    local -i k=$2\n    local -i n=$3\n    local -i max_so_far=0\n    local -i max_ending_here=0\n    local -i sum=0\n    local -i start=0\n    local -i end=0\n    local -i s=0\n\n    for i in $1; do\n        arr+=($i)\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n\n    max_so_far=$((sum))\n    max_ending_here=$((sum))\n\n    for ((i=1; i<k; i++)); do\n        for ((j=0; j<n; j++)); do\n            max_ending_here=$((max_ending_here + arr[j]))\n            if [[ $max_ending_here -gt $max_so_far ]]; then\n                max_so_far=$((max_ending_here))\n                start=$((s))\n                end=$((j))\n            fi\n        done\n        s=$((s + n))\n    done\n\n    echo $max_so_far",
    "    local -a array=()\n    local -i k=$2\n    local -i max_sum=$3\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i max_sum_so_far=0\n    local -i max_start_index=0\n    local -i max_end_index=0\n    local -i start_index=0\n    local -i end_index=0\n    local -i n=0\n\n    # Convert the space-separated list to an array\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=${#array[@]}\n\n    # Find the max sum of the array\n    for (( i=0; i<n; i++ )); do\n        max_sum_so_far=$(( max_sum_so_far + array[i] ))\n        if (( max_sum_so_far > max_sum )); then\n            max_sum_so_far=$max_sum\n        fi\n        if (( max_sum_so_far < 0 )); then\n            max_sum_so_far=0\n        fi\n    done\n\n    # Find the max sum of the repeated array\n    for (( i=0; i<k; i++ )); do\n        sum=0\n        for (( j=0; j<n; j++ )); do\n            sum=$(( sum + array[j] ))\n            if (( sum > max_sum_so_far )); then\n                max_sum_so_far=$sum\n                max_start_index=$start_index\n                max_end_index=$end_index\n            fi\n            if (( sum < 0 )); then\n                sum=0\n                start_index=$(( j + 1 ))\n            fi\n            end_index=$j\n        done\n    done\n\n    echo $max_sum_so_far",
    "  local -a arr\n  local k\n  local max_sum\n  local sum\n  local i\n  local j\n  local n\n  local m\n  local l\n  local r\n  local temp\n  arr=($1)\n  k=$2\n  n=${#arr[@]}\n  m=$((n * k))\n  max_sum=$3\n  for ((i = 0; i < n; i++)); do\n    sum=0\n    for ((j = i; j < m; j += n)); do\n      sum=$((sum + arr[j]))\n      if ((sum > max_sum)); then\n        max_sum=$sum\n      fi\n    done\n  done\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local current_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n  local sum=0\n  local sum_arr=()\n  local max_sum_arr=()\n  local max_sum_arr_index=0\n  local max_sum_arr_length=0\n\n  # find the max sum of the array\n  for ((i=0; i<n; i++)); do\n    current_sum=0\n    for ((j=i; j<n; j++)); do\n      current_sum=$((current_sum + arr[j]))\n      if ((current_sum > max_sum)); then\n        max_sum=$current_sum\n        max_sum_arr_index=$i\n        max_sum_arr_length=$((j - i + 1))\n      fi\n    done\n  done\n\n  # find the max sum of the repeated array\n  for ((i=0; i<k; i++)); do\n    for ((j=0; j<n; j++)); do\n      sum_arr[j]=$((sum_arr[j] + arr[j]))\n    done\n    for ((l=0; l<n; l++)); do\n      sum=0\n      for ((m=l; m<n; m++)); do\n        sum=$((sum + sum_arr[m]))\n        if ((sum > max_sum)); then\n          max_sum=$sum\n          max_sum_arr_index=$l\n          max_sum_arr_length=$((m - l + 1))\n        fi\n      done\n    done\n  done\n\n  # print the max sum array\n  for ((i=0; i<max_sum_arr_length; i++)); do\n    max_sum_arr[i]=${arr[$((max_sum_arr_index + i))]}\n  done\n  echo \"${max_sum_arr[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum_arr=()\n    local sum=0\n    local max_sum_arr=()\n    local max_sum_arr_len=0\n    local max_sum_arr_index=0\n    local max_sum_arr_index_end=0\n    local max_sum_arr_index_start=0\n    local max_sum_arr_index_start_end=0\n    local max_sum_arr_index_start_start=0\n    local max_sum_arr_index_start_start_end=0\n    local max_sum_arr_index_start_start_start=0\n    local max_sum_arr_index_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_",
    "  local -a arr=()\n  local -i k=$2\n  local -i n=$3\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i sum=0\n  local -i max_so_far=0\n  local -i max_ending_here=0\n  local -i start=0\n  local -i end=0\n  local -i s=0\n\n  # Convert input to array\n  arr=($1)\n\n  # Find the maximum subarray sum for the first array\n  for ((i=0; i<n; i++)); do\n    max_ending_here=$((max_ending_here + arr[i]))\n    if ((max_ending_here < 0)); then\n      max_ending_here=0\n      s=$((i + 1))\n    fi\n    if ((max_so_far < max_ending_here)); then\n      max_so_far=$max_ending_here\n      start=$s\n      end=$i\n    fi\n  done\n\n  # Find the maximum subarray sum for the repeated array\n  for ((i=1; i<k; i++)); do\n    sum=0\n    for ((j=i*n; j<(i+1)*n; j++)); do\n      sum=$((sum + arr[j % n]))\n    done\n\n    max_ending_here=$sum\n    s=$((i*n))\n    for ((j=i*n; j<(i+1)*n; j++)); do\n      max_ending_here=$((max_ending_here + arr[j % n]))\n      if ((max_ending_here < 0)); then\n        max_ending_here=0\n        s=$((j + 1))\n      fi\n      if ((max_so_far < max_ending_here)); then\n        max_so_far=$max_ending_here\n        start=$s\n        end=$((j % n))\n      fi\n    done\n  done\n\n  # Find the maximum subarray sum crossing the boundary\n  sum=0\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  echo $((max_sum * k))",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local min_index=0\n    local max_index=0\n    local min_sum=0\n    local max_sum=0\n\n    for (( i=0; i<n; i++ )); do\n        sum=$(( sum + arr[i] ))\n        if (( arr[i] > max_val )); then\n            max_val=${arr[i]}\n            max_index=$i\n        fi\n        if (( arr[i] < min_val )); then\n            min_val=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    if (( sum > 0 )); then\n        max_sum=$(( sum * k ))\n    else\n        min_sum=$(( sum * k ))\n    fi\n\n    if (( max_val <= 0 )); then\n        max_sum=$max_val\n    fi\n\n    if (( min_val >= 0 )); then\n        min_sum=$min_val\n    fi\n\n    for (( i=0; i<n; i++ )); do\n        curr_sum=$(( curr_sum + arr[i] ))\n        if (( curr_sum < 0 )); then\n            curr_sum=0\n        fi\n        if (( curr_sum > max_sum )); then\n            max_sum=$curr_sum\n        fi\n    done\n\n    for (( i=0; i<n; i++ )); do\n        curr_sum=$(( curr_sum + arr[i] ))\n        if (( curr_sum > 0 )); then\n            curr_sum=0\n        fi\n        if (( curr_sum < min_sum )); then\n            min_sum=$curr_sum\n        fi\n    done\n\n    if (( min_index < max_index )); then\n        max_sum=$(( max_sum + min_sum * (k-2) ))\n    else\n        max_sum=$(( max_sum + min_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_curr_sum=0\n    local k_max_sum=0\n    local k_max_i=0\n    local k_max_j=0\n    local k_max_k=0\n    local k_max_n=0\n    local k_max_arr=()\n    local k_curr_arr=()\n    local k_max_arr_sum=0\n    local k_curr_arr_sum=0\n    local k_max_arr_sum_i=0\n    local k_max_arr_sum_j=0\n    local k_max_arr_sum_k=0\n    local k_max_arr_sum_n=0\n    local k_max_arr_sum_arr=()\n    local k_curr_arr_sum_arr=()\n    local k_max_arr_sum_arr_sum=0\n    local k_curr_arr_sum_arr_sum=0\n    local k_max_arr_sum_arr_sum_i=0\n    local k_max_arr_sum_arr_sum_j=0\n    local k_max_arr_sum_arr_sum_k=0\n    local k_max_arr_sum_arr_sum_n=0\n    local k_max_arr_sum_arr_sum_arr=()\n    local k_curr_arr_sum_arr_sum_arr=()\n    local k_max_arr_sum_arr_sum_arr_sum=0\n    local k_curr_arr_sum_arr_sum_arr_sum=0\n    local k_max_arr_sum_arr_sum_arr_sum_i=0\n    local k_max_arr_sum_arr_sum_arr_sum_j=0\n    local k_max_arr_sum_arr_sum_arr_sum_k=0\n    local k_max",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_sum=0\n    local k_curr_sum=0\n    local k_max_sum=0\n\n    while [ $i -lt $n ]; do\n        curr_sum=$((curr_sum + arr[i]))\n        if [ $curr_sum -lt 0 ]; then\n            curr_sum=0\n            j=$((i + 1))\n        fi\n        if [ $curr_sum -gt $max_sum ]; then\n            max_sum=$curr_sum\n        fi\n        i=$((i + 1))\n    done\n\n    k_sum=$((k * max_sum))\n    if [ $k_sum -gt 0 ]; then\n        k_max_sum=$k_sum\n    else\n        k_max_sum=0\n    fi\n\n    i=0\n    while [ $i -lt $n ]; do\n        k_curr_sum=$((k_curr_sum + arr[i]))\n        if [ $k_curr_sum -lt 0 ]; then\n            k_curr_sum=0\n            k_j=$((i + 1))\n        fi\n        if [ $k_curr_sum -gt $k_max_sum ]; then\n            k_max_sum=$k_curr_sum\n        fi\n        i=$((i + 1))\n    done\n\n    echo $k_max_sum",
    "    local -a arr=(\"${!1}\")\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local l\n    local r\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n                l=$i\n                r=$j\n            fi\n        done\n    done\n\n    for ((i=0; i<k-1; i++)); do\n        for ((j=0; j<l; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n                l=$j\n                r=$((n-1))\n            fi\n        done\n    done\n\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local curr_k=0\n  local max_arr=()\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n        max_i=$i\n        max_j=$j\n        max_k=0\n      fi\n    done\n  done\n\n  for ((i=max_i; i<=max_j; i++)); do\n    max_arr+=(${arr[i]})\n  done\n\n  for ((curr_k=1; curr_k<k; curr_k++)); do\n    for ((i=0; i<n; i++)); do\n      max_arr+=(${arr[i]})\n    done\n  done\n\n  echo ${max_arr[@]}",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local sum_arr=()\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum+arr[i]))\n    done\n\n    max_sum=$((sum*k))\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum+arr[i]))\n        sum_arr[i]=$curr_sum\n    done\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum+sum_arr[i]))\n        max_sum=$((max_sum+curr_sum))\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local curr_i=0\n    local curr_j=0\n    local curr_k=0\n    local max_sub_arr=()\n\n    while [ $i -lt $n ]\n    do\n        while [ $j -lt $n ]\n        do\n            curr_sum=$((curr_sum + arr[$j]))\n            if [ $curr_sum -gt $max_sum ]\n            then\n                max_sum=$curr_sum\n                max_i=$i\n                max_j=$j\n                max_k=$k\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n        j=$i\n        curr_sum=0\n    done\n\n    curr_i=$max_i\n    curr_j=$max_j\n    curr_k=$max_k\n    while [ $curr_k -gt 0 ]\n    do\n        while [ $curr_j -ge $curr_i ]\n        do\n            max_sub_arr+=(${arr[$curr_j]})\n            curr_j=$((curr_j - 1))\n        done\n        curr_k=$((curr_k - 1))\n    done\n\n    echo \"${max_sub_arr[@]}\"",
    "  local -a arr=(\"$@\")\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_sum=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n\n    max_sum=$((sum * k))\n\n    for ((i=0; i<n; i++)); do\n        max_ending_here=$((max_ending_here + arr[i]))\n        if [[ $max_ending_here -lt 0 ]]; then\n            max_ending_here=0\n        fi\n        if [[ $max_so_far -lt $max_ending_here ]]; then\n            max_so_far=$max_ending_here\n        fi\n    done\n\n    if [[ $((max_sum - max_so_far)) -gt $max_sum ]]; then\n        echo $max_sum\n    else\n        echo $((max_sum - max_so_far))\n    fi",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local max_sub_array_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_sub_array_sum_repeated=0\n    local max_sub_array_sum_repeated_index=0\n    local max_sub_array_sum_repeated_length=0\n    local max_sub_array_sum_repeated_start=0\n    local max_sub_array_sum_repeated_end=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n\n    max_sub_array_sum=$sum\n    max_sub_array_sum_repeated=$sum\n    max_sub_array_sum_repeated_index=0\n    max_sub_array_sum_repeated_length=n\n\n    for ((i=1; i<k; i++)); do\n        max_so_far=0\n        max_ending_here=0\n        for ((j=0; j<n; j++)); do\n            max_ending_here=$((max_ending_here + arr[j]))\n            if [[ $max_ending_here -lt 0 ]]; then\n                max_ending_here=0\n            fi\n            if [[ $max_so_far -lt $max_ending_here ]]; then\n                max_so_far=$max_ending_here\n            fi\n        done\n        max_sub_array_sum=$((max_sub_array_sum + max_so_far))\n        if [[ $max_sub_array_sum -gt $max_sub_array_sum_repeated ]]; then\n            max_sub_array_sum_repeated=$max_sub_array_sum\n            max_sub_array_sum_repeated_index=$i\n            max_sub_array_sum_repeated_length=$((n * (i + 1)))\n        fi\n    done\n\n    max_sub_array_sum_repeated_start=$",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local cur_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_n=0\n    local max_arr=()\n    local cur_arr=()\n    local max_arr_sum=0\n    local cur_arr_sum=0\n    local max_arr_len=0\n    local cur_arr_len=0\n    local max_arr_avg=0\n    local cur_arr_avg=0\n\n    for ((i=0; i<n; i++)); do\n        for ((j=i; j<n; j++)); do\n            for ((l=0; l<k; l++)); do\n                for ((r=l; r<k; r++)); do\n                    cur_sum=0\n                    cur_arr_sum=0\n                    cur_arr_len=0\n                    for ((m=i; m<=j; m++)); do\n                        for ((n=l; n<=r; n++)); do\n                            cur_sum=$((cur_sum + arr[m]))\n                            cur_arr_sum=$((cur_arr_sum + arr[m]))\n                            cur_arr_len=$((cur_arr_len + 1))\n                        done\n                    done\n                    cur_arr_avg=$((cur_arr_sum / cur_arr_len))\n                    if ((cur_sum > max_sum)); then\n                        max_sum=$cur_sum\n                        max_l=$l\n                        max_r=$r\n                        max_i=$i\n                        max_j=$j\n                        max_k=$k\n                        max_n=$n\n                        max_arr_sum=$cur_arr_sum\n                        max_arr_len=$cur_arr_len\n                        max_arr_avg=$cur_arr_avg\n                    elif ((cur_sum == max_sum)); then",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n\n    local max_so_far=0\n    local max_ending_here=0\n    local i=0\n    local j=0\n\n    while [ $i -lt $n ]; do\n        max_ending_here=$((max_ending_here + arr[$i]))\n        if [ $max_ending_here -lt 0 ]; then\n            max_ending_here=0\n        fi\n        if [ $max_so_far -lt $max_ending_here ]; then\n            max_so_far=$max_ending_here\n        fi\n        i=$((i + 1))\n    done\n\n    local max_wrap=0\n    local min_wrap=0\n\n    while [ $j -lt $n ]; do\n        max_wrap=$((max_wrap + arr[$j]))\n        if [ $min_wrap -gt $((min_wrap + arr[$j])) ]; then\n            min_wrap=$((min_wrap + arr[$j]))\n        fi\n        j=$((j + 1))\n    done\n\n    if [ $((k * max_wrap)) -eq $((k * min_wrap)) ]; then\n        echo $max_so_far\n    else\n        local max_wrap_sum=$(((k - 2) * max_wrap + max_so_far))\n        echo $((max_wrap_sum > max_so_far ? max_wrap_sum : max_so_far))\n    fi",
    "  local -a arr\n  local -i k\n  local -i max_sum\n  local -i max_sum_so_far\n  local -i i\n  local -i j\n  local -i curr_sum\n  local -i n\n\n  arr=($1)\n  k=$2\n  max_sum=0\n  max_sum_so_far=0\n  n=${#arr[@]}\n\n  for ((i=0; i<n; i++)); do\n    max_sum_so_far=$((max_sum_so_far + arr[i]))\n  done\n\n  max_sum=$((max_sum_so_far))\n\n  for ((i=1; i<k; i++)); do\n    curr_sum=0\n    for ((j=0; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      max_sum_so_far=$((max_sum_so_far + arr[j]))\n      max_sum_so_far=$((max(max_sum_so_far, curr_sum)))\n    done\n    max_sum=$((max(max_sum, max_sum_so_far)))\n  done\n\n  echo $max_sum",
    "  local -a arr=($1)\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local i=0\n  local j=0\n  local sum=0\n  local max_sum=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_l=0\n\n  for ((i=0; i<n; i++))\n  do\n    sum=0\n    for ((j=i; j<n; j++))\n    do\n      sum=$((sum+arr[j]))\n      if [[ $sum -gt $max_sum ]]\n      then\n        max_sum=$sum\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  max_sum=$((max_sum*k))\n  max_k=$max_i\n  max_l=$max_j\n\n  for ((i=0; i<n; i++))\n  do\n    max_ending_here=$((max_ending_here+arr[i]))\n    if [[ $max_ending_here -lt 0 ]]\n    then\n      max_ending_here=0\n    fi\n    if [[ $max_so_far -lt $max_ending_here ]]\n    then\n      max_so_far=$max_ending_here\n    fi\n  done\n\n  if [[ $max_so_far -gt 0 ]]\n  then\n    max_sum=$((max_sum+max_so_far*(k-2)))\n  fi\n\n  for ((i=0; i<n; i++))\n  do\n    max_ending_here=$((max_ending_here+arr[i]))\n    if [[ $max_ending_here -lt 0 ]]\n    then\n      max_ending_here=0\n    fi\n    if [[ $max_so_far -lt $max_ending_here ]]\n    then\n      max_so_far=$max_ending_here\n      max_k=$i\n    fi\n  done\n\n  for ((i=n-1; i",
    "  local -a array=()\n  local -i k=$2\n  local -i max_sum=$3\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n  local -i max_sum_so_far=0\n  local -i max_sum_ending_here=0\n  local -i n=0\n\n  # Fill array\n  for i in $1; do\n    array[$j]=$i\n    (( j++ ))\n  done\n\n  # Get length of array\n  n=${#array[@]}\n\n  # Find max sum of subarray\n  for (( i=0; i<n; i++ )); do\n    max_sum_ending_here=$(( max_sum_ending_here + array[i] ))\n    if (( max_sum_ending_here < 0 )); then\n      max_sum_ending_here=0\n    fi\n    if (( max_sum_ending_here > max_sum_so_far )); then\n      max_sum_so_far=$max_sum_ending_here\n    fi\n  done\n\n  # Find sum of all elements\n  for (( i=0; i<n; i++ )); do\n    sum=$(( sum + array[i] ))\n  done\n\n  # Find max sum of repeated array\n  if (( sum > 0 )); then\n    max_sum=$(( (k * sum) - (sum - max_sum_so_far) ))\n  else\n    max_sum=$max_sum_so_far\n  fi\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n\n  for (( i=0; i<n; i++ )); do\n    curr_sum=0\n    for (( j=i; j<n; j++ )); do\n      curr_sum=$(( curr_sum + arr[j] ))\n      if (( curr_sum > max_sum )); then\n        max_sum=$curr_sum\n        k_i=$i\n        k_j=$j\n      fi\n    done\n  done\n\n  if (( k == 1 )); then\n    echo $max_sum\n    return\n  fi\n\n  local max_sum_repeated=0\n  local curr_sum_repeated=0\n  local i_repeated=0\n  local j_repeated=0\n  local k_i_repeated=0\n  local k_j_repeated=0\n\n  for (( i=0; i<n; i++ )); do\n    curr_sum_repeated=0\n    for (( j=i; j<n; j++ )); do\n      curr_sum_repeated=$(( curr_sum_repeated + arr[j] ))\n      if (( curr_sum_repeated > max_sum_repeated )); then\n        max_sum_repeated=$curr_sum_repeated\n        k_i_repeated=$i\n        k_j_repeated=$j\n      fi\n    done\n  done\n\n  if (( k_i_repeated == k_i && k_j_repeated == k_j )); then\n    echo $max_sum\n    return\n  fi\n\n  local sum_of_all=0\n  for (( i=0; i<n; i++ )); do\n    sum_of_all=$(( sum_of_all + arr[i] ))\n  done\n\n  local min_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local max_sum_so_far=0\n  local max_sum_ending_here=0\n  local i=0\n  local j=0\n  local sum=0\n  local sum_so_far=0\n  local sum_ending_here=0\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n  done\n\n  max_sum=$((sum * k))\n\n  for ((i=0; i<n; i++)); do\n    sum_so_far=$((sum_so_far + arr[i]))\n    sum_ending_here=$((sum_ending_here + arr[i]))\n\n    if ((sum_ending_here < 0)); then\n      sum_ending_here=0\n    fi\n\n    if ((sum_so_far > max_sum_so_far)); then\n      max_sum_so_far=$sum_so_far\n    fi\n  done\n\n  max_sum_ending_here=$((max_sum_so_far * (k-2)))\n\n  for ((i=n-1; i>=0; i--)); do\n    sum_so_far=$((sum_so_far + arr[i]))\n    sum_ending_here=$((sum_ending_here + arr[i]))\n\n    if ((sum_ending_here < 0)); then\n      sum_ending_here=0\n    fi\n\n    if ((sum_so_far > max_sum_so_far)); then\n      max_sum_so_far=$sum_so_far\n    fi\n  done\n\n  max_sum_ending_here=$((max_sum_ending_here + max_sum_so_far))\n\n  if ((max_sum_ending_here > max_sum)); then\n    max_sum=$max_sum_ending_here\n  fi\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n\n    while [ $i -lt $n ]; do\n        curr_sum=0\n        j=$i\n        while [ $j -lt $n ]; do\n            curr_sum=$((curr_sum + arr[j]))\n            max_sum=$((max_sum > curr_sum ? max_sum : curr_sum))\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n\n    echo $max_sum",
    "    local -a arr\n    local -i k\n    local -i max_sum\n    local -i current_sum\n    local -i i\n    local -i j\n    local -i n\n    local -i start\n    local -i end\n    local -i max_start\n    local -i max_end\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    n=\"${#arr[@]}\"\n    max_sum=0\n    current_sum=0\n    start=0\n    end=0\n    max_start=0\n    max_end=0\n\n    for ((i=0; i<n; i++))\n    do\n        current_sum=0\n        for ((j=0; j<k; j++))\n        do\n            current_sum=$((current_sum + arr[(i+j)%n]))\n            if ((current_sum > max_sum))\n            then\n                max_sum=\"$current_sum\"\n                max_start=\"$start\"\n                max_end=\"$end\"\n            fi\n        done\n        start=$((start + 1))\n        end=$((end + 1))\n    done\n\n    echo \"$max_sum\"",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local k_i\n    local k_j\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            for ((k_i=1; k_i<k; k_i++)); do\n                for ((k_j=0; k_j<n; k_j++)); do\n                    curr_sum=$((curr_sum + arr[k_j]))\n                done\n            done\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_n=0\n    local max_curr_sum=0\n    local max_max_sum=0\n    local max_arr=()\n    local curr_arr=()\n    local max_curr_arr=()\n    local max_max_arr=()\n    local max_arr_sum=0\n    local curr_arr_sum=0\n    local max_curr_arr_sum=0\n    local max_max_arr_sum=0\n    local max_arr_str=''\n    local curr_arr_str=''\n    local max_curr_arr_str=''\n    local max_max_arr_str=''\n    for ((i=0; i<k; i++)); do\n        for ((j=0; j<n; j++)); do\n            curr_arr[$j]=${arr[$j]}\n            curr_arr_sum=$((curr_arr_sum + arr[j]))\n        done\n        curr_arr_str=$(printf \"%s \" \"${curr_arr[@]}\")\n        for ((l=0; l<n; l++)); do\n            for ((r=l; r<n; r++)); do\n                curr_sum=0\n                for ((j=l; j<=r; j++)); do\n                    curr_sum=$((curr_sum + arr[j]))\n                done\n                if ((curr_sum > max_sum)); then\n                    max_sum=$curr_sum\n                    max_l=$l\n                    max_r=$r\n                    max_i=$i\n                    max_j=$j\n                    max_k=$k\n                    max_n=$n\n                    max_curr_sum=$curr",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n\n  while (( i < n )); do\n    curr_sum=0\n    j=0\n    while (( j < k )); do\n      curr_sum=$(( curr_sum + arr[i] ))\n      if (( curr_sum > max_sum )); then\n        max_sum=$curr_sum\n        max_l=$l\n        max_r=$r\n        max_i=$i\n        max_j=$j\n        max_k=$k\n      fi\n      (( j++ ))\n      (( r++ ))\n    done\n    (( i++ ))\n    (( l++ ))\n  fi\n\n  echo \"max_sum=$max_sum\"\n  echo \"max_l=$max_l\"\n  echo \"max_r=$max_r\"\n  echo \"max_i=$max_i\"\n  echo \"max_j=$max_j\"\n  echo \"max_k=$max_k\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local max_element=${arr[0]}\n  local i=0\n  local j=0\n  local sum=0\n  local sum_of_all_elements=0\n  local max_sub_array_sum=0\n  local max_sub_array_sum_repeated=0\n  local max_sub_array_sum_repeated_k_times=0\n  local max_sub_array_sum_repeated_k_minus_1_times=0\n  local max_sub_array_sum_repeated_k_minus_2_times=0\n  local max_sub_array_sum_repeated_k_minus_3_times=0\n  local max_sub_array_sum_repeated_k_minus_4_times=0\n  local max_sub_array_sum_repeated_k_minus_5_times=0\n  local max_sub_array_sum_repeated_k_minus_6_times=0\n  local max_sub_array_sum_repeated_k_minus_7_times=0\n  local max_sub_array_sum_repeated_k_minus_8_times=0\n  local max_sub_array_sum_repeated_k_minus_9_times=0\n  local max_sub_array_sum_repeated_k_minus_10_times=0\n  local max_sub_array_sum_repeated_k_minus_11_times=0\n  local max_sub_array_sum_repeated_k_minus_12_times=0\n  local max_sub_array_sum_repeated_k_minus_13_times=0\n  local max_sub_array_sum_repeated_k_minus_14_times=0\n  local max_sub_array_sum_repeated_k_minus_15_times=0\n  local max_sub_array_sum_repeated_k_minus_16_times=0\n  local max_sub_array_sum_repeated_k",
    "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i k=$2\n    local -i max_sum=$3\n    local -i i\n    local -i j\n    local -i sum\n    local -i max_sum_so_far=${arr[0]}\n    local -i max_ending_here=${arr[0]}\n    for ((i=1; i<n; i++)); do\n        max_ending_here=$((max_ending_here + arr[i]))\n        if ((max_ending_here < arr[i])); then\n            max_ending_here=${arr[i]}\n        fi\n        if ((max_sum_so_far < max_ending_here)); then\n            max_sum_so_far=${max_ending_here}\n        fi\n    done\n    if ((k == 1)); then\n        echo $max_sum_so_far\n        return\n    fi\n    local -i curr_val=0\n    local -i max_val=0\n    local -i min_val=0\n    for ((i=0; i<n; i++)); do\n        curr_val=$((curr_val + arr[i]))\n        max_val=$((max_val + arr[i]))\n        min_val=$((min_val + arr[i]))\n    done\n    if ((max_val > 0)); then\n        max_sum=$((max_sum + max_val * (k - 2)))\n    fi\n    if ((min_val < 0)); then\n        max_sum=$((max_sum + min_val * (k - 2)))\n    fi\n    max_sum=$((max_sum + max_sum_so_far))\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local sum_arr=()\n    local max_arr=()\n    local max_arr_sum=0\n    local max_arr_len=0\n    local max_arr_start=0\n    local max_arr_end=0\n    local max_arr_start_index=0\n    local max_arr_end_index=0\n    local max_arr_index=0\n    local max_arr_index_start=0\n    local max_arr_index_end=0\n    local max_arr_index_start_index=0\n    local max_arr_index_end_index=0\n    local max_arr_index_len=0\n    local max_arr_index_sum=0\n    local max_arr_index_start_index_sum=0\n    local max_arr_index_end_index_sum=0\n    local max_arr_index_start_index_len=0\n    local max_arr_index_end_index_len=0\n    local max_arr_index_start_index_start=0\n    local max_arr_index_end_index_end=0\n    local max_arr_index_start_index_end=0\n    local max_arr_index_end_index_start=0\n    local max_arr_index_start_index_start_index=0\n    local max_arr_index_end_index_end_index=0\n    local max_arr_index_start_index_end_index=0\n    local max_arr_index_end_index_start_index=0\n    local max_arr_index_start_index_start_index_sum=0\n    local max_arr_index_end_index_end_index_sum=0\n    local max_arr_index_start_index_end_index_sum=0\n    local max_arr_index_end_index_start_index_sum=0\n    local max_arr_index_start_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_sum=0\n  local k_curr_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n  local k_max_k=0\n  local k_max_curr_sum=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum+arr[j]))\n      if ((curr_sum>max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  for ((k_i=0; k_i<n; k_i++)); do\n    k_curr_sum=0\n    for ((k_j=k_i; k_j<n; k_j++)); do\n      k_curr_sum=$((k_curr_sum+arr[k_j]))\n      if ((k_curr_sum>k_max_sum)); then\n        k_max_sum=$k_curr_sum\n        k_max_i=$k_i\n        k_max_j=$k_j\n      fi\n    done\n  done\n\n  for ((k_k=2; k_k<=k; k_k++)); do\n    k_max_curr_sum=$((k_max_curr_sum+k_max_sum))\n    if ((k_max_curr_sum>max_sum)); then\n      max_sum=$k_max_curr_sum\n    fi\n  done\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  while (( i < n )); do\n    curr_sum=0\n    j=i\n    while (( j < n )); do\n      curr_sum=$(( curr_sum + arr[j] ))\n      if (( curr_sum > max_sum )); then\n        max_sum=$curr_sum\n      fi\n      (( j++ ))\n    done\n    (( i++ ))\n  done\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i\n  local j\n  local sum\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n  sum=$((max_sum * k))\n  for ((i=0; i<n; i++)); do\n    curr_sum=$((curr_sum + arr[i]))\n  done\n  if ((curr_sum > 0)); then\n    sum=$((sum + (curr_sum * (k-2))))\n  fi\n  echo $sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local sum_arr=()\n  local sum_arr_len=0\n  local max_sum_arr=()\n  local max_sum_arr_len=0\n  local max_sum_arr_i=0\n  local max_sum_arr_j=0\n  local max_sum_arr_k_i=0\n  local max_sum_arr_k_j=0\n  local max_sum_arr_sum=0\n  local max_sum_arr_sum_len=0\n  local max_sum_arr_sum_i=0\n  local max_sum_arr_sum_j=0\n  local max_sum_arr_sum_k_i=0\n  local max_sum_arr_sum_k_j=0\n  local max_sum_arr_sum_sum=0\n  local max_sum_arr_sum_sum_len=0\n  local max_sum_arr_sum_sum_i=0\n  local max_sum_arr_sum_sum_j=0\n  local max_sum_arr_sum_sum_k_i=0\n  local max_sum_arr_sum_sum_k_j=0\n  local max_sum_arr_sum_sum_sum=0\n  local max_sum_arr_sum_sum_sum_len=0\n  local max_sum_arr_sum_sum_sum_i=0\n  local max_sum_arr_sum_sum_sum_j=0\n  local max_sum_arr_sum_sum_sum_k_i=0\n  local max_sum_arr_sum_sum_sum_k_j=0\n  local max_sum_arr_sum_sum_sum_sum=0\n  local max_sum_arr_sum_sum_sum_sum_len=0\n  local max_sum_arr_sum_sum_sum_sum_i=0\n  local",
    "  local -n arr=\"$1\"\n  local k=\"$2\"\n  local n=\"$3\"\n  local max_sum=0\n  local curr_sum=0\n  local i\n  local j\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n  echo $((max_sum * k))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n\n  while [[ $i -lt $n ]]; do\n    curr_sum=0\n    j=$i\n    while [[ $j -lt $n ]]; do\n      curr_sum=$((curr_sum + arr[j]))\n      if [[ $curr_sum -gt $max_sum ]]; then\n        max_sum=$curr_sum\n        k_i=$i\n        k_j=$j\n      fi\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  echo \"$k_i $k_j $max_sum\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_curr_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=0\n    j=$i\n    while [ $j -lt $n ]; do\n      curr_sum=$((curr_sum + arr[j]))\n      if [ $curr_sum -gt $max_sum ]; then\n        max_sum=$curr_sum\n        k_max_i=$i\n        k_max_j=$j\n      fi\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  k_max_sum=$max_sum\n  k_i=$k_max_i\n  k_j=$k_max_j\n  k_curr_sum=$max_sum\n\n  while [ $k -gt 1 ]; do\n    k_curr_sum=0\n    k_i=0\n    k_j=$k_max_j\n    while [ $k_j -lt $n ]; do\n      k_curr_sum=$((k_curr_sum + arr[k_j]))\n      if [ $k_curr_sum -gt $k_max_sum ]; then\n        k_max_sum=$k_curr_sum\n        k_max_i=$k_i\n        k_max_j=$k_j\n      fi\n      k_j=$((k_j + 1))\n    done\n    k=$((k - 1))\n  done\n\n  echo $k_max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_l=0\n  local max_m=0\n  local max_n=0\n  local max_o=0\n  local max_p=0\n  local max_q=0\n  local max_r=0\n  local max_s=0\n  local max_t=0\n  local max_u=0\n  local max_v=0\n  local max_w=0\n  local max_x=0\n  local max_y=0\n  local max_z=0\n  local max_aa=0\n  local max_ab=0\n  local max_ac=0\n  local max_ad=0\n  local max_ae=0\n  local max_af=0\n  local max_ag=0\n  local max_ah=0\n  local max_ai=0\n  local max_aj=0\n  local max_ak=0\n  local max_al=0\n  local max_am=0\n  local max_an=0\n  local max_ao=0\n  local max_ap=0\n  local max_aq=0\n  local max_ar=0\n  local max_as=0\n  local max_at=0\n  local max_au=0\n  local max_av=0\n  local max_aw=0\n  local max_ax=0\n  local max_ay=0\n  local max_az=0\n  local max_ba=0\n  local max_bb=0\n  local max_bc=0\n  local max_bd=0\n  local max_be=0\n  local max_bf=0\n  local max_bg=0\n  local max_bh=0\n  local max_bi=0\n  local max_bj=0\n  local max_bk=0\n  local max_bl=0\n  local max_bm=0\n  local max_bn=0\n",
    "  local input=($1)\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<n; i++))\n  do\n    sum=0\n    for ((j=i; j<n; j++))\n    do\n      sum=$((sum + input[j]))\n      if ((sum > max_sum))\n      then\n        max_sum=$sum\n      fi\n    done\n  done\n\n  echo $((max_sum * k))",
    "    local -n arr=(\"$1\")\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local sum_arr=()\n    local max_sum_arr=()\n    local max_sum_arr_len=0\n    local max_sum_arr_idx=0\n    local max_sum_arr_idx_end=0\n    local max_sum_arr_idx_start=0\n    local max_sum_arr_idx_start_end=0\n    local max_sum_arr_idx_start_start=0\n    local max_sum_arr_idx_start_start_end=0\n    local max_sum_arr_idx_start_start_start=0\n    local max_sum_arr_idx_start_start_start_end=0\n    local max_sum_arr_idx_start_start_start_start=0\n    local max_sum_arr_idx_start_start_start_start_end=0\n    local max_sum_arr_idx_start_start_start_start_start=0\n    local max_sum_arr_idx_start_start_start_start_start_end=0\n    local max_sum_arr_idx_start_start_start_start_start_start=0\n    local max_sum_arr_idx_start_start_start_start_start_start_end=0\n    local max_sum_arr_idx_start_start_start_start_start_start_start=0\n    local max_sum_arr_idx_start_start_start_start_start_start_start_end=0\n    local max_sum_arr_idx_start_start_start_start_start_start_start_start=0\n    local max_sum_arr_idx_start_start_start_start_start_start_start_start_end=0\n    local max_sum_arr_idx_start_start_start_start_start_start_start_start_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n\n    while [ $i -lt $n ]; do\n        curr_sum=0\n        j=0\n        while [ $j -lt $k ]; do\n            curr_sum=$((curr_sum + arr[$(((i + j) % n))]))\n            j=$((j + 1))\n        done\n        if [ $curr_sum -gt $max_sum ]; then\n            max_sum=$curr_sum\n            max_l=$i\n            max_r=$(((i + k - 1) % n))\n        fi\n        i=$((i + 1))\n    done\n\n    l=$max_l\n    r=$max_r\n    while [ $l -ne $r ]; do\n        echo -n \"${arr[$l]} \"\n        l=$(((l + 1) % n))\n    done\n    echo \"${arr[$r]}\"",
    "    local -a array=($1)\n    local k=$2\n    local n=${#array[@]}\n    local max_sum=0\n    local max_sum_so_far=0\n    local max_element=0\n    local i=0\n    local j=0\n    local sum=0\n    local sum_so_far=0\n\n    for ((i=0; i<n; i++)); do\n        max_sum_so_far=$((max_sum_so_far + array[i]))\n        if ((max_sum_so_far < 0)); then\n            max_sum_so_far=0\n        fi\n        if ((max_sum_so_far > max_sum)); then\n            max_sum=$max_sum_so_far\n        fi\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum_so_far=$((sum_so_far + array[i]))\n        if ((sum_so_far < 0)); then\n            sum_so_far=0\n        fi\n        if ((sum_so_far > sum)); then\n            sum=$sum_so_far\n        fi\n    done\n\n    for ((i=0; i<n; i++)); do\n        if ((array[i] > max_element)); then\n            max_element=$array[i]\n        fi\n    done\n\n    if ((max_element < 0)); then\n        echo $((max_element * k))\n        return\n    fi\n\n    if ((k == 1)); then\n        echo $sum\n        return\n    fi\n\n    if ((k == 2)); then\n        echo $((sum + max_sum))\n        return\n    fi\n\n    echo $((sum + (k - 2) * max_sum + max_sum_so_far))",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_sum=0\n    local k_curr_sum=0\n    local k_max_sum=0\n    local k_max_i=0\n    local k_max_j=0\n    local k_max_k_i=0\n    local k_max_k_j=0\n    local k_max_k_sum=0\n    local k_max_k_curr_sum=0\n    local k_max_k_max_sum=0\n    local k_max_k_max_i=0\n    local k_max_k_max_j=0\n    local k_max_k_max_k_i=0\n    local k_max_k_max_k_j=0\n    local k_max_k_max_k_sum=0\n    local k_max_k_max_k_curr_sum=0\n    local k_max_k_max_k_max_sum=0\n    local k_max_k_max_k_max_i=0\n    local k_max_k_max_k_max_j=0\n    local k_max_k_max_k_max_k_i=0\n    local k_max_k_max_k_max_k_j=0\n    local k_max_k_max_k_max_k_sum=0\n    local k_max_k_max_k_max_k_curr_sum=0\n    local k_max_k_max_k_max_k_max_sum=0\n    local k_max_k_max_k_max_k_max_i=0\n    local k_max_k_max_k_max_k_max_j=0\n    local k_max_k_max_k_max_k_max_k_i=0\n    local k_max_k_max_",
    "  local -a arr=(\"$@\")\n  local -i k=$3\n  local -i n=${#arr[@]}\n  local -i i\n  local -i j\n  local -i max_sum=0\n  local -i curr_sum=0\n  local -i max_val=0\n  local -i min_val=0\n  local -i min_sum=0\n  local -i total_sum=0\n\n  for ((i=0; i<n; i++)); do\n    ((max_val=max_val<arr[i]?arr[i]:max_val))\n    ((min_val=min_val>arr[i]?arr[i]:min_val))\n    ((total_sum+=arr[i]))\n  done\n\n  if ((k==1)); then\n    for ((i=0; i<n; i++)); do\n      ((curr_sum=curr_sum<0?arr[i]:curr_sum+arr[i]))\n      ((max_sum=max_sum<curr_sum?curr_sum:max_sum))\n    done\n    echo $max_sum\n    return\n  fi\n\n  if ((total_sum>0)); then\n    ((max_sum=total_sum*k))\n  elif ((max_val<0)); then\n    ((max_sum=max_val))\n  else\n    for ((i=0; i<n; i++)); do\n      ((curr_sum=curr_sum<0?arr[i]:curr_sum+arr[i]))\n      ((max_sum=max_sum<curr_sum?curr_sum:max_sum))\n    done\n    ((max_sum=max_sum*k))\n  fi\n\n  if ((min_val>=0)); then\n    echo $max_sum\n    return\n  fi\n\n  for ((i=0; i<n; i++)); do\n    ((curr_sum=curr_sum<0?arr[i]:curr_sum+arr[i]))\n    ((min_sum=min_sum>curr_sum?curr_sum:min_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_n=0\n  local sum_arr=()\n  local sum=0\n  local sum_i=0\n  local sum_j=0\n  local sum_k=0\n  local sum_n=0\n  local sum_l=0\n  local sum_r=0\n  local sum_max_l=0\n  local sum_max_r=0\n  local sum_max_i=0\n  local sum_max_j=0\n  local sum_max_k=0\n  local sum_max_n=0\n  local sum_max_sum=0\n  local sum_curr_sum=0\n  local sum_max_sum=0\n  local sum_curr_sum=0\n  local sum_max_l=0\n  local sum_max_r=0\n  local sum_max_i=0\n  local sum_max_j=0\n  local sum_max_k=0\n  local sum_max_n=0\n  local sum_max_sum=0\n  local sum_curr_sum=0\n  local sum_max_sum=0\n  local sum_curr_sum=0\n  local sum_max_l=0\n  local sum_max_r=0\n  local sum_max_i=0\n  local sum_max_j=0\n  local sum_max_k=0\n  local sum_max_n=0\n  local sum_max_sum=0\n  local sum_curr_sum=0\n  local sum_max_sum=0\n  local sum_curr_sum=0\n  local sum_max_l=0\n  local sum_max_r=0\n  local sum_max_i=0\n  local sum_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local i=0\n    local j=0\n    local max_sub_array_sum=0\n    local max_sub_array_sum_index=0\n    local max_sub_array_sum_end_index=0\n    local max_sub_array_sum_start_index=0\n\n    for ((i = 0; i < n; i++))\n    do\n        max_sub_array_sum=$((max_sub_array_sum + arr[i]))\n    done\n\n    max_sub_array_sum=$((max_sub_array_sum * k))\n\n    for ((i = 0; i < n * 2; i++))\n    do\n        max_ending_here=$((max_ending_here + arr[i % n]))\n\n        if [[ $max_so_far -lt $max_ending_here ]]\n        then\n            max_so_far=$max_ending_here\n            max_sub_array_sum_index=$j\n            max_sub_array_sum_end_index=$i\n        fi\n\n        if [[ $max_ending_here -lt 0 ]]\n        then\n            max_ending_here=0\n            j=$((i + 1))\n        fi\n    done\n\n    max_sub_array_sum_start_index=$(((max_sub_array_sum_end_index - max_sub_array_sum_index + 1) % n))\n\n    if [[ $max_sub_array_sum -lt $max_so_far ]]\n    then\n        echo $max_so_far\n    else\n        echo $max_sub_array_sum\n    fi",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n    local max_o=0\n    local max_p=0\n    local max_q=0\n    local max_r=0\n    local max_s=0\n    local max_t=0\n    local max_u=0\n    local max_v=0\n    local max_w=0\n    local max_x=0\n    local max_y=0\n    local max_z=0\n    local curr_i=0\n    local curr_j=0\n    local curr_k=0\n    local curr_l=0\n    local curr_m=0\n    local curr_n=0\n    local curr_o=0\n    local curr_p=0\n    local curr_q=0\n    local curr_r=0\n    local curr_s=0\n    local curr_t=0\n    local curr_u=0\n    local curr_v=0\n    local curr_w=0\n    local curr_x=0\n    local curr_y=0\n    local curr_z=0\n    local sum_i=0\n    local sum_j=0\n    local sum_k=0\n    local sum_l=0\n    local sum_m=0\n    local sum_n=0\n    local sum_o=0\n    local sum_p=0\n    local sum_q=0\n    local sum_r=0\n    local sum_s=0\n    local sum_t=0\n    local sum_u=0\n    local sum_v=0\n    local sum_w=0\n    local sum_x=0\n    local sum_y=0\n    local sum_z=0\n    local sum_a=0\n    local sum_",
    "    local -a arr\n    local -i k\n    local -i max_sum\n    local -i max_sum_so_far\n    local -i sum\n    local -i i\n    local -i j\n    local -i n\n    local -i temp\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    max_sum=\"$3\"\n    max_sum_so_far=0\n    sum=0\n    n=\"${#arr[@]}\"\n\n    for ((i=0; i<n; i++)); do\n        sum+=arr[i]\n        if ((sum < 0)); then\n            sum=0\n        fi\n        max_sum_so_far=max_sum_so_far>sum?max_sum_so_far:sum\n    done\n\n    if ((max_sum_so_far == 0)); then\n        max_sum_so_far=max_sum\n    fi\n\n    for ((i=0; i<n; i++)); do\n        max_sum+=arr[i]\n    done\n\n    temp=0\n    for ((i=0; i<n; i++)); do\n        temp+=arr[i]\n        if ((temp > max_sum_so_far)); then\n            max_sum_so_far=temp\n        fi\n    done\n\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            temp=0\n            for ((k=i; k<=j; k++)); do\n                temp+=arr[k]\n            done\n            if ((temp > max_sum_so_far)); then\n                max_sum_so_far=temp\n            fi\n        done\n    done\n\n    echo \"$max_sum_so_far\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n  local sum=0\n  local sum_arr=()\n  local sum_arr_len=0\n  local max_sum_arr=()\n  local max_sum_arr_len=0\n  local max_sum_arr_sum=0\n  local max_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_sum_start=0\n  local max_sum_end=0\n  local curr_sum_start=0\n  local curr_sum_end=0\n  local max_sum_start_index=0\n  local max_sum_end_index=0\n  local curr_sum_start_index=0\n  local curr_sum_end_index=0\n  local max_sum_k=0\n  local curr_sum_k=0\n  local max_sum_k_index=0\n  local curr_sum_k_index=0\n  local max_sum_k_start=0\n  local max_sum_k_end=0\n  local max_sum_k_start_index=0\n  local max_sum_k_end_index=0\n  local max_sum_k_start_k=0\n  local max_sum_k_end_k=0\n  local max_sum_k_start_k_index=0\n  local max_sum_k_end_k_index=0\n  local max_sum_k_start_k_start=0\n  local max_sum_k_start_k_end=0\n  local max_sum_k_start_k_start_index=0\n  local max_sum_k_start_k_end_index=0\n  local max_sum_k_end_k_start=0\n  local max_sum_k_end_k_end=0\n  local max_sum_k_end_k_start_index=0\n  local max_sum_k_end_k_end_index=0\n  local max_sum_k_start_k_start_k=0\n  local max_sum_k_start_k_end_k=0\n  local max_sum_k_start_k_start_k_index=0\n  local max_sum_k_start_k_end_k_index=0\n",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k_sum=0\n  local k_max_sum=0\n  local k_sum_arr=()\n  local k_max_sum_arr=()\n  local k_sum_arr_len=0\n  local k_max_sum_arr_len=0\n  local k_sum_arr_idx=0\n  local k_max_sum_arr_idx=0\n  local k_sum_arr_idx_len=0\n  local k_max_sum_arr_idx_len=0\n  local k_max_sum_arr_idx_len_sum=0\n  local k_max_sum_arr_idx_len_sum_arr=()\n  local k_max_sum_arr_idx_len_sum_arr_len=0\n  local k_max_sum_arr_idx_len_sum_arr_idx=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum_arr=()\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum_arr_len=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum_arr_idx=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum_arr_idx_len=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum_arr_idx_len_sum=0\n  local k_max_sum_arr_idx_len_sum_arr_idx_len_sum_arr_idx_",
    "  local list=($1)\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local l=0\n  local m=0\n\n  for ((i=0; i<n; i++)); do\n    sum=0\n    for ((j=i; j<n; j++)); do\n      sum=$((sum + list[j]))\n      if ((sum > max_sum)); then\n        max_sum=$sum\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    sum=0\n    for ((j=i; j<n; j++)); do\n      sum=$((sum + list[j]))\n    done\n    l=$((l + sum))\n  done\n\n  m=$((l * k))\n\n  if ((m > max_sum)); then\n    max_sum=$m\n  fi\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    done\n\n    echo $((max_sum * k))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_curr_sum=0\n  local k_max_sum=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=$((curr_sum + arr[i]))\n    if [ $curr_sum -lt 0 ]; then\n      curr_sum=0\n      j=$((i + 1))\n    fi\n    if [ $curr_sum -gt $max_sum ]; then\n      max_sum=$curr_sum\n    fi\n    i=$((i + 1))\n  done\n\n  if [ $k -eq 1 ]; then\n    echo $max_sum\n    return\n  fi\n\n  k_i=0\n  k_j=0\n  k_curr_sum=0\n  k_max_sum=0\n  while [ $k_i -lt $n ]; do\n    k_curr_sum=$((k_curr_sum + arr[k_i]))\n    if [ $k_curr_sum -lt 0 ]; then\n      k_curr_sum=0\n      k_j=$((k_i + 1))\n    fi\n    if [ $k_curr_sum -gt $k_max_sum ]; then\n      k_max_sum=$k_curr_sum\n    fi\n    k_i=$((k_i + 1))\n  done\n\n  echo $((max_sum + ((k - 2) * k_max_sum)))",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_sum=0\n    local k_curr_sum=0\n\n    for ((i = 0; i < n; i++)); do\n        curr_sum=0\n        for ((j = i; j < n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n                k_i=$i\n                k_j=$j\n            fi\n        done\n    done\n\n    for ((i = 0; i < k; i++)); do\n        k_curr_sum=0\n        for ((j = k_i; j <= k_j; j++)); do\n            k_curr_sum=$((k_curr_sum + arr[j]))\n        done\n        k_sum=$((k_sum + k_curr_sum))\n    done\n\n    echo $k_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local max_index=0\n    local min_index=0\n    local max_wrap=0\n    local min_wrap=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n        if ((arr[i] > max_val)); then\n            max_val=${arr[i]}\n            max_index=$i\n        fi\n        if ((arr[i] < min_val)); then\n            min_val=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    max_wrap=$((sum - min_val))\n    min_wrap=$((sum - max_val))\n\n    if ((k == 1)); then\n        curr_sum=0\n        for ((i=0; i<n; i++)); do\n            curr_sum=$((curr_sum + arr[i]))\n            if ((curr_sum < 0)); then\n                curr_sum=0\n            fi\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n    elif ((k == 2)); then\n        curr_sum=0\n        for ((i=0; i<n; i++)); do\n            curr_sum=$((curr_sum + arr[i]))\n            if ((curr_sum < 0)); then\n                curr_sum=0\n            fi\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n        done\n        curr_sum=0\n        for ((i=n-1; i>=0; i--)); do\n            curr_sum=$((curr_sum + arr[i]))\n            if ((curr_sum < 0)); then\n                curr_sum=0\n            fi\n            if ((cur",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local i\n    local j\n    local sum\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + arr[j]))\n            max_ending_here=$((sum % k))\n            if ((max_so_far < max_ending_here)); then\n                max_so_far=$max_ending_here\n            fi\n        done\n    done\n    echo $max_so_far",
    "    local -a arr=($1)\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local m=0\n    local sum=0\n\n    for ((i=0; i<n; i++))\n    do\n        sum=$((sum + arr[i]))\n    done\n\n    max_sum=$((sum*k))\n    curr_sum=$sum\n\n    for ((i=1; i<n; i++))\n    do\n        curr_sum=$((curr_sum + arr[i-1] - arr[n-i]))\n        max_sum=$((max(max_sum, curr_sum + (k-2)*sum)))\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local sum_arr=()\n    local max_arr=()\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n\n    max_sum=$((sum * k))\n    curr_sum=$sum\n\n    for ((i=0; i<n; i++)); do\n        sum_arr[i]=$((sum_arr[i] + arr[i]))\n    done\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        curr_sum=$((curr_sum - (n * arr[i])))\n\n        if [[ $curr_sum -gt $max_sum ]]; then\n            max_sum=$curr_sum\n        fi\n    done\n\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local min_sum=0\n    local max_prefix_sum=0\n    local min_prefix_sum=0\n    local total_sum=0\n\n    for (( i=0; i<n; i++ )); do\n        total_sum=$(( total_sum + arr[i] ))\n    done\n\n    for (( i=0; i<n; i++ )); do\n        curr_sum=$(( curr_sum + arr[i] ))\n        max_prefix_sum=$(( max_prefix_sum + arr[i] ))\n        min_prefix_sum=$(( min_prefix_sum + arr[i] ))\n        if [[ $max_prefix_sum -lt 0 ]]; then\n            max_prefix_sum=0\n        fi\n        if [[ $min_prefix_sum -gt 0 ]]; then\n            min_prefix_sum=0\n        fi\n        max_sum=$(( max_sum + max_prefix_sum ))\n        min_sum=$(( min_sum + min_prefix_sum ))\n    done\n\n    if [[ $k -eq 1 ]]; then\n        echo $max_sum\n        return\n    fi\n\n    if [[ $total_sum -gt 0 ]]; then\n        echo $(( (k*max_sum) - min_sum ))\n    else\n        echo $max_sum\n    fi",
    "  local -r arr=($1)\n  local -r k=$2\n  local -r n=$3\n  local -i max_sum=0\n  local -i curr_sum=0\n  local -i i=0\n  local -i j=0\n  local -i l=0\n  local -i r=0\n  local -i sum=0\n  local -i max_left=0\n  local -i max_right=0\n  local -i left_sum=0\n  local -i right_sum=0\n  local -i sum_i=0\n  local -i sum_j=0\n  local -i sum_k=0\n\n  for ((i=0; i<n; i++))\n  do\n    curr_sum+=arr[i]\n  done\n\n  max_sum=curr_sum\n\n  for ((i=1; i<k; i++))\n  do\n    for ((j=0; j<n; j++))\n    do\n      curr_sum+=arr[j]\n    done\n\n    if ((curr_sum > max_sum))\n    then\n      max_sum=curr_sum\n    fi\n  done\n\n  for ((i=0; i<n; i++))\n  do\n    sum+=arr[i]\n  done\n\n  max_left=0\n  max_right=n-1\n  left_sum=arr[0]\n  right_sum=arr[n-1]\n\n  for ((i=1; i<n; i++))\n  do\n    sum_i=arr[i]\n    sum_j=arr[n-1-i]\n\n    if ((sum_i > left_sum))\n    then\n      left_sum=sum_i\n      max_left=i\n    fi\n\n    if ((sum_j > right_sum))\n    then\n      right_sum=sum_j\n      max_right=n-1-i\n    fi\n  done\n\n  if ((max_left > max_right))\n  then\n    l=max_right\n    r=max_left\n  else\n    l=max_left\n    r=max_right\n",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local sum=0\n  local max_left=0\n  local max_right=0\n  local max_left_tmp=0\n  local max_right_tmp=0\n  local sum_tmp=0\n\n  for ((i=0; i<n; i++)) do\n    curr_sum+=arr[i]\n  done\n  max_sum=$curr_sum\n\n  for ((i=1; i<k; i++)) do\n    for ((j=0; j<n; j++)) do\n      curr_sum+=arr[j]\n    done\n    if ((curr_sum > max_sum)); then\n      max_sum=$curr_sum\n    fi\n  done\n\n  for ((i=0; i<n; i++)) do\n    sum+=arr[i]\n  done\n\n  for ((i=0; i<n; i++)) do\n    sum_tmp+=arr[i]\n    if ((sum_tmp > sum)); then\n      sum=$sum_tmp\n      max_left_tmp=$i\n    fi\n  done\n\n  for ((i=n-1; i>=0; i--)) do\n    sum_tmp+=arr[i]\n    if ((sum_tmp > sum)); then\n      sum=$sum_tmp\n      max_right_tmp=$i\n    fi\n  done\n\n  if ((max_left_tmp > max_right_tmp)); then\n    max_left=$max_left_tmp\n    max_right=$max_right_tmp\n  else\n    max_left=$max_right_tmp\n    max_right=$max_left_tmp\n  fi\n\n  for ((i=0; i<n; i++)) do\n    if ((i < max_left || i > max_right)); then\n      curr_sum+=arr[i]\n    fi\n  done\n\n  if ((curr_sum > max_sum)); then\n    max_sum=$",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_curr_sum=0\n  local k_max_sum=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    k_curr_sum=0\n    for ((j=i; j<n; j++)); do\n      k_curr_sum=$((k_curr_sum + arr[j]))\n      if ((k_curr_sum > k_max_sum)); then\n        k_max_sum=$k_curr_sum\n        k_i=$i\n        k_j=$j\n      fi\n    done\n  done\n\n  for ((i=0; i<k-2; i++)); do\n    for ((j=k_i; j<=k_j; j++)); do\n      arr[j]=$((arr[j] + arr[j-n]))\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local mod=$3\n    local -i max_sum=0\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i max_prefix_sum=0\n    local -i min_prefix_sum=0\n    local -i prefix_sum=0\n    local -i max_suffix_sum=0\n    local -i min_suffix_sum=0\n    local -i suffix_sum=0\n    local -i curr_sum=0\n    local -i curr_prefix_sum=0\n    local -i curr_suffix_sum=0\n    local -i curr_min_prefix_sum=0\n    local -i curr_max_prefix_sum=0\n    local -i curr_min_suffix_sum=0\n    local -i curr_max_suffix_sum=0\n    local -i curr_max_sum=0\n    local -i curr_min_sum=0\n    local -i curr_sum=0\n    local -i curr_prefix_sum=0\n    local -i curr_suffix_sum=0\n    local -i curr_min_prefix_sum=0\n    local -i curr_max_prefix_sum=0\n    local -i curr_min_suffix_sum=0\n    local -i curr_max_suffix_sum=0\n    local -i curr_max_sum=0\n    local -i curr_min_sum=0\n    local -i curr_sum=0\n    local -i curr_prefix_sum=0\n    local -i curr_suffix_sum=0\n    local -i curr_min_prefix_sum=0\n    local -i curr_max_prefix_sum=0\n    local -i curr_min_suffix_sum=0\n    local -i curr_max_suffix_sum=0\n    local -i curr_max_sum=0\n    local -i curr_min_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local curr_k=0\n    local curr_i=0\n    local curr_j=0\n    local curr_l=0\n    local curr_r=0\n    local sum_arr=()\n    local sum_arr_len=0\n    local sum_arr_i=0\n    local sum_arr_j=0\n    local sum_arr_k=0\n    local sum_arr_l=0\n    local sum_arr_r=0\n    local sum_arr_sum=0\n    local sum_arr_max_sum=0\n    local sum_arr_max_i=0\n    local sum_arr_max_j=0\n    local sum_arr_max_k=0\n    local sum_arr_max_l=0\n    local sum_arr_max_r=0\n    local sum_arr_curr_sum=0\n    local sum_arr_curr_i=0\n    local sum_arr_curr_j=0\n    local sum_arr_curr_k=0\n    local sum_arr_curr_l=0\n    local sum_arr_curr_r=0\n    local sum_arr_curr_max_sum=0\n    local sum_arr_curr_max_i=0\n    local sum_arr_curr_max_j=0\n    local sum_arr_curr_max_k=0\n    local sum_arr_curr_max_l=0\n    local sum_arr_curr_max_r=0\n    local sum_arr_curr_max_sum_i=0\n    local sum_arr_curr_max_sum_j=0\n    local sum_arr_curr_max_sum_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local curr_k=0\n  local curr_i=0\n  local curr_j=0\n  local sum=0\n  local max_sum_k=0\n  local max_sum_i=0\n  local max_sum_j=0\n  local max_sum_k_i=0\n  local max_sum_k_j=0\n  local max_sum_i_j=0\n  local max_sum_k_i_j=0\n  local sum_k=0\n  local sum_i=0\n  local sum_j=0\n  local sum_k_i=0\n  local sum_k_j=0\n  local sum_i_j=0\n  local sum_k_i_j=0\n  local max_sum_k_i_j_k=0\n  local max_sum_k_i_j_i=0\n  local max_sum_k_i_j_j=0\n  local sum_k_i_j_k=0\n  local sum_k_i_j_i=0\n  local sum_k_i_j_j=0\n\n  for ((k=0; k<$2; k++)); do\n    for ((i=0; i<$3; i++)); do\n      for ((j=i; j<$3; j++)); do\n        sum=0\n        for ((curr_k=0; curr_k<$2; curr_k++)); do\n          for ((curr_i=i; curr_i<=j; curr_i++)); do\n            sum=$((sum + arr[curr_k * n + curr_i]))\n          done\n        done\n        if ((sum > max_sum)); then\n          max_sum=$sum\n          max_k=$k\n          max_i=$i\n         ",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum_arr=()\n\n    while [ $i -lt $n ]; do\n        curr_sum=$((curr_sum + arr[$i]))\n        sum_arr+=($curr_sum)\n        i=$((i + 1))\n    done\n\n    max_sum=${sum_arr[-1]}\n    i=0\n    while [ $i -lt $n ]; do\n        curr_sum=$((curr_sum + arr[$i] * (k - 1)))\n        max_sum=$((max_sum > curr_sum ? max_sum : curr_sum))\n        i=$((i + 1))\n    done\n\n    echo $max_sum",
    "  local -a arr=($1)\n  local k=$2\n  local n=${#arr[@]}\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=0\n    j=$i\n    while [ $j -lt $n ]; do\n      curr_sum=$((curr_sum + arr[j]))\n      if [ $curr_sum -gt $max_sum ]; then\n        max_sum=$curr_sum\n      fi\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  echo $((max_sum * k))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local sum=0\n  local max_val=0\n  local min_val=0\n  local min_sum=0\n  local max_prefix=0\n  local min_prefix=0\n  local max_suffix=0\n  local min_suffix=0\n\n  for ((i=0; i<n; i++)); do\n    sum+=${arr[i]}\n    max_val=$((max_val>${arr[i]}?max_val:${arr[i]}))\n    min_val=$((min_val<${arr[i]}?min_val:${arr[i]}))\n  done\n\n  if [[ $k -eq 1 ]]; then\n    max_sum=$sum\n  elif [[ $max_val -le 0 ]]; then\n    max_sum=$max_val\n  elif [[ $min_val -ge 0 ]]; then\n    max_sum=$((min_val*k))\n  else\n    max_prefix=$min_prefix=$min_suffix=$max_suffix=${arr[0]}\n    curr_sum=${arr[0]}\n    for ((i=1; i<n; i++)); do\n      curr_sum=$((curr_sum+${arr[i]}))\n      max_prefix=$((max_prefix>curr_sum?max_prefix:curr_sum))\n      min_prefix=$((min_prefix<curr_sum?min_prefix:curr_sum))\n    done\n\n    curr_sum=${arr[n-1]}\n    for ((i=n-2; i>=0; i--)); do\n      curr_sum=$((curr_sum+${arr[i]}))\n      max_suffix=$((max_suffix>curr_sum?max_suffix:curr_sum))\n      min_suffix=$((min_suffix<curr_sum?min_suffix:curr_sum))\n    done\n\n    max_sum=$((",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local sum_arr=()\n    local max_sum_arr=()\n    local max_sum_arr_len=0\n    local max_sum_arr_i=0\n    local max_sum_arr_j=0\n    local max_sum_arr_k=0\n    local max_sum_arr_sum=0\n    local max_sum_arr_sum_arr=()\n    local max_sum_arr_sum_arr_len=0\n    local max_sum_arr_sum_arr_i=0\n    local max_sum_arr_sum_arr_j=0\n    local max_sum_arr_sum_arr_k=0\n    local max_sum_arr_sum_arr_sum=0\n    local max_sum_arr_sum_arr_sum_arr=()\n    local max_sum_arr_sum_arr_sum_arr_len=0\n    local max_sum_arr_sum_arr_sum_arr_i=0\n    local max_sum_arr_sum_arr_sum_arr_j=0\n    local max_sum_arr_sum_arr_sum_arr_k=0\n    local max_sum_arr_sum_arr_sum_arr_sum=0\n    local max_sum_arr_sum_arr_sum_arr_sum_arr=()\n    local max_sum_arr_sum_arr_sum_arr_sum_arr_len=0\n    local max_sum_arr_sum_arr_sum_arr_sum_arr_i=0\n    local max_sum_arr_sum_arr_sum_arr_sum_arr_j=0\n    local max_sum_arr_sum_arr_sum_arr_sum_arr_k=0\n    local max_sum_arr_sum_arr_sum_arr_sum_arr_sum=0\n    local max_sum_arr_sum_arr_sum_arr_sum_arr_sum_arr=",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local sum=0\n  local max_val=0\n  local min_val=0\n  local min_sum=0\n  local max_prefix_sum=0\n  local min_prefix_sum=0\n  local total_sum=0\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum+arr[i]))\n    max_val=$((max_val>arr[i]?max_val:arr[i]))\n    min_val=$((min_val<arr[i]?min_val:arr[i]))\n  done\n\n  if [[ $max_val -le 0 ]]; then\n    echo $((max_val*k))\n    return\n  fi\n\n  if [[ $min_val >= 0 ]]; then\n    echo $((sum*k))\n    return\n  fi\n\n  total_sum=$sum\n  max_sum=$((sum*k))\n  max_prefix_sum=$sum\n  min_prefix_sum=$sum\n  min_sum=$sum\n\n  for ((i=1; i<k; i++)); do\n    curr_sum=0\n    for ((j=0; j<n; j++)); do\n      curr_sum=$((curr_sum+arr[j]))\n      max_prefix_sum=$((max_prefix_sum>curr_sum?max_prefix_sum:curr_sum))\n      min_prefix_sum=$((min_prefix_sum<curr_sum?min_prefix_sum:curr_sum))\n      max_sum=$((max_sum>max_prefix_sum?max_sum:max_prefix_sum))\n      min_sum=$((min_sum<min_prefix_sum?min_sum:min_prefix_sum))\n    done\n    max_prefix_sum=$((max_prefix_sum+total_sum))\n    min_prefix_sum=$((min_prefix_sum+total_sum))\n  done\n\n  echo $",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  echo $max_sum",
    "    local array=($1)\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local m=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + array[j]))\n            if ((sum > max_sum)); then\n                max_sum=$sum\n                l=$i\n                r=$j\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + array[j]))\n            if ((sum == max_sum)); then\n                m=$i\n                s=$j\n                break\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + array[j]))\n            if ((sum == max_sum)); then\n                t=$i\n                u=$j\n                break\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + array[j]))\n            if ((sum == max_sum)); then\n                v=$i\n                w=$j\n                break\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + array[j]))\n            if ((sum == max_sum)); then\n                x=$i\n                y",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local sum=0\n  local max_val=0\n  local min_val=0\n  local max_index=0\n  local min_index=0\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n    if ((arr[i] > max_val)); then\n      max_val=${arr[i]}\n      max_index=$i\n    fi\n    if ((arr[i] < min_val)); then\n      min_val=${arr[i]}\n      min_index=$i\n    fi\n  done\n\n  if ((k == 1)); then\n    max_sum=$sum\n  elif ((max_val <= 0)); then\n    max_sum=$max_val\n  elif ((min_val >= 0)); then\n    max_sum=$((sum * k))\n  else\n    local max_prefix_sum=0\n    local max_suffix_sum=0\n    local curr_prefix_sum=0\n    local curr_suffix_sum=0\n\n    for ((i=0; i<n; i++)); do\n      curr_prefix_sum=$((curr_prefix_sum + arr[i]))\n      if ((curr_prefix_sum > max_prefix_sum)); then\n        max_prefix_sum=$curr_prefix_sum\n      fi\n    done\n\n    for ((i=n-1; i>=0; i--)); do\n      curr_suffix_sum=$((curr_suffix_sum + arr[i]))\n      if ((curr_suffix_sum > max_suffix_sum)); then\n        max_suffix_sum=$curr_suffix_sum\n      fi\n    done\n\n    local mid_sum=$((sum - max_prefix_sum - max_suffix_sum))\n    max_sum=$((max_prefix_sum + max_suffix_sum + mid_sum * (k - 2)))\n  fi\n\n",
    "  local -a arr=(\"$@\")\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local m=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n  local max_i=0\n  local max_j=0\n  local max_m=0\n  local max_l=0\n  local max_r=0\n  local max_sum_i=0\n  local max_sum_j=0\n  local max_sum_m=0\n  local max_sum_l=0\n  local max_sum_r=0\n  local max_sum_sum=0\n  for ((i=0; i<n; i++))\n  do\n    for ((j=i; j<n; j++))\n    do\n      for ((m=0; m<k; m++))\n      do\n        for ((l=m*n+i; l<=m*n+j; l++))\n        do\n          sum=$((sum+arr[l]))\n        done\n        if ((sum>max_sum))\n        then\n          max_sum=$sum\n          max_i=$i\n          max_j=$j\n          max_m=$m\n          max_l=$l\n        fi\n        sum=0\n      done\n    done\n  done\n  echo \"max_sum=$max_sum\"\n  echo \"max_i=$max_i\"\n  echo \"max_j=$max_j\"\n  echo \"max_m=$max_m\"\n  echo \"max_l=$max_l\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local sum=0\n  local max_left=0\n  local max_right=0\n  local left_sum=0\n  local right_sum=0\n  local total_sum=0\n\n  for ((i=0; i<n; i++)); do\n    total_sum=$((total_sum + arr[i]))\n  done\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=$((curr_sum + arr[i]))\n    if ((curr_sum > max_sum)); then\n      max_sum=$curr_sum\n      max_left=$l\n      max_right=$i\n    fi\n\n    if ((curr_sum < 0)); then\n      curr_sum=0\n      l=$((i+1))\n    fi\n  done\n\n  left_sum=$((max_sum))\n  curr_sum=0\n  r=$((n-1))\n\n  for ((i=n-1; i>=0; i--)); do\n    curr_sum=$((curr_sum + arr[i]))\n    if ((curr_sum > left_sum)); then\n      left_sum=$curr_sum\n      max_left=$i\n      max_right=$r\n    fi\n\n    if ((curr_sum < 0)); then\n      curr_sum=0\n      r=$((i-1))\n    fi\n  done\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n    if ((sum > max_sum)); then\n      max_sum=$sum\n      max_left=$l\n      max_right=$i\n    fi\n\n    if ((sum < 0)); then\n      sum=0\n      l=$((i+1))\n    fi\n  done\n\n  if ((k == 1)); then\n    echo $max_sum\n    return\n  fi\n\n  if ((max",
    "    local -a arr=()\n    local -i k=$2\n    local -i n=$3\n    local -i i=0\n    local -i j=0\n    local -i max_sum=0\n    local -i curr_sum=0\n    local -i max_so_far=0\n    local -i max_ending_here=0\n    local -i max_ending_here_prev=0\n    local -i max_ending_here_curr=0\n    local -i max_ending_here_prev_prev=0\n    local -i max_ending_here_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "  local -a arr=()\n  local -i k\n  local -i n\n  local -i i\n  local -i j\n  local -i max_so_far\n  local -i max_ending_here\n  local -i sum\n  local -i max_sum\n  local -i max_i\n  local -i max_j\n\n  arr=($1)\n  k=$2\n  n=${#arr[@]}\n  max_so_far=${arr[0]}\n  max_ending_here=${arr[0]}\n  sum=0\n  max_sum=0\n  max_i=0\n  max_j=0\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n  done\n\n  for ((i=0; i<n; i++)); do\n    max_ending_here=$((max_ending_here + arr[i]))\n    if ((max_ending_here < 0)); then\n      max_ending_here=0\n    fi\n    if ((max_so_far < max_ending_here)); then\n      max_so_far=$max_ending_here\n      max_i=$i\n    fi\n  done\n\n  max_ending_here=0\n  for ((j=n-1; j>=0; j--)); do\n    max_ending_here=$((max_ending_here + arr[j]))\n    if ((max_ending_here < 0)); then\n      max_ending_here=0\n    fi\n    if ((max_so_far < max_ending_here)); then\n      max_so_far=$max_ending_here\n      max_j=$j\n    fi\n  done\n\n  if ((k == 1)); then\n    max_sum=$max_so_far\n  elif ((sum > 0)); then\n    max_sum=$(((k * sum) - (sum - max_so_far)))\n  else\n    max_sum=$max_so_far\n  fi\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local max_l=0\n    local max_r=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local curr_l=0\n    local curr_r=0\n    local curr_i=0\n    local curr_j=0\n    local curr_k=0\n    local sum=0\n    local max_sum_k=0\n    local max_sum_l=0\n    local max_sum_r=0\n    local max_sum_i=0\n    local max_sum_j=0\n    local max_sum_k=0\n    local curr_sum_k=0\n    local curr_sum_l=0\n    local curr_sum_r=0\n    local curr_sum_i=0\n    local curr_sum_j=0\n    local curr_sum_k=0\n    local sum_k=0\n    local sum_l=0\n    local sum_r=0\n    local sum_i=0\n    local sum_j=0\n    local sum_k=0\n    local max_sum_k=0\n    local max_sum_l=0\n    local max_sum_r=0\n    local max_sum_i=0\n    local max_sum_j=0\n    local max_sum_k=0\n    local curr_sum_k=0\n    local curr_sum_l=0\n    local curr_sum_r=0\n    local curr_sum_i=0\n    local curr_sum_j=0\n    local curr_sum_k=0\n    local sum_k=0\n    local sum_l=0\n    local sum_r=0\n    local sum_i=0\n    local sum_j=0\n    local sum_k=0\n    local max_sum_k=0\n   ",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local curr_k=0\n  local curr_i=0\n  local curr_j=0\n  local sum_arr=()\n  local sum=0\n  local max_sum_arr=()\n  local max_sum_arr_len=0\n  local max_sum_arr_k=0\n  local max_sum_arr_i=0\n  local max_sum_arr_j=0\n  local max_sum_arr_sum=0\n  local max_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_k=0\n  local max_sum_arr_sum_arr_i=0\n  local max_sum_arr_sum_arr_j=0\n  local max_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum_arr_k=0\n  local max_sum_arr_sum_arr_sum_arr_i=0\n  local max_sum_arr_sum_arr_sum_arr_j=0\n  local max_sum_arr_sum_arr_sum_arr_sum=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr=()\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_len=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_k=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_i=0\n  local max_sum_arr_sum_arr_sum_arr_sum_arr_j",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local k_mod\n    local k_mod_sum=0\n    local k_mod_max_sum=0\n    local k_mod_max_sum_index=0\n    local k_mod_curr_sum=0\n    local k_mod_curr_sum_index=0\n    local k_mod_curr_sum_index_end=0\n    local k_mod_curr_sum_index_end_max=0\n    local k_mod_curr_sum_index_end_max_index=0\n    local k_mod_curr_sum_index_end_max_index_end=0\n    local k_mod_curr_sum_index_end_max_index_end_max=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end_max=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end_max_index=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end_max_index_end=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end_max_index_end_max=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end_max_index_end_max_index=0\n    local k_mod_curr_sum_index_end_max_index_end_max_index_end_max_index_end_max_index_end=0\n    local k_mod_curr_sum_index_end_max_index_",
    "  local -a arr=()\n  local -i k=$2\n  local -i n=$3\n  local -i i=0\n  local -i j=0\n  local -i max_so_far=0\n  local -i max_ending_here=0\n  local -i max_element=0\n  local -i sum=0\n  local -i max_sub_array_sum=0\n  local -i max_sub_array_sum_repeated=0\n  local -i max_sub_array_sum_repeated_index=0\n  local -i max_sub_array_sum_repeated_length=0\n  local -i max_sub_array_sum_repeated_start=0\n  local -i max_sub_array_sum_repeated_end=0\n  local -i max_sub_array_sum_repeated_start_index=0\n  local -i max_sub_array_sum_repeated_end_index=0\n  local -i max_sub_array_sum_repeated_start_index_repeated=0\n  local -i max_sub_array_sum_repeated_end_index_repeated=0\n  local -i max_sub_array_sum_repeated_length_repeated=0\n  local -i max_sub_array_sum_repeated_start_repeated=0\n  local -i max_sub_array_sum_repeated_end_repeated=0\n  local -i max_sub_array_sum_repeated_index_repeated=0\n  local -i max_sub_array_sum_repeated_repeated=0\n  local -i max_sub_array_sum_repeated_repeated_repeated=0\n  local -i max_sub_array_sum_repeated_repeated_repeated_repeated=0\n  local -i max_sub_array_sum_repeated_repeated_repeated_repeated_repeated=0\n  local -i max_sub_array_sum_repeated_repeated_repeated_repeated_repeated_repeated=0\n  local -i max_sub_array_sum_repeated",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_curr_sum=0\n    local k_max_sum=0\n    local k_max_i=0\n    local k_max_j=0\n    local k_max_k=0\n    local k_max_n=0\n    local k_max_arr=()\n    local k_max_arr_sum=0\n    local k_max_arr_curr_sum=0\n    local k_max_arr_max_sum=0\n    local k_max_arr_max_i=0\n    local k_max_arr_max_j=0\n    local k_max_arr_max_k=0\n    local k_max_arr_max_n=0\n    local k_max_arr_max_arr=()\n    local k_max_arr_max_arr_sum=0\n    local k_max_arr_max_arr_curr_sum=0\n    local k_max_arr_max_arr_max_sum=0\n    local k_max_arr_max_arr_max_i=0\n    local k_max_arr_max_arr_max_j=0\n    local k_max_arr_max_arr_max_k=0\n    local k_max_arr_max_arr_max_n=0\n    local k_max_arr_max_arr_max_arr=()\n    local k_max_arr_max_arr_max_arr_sum=0\n    local k_max_arr_max_arr_max_arr_curr_sum=0\n    local k_max_arr_max_arr_max_arr_max_sum=0\n    local k_max_arr_max_arr_max_arr_max_i=0\n    local k_max_arr_max_arr_max_arr_max_j=0\n    local k_max_arr_max_arr_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local sum_of_all=0\n    local max_sub_array_sum=0\n    local min_sub_array_sum=0\n    local sum_of_all_mod_k=0\n\n    for ((i=0; i<n; i++)); do\n        sum_of_all=$((sum_of_all+arr[i]))\n    done\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum+arr[i]))\n        if ((curr_sum<0)); then\n            curr_sum=0\n        fi\n        if ((curr_sum>max_sum)); then\n            max_sum=$curr_sum\n        fi\n    done\n\n    if ((sum_of_all>max_sum)); then\n        max_sub_array_sum=$sum_of_all\n    else\n        max_sub_array_sum=$max_sum\n    fi\n\n    for ((i=0; i<n; i++)); do\n        sum_of_all_mod_k=$((sum_of_all_mod_k+arr[i]))\n    done\n\n    sum_of_all_mod_k=$((sum_of_all_mod_k%k))\n\n    if ((sum_of_all_mod_k==0)); then\n        echo $((max_sub_array_sum*k))\n        return\n    fi\n\n    curr_sum=0\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum+arr[i]))\n        if ((curr_sum>min_sub_array_sum)); then\n            min_sub_array_sum=$curr_sum\n        fi\n        if ((curr_sum<0)); then\n            curr_sum=0\n        fi\n    done\n\n    echo $((max_sub_array_sum+(k-2)*min_sub_array_sum))",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local max_element=${arr[0]}\n    local i\n    local j\n    local sum\n    local max_sum\n    local max_index\n    local max_i\n    local max_j\n    local max_k\n    # Find the max subarray sum in the original array\n    for ((i=0;i<n;i++)); do\n        max_element=${arr[i]}\n        max_ending_here=0\n        for ((j=i;j<n;j++)); do\n            max_ending_here=$((max_ending_here+arr[j]))\n            if ((max_ending_here>max_so_far)); then\n                max_so_far=$max_ending_here\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    # Find the max subarray sum in the repeated array\n    for ((k=1;k<k;k++)); do\n        sum=0\n        for ((i=0;i<n;i++)); do\n            sum=$((sum+arr[i]))\n        done\n        if ((sum>max_so_far)); then\n            max_so_far=$sum\n            max_k=$k\n            max_i=0\n            max_j=$((n-1))\n        fi\n    done\n    echo \"$max_so_far\"",
    "    local -a arr=($1)\n    local k=$2\n    local n=${#arr[@]}\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local max_index=0\n    local min_index=0\n    local max_wrap=0\n    local min_wrap=0\n    local wrap=0\n    local max_wrap_sum=0\n    local min_wrap_sum=0\n    local wrap_sum=0\n    local max_wrap_index=0\n    local min_wrap_index=0\n    local wrap_index=0\n    local max_wrap_val=0\n    local min_wrap_val=0\n    local wrap_val=0\n    local max_wrap_k=0\n    local min_wrap_k=0\n    local wrap_k=0\n    local max_wrap_n=0\n    local min_wrap_n=0\n    local wrap_n=0\n    local max_wrap_i=0\n    local min_wrap_i=0\n    local wrap_i=0\n    local max_wrap_j=0\n    local min_wrap_j=0\n    local wrap_j=0\n    local max_wrap_sum_k=0\n    local min_wrap_sum_k=0\n    local wrap_sum_k=0\n    local max_wrap_sum_n=0\n    local min_wrap_sum_n=0\n    local wrap_sum_n=0\n    local max_wrap_sum_i=0\n    local min_wrap_sum_i=0\n    local wrap_sum_i=0\n    local max_wrap_sum_j=0\n    local min_wrap_sum_j=0\n    local wrap_sum_j=0\n    local max_wrap_sum_k_n=0\n    local min_wrap_sum_k_n=0\n    local wrap_sum_k_n=0\n    local max_wrap_sum_k_i=0\n    local min_wrap_sum_k",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local sum=0\n    local i\n    local j\n    local m\n    local l\n    local r\n    local max_left\n    local max_right\n    local max_l\n    local max_r\n    local max_i\n    local max_j\n    local max_m\n    local max_l\n    local max_r\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=0\n            for ((m=0; m<k; m++)); do\n                l=$((m*n+i))\n                r=$((m*n+j))\n                for ((l; l<=r; l++)); do\n                    sum=$((sum+arr[l]))\n                done\n            done\n            if ((sum>max_sum)); then\n                max_sum=$sum\n                max_left=$i\n                max_right=$j\n                max_l=$l\n                max_r=$r\n                max_i=$i\n                max_j=$j\n                max_m=$m\n            fi\n        done\n    done\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local sum_arr=()\n  local max_sum_arr=()\n\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      sum_arr[j]=$curr_sum\n    done\n    if ((i == 0)); then\n      max_sum=${sum_arr[-1]}\n      max_sum_arr=(\"${sum_arr[@]}\")\n    else\n      for ((k_i=0; k_i<n; k_i++)); do\n        max_sum_arr[k_i]=$((max_sum_arr[k_i] + sum_arr[k_i]))\n      done\n      max_sum=${max_sum_arr[-1]}\n    fi\n  done\n\n  for ((k_i=0; k_i<n; k_i++)); do\n    for ((k_j=k_i; k_j<n; k_j++)); do\n      if ((max_sum_arr[k_j] > max_sum)); then\n        max_sum=${max_sum_arr[k_j]}\n      fi\n    done\n  done\n\n  echo $max_sum",
    "    local -a arr\n    local -i k\n    local -i n\n    local -i max_sum\n    local -i max_so_far\n    local -i max_ending_here\n    local -i i\n    local -i j\n    local -i sum\n    local -i start\n    local -i end\n    local -i s\n    local -i e\n    local -i max_start\n    local -i max_end\n    local -i max_len\n    local -i len\n    local -i max_len_start\n    local -i max_len_end\n    local -i max_len_sum\n    local -i max_len_so_far\n    local -i max_len_ending_here\n    local -i max_len_start_here\n    local -i max_len_end_here\n    local -i max_len_sum_here\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    n=\"${#arr[@]}\"\n    max_sum=0\n    max_so_far=0\n    max_ending_here=0\n    i=0\n    j=0\n    sum=0\n    start=0\n    end=0\n    s=0\n    e=0\n    max_start=0\n    max_end=0\n    max_len=0\n    len=0\n    max_len_start=0\n    max_len_end=0\n    max_len_sum=0\n    max_len_so_far=0\n    max_len_ending_here=0\n    max_len_start_here=0\n    max_len_end_here=0\n    max_len_sum_here=0\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum+=arr[j]\n            if ((sum > max_sum)); then\n                max_sum=sum\n                start=i\n                end=j\n            fi\n        done\n    done\n\n    for ((i=0; i<k; i++)); do\n        for",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local k_i=0\n    local k_j=0\n    local k_sum=0\n    local k_curr_sum=0\n    local k_max_sum=0\n    local k_max_i=0\n    local k_max_j=0\n    local k_max_k=0\n    local k_max_sum_i=0\n    local k_max_sum_j=0\n    local k_max_sum_k=0\n    local k_max_sum_sum=0\n    local k_max_sum_curr_sum=0\n    local k_max_sum_max_sum=0\n    local k_max_sum_i=0\n    local k_max_sum_j=0\n    local k_max_sum_k=0\n    local k_max_sum_max_i=0\n    local k_max_sum_max_j=0\n    local k_max_sum_max_k=0\n    local k_max_sum_max_sum=0\n    local k_max_sum_max_curr_sum=0\n    local k_max_sum_max_max_sum=0\n    local k_max_sum_max_max_i=0\n    local k_max_sum_max_max_j=0\n    local k_max_sum_max_max_k=0\n    local k_max_sum_max_max_sum=0\n    local k_max_sum_max_max_curr_sum=0\n    local k_max_sum_max_max_max_sum=0\n    local k_max_sum_max_max_max_i=0\n    local k_max_sum_max_max_max_j=0\n    local k_max_sum_max_max_max_k=0\n    local k_max_sum_max_max_max_sum=0\n    local k_max_sum_max_max_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local curr_i=0\n    local curr_j=0\n    local curr_k=0\n    local sum=0\n    local max_sum_k=0\n    local max_sum_i=0\n    local max_sum_j=0\n    local max_sum_k_i=0\n    local max_sum_k_j=0\n    local max_sum_k_i_j=0\n    local max_sum_k_i_j_sum=0\n    local max_sum_k_i_j_sum_i=0\n    local max_sum_k_i_j_sum_j=0\n    local max_sum_k_i_j_sum_k=0\n    local max_sum_k_i_j_sum_sum=0\n    local max_sum_k_i_j_sum_i_j=0\n    local max_sum_k_i_j_sum_i_j_k=0\n    local max_sum_k_i_j_sum_i_j_sum=0\n    local max_sum_k_i_j_sum_i_j_k_sum=0\n    local max_sum_k_i_j_sum_i_j_k_sum_i=0\n    local max_sum_k_i_j_sum_i_j_k_sum_j=0\n    local max_sum_k_i_j_sum_i_j_k_sum_k=0\n    local max_sum_k_i_j_sum_i_j_k_sum_sum=0\n    local max_sum_k_i_j_sum_i_j_k_sum_i_j=0\n    local max_sum_k_i_j_sum_i_j_k_sum_i_j_k=0",
    "  local -a arr=($1)\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=0\n    j=$i\n    while [ $j -lt $n ]; do\n      curr_sum=$((curr_sum + arr[j]))\n      if [ $curr_sum -gt $max_sum ]; then\n        max_sum=$curr_sum\n      fi\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  l=$((n * k))\n  i=0\n  while [ $i -lt $n ]; do\n    curr_sum=0\n    j=$i\n    while [ $j -lt $l ]; do\n      curr_sum=$((curr_sum + arr[j % n]))\n      if [ $curr_sum -gt $max_sum ]; then\n        max_sum=$curr_sum\n      fi\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local curr_k=0\n  local sum_arr=()\n  local sum_arr_len=0\n  local sum_arr_i=0\n  local sum_arr_j=0\n  local sum_arr_k=0\n  local sum_arr_sum=0\n  local sum_arr_max_sum=0\n  local sum_arr_max_i=0\n  local sum_arr_max_j=0\n  local sum_arr_max_k=0\n  local sum_arr_curr_sum=0\n  local sum_arr_curr_i=0\n  local sum_arr_curr_j=0\n  local sum_arr_curr_k=0\n\n  # Find the max sum of the array\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  # Find the max sum of the array repeated k times\n  for ((k=1; k<=k; k++)); do\n    curr_sum=0\n    for ((i=0; i<n; i++)); do\n      curr_sum=$((curr_sum + arr[i]))\n      if ((curr_sum > max_sum)); then\n        max_sum=$curr_sum\n        max_i=0\n        max_j=$((i + 1))\n        max_k=$k\n      fi\n    done\n  done\n\n  # Find the max sum of the array repeated k times\n  # using Kadane's algorithm\n  for ((k=",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local max_element=${arr[0]}\n  local i=0\n  local j=0\n  local max_index=0\n  local min_index=0\n  local max_index_temp=0\n  local min_index_temp=0\n  local max_element_temp=0\n  local max_element_index=0\n  local min_element=${arr[0]}\n  local min_element_index=0\n  local max_sum=0\n  local min_sum=0\n  local sum=0\n  local sum_temp=0\n  local max_sum_temp=0\n  local min_sum_temp=0\n  local sum_repeated=0\n  local max_sum_repeated=0\n  local min_sum_repeated=0\n  local max_sum_repeated_temp=0\n  local min_sum_repeated_temp=0\n  local max_sum_repeated_index=0\n  local min_sum_repeated_index=0\n  local max_sum_repeated_index_temp=0\n  local min_sum_repeated_index_temp=0\n  local max_sum_repeated_element=0\n  local min_sum_repeated_element=0\n  local max_sum_repeated_element_index=0\n  local min_sum_repeated_element_index=0\n  local max_sum_repeated_element_index_temp=0\n  local min_sum_repeated_element_index_temp=0\n  local max_sum_repeated_element_temp=0\n  local min_sum_repeated_element_temp=0\n  local max_sum_repeated_element_temp_index=0\n  local min_sum_repeated_element_temp_index=0\n  local max_sum_repeated_element_temp_index_temp=0\n  local min_sum_repeated_element_temp_index_temp=0\n  local max_sum_repeated_element_temp_index",
    "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local sum=0\n    local i\n    local j\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + arr[j]))\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        done\n    done\n    echo $((max_sum * k))",
    "    local -a arr=()\n    local -i k=$2\n    local -i max_sum=$3\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i max_len=0\n    local -i max_i=0\n    local -i max_j=0\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    len=${#arr[@]}\n    max_len=$((len * k))\n\n    for ((i=0; i<max_len; i++)); do\n        for ((j=i; j<max_len; j++)); do\n            sum=$((sum + arr[j % len]))\n            if ((sum > max_sum)); then\n                max_sum=$sum\n                max_i=$i\n                max_j=$j\n            fi\n        done\n        sum=0\n    done\n\n    echo \"$max_sum\"",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local max_index=0\n    local min_index=0\n    local max_wrap=0\n    local min_wrap=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        total_sum=$((total_sum + arr[i]))\n        if ((arr[i] > max_val)); then\n            max_val=${arr[i]}\n            max_index=$i\n        fi\n        if ((arr[i] < min_val)); then\n            min_val=${arr[i]}\n            min_index=$i\n        fi\n    done\n\n    if ((k == 1)); then\n        max_sum=$total_sum\n    else\n        for ((i=0; i<n; i++)); do\n            curr_sum=$((curr_sum + arr[i]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n            fi\n            if ((curr_sum < 0)); then\n                curr_sum=0\n            fi\n        done\n\n        max_wrap=$((total_sum - min_val))\n        min_wrap=$((total_sum - max_val))\n\n        if ((max_wrap > max_sum)); then\n            max_sum=$max_wrap\n        fi\n        if ((min_wrap > max_sum)); then\n            max_sum=$min_wrap\n        fi\n    fi\n\n    echo $max_sum",
    "    local -a arr=($1)\n    local k=$2\n    local n=${#arr[@]}\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_end_here=0\n    local min_end_here=0\n    local all_neg=1\n    local min_neg=${arr[0]}\n    local max_neg=${arr[0]}\n    local max_neg_index=0\n    local min_neg_index=0\n    local min_neg_sum=0\n    local max_neg_sum=0\n    local max_neg_sum_index=0\n    local min_neg_sum_index=0\n    local max_neg_sum_count=0\n    local min_neg_sum_count=0\n    local max_neg_sum_count_index=0\n    local min_neg_sum_count_index=0\n    local max_neg_sum_count_sum=0\n    local min_neg_sum_count_sum=0\n    local max_neg_sum_count_sum_index=0\n    local min_neg_sum_count_sum_index=0\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -ge 0 ]]; then\n            all_neg=0\n            break\n        fi\n        if [[ ${arr[$i]} -gt $max_neg ]]; then\n            max_neg=${arr[$i]}\n            max_neg_index=$i\n        fi\n        if [[ ${arr[$i]} -lt $min_neg ]]; then\n            min_neg=${arr[$i]}\n            min_neg_index=$i\n        fi\n    done\n\n    if [[ $all_neg -eq 1 ]]; then\n        echo $max_neg\n        return\n    fi\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[$i]} -ge 0 ]]; then\n            curr_sum=$((curr_sum + ${arr[$i]}))\n        else\n            if [[ $curr_sum -gt $",
    "    local -n _arr=$1\n    local _k=$2\n    local _n=$3\n    local _max_sum=0\n    local _curr_sum=0\n    local _i=0\n    local _j=0\n    local _l=0\n    local _m=0\n    local _sum=0\n    local _max_val=0\n    local _min_val=0\n    local _max_prefix_sum=0\n    local _min_prefix_sum=0\n    local _max_suffix_sum=0\n    local _min_suffix_sum=0\n    local _total_sum=0\n\n    for (( _i=0; _i<_n; _i++ )); do\n        _total_sum=$(( _total_sum + _arr[_i] ))\n        if (( _arr[_i] > _max_val )); then\n            _max_val=${_arr[_i]}\n        fi\n        if (( _arr[_i] < _min_val )); then\n            _min_val=${_arr[_i]}\n        fi\n        _curr_sum=$(( _curr_sum + _arr[_i] ))\n        if (( _curr_sum > _max_sum )); then\n            _max_sum=$_curr_sum\n        fi\n        if (( _curr_sum < 0 )); then\n            _curr_sum=0\n        fi\n        _sum=$(( _sum + _arr[_i] ))\n        if (( _sum > _max_prefix_sum )); then\n            _max_prefix_sum=$_sum\n        fi\n        if (( _sum < 0 )); then\n            _sum=0\n        fi\n    done\n    _sum=0\n    for (( _i=_n-1; _i>=0; _i-- )); do\n        _sum=$(( _sum + _arr[_i] ))\n        if (( _sum > _max_suffix_sum )); then\n            _max_suffix_sum=$_sum\n        fi\n        if (( _sum < 0 )); then\n            _sum=0\n        fi\n    done\n    _sum=0\n    for (( _i=_n-1; _",
    "    local -n arr=$1\n    local k=$2\n    local max_sum=$3\n    local sum=0\n    local max_ending_here=0\n\n    for i in \"${arr[@]}\"; do\n        max_ending_here=$((max_ending_here + i))\n        if [[ max_ending_here -lt 0 ]]; then\n            max_ending_here=0\n        fi\n        if [[ max_ending_here -gt max_sum ]]; then\n            max_sum=$max_ending_here\n        fi\n        sum=$((sum + i))\n    done\n\n    if [[ sum -lt 0 ]]; then\n        echo $max_sum\n    else\n        echo $(((sum * k) + max_sum))\n    fi",
    "    local -a arr=()\n    local -i k=$2\n    local -i n=$3\n    local -i i\n    local -i j\n    local -i max_so_far\n    local -i max_ending_here\n    local -i sum\n    local -i max_sum\n    local -i max_i\n    local -i max_j\n    local -i max_k\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    max_so_far=${arr[0]}\n    max_ending_here=${arr[0]}\n    max_sum=${arr[0]}\n    max_i=0\n    max_j=0\n    max_k=0\n\n    for ((i=1; i<n; i++)); do\n        max_ending_here=$((max_ending_here + arr[i]))\n        if ((max_ending_here < arr[i])); then\n            max_ending_here=${arr[i]}\n            max_i=$i\n        fi\n        if ((max_so_far < max_ending_here)); then\n            max_so_far=${max_ending_here}\n            max_j=$i\n        fi\n    done\n\n    for ((i=0; i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n            sum=$((sum + arr[j]))\n            if ((sum > max_sum)); then\n                max_sum=${sum}\n                max_i=$i\n                max_j=$j\n                max_k=0\n            fi\n        done\n    done\n\n    if ((max_sum > max_so_far)); then\n        max_so_far=${max_sum}\n    fi\n\n    if ((k > 1)); then\n        sum=0\n        for ((i=0; i<n; i++)); do\n            sum=$((sum + arr[i]))\n        done\n        if ((sum > 0)); then\n            max_so_far=$((max_so_far + (k-2)*sum))\n        fi\n    fi\n\n    echo \"${max_so_far}\"",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_sum=0\n    local min_sum=0\n    local min_sum_index=0\n    local max_sum_index=0\n    local min_sum_so_far=0\n    local max_sum_so_far=0\n    local max_sum_index_so_far=0\n    local min_sum_index_so_far=0\n    local max_sum_index_ending_here=0\n    local min_sum_index_ending_here=0\n    local max_sum_ending_here=0\n    local min_sum_ending_here=0\n    local max_sum_index_ending_here=0\n    local min_sum_index_ending_here=0\n    local max_sum_index_so_far=0\n    local min_sum_index_so_far=0\n    local max_sum_so_far=0\n    local min_sum_so_far=0\n    local max_sum_ending_here=0\n    local min_sum_ending_here=0\n    local max_sum_index_ending_here=0\n    local min_sum_index_ending_here=0\n    local max_sum_index_so_far=0\n    local min_sum_index_so_far=0\n    local max_sum_so_far=0\n    local min_sum_so_far=0\n    local max_sum_ending_here=0\n    local min_sum_ending_here=0\n    local max_sum_index_ending_here=0\n    local min_sum_index_ending_here=0\n    local max_sum_index_so_far=0\n    local min_sum_index_so_far=0\n    local max_sum_so_far=0\n    local min_sum_so_far=0\n    local max_sum_ending_here=0\n    local min_sum_ending_here=0\n   ",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_sum=0\n  local k_curr_sum=0\n\n  # find the max sum of the original array\n  for ((i=0; i<n; i++)); do\n    curr_sum=0\n    for ((j=i; j<n; j++)); do\n      curr_sum=$((curr_sum+arr[j]))\n      if [[ $curr_sum -gt $max_sum ]]; then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  # find the max sum of the array repeated k times\n  for ((i=0; i<n; i++)); do\n    k_curr_sum=0\n    for ((j=i; j<n; j++)); do\n      k_curr_sum=$((k_curr_sum+arr[j]))\n      if [[ $k_curr_sum -gt $k_sum ]]; then\n        k_sum=$k_curr_sum\n        k_i=$i\n        k_j=$j\n      fi\n    done\n  done\n\n  # find the max sum of the array repeated k times\n  # by subtracting the sum of the elements in the array\n  # that are not in the max sum of the array repeated k times\n  for ((i=0; i<k_i; i++)); do\n    k_sum=$((k_sum+arr[i]))\n  done\n  for ((i=k_j+1; i<n; i++)); do\n    k_sum=$((k_sum+arr[i]))\n  done\n\n  # return the max sum of the array repeated k times\n  echo $k_sum",
    "    local -a arr=()\n    local -i k=$2\n    local -i n=$3\n    local -i i=0\n    local -i j=0\n    local -i max_sum=0\n    local -i curr_sum=0\n    local -i max_sum_so_far=0\n    local -i max_left=0\n    local -i max_right=0\n    local -i left=0\n    local -i right=0\n    local -i sum=0\n    local -i index=0\n    local -i max_index=0\n    local -i max_value=0\n\n    # Convert input string to array\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    # Find the max sum of the array\n    for (( i=0; i<n; i++ )); do\n        sum=$(( sum + arr[i] ))\n        if (( sum > max_value )); then\n            max_value=$sum\n            max_index=$i\n        fi\n    done\n\n    # Find the max sum of the repeated array\n    for (( i=0; i<k; i++ )); do\n        max_sum_so_far=0\n        curr_sum=0\n        left=0\n        for (( j=0; j<n; j++ )); do\n            curr_sum=$(( curr_sum + arr[j] ))\n            if (( curr_sum < 0 )); then\n                curr_sum=0\n                left=$(( j + 1 ))\n            elif (( curr_sum > max_sum_so_far )); then\n                max_sum_so_far=$curr_sum\n                max_left=$left\n                max_right=$j\n            fi\n        done\n        if (( max_sum_so_far == 0 )); then\n            max_sum_so_far=$max_value\n            max_left=$max_index\n            max_right=$max_index\n        fi\n        if (( max_sum_so_far > max_sum )); then\n            max_sum=$max_sum_so_far\n            left=$max_left\n            right=$max_right\n        fi\n    done\n\n    # Print the",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local sum=0\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n  done\n  max_so_far=$((sum))\n  for ((i=0; i<n; i++)); do\n    max_ending_here=$((max_ending_here + arr[i]))\n    max_so_far=$((max_so_far + arr[i] * (k - 1)))\n    if [[ $max_ending_here -lt 0 ]]; then\n      max_ending_here=0\n    fi\n    if [[ $max_so_far -lt $max_ending_here ]]; then\n      max_so_far=$max_ending_here\n    fi\n  done\n  echo $max_so_far",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=0\n    j=$i\n    while [ $j -lt $n ]; do\n      curr_sum=$((curr_sum + arr[j]))\n      max_sum=$((max_sum > curr_sum ? max_sum : curr_sum))\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n\n  echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<n; i++))\n  do\n    curr_sum=0\n    for ((j=i; j<n; j++))\n    do\n      curr_sum=$((curr_sum + arr[j]))\n      if ((curr_sum > max_sum))\n      then\n        max_sum=$curr_sum\n      fi\n    done\n  done\n\n  echo $((max_sum * k))",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=0\n        for ((j=i; j<n; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=$curr_sum\n                max_i=$i\n                max_j=$j\n                max_k=1\n            fi\n        done\n    done\n\n    for ((k=2; k<=k; k++)); do\n        for ((i=0; i<n; i++)); do\n            curr_sum=0\n            for ((j=i; j<n; j++)); do\n                curr_sum=$((curr_sum + arr[j]))\n                if ((curr_sum > max_sum)); then\n                    max_sum=$curr_sum\n                    max_i=$i\n                    max_j=$j\n                    max_k=$k\n                fi\n            done\n        done\n    done\n\n    echo $max_sum",
    "    local -a arr\n    local -i k\n    local -i n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    n=\"$3\"\n    local -i max_sum\n    local -i curr_sum\n    local -i i\n    local -i j\n    local -i max_sum_so_far\n    local -i max_ending_here\n    local -i start\n    local -i end\n    local -i s\n    max_sum=0\n    curr_sum=0\n    for ((i=0; i<n; i++)); do\n        curr_sum+=arr[i]\n    done\n    max_sum=curr_sum\n    for ((i=1; i<k; i++)); do\n        for ((j=0; j<n; j++)); do\n            curr_sum+=arr[j]\n            max_sum=max \"$max_sum\" \"$curr_sum\"\n        done\n    done\n    max_sum_so_far=arr[0]\n    max_ending_here=arr[0]\n    start=0\n    end=0\n    s=0\n    for ((i=1; i<n; i++)); do\n        if ((max_ending_here<0)); then\n            max_ending_here=arr[i]\n            s=i\n        else\n            max_ending_here+=arr[i]\n        fi\n        if ((max_ending_here>max_sum_so_far)); then\n            max_sum_so_far=max_ending_here\n            start=s\n            end=i\n        fi\n    done\n    echo \"$max_sum\"",
    "    local -r arr=($1)\n    local -r k=$2\n    local -r n=$3\n    local -r arr_len=${#arr[@]}\n    local -r max_sum=$(max_sub_array_sum \"${arr[@]}\" $n)\n    local -r max_sum_repeated=$((max_sum * k))\n    local -r max_sum_wrapped=$((max_sum_repeated - (sum_array \"${arr[@]}\" $n) + (sum_array \"${arr[@]}\" $arr_len)))\n    echo $max_sum_wrapped",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_sum=0\n  local k_curr_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n  local k_max_k=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_k_i=0\n  local max_k_j=0\n  local max_k_k=0\n  local max_k_sum=0\n  local max_k_curr_sum=0\n  local max_k_max_sum=0\n  local max_k_max_i=0\n  local max_k_max_j=0\n  local max_k_max_k=0\n  local max_k_max_k_i=0\n  local max_k_max_k_j=0\n  local max_k_max_k_k=0\n  local max_k_max_k_sum=0\n  local max_k_max_k_curr_sum=0\n  local max_k_max_k_max_sum=0\n  local max_k_max_k_max_i=0\n  local max_k_max_k_max_j=0\n  local max_k_max_k_max_k=0\n  local max_k_max_k_max_k_i=0\n  local max_k_max_k_max_k_j=0\n  local max_k_max_k_max_k_k=0\n  local max_k_max_k_max_k_sum=0\n  local max_k_max_k_max_k_curr_sum=0\n  local max_k_max_k_max_k_max_sum=0\n  local max_k_max_k_max_",
    "    local -a arr\n    local -i k\n    local -i max_sum\n    local -i curr_sum\n    local -i i\n    local -i j\n    local -i len\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    max_sum=\"$3\"\n    len=${#arr[@]}\n\n    for ((i = 0; i < len; i++)); do\n        curr_sum=0\n        for ((j = i; j < len; j++)); do\n            curr_sum=$((curr_sum + arr[j]))\n            if ((curr_sum > max_sum)); then\n                max_sum=\"$curr_sum\"\n            fi\n        done\n    done\n\n    echo \"$max_sum\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_sum=0\n  local k_curr_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n  local k_max_k=0\n  local k_max_sum_i=0\n  local k_max_sum_j=0\n  local k_max_sum_k=0\n  local k_max_sum_sum=0\n  local k_max_sum_curr_sum=0\n  local k_max_sum_max_sum=0\n  local k_max_sum_i=0\n  local k_max_sum_j=0\n  local k_max_sum_k=0\n  local k_max_sum_max_i=0\n  local k_max_sum_max_j=0\n  local k_max_sum_max_k=0\n  local k_max_sum_max_sum=0\n  local k_max_sum_max_curr_sum=0\n  local k_max_sum_max_max_sum=0\n  local k_max_sum_max_max_i=0\n  local k_max_sum_max_max_j=0\n  local k_max_sum_max_max_k=0\n  local k_max_sum_max_max_sum=0\n  local k_max_sum_max_max_curr_sum=0\n  local k_max_sum_max_max_max_sum=0\n  local k_max_sum_max_max_max_i=0\n  local k_max_sum_max_max_max_j=0\n  local k_max_sum_max_max_max_k=0\n  local k_max_sum_max_max_max_sum=0\n  local k_max_sum_max_max_",
    "  local -a arr=(\"${!1}\")\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local max_l=0\n  local max_r=0\n\n  for ((i=0; i<n; i++)); do\n    curr_sum+=arr[i]\n  done\n\n  max_sum=$curr_sum\n\n  for ((i=1; i<k; i++)); do\n    for ((j=0; j<n; j++)); do\n      curr_sum+=arr[j]\n      if ((curr_sum>max_sum)); then\n        max_sum=$curr_sum\n        max_l=$l\n        max_r=$r\n      fi\n      if ((curr_sum<0)); then\n        curr_sum=0\n        l=$j\n        r=$j\n      else\n        r=$j\n      fi\n    done\n  done\n\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum=0\n    local max_val=0\n    local min_val=0\n    local min_sum=0\n    local max_prefix_sum=0\n    local min_prefix_sum=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n        max_val=$((max_val > arr[i] ? max_val : arr[i]))\n        min_val=$((min_val < arr[i] ? min_val : arr[i]))\n    done\n\n    if ((max_val <= 0)); then\n        echo $((max_val * k))\n        return\n    fi\n\n    for ((i=0; i<n; i++)); do\n        max_prefix_sum=$((max_prefix_sum + arr[i]))\n        max_prefix_sum=$((max_prefix_sum > 0 ? max_prefix_sum : 0))\n        max_sum=$((max_sum > max_prefix_sum ? max_sum : max_prefix_sum))\n        min_prefix_sum=$((min_prefix_sum + arr[i]))\n        min_prefix_sum=$((min_prefix_sum < 0 ? min_prefix_sum : 0))\n        min_sum=$((min_sum < min_prefix_sum ? min_sum : min_prefix_sum))\n    done\n\n    if ((k == 1)); then\n        echo $max_sum\n        return\n    fi\n\n    max_sum=$((max_sum + sum * (k - 2) + max_prefix_sum))\n    min_sum=$((min_sum + sum * (k - 2) + min_prefix_sum))\n    echo $((max_sum > min_sum ? max_sum : min_sum))",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local current_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_current_sum=0\n  local k_max_sum=0\n  local k_max_sum_i=0\n  local k_max_sum_j=0\n  local k_current_sum_i=0\n  local k_current_sum_j=0\n  local k_max_sum_i_j=0\n  local k_current_sum_i_j=0\n\n  for ((i=0; i<n; i++)); do\n    current_sum=0\n    for ((j=i; j<n; j++)); do\n      current_sum=$((current_sum+arr[j]))\n      if ((current_sum > max_sum)); then\n        max_sum=$current_sum\n      fi\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    k_current_sum=0\n    for ((j=i; j<n; j++)); do\n      k_current_sum=$((k_current_sum+arr[j]))\n      if ((k_current_sum > k_max_sum)); then\n        k_max_sum=$k_current_sum\n        k_max_sum_i=$i\n        k_max_sum_j=$j\n      fi\n    done\n  done\n\n  for ((k_i=1; k_i<k; k_i++)); do\n    k_current_sum_i=0\n    for ((i=0; i<n; i++)); do\n      k_current_sum_i=$((k_current_sum_i+arr[i]))\n      if ((k_current_sum_i > k_max_sum_i)); then\n        k_max_sum_i=$k_current_sum_i\n      fi\n    done\n  done\n\n  for ((k_j=1; k_j<k; k_j++)); do\n   ",
    "  local -n arr=\"$1\"\n  local k=\"$2\"\n  local n=\"$3\"\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_sum=0\n  local k_max_sum=0\n  local k_max_i=0\n  local k_max_j=0\n  local max_i=0\n  local max_j=0\n\n  while [ $i -lt $n ]; do\n    sum=$((sum + arr[i]))\n    if [ $sum -lt 0 ]; then\n      sum=0\n      j=$((i + 1))\n    fi\n    if [ $sum -gt $max_sum ]; then\n      max_sum=$sum\n      max_i=$j\n      max_j=$i\n    fi\n    i=$((i + 1))\n  done\n\n  if [ $k -eq 1 ]; then\n    echo \"$max_sum $max_i $max_j\"\n    return\n  fi\n\n  k_max_sum=$max_sum\n  k_max_i=$max_i\n  k_max_j=$max_j\n  k_sum=0\n  k_i=0\n  k_j=0\n  i=0\n  j=0\n\n  while [ $i -lt $n ]; do\n    k_sum=$((k_sum + arr[i]))\n    if [ $k_sum -lt 0 ]; then\n      k_sum=0\n      k_j=$((i + 1))\n    fi\n    if [ $k_sum -gt $k_max_sum ]; then\n      k_max_sum=$k_sum\n      k_max_i=$k_j\n      k_max_j=$i\n    fi\n    i=$((i + 1))\n  done\n\n  if [ $k_max_sum -eq 0 ]; then\n    echo \"0 0 0\"\n    return\n  fi\n\n  i=0\n  j=0\n  sum=0\n\n  while [ $i -lt $n ]; do\n    sum=$((sum + arr[",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local l=0\n  local r=0\n  local sum=0\n\n  for ((i=0; i<n; i++))\n  do\n    sum+=arr[i]\n  done\n\n  for ((i=0; i<n*2; i++))\n  do\n    curr_sum+=arr[i%n]\n    if ((curr_sum>max_sum))\n    then\n      max_sum=curr_sum\n      l=i\n      r=j\n    fi\n    if ((curr_sum<0))\n    then\n      curr_sum=0\n      j=i+1\n    fi\n  done\n\n  if ((k==1))\n  then\n    echo $max_sum\n  else\n    if ((sum>0))\n    then\n      echo $(((k-2)*sum+max_sum))\n    else\n      echo $max_sum\n    fi\n  fi",
    "    local -n arr=$1\n    local k=$2\n    local max_sum=$3\n    local sum=0\n    local i=0\n    local j=0\n    local n=${#arr[@]}\n    local max_sum_so_far=0\n    local max_sum_ending_here=0\n    local min_sum_ending_here=0\n    local min_sum_so_far=0\n    local max_sub_array_sum=0\n    local min_sub_array_sum=0\n    local max_sub_array_sum_ending_here=0\n    local min_sub_array_sum_ending_here=0\n    local max_sub_array_sum_so_far=0\n    local min_sub_array_sum_so_far=0\n    local max_sub_array_sum_ending_here_min=0\n    local max_sub_array_sum_ending_here_max=0\n    local min_sub_array_sum_ending_here_min=0\n    local min_sub_array_sum_ending_here_max=0\n    local max_sub_array_sum_so_far_min=0\n    local max_sub_array_sum_so_far_max=0\n    local min_sub_array_sum_so_far_min=0\n    local min_sub_array_sum_so_far_max=0\n    local max_sub_array_sum_min=0\n    local max_sub_array_sum_max=0\n    local min_sub_array_sum_min=0\n    local min_sub_array_sum_max=0\n    local max_sub_array_sum_ending_here_min_min=0\n    local max_sub_array_sum_ending_here_min_max=0\n    local max_sub_array_sum_ending_here_max_min=0\n    local max_sub_array_sum_ending_here_max_max=0\n    local min_sub_array_sum_ending_here_min_min=0\n    local min_sub_array_sum_ending_here_min_max=0\n    local min_",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local sum_arr=()\n  local sum=0\n\n  for ((i=0; i<n; i++)); do\n    sum_arr[i]=0\n    for ((j=i; j<n; j++)); do\n      sum_arr[j]=$((sum_arr[j-1]+arr[j]))\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    for ((j=i; j<n; j++)); do\n      sum=$((sum_arr[j]-sum_arr[i-1]))\n      if ((sum>max_sum)); then\n        max_sum=$sum\n        k_i=$i\n        k_j=$j\n      fi\n    done\n  done\n\n  for ((i=0; i<k; i++)); do\n    for ((j=k_i; j<=k_j; j++)); do\n      curr_sum=$((curr_sum+arr[j]))\n    done\n  done\n\n  echo $curr_sum",
    "  local -a arr=()\n  local -i k=$2\n  local -i max_sum=$3\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n  local -i max_sum_so_far=0\n  local -i max_sum_ending_here=0\n  local -i n=0\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n  n=${#arr[@]}\n\n  for ((i=0; i<n; i++)); do\n    arr[i]=$((arr[i] % max_sum))\n  done\n\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + arr[i]))\n  done\n\n  if ((sum == 0)); then\n    max_sum_so_far=$((max_sum - 1))\n  else\n    max_sum_so_far=$((sum % max_sum))\n  fi\n\n  for ((i=0; i<n; i++)); do\n    max_sum_ending_here=$(((max_sum_ending_here + arr[i]) % max_sum))\n    if ((max_sum_ending_here < 0)); then\n      max_sum_ending_here=$((max_sum_ending_here + max_sum))\n    fi\n\n    if ((max_sum_so_far < max_sum_ending_here)); then\n      max_sum_so_far=$max_sum_ending_here\n    fi\n  done\n\n  for ((i=1; i<k; i++)); do\n    for ((j=0; j<n; j++)); do\n      max_sum_ending_here=$(((max_sum_ending_here + arr[j]) % max_sum))\n      if ((max_sum_ending_here < 0)); then\n        max_sum_ending_here=$((max_sum_ending_here + max_sum))\n      fi\n\n      if ((max_sum_so_far < max_sum_ending_here)); then\n        max_sum_so_far=$max_sum_ending_here\n      fi\n    done\n  done\n\n  echo $",
    "  local -a arr=()\n  local -i k=$2\n  local -i max_sum=$3\n  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_sum_so_far=0\n  local -i max_sum_ending_here=0\n  local -i max_sum_ending_here_prev=0\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n\n  for ((i=0; i<k; i++)); do\n    for ((j=0; j<${#arr[@]}; j++)); do\n      sum=$((sum + arr[j]))\n      if ((sum > max_sum)); then\n        max_sum=$sum\n      fi\n    done\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    max_sum_ending_here=$((max_sum_ending_here + arr[i]))\n    if ((max_sum_ending_here < 0)); then\n      max_sum_ending_here=0\n    fi\n    if ((max_sum_ending_here > max_sum_so_far)); then\n      max_sum_so_far=$max_sum_ending_here\n    fi\n  done\n\n  echo $max_sum\n  echo $max_sum_so_far",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local m=0\n    local l=0\n    local r=0\n    local sum=0\n    local max_left=0\n    local max_right=0\n    local left_sum=0\n    local right_sum=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        total_sum=$((total_sum + arr[i]))\n    done\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if [[ $curr_sum -gt $max_sum ]]; then\n            max_sum=$curr_sum\n            max_left=$i\n        fi\n        if [[ $curr_sum -lt 0 ]]; then\n            curr_sum=0\n        fi\n    done\n\n    curr_sum=0\n    for ((i=n-1; i>=0; i--)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if [[ $curr_sum -gt $max_sum ]]; then\n            max_sum=$curr_sum\n            max_right=$i\n        fi\n        if [[ $curr_sum -lt 0 ]]; then\n            curr_sum=0\n        fi\n    done\n\n    left_sum=0\n    for ((i=max_left; i>=0; i--)); do\n        left_sum=$((left_sum + arr[i]))\n    done\n\n    right_sum=0\n    for ((i=max_right; i<n; i++)); do\n        right_sum=$((right_sum + arr[i]))\n    done\n\n    if [[ $max_left -eq 0 && $max_right -eq $((n-1)) ]]; then\n        echo $((max_sum * k))\n        return\n    fi\n\n    if [[ $max_left -eq 0 ]]; then\n        echo $",
    "    local -a arr\n    local -i k\n    local -i n\n    local -i i\n    local -i j\n    local -i max_so_far\n    local -i max_ending_here\n    local -i max_element\n    local -i sum\n    local -i curr_sum\n    local -i curr_val\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    n=\"${#arr[@]}\"\n\n    max_so_far=0\n    max_ending_here=0\n    max_element=\"${arr[0]}\"\n    sum=0\n    for ((i = 0; i < n; i++)); do\n        max_element=\"$(max \"${arr[i]}\" \"$max_element\")\"\n        sum=\"$((sum + arr[i]))\"\n    done\n\n    if [[ \"$max_element\" -lt 0 ]]; then\n        echo \"$max_element\"\n        return\n    fi\n\n    for ((i = 0; i < n; i++)); do\n        max_ending_here=\"$((max_ending_here + arr[i]))\"\n        if [[ \"$max_ending_here\" -lt 0 ]]; then\n            max_ending_here=0\n        fi\n        max_so_far=\"$(max \"$max_so_far\" \"$max_ending_here\")\"\n    done\n\n    curr_sum=0\n    for ((i = 0; i < n; i++)); do\n        curr_sum=\"$((curr_sum + arr[i]))\"\n        curr_val=\"$((curr_sum % n))\"\n        if [[ \"$curr_val\" -eq 0 ]]; then\n            max_so_far=\"$(max \"$max_so_far\" \"$curr_sum\")\"\n        fi\n    done\n\n    for ((i = 1; i < k; i++)); do\n        for ((j = 0; j < n; j++)); do\n            curr_sum=\"$((curr_sum + arr[j]))\"\n            curr_val=\"$((curr_sum % n))\"\n            max",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local current_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_l=0\n  local max_m=0\n  local max_n=0\n  local max_o=0\n  local max_p=0\n  local max_q=0\n  local max_r=0\n  local max_s=0\n  local max_t=0\n  local max_u=0\n  local max_v=0\n  local max_w=0\n  local max_x=0\n  local max_y=0\n  local max_z=0\n  local max_aa=0\n  local max_ab=0\n  local max_ac=0\n  local max_ad=0\n  local max_ae=0\n  local max_af=0\n  local max_ag=0\n  local max_ah=0\n  local max_ai=0\n  local max_aj=0\n  local max_ak=0\n  local max_al=0\n  local max_am=0\n  local max_an=0\n  local max_ao=0\n  local max_ap=0\n  local max_aq=0\n  local max_ar=0\n  local max_as=0\n  local max_at=0\n  local max_au=0\n  local max_av=0\n  local max_aw=0\n  local max_ax=0\n  local max_ay=0\n  local max_az=0\n  local max_ba=0\n  local max_bb=0\n  local max_bc=0\n  local max_bd=0\n  local max_be=0\n  local max_bf=0\n  local max_bg=0\n  local max_bh=0\n  local max_bi=0\n  local max_bj=0\n  local max_bk=0\n  local max_bl=0\n  local max_bm=0\n  local max_bn=",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i\n    local j\n    local k_sum=0\n    local k_max_sum=0\n    local k_curr_sum=0\n    local k_i\n    local k_j\n    for ((i=0; i<n; i++)); do\n        k_sum=$((k_sum + arr[i]))\n    done\n    for ((i=0; i<n; i++)); do\n        k_curr_sum=$((k_curr_sum + arr[i]))\n        if ((k_curr_sum > k_max_sum)); then\n            k_max_sum=$k_curr_sum\n        fi\n        if ((k_curr_sum < 0)); then\n            k_curr_sum=0\n        fi\n    done\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n        fi\n        if ((curr_sum < 0)); then\n            curr_sum=0\n        fi\n    done\n    if ((k_sum > 0)); then\n        max_sum=$((max_sum + (k - 2) * k_sum))\n    fi\n    if ((k_max_sum > 0)); then\n        max_sum=$((max_sum + k_max_sum))\n    fi\n    echo $max_sum",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local max_sub_array_sum=0\n  local i=0\n  local j=0\n  local k=0\n  local sum=0\n  local max_sub_array_sum_repeated=0\n\n  for ((i=0; i<n; i++)); do\n    max_sub_array_sum=$((max_sub_array_sum + arr[i]))\n  done\n\n  for ((i=0; i<n; i++)); do\n    max_ending_here=$((max_ending_here + arr[i]))\n    if ((max_ending_here < 0)); then\n      max_ending_here=0\n    fi\n    if ((max_so_far < max_ending_here)); then\n      max_so_far=$max_ending_here\n    fi\n  done\n\n  if ((max_so_far == 0)); then\n    max_so_far=$max_sub_array_sum\n  fi\n\n  max_sub_array_sum_repeated=$((max_so_far * k))\n\n  for ((i=0; i<n; i++)); do\n    sum=0\n    for ((j=i; j<n; j++)); do\n      sum=$((sum + arr[j]))\n      if ((sum > max_sub_array_sum_repeated)); then\n        max_sub_array_sum_repeated=$sum\n      fi\n    done\n  done\n\n  echo $max_sub_array_sum_repeated",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n\n  local max_sub_array_sum=0\n  local max_sub_array_sum_prefix=0\n  local max_sub_array_sum_suffix=0\n  local max_sub_array_sum_total=0\n\n  for i in \"${arr[@]}\"; do\n    max_sub_array_sum_total=$((max_sub_array_sum_total + i))\n    max_sub_array_sum_prefix=$((max_sub_array_sum_prefix + i))\n    max_sub_array_sum_prefix=$((max_sub_array_sum_prefix > 0 ? max_sub_array_sum_prefix : 0))\n    max_sub_array_sum=$((max_sub_array_sum > max_sub_array_sum_prefix ? max_sub_array_sum : max_sub_array_sum_prefix))\n    max_sub_array_sum_suffix=$((max_sub_array_sum_suffix + i))\n    max_sub_array_sum_suffix=$((max_sub_array_sum_suffix > 0 ? max_sub_array_sum_suffix : 0))\n  done\n\n  if ((max_sub_array_sum_total > 0)); then\n    max_sub_array_sum=$((max_sub_array_sum + (max_sub_array_sum_suffix * (k - 2)) + max_sub_array_sum_prefix))\n  else\n    max_sub_array_sum=$((max_sub_array_sum > max_sub_array_sum_suffix ? max_sub_array_sum : max_sub_array_sum_suffix))\n  fi\n\n  echo \"$max_sub_array_sum\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local i=0\n  local j=0\n  local sum=0\n  local max_sum=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  for ((i=0; i<n; i++))\n  do\n    sum=0\n    for ((j=i; j<n; j++))\n    do\n      sum=$((sum+arr[j]))\n      if ((sum>max_sum))\n      then\n        max_sum=$sum\n        max_i=$i\n        max_j=$j\n        max_k=0\n      fi\n    done\n  done\n  for ((k=1; k<k; k++))\n  do\n    for ((i=0; i<n; i++))\n    do\n      sum=0\n      for ((j=i; j<n; j++))\n      do\n        sum=$((sum+arr[j]))\n        if ((sum>max_sum))\n        then\n          max_sum=$sum\n          max_i=$i\n          max_j=$j\n          max_k=$k\n        fi\n      done\n    done\n  done\n  echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local sum_arr=()\n    local sum=0\n    local max_sum_arr=()\n    local max_sum_arr_len=0\n    local max_sum_arr_index=0\n    local max_sum_arr_index_end=0\n    local max_sum_arr_index_start=0\n    local max_sum_arr_index_start_end=0\n    local max_sum_arr_index_start_start=0\n    local max_sum_arr_index_start_start_end=0\n    local max_sum_arr_index_start_start_start=0\n    local max_sum_arr_index_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_start_end=0\n    local max_sum_arr_index_start_start_start_start_start_start_start_start_start=0\n    local max_sum_arr_index_start_start_start_start_",
    "    local arr=($1)\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local sum=0\n    local sum_arr=()\n    local max_sum_arr=()\n    local max_sum_arr_len=0\n\n    # find the max sum of the array\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum < 0)); then\n            curr_sum=0\n        fi\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n        fi\n    done\n\n    # if the max sum is 0, then the array contains only negative numbers\n    if ((max_sum == 0)); then\n        max_sum=$((arr[0]))\n        for ((i=1; i<n; i++)); do\n            if ((arr[i] > max_sum)); then\n                max_sum=$((arr[i]))\n            fi\n        done\n        echo $((max_sum * k))\n        return\n    fi\n\n    # find the max sum of the array with wrapping\n    curr_sum=0\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum < 0)); then\n            curr_sum=0\n        fi\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n        fi\n    done\n\n    # find the max sum of the array without wrapping\n    curr_sum=0\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum < 0)); then\n            curr_sum=0\n        fi\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n        fi\n   ",
    "    local -a arr=()\n    local -i k=0\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local -i sum=0\n    local -i n=0\n    local -i max_so_far=0\n    local -i max_ending_here=0\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    n=\"${#arr[@]}\"\n\n    for ((i=0; i<n; i++)); do\n        arr[i]=$((arr[i] * k))\n    done\n\n    for ((i=0; i<n; i++)); do\n        max_ending_here=0\n        max_so_far=0\n        for ((j=i; j<n; j++)); do\n            max_ending_here=$((max_ending_here + arr[j]))\n            if ((max_so_far < max_ending_here)); then\n                max_so_far=$max_ending_here\n            fi\n        done\n        if ((max < max_so_far)); then\n            max=$max_so_far\n        fi\n    done\n\n    echo \"$max\"",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_so_far=0\n  local max_ending_here=0\n  local max_element=${arr[0]}\n  local i\n  local j\n  local sum\n  local max_element_index=0\n  local max_element_index_temp=0\n  local max_element_index_temp_2=0\n  local max_element_index_temp_3=0\n  local max_element_index_temp_4=0\n  local max_element_index_temp_5=0\n  local max_element_index_temp_6=0\n  local max_element_index_temp_7=0\n  local max_element_index_temp_8=0\n  local max_element_index_temp_9=0\n  local max_element_index_temp_10=0\n  local max_element_index_temp_11=0\n  local max_element_index_temp_12=0\n  local max_element_index_temp_13=0\n  local max_element_index_temp_14=0\n  local max_element_index_temp_15=0\n  local max_element_index_temp_16=0\n  local max_element_index_temp_17=0\n  local max_element_index_temp_18=0\n  local max_element_index_temp_19=0\n  local max_element_index_temp_20=0\n  local max_element_index_temp_21=0\n  local max_element_index_temp_22=0\n  local max_element_index_temp_23=0\n  local max_element_index_temp_24=0\n  local max_element_index_temp_25=0\n  local max_element_index_temp_26=0\n  local max_element_index_temp_27=0\n  local max_element_index_temp_28=0\n  local max_element_index_temp_29=0\n  local max_element_index_temp_30=0\n  local max_element_index_temp_31=0\n  local max_element",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local curr_i=0\n  local curr_j=0\n  local curr_k=0\n  local sum=0\n  local max_sum_k=0\n  local curr_sum_k=0\n  local max_i_k=0\n  local max_j_k=0\n  local curr_i_k=0\n  local curr_j_k=0\n  local max_k_k=0\n  local curr_k_k=0\n  local max_sum_k_k=0\n  local curr_sum_k_k=0\n  local max_i_k_k=0\n  local max_j_k_k=0\n  local curr_i_k_k=0\n  local curr_j_k_k=0\n  local max_k_k_k=0\n  local curr_k_k_k=0\n  local max_sum_k_k_k=0\n  local curr_sum_k_k_k=0\n  local max_i_k_k_k=0\n  local max_j_k_k_k=0\n  local curr_i_k_k_k=0\n  local curr_j_k_k_k=0\n  local max_k_k_k_k=0\n  local curr_k_k_k_k=0\n  local max_sum_k_k_k_k=0\n  local curr_sum_k_k_k_k=0\n  local max_i_k_k_k_k=0\n  local max_j_k_k_k_k=0\n  local curr_i_k_k_k_k=0\n  local curr_j_k_k_k_k=0\n  local max_k_",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_i=0\n    local max_j=0\n    local max_k=0\n    local curr_i=0\n    local curr_j=0\n    local curr_k=0\n    local max_sum_arr=()\n    local curr_sum_arr=()\n    local max_sum_arr_repeated=()\n    local curr_sum_arr_repeated=()\n    local max_sum_arr_repeated_sum=0\n    local curr_sum_arr_repeated_sum=0\n    local max_sum_arr_repeated_sum_arr=()\n    local curr_sum_arr_repeated_sum_arr=()\n    local max_sum_arr_repeated_sum_arr_sum=0\n    local curr_sum_arr_repeated_sum_arr_sum=0\n    local max_sum_arr_repeated_sum_arr_sum_arr=()\n    local curr_sum_arr_repeated_sum_arr_sum_arr=()\n    local max_sum_arr_repeated_sum_arr_sum_arr_sum=0\n    local curr_sum_arr_repeated_sum_arr_sum_arr_sum=0\n    local max_sum_arr_repeated_sum_arr_sum_arr_sum_arr=()\n    local curr_sum_arr_repeated_sum_arr_sum_arr_sum_arr=()\n    local max_sum_arr_repeated_sum_arr_sum_arr_sum_arr_sum=0\n    local curr_sum_arr_repeated_sum_arr_sum_arr_sum_arr_sum=0\n    local max_sum_arr_repeated_sum_arr_sum_arr_sum_arr_sum_arr=()\n    local curr_sum_arr_repeated_sum_arr_sum_arr_sum_arr_sum_arr=()\n    local max",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local sum=0\n    local max_left=0\n    local max_right=0\n    local left_sum=0\n    local right_sum=0\n    local total_sum=0\n\n    for ((i=0; i<n; i++)); do\n        total_sum=$((total_sum + arr[i]))\n    done\n\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n            max_left=$l\n            max_right=$i\n        fi\n        if ((curr_sum < 0)); then\n            curr_sum=0\n            l=$((i + 1))\n        fi\n    done\n\n    left_sum=$max_sum\n    curr_sum=0\n    r=$((n - 1))\n    for ((i=n-1; i>=0; i--)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n            max_left=$i\n            max_right=$r\n        fi\n        if ((curr_sum < 0)); then\n            curr_sum=0\n            r=$((i - 1))\n        fi\n    done\n\n    right_sum=$max_sum\n\n    if ((max_left == 0 && max_right == n - 1)); then\n        echo $(((k - 2) * total_sum + max_sum))\n    else\n        echo $((max_sum + (k - 2) * total_sum))\n    fi",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local max_i=0\n    local max_j=0\n    local max_i_temp=0\n    local max_j_temp=0\n    local curr_sum_temp=0\n    local max_sum_temp=0\n    local k_temp=0\n    local n_temp=0\n    local i_temp=0\n    local j_temp=0\n    local sum_arr=()\n    local sum_arr_temp=()\n    local sum_arr_temp_2=()\n    local sum_arr_temp_3=()\n    local sum_arr_temp_4=()\n    local sum_arr_temp_5=()\n    local sum_arr_temp_6=()\n    local sum_arr_temp_7=()\n    local sum_arr_temp_8=()\n    local sum_arr_temp_9=()\n    local sum_arr_temp_10=()\n    local sum_arr_temp_11=()\n    local sum_arr_temp_12=()\n    local sum_arr_temp_13=()\n    local sum_arr_temp_14=()\n    local sum_arr_temp_15=()\n    local sum_arr_temp_16=()\n    local sum_arr_temp_17=()\n    local sum_arr_temp_18=()\n    local sum_arr_temp_19=()\n    local sum_arr_temp_20=()\n    local sum_arr_temp_21=()\n    local sum_arr_temp_22=()\n    local sum_arr_temp_23=()\n    local sum_arr_temp_24=()\n    local sum_arr_temp_25=()\n    local sum_arr_temp_26=()\n    local sum_arr_temp_27=()\n    local sum_arr_temp_28=()\n    local sum_arr_temp_29=()\n    local sum_arr_temp_30=()\n    local sum_arr_temp",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local i\n    local j\n    local sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n    max_so_far=$((sum))\n    for ((i=0; i<n; i++)); do\n        max_ending_here=$((max_ending_here + arr[i]))\n        if [[ $max_ending_here -lt 0 ]]; then\n            max_ending_here=0\n        fi\n        if [[ $max_so_far -lt $max_ending_here ]]; then\n            max_so_far=$((max_ending_here))\n        fi\n    done\n    for ((i=0; i<n; i++)); do\n        max_ending_here=$((max_ending_here + arr[i]))\n        if [[ $max_ending_here -lt 0 ]]; then\n            max_ending_here=0\n        fi\n        if [[ $max_so_far -lt $max_ending_here ]]; then\n            max_so_far=$((max_ending_here))\n        fi\n    done\n    local max_wrap=0\n    for ((i=0; i<n; i++)); do\n        max_wrap=$((max_wrap + arr[i]))\n        arr[i]=$((arr[i] * -1))\n    done\n    max_wrap=$((max_wrap + max_sub_array_sum_repeated arr $k $n))\n    if [[ $max_so_far -lt $max_wrap ]]; then\n        max_so_far=$((max_wrap))\n    fi\n    echo $max_so_far",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local sum=0\n  local i=0\n  local j=0\n  local sum_arr=()\n  local sum_arr_size=0\n  local max_sum_arr=()\n  local max_sum_arr_size=0\n  local max_sum_arr_index=0\n  local max_sum_arr_index_size=0\n  local max_sum_arr_index_size_arr=()\n  local max_sum_arr_index_size_arr_size=0\n  local max_sum_arr_index_size_arr_size_arr=()\n  local max_sum_arr_index_size_arr_size_arr_size=0\n  local max_sum_arr_index_size_arr_size_arr_size_arr=()\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size=0\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr=()\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size=0\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size_arr=()\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size_arr_size=0\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size_arr_size_arr=()\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size_arr_size_arr_size=0\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size_arr_size_arr_size_arr=()\n  local max_sum_arr_index_size_arr_size_arr_size_arr_size_arr_size_arr_size_arr_size",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_so_far=0\n    local max_ending_here=0\n    local max_element=${arr[0]}\n    local i=0\n\n    for ((i = 0; i < n; i++)); do\n        max_element=$((max_element > arr[i] ? max_element : arr[i]))\n        max_ending_here=$((max_ending_here + arr[i]))\n        if ((max_ending_here < 0)); then\n            max_ending_here=0\n        fi\n        if ((max_so_far < max_ending_here)); then\n            max_so_far=$max_ending_here\n        fi\n    done\n\n    if ((max_so_far == 0)); then\n        echo $((max_element * k))\n    else\n        local sum=0\n        for ((i = 0; i < n; i++)); do\n            sum=$((sum + arr[i]))\n        done\n        echo $((max_so_far + sum * (k - 2) > max_so_far ? max_so_far + sum * (k - 2) : max_so_far))\n    fi",
    "    local -n arr=$1\n    local k=$2\n    local n=$3\n    local max_sum=0\n    local curr_sum=0\n    local i=0\n    local j=0\n    local m=0\n    local l=0\n    local r=0\n    local sum=0\n    local max_left=0\n    local max_right=0\n    local left_sum=0\n    local right_sum=0\n    local total_sum=0\n    for ((i=0; i<n; i++)); do\n        total_sum=$((total_sum + arr[i]))\n    done\n    for ((i=0; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum > max_sum)); then\n            max_sum=$curr_sum\n            max_left=$l\n            max_right=$i\n        fi\n        if ((curr_sum < 0)); then\n            curr_sum=0\n            l=$((i+1))\n        fi\n    done\n    left_sum=$max_sum\n    right_sum=0\n    curr_sum=0\n    l=$((max_right+1))\n    for ((i=l; i<n; i++)); do\n        curr_sum=$((curr_sum + arr[i]))\n        if ((curr_sum > right_sum)); then\n            right_sum=$curr_sum\n        fi\n    done\n    sum=$((max_sum + right_sum))\n    for ((i=1; i<k; i++)); do\n        if ((sum > max_sum)); then\n            max_sum=$sum\n        fi\n        m=$((max_left + n))\n        curr_sum=0\n        for ((j=m; j<=max_right; j++)); do\n            curr_sum=$((curr_sum + arr[j%n]))\n            if ((curr_sum > left_sum)); then\n                left_sum=$curr_sum\n                max_left=$((j+1))\n            fi\n        done\n        m=$((max",
    "  local -n arr=$1\n  local k=$2\n  local n=$3\n  local max_sum=0\n  local curr_sum=0\n  local i=0\n  local j=0\n  local k_i=0\n  local k_j=0\n  local k_curr_sum=0\n  local k_max_sum=0\n\n  while [ $i -lt $n ]; do\n    curr_sum=$((curr_sum + arr[$i]))\n    if [ $curr_sum -lt 0 ]; then\n      curr_sum=0\n      j=$((i + 1))\n    fi\n    if [ $curr_sum -gt $max_sum ]; then\n      max_sum=$curr_sum\n    fi\n    i=$((i + 1))\n  done\n\n  k_curr_sum=$max_sum\n  k_max_sum=$max_sum\n  k_i=$((n - 1))\n  k_j=0\n  while [ $k_i -ge 0 ]; do\n    k_curr_sum=$((k_curr_sum + arr[$k_i]))\n    if [ $k_curr_sum -lt 0 ]; then\n      k_curr_sum=0\n      k_j=$((k_i + 1))\n    fi\n    if [ $k_curr_sum -gt $k_max_sum ]; then\n      k_max_sum=$k_curr_sum\n    fi\n    k_i=$((k_i - 1))\n  done\n\n  echo $(((k - 2) * max_sum + k_max_sum))"
  ]
}
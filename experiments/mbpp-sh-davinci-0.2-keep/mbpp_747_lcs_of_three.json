{
  "name": "mbpp_747_lcs_of_three",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n#\n# $1 is a string\n# $2 is a string\n# $3 is a string\nlcs_of_three() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    lcs_of_three \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AGGT12\" \"12TXAYB\" \"12XBA\") = \"2\" ]]\n    [[ $(candidate \"Reels\" \"Reelsfor\" \"ReelsforReels\") = \"5\" ]]\n    [[ $(candidate \"abcd1e2\" \"bc12ea\" \"bd1ea\") = \"3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"$3\"\n    local m=${#str1}\n    local n=${#str2}\n    local o=${#str3}\n    local -a lcs=()\n    local -a lcs_str1=()\n    local -a lcs_str2=()\n    local -a lcs_str3=()\n    local -a lcs_str1_rev=()\n    local -a lcs_str2_rev=()\n    local -a lcs_str3_rev=()\n    local -a lcs_str1_rev_str2_rev=()\n    local -a lcs_str1_rev_str3_rev=()\n    local -a lcs_str2_rev_str3_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev_rev_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev_rev_rev_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_rev_rev_rev_rev_rev_rev_rev_rev=()\n    local -a lcs_str1_rev_str2_rev_str3_rev_",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local len3=${#str3}\n  local lcs_matrix=()\n  local i=0\n  local j=0\n  local k=0\n  local lcs_len=0\n  local lcs_str=\"\"\n  local lcs_str_len=0\n\n  # Initialize the matrix\n  for ((i=0; i<=len1; i++)); do\n    lcs_matrix[i]=()\n    for ((j=0; j<=len2; j++)); do\n      lcs_matrix[i][j]=()\n      for ((k=0; k<=len3; k++)); do\n        lcs_matrix[i][j][k]=0\n      done\n    done\n  done\n\n  # Compute the LCS\n  for ((i=1; i<=len1; i++)); do\n    for ((j=1; j<=len2; j++)); do\n      for ((k=1; k<=len3; k++)); do\n        if [[ \"${str1:i-1:1}\" == \"${str2:j-1:1}\" ]] && [[ \"${str1:i-1:1}\" == \"${str3:k-1:1}\" ]]; then\n          lcs_matrix[i][j][k]=$((lcs_matrix[i-1][j-1][k-1]+1))\n        else\n          lcs_matrix[i][j][k]=$(max ${lcs_matrix[i-1][j][k]} ${lcs_matrix[i][j-1][k]} ${lcs_matrix[i][j][k-1]})\n        fi\n      done\n    done\n  done\n\n  # Compute the LCS string\n  lcs_len=${lcs_matrix[len1][len2][len3]}\n  lcs_str=\"\"\n  i=$len1\n  j=$len2\n  k=$len",
    "  local -i m=${#1}\n  local -i n=${#2}\n  local -i o=${#3}\n  local -i i j k\n  local -a lcs=()\n  local -a lcs_i=()\n  local -a lcs_j=()\n  local -a lcs_k=()\n  local -a lcs_len=()\n  local -a lcs_max_len=()\n  local -a lcs_max_len_i=()\n  local -a lcs_max_len_j=()\n  local -a lcs_max_len_k=()\n  local -a lcs_max_len_index=()\n  local -a lcs_max_len_index_i=()\n  local -a lcs_max_len_index_j=()\n  local -a lcs_max_len_index_k=()\n  local -a lcs_max_len_index_len=()\n  local -a lcs_max_len_index_len_i=()\n  local -a lcs_max_len_index_len_j=()\n  local -a lcs_max_len_index_len_k=()\n  local -a lcs_max_len_index_len_index=()\n  local -a lcs_max_len_index_len_index_i=()\n  local -a lcs_max_len_index_len_index_j=()\n  local -a lcs_max_len_index_len_index_k=()\n  local -a lcs_max_len_index_len_index_len=()\n  local -a lcs_max_len_index_len_index_len_i=()\n  local -a lcs_max_len_index_len_index_len_j=()\n  local -a lcs_max_len_index_len_index_len_k=()\n  local -a lcs_max_len_index_len_index_len_index=()\n  local -a lcs_max_len_index_len_index_len_index_i=()",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"$3\"\n    local lcs=\"\"\n    local lcs_len=0\n    local lcs_len_tmp=0\n    local lcs_tmp=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local len1=${#str1}\n    local len2=${#str2}\n    local len3=${#str3}\n    local lcs_matrix=()\n    local lcs_matrix_tmp=()\n\n    # Initialize the matrix\n    for ((i=0; i<=len1; i++)); do\n        for ((j=0; j<=len2; j++)); do\n            for ((k=0; k<=len3; k++)); do\n                lcs_matrix[i,j,k]=0\n            done\n        done\n    done\n\n    # Fill the matrix\n    for ((i=1; i<=len1; i++)); do\n        for ((j=1; j<=len2; j++)); do\n            for ((k=1; k<=len3; k++)); do\n                if [[ \"${str1:i-1:1}\" == \"${str2:j-1:1}\" ]] && [[ \"${str1:i-1:1}\" == \"${str3:k-1:1}\" ]]; then\n                    lcs_matrix[i,j,k]=$((lcs_matrix[i-1,j-1,k-1]+1))\n                else\n                    lcs_matrix[i,j,k]=$((lcs_matrix[i-1,j,k]>lcs_matrix[i,j-1,k]?lcs_matrix[i-1,j,k]:lcs_matrix[i,j-1,k]))\n                    lcs_matrix[i,j,k]=$((lcs_matrix[i,j,k]>lcs_matrix[i,j,k-1]?lcs_matrix[i,j,k]:lcs_matrix[",
    "  local -i m=${#1}\n  local -i n=${#2}\n  local -i o=${#3}\n  local -i i j k\n  local -a lcs=()\n  for ((i=0; i<=m; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=o; k++)); do\n        if ((i==0 || j==0 || k==0)); then\n          lcs[i,j,k]=0\n        elif [[ ${1:i-1:1} == ${2:j-1:1} && ${1:i-1:1} == ${3:k-1:1} ]]; then\n          lcs[i,j,k]=$((lcs[i-1,j-1,k-1]+1))\n        else\n          lcs[i,j,k]=$((lcs[i-1,j,k]>lcs[i,j-1,k]?lcs[i-1,j,k]:lcs[i,j-1,k]))\n          lcs[i,j,k]=$((lcs[i,j,k]>lcs[i,j,k-1]?lcs[i,j,k]:lcs[i,j,k-1]))\n        fi\n      done\n    done\n  done\n  echo ${lcs[m,n,o]}",
    "  local s1=\"$1\"\n  local s2=\"$2\"\n  local s3=\"$3\"\n  local m=${#s1}\n  local n=${#s2}\n  local o=${#s3}\n  local lcs_table=()\n  local i=0\n  local j=0\n  local k=0\n  local lcs=0\n  local lcs_string=\"\"\n\n  # Create a table to store results of subproblems\n  for ((i=0; i<=m; i++)); do\n    for ((j=0; j<=n; j++)); do\n      for ((k=0; k<=o; k++)); do\n        lcs_table[$i,$j,$k]=0\n      done\n    done\n  done\n\n  # Fill the table in bottom up manner\n  for ((i=1; i<=m; i++)); do\n    for ((j=1; j<=n; j++)); do\n      for ((k=1; k<=o; k++)); do\n        if [[ \"${s1:i-1:1}\" == \"${s2:j-1:1}\" ]] && [[ \"${s2:j-1:1}\" == \"${s3:k-1:1}\" ]]; then\n          lcs_table[$i,$j,$k]=$((lcs_table[$i-1,$j-1,$k-1]+1))\n        else\n          lcs_table[$i,$j,$k]=$(max ${lcs_table[$i-1,$j,$k]} ${lcs_table[$i,$j-1,$k]} ${lcs_table[$i,$j,$k-1]})\n        fi\n      done\n    done\n  done\n\n  lcs=${lcs_table[$m,$n,$o]}\n  lcs_string=\"\"\n\n  # Following code is used to print LCS\n  i=$m\n  j=$n\n  k=$o\n  while [[ $i -gt 0 && $j -gt 0 && $k -gt 0 ]]; do\n    if",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local lcs_of_two=\"$(lcs_of_two \"$str1\" \"$str2\")\"\n  local lcs_of_three=\"$(lcs_of_two \"$lcs_of_two\" \"$str3\")\"\n  echo \"$lcs_of_three\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local m=$((${#str1} + 1))\n  local n=$((${#str2} + 1))\n  local o=$((${#str3} + 1))\n  local -a lcs_matrix\n  local -a lcs_matrix_row\n  local -a lcs_matrix_row_prev\n  local -a lcs_matrix_row_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -a lcs_matrix_row_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n\n  local lcs_of_two_str1_str2=$(lcs_of_two \"$str1\" \"$str2\")\n  local lcs_of_two_str1_str3=$(lcs_of_two \"$str1\" \"$str3\")\n  local lcs_of_two_str2_str3=$(lcs_of_two \"$str2\" \"$str3\")\n\n  local lcs_of_three_str1_str2_str3=$(lcs_of_two \"$lcs_of_two_str1_str2\" \"$lcs_of_two_str1_str3\")\n  lcs_of_three_str1_str2_str3=$(lcs_of_two \"$lcs_of_three_str1_str2_str3\" \"$lcs_of_two_str2_str3\")\n\n  echo \"$lcs_of_three_str1_str2_str3\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local m=$((${#str1}+1))\n  local n=$((${#str2}+1))\n  local o=$((${#str3}+1))\n  local -a lcs\n  local -a lcs_str1\n  local -a lcs_str2\n  local -a lcs_str3\n  local -a lcs_str1_rev\n  local -a lcs_str2_rev\n  local -a lcs_str3_rev\n  local -a lcs_str1_rev_str2\n  local -a lcs_str1_rev_str3\n  local -a lcs_str2_rev_str1\n  local -a lcs_str2_rev_str3\n  local -a lcs_str3_rev_str1\n  local -a lcs_str3_rev_str2\n  local -a lcs_str1_rev_str2_str3\n  local -a lcs_str1_rev_str3_str2\n  local -a lcs_str2_rev_str1_str3\n  local -a lcs_str2_rev_str3_str1\n  local -a lcs_str3_rev_str1_str2\n  local -a lcs_str3_rev_str2_str1\n  local -a lcs_str1_rev_str2_str3_rev\n  local -a lcs_str1_rev_str3_str2_rev\n  local -a lcs_str2_rev_str1_str3_rev\n  local -a lcs_str2_rev_str3_str1_rev\n  local -a lcs_str3_rev_str1_str2_rev\n  local -a lcs_str3_rev_str2_str1_rev\n  local -a lcs_str1_rev_str2_str3_rev_str1\n  local -a lcs_str1_rev_str3_str2_rev_str1\n  local",
    "  if [ -z \"$1\" ] || [ -z \"$2\" ] || [ -z \"$3\" ]; then\n    echo \"Usage: $0 <string1> <string2> <string3>\"\n    return 1\n  fi\n\n  local string1=\"$1\"\n  local string2=\"$2\"\n  local string3=\"$3\"\n\n  local lcs_table=()\n  local lcs_table_row_size=0\n  local lcs_table_col_size=0\n\n  local lcs_table_row_size=$(( ${#string1} + 1 ))\n  local lcs_table_col_size=$(( ${#string2} + 1 ))\n\n  for (( i = 0; i < lcs_table_row_size; i++ )); do\n    lcs_table[$i]=()\n    for (( j = 0; j < lcs_table_col_size; j++ )); do\n      lcs_table[$i][$j]=0\n    done\n  done\n\n  for (( i = 1; i < lcs_table_row_size; i++ )); do\n    for (( j = 1; j < lcs_table_col_size; j++ )); do\n      if [ \"${string1:$(( i - 1 )):1}\" == \"${string2:$(( j - 1 )):1}\" ]; then\n        lcs_table[$i][$j]=$(( lcs_table[$(( i - 1 ))][$(( j - 1 ))] + 1 ))\n      else\n        lcs_table[$i][$j]=$(( lcs_table[$(( i - 1 ))][$j] > lcs_table[$i][$(( j - 1 ))] ? lcs_table[$(( i - 1 ))][$j] : lcs_table[$i][$(( j - 1 ))] ))\n      fi\n    done\n  done\n\n  local lcs_table_row_size=$(( ${#string1} + 1 ))\n  local lcs_table_col_size=$(( ${#string3} + 1 ))\n\n  for (( i = 0; i < lcs_table_row_size; i++ )); do\n    l",
    "  local -i m=${#1}\n  local -i n=${#2}\n  local -i o=${#3}\n  local -i i j k\n  local -a lcs=()\n  for ((i=0; i<=m; i++)); do\n    lcs[$i,0,0]=0\n  done\n  for ((j=0; j<=n; j++)); do\n    lcs[0,$j,0]=0\n  done\n  for ((k=0; k<=o; k++)); do\n    lcs[0,0,$k]=0\n  done\n  for ((i=1; i<=m; i++)); do\n    for ((j=1; j<=n; j++)); do\n      for ((k=1; k<=o; k++)); do\n        if [[ ${1:i-1:1} == ${2:j-1:1} && ${1:i-1:1} == ${3:k-1:1} ]]; then\n          lcs[$i,$j,$k]=$((lcs[i-1,j-1,k-1]+1))\n        else\n          lcs[$i,$j,$k]=$((lcs[i-1,j,k]>lcs[i,j-1,k]?lcs[i-1,j,k]:lcs[i,j-1,k]))\n          lcs[$i,$j,$k]=$((lcs[i,$j,$k]>lcs[i,j,k-1]?lcs[i,$j,$k]:lcs[i,j,k-1]))\n        fi\n      done\n    done\n  done\n  echo ${lcs[m,n,o]}",
    "    local string1=$1\n    local string2=$2\n    local string3=$3\n    local lcs_of_two_strings\n    local lcs_of_three_strings\n\n    lcs_of_two_strings=$(lcs_of_two \"$string1\" \"$string2\")\n    lcs_of_three_strings=$(lcs_of_two \"$lcs_of_two_strings\" \"$string3\")\n\n    echo \"$lcs_of_three_strings\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local len3=${#str3}\n  local i=0\n  local j=0\n  local k=0\n  local lcs_table=()\n  local lcs_str=\"\"\n\n  # Initialize the table\n  for ((i=0; i<=len1; i++)); do\n    for ((j=0; j<=len2; j++)); do\n      for ((k=0; k<=len3; k++)); do\n        lcs_table[$i,$j,$k]=0\n      done\n    done\n  done\n\n  # Fill the table\n  for ((i=1; i<=len1; i++)); do\n    for ((j=1; j<=len2; j++)); do\n      for ((k=1; k<=len3; k++)); do\n        if [[ \"${str1:i-1:1}\" == \"${str2:j-1:1}\" ]] && [[ \"${str2:j-1:1}\" == \"${str3:k-1:1}\" ]]; then\n          lcs_table[$i,$j,$k]=$((lcs_table[$i-1,$j-1,$k-1]+1))\n        else\n          lcs_table[$i,$j,$k]=$(max ${lcs_table[$i-1,$j,$k]} ${lcs_table[$i,$j-1,$k]} ${lcs_table[$i,$j,$k-1]})\n        fi\n      done\n    done\n  done\n\n  # Get the LCS\n  i=$len1\n  j=$len2\n  k=$len3\n  while [[ $i -gt 0 ]] && [[ $j -gt 0 ]] && [[ $k -gt 0 ]]; do\n    if [[ \"${str1:i-1:1}\" == \"${str2:j-1:1}\" ]] && [[ \"${",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local str3_len=${#str3}\n  local lcs_matrix=()\n  local i=0\n  local j=0\n  local k=0\n  local lcs_len=0\n  local lcs_str=\"\"\n  local lcs_str_len=0\n  local lcs_str_index=0\n  local lcs_str_char=\"\"\n\n  # Init the lcs matrix\n  for (( i=0; i<=str1_len; i++ )); do\n    lcs_matrix[$i,0,0]=0\n  done\n  for (( j=0; j<=str2_len; j++ )); do\n    lcs_matrix[0,$j,0]=0\n  done\n  for (( k=0; k<=str3_len; k++ )); do\n    lcs_matrix[0,0,$k]=0\n  done\n\n  # Fill the lcs matrix\n  for (( i=1; i<=str1_len; i++ )); do\n    for (( j=1; j<=str2_len; j++ )); do\n      for (( k=1; k<=str3_len; k++ )); do\n        if [[ \"${str1:i-1:1}\" == \"${str2:j-1:1}\" && \"${str1:i-1:1}\" == \"${str3:k-1:1}\" ]]; then\n          lcs_matrix[$i,$j,$k]=$(( ${lcs_matrix[$((i-1)),$((j-1)),$((k-1))]} + 1 ))\n        else\n          lcs_matrix[$i,$j,$k]=$(max ${lcs_matrix[$((i-1)),$j,$k]} ${lcs_matrix[$i,$((j-1)),$k]} ${lcs_matrix[$i,$j,",
    "    local str1=$1\n    local str2=$2\n    local str3=$3\n    local m=$((${#str1} + 1))\n    local n=$((${#str2} + 1))\n    local o=$((${#str3} + 1))\n    local -a lcs=()\n    local -a lcs_str1=()\n    local -a lcs_str2=()\n    local -a lcs_str3=()\n    local -a lcs_str1_rev=()\n    local -a lcs_str2_rev=()\n    local -a lcs_str3_rev=()\n    local -a str1_arr=()\n    local -a str2_arr=()\n    local -a str3_arr=()\n    local -a str1_arr_rev=()\n    local -a str2_arr_rev=()\n    local -a str3_arr_rev=()\n    local -a lcs_str1_arr=()\n    local -a lcs_str2_arr=()\n    local -a lcs_str3_arr=()\n    local -a lcs_str1_arr_rev=()\n    local -a lcs_str2_arr_rev=()\n    local -a lcs_str3_arr_rev=()\n    local -a lcs_str1_arr_rev_rev=()\n    local -a lcs_str2_arr_rev_rev=()\n    local -a lcs_str3_arr_rev_rev=()\n    local -a lcs_str1_arr_rev_rev_rev=()\n    local -a lcs_str2_arr_rev_rev_rev=()\n    local -a lcs_str3_arr_rev_rev_rev=()\n    local -a lcs_str1_arr_rev_rev_rev_rev=()\n    local -a lcs_str2_arr_rev_rev_rev_rev=()\n    local -a lcs_str3_arr_rev_rev_rev_rev=()\n    local -a lcs_str1_arr_rev_rev_",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local lcs_str1_str2=\"$(lcs \"$str1\" \"$str2\")\"\n  local lcs_str1_str2_str3=\"$(lcs \"$lcs_str1_str2\" \"$str3\")\"\n  echo \"$lcs_str1_str2_str3\"",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"$3\"\n    local lcs_str1_str2=$(lcs \"$str1\" \"$str2\")\n    local lcs_str1_str2_str3=$(lcs \"$lcs_str1_str2\" \"$str3\")\n    echo \"$lcs_str1_str2_str3\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local str3_len=${#str3}\n  local lcs_matrix=()\n  local i=0\n  local j=0\n  local k=0\n  local lcs_len=0\n  local lcs_str=\"\"\n\n  # Initialize the matrix\n  for ((i=0; i<=str1_len; i++)); do\n    lcs_matrix[$i,0,0]=0\n  done\n  for ((i=0; i<=str2_len; i++)); do\n    lcs_matrix[0,$i,0]=0\n  done\n  for ((i=0; i<=str3_len; i++)); do\n    lcs_matrix[0,0,$i]=0\n  done\n\n  # Fill the matrix\n  for ((i=1; i<=str1_len; i++)); do\n    for ((j=1; j<=str2_len; j++)); do\n      for ((k=1; k<=str3_len; k++)); do\n        if [[ \"${str1:i-1:1}\" == \"${str2:j-1:1}\" && \"${str2:j-1:1}\" == \"${str3:k-1:1}\" ]]; then\n          lcs_matrix[$i,$j,$k]=$(( ${lcs_matrix[$((i-1)),$((j-1)),$((k-1))]} + 1 ))\n        else\n          lcs_matrix[$i,$j,$k]=$(max ${lcs_matrix[$((i-1)),$j,$k]} ${lcs_matrix[$i,$((j-1)),$k]} ${lcs_matrix[$i,$j,$((k-1))]})\n        fi\n      done\n    done\n  done\n\n  # Get the length of the LCS\n  lcs_len",
    "  local -i i j k\n  local -i m n o\n  local -i p q r\n  local -i s t u\n  local -i v w x\n  local -i y z\n  local -i a b c d\n  local -i e f g h\n  local -i j k l m\n  local -i n o p q\n  local -i r s t u\n  local -i v w x y\n  local -i z a b c\n  local -i d e f g\n  local -i h j k l\n  local -i m n o p\n  local -i q r s t\n  local -i u v w x\n  local -i y z a b\n  local -i c d e f\n  local -i g h j k\n  local -i l m n o\n  local -i p q r s\n  local -i t u v w\n  local -i x y z a\n  local -i b c d e\n  local -i f g h j\n  local -i k l m n\n  local -i o p q r\n  local -i s t u v\n  local -i w x y z\n  local -i a b c d\n  local -i e f g h\n  local -i j k l m\n  local -i n o p q\n  local -i r s t u\n  local -i v w x y\n  local -i z a b c\n  local -i d e f g\n  local -i h j k l\n  local -i m n o p\n  local -i q r s t\n  local -i u v w x\n  local -i y z a b\n  local -i c d e f\n  local -i g h j k\n  local -i l m n o\n  local -i p q r s\n  local -i t u v w\n  local -i x y z a\n  local -i b c d e\n  local -i f g h j\n  local -i k l m n\n  local -i o p q r\n  local -i s t u v\n  local -i w x y z\n  local -i a b c d\n  local -i e"
  ]
}
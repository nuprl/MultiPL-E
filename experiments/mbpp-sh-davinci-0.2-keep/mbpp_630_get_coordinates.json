{
  "name": "mbpp_630_get_coordinates",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to extract all the adjacent coordinates of the given coordinate tuple.\n#\n# $1 is a space-separated list\nget_coordinates() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    get_coordinates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 4\") = \"2 3\\n2 4\\n2 5\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\" ]]\n    [[ $(candidate \"4 5\") = \"3 4\\n3 5\\n3 6\\n4 4\\n4 5\\n4 6\\n5 4\\n5 5\\n5 6\" ]]\n    [[ $(candidate \"5 6\") = \"4 5\\n4 6\\n4 7\\n5 5\\n5 6\\n5 7\\n6 5\\n6 6\\n6 7\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local coordinates=\"$1\"\n    local x=\"$(echo \"$coordinates\" | cut -d' ' -f1)\"\n    local y=\"$(echo \"$coordinates\" | cut -d' ' -f2)\"\n    local z=\"$(echo \"$coordinates\" | cut -d' ' -f3)\"\n    echo \"$x $y $z\"\n    echo \"$((x+1)) $y $z\"\n    echo \"$((x-1)) $y $z\"\n    echo \"$x $((y+1)) $z\"\n    echo \"$x $((y-1)) $z\"\n    echo \"$x $y $((z+1))\"\n    echo \"$x $y $((z-1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n\n    echo \"$((x - 1)) $y $z\"\n    echo \"$((x + 1)) $y $z\"\n    echo \"$x $((y - 1)) $z\"\n    echo \"$x $((y + 1)) $z\"\n    echo \"$x $y $((z - 1))\"\n    echo \"$x $y $((z + 1))\"",
    "    echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    echo \"$1\" | sed 's/[^0-9 ]//g'",
    "  echo \"$1\" | sed -e 's/^\\([0-9]*\\) \\([0-9]*\\)$/\\1\\2/'",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    echo $1 | awk '{print $1, $2}'",
    "    local -a coords\n    local -a result\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    echo \"$1\" | sed -r 's/[^0-9 ]//g'",
    "    echo \"$1\" | sed -e 's/^\\([0-9]*\\) \\([0-9]*\\)$/\\1\\n\\2/'",
    "    local x=$1\n    local y=$2\n    local z=$3\n\n    echo \"$((x-1)) $y $z\"\n    echo \"$((x+1)) $y $z\"\n    echo \"$x $((y-1)) $z\"\n    echo \"$x $((y+1)) $z\"\n    echo \"$x $y $((z-1))\"\n    echo \"$x $y $((z+1))\"",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in $(seq -1 1); do\n    for j in $(seq -1 1); do\n      for k in $(seq -1 1); do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "    echo \"$1\" | sed 's/[^0-9 ]//g'",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=(\n        \"$((x-1)) $y $z\"\n        \"$((x+1)) $y $z\"\n        \"$x $((y-1)) $z\"\n        \"$x $((y+1)) $z\"\n        \"$x $y $((z-1))\"\n        \"$x $y $((z+1))\"\n    )\n    echo \"${coordinates[@]}\"",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a adjacent_coordinates\n    local -a adjacent_coordinates_sorted\n    local -a adjacent_coordinates_unique\n    local -a adjacent_coordinates_unique_sorted\n    local -a adjacent_coordinates_unique_sorted_joined\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed_sorted\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed\n    local -a adjacent_coordinates_unique_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed_sorted_joined_trimmed_s",
    "    local -a coordinates\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a t\n    local -a u\n    local -a v\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local -a ba\n    local -a bb\n    local -a bc\n    local -a bd\n    local -a be\n    local -a bf\n    local -a bg\n    local -a bh\n    local -a bi\n    local -a bj\n    local -a bk\n    local -a bl\n    local -a bm\n    local -a b",
    "    local coordinates=\"$1\"\n    local x y\n    read x y <<< \"$coordinates\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n                    continue\n                fi\n                coordinates+=($(($x + $i)) $(($y + $j)) $(($z + $k)))\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    local coordinates=\"$1\"\n    local x=$(echo $coordinates | cut -d' ' -f1)\n    local y=$(echo $coordinates | cut -d' ' -f2)\n    local x_plus_one=$((x + 1))\n    local x_minus_one=$((x - 1))\n    local y_plus_one=$((y + 1))\n    local y_minus_one=$((y - 1))\n\n    echo \"$x_plus_one $y\"\n    echo \"$x_minus_one $y\"\n    echo \"$x $y_plus_one\"\n    echo \"$x $y_minus_one\"\n    echo \"$x_plus_one $y_plus_one\"\n    echo \"$x_minus_one $y_minus_one\"\n    echo \"$x_plus_one $y_minus_one\"\n    echo \"$x_minus_one $y_plus_one\"",
    "    echo \"$1\" | sed 's/[^0-9 ]//g'",
    "    echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    local x=$(echo $1 | cut -d' ' -f1)\n    local y=$(echo $1 | cut -d' ' -f2)\n    local z=$(echo $1 | cut -d' ' -f3)\n    echo \"$((x-1)) $y $z\"\n    echo \"$((x+1)) $y $z\"\n    echo \"$x $((y-1)) $z\"\n    echo \"$x $((y+1)) $z\"\n    echo \"$x $y $((z-1))\"\n    echo \"$x $y $((z+1))\"",
    "    local x=\"$1\"\n    local y=\"$2\"\n    local z=\"$3\"\n    local coordinates=()\n    local i\n    for i in {-1..1}; do\n        coordinates+=(\"$((x+i)) $y $z\")\n    done\n    for i in {-1..1}; do\n        coordinates+=(\"$x $((y+i)) $z\")\n    done\n    for i in {-1..1}; do\n        coordinates+=(\"$x $y $((z+i))\")\n    done\n    echo \"${coordinates[@]}\"",
    "    local -a coordinates\n    local -a adjacent_coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_adjacent_coordinates\n    local -a y_adjacent_coordinates\n    local -a z_adjacent_coordinates\n    local -a x_coordinate\n    local -a y_coordinate\n    local -a z_coordinate\n    local -a x_adjacent_coordinate\n    local -a y_adjacent_coordinate\n    local -a z_adjacent_coordinate\n    local -a adjacent_coordinate\n    local -a coordinate\n    local -a adjacent_coordinates_list\n    local -a adjacent_coordinates_list_string\n    local -a adjacent_coordinates_list_string_length\n    local -a adjacent_coordinates_list_string_length_minus_one\n    local -a adjacent_coordinates_list_string_length_minus_two\n    local -a adjacent_coordinates_list_string_length_minus_three\n    local -a adjacent_coordinates_list_string_length_minus_four\n    local -a adjacent_coordinates_list_string_length_minus_five\n    local -a adjacent_coordinates_list_string_length_minus_six\n    local -a adjacent_coordinates_list_string_length_minus_seven\n    local -a adjacent_coordinates_list_string_length_minus_eight\n    local -a adjacent_coordinates_list_string_length_minus_nine\n    local -a adjacent_coordinates_list_string_length_minus_ten\n    local -a adjacent_coordinates_list_string_length_minus_eleven\n    local -a adjacent_coordinates_list_string_length_minus_twelve\n    local -a adjacent_coordinates_list_string_length_minus_thirteen\n    local -a adjacent_coordinates_list_string_length_minus_fourteen\n    local -a adjacent_coordinates_list_string_length_minus_fifteen\n    local -a adjacent_coordinates_list_string_length_minus_sixteen\n    local -a adjacent_",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in $(seq -1 1); do\n    for j in $(seq -1 1); do\n      for k in $(seq -1 1); do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=($((x+i)) $((y+j)) $((z+k)))\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "    echo $1 | sed -e 's/^\\([0-9]*\\) \\([0-9]*\\)$/\\1\\2/'",
    "    echo \"$1\" | awk '{print $1, $2}'",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    echo \"$1\" | tr ' ' '\\n' | sed -n 's/^\\([0-9]\\+\\),\\([0-9]\\+\\)$/\\1 \\2/p'",
    "    local x y\n    IFS=' ' read -r x y <<< \"$1\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_sorted\n    local -a y_coordinates_sorted\n    local -a z_coordinates_sorted\n    local -a x_coordinates_sorted_unique\n    local -a y_coordinates_sorted_unique\n    local -a z_coordinates_sorted_unique\n    local -a x_coordinates_sorted_unique_adjacent\n    local -a y_coordinates_sorted_unique_adjacent\n    local -a z_coordinates_sorted_unique_adjacent\n    local -a adjacent_coordinates\n    local -a adjacent_coordinates_sorted\n    local -a adjacent_coordinates_sorted_unique\n    local -a adjacent_coordinates_sorted_unique_adjacent\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent_sorted\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique_adjacent\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique_adjacent_sorted\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique_adjacent_sorted_unique_adjacent\n    local -a adjacent_coordinates_sorted_unique_adjacent_sorted_unique_adjacent",
    "  local x y\n  read x y <<< \"$1\"\n  echo \"$((x - 1)) $y\"\n  echo \"$((x + 1)) $y\"\n  echo \"$x $((y - 1))\"\n  echo \"$x $((y + 1))\"",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a xyz_coordinates\n    local -a xyz_coordinates_sorted\n    local -a xyz_coordinates_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_",
    "    echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1 \\2 \\1 \\2/'",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=(\n    \"$(($x - 1)) $y $z\"\n    \"$(($x + 1)) $y $z\"\n    \"$x $(($y - 1)) $z\"\n    \"$x $(($y + 1)) $z\"\n    \"$x $y $(($z - 1))\"\n    \"$x $y $(($z + 1))\"\n  )\n  echo \"${coordinates[@]}\"",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a xyz_coordinates\n    local -a xyz_coordinates_sorted\n    local -a xyz_coordinates_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted\n    local -a xyz_coordinates_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted_uniq\n    local -a xyz_coordinates_sorted_",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=$(echo \"$x $y $z\" | awk '{print $1-1, $2-1, $3-1, $1-1, $2-1, $3, $1-1, $2-1, $3+1, $1-1, $2, $3-1, $1-1, $2, $3, $1-1, $2, $3+1, $1-1, $2+1, $3-1, $1-1, $2+1, $3, $1-1, $2+1, $3+1, $1, $2-1, $3-1, $1, $2-1, $3, $1, $2-1, $3+1, $1, $2, $3-1, $1, $2, $3+1, $1, $2+1, $3-1, $1, $2+1, $3, $1, $2+1, $3+1, $1+1, $2-1, $3-1, $1+1, $2-1, $3, $1+1, $2-1, $3+1, $1+1, $2, $3-1, $1+1, $2, $3, $1+1, $2, $3+1, $1+1, $2+1, $3-1, $1+1, $2+1, $3, $1+1, $2+1, $3+1}')\n    echo \"$coordinates\"",
    "    echo \"$1\" | sed -e 's/^\\(.\\+\\) \\(.\\+\\)$/\\1,\\2/'",
    "    local x y\n    IFS=' ' read -r x y <<< \"$1\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "  local x=$(echo $1 | cut -d' ' -f1)\n  local y=$(echo $1 | cut -d' ' -f2)\n  local coordinates=(\n    \"$((x - 1)) $((y - 1))\"\n    \"$((x - 1)) $y\"\n    \"$((x - 1)) $((y + 1))\"\n    \"$x $((y - 1))\"\n    \"$x $((y + 1))\"\n    \"$((x + 1)) $((y - 1))\"\n    \"$((x + 1)) $y\"\n    \"$((x + 1)) $((y + 1))\"\n  )\n  echo \"${coordinates[@]}\"",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n    local -a x_coordinates=()\n    local -a y_coordinates=()\n\n    for coordinate in \"${coordinates[@]}\"; do\n        x_coordinates+=($(echo \"$coordinate\" | cut -d, -f1))\n        y_coordinates+=($(echo \"$coordinate\" | cut -d, -f2))\n    done\n\n    for x in \"${x_coordinates[@]}\"; do\n        for y in \"${y_coordinates[@]}\"; do\n            adjacent_coordinates+=(\"$x,$y\")\n        done\n    done\n\n    echo \"${adjacent_coordinates[@]}\"",
    "    echo $1 | tr ' ' '\\n' | sed -n 's/^\\([0-9]\\+\\),\\([0-9]\\+\\)$/\\1 \\2/p'",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n    local -a x_coordinates=()\n    local -a y_coordinates=()\n\n    for coordinate in \"${coordinates[@]}\"; do\n        local -a coordinate=($coordinate)\n        x_coordinates+=(${coordinate[0]})\n        y_coordinates+=(${coordinate[1]})\n    done\n\n    local min_x=$(echo \"${x_coordinates[*]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max_x=$(echo \"${x_coordinates[*]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local min_y=$(echo \"${y_coordinates[*]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max_y=$(echo \"${y_coordinates[*]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\n    for x in $(seq $min_x $max_x); do\n        for y in $(seq $min_y $max_y); do\n            adjacent_coordinates+=(\"$x $y\")\n        done\n    done\n\n    echo \"${adjacent_coordinates[@]}\"",
    "    local coordinates=\"$1\"\n    local x=$(echo \"$coordinates\" | cut -d ' ' -f 1)\n    local y=$(echo \"$coordinates\" | cut -d ' ' -f 2)\n    local z=$(echo \"$coordinates\" | cut -d ' ' -f 3)\n\n    echo \"$x $y $((z + 1))\"\n    echo \"$x $y $((z - 1))\"\n    echo \"$x $((y + 1)) $z\"\n    echo \"$x $((y - 1)) $z\"\n    echo \"$((x + 1)) $y $z\"\n    echo \"$((x - 1)) $y $z\"",
    "    local x=$(echo $1 | cut -d' ' -f1)\n    local y=$(echo $1 | cut -d' ' -f2)\n    local z=$(echo $1 | cut -d' ' -f3)\n    local result=\"\"\n    local i\n    for i in $(seq -1 1 1); do\n        result=\"$result $((x + i)) $y $z\"\n        result=\"$result $x $((y + i)) $z\"\n        result=\"$result $x $y $((z + i))\"\n    done\n    echo $result",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n    local x=${coordinates[0]}\n    local y=${coordinates[1]}\n    local -a adjacent_x=($((x-1)) $((x)) $((x+1)))\n    local -a adjacent_y=($((y-1)) $((y)) $((y+1)))\n    for x in ${adjacent_x[@]}; do\n        for y in ${adjacent_y[@]}; do\n            if [[ $x -ne ${coordinates[0]} || $y -ne ${coordinates[1]} ]]; then\n                adjacent_coordinates+=($x $y)\n            fi\n        done\n    done\n    echo \"${adjacent_coordinates[@]}\"",
    "    echo \"$1\" | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\1,\\2/g'",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n    local -a coordinates_adjacent_sorted\n    local -a coordinates_adjacent_unique\n    local -a coordinates_adjacent_unique_sorted\n    local -a coordinates_adjacent_unique_sorted_string\n    local -a coordinates_adjacent_unique_sorted_string_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final\n    local -a coordinates_adjacent_unique_sorted_string_final_final_final_final_final_final_final_final_",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "  local -r x=\"$(echo \"$1\" | cut -d' ' -f1)\"\n  local -r y=\"$(echo \"$1\" | cut -d' ' -f2)\"\n  local -r z=\"$(echo \"$1\" | cut -d' ' -f3)\"\n\n  local -r x_min=\"$((x - 1))\"\n  local -r x_max=\"$((x + 1))\"\n  local -r y_min=\"$((y - 1))\"\n  local -r y_max=\"$((y + 1))\"\n  local -r z_min=\"$((z - 1))\"\n  local -r z_max=\"$((z + 1))\"\n\n  local -r coordinates=\"$(\n    for x in $(seq \"$x_min\" \"$x_max\"); do\n      for y in $(seq \"$y_min\" \"$y_max\"); do\n        for z in $(seq \"$z_min\" \"$z_max\"); do\n          echo \"$x $y $z\"\n        done\n      done\n    done\n  )\"\n\n  echo \"$coordinates\"",
    "    echo \"$1\" | sed -e 's/^\\([0-9]*\\) \\([0-9]*\\)$/\\1,\\2/'",
    "    echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1 \\2 \\1 \\2/'",
    "    local -a coordinates\n    local -a coordinate\n    local -a adjacent_coordinates\n    local -a adjacent_coordinate\n    local -a adjacent_coordinate_tuple\n    local -a adjacent_coordinate_tuples\n    local -a adjacent_coordinate_tuples_string\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d",
    "    echo \"$1\" | sed -e 's
    "    echo \"$1\" | sed -e 's/^\\(.\\+\\) \\(.\\+\\)$/\\1/'",
    "    local coordinates=$1\n    local x=$(echo $coordinates | cut -d' ' -f1)\n    local y=$(echo $coordinates | cut -d' ' -f2)\n    local x_min=$((x - 1))\n    local x_max=$((x + 1))\n    local y_min=$((y - 1))\n    local y_max=$((y + 1))\n    for x in $(seq $x_min $x_max); do\n        for y in $(seq $y_min $y_max); do\n            echo \"$x $y\"\n        done\n    done",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n    local -a coordinates_adjacent_sorted\n    local -a coordinates_adjacent_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_joined\n    local -a coordinates_adjacent_sorted_unique_joined_sorted\n\n    coordinates=($1)\n    x_coordinates=(${coordinates[@]::3})\n    y_coordinates=(${coordinates[@]:3:3})\n    z_coordinates=(${coordinates[@]:6})\n\n    x_coordinates_adjacent=($(get_adjacent_coordinates ${x_coordinates[@]}))\n    y_coordinates_adjacent=($(get_adjacent_coordinates ${y_coordinates[@]}))\n    z_coordinates_adjacent=($(get_adjacent_coordinates ${z_coordinates[@]}))\n\n    coordinates_adjacent=(${x_coordinates_adjacent[@]} ${y_coordinates_adjacent[@]} ${z_coordinates_adjacent[@]})\n    coordinates_adjacent_sorted=($(echo ${coordinates_adjacent[@]} | tr ' ' '\\n' | sort -n))\n    coordinates_adjacent_sorted_unique=($(echo ${coordinates_adjacent_sorted[@]} | tr ' ' '\\n' | uniq))\n    coordinates_adjacent_sorted_unique_joined=($(echo ${coordinates_adjacent_sorted_unique[@]} | tr ' ' '\\n' | paste -sd ' ' -))\n    coordinates_adjacent_sorted_unique_joined_sorted=($(echo ${coordinates_adjacent_sorted_unique_joined[@]} | tr ' ' '\\n' | sort -n))\n\n    echo ${coordinates_adjacent_sorted_unique_joined_sorted[@]}\n",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    # Extract the coordinates from the given string\n    local x=$(echo \"$1\" | cut -d' ' -f1)\n    local y=$(echo \"$1\" | cut -d' ' -f2)\n\n    # Generate the coordinates\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "    echo \"$1\" | sed -e 's/^\\([0-9]*\\) \\([0-9]*\\)$/\\1_\\2/'",
    "    local -a coordinates\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n   ",
    "    local coordinates=$1\n    local x=$(echo $coordinates | cut -d' ' -f1)\n    local y=$(echo $coordinates | cut -d' ' -f2)\n    local x_min=$(($x - 1))\n    local x_max=$(($x + 1))\n    local y_min=$(($y - 1))\n    local y_max=$(($y + 1))\n    local result=\"\"\n    for ((i = $x_min; i <= $x_max; i++)); do\n        for ((j = $y_min; j <= $y_max; j++)); do\n            if [[ $i -eq $x && $j -eq $y ]]; then\n                continue\n            fi\n            result=\"$result $i $j\"\n        done\n    done\n    echo $result",
    "    echo \"$1\" | awk '{print $1, $2}'",
    "  local x y\n  read x y <<< \"$1\"\n  echo \"$((x - 1)) $((y - 1))\"\n  echo \"$((x - 1)) $y\"\n  echo \"$((x - 1)) $((y + 1))\"\n  echo \"$x $((y - 1))\"\n  echo \"$x $((y + 1))\"\n  echo \"$((x + 1)) $((y - 1))\"\n  echo \"$((x + 1)) $y\"\n  echo \"$((x + 1)) $((y + 1))\"",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in -1 0 1; do\n    for j in -1 0 1; do\n      for k in -1 0 1; do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [ $i -ne 0 ] || [ $j -ne 0 ] || [ $k -ne 0 ]; then\n                    coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n                fi\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "  # $1 is a space-separated list\n  # $2 is the number of elements in the list\n  # $3 is the index of the element to extract\n  # $4 is the number of elements to extract\n  # $5 is the number of elements to skip\n  # $6 is the number of elements to skip after the first element\n  local list=\"$1\"\n  local length=\"$2\"\n  local index=\"$3\"\n  local num_elements=\"$4\"\n  local skip=\"$5\"\n  local skip_after=\"$6\"\n  local i\n  local j\n  local k\n  local result=\"\"\n  for ((i=0; i<length; i++)); do\n    for ((j=0; j<num_elements; j++)); do\n      k=$((i + j * skip + index))\n      if [[ $k -lt $length ]]; then\n        result=\"$result ${list:$k:1}\"\n      fi\n    done\n    i=$((i + skip_after))\n  done\n  echo \"$result\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in $(seq -1 1); do\n    for j in $(seq -1 1); do\n      for k in $(seq -1 1); do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "  local -a coordinates=($1)\n  local -a adjacent_coordinates=()\n\n  for ((i=0; i<${#coordinates[@]}; i++)); do\n    local coordinate=${coordinates[$i]}\n    local -a coordinate_parts=(${coordinate//,/ })\n    local x=${coordinate_parts[0]}\n    local y=${coordinate_parts[1]}\n\n    if [[ $x -gt 0 ]]; then\n      adjacent_coordinates+=(\"$((x-1)),$y\")\n    fi\n\n    if [[ $y -gt 0 ]]; then\n      adjacent_coordinates+=(\"$x,$((y-1))\")\n    fi\n\n    adjacent_coordinates+=(\"$x,$((y+1))\")\n    adjacent_coordinates+=(\"$((x+1)),$y\")\n  done\n\n  echo \"${adjacent_coordinates[@]}\"",
    "    echo \"$1\" | sed -e 's/[()]//g' -e 's/,/ /g'",
    "    echo \"$1\" | tr ' ' '\\n'",
    "    local x y\n    read -r x y <<< \"$1\"\n    echo \"$((x - 1)) $((y - 1))\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x - 1)) $((y + 1))\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"\n    echo \"$((x + 1)) $((y - 1))\"\n    echo \"$((x + 1)) $y\"\n    echo \"$((x + 1)) $((y + 1))\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1\\n\\2/g'",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x-1)) $((y-1))\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x-1)) $((y+1))\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"\n    echo \"$((x+1)) $((y-1))\"\n    echo \"$((x+1)) $y\"\n    echo \"$((x+1)) $((y+1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [ $i -eq 0 ] && [ $j -eq 0 ] && [ $k -eq 0 ]; then\n                    continue\n                fi\n                coordinates+=($((x + i)) $((y + j)) $((z + k)))\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    local coordinates=\"$1\"\n    local x=$(echo \"$coordinates\" | cut -d' ' -f1)\n    local y=$(echo \"$coordinates\" | cut -d' ' -f2)\n    local x_min=$((x - 1))\n    local x_max=$((x + 1))\n    local y_min=$((y - 1))\n    local y_max=$((y + 1))\n    for x in $(seq $x_min $x_max); do\n        for y in $(seq $y_min $y_max); do\n            echo \"$x $y\"\n        done\n    done",
    "    echo $1 | sed -e 's/[^0-9 ]*//g'",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n    local -a x_coordinates=()\n    local -a y_coordinates=()\n    local -a z_coordinates=()\n\n    for coordinate in \"${coordinates[@]}\"; do\n        x_coordinates+=($(echo \"$coordinate\" | cut -d',' -f1))\n        y_coordinates+=($(echo \"$coordinate\" | cut -d',' -f2))\n        z_coordinates+=($(echo \"$coordinate\" | cut -d',' -f3))\n    done\n\n    for x in \"${x_coordinates[@]}\"; do\n        for y in \"${y_coordinates[@]}\"; do\n            for z in \"${z_coordinates[@]}\"; do\n                adjacent_coordinates+=($(echo \"$x,$y,$z\"))\n            done\n        done\n    done\n\n    echo \"${adjacent_coordinates[@]}\"",
    "    local x=$1\n    local y=$2\n    local -a coordinates\n    coordinates=(\n        \"$((x - 1)) $((y - 1))\"\n        \"$((x - 1)) $y\"\n        \"$((x - 1)) $((y + 1))\"\n        \"$x $((y - 1))\"\n        \"$x $((y + 1))\"\n        \"$((x + 1)) $((y - 1))\"\n        \"$((x + 1)) $y\"\n        \"$((x + 1)) $((y + 1))\"\n    )\n    echo \"${coordinates[@]}\"",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "    local x y\n    x=$(echo $1 | cut -d' ' -f1)\n    y=$(echo $1 | cut -d' ' -f2)\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    local x y z\n    IFS=' ' read -r x y z <<< \"$1\"\n    echo \"$((x - 1)) $y $z\"\n    echo \"$((x + 1)) $y $z\"\n    echo \"$x $((y - 1)) $z\"\n    echo \"$x $((y + 1)) $z\"\n    echo \"$x $y $((z - 1))\"\n    echo \"$x $y $((z + 1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local result=\"\"\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [ $i -eq 0 ] && [ $j -eq 0 ] && [ $k -eq 0 ]; then\n                    continue\n                fi\n                result=\"$result $(($x + $i)) $(($y + $j)) $(($z + $k))\"\n            done\n        done\n    done\n    echo $result",
    "    echo \"$1\" | cut -d ' ' -f 2-",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "  local coordinates=\"$1\"\n  local x=\"$(echo \"$coordinates\" | cut -d' ' -f1)\"\n  local y=\"$(echo \"$coordinates\" | cut -d' ' -f2)\"\n  local z=\"$(echo \"$coordinates\" | cut -d' ' -f3)\"\n  local x_minus_one=$((x - 1))\n  local x_plus_one=$((x + 1))\n  local y_minus_one=$((y - 1))\n  local y_plus_one=$((y + 1))\n  local z_minus_one=$((z - 1))\n  local z_plus_one=$((z + 1))\n  echo \"$x_minus_one $y $z\"\n  echo \"$x_plus_one $y $z\"\n  echo \"$x $y_minus_one $z\"\n  echo \"$x $y_plus_one $z\"\n  echo \"$x $y $z_minus_one\"\n  echo \"$x $y $z_plus_one\"",
    "    local x y\n    read x y <<<\"$1\"\n    echo \"$((x-1)) $((y-1))\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x-1)) $((y+1))\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"\n    echo \"$((x+1)) $((y-1))\"\n    echo \"$((x+1)) $y\"\n    echo \"$((x+1)) $((y+1))\"",
    "    echo \"$1\" | awk '{print $1, $2}'",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in $(seq -1 1); do\n    for j in $(seq -1 1); do\n      for k in $(seq -1 1); do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates\n    coordinates=\"$(($x-1)) $y $z\"\n    coordinates=\"$coordinates $x $(($y-1)) $z\"\n    coordinates=\"$coordinates $x $(($y+1)) $z\"\n    coordinates=\"$coordinates $x $y $(($z-1))\"\n    coordinates=\"$coordinates $x $y $(($z+1))\"\n    coordinates=\"$coordinates $(($x+1)) $y $z\"\n    echo \"$coordinates\"",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a adjacent_coordinates\n    local -a adjacent_coordinates_unique\n    local -a adjacent_coordinates_sorted\n    local -a adjacent_coordinates_sorted_unique\n    local -a adjacent_coordinates_sorted_unique_string\n    local -a adjacent_coordinates_sorted_unique_string_return\n    local -a adjacent_coordinates_sorted_unique_string_return_string\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return_string\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return_string_return\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return_string_return_string\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return_string_return_string_return\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return_string_return_string_return_string\n    local -a adjacent_coordinates_sorted_unique_string_return_string_return_string_return_string_return_string_",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local r=$4\n    local result=()\n    local i\n    local j\n    local k\n    for ((i=x-r; i<=x+r; i++)); do\n        for ((j=y-r; j<=y+r; j++)); do\n            for ((k=z-r; k<=z+r; k++)); do\n                result+=($i $j $k)\n            done\n        done\n    done\n    echo \"${result[@]}\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=\"\"\n    for i in $(seq $x -1 $((x-1))); do\n        for j in $(seq $y -1 $((y-1))); do\n            for k in $(seq $z -1 $((z-1))); do\n                coordinates=\"$coordinates $i $j $k\"\n            done\n        done\n    done\n    echo $coordinates",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [ $i -ne 0 ] || [ $j -ne 0 ] || [ $k -ne 0 ]; then\n                    coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n                fi\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "  echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1 \\2/'",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n                    continue\n                fi\n                coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    local coordinates=$1\n    local x=$(echo $coordinates | cut -d' ' -f1)\n    local y=$(echo $coordinates | cut -d' ' -f2)\n    local x_min=$((x - 1))\n    local x_max=$((x + 1))\n    local y_min=$((y - 1))\n    local y_max=$((y + 1))\n    for x in $(seq $x_min $x_max); do\n        for y in $(seq $y_min $y_max); do\n            echo \"$x $y\"\n        done\n    done",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_minus\n    local -a x_coordinates_plus\n    local -a y_coordinates_minus\n    local -a y_coordinates_plus\n    local -a z_coordinates_minus\n    local -a z_coordinates_plus\n    local -a x_coordinates_minus_y_coordinates_minus\n    local -a x_coordinates_minus_y_coordinates_plus\n    local -a x_coordinates_plus_y_coordinates_minus\n    local -a x_coordinates_plus_y_coordinates_plus\n    local -a x_coordinates_minus_z_coordinates_minus\n    local -a x_coordinates_minus_z_coordinates_plus\n    local -a x_coordinates_plus_z_coordinates_minus\n    local -a x_coordinates_plus_z_coordinates_plus\n    local -a y_coordinates_minus_z_coordinates_minus\n    local -a y_coordinates_minus_z_coordinates_plus\n    local -a y_coordinates_plus_z_coordinates_minus\n    local -a y_coordinates_plus_z_coordinates_plus\n    local -a x_coordinates_minus_y_coordinates_minus_z_coordinates_minus\n    local -a x_coordinates_minus_y_coordinates_minus_z_coordinates_plus\n    local -a x_coordinates_minus_y_coordinates_plus_z_coordinates_minus\n    local -a x_coordinates_minus_y_coordinates_plus_z_coordinates_plus\n    local -a x_coordinates_plus_y_coordinates_minus_z_coordinates_minus\n    local -a x_coordinates_plus_y_coordinates_minus_z_coordinates_plus\n    local -a x_coordinates_plus_y_coordinates_plus_z_coordinates_minus\n    local -a x_coordinates_plus_y_coordinates_plus_z_coord",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n    local -a adjacent_coordinate=()\n    local -a coordinate=()\n    local -i x=0\n    local -i y=0\n    local -i i=0\n    local -i j=0\n\n    for ((i = 0; i < ${#coordinates[@]}; i += 2)); do\n        x=${coordinates[i]}\n        y=${coordinates[i + 1]}\n        for ((j = -1; j <= 1; j++)); do\n            adjacent_coordinate=($((x + j)) $((y - 1)))\n            adjacent_coordinates+=(${adjacent_coordinate[@]})\n            adjacent_coordinate=($((x + j)) $((y + 1)))\n            adjacent_coordinates+=(${adjacent_coordinate[@]})\n        done\n        adjacent_coordinate=($((x - 1)) $y)\n        adjacent_coordinates+=(${adjacent_coordinate[@]})\n        adjacent_coordinate=($((x + 1)) $y)\n        adjacent_coordinates+=(${adjacent_coordinate[@]})\n    done\n\n    echo ${adjacent_coordinates[@]}",
    "    echo \"$1\" | sed -r 's/[^0-9 ]//g'",
    "    local coordinates=\"$1\"\n    local x=$(echo \"$coordinates\" | cut -d' ' -f1)\n    local y=$(echo \"$coordinates\" | cut -d' ' -f2)\n    local z=$(echo \"$coordinates\" | cut -d' ' -f3)\n\n    local x_plus_1=$((x+1))\n    local x_minus_1=$((x-1))\n    local y_plus_1=$((y+1))\n    local y_minus_1=$((y-1))\n    local z_plus_1=$((z+1))\n    local z_minus_1=$((z-1))\n\n    echo \"$x_plus_1 $y $z\"\n    echo \"$x_minus_1 $y $z\"\n    echo \"$x $y_plus_1 $z\"\n    echo \"$x $y_minus_1 $z\"\n    echo \"$x $y $z_plus_1\"\n    echo \"$x $y $z_minus_1\"",
    "    echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    local -a coords=()\n    local -a x_coords=()\n    local -a y_coords=()\n    local -a z_coords=()\n    local -a x_coords_sorted=()\n    local -a y_coords_sorted=()\n    local -a z_coords_sorted=()\n    local -a x_coords_sorted_uniq=()\n    local -a y_coords_sorted_uniq=()\n    local -a z_coords_sorted_uniq=()\n    local -a x_coords_sorted_uniq_adjacent=()\n    local -a y_coords_sorted_uniq_adjacent=()\n    local -a z_coords_sorted_uniq_adjacent=()\n    local -a x_coords_sorted_uniq_adjacent_sorted=()\n    local -a y_coords_sorted_uniq_adjacent_sorted=()\n    local -a z_coords_sorted_uniq_adjacent_sorted=()\n    local -a x_coords_sorted_uniq_adjacent_sorted_uniq=()\n    local -a y_coords_sorted_uniq_adjacent_sorted_uniq=()\n    local -a z_coords_sorted_uniq_adjacent_sorted_uniq=()\n    local -a x_coords_sorted_uniq_adjacent_sorted_uniq_adjacent=()\n    local -a y_coords_sorted_uniq_adjacent_sorted_uniq_adjacent=()\n    local -a z_coords_sorted_uniq_adjacent_sorted_uniq_adjacent=()\n    local -a x_coords_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted=()\n    local -a y_coords_sorted_uniq_adjacent_sorted_uniq_adjacent_sorted=()\n    local -a z_coords_sorted_uniq_adjacent_",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n    local -a coordinates_adjacent_sorted\n    local -a coordinates_adjacent_sorted_uniq\n    local -a coordinates_adjacent_sorted_uniq_string\n    local -a coordinates_adjacent_sorted_uniq_string_sorted\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted_uniq\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted_uniq_string_sorted_uniq\n    local -a coordinates_adjacent_sorted_uniq_string_sorted_uniq",
    "  local x=$1\n  local y=$2\n  local z=$3\n\n  echo \"$((x - 1)) $y $z\"\n  echo \"$((x + 1)) $y $z\"\n  echo \"$x $((y - 1)) $z\"\n  echo \"$x $((y + 1)) $z\"\n  echo \"$x $y $((z - 1))\"\n  echo \"$x $y $((z + 1))\"",
    "    local -a coordinates\n    local -a x_coords\n    local -a y_coords\n    local -a z_coords\n    local -a x_coords_adj\n    local -a y_coords_adj\n    local -a z_coords_adj\n    local -a coordinates_adj\n    local -a coordinates_adj_sorted\n    local -a coordinates_adj_sorted_uniq\n    local -a coordinates_adj_sorted_uniq_str\n    local -a coordinates_adj_sorted_uniq_str_sorted\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted_uniq\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted_uniq\n    local -a coordinates_adj_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_sorted_uniq_str_",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=($(echo \"$x $y $z\" | awk '{print $1-1, $1, $1+1, $2-1, $2, $2+1, $3-1, $3, $3+1}'))\n    echo \"${coordinates[@]}\"",
    "    echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1,\\2/'",
    "  local -a coordinates\n  local -a x_coordinates\n  local -a y_coordinates\n  local -a z_coordinates\n  local -a x_coordinates_adjacent\n  local -a y_coordinates_adjacent\n  local -a z_coordinates_adjacent\n  local -a coordinates_adjacent\n  local -a coordinates_adjacent_sorted\n  local -a coordinates_adjacent_sorted_unique\n  local -a coordinates_adjacent_sorted_unique_string\n  local -a coordinates_adjacent_sorted_unique_string_joined\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined_trimmed\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined_trimmed_sorted\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined_trimmed_sorted_unique\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined_trimmed_sorted_unique_string\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined_trimmed_sorted_unique_string_joined\n  local -a coordinates_adjacent_sorted_unique_string_joined_trimmed_sorted_unique_string_joined_trimmed_sorted_unique_",
    "    local -a coordinates\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n   ",
    "  echo $1 | sed 's/[^0-9 ]//g'",
    "    local x=$1\n    local y=$2\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    echo \"$1\" | awk '{print $1, $2}'",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    local i=0\n    for i in {0..7}\n    do\n        local x_new=$x\n        local y_new=$y\n        local z_new=$z\n        if (( $i & 1 )); then\n            ((x_new++))\n        else\n            ((x_new--))\n        fi\n        if (( $i & 2 )); then\n            ((y_new++))\n        else\n            ((y_new--))\n        fi\n        if (( $i & 4 )); then\n            ((z_new++))\n        else\n            ((z_new--))\n        fi\n        coordinates+=(\"$x_new $y_new $z_new\")\n    done\n    echo \"${coordinates[@]}\"",
    "    local x=$(echo $1 | cut -d' ' -f1)\n    local y=$(echo $1 | cut -d' ' -f2)\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n    local -a coordinates_adjacent_sorted\n    local -a coordinates_adjacent_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_string\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas_no_quotes\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas_no_quotes_no_parens\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas_no_quotes_no_parens_no_braces\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas_no_quotes_no_parens_no_braces_no_hyphens\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas_no_quotes_no_parens_no_braces_no_hyphens_no_periods\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_no_spaces_no_commas_no_quotes_no_parens_no_braces_no_hyphens_no_periods_no_underscores\n    local -a coordinates_adjacent_sorted_unique_string_no_brackets_",
    "    local -a coordinates=($1)\n    local -a x_coords=(${coordinates[0]})\n    local -a y_coords=(${coordinates[1]})\n    local -a z_coords=(${coordinates[2]})\n    local -a x_coords_adjacent=($(get_adjacent_coordinates ${x_coords[0]}))\n    local -a y_coords_adjacent=($(get_adjacent_coordinates ${y_coords[0]}))\n    local -a z_coords_adjacent=($(get_adjacent_coordinates ${z_coords[0]}))\n    local -a adjacent_coordinates=()\n    for x in ${x_coords_adjacent[@]}; do\n        for y in ${y_coords_adjacent[@]}; do\n            for z in ${z_coords_adjacent[@]}; do\n                adjacent_coordinates+=($x $y $z)\n            done\n        done\n    done\n    echo ${adjacent_coordinates[@]}",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n                    continue\n                fi\n                coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n            done\n        done\n    done\n\n    echo \"${coordinates[@]}\"",
    "  local coordinates=\"$1\"\n  local x=\"$(echo \"$coordinates\" | cut -d ' ' -f 1)\"\n  local y=\"$(echo \"$coordinates\" | cut -d ' ' -f 2)\"\n  local z=\"$(echo \"$coordinates\" | cut -d ' ' -f 3)\"\n  echo \"$((x-1)) $y $z\"\n  echo \"$((x+1)) $y $z\"\n  echo \"$x $((y-1)) $z\"\n  echo \"$x $((y+1)) $z\"\n  echo \"$x $y $((z-1))\"\n  echo \"$x $y $((z+1))\"",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n\n    for ((i=0; i<${#coordinates[@]}; i++)); do\n        local coordinate=${coordinates[$i]}\n        local x=${coordinate%%,*}\n        local y=${coordinate##*,}\n\n        if [[ $i -eq 0 ]]; then\n            adjacent_coordinates+=(\"$((x-1)),$y\")\n            adjacent_coordinates+=(\"$((x+1)),$y\")\n            adjacent_coordinates+=(\"$x,$((y-1))\")\n            adjacent_coordinates+=(\"$x,$((y+1))\")\n        elif [[ $i -eq 1 ]]; then\n            adjacent_coordinates+=(\"$((x-1)),$y\")\n            adjacent_coordinates+=(\"$((x+1)),$y\")\n        elif [[ $i -eq 2 ]]; then\n            adjacent_coordinates+=(\"$x,$((y-1))\")\n            adjacent_coordinates+=(\"$x,$((y+1))\")\n        fi\n    done\n\n    echo \"${adjacent_coordinates[@]}\"",
    "    local -a coordinates=($1)\n    local -a x_coordinates=(${coordinates[@]::2})\n    local -a y_coordinates=(${coordinates[@]:2})\n    local -a x_coordinates_sorted=($(printf \"%s\\n\" \"${x_coordinates[@]}\" | sort -n))\n    local -a y_coordinates_sorted=($(printf \"%s\\n\" \"${y_coordinates[@]}\" | sort -n))\n    local -a x_coordinates_adjacent=($(printf \"%s\\n\" \"${x_coordinates_sorted[@]}\" | awk '{for(i=1;i<=NF;i++)print $i-1,$i,$i+1}'))\n    local -a y_coordinates_adjacent=($(printf \"%s\\n\" \"${y_coordinates_sorted[@]}\" | awk '{for(i=1;i<=NF;i++)print $i-1,$i,$i+1}'))\n    local -a coordinates_adjacent=()\n    for x in ${x_coordinates_adjacent[@]}; do\n        for y in ${y_coordinates_adjacent[@]}; do\n            coordinates_adjacent+=($x $y)\n        done\n    done\n    printf \"%s\\n\" \"${coordinates_adjacent[@]}\"",
    "    local x=$(echo $1 | cut -d' ' -f1)\n    local y=$(echo $1 | cut -d' ' -f2)\n    local coordinates=\"$x $((y-1)) $x $((y+1)) $((x-1)) $y $((x+1)) $y\"\n    echo $coordinates",
    "  echo \"$1\" | sed 's/[^0-9 ]//g'",
    "    local -a coordinates\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a t\n    local -a u\n    local -a v\n    local -a s\n    local -a r\n    local -a q\n    local -a p\n    local -a o\n    local -a n\n    local -a m\n    local -a l\n    local -a k\n    local -a j\n    local -a i\n    local -a h\n    local -a g\n    local -a f\n    local -a e\n    local -a d\n    local -a c\n    local -a b\n    local -a a\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local -a 0\n    local -a 1\n    local -a 2\n    local -a 3\n    local -a 4\n    local -a 5\n    local -a 6\n    local -a 7\n    local -a 8\n    local -a 9\n    local -a _\n    local -a -\n    local -a +\n    local -a =\n    local -a !\n    local -a @\n    local -a #\n    local -a $\n    local -a %\n    local -a ^\n    local -a &\n    local -a *\n    local -a (\n    local -a )\n    local -a [\n    local -a ]\n    local -a {\n    local -a }\n    local -a \\\n    local -a |\n    local -a ;\n    local -a :\n   ",
    "    echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1,\\2/'",
    "  echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n    local -a coordinates_adjacent_sorted\n    local -a coordinates_adjacent_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_sorted\n    local -a coordinates_adjacent_sorted_unique_sorted_string\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string_adjacent\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string_adjacent_sorted\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string\n    local -a coordinates_adjacent_sorted_unique_sorted_string_adjacent_sorted_unique_sorted_string_adjacent",
    "    local x=$(echo $1 | cut -d' ' -f1)\n    local y=$(echo $1 | cut -d' ' -f2)\n    echo \"$((x-1)) $((y-1))\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x-1)) $((y+1))\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"\n    echo \"$((x+1)) $((y-1))\"\n    echo \"$((x+1)) $y\"\n    echo \"$((x+1)) $((y+1))\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    local coordinates=$1\n    local x=$(echo $coordinates | cut -d ' ' -f 1)\n    local y=$(echo $coordinates | cut -d ' ' -f 2)\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "    echo $1 | sed -e 's/^\\([0-9]*\\) \\([0-9]*\\)$/\\1 \\2 \\1 \\2/'",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n\n    for ((i=0; i<${#coordinates[@]}; i++)); do\n        for ((j=i+1; j<${#coordinates[@]}; j++)); do\n            adjacent_coordinates+=(${coordinates[i]} ${coordinates[j]})\n        done\n    done\n\n    echo \"${adjacent_coordinates[@]}\"",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local result=\"\"\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [[ $i == 0 && $j == 0 && $k == 0 ]]; then\n                    continue\n                fi\n                result=\"$result $((x+i)) $((y+j)) $((z+k))\"\n            done\n        done\n    done\n    echo $result",
    "  local coordinates=$1\n  local x=$(echo $coordinates | cut -d' ' -f1)\n  local y=$(echo $coordinates | cut -d' ' -f2)\n  local z=$(echo $coordinates | cut -d' ' -f3)\n\n  local x_plus_1=$((x + 1))\n  local x_minus_1=$((x - 1))\n  local y_plus_1=$((y + 1))\n  local y_minus_1=$((y - 1))\n  local z_plus_1=$((z + 1))\n  local z_minus_1=$((z - 1))\n\n  echo \"$x_plus_1 $y $z\"\n  echo \"$x_minus_1 $y $z\"\n  echo \"$x $y_plus_1 $z\"\n  echo \"$x $y_minus_1 $z\"\n  echo \"$x $y $z_plus_1\"\n  echo \"$x $y $z_minus_1\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n\n    echo \"$((x-1)) $y $z\"\n    echo \"$((x+1)) $y $z\"\n    echo \"$x $((y-1)) $z\"\n    echo \"$x $((y+1)) $z\"\n    echo \"$x $y $((z-1))\"\n    echo \"$x $y $((z+1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n                    continue\n                fi\n                coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local w=$4\n    local result=()\n    for i in $(seq -f \"%g\" $x $w); do\n        for j in $(seq -f \"%g\" $y $z); do\n            result+=(\"$i $j\")\n        done\n    done\n    echo \"${result[@]}\"",
    "    echo $1 | sed -e 's/[^0-9 ]//g'",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n\n    IFS=' ' read -ra coordinates <<< \"$1\"\n    for coordinate in \"${coordinates[@]}\"; do\n        IFS=',' read -ra coordinate_split <<< \"$coordinate\"\n        x_coordinates+=(${coordinate_split[0]})\n        y_coordinates+=(${coordinate_split[1]})\n        z_coordinates+=(${coordinate_split[2]})\n    done\n\n    for x_coordinate in \"${x_coordinates[@]}\"; do\n        x_coordinates_adjacent+=($((x_coordinate - 1)))\n        x_coordinates_adjacent+=($((x_coordinate + 1)))\n    done\n\n    for y_coordinate in \"${y_coordinates[@]}\"; do\n        y_coordinates_adjacent+=($((y_coordinate - 1)))\n        y_coordinates_adjacent+=($((y_coordinate + 1)))\n    done\n\n    for z_coordinate in \"${z_coordinates[@]}\"; do\n        z_coordinates_adjacent+=($((z_coordinate - 1)))\n        z_coordinates_adjacent+=($((z_coordinate + 1)))\n    done\n\n    for x_coordinate_adjacent in \"${x_coordinates_adjacent[@]}\"; do\n        for y_coordinate_adjacent in \"${y_coordinates_adjacent[@]}\"; do\n            for z_coordinate_adjacent in \"${z_coordinates_adjacent[@]}\"; do\n                coordinates_adjacent+=(\"$x_coordinate_adjacent,$y_coordinate_adjacent,$z_coordinate_adjacent\")\n            done\n        done\n    done\n\n    echo \"${coordinates_adjacent[@]}\"",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x - 1)) $((y - 1))\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x - 1)) $((y + 1))\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"\n    echo \"$((x + 1)) $((y - 1))\"\n    echo \"$((x + 1)) $y\"\n    echo \"$((x + 1)) $((y + 1))\"",
    "  local coordinates=\"$1\"\n  local x=\"$(echo \"$coordinates\" | cut -d ' ' -f 1)\"\n  local y=\"$(echo \"$coordinates\" | cut -d ' ' -f 2)\"\n  local z=\"$(echo \"$coordinates\" | cut -d ' ' -f 3)\"\n  local x_plus_1=\"$((x + 1))\"\n  local x_minus_1=\"$((x - 1))\"\n  local y_plus_1=\"$((y + 1))\"\n  local y_minus_1=\"$((y - 1))\"\n  local z_plus_1=\"$((z + 1))\"\n  local z_minus_1=\"$((z - 1))\"\n  echo \"$x $y $z_plus_1\"\n  echo \"$x $y $z_minus_1\"\n  echo \"$x $y_plus_1 $z\"\n  echo \"$x $y_minus_1 $z\"\n  echo \"$x_plus_1 $y $z\"\n  echo \"$x_minus_1 $y $z\"",
    "    echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    local x y\n    read x y <<< \"$1\"\n    echo \"$((x-1)) $y\"\n    echo \"$((x+1)) $y\"\n    echo \"$x $((y-1))\"\n    echo \"$x $((y+1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local result=\"\"\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [ \"$i\" -eq \"0\" ] && [ \"$j\" -eq \"0\" ] && [ \"$k\" -eq \"0\" ]; then\n                    continue\n                fi\n                result=\"$result $((x+i)) $((y+j)) $((z+k))\"\n            done\n        done\n    done\n    echo $result",
    "    local x=$1\n    local y=$2\n    local z=$3\n\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n                    continue\n                fi\n                coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "  local -a coordinates=($1)\n  local -a x_coordinates=(${coordinates[0]})\n  local -a y_coordinates=(${coordinates[1]})\n  local -a z_coordinates=(${coordinates[2]})\n  local -a adjacent_coordinates=()\n\n  for x in ${x_coordinates[@]}; do\n    for y in ${y_coordinates[@]}; do\n      for z in ${z_coordinates[@]}; do\n        adjacent_coordinates+=($x $y $z)\n      done\n    done\n  done\n\n  echo \"${adjacent_coordinates[@]}\"",
    "  local x y\n  IFS=' ' read -r x y <<< \"$1\"\n  echo \"$((x - 1)) $((y - 1))\"\n  echo \"$((x - 1)) $y\"\n  echo \"$((x - 1)) $((y + 1))\"\n  echo \"$x $((y - 1))\"\n  echo \"$x $((y + 1))\"\n  echo \"$((x + 1)) $((y - 1))\"\n  echo \"$((x + 1)) $y\"\n  echo \"$((x + 1)) $((y + 1))\"",
    "    local x y\n    IFS=' ' read -r x y <<< \"$1\"\n    echo \"$((x - 1)) $y\"\n    echo \"$((x + 1)) $y\"\n    echo \"$x $((y - 1))\"\n    echo \"$x $((y + 1))\"",
    "    echo $1 | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1,\\2/'",
    "  local coordinates=\"$1\"\n  local x=$(echo \"$coordinates\" | cut -d ' ' -f 1)\n  local y=$(echo \"$coordinates\" | cut -d ' ' -f 2)\n  local -a adjacent_coordinates=()\n  for ((i = -1; i <= 1; i++)); do\n    for ((j = -1; j <= 1; j++)); do\n      if [[ \"$i\" != 0 || \"$j\" != 0 ]]; then\n        adjacent_coordinates+=(\"$((x + i)) $((y + j))\")\n      fi\n    done\n  done\n  echo \"${adjacent_coordinates[@]}\"",
    "  local x y\n  read x y <<< \"$1\"\n  echo \"$((x-1)) $((y-1))\"\n  echo \"$((x-1)) $y\"\n  echo \"$((x-1)) $((y+1))\"\n  echo \"$x $((y-1))\"\n  echo \"$x $((y+1))\"\n  echo \"$((x+1)) $((y-1))\"\n  echo \"$((x+1)) $y\"\n  echo \"$((x+1)) $((y+1))\"",
    "    echo \"$1\" | sed -r 's/[^0-9 ]//g'",
    "    echo \"$1\" | awk '{print $1, $2}'",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in $(seq -1 1); do\n        for j in $(seq -1 1); do\n            for k in $(seq -1 1); do\n                if [ $i -eq 0 ] && [ $j -eq 0 ] && [ $k -eq 0 ]; then\n                    continue\n                fi\n                coordinates+=($((x + i)) $((y + j)) $((z + k)))\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    local -a coordinates=()\n    local -i i=0\n    for coordinate in $1; do\n        if (( i % 2 == 0 )); then\n            coordinates+=($coordinate)\n        fi\n        (( i++ ))\n    done\n    echo \"${coordinates[@]}\"",
    "    echo $1 | sed 's/[^0-9 ]//g'",
    "    local -a coordinates\n    local -i x y\n    local -i i\n    local -i max_x max_y\n    local -i min_x min_y\n\n    max_x=0\n    max_y=0\n    min_x=0\n    min_y=0\n\n    for i in $1; do\n        x=${i%%,*}\n        y=${i##*,}\n        coordinates[$x,$y]=1\n        if (( x > max_x )); then\n            max_x=$x\n        fi\n        if (( y > max_y )); then\n            max_y=$y\n        fi\n        if (( x < min_x )); then\n            min_x=$x\n        fi\n        if (( y < min_y )); then\n            min_y=$y\n        fi\n    done\n\n    for (( x = min_x; x <= max_x; x++ )); do\n        for (( y = min_y; y <= max_y; y++ )); do\n            if [[ ${coordinates[$x,$y]} ]]; then\n                echo \"$x,$y\"\n            fi\n        done\n    done",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=\"$x $y $z\"\n\n    local x_coordinates=\"$x $((x + 1)) $((x - 1))\"\n    local y_coordinates=\"$y $((y + 1)) $((y - 1))\"\n    local z_coordinates=\"$z $((z + 1)) $((z - 1))\"\n\n    for x in $x_coordinates; do\n        for y in $y_coordinates; do\n            for z in $z_coordinates; do\n                if [[ \"$x $y $z\" != \"$coordinates\" ]]; then\n                    echo \"$x $y $z\"\n                fi\n            done\n        done\n    done",
    "  local coordinates=\"$1\"\n  local x=$(echo \"$coordinates\" | cut -d ' ' -f 1)\n  local y=$(echo \"$coordinates\" | cut -d ' ' -f 2)\n  local x_minus_1=$((x - 1))\n  local x_plus_1=$((x + 1))\n  local y_minus_1=$((y - 1))\n  local y_plus_1=$((y + 1))\n  echo \"$x_minus_1 $y_minus_1\"\n  echo \"$x_minus_1 $y\"\n  echo \"$x_minus_1 $y_plus_1\"\n  echo \"$x $y_minus_1\"\n  echo \"$x $y_plus_1\"\n  echo \"$x_plus_1 $y_minus_1\"\n  echo \"$x_plus_1 $y\"\n  echo \"$x_plus_1 $y_plus_1\"",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in $(seq -1 1); do\n    for j in $(seq -1 1); do\n      for k in $(seq -1 1); do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "    echo \"$1\" | sed 's/[^0-9 ]//g'",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local r=$4\n    local coordinates=()\n    for i in $(seq -f \"%g\" $((x-r)) $((x+r))); do\n        for j in $(seq -f \"%g\" $((y-r)) $((y+r))); do\n            for k in $(seq -f \"%g\" $((z-r)) $((z+r))); do\n                coordinates+=($i $j $k)\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=(\n    \"$((x-1)) $y $z\"\n    \"$((x+1)) $y $z\"\n    \"$x $((y-1)) $z\"\n    \"$x $((y+1)) $z\"\n    \"$x $y $((z-1))\"\n    \"$x $y $((z+1))\"\n  )\n  echo \"${coordinates[@]}\"",
    "  local x=$1 y=$2\n  echo \"$((x-1)) $((y-1))\"\n  echo \"$((x-1)) $y\"\n  echo \"$((x-1)) $((y+1))\"\n  echo \"$x $((y-1))\"\n  echo \"$x $((y+1))\"\n  echo \"$((x+1)) $((y-1))\"\n  echo \"$((x+1)) $y\"\n  echo \"$((x+1)) $((y+1))\"",
    "    local -a coordinates\n    local -a coordinate\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a x_coordinates_adjacent\n    local -a y_coordinates_adjacent\n    local -a z_coordinates_adjacent\n    local -a coordinates_adjacent\n    local -a coordinates_adjacent_sorted\n    local -a coordinates_adjacent_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_string\n    local -a coordinates_adjacent_sorted_unique_string_sorted\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique_string\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique\n    local -a coordinates_adjacent_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique_string_sorted_unique_string\n    local -a coordinates_adj",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local result=()\n  for i in -1 0 1; do\n    for j in -1 0 1; do\n      for k in -1 0 1; do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        result+=(\"$((x+i)) $((y+j)) $((z+k))\")\n      done\n    done\n  done\n  echo \"${result[@]}\"",
    "    local -a coordinates\n    local -a coordinate\n    local -a x\n    local -a y\n    local -a z\n    local -a t\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a t_coordinates\n    local -a x_coordinates_sorted\n    local -a y_coordinates_sorted\n    local -a z_coordinates_sorted\n    local -a t_coordinates_sorted\n    local -a coordinates_sorted\n    local -a coordinates_sorted_unique\n    local -a coordinates_sorted_unique_sorted\n    local -a coordinates_sorted_unique_sorted_adjacent\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted_unique\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted_unique_sorted\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted_unique_sorted_adjacent_sorted_unique\n    local -a coordinates_sorted_unique_sorted_adjacent_sorted_",
    "  local x y\n  read x y <<< \"$1\"\n  echo \"$((x-1)) $y\"\n  echo \"$((x+1)) $y\"\n  echo \"$x $((y-1))\"\n  echo \"$x $((y+1))\"",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local r=$4\n    local result=\"\"\n    for i in $(seq $((x-r)) $((x+r))); do\n        for j in $(seq $((y-r)) $((y+r))); do\n            for k in $(seq $((z-r)) $((z+r))); do\n                result+=\"$i $j $k \"\n            done\n        done\n    done\n    echo $result",
    "    echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=(\n        \"$((x-1)) $y $z\"\n        \"$((x+1)) $y $z\"\n        \"$x $((y-1)) $z\"\n        \"$x $((y+1)) $z\"\n        \"$x $y $((z-1))\"\n        \"$x $y $((z+1))\"\n    )\n    echo \"${coordinates[@]}\"",
    "    local -a coordinates\n    local -a coordinate\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a t\n    local -a u\n    local -a v\n    local -a s\n    local -a r\n    local -a q\n    local -a p\n    local -a o\n    local -a n\n    local -a m\n    local -a l\n    local -a k\n    local -a j\n    local -a i\n    local -a h\n    local -a g\n    local -a f\n    local -a e\n    local -a d\n    local -a c\n    local -a b\n    local -a a\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local -a 0\n    local -a 1\n    local -a 2\n    local -a 3\n    local -a 4\n    local -a 5\n    local -a 6\n    local -a 7\n    local -a 8\n    local -a 9\n    local -a -\n    local -a _\n    local -a .\n    local -a ,\n    local -a :\n    local -a ;\n    local -a !\n    local -a @\n    local -a #\n    local -a $\n    local -a %\n    local -a ^\n    local -a &\n    local -a *\n    local -a (\n    local -a )\n    local -a -\n    local -a =\n    local -a +\n    local -a [\n    local -a ]\n   ",
    "    local -a coordinates\n    local -i x y\n    local -i i=0\n\n    for coordinate in $1; do\n        if (( i % 2 == 0 )); then\n            x=$coordinate\n        else\n            y=$coordinate\n            coordinates+=(\"$x $y\")\n        fi\n        (( i++ ))\n    done\n\n    echo \"${coordinates[@]}\"",
    "  local coordinates=$1\n  local x=$(echo $coordinates | cut -d' ' -f1)\n  local y=$(echo $coordinates | cut -d' ' -f2)\n  local adjacent_coordinates=\"$x $((y-1)) $x $((y+1)) $((x-1)) $y $((x+1)) $y\"\n  echo $adjacent_coordinates",
    "    local x=$1\n    local y=$2\n    local z=$3\n    local coordinates=()\n    for i in {-1..1}; do\n        for j in {-1..1}; do\n            for k in {-1..1}; do\n                if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n                    continue\n                fi\n                coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n            done\n        done\n    done\n    echo \"${coordinates[@]}\"",
    "    local -a coordinates=($1)\n    local x=${coordinates[0]}\n    local y=${coordinates[1]}\n    echo \"$((x-1)) $y $((x+1)) $y $x $((y-1)) $x $((y+1))\"",
    "    echo \"$1\" | sed -e 's/\\([0-9]*\\) \\([0-9]*\\)/\\1,\\2/g'",
    "    local -a coordinates\n    local -a coordinate\n    local -a x\n    local -a y\n    local -a z\n    local -a w\n    local -a t\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a u\n    local -a v\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local -a ba\n    local -a bb\n    local -a bc\n    local -a bd\n    local -a be\n    local -a bf\n    local -a bg\n    local -a bh\n    local -a bi\n    local -a bj\n    local -a bk\n    local -a bl\n    local -a bm\n    local -a bn\n    local -a bo\n    local -a bp\n    local -a bq\n    local",
    "    local coordinates=\"$1\"\n    local x=\"$(echo \"$coordinates\" | cut -d' ' -f1)\"\n    local y=\"$(echo \"$coordinates\" | cut -d' ' -f2)\"\n    local z=\"$(echo \"$coordinates\" | cut -d' ' -f3)\"\n    local -a adjacent_coordinates\n    adjacent_coordinates=(\n        \"$((x - 1)) $y $z\"\n        \"$((x + 1)) $y $z\"\n        \"$x $((y - 1)) $z\"\n        \"$x $((y + 1)) $z\"\n        \"$x $y $((z - 1))\"\n        \"$x $y $((z + 1))\"\n    )\n    echo \"${adjacent_coordinates[*]}\"",
    "  echo \"$1\" | sed -E 's/^\\(([0-9]+),([0-9]+)\\)$/\\1 \\2/'",
    "    local coordinates=($1)\n    local x=${coordinates[0]}\n    local y=${coordinates[1]}\n    local z=${coordinates[2]}\n    local w=${coordinates[3]}\n    echo \"$((x-1)) $y $z $w\"\n    echo \"$((x+1)) $y $z $w\"\n    echo \"$x $((y-1)) $z $w\"\n    echo \"$x $((y+1)) $z $w\"\n    echo \"$x $y $((z-1)) $w\"\n    echo \"$x $y $((z+1)) $w\"\n    echo \"$x $y $z $((w-1))\"\n    echo \"$x $y $z $((w+1))\"",
    "    local -a coordinates\n    local -a x_coordinates\n    local -a y_coordinates\n    local -a z_coordinates\n    local -a xyz_coordinates\n    local -a xyz_coordinates_sorted\n    local -a xyz_coordinates_sorted_unique\n    local -a xyz_coordinates_sorted_unique_adjacent\n    local -a xyz_coordinates_sorted_unique_adjacent_sorted\n\n    coordinates=($1)\n    x_coordinates=(${coordinates[0]})\n    y_coordinates=(${coordinates[1]})\n    z_coordinates=(${coordinates[2]})\n\n    for x in ${x_coordinates[@]}; do\n        for y in ${y_coordinates[@]}; do\n            for z in ${z_coordinates[@]}; do\n                xyz_coordinates+=($x $y $z)\n            done\n        done\n    done\n\n    xyz_coordinates_sorted=($(printf \"%s\\n\" \"${xyz_coordinates[@]}\" | sort -n))\n\n    for xyz in ${xyz_coordinates_sorted[@]}; do\n        xyz_coordinates_sorted_unique+=($xyz)\n    done\n\n    for xyz in ${xyz_coordinates_sorted_unique[@]}; do\n        xyz_coordinates_sorted_unique_adjacent+=($xyz)\n        xyz_coordinates_sorted_unique_adjacent+=($((xyz - 1)))\n        xyz_coordinates_sorted_unique_adjacent+=($((xyz + 1)))\n    done\n\n    xyz_coordinates_sorted_unique_adjacent_sorted=($(printf \"%s\\n\" \"${xyz_coordinates_sorted_unique_adjacent[@]}\" | sort -n))\n\n    echo ${xyz_coordinates_sorted_unique_adjacent_sorted[@]}",
    "    local -a coordinates\n    local -a coordinate\n    local -a x\n    local -a y\n    local -a z\n    local -a xyz\n    local -a xy\n    local -a xz\n    local -a yz\n    local -a xyz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -a yz_coordinates\n    local -a xy_coordinates\n    local -a xz_coordinates\n    local -",
    "    local -a coordinates=()\n    local -a coordinate=()\n    local -a adjacent=()\n    local -a adjacent_coordinates=()\n    local -a adjacent_coordinate=()\n    local -a adjacent_coordinate_tmp=()\n    local -a adjacent_coordinate_tmp2=()\n    local -a adjacent_coordinate_tmp3=()\n    local -a adjacent_coordinate_tmp4=()\n    local -a adjacent_coordinate_tmp5=()\n    local -a adjacent_coordinate_tmp6=()\n    local -a adjacent_coordinate_tmp7=()\n    local -a adjacent_coordinate_tmp8=()\n    local -a adjacent_coordinate_tmp9=()\n    local -a adjacent_coordinate_tmp10=()\n    local -a adjacent_coordinate_tmp11=()\n    local -a adjacent_coordinate_tmp12=()\n    local -a adjacent_coordinate_tmp13=()\n    local -a adjacent_coordinate_tmp14=()\n    local -a adjacent_coordinate_tmp15=()\n    local -a adjacent_coordinate_tmp16=()\n    local -a adjacent_coordinate_tmp17=()\n    local -a adjacent_coordinate_tmp18=()\n    local -a adjacent_coordinate_tmp19=()\n    local -a adjacent_coordinate_tmp20=()\n    local -a adjacent_coordinate_tmp21=()\n    local -a adjacent_coordinate_tmp22=()\n    local -a adjacent_coordinate_tmp23=()\n    local -a adjacent_coordinate_tmp24=()\n    local -a adjacent_coordinate_tmp25=()\n    local -a adjacent_coordinate_tmp26=()\n    local -a adjacent_coordinate_tmp27=()\n    local -a adjacent_coordinate_tmp28=()\n    local -a adjacent_coordinate_tmp29=()\n    local -a adjacent_coordinate_tmp30=()\n    local -a adjacent_coordinate_tmp31=()\n    local -a adjacent_coordinate_tmp32=()\n    local -a adjacent_coordinate_tmp33=()\n    local -a",
    "    local -a coordinates=($1)\n    local -a adjacent_coordinates=()\n    local -a adjacent_coordinate=()\n\n    for ((i = 0; i < ${#coordinates[@]}; i++)); do\n        for ((j = 0; j < ${#coordinates[@]}; j++)); do\n            if [[ $i -ne $j ]]; then\n                adjacent_coordinate=(${coordinates[$i]} ${coordinates[$j]})\n                adjacent_coordinates+=(${adjacent_coordinate[@]})\n            fi\n        done\n    done\n\n    echo ${adjacent_coordinates[@]}",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=\"$x $y $z\"\n  local adjacent_coordinates=()\n  for x in $(seq $((x - 1)) $((x + 1))); do\n    for y in $(seq $((y - 1)) $((y + 1))); do\n      for z in $(seq $((z - 1)) $((z + 1))); do\n        if [[ \"$x $y $z\" != \"$coordinates\" ]]; then\n          adjacent_coordinates+=(\"$x $y $z\")\n        fi\n      done\n    done\n  done\n  echo \"${adjacent_coordinates[@]}\"",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in {-1..1}; do\n    for j in {-1..1}; do\n      for k in {-1..1}; do\n        if [[ $i -eq 0 && $j -eq 0 && $k -eq 0 ]]; then\n          continue\n        fi\n        coordinates+=(\"$((x + i)) $((y + j)) $((z + k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "  local x=$1\n  local y=$2\n  local z=$3\n  local coordinates=()\n  for i in $(seq -1 1); do\n    for j in $(seq -1 1); do\n      for k in $(seq -1 1); do\n        if [ $i -eq 0 ] && [ $j -eq 0 ] && [ $k -eq 0 ]; then\n          continue\n        fi\n        coordinates+=(\"$((x+i)) $((y+j)) $((z+k))\")\n      done\n    done\n  done\n  echo \"${coordinates[@]}\"",
    "    echo $1 | sed -e 's/^\\(([0-9]*), ([0-9]*)\\)$/\\1 \\2/'",
    "    echo \"$1\" | sed -e 's/[^0-9 ]//g'",
    "    echo $1 | sed 's/[^0-9 ]//g'",
    "    echo \"$1\" | sed -e 's/^\\([0-9]\\+\\) \\([0-9]\\+\\)$/\\1\\2/'"
  ]
}
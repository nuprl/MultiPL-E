{
  "name": "mbpp_103_eulerian_num",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the Eulerian number a(n, m).\n#\n# $1 is an integer\n# $2 is an integer\neulerian_num() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    eulerian_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"1\") = \"4\" ]]\n    [[ $(candidate \"4\" \"1\") = \"11\" ]]\n    [[ $(candidate \"5\" \"3\") = \"26\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local m=$2\n    local i=0\n    local j=0\n    local sum=0\n    local num=0\n    local den=0\n    local result=0\n    for ((i=0; i<=n; i++)); do\n        sum=0\n        for ((j=0; j<=i; j++)); do\n            num=$((n-j))\n            den=$((i-j))\n            sum=$((sum+((num^m)/den)))\n        done\n        result=$((result+sum))\n    done\n    echo $result",
    "  local n=\"$1\"\n  local m=\"$2\"\n  local i\n  local j\n  local k\n  local sum=0\n  for ((i=0; i<=n; i++)); do\n    for ((j=0; j<=m; j++)); do\n      for ((k=0; k<=i; k++)); do\n        sum=$((sum + ((-1)**(i-k)) * binomial_coeff $i $k * binomial_coeff $k $j))\n      done\n    done\n  done\n  echo $sum",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local a\n    local b\n    local c\n    local d\n\n    if (( n < 0 || m < 0 )); then\n        echo \"Error: n and m must be non-negative integers.\"\n        return 1\n    fi\n\n    if (( n < m )); then\n        echo \"Error: n must be greater than or equal to m.\"\n        return 1\n    fi\n\n    if (( n == 0 && m == 0 )); then\n        echo 1\n        return 0\n    fi\n\n    if (( m == 0 )); then\n        echo 0\n        return 0\n    fi\n\n    if (( m == 1 )); then\n        echo 1\n        return 0\n    fi\n\n    a=1\n    b=1\n    for (( i = 2; i <= n; i++ )); do\n        c=0\n        for (( j = 1; j <= i; j++ )); do\n            d=$(( a + b ))\n            a=$b\n            b=$d\n            if (( j == m )); then\n                c=$d\n            fi\n        done\n        a=$c\n    done\n\n    echo $a",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local sum=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=m; j++)); do\n            for ((k=0; k<=i; k++)); do\n                sum=$((sum + ((-1)**(i-k)) * ((n-k+1)**m) * (k**j) * (j+1) / (i+1)))\n            done\n        done\n    done\n\n    echo $sum",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n    local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n    local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n    local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n    local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n    local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx",
    "\tlocal n=\"$1\"\n\tlocal m=\"$2\"\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal result=0\n\n\tfor ((i=0; i<=n; i++)); do\n\t\tfor ((j=0; j<=m; j++)); do\n\t\t\tfor ((k=0; k<=i; k++)); do\n\t\t\t\tresult=$((result+((-1)**(i-k))*((binomial_coeff $i $k)*(binomial_coeff $((n+k)) $((n-j))*(binomial_coeff $((n-k)) $j)))))\n\t\t\tdone\n\t\tdone\n\tdone\n\n\techo $result",
    "    local n=$1\n    local m=$2\n    local i=0\n    local j=0\n    local k=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local x=0\n    local y=0\n    local z=0\n    local w=0\n    local v=0\n    local u=0\n    local t=0\n    local s=0\n    local r=0\n    local q=0\n    local p=0\n    local o=0\n    local l=0\n    local k=0\n    local j=0\n    local i=0\n    local h=0\n    local g=0\n    local f=0\n    local e=0\n    local d=0\n    local c=0\n    local b=0\n    local a=0\n    local z=0\n    local y=0\n    local x=0\n    local w=0\n    local v=0\n    local u=0\n    local t=0\n    local s=0\n    local r=0\n    local q=0\n    local p=0\n    local o=0\n    local l=0\n    local k=0\n    local j=0\n    local i=0\n    local h=0\n    local g=0\n    local f=0\n    local e=0\n    local d=0\n    local c=0\n    local b=0\n    local a=0\n    local z=0\n    local y=0\n    local x=0\n    local w=0\n    local v=0\n    local u=0\n    local t=0\n    local s=0\n    local r=0\n    local q=0\n    local p=0\n    local o=0\n    local l=0\n    local k=0\n    local j=0\n    local i=0\n    local h=0\n    local g=0\n    local f=0\n    local e=0\n    local d=0\n    local c=0\n    local b=0\n    local a=0\n   ",
    "    local n=$1\n    local m=$2\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local factorial=1\n    local num=0\n    local den=0\n    local result=0\n\n    for ((i=0; i<=m; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=i; k++)); do\n                for ((l=0; l<=j; l++)); do\n                    factorial=1\n                    num=$((i-k+j-l))\n                    den=$((k+l))\n                    for ((m=1; m<=num; m++)); do\n                        factorial=$((factorial*m))\n                    done\n                    for ((m=1; m<=den; m++)); do\n                        factorial=$((factorial/m))\n                    done\n                    sum=$((sum+factorial))\n                done\n            done\n        done\n    done\n    result=$((sum/((n+1)*(m+1))))\n    echo $result",
    "  local n=$1\n  local m=$2\n  local i\n  local j\n  local k\n  local sum=0\n  local factorial\n  local factorial_n\n  local factorial_m\n  local factorial_n_minus_m\n\n  factorial() {\n    local n=$1\n    local i\n    local product=1\n    for ((i=1; i<=n; i++)); do\n      product=$((product * i))\n    done\n    echo $product\n  }\n\n  factorial_n=$(factorial $n)\n  factorial_m=$(factorial $m)\n  factorial_n_minus_m=$(factorial $((n - m)))\n\n  for ((i=0; i<=m; i++)); do\n    for ((j=0; j<=m; j++)); do\n      for ((k=0; k<=m; k++)); do\n        if ((i + j + k == m)); then\n          sum=$((sum + ((-1) ** (i + j + k)) * (factorial_n / (factorial_m * factorial_n_minus_m))))\n        fi\n      done\n    done\n  done\n\n  echo $sum",
    "  local n=$1\n  local m=$2\n  local i=0\n  local j=0\n  local k=0\n  local sum=0\n  local factorial=1\n  local binomial=1\n  local eulerian=0\n\n  if [[ $n -lt 0 || $m -lt 0 ]]; then\n    echo \"Error: n and m must be non-negative integers.\"\n    exit 1\n  fi\n\n  if [[ $n -lt $m ]]; then\n    echo \"Error: n must be greater than or equal to m.\"\n    exit 1\n  fi\n\n  for ((i=0; i<=$n; i++)); do\n    for ((j=0; j<=$m; j++)); do\n      for ((k=0; k<=$j; k++)); do\n        factorial=$((factorial * (i-k)))\n      done\n      binomial=$((binomial * (j-k)))\n      sum=$((sum + (factorial / binomial)))\n    done\n    eulerian=$((eulerian + sum))\n  done\n\n  echo $eulerian",
    "    local n=$1\n    local m=$2\n    local i=0\n    local j=0\n    local k=0\n    local result=0\n    local factorial=1\n    local factorial_n=1\n    local factorial_m=1\n    local factorial_n_m=1\n    local factorial_n_m_i=1\n    local factorial_n_m_i_j=1\n    local factorial_n_m_i_j_k=1\n    local factorial_n_m_i_j_k_1=1\n    local factorial_n_m_i_j_k_2=1\n    local factorial_n_m_i_j_k_3=1\n    local factorial_n_m_i_j_k_4=1\n    local factorial_n_m_i_j_k_5=1\n    local factorial_n_m_i_j_k_6=1\n    local factorial_n_m_i_j_k_7=1\n    local factorial_n_m_i_j_k_8=1\n    local factorial_n_m_i_j_k_9=1\n    local factorial_n_m_i_j_k_10=1\n    local factorial_n_m_i_j_k_11=1\n    local factorial_n_m_i_j_k_12=1\n    local factorial_n_m_i_j_k_13=1\n    local factorial_n_m_i_j_k_14=1\n    local factorial_n_m_i_j_k_15=1\n    local factorial_n_m_i_j_k_16=1\n    local factorial_n_m_i_j_k_17=1\n    local factorial_n_m_i_j_k_18=1\n    local factorial_n_m_i_j_k_19=1\n    local factorial_n_m_i_j_k_20=1\n    local factorial_n_m_i_j_k",
    "    local n=$1\n    local m=$2\n    local i=0\n    local j=0\n    local k=0\n    local sum=0\n    local num=0\n    local den=0\n    local fact=1\n    local result=0\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=m; j++)); do\n            for ((k=0; k<=i; k++)); do\n                sum=$((sum + ((-1)**k * (n - k + 1)**j)))\n            done\n            num=$((num + sum))\n            sum=0\n        done\n        for ((k=1; k<=i; k++)); do\n            fact=$((fact * k))\n        done\n        den=$((den + fact))\n        fact=1\n    done\n    result=$((num / den))\n    echo $result",
    "    local n=$1\n    local m=$2\n\n    if (( n == 0 || m == 0 )); then\n        echo 1\n        return\n    fi\n\n    if (( n < m )); then\n        echo 0\n        return\n    fi\n\n    local sum=0\n    for (( i = 0; i <= m; i++ )); do\n        sum=$(( sum + $(eulerian_num $(( n - 1 )) $i) ))\n    done\n\n    echo $sum",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local sum=0\n    local num=1\n    local den=1\n    for (( i=0; i<=n; i++ )); do\n        for (( j=0; j<=m; j++ )); do\n            for (( k=0; k<=i; k++ )); do\n                num=$(( num * (n-k) ))\n                den=$(( den * (i-k) ))\n            done\n            sum=$(( sum + num/den ))\n            num=1\n            den=1\n        done\n    done\n    echo $sum",
    "  local n=$1\n  local m=$2\n  local i=0\n  local j=0\n  local k=0\n  local sum=0\n  local a=()\n\n  for ((i=0; i<=n; i++)); do\n    a[$i]=0\n  done\n  a[0]=1\n\n  for ((i=1; i<=n; i++)); do\n    for ((j=i; j>=1; j--)); do\n      a[$j]=$((a[$j]+a[$((j-1))]))\n    done\n  done\n\n  for ((i=0; i<=n; i++)); do\n    if ((i % 2 == 0)); then\n      sum=$((sum+a[$i]))\n    else\n      sum=$((sum-a[$i]))\n    fi\n  done\n\n  echo $sum",
    "    local n=$1\n    local m=$2\n    local i=0\n    local j=0\n    local k=0\n    local sum=0\n    local num=0\n\n    for ((i=0; i<=n; i++)); do\n        for ((j=0; j<=m; j++)); do\n            for ((k=0; k<=i; k++)); do\n                num=$((i - k))\n                num=$((num + j))\n                num=$((num - 1))\n                num=$((num - k))\n                num=$((num + 1))\n                sum=$((sum + num))\n            done\n        done\n    done\n\n    echo $sum",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local sum=0\n    local factorial\n    local binomial\n    for ((i=0; i<=n; i++)); do\n        factorial=1\n        for ((j=1; j<=i; j++)); do\n            factorial=$((factorial * j))\n        done\n        binomial=1\n        for ((j=0; j<=i; j++)); do\n            binomial=$((binomial * (n - j + 1) / j))\n        done\n        sum=$((sum + binomial * factorial * ((-1) ** i) * (m + 1) ** (n - i)))\n    done\n    echo $sum",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local sum\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n    local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n    local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n    local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n    local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n    local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local tttt\n    local uuuu\n    local vvvv\n    local wwww\n",
    "  local n=$1\n  local m=$2\n  local i=0\n  local j=0\n  local k=0\n  local sum=0\n  local num=0\n  local denom=0\n  local result=0\n\n  if [[ $n -lt 0 || $m -lt 0 ]]; then\n    echo \"Error: n and m must be non-negative integers.\"\n    return 1\n  fi\n\n  if [[ $n -lt $m ]]; then\n    echo \"Error: n must be greater than or equal to m.\"\n    return 1\n  fi\n\n  for ((i=0; i<=$n; i++)); do\n    for ((j=0; j<=$m; j++)); do\n      sum=0\n      for ((k=0; k<=$j; k++)); do\n        num=$((i-k))\n        denom=$((j-k+1))\n        sum=$((sum + num / denom))\n      done\n      result=$((result + sum))\n    done\n  done\n\n  echo $result",
    "    local n=$1\n    local m=$2\n    local i\n    local j\n    local k\n    local sum=0\n    local factorial\n    local binomial\n    local binomial_coefficient\n    local eulerian_number\n\n    for ((i=0; i<=m; i++)); do\n        factorial=$(factorial $i)\n        binomial=$(binomial $n $i)\n        binomial_coefficient=$(binomial_coefficient $n $i)\n        eulerian_number=$(echo \"$factorial * $binomial * $binomial_coefficient\" | bc)\n        sum=$(echo \"$sum + $eulerian_number\" | bc)\n    done\n\n    echo $sum"
  ]
}
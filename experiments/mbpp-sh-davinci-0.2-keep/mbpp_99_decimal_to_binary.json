{
  "name": "mbpp_99_decimal_to_binary",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_99_decimal_to_binary.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -i n=$1\n  local -i r\n  local -i i=0\n  local -a bin\n  while (( n > 0 )); do\n    r=$(( n % 2 ))\n    bin[i++]=$r\n    n=$(( n / 2 ))\n  done\n  echo \"${bin[@]}\" | rev",
    "    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"",
    "    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result",
    "    local num=$1\n    local bin=\"\"\n    while [ $num -gt 0 ]; do\n        bin=\"$(( num % 2 ))$bin\"\n        num=$(( num / 2 ))\n    done\n    echo \"$bin\"",
    "  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo \"$binary\"",
    "    local number=$1\n    local binary=\"\"\n    while [ $number -gt 0 ]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n    echo \"$binary\"",
    "  local n=$1\n  local binary=\"\"\n  while (( n > 0 )); do\n    binary=\"$(( n % 2 ))$binary\"\n    n=$(( n / 2 ))\n  done\n  echo \"$binary\"",
    "  local num=$1\n  local result=\"\"\n  while [ $num -gt 0 ]; do\n    result=$((num % 2))$result\n    num=$((num / 2))\n  done\n  echo $result",
    "  local -i n=$1\n  local -i r\n  local -i b=0\n  local -i i=1\n  while (( n > 0 )); do\n    (( r = n % 2 ))\n    (( n /= 2 ))\n    (( b += r * i ))\n    (( i *= 10 ))\n  done\n  echo \"$b\"",
    "    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"",
    "  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    binary=\"${remainder}${binary}\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"",
    "    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo \"$result\"",
    "  local decimal=$1\n  local binary=\"\"\n  local remainder\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo \"$binary\"",
    "  local number=$1\n  local result=\"\"\n  while [ $number -gt 0 ]; do\n    result=\"$(( number % 2 ))$result\"\n    number=$(( number / 2 ))\n  done\n  echo \"$result\"",
    "  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"",
    "  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    binary=\"$remainder$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"",
    "    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=$(( n % 2 ))$result\n        n=$(( n / 2 ))\n    done\n    echo $result",
    "    local -i n=$1\n    local -i d\n    local -i m=0\n    local -i b=1\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i p=0\n    local -i q=0\n    local -i a=0\n    local -i c=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n   ",
    "  local -i decimal=$1\n  local -i remainder\n  local -i quotient\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    quotient=$((decimal / 2))\n    decimal=$quotient\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"",
    "  local n=$1\n  local result=''\n  while (( n > 0 )); do\n    result=\"$(( n % 2 ))$result\"\n    n=$(( n / 2 ))\n  done\n  echo \"$result\""
  ]
}
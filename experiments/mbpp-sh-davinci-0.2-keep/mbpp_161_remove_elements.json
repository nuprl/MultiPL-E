{
  "name": "mbpp_161_remove_elements",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to remove all elements from a given list present in another list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nremove_elements() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_161_remove_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    remove_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\" \"2 4 6 8\") = \"1 3 5 7 9 10\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\" \"1 3 5 7\") = \"2 4 6 8 9 10\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\" \"5 7\") = \"1 2 3 4 6 8 9 10\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  for i in $list1; do\n    if [[ $list2 =~ $i ]]; then\n      continue\n    fi\n    result=\"$result $i\"\n  done\n  echo $result",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_elements=($list1)\n    local list2_elements=($list2)\n    local list1_elements_length=${#list1_elements[@]}\n    local list2_elements_length=${#list2_elements[@]}\n    local list1_elements_index=0\n    local list2_elements_index=0\n    local list1_elements_index_to_remove=()\n    local list1_elements_index_to_remove_length=0\n    local list1_elements_index_to_remove_index=0\n    local list1_elements_index_to_remove_index_to_remove=()\n    local list1_elements_index_to_remove_index_to_remove_length=0\n    local list1_elements_index_to_remove_index_to_remove_index=0\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove=()\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_length=0\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_index=0\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_index_to_remove=()\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_index_to_remove_length=0\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_index_to_remove_index=0\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_index_to_remove_index_to_remove=()\n    local list1_elements_index_to_remove_index_to_remove_index_to_remove_index_to_remove_index_to_remove_length=0\n    local list",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  for i in $list1; do\n    if ! contains \"$i\" \"$list2\"; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  for i in $list1; do\n    if [[ $list2 != *\"$i\"* ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_elements=($list1)\n    local list2_elements=($list2)\n    local result=\"\"\n    for element in ${list1_elements[@]}; do\n        if [[ ! \" ${list2_elements[@]} \" =~ \" ${element} \" ]]; then\n            result=\"${result} ${element}\"\n        fi\n    done\n    echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_elements=\"$(echo \"$list1\" | tr ' ' '\\n')\"\n  local list2_elements=\"$(echo \"$list2\" | tr ' ' '\\n')\"\n  local result=\"\"\n\n  for element in $list1_elements; do\n    if ! echo \"$list2_elements\" | grep -q \"$element\"; then\n      result=\"$result $element\"\n    fi\n  done\n\n  echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_new=\"\"\n    local list2_new=\"\"\n    local list1_elem=\"\"\n    local list2_elem=\"\"\n    local list1_elem_found=\"\"\n    local list2_elem_found=\"\"\n    local list1_elem_found_count=0\n    local list2_elem_found_count=0\n\n    for list1_elem in $list1; do\n        list1_elem_found=\"\"\n        list1_elem_found_count=0\n        for list2_elem in $list2; do\n            if [ \"$list1_elem\" == \"$list2_elem\" ]; then\n                list1_elem_found=\"true\"\n                list1_elem_found_count=$((list1_elem_found_count + 1))\n            fi\n        done\n        if [ \"$list1_elem_found\" != \"true\" ]; then\n            list1_new=\"$list1_new $list1_elem\"\n        elif [ \"$list1_elem_found_count\" -gt 1 ]; then\n            list1_new=\"$list1_new $list1_elem\"\n        fi\n    done\n    for list2_elem in $list2; do\n        list2_elem_found=\"\"\n        list2_elem_found_count=0\n        for list1_elem in $list1; do\n            if [ \"$list2_elem\" == \"$list1_elem\" ]; then\n                list2_elem_found=\"true\"\n                list2_elem_found_count=$((list2_elem_found_count + 1))\n            fi\n        done\n        if [ \"$list2_elem_found\" != \"true\" ]; then\n            list2_new=\"$list2_new $list2_elem\"\n        elif [ \"$list2_elem_found_count\" -gt 1 ]; then\n            list2_new=\"$list2_new $list2_elem\"\n        fi\n    done\n    echo \"$list1_new\"\n    echo",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_elements=\"$(echo $list1 | tr ' ' '\\n' | sort -u)\"\n  local list2_elements=\"$(echo $list2 | tr ' ' '\\n' | sort -u)\"\n  local result=\"\"\n  for element in $list1_elements; do\n    if ! echo $list2_elements | grep -qw $element; then\n      result=\"$result $element\"\n    fi\n  done\n  echo $result",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for i in \"${list1[@]}\"; do\n    if [[ ! \" ${list2[@]} \" =~ \" ${i} \" ]]; then\n      result+=($i)\n    fi\n  done\n  echo \"${result[@]}\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  for element in $list1; do\n    if ! contains \"$list2\" \"$element\"; then\n      result=\"$result $element\"\n    fi\n  done\n  echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n  local list2_array=($list2)\n  local list1_length=${#list1_array[@]}\n  local list2_length=${#list2_array[@]}\n  local i j\n  for ((i=0; i<list1_length; i++)); do\n    for ((j=0; j<list2_length; j++)); do\n      if [[ ${list1_array[i]} == ${list2_array[j]} ]]; then\n        unset list1_array[i]\n      fi\n    done\n  done\n  echo ${list1_array[@]}",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for i in \"${list1[@]}\"; do\n    if [[ ! \" ${list2[@]} \" =~ \" ${i} \" ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_new=\"\"\n    for i in $list1; do\n        if ! echo \"$list2\" | grep -q \"$i\"; then\n            list1_new=\"$list1_new $i\"\n        fi\n    done\n    echo \"$list1_new\"",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for i in \"${list1[@]}\"; do\n    if ! contains \"$i\" \"${list2[@]}\"; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i found=0\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    found=0\n    for ((j=0; j<${#list2[@]}; j++)); do\n      if [[ ${list1[$i]} == ${list2[$j]} ]]; then\n        found=1\n        break\n      fi\n    done\n    if [[ $found -eq 0 ]]; then\n      result+=(${list1[$i]})\n    fi\n  done\n\n  echo ${result[@]}",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_elements=($list1)\n  local list2_elements=($list2)\n  local list1_size=${#list1_elements[@]}\n  local list2_size=${#list2_elements[@]}\n  local i=0\n  local j=0\n  local result=\"\"\n  for ((i=0; i<list1_size; i++)); do\n    for ((j=0; j<list2_size; j++)); do\n      if [[ \"${list1_elements[$i]}\" == \"${list2_elements[$j]}\" ]]; then\n        break\n      fi\n    done\n    if [[ \"$j\" == \"$list2_size\" ]]; then\n      result=\"$result ${list1_elements[$i]}\"\n    fi\n  done\n  echo \"$result\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local -a temp=()\n    local -i i=0\n    local -i j=0\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            if [[ ${list1[$i]} == ${list2[$j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq ${#list2[@]} ]]; then\n            result+=(${list1[$i]})\n        fi\n    done\n\n    echo ${result[@]}",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_elements=\"$(echo \"$list1\" | tr ' ' '\\n')\"\n  local list2_elements=\"$(echo \"$list2\" | tr ' ' '\\n')\"\n  local result=\"\"\n  for element in $list1_elements; do\n    if ! echo \"$list2_elements\" | grep -q \"$element\"; then\n      result=\"$result $element\"\n    fi\n  done\n  echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_new=\"\"\n  local list2_new=\"\"\n\n  for i in $list1; do\n    list1_new=\"$list1_new $i\"\n  done\n\n  for i in $list2; do\n    list2_new=\"$list2_new $i\"\n  done\n\n  for i in $list1_new; do\n    for j in $list2_new; do\n      if [ \"$i\" = \"$j\" ]; then\n        list1_new=\"$(echo $list1_new | sed \"s/$i//g\")\"\n      fi\n    done\n  done\n\n  echo \"$list1_new\"",
    "    local list1=$1\n    local list2=$2\n    local new_list=''\n    for i in $list1; do\n        if [[ $list2 =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n            :\n        else\n            new_list=\"$new_list $i\"\n        fi\n    done\n    echo $new_list"
  ]
}
{
  "name": "mbpp_68_is_Monotonic",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a python function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]\n        then\n            flag=1\n            break\n        fi\n    done\n\n    if [ $flag -eq 1 ]\n    then\n        for (( j=0; j<n-1; j++ ))\n        do\n            if [ ${arr[$j]} -lt ${arr[$j+1]} ]\n            then\n                flag=0\n                break\n            fi\n        done\n    fi\n\n    if [ $flag -eq 0 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local is_increasing=0\n    local is_decreasing=0\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            is_increasing=1\n            is_decreasing=1\n        else\n            if [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n                is_decreasing=0\n            elif [ ${arr[$i]} -lt ${arr[$((i-1))]} ]; then\n                is_increasing=0\n            fi\n        fi\n        i=$((i+1))\n    done\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\n    if [ $len -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    for (( i=0; i<len; i++ )); do\n        curr=${arr[$i]}\n        if [ $i -eq 0 ]; then\n            prev=$curr\n            continue\n        fi\n        if [ $i -eq $((len-1)) ]; then\n            next=$curr\n            break\n        fi\n        next=${arr[$((i+1))]}\n        if [ $prev -lt $curr ]; then\n            inc=1\n        elif [ $prev -gt $curr ]; then\n            dec=1\n        else\n            eq=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            echo \"False\"\n            return 1\n        fi\n        prev=$curr\n    done\n\n    if [ $inc -eq 1 ] && [ $next -lt $curr ]; then\n        echo \"False\"\n        return 1\n    elif [ $dec -eq 1 ] && [ $next -gt $curr ]; then\n        echo \"False\"\n        return 1\n    fi\n\n    echo \"True\"\n    return 0",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        for ((j=0; j<n-1; j++)); do\n            if [[ ${array[j]} -lt ${array[j+1]} ]]; then\n                echo \"No\"\n                return\n            fi\n        done\n    fi\n    echo \"Yes\"",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${array[i]} -gt ${array[i+1]} ]; then\n            flag1=1\n        elif [ ${array[i]} -lt ${array[i+1]} ]; then\n            flag2=1\n        fi\n    done\n\n    if [ $flag1 -eq 1 -a $flag2 -eq 1 ]; then\n        flag=0\n    else\n        flag=1\n    fi\n\n    echo $flag",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]\n        then\n            flag1=1\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]\n    then\n        flag3=1\n    fi\n    if [[ $flag1 -eq 0 && $flag2 -eq 1 ]]\n    then\n        flag4=1\n    fi\n    if [[ $flag3 -eq 1 || $flag4 -eq 1 ]]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    if [ $len -eq 1 ]; then\n        is_monotonic=1\n    else\n        for ((i=0; i<len-1; i++)); do\n            if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                is_increasing=1\n            elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                is_decreasing=1\n            fi\n        done\n        if [ $is_increasing -eq 1 ] && [ $is_decreasing -eq 0 ]; then\n            is_monotonic=1\n        elif [ $is_decreasing -eq 1 ] && [ $is_increasing -eq 0 ]; then\n            is_monotonic=1\n        fi\n    fi\n    echo $is_monotonic",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag1=1\n        elif [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        flag=0\n    else\n        flag=1\n    fi\n\n    echo $flag",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=1\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_increasing=0\n        elif [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    # Check if the list is empty\n    if [ $# -eq 0 ]; then\n        echo \"1\"\n        return\n    fi\n\n    # Check if the list is monotonic\n    for i in $(seq 1 $(($# - 1))); do\n        if [ $(echo \"${@:i:1} <= ${@:i+1:1}\" | bc -l) -eq 0 ]; then\n            echo \"0\"\n            return\n        fi\n    done\n\n    echo \"1\"",
    "    local -a arr=(\"${@}\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_reverse=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_reverse[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            increasing=0\n        elif [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array\n    array=($1)\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local aa\n    local ab\n    local ac\n    local ad\n    local ae\n    local af\n    local ag\n    local ah\n    local ai\n    local aj\n    local ak\n    local al\n    local am\n    local an\n    local ao\n    local ap\n    local aq\n    local ar\n    local as\n    local at\n    local au\n    local av\n    local aw\n    local ax\n    local ay\n    local az\n    local ba\n    local bb\n    local bc\n    local bd\n    local be\n    local bf\n    local bg\n    local bh\n    local bi\n    local bj\n    local bk\n    local bl\n    local bm\n    local bn\n    local bo\n    local bp\n    local bq\n    local br\n    local bs\n    local bt\n    local bu\n    local bv\n    local bw\n    local bx\n    local by\n    local bz\n    local ca\n    local cb\n    local cc\n    local cd\n    local ce\n    local cf\n    local cg\n    local ch\n    local ci\n    local cj\n    local ck\n    local cl\n    local cm\n    local cn\n    local co\n    local cp\n    local cq\n    local cr\n    local cs\n    local ct\n    local cu\n    local cv\n    local cw\n    local cx\n    local cy\n    local cz\n    local da\n    local db\n    local dc\n    local dd\n    local de\n    local df\n    local dg\n    local dh\n    local di\n    local dj\n    local dk\n    local dl\n    local dm\n    local dn\n    local do\n    local dp\n    local dq\n    local dr\n    local",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i is_monotonic\n    local -i is_increasing\n    local -i is_decreasing\n    local -i is_equal\n\n    arr=($1)\n    len=${#arr[@]}\n    is_monotonic=1\n    is_increasing=1\n    is_decreasing=1\n    is_equal=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_decreasing=0\n        fi\n        if [[ ${arr[i]} -ne ${arr[i+1]} ]]; then\n            is_equal=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    if [[ $is_equal -eq 1 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic",
    "    local -a arr=($1)\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_reverse=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -nr))\n\n    if [[ \"${arr[@]}\" == \"${arr_sorted[@]}\" ]] || [[ \"${arr[@]}\" == \"${arr_sorted_reverse[@]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i result=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            ((i++))\n            continue\n        fi\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            ((inc++))\n        elif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n            ((dec++))\n        fi\n        ((i++))\n    done\n\n    if [ $inc -eq $len -o $dec -eq $len ]; then\n        result=1\n    fi\n\n    echo $result",
    "    local -n arr=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        echo \"True\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i res=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        else\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]]; then\n        res=1\n    elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n        res=1\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        res=1\n    else\n        res=0\n    fi\n\n    echo $res",
    "  local -a arr=($1)\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i inc=0\n  local -i dec=0\n  local -i eq=0\n  local -i ret=0\n\n  for ((i=0; i<len-1; i++)); do\n    if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n      inc=1\n    elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n      dec=1\n    elif [ ${arr[i]} -eq ${arr[i+1]} ]; then\n      eq=1\n    fi\n  done\n\n  if [ $inc -eq 1 ] && [ $dec -eq 0 ] && [ $eq -eq 0 ]; then\n    ret=1\n  elif [ $inc -eq 0 ] && [ $dec -eq 1 ] && [ $eq -eq 0 ]; then\n    ret=1\n  elif [ $inc -eq 0 ] && [ $dec -eq 0 ] && [ $eq -eq 1 ]; then\n    ret=1\n  fi\n\n  echo $ret",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=1\n    local -i flag2=1\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[$i]} -gt ${array[$i+1]} ]\n        then\n            flag=0\n        fi\n    done\n    for ((j=0; j<len-1; j++))\n    do\n        if [ ${array[$j]} -lt ${array[$j+1]} ]\n        then\n            flag2=0\n        fi\n    done\n    if [ $flag -eq 1 ] || [ $flag2 -eq 1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]\n        then\n            flag=1\n        elif [[ ${arr[$i]} -lt ${arr[$i+1]} ]]\n        then\n            flag1=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag1 -eq 1 ]]\n    then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i ret=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            dec=1\n        elif [[ ${arr[$i]} -eq ${arr[$i+1]} ]]; then\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]]; then\n        ret=1\n    elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n        ret=1\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        ret=1\n    fi\n\n    echo $ret",
    "    local -a array=(\"$@\")\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i is_decreasing=0\n    local -i is_increasing=0\n\n    arr=($1)\n    len=${#arr[@]}\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_decreasing=1\n        elif [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_increasing=1\n        fi\n    done\n\n    if [[ $is_decreasing -eq 1 && $is_increasing -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]\n        then\n            flag1=1\n        fi\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]\n        then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 -a $flag2 -eq 0 ]\n    then\n        echo \"True\"\n    elif [ $flag1 -eq 0 -a $flag2 -eq 1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr\n    arr=($1)\n    local -i len=${#arr[@]}\n    local -i i\n    local -i flag=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        for ((i=0; i<len-1; i++)); do\n            if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n                echo \"False\"\n                return\n            fi\n        done\n    fi\n    echo \"True\"",
    "    local -a a=($1)\n    local i=0\n    local j=1\n    local k=2\n    local len=${#a[@]}\n    local is_monotonic=1\n    local is_increasing=1\n    local is_decreasing=1\n    local is_equal=1\n    local is_increasing_or_equal=1\n    local is_decreasing_or_equal=1\n    local is_strictly_increasing=1\n    local is_strictly_decreasing=1\n    local is_non_increasing=1\n    local is_non_decreasing=1\n    local is_increasing_or_decreasing=1\n    local is_decreasing_or_increasing=1\n    local is_increasing_or_equal_or_decreasing=1\n    local is_decreasing_or_equal_or_increasing=1\n    local is_increasing_or_decreasing_or_equal=1\n    local is_decreasing_or_increasing_or_equal=1\n    local is_increasing_or_strictly_decreasing=1\n    local is_decreasing_or_strictly_increasing=1\n    local is_strictly_increasing_or_decreasing=1\n    local is_strictly_decreasing_or_increasing=1\n    local is_increasing_or_strictly_decreasing_or_equal=1\n    local is_decreasing_or_strictly_increasing_or_equal=1\n    local is_strictly_increasing_or_decreasing_or_equal=1\n    local is_strictly_decreasing_or_increasing_or_equal=1\n    local is_increasing_or_equal_or_strictly_decreasing=1\n    local is_decreasing_or_equal_or_strictly_increasing=1\n    local is_strictly_increasing_or_equal_or_decreasing=1\n    local is_strictly_decreasing_or_equal_or_increasing=1\n\n    if [ $len -lt 3 ]; then\n        echo \"",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag=2\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        echo \"Array is decreasing\"\n    elif [[ $flag -eq 2 ]]; then\n        echo \"Array is increasing\"\n    else\n        echo \"Array is neither increasing nor decreasing\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]\n        then\n            flag=1\n        fi\n    done\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [[ ${array[i]} -eq ${array[i+1]} ]]\n        then\n            flag3=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 0 ]]\n    then\n        echo \"The array is decreasing\"\n    elif [[ $flag -eq 0 && $flag2 -eq 1 ]]\n    then\n        echo \"The array is increasing\"\n    elif [[ $flag -eq 0 && $flag2 -eq 0 ]]\n    then\n        echo \"The array is constant\"\n    elif [[ $flag -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"The array is not monotonic\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        else\n            eq=1\n        fi\n    done\n\n    if [[ inc -eq 1 && dec -eq 0 && eq -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ inc -eq 0 && dec -eq 1 && eq -eq 0 ]]; then\n        echo \"Decreasing\"\n    elif [[ inc -eq 0 && dec -eq 0 && eq -eq 1 ]]; then\n        echo \"Equal\"\n    else\n        echo \"Not monotonic\"\n    fi",
    "    local -n arr=$1\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=1\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i n",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=0; j<${#array[@]}; j++)); do\n            if ((array[i] > array[j])); then\n                for ((k=0; k<${#array[@]}; k++)); do\n                    if ((array[j] > array[k])); then\n                        for ((l=0; l<${#array[@]}; l++)); do\n                            if ((array[k] > array[l])); then\n                                for ((m=0; m<${#array[@]}; m++)); do\n                                    if ((array[l] > array[m])); then\n                                        for ((n=0; n<${#array[@]}; n++)); do\n                                            if ((array[m] > array[n])); then\n                                                for ((o=0; o<${#array[@]}; o++)); do\n                                                    if ((array[n] > array[o])); then\n                                                        for ((p=0; p<${#array[@]}; p++)); do\n                                                            if ((array[o] > array[p])); then\n                                                                for ((q=0; q<${#array[@]}; q++)); do\n                                                                    if ((array[p] > array[q])); then\n                                                                        for ((r=0; r<${#array[@]}; r++)); do\n                                                ",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    for ((i=0; i<n-1; i++))\n    do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]\n        then\n            flag=1\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]\n        then\n            flag1=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag1 -eq 1 ]]\n    then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local array=($1)\n    local len=${#array[@]}\n    local i=0\n    local j=0\n    local is_monotonic=1\n    local is_increasing=0\n    local is_decreasing=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        elif [[ ${arr[i]} -eq ${arr[i+1]} ]]; then\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]]; then\n        flag=1\n    elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n        flag=1\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        flag=1\n    fi\n\n    echo $flag",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i is_monotonic=1\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    arr=($1)\n    len=${#arr[@]}\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -a arr\n    arr=($1)\n    local -i i\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        fi\n    done\n    if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr\n    arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i result=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=$((inc+1))\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [[ $inc -eq $len-1 ]]; then\n        result=1\n    elif [[ $dec -eq $len-1 ]]; then\n        result=1\n    elif [[ $eq -eq $len-1 ]]; then\n        result=1\n    fi\n\n    echo $result",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag=1\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            flag1=1\n        fi\n    done\n    if [[ flag -eq 1 && flag1 -eq 1 ]]; then\n        echo \"No\"\n    else\n        echo \"Yes\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i n=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    while [ $i -lt $((n-1)) ]; do\n        if [ ${array[$i]} -gt ${array[$((i+1))]} ]; then\n            is_increasing=0\n        fi\n        if [ ${array[$i]} -lt ${array[$((i+1))]} ]; then\n            is_decreasing=0\n        fi\n        i=$((i+1))\n    done\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a list=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#list[@]}\n    local -i flag=0\n    local -i flag1=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${list[i]} -gt ${list[i+1]} ]]; then\n            flag=1\n        fi\n    done\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${list[i]} -lt ${list[i+1]} ]]; then\n            flag1=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag1 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=(\"${arr[@]}\")\n    local -a arr_sorted_r=(\"${arr[@]}\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\n    # Sort the array in ascending order\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if (( arr[i] > arr[j] )); then\n                k=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$k\n            fi\n        done\n    done\n\n    # Sort the array in descending order\n    for ((l=0; l<${#arr[@]}; l++)); do\n        for ((m=l+1; m<${#arr[@]}; m++)); do\n            if (( arr[l] < arr[m] )); then\n                n=${arr[l]}\n                arr[l]=${arr[m]}\n                arr[m]=$n\n            fi\n        done\n    done\n\n    # Check if the array is monotonic\n    for ((o=0; o<${#arr[@]}; o++)); do\n        if (( arr[o] != arr_sorted[o] && arr[o] != arr_sorted_r[o] )); then\n            echo \"False\"\n            return\n        fi\n    done\n\n    echo \"True\"",
    "    local array=($1)\n    local len=${#array[@]}\n    local i=0\n    local is_increasing=0\n    local is_decreasing=0\n    local is_monotonic=0\n    local is_not_monotonic=1\n    local is_equal=0\n    local is_not_equal=1\n\n    if [ $len -eq 1 ]; then\n        echo $is_monotonic\n        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${array[$i]} -lt ${array[$i+1]} ]; then\n            is_increasing=1\n        elif [ ${array[$i]} -gt ${array[$i+1]} ]; then\n            is_decreasing=1\n        elif [ ${array[$i]} -eq ${array[$i+1]} ]; then\n            is_equal=1\n        fi\n    done\n\n    if [ $is_increasing -eq $is_not_equal -a $is_decreasing -eq $is_not_equal ]; then\n        echo $is_monotonic\n    else\n        echo $is_not_monotonic\n    fi",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -",
    "    local -a array\n    local -i i\n    local -i len\n    local -i inc\n    local -i dec\n    local -i flag\n\n    array=($1)\n    len=${#array[@]}\n    inc=0\n    dec=0\n    flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            inc=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            dec=1\n        fi\n        if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0;i<len-1;i++))\n    do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]\n        then\n            flag=1\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag=1\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local array=($1)\n    local i=0\n    local len=${#array[@]}\n    local increasing=1\n    local decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            increasing=0\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n\n    if [[ $increasing -eq 1 ]] || [[ $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=(\"$@\")\n    local -a arr_sorted_r=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -",
    "    # Check if all elements are equal\n    if [ \"$(echo \"$1\" | tr ' ' '\\n' | sort -u | wc -l)\" -eq 1 ]; then\n        echo \"True\"\n        return\n    fi\n\n    # Check if all elements are increasing\n    if [ \"$(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\" == \"$1\" ]; then\n        echo \"True\"\n        return\n    fi\n\n    # Check if all elements are decreasing\n    if [ \"$(echo \"$1\" | tr ' ' '\\n' | sort -nr | tr '\\n' ' ')\" == \"$1\" ]; then\n        echo \"True\"\n        return\n    fi\n\n    echo \"False\"",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n    done\n    for ((j=0; j<len-1; j++)); do\n        if [[ ${arr[j]} -lt ${arr[j+1]} ]]; then\n            flag1=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag1 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -n arr=$1\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        echo \"True\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i res=0\n\n    if [ $len -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            inc=$((inc+1))\n        elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [ $inc -eq $((len-1)) ] || [ $dec -eq $((len-1)) ] || [ $eq -eq $((len-1)) ]; then\n        res=1\n    fi\n\n    echo \"$res\"",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n            flag1=1\n        elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 -a $flag2 -eq 0 ]; then\n        flag=1\n    elif [ $flag1 -eq 0 -a $flag2 -eq 1 ]; then\n        flag=1\n    fi\n    echo $flag",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [[ ${array[i]} -gt ${array[j]} ]]\n            then\n                flag1=1\n            elif [[ ${array[i]} -lt ${array[j]} ]]\n            then\n                flag2=1\n            elif [[ ${array[i]} -eq ${array[j]} ]]\n            then\n                flag3=1\n            fi\n        done\n    done\n\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"Not Monotonic\"\n    elif [[ $flag1 -eq 1 && $flag3 -eq 1 ]]\n    then\n        echo \"Not Monotonic\"\n    elif [[ $flag2 -eq 1 && $flag3 -eq 1 ]]\n    then\n        echo \"Not Monotonic\"\n    else\n        echo \"Monotonic\"\n    fi",
    "    local -a arr\n    arr=($1)\n    local -i i\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        fi\n    done\n    if [[ inc -eq 1 && dec -eq 0 ]]; then\n        echo \"Monotonic increasing\"\n    elif [[ inc -eq 0 && dec -eq 1 ]]; then\n        echo \"Monotonic decreasing\"\n    else\n        echo \"Not monotonic\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -a arr2=(\"$@\")\n    local -a arr3=(\"$@\")\n    local -a arr4=(\"$@\")\n    local -a arr5=(\"$@\")\n    local -a arr6=(\"$@\")\n    local -a arr7=(\"$@\")\n    local -a arr8=(\"$@\")\n    local -a arr9=(\"$@\")\n    local -a arr10=(\"$@\")\n    local -a arr11=(\"$@\")\n    local -a arr12=(\"$@\")\n    local -a arr13=(\"$@\")\n    local -a arr14=(\"$@\")\n    local -a arr15=(\"$@\")\n    local -a arr16=(\"$@\")\n    local -a arr17=(\"$@\")\n    local -a arr18=(\"$@\")\n    local -a arr19=(\"$@\")\n    local -a arr20=(\"$@\")\n    local -a arr21=(\"$@\")\n    local -a arr22=(\"$@\")\n    local -a arr23=(\"$@\")\n    local -a arr24=(\"$@\")\n    local -a arr25=(\"$@\")\n    local -a arr26=(\"$@\")\n    local -a arr27=(\"$@\")\n    local -a arr28=(\"$@\")\n    local -a arr29=(\"$@\")\n    local -a arr30=(\"$@\")\n    local -a arr31=(\"$@\")\n    local -a arr32=(\"$@\")\n    local -a arr33=(\"$@\")\n    local -a arr34=(\"$@\")\n    local -a arr35=(\"$@\")\n    local -a arr36=(\"$@\")\n    local -a arr37=(\"$@\")\n    local -a arr38=(\"$@\")\n    local -a arr39=(\"$@\")\n    local -a arr40=(\"$@\")\n    local -a arr41=(\"$@\")\n    local -a arr42=(\"$@\")\n    local -a arr43=(\"",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]\n        then\n            flag1=1\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    # Convert the string to an array\n    local -a arr=($1)\n\n    # Check if the array is monotonic\n    local -i i=0\n    local -i j=1\n    local -i len=${#arr[@]}\n    local -i is_monotonic=1\n    while [[ $j -lt $len ]]; do\n        if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n            is_monotonic=0\n            break\n        fi\n        ((i++))\n        ((j++))\n    done\n\n    # Print the result\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"The array is monotonic\"\n    else\n        echo \"The array is not monotonic\"\n    fi",
    "    local -n arr=$1\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i ret=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n            inc=$((inc+1))\n        elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [ $inc -eq $((len-1)) ]; then\n        ret=1\n    elif [ $dec -eq $((len-1)) ]; then\n        ret=1\n    elif [ $eq -eq $((len-1)) ]; then\n        ret=1\n    fi\n\n    echo $ret",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=1\n    local -i k=2\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n\n    for (( i=0; i<$((n-1)); i++ )); do\n        if [[ ${arr[$i]} -gt ${arr[$((i+1))]} ]]; then\n            flag1=1\n        elif [[ ${arr[$i]} -lt ${arr[$((i+1))]} ]]; then\n            flag2=1\n        fi\n    done\n\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]; then\n        echo \"True\"\n    elif [[ $flag1 -eq 0 && $flag2 -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i n=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n\n    for (( i=0; i<n-1; i++ )); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            inc=1\n        fi\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            dec=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Neither\"\n    fi",
    "    local arr=($1)\n    local i=0\n    local j=0\n    local n=${#arr[@]}\n    local increasing=0\n    local decreasing=0\n\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            increasing=1\n        elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            decreasing=1\n        fi\n    done\n\n    if [[ $increasing -eq 1 && $decreasing -eq 0 ]]; then\n        echo \"True\"\n    elif [[ $increasing -eq 0 && $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i flag=0\n\n    for (( i=0; i<${#array[@]}; i++ ))\n    do\n        for (( j=i+1; j<${#array[@]}; j++ ))\n        do\n            if [[ ${array[$i]} -gt ${array[$j]} ]]\n            then\n                flag=1\n                break\n            fi\n        done\n    done\n\n    if [[ $flag -eq 0 ]]\n    then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=1\n    elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=1\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -lt ${array[$j]} ]]; then\n            is_increasing=1\n        elif [[ ${array[$i]} -gt ${array[$j]} ]]; then\n            is_decreasing=1\n        fi\n        j=$((j+1))\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        echo \"True\"\n    elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        else\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]]; then\n        flag=1\n    elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n        flag=1\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        flag=1\n    fi\n\n    echo $flag",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            increasing=0\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n\n    if [[ $increasing -eq 1 ]] || [[ $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_increasing=0\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 ]]; then\n        echo \"True\"\n    elif [[ $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    for ((i=0; i<len-1; i++)); do\n        if (( array[i] < array[i+1] )); then\n            is_increasing=1\n        elif (( array[i] > array[i+1] )); then\n            is_decreasing=1\n        fi\n    done\n\n    if (( is_increasing && is_decreasing )); then\n        is_monotonic=0\n    else\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0;i<len-1;i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=0\n    local -i decreasing=0\n    local -i equal=0\n\n    if [[ $len -lt 2 ]]; then\n        echo \"The array is monotonic\"\n        return 0\n    fi\n\n    while [[ $i -lt $len-1 ]]; do\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            increasing=1\n        elif [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            decreasing=1\n        else\n            equal=1\n        fi\n        i=$i+1\n    done\n\n    if [[ $increasing -eq 1 && $decreasing -eq 0 ]]; then\n        echo \"The array is increasing\"\n        return 0\n    elif [[ $increasing -eq 0 && $decreasing -eq 1 ]]; then\n        echo \"The array is decreasing\"\n        return 0\n    elif [[ $increasing -eq 0 && $decreasing -eq 0 && $equal -eq 1 ]]; then\n        echo \"The array is equal\"\n        return 0\n    else\n        echo \"The array is not monotonic\"\n        return 1\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    if [ $len -eq 1 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                is_increasing=1\n            elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                is_decreasing=1\n            fi\n        else\n            if [ $is_increasing -eq 1 ]; then\n                if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                    continue\n                else\n                    is_monotonic=0\n                    break\n                fi\n            elif [ $is_decreasing -eq 1 ]; then\n                if [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                    continue\n                else\n                    is_monotonic=0\n                    break\n                fi\n            fi\n        fi\n        i=$i+1\n    done\n\n    if [ $is_monotonic -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i",
    "    local array=($1)\n    local len=${#array[@]}\n    local i=0\n    local inc=0\n    local dec=0\n    while [ $i -lt $len ]; do\n        if [ ${array[$i]} -lt ${array[$i+1]} ]; then\n            inc=1\n        elif [ ${array[$i]} -gt ${array[$i+1]} ]; then\n            dec=1\n        fi\n        i=$((i+1))\n    done\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"Not Monotonic\"\n    else\n        echo \"Monotonic\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc+=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec+=1\n        fi\n    done\n\n    if [[ $inc -eq $len-1 ]] || [[ $dec -eq $len-1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n    local ci=0\n   ",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_increasing=0\n        elif [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=1\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n    local -i is_non_monotonic=0\n    local -i is_constant=0\n    local -i is_non_constant=0\n\n    if [ $len -eq 1 ]; then\n        is_constant=1\n    else\n        for ((i=0; i<len-1; i++)); do\n            if [ ${array[$i]} -lt ${array[$i+1]} ]; then\n                is_increasing=1\n            elif [ ${array[$i]} -gt ${array[$i+1]} ]; then\n                is_decreasing=1\n            fi\n        done\n    fi\n\n    if [ $is_increasing -eq 1 -a $is_decreasing -eq 0 ]; then\n        is_monotonic=1\n    elif [ $is_decreasing -eq 1 -a $is_increasing -eq 0 ]; then\n        is_monotonic=1\n    elif [ $is_increasing -eq 0 -a $is_decreasing -eq 0 ]; then\n        is_constant=1\n    else\n        is_non_monotonic=1\n    fi\n\n    if [ $is_constant -eq 1 ]; then\n        echo \"The array is constant.\"\n    elif [ $is_monotonic -eq 1 ]; then\n        echo \"The array is monotonic.\"\n    else\n        echo \"The array is non-monotonic.\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_rev=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_rev[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=(\"${arr[@]}\")\n    local -a arr_sorted_rev=(\"${arr[@]}\")\n    local -a arr_sorted_asc=(\"${arr[@]}\")\n    local -a arr_sorted_desc=(\"${arr[@]}\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -",
    "    local -a arr=($1)\n    local -i i=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i",
    "    python -c \"\nimport sys\ndef is_monotonic(l):\n    if len(l) == 1:\n        return True\n    elif len(l) == 2:\n        return l[0] <= l[1]\n    else:\n        return is_monotonic(l[1:]) if l[0] <= l[1] else is_monotonic(l[:-1])\n\nl = [int(x) for x in sys.argv[1].split(' ')]\nprint(is_monotonic(l))\n\" \"$1\"",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n\n    if (( len < 2 )); then\n        echo \"Array must have at least 2 elements\"\n        return 1\n    fi\n\n    for (( i=0; i<len-1; i++ )); do\n        if (( arr[i] > arr[i+1] )); then\n            flag=1\n            break\n        fi\n    done\n\n    if (( flag == 1 )); then\n        for (( i=0; i<len-1; i++ )); do\n            if (( arr[i] < arr[i+1] )); then\n                echo \"Array is not monotonic\"\n                return 1\n            fi\n        done\n    fi\n\n    echo \"Array is monotonic\"\n    return 0",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=0\n    local -i decreasing=0\n\n    for (( i=0; i<len-1; i++ )); do\n        if (( array[i] < array[i+1] )); then\n            increasing=1\n        elif (( array[i] > array[i+1] )); then\n            decreasing=1\n        fi\n    done\n\n    if (( increasing && decreasing )); then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n\n    for ((i=0; i<len-1; i++)); do\n        if (( arr[i] < arr[i+1] )); then\n            inc=1\n        elif (( arr[i] > arr[i+1] )); then\n            dec=1\n        fi\n    done\n\n    if (( inc == 1 && dec == 1 )); then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i res=0\n\n    if [ $len -lt 2 ]; then\n        echo \"True\"\n        return 0\n    fi\n\n    for ((i=0; i<$len-1; i++)); do\n        if [ ${arr[$i]} -eq ${arr[$i+1]} ]; then\n            eq=1\n        elif [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            inc=1\n        elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            dec=1\n        fi\n    done\n\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        res=0\n    else\n        res=1\n    fi\n\n    if [ $res -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i flag=0\n    local -i n=${#array[@]}\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            dec=1\n        elif [[ ${arr[$i]} -eq ${arr[$i+1]} ]]; then\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n        echo \"Decreasing\"\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        echo \"Equal\"\n    else\n        echo \"Not Monotonic\"\n    fi",
    "    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_reverse=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_reverse[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        flag=0\n    else\n        flag=1\n    fi\n    echo $flag",
    "    local array=($1)\n    local length=${#array[@]}\n    local is_monotonic=1\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\n    for ((i=0; i<length-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_monotonic=0\n            break\n        fi\n    done\n\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"The array is monotonic\"\n    else\n        echo \"The array is not monotonic\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -a arr2=(\"$@\")\n    local -a arr3=(\"$@\")\n    local -a arr4=(\"$@\")\n    local -a arr5=(\"$@\")\n    local -a arr6=(\"$@\")\n    local -a arr7=(\"$@\")\n    local -a arr8=(\"$@\")\n    local -a arr9=(\"$@\")\n    local -a arr10=(\"$@\")\n    local -a arr11=(\"$@\")\n    local -a arr12=(\"$@\")\n    local -a arr13=(\"$@\")\n    local -a arr14=(\"$@\")\n    local -a arr15=(\"$@\")\n    local -a arr16=(\"$@\")\n    local -a arr17=(\"$@\")\n    local -a arr18=(\"$@\")\n    local -a arr19=(\"$@\")\n    local -a arr20=(\"$@\")\n    local -a arr21=(\"$@\")\n    local -a arr22=(\"$@\")\n    local -a arr23=(\"$@\")\n    local -a arr24=(\"$@\")\n    local -a arr25=(\"$@\")\n    local -a arr26=(\"$@\")\n    local -a arr27=(\"$@\")\n    local -a arr28=(\"$@\")\n    local -a arr29=(\"$@\")\n    local -a arr30=(\"$@\")\n    local -a arr31=(\"$@\")\n    local -a arr32=(\"$@\")\n    local -a arr33=(\"$@\")\n    local -a arr34=(\"$@\")\n    local -a arr35=(\"$@\")\n    local -a arr36=(\"$@\")\n    local -a arr37=(\"$@\")\n    local -a arr38=(\"$@\")\n    local -a arr39=(\"$@\")\n    local -a arr40=(\"$@\")\n    local -a arr41=(\"$@\")\n    local -a arr42=(\"$@\")\n    local -a arr43=(\"",
    "    local -a array\n    local -i i\n    local -i len\n    local -i increasing\n    local -i decreasing\n    local -i result\n\n    array=($1)\n    len=${#array[@]}\n    increasing=0\n    decreasing=0\n    result=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            increasing=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            decreasing=1\n        fi\n    done\n\n    if [[ $increasing -eq 1 && $decreasing -eq 0 ]]; then\n        result=1\n    elif [[ $increasing -eq 0 && $decreasing -eq 1 ]]; then\n        result=1\n    fi\n\n    echo $result",
    "    local -a array\n    local -i i\n    local -i len\n    local -i increasing\n    local -i decreasing\n\n    array=($1)\n    len=${#array[@]}\n    increasing=1\n    decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            increasing=0\n        fi\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    # check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"False\"\n        return\n    fi\n\n    # check if the list has only one element\n    if [ $(echo \"$1\" | wc -w) -eq 1 ]; then\n        echo \"True\"\n        return\n    fi\n\n    # check if the list is monotonic\n    local prev=$(echo \"$1\" | cut -d \" \" -f 1)\n    local curr\n    for curr in $1; do\n        if [ $prev -gt $curr ]; then\n            echo \"False\"\n            return\n        fi\n        prev=$curr\n    done\n\n    echo \"True\"",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag1=1\n        elif [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        flag=0\n    else\n        flag=1\n    fi\n\n    echo $flag",
    "  local -a array=($1)\n  local -a sorted=($(printf \"%s\\n\" \"${array[@]}\" | sort -n))\n  local -a reversed=($(printf \"%s\\n\" \"${array[@]}\" | sort -nr))\n\n  if [[ \"${array[*]}\" == \"${sorted[*]}\" ]] || [[ \"${array[*]}\" == \"${reversed[*]}\" ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"The list is empty\"\n        return\n    fi\n\n    # Check if the list has only one element\n    if [ $# -eq 1 ]; then\n        echo \"The list has only one element\"\n        return\n    fi\n\n    # Check if the list has only two elements\n    if [ $# -eq 2 ]; then\n        if [ $1 -eq $2 ]; then\n            echo \"The list is monotonic\"\n        else\n            echo \"The list is not monotonic\"\n        fi\n        return\n    fi\n\n    # Check if the list has more than two elements\n    # Check if the list is increasing\n    if [ $1 -lt $2 ]; then\n        for (( i=2; i<$#; i++ )); do\n            if [ ${!i} -lt ${!i+1} ]; then\n                continue\n            else\n                echo \"The list is not monotonic\"\n                return\n            fi\n        done\n        echo \"The list is monotonic\"\n        return\n    fi\n\n    # Check if the list is decreasing\n    if [ $1 -gt $2 ]; then\n        for (( i=2; i<$#; i++ )); do\n            if [ ${!i} -gt ${!i+1} ]; then\n                continue\n            else\n                echo \"The list is not monotonic\"\n                return\n            fi\n        done\n        echo \"The list is monotonic\"\n        return\n    fi",
    "  local -a arr=(\"$@\")\n  local -i len=${#arr[@]}\n  local -i i\n  local -i is_increasing=1\n  local -i is_decreasing=1\n\n  for ((i=1; i<len; i++)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n      is_increasing=0\n    elif [[ ${arr[i]} -gt ${arr[i-1]} ]]; then\n      is_decreasing=0\n    fi\n  done\n\n  if [[ is_increasing -eq 1 || is_decreasing -eq 1 ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=(\"$@\")\n    local -a arr_sorted_reverse=(\"$@\")\n\n    # sort the array in ascending order\n    IFS=$'\\n' arr_sorted=($(sort <<<\"${arr[*]}\"))\n    unset IFS\n\n    # sort the array in descending order\n    IFS=$'\\n' arr_sorted_reverse=($(sort -r <<<\"${arr[*]}\"))\n    unset IFS\n\n    # check if the original array is equal to the sorted array\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_reverse[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    python -c \"\nimport sys\n\ndef is_monotonic(array):\n    if len(array) <= 1:\n        return True\n    direction = array[1] - array[0]\n    for i in range(2, len(array)):\n        if direction == 0:\n            direction = array[i] - array[i - 1]\n            continue\n        elif breaks_direction(direction, array[i - 1], array[i]):\n            return False\n    return True\n\ndef breaks_direction(direction, previous_element, current_element):\n    difference = current_element - previous_element\n    if direction > 0:\n        return difference < 0\n    return difference > 0\n\nprint(is_monotonic([int(x) for x in sys.argv[1].split(' ')]))\n\" \"$1\"",
    "    local -a arr=($1)\n    local -a arr_sorted=($(echo ${arr[@]} | tr \" \" \"\\n\" | sort -n))\n    local -a arr_sorted_reverse=($(echo ${arr[@]} | tr \" \" \"\\n\" | sort -nr))\n\n    if [[ \"${arr[@]}\" == \"${arr_sorted[@]}\" ]] || [[ \"${arr[@]}\" == \"${arr_sorted_reverse[@]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            is_increasing=0\n        fi\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            is_decreasing=0\n        fi\n        i=$((i+1))\n    done\n\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local is_monotonic=1\n    local is_increasing=1\n    local is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag",
    "    local -a arr=($1)\n    local -a arr_asc=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_desc=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_asc[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_desc[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    if [[ $len -le 1 ]]; then\n        echo \"True\"\n        return 0\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        echo \"True\"\n    elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            flag=1\n        elif [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for (( i=0; i<len-1; i++ )); do\n        if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n            flag1=1\n        elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 ] && [ $flag2 -eq 0 ]; then\n        echo \"True\"\n    elif [ $flag1 -eq 0 ] && [ $flag2 -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i flag=0\n    local -i inc=0\n    local -i dec=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            inc=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            dec=1\n        fi\n    done\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        flag=1\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        flag=1\n    fi\n    echo $flag",
    "    local -n _array=$1\n    local -i len=${#_array[@]}\n    local -i i=0\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n    local -i is_non_monotonic=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${_array[$i]} -lt ${_array[$i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${_array[$i]} -gt ${_array[$i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=1\n    elif [[ $is_increasing -eq 0 && $is_decreasing -eq 1 ]]; then\n        is_monotonic=1\n    else\n        is_non_monotonic=1\n    fi\n\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"The array is monotonic\"\n    elif [[ $is_non_monotonic -eq 1 ]]; then\n        echo \"The array is non-monotonic\"\n    fi",
    "    local array=($1)\n    local increasing=0\n    local decreasing=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            decreasing=1\n        elif [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            increasing=1\n        fi\n    done\n    if [[ $increasing -eq 1 && $decreasing -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "\tlocal -a array=(\"$@\")\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i len=${#array[@]}\n\tlocal -i is_monotonic=1\n\n\tfor ((i=0; i<len-1; i++)); do\n\t\tif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n\t\t\tis_monotonic=0\n\t\t\tbreak\n\t\tfi\n\tdone\n\n\tif [[ $is_monotonic -eq 0 ]]; then\n\t\tfor ((i=0; i<len-1; i++)); do\n\t\t\tif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n\t\t\t\tis_monotonic=0\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\tfi\n\n\techo $is_monotonic",
    "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n      flag1=1\n    elif [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n      flag2=1\n    fi\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${arr[i]} -ge ${arr[i+1]} ]]; then\n      flag3=1\n    elif [[ ${arr[i]} -le ${arr[i+1]} ]]; then\n      flag4=1\n    fi\n  done\n  if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]; then\n    flag=1\n  elif [[ $flag3 -eq 1 && $flag4 -eq 0 ]]; then\n    flag=1\n  fi\n  echo $flag",
    "    local -n arr=$1\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i n",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -n array=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n",
    "  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i len=${#array[@]}\n  local -i flag=0\n  local -i flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51=0\n  local -i flag",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag1=1\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    python -c \"\nimport sys\n\ndef is_monotonic(array):\n    if len(array) <= 1:\n        return True\n    direction = array[1] - array[0]\n    for i in range(2, len(array)):\n        if direction == 0:\n            direction = array[i] - array[i - 1]\n            continue\n        elif breaks_direction(direction, array[i - 1], array[i]):\n            return False\n    return True\n\ndef breaks_direction(direction, previous_element, current_element):\n    difference = current_element - previous_element\n    if direction > 0:\n        return difference < 0\n    return difference > 0\n\nprint(is_monotonic([int(x) for x in sys.argv[1].split(' ')]))\n\" \"$1\"",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            flag=1\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            flag2=1\n        fi\n        if [[ ${arr[$i]} -eq ${arr[$i+1]} ]]; then\n            flag3=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 0 ]]; then\n        flag4=1\n    fi\n    if [[ $flag -eq 0 && $flag2 -eq 1 ]]; then\n        flag4=1\n    fi\n    if [[ $flag -eq 0 && $flag2 -eq 0 && $flag3 -eq 1 ]]; then\n        flag4=1\n    fi\n    if [[ $flag4 -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n    local -i is_constant=0\n    local -i is_non_constant=0\n\n    if (( len < 2 )); then\n        echo \"Array must have at least 2 elements\"\n        return 1\n    fi\n\n    for (( i=0; i<len-1; i++ )); do\n        if (( array[i] < array[i+1] )); then\n            is_increasing=1\n        elif (( array[i] > array[i+1] )); then\n            is_decreasing=1\n        elif (( array[i] == array[i+1] )); then\n            is_constant=1\n        else\n            echo \"Array must contain only integers\"\n            return 1\n        fi\n    done\n\n    if (( is_increasing == 1 && is_decreasing == 0 )); then\n        is_monotonic=1\n    elif (( is_decreasing == 1 && is_increasing == 0 )); then\n        is_monotonic=1\n    elif (( is_constant == 1 && is_decreasing == 0 && is_increasing == 0 )); then\n        is_monotonic=1\n    else\n        is_monotonic=0\n    fi\n\n    if (( is_monotonic == 1 )); then\n        echo \"Array is monotonic\"\n    else\n        echo \"Array is not monotonic\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    if [[ $len -eq 1 ]]; then\n        echo \"True\"\n        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 ]] && [[ $is_decreasing -eq 0 ]]; then\n        is_monotonic=1\n    elif [[ $is_decreasing -eq 1 ]] && [[ $is_increasing -eq 0 ]]; then\n        is_monotonic=1\n    fi\n\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"The list is empty\"\n        return 1\n    fi\n\n    # Check if the list has only one element\n    if [ $# -eq 1 ]; then\n        echo \"The list has only one element\"\n        return 1\n    fi\n\n    # Check if the list is monotonic\n    for (( i=1; i<$#; i++ )); do\n        if [ $(( $1 - $2 )) -gt 0 ]; then\n            echo \"The list is not monotonic\"\n            return 1\n        fi\n        shift\n    done\n\n    echo \"The list is monotonic\"\n    return 0",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0;i<n-1;i++))\n    do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]\n        then\n            flag=1\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]\n        then\n            flag1=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag1 -eq 1 ]]\n    then\n        echo \"No\"\n    else\n        echo \"Yes\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_decreasing=0\n    local -i is_increasing=0\n    local -i is_monotonic=0\n\n    if [[ $len -le 1 ]]; then\n        echo 1\n        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_decreasing=1\n        elif [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_increasing=1\n        fi\n    done\n\n    if [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n        is_monotonic=1\n    elif [[ $is_decreasing -eq 0 && $is_increasing -eq 1 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_rev=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_rev[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local array=(\"$@\")\n    local is_monotonic=1\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    local is_increasing=0\n    local is_decreasing=0\n\n    if [ $len -eq 1 ]; then\n        echo \"True\"\n        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${array[$i]} -lt ${array[$i+1]} ]; then\n            is_increasing=1\n            break\n        fi\n    done\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${array[$i]} -gt ${array[$i+1]} ]; then\n            is_decreasing=1\n            break\n        fi\n    done\n\n    if [ $is_increasing -eq 1 -a $is_decreasing -eq 1 ]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=($1)\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    local is_increasing=0\n    local is_decreasing=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        echo \"The array is monotonic increasing\"\n    elif [[ $is_increasing -eq 0 && $is_decreasing -eq 1 ]]; then\n        echo \"The array is monotonic decreasing\"\n    else\n        echo \"The array is not monotonic\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=1\n    elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic",
    "    # Split the list into an array\n    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -",
    "    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"Empty list\"\n        exit 1\n    fi\n\n    # Check if the list is monotonic\n    local prev=$1\n    shift\n    while [ -n \"$1\" ]; do\n        if [ \"$prev\" -gt \"$1\" ]; then\n            echo \"Not monotonic\"\n            exit 1\n        fi\n        prev=$1\n        shift\n    done\n    echo \"Monotonic\"",
    "    local -a arr\n    arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local flag=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        for ((i=0; i<len-1; i++)); do\n            if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n                echo \"Not Monotonic\"\n                return\n            fi\n        done\n    fi\n    echo \"Monotonic\"",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=1\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=",
    "    local -a array=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${array[@]}\" | sort -n))\n    local -a reverse=($(printf \"%s\\n\" \"${array[@]}\" | sort -nr))\n    if [[ \"${array[*]}\" == \"${sorted[*]}\" ]] || [[ \"${array[*]}\" == \"${reverse[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a array\n    array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -",
    "  local -a array\n  array=($1)\n  local -a sorted\n  sorted=($(printf \"%s\\n\" \"${array[@]}\" | sort -n))\n  local -a reverse\n  reverse=($(printf \"%s\\n\" \"${array[@]}\" | sort -nr))\n  if [ \"${array[*]}\" == \"${sorted[*]}\" ] || [ \"${array[*]}\" == \"${reverse[*]}\" ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 1 ]]; then\n        for ((j=0; j<len-1; j++)); do\n            if [[ ${array[j]} -lt ${array[j+1]} ]]; then\n                flag=2\n                break\n            fi\n        done\n    fi\n\n    if [[ $flag -eq 1 ]]; then\n        echo \"Decreasing\"\n    elif [[ $flag -eq 2 ]]; then\n        echo \"Increasing\"\n    else\n        echo \"Neither\"\n    fi",
    "    # Check if all elements are equal\n    if [ $(echo \"$1\" | tr ' ' '\\n' | sort -u | wc -l) -eq 1 ]; then\n        echo \"True\"\n        return\n    fi\n\n    # Check if all elements are increasing\n    if [ $(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ') == \"$1\" ]; then\n        echo \"True\"\n        return\n    fi\n\n    # Check if all elements are decreasing\n    if [ $(echo \"$1\" | tr ' ' '\\n' | sort -nr | tr '\\n' ' ') == \"$1\" ]; then\n        echo \"True\"\n        return\n    fi\n\n    echo \"False\"",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            increasing=0\n        elif [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n\n    if [[ $increasing -eq 1 ]] || [[ $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=1\n    local -i decreasing=1\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            increasing=0\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -",
    "    local -a array=($1)\n    local -a array_sorted=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a array_sorted_reverse=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -nr))\n    if [[ \"${array[@]}\" == \"${array_sorted[@]}\" ]] || [[ \"${array[@]}\" == \"${array_sorted_reverse[@]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_equal=0\n\n    if [[ $len -eq 1 ]]; then\n        echo \"True\"\n        return 0\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_decreasing=1\n        elif [[ ${array[i]} -eq ${array[i+1]} ]]; then\n            is_equal=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]; then\n        is_monotonic=0\n    fi\n\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i ret=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            inc=$((inc+1))\n        elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [[ $inc -eq $((len-1)) ]]; then\n        ret=1\n    elif [[ $dec -eq $((len-1)) ]]; then\n        ret=1\n    elif [[ $eq -eq $((len-1)) ]]; then\n        ret=1\n    fi\n\n    echo $ret",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i prev=${arr[0]}\n\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[$i]} -lt $prev ]]; then\n            is_increasing=0\n        elif [[ ${arr[$i]} -gt $prev ]]; then\n            is_decreasing=0\n        fi\n        prev=${arr[$i]}\n    done\n\n    if [[ $is_increasing -eq 1 ]] || [[ $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 ]]; then\n        echo \"Increasing\"\n    elif [[ $is_decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Neither\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag1=1\n        fi\n    done\n\n    if [[ $flag -eq 1 && $flag1 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag",
    "    # The list is monotonic if it is either non-decreasing or non-increasing.\n    # A non-decreasing list is one where each element is greater than or equal\n    # to the previous element. A non-increasing list is one where each element\n    # is less than or equal to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element. We can check if the\n    # list is non-increasing by checking if each element is less than or equal\n    # to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element. We can check if the\n    # list is non-increasing by checking if each element is less than or equal\n    # to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element. We can check if the\n    # list is non-increasing by checking if each element is less than or equal\n    # to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element. We can check if the\n    # list is non-increasing by checking if each element is less than or equal\n    # to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element. We can check if the\n    # list is non-increasing by checking if each element is less than or equal\n    # to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element. We can check if the\n    # list is non-increasing by checking if each element is less than or equal\n    # to the previous element.\n    #\n    # We can check if the list is non-decreasing by checking if each element\n    # is greater than or equal to the previous element.",
    "    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "  local -a array=($1)\n  local -i i=0\n  local -i j=1\n  local -i len=${#array[@]}\n  local -i is_increasing=0\n  local -i is_decreasing=0\n  local -i is_monotonic=0\n\n  while [[ $i -lt $len ]] && [[ $j -lt $len ]]; do\n    if [[ ${array[$i]} -lt ${array[$j]} ]]; then\n      is_increasing=1\n    elif [[ ${array[$i]} -gt ${array[$j]} ]]; then\n      is_decreasing=1\n    fi\n    ((i++))\n    ((j++))\n  done\n\n  if [[ $is_increasing -eq 1 ]] && [[ $is_decreasing -eq 0 ]]; then\n    is_monotonic=1\n  elif [[ $is_decreasing -eq 1 ]] && [[ $is_increasing -eq 0 ]]; then\n    is_monotonic=1\n  fi\n\n  echo $is_monotonic",
    "    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]]; then\n        echo \"Array is monotonic\"\n    else\n        echo \"Array is not monotonic\"\n    fi",
    "    python3 -c \"import sys; print(all(x<=y for x, y in zip(sys.argv[1].split(), sys.argv[1].split()[1:])) or all(x>=y for x, y in zip(sys.argv[1].split(), sys.argv[1].split()[1:])))\" $1",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i res=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        elif [[ ${arr[i]} -eq ${arr[i+1]} ]]; then\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        res=1\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        res=1\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        res=1\n    fi\n\n    echo $res",
    "    local -a array\n    array=($1)\n    local is_increasing=0\n    local is_decreasing=0\n    local i=0\n    local j=0\n    local n=${#array[@]}\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_decreasing=1\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_increasing=1\n        fi\n    done\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n      flag1=1\n    fi\n    if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n      flag2=1\n    fi\n    if [[ ${arr[i]} -eq ${arr[i+1]} ]]; then\n      flag3=1\n    fi\n  done\n  if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]; then\n    flag=1\n  elif [[ $flag1 -eq 0 && $flag2 -eq 1 ]]; then\n    flag=2\n  elif [[ $flag3 -eq 1 ]]; then\n    flag=3\n  else\n    flag=0\n  fi\n  echo $flag",
    "    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i res=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                inc=1\n            elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                dec=1\n            else\n                eq=1\n            fi\n        else\n            if [ $inc -eq 1 ]; then\n                if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                    inc=1\n                elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                    inc=0\n                    dec=1\n                else\n                    inc=0\n                    eq=1\n                fi\n            elif [ $dec -eq 1 ]; then\n                if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                    dec=0\n                    inc=1\n                elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                    dec=1\n                else\n                    dec=0\n                    eq=1\n                fi\n            elif [ $eq -eq 1 ]; then\n                if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                    eq=0\n                    inc=1\n                elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                    eq=0\n                    dec=1\n                else\n                    eq=1\n                fi\n            fi\n        fi\n        i=$i+1\n    done\n\n    if [ $inc -eq 1 ] || [ $dec -eq 1 ] || [ $eq -eq 1 ]; then\n        res=1\n    fi\n\n    echo $res",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i is_monotonic\n    local -i is_increasing\n    local -i is_decreasing\n    local -i is_equal\n\n    arr=($1)\n    len=${#arr[@]}\n    is_monotonic=1\n    is_increasing=1\n    is_decreasing=1\n    is_equal=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        elif [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        else\n            is_equal=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 && $is_equal -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic",
    "    local -a array\n    array=($1)\n    local -i i\n    local -i len\n    len=${#array[@]}\n    local -i flag\n    flag=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        for ((i=0; i<len-1; i++)); do\n            if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n                echo \"Not Monotonic\"\n                return\n            fi\n        done\n    fi\n    echo \"Monotonic\"",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -"
  ]
}
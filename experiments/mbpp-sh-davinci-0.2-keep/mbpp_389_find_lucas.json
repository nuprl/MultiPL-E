{
  "name": "mbpp_389_find_lucas",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the n'th lucas number.\n#\n# $1 is an integer\nfind_lucas() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_lucas \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"9\") = \"76\" ]]\n    [[ $(candidate \"4\") = \"7\" ]]\n    [[ $(candidate \"3\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local n_1=2\n    local n_2=1\n    local i=2\n    if [ $n -eq 1 ]; then\n        echo $n_2\n    elif [ $n -eq 2 ]; then\n        echo $n_1\n    else\n        while [ $i -lt $n ]; do\n            local temp=$n_1\n            n_1=$((n_1+n_2))\n            n_2=$temp\n            i=$((i+1))\n        done\n        echo $n_1\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    local i=0\n\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        while [ $i -lt $n ]; do\n            lucas_n=$((lucas_0 + lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n            i=$((i + 1))\n        done\n        echo $lucas_n\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(($1 - 1))) + $(find_lucas $(($1 - 2))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c\n    if [[ $n -eq 1 ]]; then\n        echo $a\n    elif [[ $n -eq 2 ]]; then\n        echo $b\n    else\n        for ((i=3; i<=n; i++)); do\n            c=$((a+b))\n            a=$b\n            b=$c\n        done\n        echo $c\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "  # If $1 is less than 1, return 2.\n  if [ $1 -lt 1 ]; then\n    echo 2\n  # If $1 is 1, return 1.\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  # Otherwise, return the sum of the previous two lucas numbers.\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "\tif [ $1 -eq 1 ]; then\n\t\techo 2\n\telif [ $1 -eq 2 ]; then\n\t\techo 1\n\telse\n\t\techo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n\tfi",
    "  if [ $1 -eq 1 ]; then\n    echo 2\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    local i=0\n    if [ $n -eq 0 ]; then\n        lucas_n=$lucas_0\n    elif [ $n -eq 1 ]; then\n        lucas_n=$lucas_1\n    else\n        while [ $i -lt $n ]; do\n            lucas_n=$((lucas_0 + lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n            i=$((i + 1))\n        done\n    fi\n    echo $lucas_n",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]\n    then\n        echo 2\n    elif [ $1 -eq 1 ]\n    then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n        local c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $a",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    if [ $n -eq 0 ]; then\n        echo 2\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        local n_1=$(find_lucas $((n - 1)))\n        local n_2=$(find_lucas $((n - 2)))\n        echo $((n_1 + n_2))\n    fi",
    "    local n=$1\n    local i=0\n    local lucas=2\n    local prev=1\n    local next=3\n    if [ $n -eq 0 ]; then\n        echo 2\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        while [ $i -lt $n ]; do\n            lucas=$next\n            next=$((lucas + prev))\n            prev=$lucas\n            i=$((i + 1))\n        done\n        echo $lucas\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "  if [ $1 -eq 1 ]; then\n    echo 2\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_n=0\n    local lucas_n_1=2\n    local lucas_n_2=1\n    if [[ $n -eq 0 ]]; then\n        lucas_n=2\n    elif [[ $n -eq 1 ]]; then\n        lucas_n=1\n    else\n        for (( i=2; i<=n; i++ )); do\n            lucas_n=$(( lucas_n_1 + lucas_n_2 ))\n            lucas_n_2=$lucas_n_1\n            lucas_n_1=$lucas_n\n        done\n    fi\n    echo $lucas_n",
    "  local n=$1\n  local lucas_n=0\n  local lucas_n_1=2\n  local lucas_n_2=1\n  local i=0\n  if [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo 2\n  elif [ $n -eq 2 ]; then\n    echo 1\n  else\n    for ((i=3; i<=n; i++)); do\n      lucas_n=$((lucas_n_1+lucas_n_2))\n      lucas_n_2=$lucas_n_1\n      lucas_n_1=$lucas_n\n    done\n    echo $lucas_n\n  fi",
    "    local n=$1\n    local lucas_n=0\n    local lucas_n_1=2\n    local lucas_n_2=1\n    local i=3\n\n    if [ $n -eq 1 ]; then\n        lucas_n=2\n    elif [ $n -eq 2 ]; then\n        lucas_n=1\n    else\n        while [ $i -le $n ]; do\n            lucas_n=$((lucas_n_1 + lucas_n_2))\n            lucas_n_2=$lucas_n_1\n            lucas_n_1=$lucas_n\n            i=$((i + 1))\n        done\n    fi\n\n    echo $lucas_n",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        for ((i=2; i<=n; i++)); do\n            lucas_n=$((lucas_0 + lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c\n    if [ $n -eq 0 ]; then\n        echo $a\n    elif [ $n -eq 1 ]; then\n        echo $b\n    else\n        for (( i=2; i<=n; i++ )); do\n            c=$(( a + b ))\n            a=$b\n            b=$c\n        done\n        echo $c\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=$n; i++ )); do\n            lucas_n=$(( $lucas_0 + $lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local n1=2\n    local n2=1\n    local n3=0\n    if [[ $n -eq 1 ]]; then\n        echo $n1\n    elif [[ $n -eq 2 ]]; then\n        echo $n2\n    else\n        for ((i=3; i<=n; i++)); do\n            n3=$((n1+n2))\n            n1=$n2\n            n2=$n3\n        done\n        echo $n3\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        n=$(($1 - 1))\n        nth_lucas=$(find_lucas $n)\n        n=$(($1 - 2))\n        n_1th_lucas=$(find_lucas $n)\n        echo $(($nth_lucas + $n_1th_lucas))\n    fi",
    "    local n=$1\n    local n1=2\n    local n2=1\n    local n3=0\n    if [[ $n -eq 1 ]]; then\n        echo $n1\n    elif [[ $n -eq 2 ]]; then\n        echo $n2\n    else\n        for (( i=3; i<=$n; i++ )); do\n            n3=$(( n1 + n2 ))\n            n1=$n2\n            n2=$n3\n        done\n        echo $n3\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local lucas=2\n  local prev=1\n  local temp\n  if [[ $n -eq 0 ]]; then\n    echo $lucas\n  elif [[ $n -eq 1 ]]; then\n    echo $prev\n  else\n    for ((i=2; i<=n; i++)); do\n      temp=$lucas\n      lucas=$((lucas+prev))\n      prev=$temp\n    done\n    echo $lucas\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas=2\n    local prev=1\n    local temp=0\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 2\n    else\n        for ((i=2; i<=n; i++)); do\n            temp=$lucas\n            lucas=$((lucas+prev))\n            prev=$temp\n        done\n        echo $lucas\n    fi",
    "  local n=$1\n  local lucas_n=0\n  local lucas_n_1=2\n  local lucas_n_2=1\n  local i=0\n\n  if [ $n -eq 0 ]; then\n    echo $lucas_n\n  elif [ $n -eq 1 ]; then\n    echo $lucas_n_1\n  elif [ $n -eq 2 ]; then\n    echo $lucas_n_2\n  else\n    for ((i=3; i<=n; i++)); do\n      lucas_n=$((lucas_n_1 + lucas_n_2))\n      lucas_n_2=$lucas_n_1\n      lucas_n_1=$lucas_n\n    done\n    echo $lucas_n\n  fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n\n    if [[ $n -eq 0 ]]; then\n        echo $a\n    elif [[ $n -eq 1 ]]; then\n        echo $b\n    else\n        while [[ $i -lt $n ]]; do\n            c=$((a+b))\n            a=$b\n            b=$c\n            i=$((i+1))\n        done\n        echo $c\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    local i=0\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        while [ $i -lt $n ]; do\n            lucas_n=$((lucas_0 + lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n            i=$((i + 1))\n        done\n        echo $lucas_n\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  local i=0\n  while [ $i -lt $n ]; do\n    c=$((a+b))\n    a=$b\n    b=$c\n    i=$((i+1))\n  done\n  echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_n=0\n    local lucas_n_1=2\n    local lucas_n_2=1\n    if [ $n -eq 1 ]; then\n        echo \"$lucas_n_2\"\n    elif [ $n -eq 2 ]; then\n        echo \"$lucas_n_1\"\n    else\n        for ((i=3; i<=$n; i++)); do\n            lucas_n=$((lucas_n_1 + lucas_n_2))\n            lucas_n_2=$lucas_n_1\n            lucas_n_1=$lucas_n\n        done\n        echo \"$lucas_n\"\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n\n    if [ $n -eq 0 ]; then\n        echo $a\n    elif [ $n -eq 1 ]; then\n        echo $b\n    else\n        while [ $i -lt $n ]; do\n            c=$((a+b))\n            a=$b\n            b=$c\n            i=$((i+1))\n        done\n        echo $c\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(($1-1))) + $(find_lucas $(($1-2))) ))\n    fi",
    "    if [ \"$1\" -eq 1 ]; then\n        echo 2\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_n=0\n    local lucas_n_1=2\n    local lucas_n_2=1\n\n    if (( n == 0 )); then\n        echo 0\n    elif (( n == 1 )); then\n        echo 2\n    elif (( n == 2 )); then\n        echo 1\n    else\n        for (( i=3; i<=n; i++ )); do\n            lucas_n=$(( lucas_n_1 + lucas_n_2 ))\n            lucas_n_2=$lucas_n_1\n            lucas_n_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    if (( n == 0 )); then\n        echo 2\n    elif (( n == 1 )); then\n        echo 1\n    else\n        echo $(( $(find_lucas $((n-1))) + $(find_lucas $((n-2))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(($(find_lucas $(($1-1))) + $(find_lucas $(($1-2)))))\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        n=$(( $1 - 1 ))\n        n_1=$(find_lucas $n)\n        n_2=$(( $n - 1 ))\n        n_2=$(find_lucas $n_2)\n        echo $(( $n_1 + $n_2 ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n\n    if [[ $n -eq 0 ]]; then\n        echo $a\n    elif [[ $n -eq 1 ]]; then\n        echo $b\n    else\n        while [[ $i -lt $n ]]; do\n            c=$((a+b))\n            a=$b\n            b=$c\n            ((i++))\n        done\n        echo $c\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(($1 - 1))) + $(find_lucas $(($1 - 2))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=1\n    while [ $i -lt $n ]; do\n        local c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $b",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=2\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        while [ $i -le $n ]; do\n            c=$((a+b))\n            a=$b\n            b=$c\n            i=$((i+1))\n        done\n        echo $c\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 )) ) + $(find_lucas $(( $1 - 2 )) ) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $lucas_0\n    elif [[ $n -eq 1 ]]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=$n; i++ )); do\n            lucas_n=$(( $lucas_0 + $lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n    done\n    echo $a",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $lucas_0\n    elif [[ $n -eq 1 ]]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=$n; i++ )); do\n            lucas_n=$(( lucas_0 + lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    if [[ $n -eq 0 ]]; then\n        echo $a\n    elif [[ $n -eq 1 ]]; then\n        echo $b\n    else\n        for (( i=2; i<=$n; i++ )); do\n            c=$((a+b))\n            a=$b\n            b=$c\n        done\n        echo $c\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=2\n    if [[ $n -eq 1 ]]; then\n        echo $a\n    elif [[ $n -eq 2 ]]; then\n        echo $b\n    else\n        while [[ $i -lt $n ]]; do\n            let \"a+=$b\"\n            let \"b+=$a\"\n            let i++\n        done\n        echo $b\n    fi",
    "    local n=$1\n    local lucas_n=0\n    local lucas_n_1=2\n    local lucas_n_2=1\n    local i=3\n    if [ $n -eq 1 ]; then\n        echo $lucas_n_2\n    elif [ $n -eq 2 ]; then\n        echo $lucas_n_1\n    else\n        while [ $i -le $n ]; do\n            lucas_n=$((lucas_n_1 + lucas_n_2))\n            lucas_n_2=$lucas_n_1\n            lucas_n_1=$lucas_n\n            i=$((i + 1))\n        done\n        echo $lucas_n\n    fi",
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # Check if $1 is 0\n        if [[ $1 -eq 0 ]]; then\n            echo 2\n        # Check if $1 is 1\n        elif [[ $1 -eq 1 ]]; then\n            echo 1\n        # Check if $1 is greater than 1\n        elif [[ $1 -gt 1 ]]; then\n            # Find the n'th lucas number\n            echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n        fi\n    else\n        echo \"Error: $1 is not an integer\"\n    fi",
    "    # Check if the argument is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # Check if the argument is 0\n        if [ $1 -eq 0 ]; then\n            echo \"2\"\n        # Check if the argument is 1\n        elif [ $1 -eq 1 ]; then\n            echo \"1\"\n        # Check if the argument is greater than 1\n        elif [ $1 -gt 1 ]; then\n            # Find the n'th lucas number\n            lucas=$(($(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n            echo \"$lucas\"\n        fi\n    else\n        echo \"Error: Argument is not an integer.\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=2\n    if [[ $n -eq 1 ]]; then\n        echo $a\n    elif [[ $n -eq 2 ]]; then\n        echo $b\n    else\n        while [[ $i -lt $n ]]; do\n            local c=$((a+b))\n            a=$b\n            b=$c\n            i=$((i+1))\n        done\n        echo $b\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]\n    do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 2\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n        for (( i=3; i<=$n; i++ )); do\n            c=$(( a + b ))\n            a=$b\n            b=$c\n        done\n        echo $c\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $lucas_0\n    elif [[ $n -eq 1 ]]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=n; i++ )); do\n            lucas_n=$(( lucas_0 + lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  local i=2\n\n  if [[ $n -eq 1 ]]; then\n    echo $a\n  elif [[ $n -eq 2 ]]; then\n    echo $b\n  else\n    while [[ $i -lt $n ]]; do\n      c=$((a+b))\n      a=$b\n      b=$c\n      ((i++))\n    done\n    echo $c\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "\tlocal n=$1\n\tlocal lucas_1=2\n\tlocal lucas_2=1\n\tlocal lucas_n=0\n\tlocal i=0\n\tif [ $n -eq 1 ]; then\n\t\techo $lucas_1\n\telif [ $n -eq 2 ]; then\n\t\techo $lucas_2\n\telse\n\t\tfor (( i=3; i<=$n; i++ )); do\n\t\t\tlucas_n=$(( $lucas_1 + $lucas_2 ))\n\t\t\tlucas_2=$lucas_1\n\t\t\tlucas_1=$lucas_n\n\t\tdone\n\t\techo $lucas_n\n\tfi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    local n=$1\n    if [[ $n -eq 0 ]]; then\n        echo 2\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        local n_1=$(find_lucas $((n-1)))\n        local n_2=$(find_lucas $((n-2)))\n        echo $((n_1 + n_2))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(($(find_lucas $(($1 - 1))) + $(find_lucas $(($1 - 2)))))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        # Find the previous two lucas numbers\n        prev1=$(find_lucas $(($1 - 1)))\n        prev2=$(find_lucas $(($1 - 2)))\n        # Add them together\n        echo $(($prev1 + $prev2))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((a + tmp))\n        i=$((i + 1))\n    done\n    echo $a",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "\tlocal n=$1\n\tlocal lucas_1=2\n\tlocal lucas_2=1\n\tlocal lucas_n=0\n\tif [ $n -eq 1 ]; then\n\t\techo $lucas_1\n\telif [ $n -eq 2 ]; then\n\t\techo $lucas_2\n\telse\n\t\tfor (( i=3; i<=$n; i++ )); do\n\t\t\tlucas_n=$(( $lucas_1 + $lucas_2 ))\n\t\t\tlucas_2=$lucas_1\n\t\t\tlucas_1=$lucas_n\n\t\tdone\n\t\techo $lucas_n\n\tfi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  local i=0\n\n  if [ $n -eq 0 ]; then\n    echo $a\n  elif [ $n -eq 1 ]; then\n    echo $b\n  else\n    while [ $i -lt $n ]; do\n      c=$((a+b))\n      a=$b\n      b=$c\n      i=$((i+1))\n    done\n    echo $c\n  fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    local i=2\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        while [ $i -le $n ]; do\n            lucas_n=$(( $lucas_0 + $lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n            i=$(( $i + 1 ))\n        done\n        echo $lucas_n\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    if [ $1 -eq 0 ]\n    then\n        echo \"2\"\n    elif [ $1 -eq 1 ]\n    then\n        echo \"1\"\n    else\n        echo \"$(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n\n    if [ $n -eq 0 ]; then\n        lucas_n=$lucas_0\n    elif [ $n -eq 1 ]; then\n        lucas_n=$lucas_1\n    else\n        for i in $(seq 2 $n); do\n            lucas_n=$((lucas_0 + lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n    fi\n\n    echo $lucas_n",
    "    local n=$1\n    local lucas_n=2\n    local lucas_n_1=1\n    local lucas_n_2=1\n    local i=3\n    while [ $i -le $n ]; do\n        lucas_n=$((lucas_n_1 + lucas_n_2))\n        lucas_n_2=$lucas_n_1\n        lucas_n_1=$lucas_n\n        i=$((i + 1))\n    done\n    echo $lucas_n",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local n1=2\n    local n2=1\n    local n3=0\n    if [[ $n -eq 1 ]]; then\n        echo $n1\n    elif [[ $n -eq 2 ]]; then\n        echo $n2\n    else\n        for ((i=3; i<=n; i++)); do\n            n3=$((n1+n2))\n            n1=$n2\n            n2=$n3\n        done\n        echo $n3\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(($1-1))) + $(find_lucas $(($1-2))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo 2\n        return\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo 1\n        return\n    fi\n\n    while [[ $i -lt $n ]]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n\n    echo $c",
    "    # Check if $1 is a number\n    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not a number\"\n        return 1\n    fi\n\n    # Check if $1 is greater than 0\n    if [[ $1 -lt 1 ]]; then\n        echo \"Error: $1 is less than 1\"\n        return 1\n    fi\n\n    # Check if $1 is greater than 2\n    if [[ $1 -gt 2 ]]; then\n        # Find the lucas number\n        lucas=$(($(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    else\n        # $1 is 1 or 2\n        lucas=$1\n    fi\n\n    echo $lucas",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=$n; i++ )); do\n            lucas_n=$(( lucas_0 + lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    # Check if $1 is an integer\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        # Check if $1 is 0 or 1\n        if [[ $1 -eq 0 ]]; then\n            echo \"0\"\n        elif [[ $1 -eq 1 ]]; then\n            echo \"1\"\n        else\n            # Find the n'th lucas number\n            echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n        fi\n    else\n        echo \"Error: $1 is not an integer.\"\n    fi",
    "    local n=$1\n    local n1=2\n    local n2=1\n    local nth=0\n    if [ $n -eq 1 ]; then\n        echo $n1\n    elif [ $n -eq 2 ]; then\n        echo $n2\n    else\n        for ((i=3; i<=$n; i++)); do\n            nth=$((n1+n2))\n            n1=$n2\n            n2=$nth\n        done\n        echo $nth\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n\n    if [[ $n -eq 0 ]]; then\n        echo $lucas_0\n    elif [[ $n -eq 1 ]]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=$n; i++ )); do\n            lucas_n=$(( $lucas_0 + $lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_n=2\n    local lucas_n_1=1\n    local lucas_n_2=1\n    local i=3\n    while [ $i -le $n ]; do\n        lucas_n=$((lucas_n_1 + lucas_n_2))\n        lucas_n_2=$lucas_n_1\n        lucas_n_1=$lucas_n\n        i=$((i + 1))\n    done\n    echo $lucas_n",
    "    local n=$1\n    local lucas=2\n    local prev=1\n    local temp=0\n\n    if [[ $n -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $n -eq 1 ]]; then\n        echo \"1\"\n    else\n        for ((i=2; i<=n; i++)); do\n            temp=$lucas\n            lucas=$((lucas + prev))\n            prev=$temp\n        done\n        echo \"$lucas\"\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n        i=$((i+1))\n    done\n    echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]\n    then\n        echo 2\n    elif [ $1 -eq 1 ]\n    then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c\n  if [ $n -eq 1 ]; then\n    echo $a\n  elif [ $n -eq 2 ]; then\n    echo $b\n  else\n    for (( i=3; i<=$n; i++ )); do\n      c=$(( a + b ))\n      a=$b\n      b=$c\n    done\n    echo $c\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [[ $1 -eq 0 ]]; then\n    echo 2\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(($(find_lucas $(($1-1))) + $(find_lucas $(($1-2)))))\n  fi",
    "  local n=$1\n  local lucas_0=2\n  local lucas_1=1\n  local lucas_n=0\n  local i=2\n  if [ $n -eq 0 ]; then\n    echo $lucas_0\n  elif [ $n -eq 1 ]; then\n    echo $lucas_1\n  else\n    while [ $i -le $n ]; do\n      lucas_n=$(( lucas_0 + lucas_1 ))\n      lucas_0=$lucas_1\n      lucas_1=$lucas_n\n      (( i++ ))\n    done\n    echo $lucas_n\n  fi",
    "    local n=$1\n    if [[ $n -eq 0 ]]; then\n        echo 2\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $((n-1))) + $(find_lucas $((n-2))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "\tif [ $1 -eq 0 ]; then\n\t\techo 2\n\telif [ $1 -eq 1 ]; then\n\t\techo 1\n\telse\n\t\techo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n\tfi",
    "    if [ $1 -eq 0 ]; then\n        echo \"2\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1\"\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [[ $1 -eq 0 ]]; then\n    echo 2\n  elif [[ $1 -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "  local n=$1\n  if [[ $n -eq 0 ]]; then\n    echo 2\n  elif [[ $n -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(($n - 1))) + $(find_lucas $(($n - 2))) ))\n  fi",
    "  local n=$1\n  local lucas_0=2\n  local lucas_1=1\n  local lucas_n=0\n  if [ $n -eq 0 ]; then\n    echo $lucas_0\n  elif [ $n -eq 1 ]; then\n    echo $lucas_1\n  else\n    for (( i=2; i<=$n; i++ )); do\n      lucas_n=$(( lucas_0 + lucas_1 ))\n      lucas_0=$lucas_1\n      lucas_1=$lucas_n\n    done\n    echo $lucas_n\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  if [ $n -eq 0 ]; then\n    echo $a\n  elif [ $n -eq 1 ]; then\n    echo $b\n  else\n    for (( i=2; i<=$n; i++ )); do\n      c=$((a+b))\n      a=$b\n      b=$c\n    done\n    echo $c\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n    done\n    echo $a",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    if [[ $n -eq 0 ]]; then\n        echo 2\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        local n_1=$(find_lucas $((n - 1)))\n        local n_2=$(find_lucas $((n - 2)))\n        echo $((n_1 + n_2))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(($1-1))) + $(find_lucas $(($1-2))) ))\n  fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local lucas=2\n  local prev=1\n  local temp=0\n\n  if [[ $n -eq 1 ]]; then\n    echo 1\n    return\n  fi\n\n  for ((i=2; i<=n; i++)); do\n    temp=$lucas\n    lucas=$((lucas+prev))\n    prev=$temp\n  done\n\n  echo $lucas",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  for ((i=2; i<=n; i++)); do\n    c=$((a+b))\n    a=$b\n    b=$c\n  done\n  echo $c",
    "\tlocal n=$1\n\tlocal lucas_n=0\n\tlocal lucas_n_1=2\n\tlocal lucas_n_2=1\n\tlocal i=3\n\n\tif [ $n -eq 1 ]; then\n\t\tlucas_n=2\n\telif [ $n -eq 2 ]; then\n\t\tlucas_n=1\n\telse\n\t\twhile [ $i -le $n ]; do\n\t\t\tlucas_n=$(($lucas_n_1 + $lucas_n_2))\n\t\t\tlucas_n_2=$lucas_n_1\n\t\t\tlucas_n_1=$lucas_n\n\t\t\ti=$(($i + 1))\n\t\tdone\n\tfi\n\n\techo $lucas_n",
    "  if [ $1 -eq 0 ]\n  then\n    echo 2\n  elif [ $1 -eq 1 ]\n  then\n    echo 1\n  else\n    echo $(( $(find_lucas $(($1 - 1))) + $(find_lucas $(($1 - 2))) ))\n  fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "  local n=$1\n  local lucas_n=0\n  local lucas_n_1=1\n  local lucas_n_2=1\n  local i=2\n  if [[ $n -eq 0 ]]; then\n    echo 0\n  elif [[ $n -eq 1 ]]; then\n    echo 1\n  else\n    while [[ $i -lt $n ]]; do\n      lucas_n=$((lucas_n_1 + lucas_n_2))\n      lucas_n_2=$lucas_n_1\n      lucas_n_1=$lucas_n\n      i=$((i+1))\n    done\n    echo $lucas_n\n  fi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  local i=0\n\n  if [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo 2\n  elif [ $n -eq 2 ]; then\n    echo 1\n  else\n    for ((i=3; i<=n; i++)); do\n      c=$((a+b))\n      a=$b\n      b=$c\n    done\n    echo $c\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  local i=0\n  while [ $i -lt $n ]; do\n    c=$((a+b))\n    a=$b\n    b=$c\n    i=$((i+1))\n  done\n  echo $c",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  local n=$1\n  local a=2\n  local b=1\n  local c=0\n  if [ $n -eq 0 ]; then\n    echo $a\n  elif [ $n -eq 1 ]; then\n    echo $b\n  else\n    for ((i=2; i<=n; i++)); do\n      c=$((a+b))\n      a=$b\n      b=$c\n    done\n    echo $c\n  fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    local n=$1\n    local a=2\n    local b=1\n    local c=0\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n    done\n    echo $c",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        for ((i=2; i<=n; i++)); do\n            lucas_n=$((lucas_0 + lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo \"2\"\n  elif [ $1 -eq 1 ]; then\n    echo \"1\"\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "  if [ $1 -eq 0 ]; then\n    echo 2\n  elif [ $1 -eq 1 ]; then\n    echo 1\n  else\n    echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n  fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(($(find_lucas $(($1-1))) + $(find_lucas $(($1-2)))))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    local i=0\n    if [ $n -eq 0 ]; then\n        echo $lucas_0\n    elif [ $n -eq 1 ]; then\n        echo $lucas_1\n    else\n        while [ $i -lt $n ]; do\n            lucas_n=$((lucas_0+lucas_1))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n            i=$((i+1))\n        done\n        echo $lucas_n\n    fi",
    "    if [ $1 -eq 1 ]; then\n        echo 2\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    local n=$1\n    local lucas_0=2\n    local lucas_1=1\n    local lucas_n=0\n    if [[ $n -eq 0 ]]; then\n        echo $lucas_0\n    elif [[ $n -eq 1 ]]; then\n        echo $lucas_1\n    else\n        for (( i=2; i<=$n; i++ )); do\n            lucas_n=$(( lucas_0 + lucas_1 ))\n            lucas_0=$lucas_1\n            lucas_1=$lucas_n\n        done\n        echo $lucas_n\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 2\n    elif [[ $1 -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 2\n    elif [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(find_lucas $(( $1 - 1 ))) + $(find_lucas $(( $1 - 2 ))) ))\n    fi"
  ]
}
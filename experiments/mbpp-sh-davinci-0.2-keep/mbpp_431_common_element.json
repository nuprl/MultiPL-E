{
  "name": "mbpp_431_common_element",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes two lists and returns true if they have at least one common element.\n#\n# $1 is a $Any\n# $2 is a $Any\ncommon_element() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    common_element \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\" \"5 6 7 8 9\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 4 5\" \"6 7 8 9\") = \"None\" ]]\n    [[ $(candidate \"a b c\" \"d b e\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a list1=(\"${!1}\")\n    local -a list2=(\"${!2}\")\n    local -a common=()\n    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                common+=(\"$i\")\n            fi\n        done\n    done\n    if [[ \"${#common[@]}\" -gt 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local element\n    for element in $list1; do\n        if [[ $list2 =~ $element ]]; then\n            return 0\n        fi\n    done\n    return 1",
    "  local -n a=$1\n  local -n b=$2\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ $i == $j ]]; then\n        return 0\n      fi\n    done\n  done\n  return 1",
    "    local list1=($1)\n    local list2=($2)\n    local i=0\n    local j=0\n    local found=0\n    while [ $i -lt ${#list1[@]} ] && [ $found -eq 0 ]; do\n        j=0\n        while [ $j -lt ${#list2[@]} ] && [ $found -eq 0 ]; do\n            if [ ${list1[$i]} = ${list2[$j]} ]; then\n                found=1\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n    echo $found",
    "  local -a array1=(\"${!1}\")\n  local -a array2=(\"${!2}\")\n  local -a intersection=()\n  for i in \"${array1[@]}\"; do\n    for j in \"${array2[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        intersection+=(\"$i\")\n      fi\n    done\n  done\n  if [[ ${#intersection[@]} -gt 0 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array1=(\"${!1}\")\n    local -a array2=(\"${!2}\")\n    for i in \"${array1[@]}\"; do\n        for j in \"${array2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                return 0\n            fi\n        done\n    done\n    return 1",
    "  local -n _list1=$1\n  local -n _list2=$2\n  for i in \"${_list1[@]}\"; do\n    for j in \"${_list2[@]}\"; do\n      if [[ $i == $j ]]; then\n        return 0\n      fi\n    done\n  done\n  return 1",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a intersection=($(comm -12 <(printf \"%s\\n\" \"${list1[@]}\" | sort) <(printf \"%s\\n\" \"${list2[@]}\" | sort)))\n  if [[ ${#intersection[@]} -gt 0 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local -a array1=(\"${!1}\")\n    local -a array2=(\"${!2}\")\n    for i in \"${array1[@]}\"; do\n        for j in \"${array2[@]}\"; do\n            if [[ $i == $j ]]; then\n                return 0\n            fi\n        done\n    done\n    return 1",
    "    local -a array1=(\"${!1}\")\n    local -a array2=(\"${!2}\")\n    for i in \"${array1[@]}\"; do\n        for j in \"${array2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                return 0\n            fi\n        done\n    done\n    return 1",
    "  local -n a=$1\n  local -n b=$2\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ $i == $j ]]; then\n        return 0\n      fi\n    done\n  done\n  return 1",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a intersection=()\n    local -a unique=()\n    local -a duplicates=()\n    local -a result=()\n\n    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                intersection+=(\"$i\")\n            fi\n        done\n    done\n\n    for i in \"${list1[@]}\"; do\n        unique+=(\"$i\")\n    done\n\n    for i in \"${list2[@]}\"; do\n        unique+=(\"$i\")\n    done\n\n    for i in \"${unique[@]}\"; do\n        for j in \"${unique[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                duplicates+=(\"$i\")\n            fi\n        done\n    done\n\n    for i in \"${duplicates[@]}\"; do\n        for j in \"${intersection[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                result+=(\"$i\")\n            fi\n        done\n    done\n\n    if [[ \"${#result[@]}\" -gt 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -n _list1=$1\n    local -n _list2=$2\n    for i in \"${_list1[@]}\"; do\n        for j in \"${_list2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                return 0\n            fi\n        done\n    done\n    return 1",
    "  local -a list1=($1)\n  local -a list2=($2)\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      if [[ $i == $j ]]; then\n        return 0\n      fi\n    done\n  done\n  return 1",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a common=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        common+=(\"$i\")\n      fi\n    done\n  done\n  if [[ ${#common[@]} -gt 0 ]]; then\n    echo true\n  else\n    echo false\n  fi",
    "    local -a list1=(\"${!1}\")\n    local -a list2=(\"${!2}\")\n    local -a intersection=()\n    local -a unique_list1=()\n    local -a unique_list2=()\n    local element\n    local -i i\n    local -i j\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        element=${list1[$i]}\n        for ((j=0; j<${#list2[@]}; j++)); do\n            if [[ ${list2[$j]} == $element ]]; then\n                intersection+=($element)\n                break\n            fi\n        done\n    done\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        element=${list1[$i]}\n        for ((j=0; j<${#intersection[@]}; j++)); do\n            if [[ ${intersection[$j]} == $element ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq ${#intersection[@]} ]]; then\n            unique_list1+=($element)\n        fi\n    done\n\n    for ((i=0; i<${#list2[@]}; i++)); do\n        element=${list2[$i]}\n        for ((j=0; j<${#intersection[@]}; j++)); do\n            if [[ ${intersection[$j]} == $element ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq ${#intersection[@]} ]]; then\n            unique_list2+=($element)\n        fi\n    done\n\n    if [[ ${#intersection[@]} -gt 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local -a list1=(\"${!1}\")\n    local -a list2=(\"${!2}\")\n    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                return 0\n            fi\n        done\n    done\n    return 1",
    "  local -n a=$1\n  local -n b=$2\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ $i == $j ]]; then\n        return 0\n      fi\n    done\n  done\n  return 1",
    "  local -n a=$1\n  local -n b=$2\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ $i == $j ]]; then\n        echo true\n        return\n      fi\n    done\n  done\n  echo false",
    "    local list1=$1\n    local list2=$2\n    for i in $list1; do\n        for j in $list2; do\n            if [[ $i == $j ]]; then\n                return 0\n            fi\n        done\n    done\n    return 1"
  ]
}
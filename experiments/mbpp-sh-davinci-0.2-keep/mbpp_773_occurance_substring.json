{
  "name": "mbpp_773_occurance_substring",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\n#\n# $1 is a string\n# $2 is a string\noccurance_substring() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    occurance_substring \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python programming, python language\" \"python\") = \"python 0 6\" ]]\n    [[ $(candidate \"python programming,programming language\" \"programming\") = \"programming 7 18\" ]]\n    [[ $(candidate \"python programming,programming language\" \"language\") = \"language 31 39\" ]]\n    [[ $(candidate \"c++ programming, c++ language\" \"python\") = \"None\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  if [[ -z \"$1\" ]] || [[ -z \"$2\" ]]; then\n    echo \"Usage: $0 <string> <substring>\"\n    exit 1\n  fi\n\n  local string=$1\n  local substring=$2\n  local count=0\n  local position=0\n\n  while [[ $string =~ $substring ]]; do\n    count=$((count + 1))\n    position=$((position + ${#BASH_REMATCH[0]}))\n    string=${string:$position}\n  done\n\n  if [[ $count -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$count $position\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local position=0\n  local count=0\n  local result=\"\"\n\n  while [[ $position -lt ${#string} ]]; do\n    if [[ \"${string:$position:${#substring}}\" == \"$substring\" ]]; then\n      count=$((count+1))\n      result=\"$result $position\"\n    fi\n    position=$((position+1))\n  done\n\n  if [[ $count -gt 0 ]]; then\n    echo \"$count$result\"\n  else\n    echo \"None\"\n  fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Occurance: ${BASH_REMATCH[1]}\"\n    echo \"Position: ${BASH_REMATCH[2]}\"\n  else\n    echo \"None\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local position=0\n  local occurance=0\n  while [[ $string =~ $substring ]]; do\n    let occurance++\n    position=${BASH_REMATCH[0]}\n    string=${string#*$substring}\n  done\n  if [[ $occurance -gt 0 ]]; then\n    echo \"$occurance $position\"\n  fi",
    "    local string=\"$1\"\n    local substring=\"$2\"\n    local position=0\n    local occurance=0\n    local result=\"\"\n    while [[ $string =~ $substring ]]; do\n        position=${BASH_REMATCH[0]}\n        occurance=$((occurance + 1))\n        result=\"$result $position\"\n        string=${string#*$substring}\n    done\n    if [[ $occurance -gt 0 ]]; then\n        echo \"$occurance $result\"\n    else\n        echo \"None\"\n    fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Match found at ${BASH_REMATCH[1]} with ${BASH_REMATCH[2]}\"\n  else\n    echo \"No match found\"\n  fi",
    "  if [ -z \"$1\" ] || [ -z \"$2\" ]; then\n    echo \"Usage: $0 <string> <substring>\"\n    return 1\n  fi\n\n  local string=\"$1\"\n  local substring=\"$2\"\n  local substring_length=${#substring}\n  local substring_occurance=0\n  local substring_position=0\n\n  while [ $substring_position -lt ${#string} ]; do\n    local substring_position=$(expr index \"$string\" \"$substring\")\n    if [ $substring_position -gt 0 ]; then\n      substring_occurance=$(expr $substring_occurance + 1)\n      string=${string:$substring_position}\n    else\n      break\n    fi\n  done\n\n  if [ $substring_occurance -gt 0 ]; then\n    echo \"Occurance: $substring_occurance\"\n  else\n    echo \"None\"\n  fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Match found at ${BASH_REMATCH[1]}.\"\n  else\n    echo \"No match found.\"\n  fi",
    "  echo $1 | grep -o -b -n $2",
    "  if [[ -z $1 ]] || [[ -z $2 ]]; then\n    echo \"Usage: $0 <string> <substring>\"\n    exit 1\n  fi\n\n  local string=$1\n  local substring=$2\n  local pos=0\n  local count=0\n\n  while [[ $pos -lt ${#string} ]]; do\n    if [[ ${string:$pos:${#substring}} == $substring ]]; then\n      echo \"Found $substring at position $pos\"\n      (( count++ ))\n    fi\n    (( pos++ ))\n  done\n\n  if [[ $count -eq 0 ]]; then\n    echo \"No match found\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local substring_length=${#substring}\n  local string_length=${#string}\n  local substring_occurance=0\n  local substring_position=0\n  local substring_position_array=()\n  local substring_position_array_index=0\n\n  for (( i=0; i<string_length; i++ )); do\n    if [[ \"${string:$i:$substring_length}\" == \"$substring\" ]]; then\n      substring_occurance=$((substring_occurance+1))\n      substring_position=$((substring_position+i))\n      substring_position_array[$substring_position_array_index]=$((i+1))\n      substring_position_array_index=$((substring_position_array_index+1))\n    fi\n  done\n\n  if [[ $substring_occurance -gt 0 ]]; then\n    echo \"Substring occurance: $substring_occurance\"\n    echo \"Substring position: $substring_position\"\n    echo \"Substring position array: ${substring_position_array[@]}\"\n  else\n    echo \"None\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local position=0\n  local result=\"\"\n\n  while [[ \"$string\" =~ \"$substring\" ]]; do\n    if [[ \"$result\" == \"\" ]]; then\n      result=\"${BASH_REMATCH[0]}\"\n    else\n      result=\"${result}, ${BASH_REMATCH[0]}\"\n    fi\n    position=\"$(( ${#BASH_REMATCH[0]} + $position + 1 ))\"\n    string=\"${string:position}\"\n  done\n\n  if [[ \"$result\" == \"\" ]]; then\n    echo \"None\"\n  else\n    echo \"$result\"\n  fi",
    "  if [ $# -ne 2 ]; then\n    echo \"Usage: $0 <string> <substring>\"\n    return 1\n  fi\n  local str=\"$1\"\n  local substr=\"$2\"\n  local i=0\n  local len=${#str}\n  local sublen=${#substr}\n  local pos=0\n  local count=0\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:$sublen}\" == \"$substr\" ]; then\n      echo \"Found at position $i\"\n      let pos=$i+1\n      let count=$count+1\n      let i=$i+$sublen\n    else\n      let i=$i+1\n    fi\n  done\n  if [ $count -eq 0 ]; then\n    echo \"None\"\n  fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"${BASH_REMATCH[0]} at ${BASH_REMATCH[1]}\"\n  else\n    echo \"None\"\n  fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Match found at ${BASH_REMATCH[1]}.\"\n  else\n    echo \"No match found.\"\n  fi",
    "    if [[ $1 =~ $2 ]]; then\n        echo \"Found at ${BASH_REMATCH[1]}\"\n    else\n        echo \"Not found\"\n    fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Match found at ${BASH_REMATCH[1]}\"\n  else\n    echo \"No match found\"\n  fi",
    "    if [[ $1 =~ $2 ]]; then\n        echo \"Occurance: ${BASH_REMATCH[0]}\"\n        echo \"Position: ${BASH_REMATCH[1]}\"\n    else\n        echo \"None\"\n    fi",
    "  local string=$1\n  local substring=$2\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local count=0\n  local len_string=${#string}\n  local len_substring=${#substring}\n\n  for ((i=0; i<len_string; i++))\n  do\n    if [[ ${string:$i:1} == ${substring:0:1} ]]\n    then\n      count=$((count+1))\n      result=$result$i\n      for ((j=i+1, k=1; j<len_string && k<len_substring; j++, k++))\n      do\n        if [[ ${string:$j:1} != ${substring:$k:1} ]]\n        then\n          count=$((count-1))\n          result=${result:0:${#result}-1}\n          break\n        fi\n      done\n    fi\n  done\n\n  if [[ $count -eq 0 ]]\n  then\n    echo \"None\"\n  else\n    echo $result\n  fi",
    "    local string=$1\n    local substring=$2\n    local position=0\n    local count=0\n    local result=\"\"\n\n    while [ $position -lt ${#string} ]\n    do\n        if [[ ${string:$position:${#substring}} == $substring ]]\n        then\n            count=$((count+1))\n            result=\"$result $position\"\n        fi\n        position=$((position+1))\n    done\n\n    if [ $count -gt 0 ]\n    then\n        echo \"$count $result\"\n    else\n        echo \"None\"\n    fi"
  ]
}
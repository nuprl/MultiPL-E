{
  "name": "mbpp_132_tup_string",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to convert a tuple to a string.\n#\n# $1 is a space-separated list\ntup_string() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_132_tup_string.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    tup_string \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"e x e r c i s e s\") = \"exercises\" ]]\n    [[ $(candidate \"p y t h o n\") = \"python\" ]]\n    [[ $(candidate \"p r o g r a m\") = \"program\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i\"\n    done\n    echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i\"\n  done\n  echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i\"\n  done\n  echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i\"\n  done\n  echo \"$str\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i \"\n    done\n    echo \"$str\"",
    "    local tup_string=\"\"\n    for i in $1; do\n        tup_string=\"$tup_string$i \"\n    done\n    echo $tup_string",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i\"\n    done\n    echo \"$str\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str+=\"$i \"\n    done\n    echo \"$str\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i\"\n    done\n    echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i\"\n  done\n  echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i\"\n  done\n  echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i \"\n  done\n  echo \"$str\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    local i=0\n    for word in $tup; do\n        if [ $i -eq 0 ]; then\n            str=\"$word\"\n        else\n            str=\"$str,$word\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"(\"\n  for i in $tup; do\n    str=\"$str$i,\"\n  done\n  str=\"${str%?})\"\n  echo \"$str\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i \"\n    done\n    echo \"$str\"",
    "  local tup=\"$1\"\n  local str=\"\"\n  for i in $tup; do\n    str=\"$str$i \"\n  done\n  echo \"$str\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i\"\n    done\n    echo \"$str\"",
    "  local tup_string=\"\"\n  for i in $1; do\n    tup_string=\"$tup_string $i\"\n  done\n  echo $tup_string",
    "  local tup_string_RESULT\n  tup_string_RESULT=\"$(echo \"$@\" | sed 's/ /, /g')\"\n  echo \"($tup_string_RESULT)\"",
    "    local tup=\"$1\"\n    local str=\"\"\n    for i in $tup; do\n        str=\"$str$i \"\n    done\n    echo \"$str\""
  ]
}
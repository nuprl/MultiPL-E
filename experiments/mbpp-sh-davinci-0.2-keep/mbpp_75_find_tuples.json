{
  "name": "mbpp_75_find_tuples",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n#\n# $1 is a newline-separated, space-separated list\n# $2 is an integer\nfind_tuples() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    find_tuples \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 24 12\\n7 9 6\\n12 18 21\" \"6\") = \"6 24 12\" ]]\n    [[ $(candidate \"5 25 30\\n4 2 3\\n7 8 9\" \"5\") = \"5 25 30\" ]]\n    [[ $(candidate \"7 9 16\\n8 16 4\\n19 17 18\" \"4\") = \"8 16 4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a tuples\n  IFS=$'\\n' read -r -d '' -a tuples <<< \"$1\"\n  for tuple in \"${tuples[@]}\"; do\n    local -a tuple_values\n    IFS=' ' read -r -a tuple_values <<< \"$tuple\"\n    local all_divisible=1\n    for tuple_value in \"${tuple_values[@]}\"; do\n      if [ \"$(( tuple_value % $2 ))\" -ne 0 ]; then\n        all_divisible=0\n        break\n      fi\n    done\n    if [ \"$all_divisible\" -eq 1 ]; then\n      echo \"$tuple\"\n    fi\n  done",
    "  local input=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local element\n  while read tuple; do\n    while read element; do\n      if [ \"$((element % k))\" -ne 0 ]; then\n        break\n      fi\n    done <<< \"$tuple\"\n    if [ \"$element\" -eq \"$k\" ]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$input\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local -i i\n  local -i j\n  local -i n\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local -i eeee\n  local -i ffff\n  local",
    "  local -a tuples=($1)\n  local k=$2\n  local -a tuple\n  local -i i\n  local -i j\n  local -i n\n  local -i m\n  local -i divisible\n  for ((i=0; i<${#tuples[@]}; i++)); do\n    tuple=(${tuples[$i]})\n    divisible=1\n    for ((j=0; j<${#tuple[@]}; j++)); do\n      if (( ${tuple[$j]} % k != 0 )); then\n        divisible=0\n        break\n      fi\n    done\n    if (( divisible )); then\n      echo \"${tuple[@]}\"\n    fi\n  done",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local tuple\n    local tuple_array\n    local tuple_array_length\n    local tuple_array_index\n    local tuple_array_element\n    local tuple_array_element_modulo\n    local tuple_array_element_modulo_zero\n    local tuple_array_element_modulo_zero_all\n    local tuple_array_element_modulo_zero_all_true\n    local tuple_array_element_modulo_zero_all_false\n    local tuple_array_element_modulo_zero_all_false_all\n    local tuple_array_element_modulo_zero_all_false_all_true\n    local tuple_array_element_modulo_zero_all_false_all_true_all\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true_all\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true_all_false\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true_all_false_all\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true_all_false_all_true\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true_all_false_all_true_all\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true_all_false_all_true_all_false\n    local tuple_array_element_modulo_zero_all_false_all_true_all_false_all_true",
    "  echo \"$1\" | awk -v k=\"$2\" '{\n    for (i = 1; i <= NF; i++) {\n      if ($i % k != 0) {\n        next\n      }\n    }\n    print\n  }'",
    "  local -a tuples\n  local -a tuple\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local -i eee",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local -a tuple_array\n  local -a divisible_array\n  local divisible\n\n  while read -r tuple; do\n    IFS=' ' read -r -a tuple_array <<< \"$tuple\"\n    divisible=1\n    for element in \"${tuple_array[@]}\"; do\n      if [[ $((element % k)) -ne 0 ]]; then\n        divisible=0\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      divisible_array+=(\"$tuple\")\n    fi\n  done <<< \"$list\"\n\n  echo \"${divisible_array[@]}\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n\n  while read -r line; do\n    local tuple=\"$line\"\n    local tuple_length=\"$(echo \"$tuple\" | wc -w)\"\n    local tuple_divisible_by_k=\"$(echo \"$tuple\" | tr ' ' '\\n' | grep -v '^[0-9]*[^0-9]*$' | grep -v '^$' | awk '$1 % '\"$k\"' == 0 { print $1 }' | wc -l)\"\n\n    if [[ \"$tuple_length\" -eq \"$tuple_divisible_by_k\" ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local all_divisible=1\n    for n in $tuple; do\n      if (( n % k != 0 )); then\n        all_divisible=0\n        break\n      fi\n    done\n    if (( all_divisible )); then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local element\n  local divisible\n  while read -r tuple; do\n    divisible=1\n    for element in $tuple; do\n      if (( element % k != 0 )); then\n        divisible=0\n        break\n      fi\n    done\n    if (( divisible )); then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_elements\n  local tuple_element\n  local tuple_is_divisible\n  local tuple_is_divisible_by_k\n  while read -r tuple; do\n    tuple_is_divisible_by_k=1\n    tuple_elements=($tuple)\n    for tuple_element in \"${tuple_elements[@]}\"; do\n      tuple_is_divisible=$((tuple_element % k))\n      if [[ $tuple_is_divisible -ne 0 ]]; then\n        tuple_is_divisible_by_k=0\n        break\n      fi\n    done\n    if [[ $tuple_is_divisible_by_k -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local tuple\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i divisible\n    local -i divisible_tuple\n    local -i divisible_tuple_count\n\n    divisible_tuple_count=0\n    while read tuple; do\n        divisible_tuple=1\n        i=0\n        n=$(echo \"$tuple\" | wc -w)\n        while [ $i -lt $n ]; do\n            j=$(echo \"$tuple\" | cut -d ' ' -f $((i+1)))\n            if [ $((j % k)) -ne 0 ]; then\n                divisible_tuple=0\n                break\n            fi\n            i=$((i+1))\n        done\n        if [ $divisible_tuple -eq 1 ]; then\n            divisible_tuple_count=$((divisible_tuple_count+1))\n        fi\n    done <<< \"$list\"\n    echo \"$divisible_tuple_count\"",
    "  local list=$1\n  local k=$2\n  local tuple\n  local -a tuple_array\n  local -a divisible_tuples\n  local divisible_tuple\n  local -i i\n  local -i j\n  local -i divisible\n  local -i tuple_length\n  local -i tuple_array_length\n  local -i divisible_tuples_length\n  local -i divisible_tuple_length\n\n  while read tuple; do\n    tuple_array=($tuple)\n    tuple_length=${#tuple_array[@]}\n    divisible=1\n    for ((i=0; i<tuple_length; i++)); do\n      if ((${tuple_array[$i]} % k != 0)); then\n        divisible=0\n        break\n      fi\n    done\n    if ((divisible)); then\n      divisible_tuples+=($tuple)\n    fi\n  done <<< \"$list\"\n\n  tuple_array_length=${#divisible_tuples[@]}\n  for ((i=0; i<tuple_array_length; i++)); do\n    divisible_tuple=${divisible_tuples[$i]}\n    divisible_tuple_length=${#divisible_tuple}\n    for ((j=0; j<divisible_tuple_length; j++)); do\n      printf \"%s \" ${divisible_tuple:$j:1}\n    done\n    printf \"\\n\"\n  done",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local -a tuple_arr\n    IFS=\" \" read -r -a tuple_arr <<< \"$tuple\"\n    local divisible=true\n    for i in \"${tuple_arr[@]}\"; do\n      if [[ $((i % k)) -ne 0 ]]; then\n        divisible=false\n        break\n      fi\n    done\n    if \"$divisible\"; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local tuple\n    for tuple in $list; do\n        local divisible=1\n        for n in $tuple; do\n            if (( n % k != 0 )); then\n                divisible=0\n                break\n            fi\n        done\n        if (( divisible )); then\n            echo \"$tuple\"\n        fi\n    done",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_array\n  local tuple_array_length\n  local i\n  local tuple_is_divisible\n  local tuple_is_divisible_by_k\n\n  while read -r tuple; do\n    tuple_array=($tuple)\n    tuple_array_length=${#tuple_array[@]}\n    tuple_is_divisible=1\n    for ((i=0; i<tuple_array_length; i++)); do\n      if [[ $((tuple_array[i] % k)) -ne 0 ]]; then\n        tuple_is_divisible=0\n        break\n      fi\n    done\n    if [[ $tuple_is_divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local -a tuple_array\n  local -a tuple_array_filtered\n  local tuple_filtered\n  local -a tuple_array_filtered_joined\n  local tuple_filtered_joined\n  local -a tuple_array_filtered_joined_filtered\n  local tuple_filtered_joined_filtered\n\n  while read -r tuple; do\n    IFS=' ' read -r -a tuple_array <<< \"$tuple\"\n    tuple_array_filtered=($(echo ${tuple_array[@]} | tr ' ' '\\n' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9]' | grep -v '[^0-9",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local -a tuple_array\n  local -i i\n  local -i divisible\n  local -i tuple_length\n  local -i tuple_index\n  local -i tuple_index_max\n  local -i tuple_index_min\n  local -i tuple_index_range\n  local -i tuple_index_range_max\n  local -i tuple_index_range_min\n  local -i tuple_index_range_range\n  local -i tuple_index_range_range_max\n  local -i tuple_index_range_range_min\n  local -i tuple_index_range_range_range\n  local -i tuple_index_range_range_range_max\n  local -i tuple_index_range_range_range_min\n  local -i tuple_index_range_range_range_range\n  local -i tuple_index_range_range_range_range_max\n  local -i tuple_index_range_range_range_range_min\n  local -i tuple_index_range_range_range_range_range\n  local -i tuple_index_range_range_range_range_range_max\n  local -i tuple_index_range_range_range_range_range_min\n  local -i tuple_index_range_range_range_range_range_range\n  local -i tuple_index_range_range_range_range_range_range_max\n  local -i tuple_index_range_range_range_range_range_range_min\n  local -i tuple_index_range_range_range_range_range_range_range\n  local -i tuple_index_range_range_range_range_range_range_range_max\n  local -i tuple_index_range_range_range_range_range_range_range_min\n  local -i tuple_index_range_range_range_range_range_range_range_range\n  local -i tuple_index_range_range_range_range_range_range_range_range_max\n  local -i tuple_index_range_range_range_range_range_range_",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local -a tuples\n  local tuple\n  local -i i\n  local -i j\n  local -i n\n  local -i m\n  local -i divisible\n  local -i divisor\n  local -i divisor_count\n  local -i tuple_count\n\n  # Split the list into tuples\n  IFS=$'\\n' read -r -a tuples <<< \"$list\"\n\n  # Iterate over the tuples\n  for ((i=0; i<${#tuples[@]}; i++)); do\n    tuple=\"${tuples[$i]}\"\n    divisible=1\n    divisor_count=0\n    tuple_count=0\n\n    # Iterate over the tuple elements\n    for ((j=0; j<${#tuple}; j++)); do\n      if [[ \"${tuple:$j:1}\" == \" \" ]]; then\n        ((divisor_count++))\n        continue\n      fi\n\n      # If the element is not a space, it is a number\n      ((tuple_count++))\n\n      # If the element is not divisible by k, the tuple is not divisible by k\n      if ((tuple_count % k != 0)); then\n        divisible=0\n        break\n      fi\n    done\n\n    # If the tuple is divisible by k, print it\n    if ((divisible == 1)); then\n      echo \"$tuple\"\n    fi\n  done"
  ]
}
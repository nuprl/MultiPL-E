{
  "name": "mbpp_63_max_difference",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum difference between available pairs in the given tuple list.\n#\n# $1 is a newline-separated, space-separated list\nmax_difference() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 5\\n1 7\\n10 3\\n1 2\") = \"7\" ]]\n    [[ $(candidate \"4 6\\n2 17\\n9 13\\n11 12\") = \"15\" ]]\n    [[ $(candidate \"12 35\\n21 27\\n13 23\\n41 22\") = \"23\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a list=($1)\n    local max_diff=0\n    local diff=0\n    local i=0\n    local j=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            diff=$((list[j] - list[i]))\n            if ((diff > max_diff)); then\n                max_diff=$diff\n            fi\n        done\n    done\n    echo $max_diff",
    "  local -a list\n  local -i i j\n  local -i max_difference=0\n  local -i difference\n  local -i max_value=0\n  local -i min_value=0\n\n  IFS=$'\\n' read -r -d '' -a list < <(printf '%s\\0' \"$1\")\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    IFS=' ' read -r -a tuple <<< \"${list[$i]}\"\n    for ((j=0; j<${#tuple[@]}; j++)); do\n      if (( tuple[j] > max_value )); then\n        max_value=${tuple[j]}\n      fi\n      if (( tuple[j] < min_value )); then\n        min_value=${tuple[j]}\n      fi\n    done\n  done\n\n  difference=$(( max_value - min_value ))\n  if (( difference > max_difference )); then\n    max_difference=$difference\n  fi\n\n  echo $max_difference",
    "  local -a list\n  local -i i j\n  local -i max_difference=0\n  local -i difference\n  local -i first second\n  local -i first_index second_index\n\n  # Read the list into an array\n  while read -r line; do\n    list+=($line)\n  done <<< \"$1\"\n\n  # Iterate through the list\n  for ((i=0; i<${#list[@]}; i++)); do\n    first_index=$i\n    first=${list[$i]}\n\n    # Iterate through the list again\n    for ((j=i+1; j<${#list[@]}; j++)); do\n      second_index=$j\n      second=${list[$j]}\n\n      # Calculate the difference between the two numbers\n      difference=$((second - first))\n\n      # If the difference is greater than the current max, update the max\n      if ((difference > max_difference)); then\n        max_difference=$difference\n      fi\n    done\n  done\n\n  echo $max_difference",
    "  local -a list\n  local -i i j\n  local -i max_difference=0\n  local -i current_difference\n\n  IFS=$'\\n' read -d '' -r -a list < <(printf '%s\\n' \"$1\")\n  for ((i=0; i<${#list[@]}; i++)); do\n    IFS=$' ' read -r -a values <<< \"${list[i]}\"\n    for ((j=0; j<${#values[@]}; j++)); do\n      for ((k=j+1; k<${#values[@]}; k++)); do\n        current_difference=$((values[j] - values[k]))\n        if ((current_difference < 0)); then\n          current_difference=$((-current_difference))\n        fi\n        if ((current_difference > max_difference)); then\n          max_difference=$current_difference\n        fi\n      done\n    done\n  done\n\n  echo \"$max_difference\"",
    "  local -a arr=($(echo \"$1\" | tr ' ' '\\n' | sort -n))\n  local max=${arr[-1]}\n  local min=${arr[0]}\n  echo $((max - min))",
    "    local -a list\n    local -i i j\n    local -i max_difference=0\n    local -i current_difference\n\n    IFS=$'\\n' read -d '' -ra list <<< \"$1\"\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            current_difference=$((${list[i]} - ${list[j]}))\n            if [[ $current_difference -lt 0 ]]; then\n                current_difference=$((-$current_difference))\n            fi\n            if [[ $current_difference -gt $max_difference ]]; then\n                max_difference=$current_difference\n            fi\n        done\n    done\n\n    echo $max_difference",
    "  local -a list\n  local -i i j\n  local -i max_difference=0\n  local -i current_difference=0\n\n  IFS=$'\\n' read -d '' -ra list <<< \"$1\"\n  for ((i=0; i<${#list[@]}; i++)); do\n    IFS=' ' read -ra list[i] <<< \"${list[i]}\"\n    for ((j=0; j<${#list[i]}; j++)); do\n      ((list[i][j] = list[i][j] * list[i][j]))\n    done\n  done\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    for ((j=0; j<${#list[i]}; j++)); do\n      for ((k=0; k<${#list[i]}; k++)); do\n        if ((j != k)); then\n          ((current_difference = list[i][j] - list[i][k]))\n          ((current_difference = current_difference < 0 ? -current_difference : current_difference))\n          ((max_difference = current_difference > max_difference ? current_difference : max_difference))\n        fi\n      done\n    done\n  done\n\n  echo $max_difference",
    "  local max_diff=0\n  local max_diff_pair=()\n  local tuple\n  local tuple_a\n  local tuple_b\n  local diff\n  while read tuple; do\n    tuple_a=(${tuple})\n    while read tuple; do\n      tuple_b=(${tuple})\n      diff=$((${tuple_b[0]} - ${tuple_a[0]}))\n      if [[ ${diff} -gt ${max_diff} ]]; then\n        max_diff=${diff}\n        max_diff_pair=(${tuple_a[0]} ${tuple_b[0]})\n      fi\n    done <<< \"$1\"\n  done <<< \"$1\"\n  echo \"${max_diff_pair[@]}\"",
    "    local -a list=($(echo \"$1\" | tr ' ' '\\n' | sort -n))\n    local -i max=0\n    local -i i=0\n    local -i j=1\n    local -i diff=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            diff=${list[j]}-${list[i]}\n            if (( diff > max )); then\n                max=$diff\n            fi\n        done\n    done\n    echo $max",
    "  local -a list=($(echo \"$1\" | tr ' ' '\\n' | sort -n))\n  echo \"${list[@]}\"\n  echo \"${list[-1]} - ${list[0]}\" | bc",
    "    local -a list\n    local -i i j\n    local -i max_difference=0\n    local -i difference\n\n    # Convert the list to an array\n    IFS=$'\\n' read -d '' -ra list <<< \"$1\"\n\n    # Loop through the list and find the maximum difference\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            difference=$((${list[$i]} - ${list[$j]}))\n            if ((difference < 0)); then\n                difference=$((-difference))\n            fi\n            if ((difference > max_difference)); then\n                max_difference=$difference\n            fi\n        done\n    done\n\n    echo $max_difference",
    "  local -a list=($1)\n  local max=${list[0]}\n  local min=${list[0]}\n  for i in \"${list[@]}\"; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n    if [[ $i -lt $min ]]; then\n      min=$i\n    fi\n  done\n  echo $((max - min))",
    "  local -a list\n  IFS=$'\\n' read -d '' -r -a list < <(printf '%s\\n' \"$1\")\n  local -a diffs\n  for ((i=0; i<${#list[@]}; i++)); do\n    local -a tuple\n    IFS=' ' read -r -a tuple <<< \"${list[i]}\"\n    for ((j=0; j<${#tuple[@]}; j++)); do\n      for ((k=j+1; k<${#tuple[@]}; k++)); do\n        diffs+=(\"$((tuple[j] - tuple[k]))\")\n      done\n    done\n  done\n  printf '%s\\n' \"${diffs[@]}\" | sort -nr | head -n 1",
    "  local -a list\n  IFS=$'\\n' read -d '' -r -a list < <(echo \"$1\")\n  local max_diff=0\n  for ((i=0; i<${#list[@]}; i++)); do\n    local -a tuple\n    IFS=' ' read -r -a tuple <<< \"${list[i]}\"\n    local diff=$((tuple[1] - tuple[0]))\n    if ((diff > max_diff)); then\n      max_diff=$diff\n    fi\n  done\n  echo $max_diff",
    "  local -a list=($1)\n  local max=${list[0]}\n  local min=${list[0]}\n  for i in \"${list[@]}\"; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n    if [[ $i -lt $min ]]; then\n      min=$i\n    fi\n  done\n  echo $((max - min))",
    "  local -a list\n  IFS=$'\\n' read -d '' -r -a list < <(echo \"$1\")\n  local -a numbers\n  for i in \"${list[@]}\"; do\n    IFS=' ' read -r -a numbers <<< \"$i\"\n    local max=0\n    local min=0\n    for j in \"${numbers[@]}\"; do\n      if [[ $j -gt $max ]]; then\n        max=$j\n      fi\n      if [[ $j -lt $min ]]; then\n        min=$j\n      fi\n    done\n    echo $((max - min))\n  done",
    "    local -a list\n    local -i i\n    local -i max_difference=0\n    local -i current_difference\n    local -i current_value\n    local -i previous_value\n\n    # Convert the input to an array\n    IFS=$'\\n' read -d '' -r -a list < <(printf '%s\\n' \"$1\")\n\n    # Loop through the array\n    for ((i=0; i<${#list[@]}; i++)); do\n        # Split the current value into an array\n        IFS=' ' read -r -a current_value <<< \"${list[i]}\"\n\n        # If this is the first value, set the previous value\n        if [[ $i -eq 0 ]]; then\n            previous_value=${current_value[0]}\n        fi\n\n        # Calculate the difference between the current value and the previous value\n        current_difference=$((current_value[0] - previous_value))\n\n        # If the current difference is greater than the max difference, set the max difference\n        if [[ $current_difference -gt $max_difference ]]; then\n            max_difference=$current_difference\n        fi\n\n        # Set the previous value\n        previous_value=${current_value[0]}\n    done\n\n    # Print the max difference\n    echo $max_difference",
    "  local -a list\n  local -i i\n  local -i j\n  local -i max_difference\n  local -i difference\n  local -i max_value\n  local -i min_value\n  local -i value\n\n  # Read the list into an array\n  IFS=$'\\n' read -d '' -r -a list < <(printf '%s\\n' \"$1\")\n\n  # Set the initial values\n  max_difference=0\n  max_value=${list[0]}\n  min_value=${list[0]}\n\n  # Loop through the list\n  for ((i=0; i<${#list[@]}; i++)); do\n    value=${list[i]}\n\n    # Update the max and min values\n    if ((value > max_value)); then\n      max_value=$value\n    fi\n    if ((value < min_value)); then\n      min_value=$value\n    fi\n\n    # Update the max difference\n    difference=$((max_value - min_value))\n    if ((difference > max_difference)); then\n      max_difference=$difference\n    fi\n  done\n\n  # Print the max difference\n  echo $max_difference",
    "    local -a list\n    local -i i j\n    local -i max_difference=0\n    local -i difference\n    local -i max_value=0\n    local -i min_value=0\n\n    # Read the list into an array\n    IFS=$'\\n' read -d '' -r -a list < <(printf '%s\\n' \"$1\")\n\n    # Find the maximum difference\n    for ((i=0; i<${#list[@]}; i++)); do\n        IFS=' ' read -r -a tuple <<< \"${list[i]}\"\n        for ((j=0; j<${#tuple[@]}; j++)); do\n            if (( tuple[j] > max_value )); then\n                max_value=${tuple[j]}\n            fi\n            if (( tuple[j] < min_value )); then\n                min_value=${tuple[j]}\n            fi\n        done\n        difference=$(( max_value - min_value ))\n        if (( difference > max_difference )); then\n            max_difference=$difference\n        fi\n    done\n\n    echo $max_difference",
    "  local list=$1\n  local max_diff=0\n  local max_diff_pair=\n  local i=0\n  local j=0\n  local diff=0\n  local pair=\n  for i in $(echo \"$list\" | tr ' ' '\\n' | sort -n); do\n    for j in $(echo \"$list\" | tr ' ' '\\n' | sort -n); do\n      diff=$(( $i - $j ))\n      if [[ $diff -lt 0 ]]; then\n        diff=$(( $diff * -1 ))\n      fi\n      if [[ $diff -gt $max_diff ]]; then\n        max_diff=$diff\n        max_diff_pair=\"$i $j\"\n      fi\n    done\n  done\n  echo \"$max_diff_pair\""
  ]
}
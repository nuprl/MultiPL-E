{
  "name": "mbpp_463_max_subarray_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum product subarray of the given array.\n#\n# $1 is a space-separated list\nmax_subarray_product() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    max_subarray_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 0 7 -8 -2\") = \"112\" ]]\n    [[ $(candidate \"6 -3 -10 0 2\") = \"180\" ]]\n    [[ $(candidate \"-2 -40 0 -2 -3\") = \"80\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a nums=($1)\n  local max_product=${nums[0]}\n  local min_product=${nums[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#nums[@]}; i++)); do\n    local num=${nums[$i]}\n    local max_product_candidate=$((max_product * num))\n    local min_product_candidate=$((min_product * num))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > num ? max_product : num))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < num ? min_product : num))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a array\n  local max_product=0\n  local product=0\n  local i=0\n  local j=0\n  local k=0\n  local n=0\n\n  # Convert space-separated list to array\n  array=($1)\n  n=${#array[@]}\n\n  # Find the maximum product subarray\n  for ((i=0; i<n; i++)); do\n    product=${array[i]}\n    for ((j=i+1; j<n; j++)); do\n      product=$((product * array[j]))\n      if [[ $product -gt $max_product ]]; then\n        max_product=$product\n      fi\n    done\n  done\n\n  echo $max_product",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$((${arr[i]}>0 ? $((tmp_max*${arr[i]})) : $((tmp_min*${arr[i]}))))\n    min=$((${arr[i]}>0 ? $((tmp_min*${arr[i]})) : $((tmp_max*${arr[i]}))))\n    max=$(($max>${arr[i]} ? $max : ${arr[i]}))\n    min=$(($min<${arr[i]} ? $min : ${arr[i]}))\n    result=$(($result>$max ? $result : $max))\n  done\n  echo $result",
    "    local -a arr=($1)\n    local -a max_arr=(${arr[0]})\n    local -a min_arr=(${arr[0]})\n    local max_product=${arr[0]}\n    local i=1\n    while [ $i -lt ${#arr[@]} ]; do\n        local max_tmp=$(( ${max_arr[$((i-1))]} * ${arr[$i]} ))\n        local min_tmp=$(( ${min_arr[$((i-1))]} * ${arr[$i]} ))\n        max_arr[$i]=$(max $max_tmp $min_tmp ${arr[$i]})\n        min_arr[$i]=$(min $max_tmp $min_tmp ${arr[$i]})\n        max_product=$(max $max_product ${max_arr[$i]})\n        i=$((i+1))\n    done\n    echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max=$max_product\n    local temp_min=$min_product\n\n    max_product=$((curr > curr*temp_max ? curr : curr*temp_max))\n    min_product=$((curr < curr*temp_min ? curr : curr*temp_min))\n\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=1\n  local min_product=1\n  local max_so_far=1\n  local i\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -gt 0 ]]; then\n      max_product=$((max_product * arr[i]))\n      min_product=$((min_product * arr[i]))\n    elif [[ ${arr[i]} -lt 0 ]]; then\n      local tmp=$max_product\n      max_product=$((min_product * arr[i]))\n      min_product=$((tmp * arr[i]))\n    else\n      max_product=1\n      min_product=1\n    fi\n\n    if [[ $max_so_far -lt $max_product ]]; then\n      max_so_far=$max_product\n    fi\n\n    if [[ $max_product -lt 1 ]]; then\n      max_product=1\n    fi\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local temp=$max\n    max=$(max $curr $((curr*max)) $((curr*min)))\n    min=$(min $curr $((curr*temp)) $((curr*min)))\n    result=$(max $result $max)\n  done\n  echo $result",
    "  local -a arr=(\"$@\")\n  local max_product=0\n  local max_ending_here=1\n  local min_ending_here=1\n\n  for i in \"${arr[@]}\"; do\n    if (( i > 0 )); then\n      max_ending_here=$(( max_ending_here * i ))\n      min_ending_here=$(( min_ending_here * i ))\n    else\n      local temp=$max_ending_here\n      max_ending_here=$(( min_ending_here * i ))\n      min_ending_here=$(( temp * i ))\n    fi\n\n    if (( max_ending_here > max_product )); then\n      max_product=$max_ending_here\n    fi\n\n    if (( max_ending_here < 1 )); then\n      max_ending_here=1\n    fi\n\n    if (( min_ending_here < 1 )); then\n      min_ending_here=1\n    fi\n  done\n\n  echo \"$max_product\"",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local max_product_candidate=$((max_product*curr))\n        local min_product_candidate=$((min_product*curr))\n        max_product=$((max_product_candidate>min_product_candidate?max_product_candidate:min_product_candidate))\n        max_product=$((max_product>curr?max_product:curr))\n        min_product=$((max_product_candidate<min_product_candidate?max_product_candidate:min_product_candidate))\n        min_product=$((min_product<curr?min_product:curr))\n        max_so_far=$((max_so_far>max_product?max_so_far:max_product))\n    done\n    echo $max_so_far",
    "  local -a array=()\n  local -i i=0\n  local -i j=0\n  local -i max_product=0\n  local -i product=0\n  local -i tmp=0\n  local -i tmp_product=0\n\n  for i in $1; do\n    array+=($i)\n  done\n\n  for ((i=0; i<${#array[@]}; i++)); do\n    product=1\n    for ((j=i; j<${#array[@]}; j++)); do\n      product=$((product * array[j]))\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n\n  echo $max_product",
    "  local array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n  for (( i=1; i<${#array[@]}; i++ )); do\n    local current=${array[$i]}\n    local max_product_candidate=$(( max_product * current ))\n    local min_product_candidate=$(( min_product * current ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > current ? max_product : current ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < current ? min_product : current ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n  echo $max_so_far",
    "    local -a arr\n    local i j k\n    local max_product\n    local product\n    local -i n\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    n=${#arr[@]}\n    max_product=${arr[0]}\n\n    for ((i=0; i<n; i++)); do\n        product=${arr[i]}\n        if ((product > max_product)); then\n            max_product=$product\n        fi\n        for ((j=i+1; j<n; j++)); do\n            product=$((product * arr[j]))\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n\n    echo $max_product",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n\n  for ((i = 1; i < ${#array[@]}; i++)); do\n    local current=${array[i]}\n    local temp_max=$max_product\n    local temp_min=$min_product\n\n    max_product=$(max $current $((current * temp_max)) $((current * temp_min)))\n    min_product=$(min $current $((current * temp_max)) $((current * temp_min)))\n\n    max_so_far=$(max $max_so_far $max_product)\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[$i]}\n    local tmp=$max\n    max=$(max $max $(max $curr $(($min * $curr))))\n    min=$(min $min $(min $curr $(($tmp * $curr))))\n    max_so_far=$(max $max_so_far $max)\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$((${arr[$i]} * $tmp_max > ${arr[$i]} * $tmp_min ? ${arr[$i]} * $tmp_max : ${arr[$i]} * $tmp_min))\n    max=$(($max > ${arr[$i]} ? $max : ${arr[$i]}))\n    min=$((${arr[$i]} * $tmp_max < ${arr[$i]} * $tmp_min ? ${arr[$i]} * $tmp_max : ${arr[$i]} * $tmp_min))\n    min=$(($min < ${arr[$i]} ? $min : ${arr[$i]}))\n    result=$(($result > $max ? $result : $max))\n  done\n\n  echo $result",
    "  local -a arr=(\"$@\")\n  local max_product=0\n  local min_product=0\n  local max_so_far=0\n  local min_so_far=0\n  local i=0\n  local n=${#arr[@]}\n  local tmp=0\n  for ((i=0; i<n; i++)); do\n    if [[ ${arr[$i]} -gt 0 ]]; then\n      max_so_far=$((max_so_far * arr[i]))\n      min_so_far=$((min_so_far * arr[i]))\n    elif [[ ${arr[$i]} -lt 0 ]]; then\n      tmp=$max_so_far\n      max_so_far=$((min_so_far * arr[i]))\n      min_so_far=$((tmp * arr[i]))\n    else\n      max_so_far=0\n      min_so_far=0\n    fi\n    if [[ $max_so_far -gt $max_product ]]; then\n      max_product=$max_so_far\n    fi\n    if [[ $min_so_far -lt $min_product ]]; then\n      min_product=$min_so_far\n    fi\n  done\n  echo $max_product",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -lt 0 ]]; then\n      local tmp=$max\n      max=$min\n      min=$tmp\n    fi\n    max=$(( ${arr[i]} > ${arr[i]}*$max ? ${arr[i]} : ${arr[i]}*$max ))\n    min=$(( ${arr[i]} < ${arr[i]}*$min ? ${arr[i]} : ${arr[i]}*$min ))\n    result=$(( $result > $max ? $result : $max ))\n  done\n\n  echo $result",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local product_1=$((max_product * arr[i]))\n    local product_2=$((min_product * arr[i]))\n    max_product=$((product_1 > product_2 ? product_1 : product_2))\n    max_product=$((max_product > arr[i] ? max_product : arr[i]))\n    min_product=$((product_1 < product_2 ? product_1 : product_2))\n    min_product=$((min_product < arr[i] ? min_product : arr[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max=$max_product\n    local temp_min=$min_product\n    max_product=$((curr > curr * temp_max ? curr : curr * temp_max))\n    min_product=$((curr < curr * temp_min ? curr : curr * temp_min))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=${array[0]}\n\n  for ((i = 1; i < ${#array[@]}; i++)); do\n    local curr=${array[i]}\n    local temp_max_product=$max_product\n    local temp_min_product=$min_product\n\n    max_product=$(max $curr $((curr * temp_max_product)) $((curr * temp_min_product)))\n    min_product=$(min $curr $((curr * temp_max_product)) $((curr * temp_min_product)))\n    max_so_far=$(max $max_so_far $max_product)\n  done\n\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local -i max_product=0\n  local -i product=1\n  local -i i=0\n  local -i j=0\n\n  while [[ $i -lt ${#arr[@]} ]]; do\n    product=1\n    j=$i\n    while [[ $j -lt ${#arr[@]} ]]; do\n      product=$(( product * arr[j] ))\n      if [[ $product -gt $max_product ]]; then\n        max_product=$product\n      fi\n      j=$(( j + 1 ))\n    done\n    i=$(( i + 1 ))\n  done\n\n  echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local tmp_max=$max_product\n    local tmp_min=$min_product\n    max_product=$((curr > 0 ? curr * tmp_max : curr * tmp_min))\n    min_product=$((curr > 0 ? curr * tmp_min : curr * tmp_max))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local max_product_ending_here=${arr[0]}\n    local min_product_ending_here=${arr[0]}\n    local max_product_so_far=$max_product\n    local min_product_so_far=$max_product\n    local i\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local current=${arr[$i]}\n        if ((current > 0)); then\n            max_product_ending_here=$((max_product_ending_here * current))\n            min_product_ending_here=$((min_product_ending_here * current))\n        elif ((current < 0)); then\n            local temp=$max_product_ending_here\n            max_product_ending_here=$((min_product_ending_here * current))\n            min_product_ending_here=$((temp * current))\n        else\n            max_product_ending_here=0\n            min_product_ending_here=0\n        fi\n        if ((max_product_ending_here > max_product_so_far)); then\n            max_product_so_far=$max_product_ending_here\n        fi\n        if ((min_product_ending_here < min_product_so_far)); then\n            min_product_so_far=$min_product_ending_here\n        fi\n    done\n    echo $max_product_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local temp=${arr[i]}\n    if [[ $temp -lt 0 ]]; then\n      temp=$((min * temp))\n      min=${arr[i]}\n    else\n      temp=$((max * temp))\n      max=${arr[i]}\n    fi\n    if [[ $temp -gt $result ]]; then\n      result=$temp\n    fi\n  done\n  echo $result",
    "    local -a arr\n    local i j k\n    local max_product=0\n    local product\n\n    # Convert the space-separated list to an array\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    # Iterate over the array\n    for ((i=0; i<${#arr[@]}; i++)); do\n        # Iterate over the subarrays starting at index i\n        for ((j=i; j<${#arr[@]}; j++)); do\n            # Calculate the product of the subarray\n            product=1\n            for ((k=i; k<=j; k++)); do\n                product=$((product*arr[k]))\n            done\n\n            # Update the max product if necessary\n            if ((product > max_product)); then\n                max_product=$product\n            fi\n        done\n    done\n\n    echo $max_product",
    "    local -a arr=($1)\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local max_so_far=$max\n    local i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local cur=${arr[i]}\n        local tmp=$max\n        max=$((max > 0 ? max : 1))\n        max=$((max * cur))\n        min=$((min < 0 ? min : 1))\n        min=$((min * cur))\n        max_so_far=$((max_so_far > max ? max_so_far : max))\n        max=$((max > min ? max : min))\n        min=$((tmp < min ? tmp : min))\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local tmp=$max\n    max=$((max > 0 ? max : 1))\n    max=$((max * curr))\n    min=$((min < 0 ? min : 1))\n    min=$((min * curr))\n    max=$((max > min ? max : min))\n    min=$((max < min ? max : min))\n    max_so_far=$((max_so_far > max ? max_so_far : max))\n  done\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=1\n  local min_product=1\n  local max_so_far=1\n\n  for i in \"${arr[@]}\"; do\n    if (( i > 0 )); then\n      max_product=$(( max_product * i ))\n      min_product=$(( min(min_product * i, 1) ))\n    elif (( i == 0 )); then\n      max_product=1\n      min_product=1\n    else\n      temp=$max_product\n      max_product=$(( min_product * i ))\n      min_product=$(( temp * i ))\n    fi\n\n    max_so_far=$(( max(max_so_far, max_product) ))\n  done\n\n  echo \"$max_so_far\"",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  local tmp\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    tmp=$max\n    max=$(max $((max*arr[i])) $((min*arr[i])) ${arr[i]})\n    min=$(min $((tmp*arr[i])) $((min*arr[i])) ${arr[i]})\n    result=$(max $result $max)\n  done\n\n  echo $result",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#array[@]}; i++)); do\n    local current=${array[i]}\n    local max_product_candidate=$((max_product * current))\n    local min_product_candidate=$((min_product * current))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > current ? max_product : current))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < current ? min_product : current))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local max_so_far=$max\n    local i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        if [[ ${arr[i]} -gt 0 ]]; then\n            max=$((max * arr[i]))\n            min=$((min * arr[i]))\n        else\n            max=$((min * arr[i]))\n            min=$((max * arr[i]))\n        fi\n\n        if [[ $max -gt $max_so_far ]]; then\n            max_so_far=$max\n        fi\n\n        if [[ $max -lt 0 ]]; then\n            max=0\n        fi\n\n        if [[ $min -gt 0 ]]; then\n            min=0\n        fi\n    done\n\n    echo $max_so_far",
    "    local -a arr=($1)\n    local max_product=0\n    local max_ending_here=1\n    local min_ending_here=1\n    local i\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n            max_ending_here=$((max_ending_here * arr[$i]))\n            min_ending_here=$((min_ending_here * arr[$i]))\n        elif [[ ${arr[$i]} -lt 0 ]]; then\n            local temp=$max_ending_here\n            max_ending_here=$((min_ending_here * arr[$i]))\n            min_ending_here=$((temp * arr[$i]))\n        else\n            max_ending_here=1\n            min_ending_here=1\n        fi\n\n        if [[ $max_ending_here -gt $max_product ]]; then\n            max_product=$max_ending_here\n        fi\n    done\n\n    echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local tmp=$max\n    max=$((max > 0 ? max : 1))\n    max=$((max * curr))\n    min=$((min < 0 ? min : 1))\n    min=$((min * curr))\n    max=$((max > min ? max : min))\n    min=$((max < min ? max : min))\n    max_so_far=$((max_so_far > max ? max_so_far : max))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$(echo \"$tmp_max * ${arr[i]} ${tmp_min} * ${arr[i]} ${arr[i]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    min=$(echo \"$tmp_max * ${arr[i]} ${tmp_min} * ${arr[i]} ${arr[i]}\" | tr ' ' '\\n' | sort -n | head -n1)\n    result=$(echo \"$result $max\" | tr ' ' '\\n' | sort -nr | head -n1)\n  done\n\n  echo $result",
    "  local -a a=($1)\n  local max=${a[0]}\n  local min=${a[0]}\n  local max_so_far=$max\n  local i\n\n  for ((i=1; i<${#a[@]}; i++)); do\n    if ((a[i] < 0)); then\n      local tmp=$max\n      max=$min\n      min=$tmp\n    fi\n    max=$((a[i] > a[i]*max ? a[i] : a[i]*max))\n    min=$((a[i] < a[i]*min ? a[i] : a[i]*min))\n    max_so_far=$((max > max_so_far ? max : max_so_far))\n  done\n\n  echo $max_so_far",
    "  local -a arr=()\n  local -a max_product=()\n  local -a min_product=()\n  local -a max_product_so_far=()\n  local -a min_product_so_far=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i max_product_so_far=0\n  local -i min_product_so_far=0\n  local -i max_product=0\n  local -i min_product=0\n  local -i result=0\n  local -i temp=0\n\n  arr=($1)\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((i == 0)); then\n      max_product_so_far=arr[i]\n      min_product_so_far=arr[i]\n      result=arr[i]\n    else\n      max_product=max_product_so_far\n      min_product=min_product_so_far\n      max_product_so_far=max_product * arr[i]\n      min_product_so_far=min_product * arr[i]\n      max_product_so_far=max_product_so_far < min_product_so_far ? min_product_so_far : max_product_so_far\n      min_product_so_far=max_product * arr[i]\n      min_product_so_far=min_product_so_far < max_product_so_far ? max_product_so_far : min_product_so_far\n      result=result < max_product_so_far ? max_product_so_far : result\n    fi\n  done\n  echo $result",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#array[@]}; i++)); do\n    local curr_product=$((array[i] * max_product))\n    local curr_min_product=$((array[i] * min_product))\n    max_product=$((curr_product > curr_min_product ? curr_product : curr_min_product))\n    max_product=$((max_product > array[i] ? max_product : array[i]))\n    min_product=$((curr_product < curr_min_product ? curr_product : curr_min_product))\n    min_product=$((min_product < array[i] ? min_product : array[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local max_product=1\n  local min_product=1\n  local max_so_far=1\n  local arr=($1)\n  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((arr[i] > 0)); then\n      max_product=$((max_product * arr[i]))\n      min_product=$((min_product * arr[i]))\n    elif ((arr[i] == 0)); then\n      max_product=1\n      min_product=1\n    else\n      local tmp=$max_product\n      max_product=$((min_product * arr[i]))\n      min_product=$((tmp * arr[i]))\n    fi\n    if ((max_product > max_so_far)); then\n      max_so_far=$max_product\n    fi\n    if ((max_product < 1)); then\n      max_product=1\n    fi\n    if ((min_product > 1)); then\n      min_product=1\n    fi\n  done\n  echo $max_so_far",
    "    local -a nums=($1)\n    local max_product=${nums[0]}\n    local min_product=${nums[0]}\n    local max_so_far=$max_product\n\n    for (( i=1; i<${#nums[@]}; i++ )); do\n        local num=${nums[$i]}\n        local max_product_candidate=$(( num * max_product ))\n        local min_product_candidate=$(( num * min_product ))\n        max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n        max_product=$(( max_product > num ? max_product : num ))\n        min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n        min_product=$(( min_product < num ? min_product : num ))\n        max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n    done\n\n    echo $max_so_far",
    "    local arr=($1)\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local max_so_far=$max\n    local i\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local temp_max=$max\n        max=$(echo -e \"$max\\n$min*$curr\" | sort -n | tail -n1)\n        min=$(echo -e \"$min\\n$temp_max*$curr\" | sort -n | head -n1)\n        max_so_far=$(echo -e \"$max_so_far\\n$max\" | sort -n | tail -n1)\n    done\n    echo $max_so_far",
    "  local -a arr=()\n  local -i i=0\n  local -i j=0\n  local -i max_product=0\n  local -i product=0\n  local -i n=0\n  local -i max_n=0\n  local -i min_n=0\n  local -i max_n_tmp=0\n  local -i min_n_tmp=0\n  local -i max_n_tmp_2=0\n  local -i min_n_tmp_2=0\n  local -i max_n_tmp_3=0\n  local -i min_n_tmp_3=0\n  local -i max_n_tmp_4=0\n  local -i min_n_tmp_4=0\n  local -i max_n_tmp_5=0\n  local -i min_n_tmp_5=0\n  local -i max_n_tmp_6=0\n  local -i min_n_tmp_6=0\n  local -i max_n_tmp_7=0\n  local -i min_n_tmp_7=0\n  local -i max_n_tmp_8=0\n  local -i min_n_tmp_8=0\n  local -i max_n_tmp_9=0\n  local -i min_n_tmp_9=0\n  local -i max_n_tmp_10=0\n  local -i min_n_tmp_10=0\n  local -i max_n_tmp_11=0\n  local -i min_n_tmp_11=0\n  local -i max_n_tmp_12=0\n  local -i min_n_tmp_12=0\n  local -i max_n_tmp_13=0\n  local -i min_n_tmp_13=0\n  local -i max_n_tmp_14=0\n  local -i min_n_tmp_14=0\n  local -i max_n_tmp_15=0\n  local -i min_n_tmp_15=0\n  local -i max_n_tmp_16=0\n  local -i min_n_tmp_16",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$((${arr[$i]} * $tmp_max > ${arr[$i]} * $tmp_min ? ${arr[$i]} * $tmp_max : ${arr[$i]} * $tmp_min))\n    max=$(($max > ${arr[$i]} ? $max : ${arr[$i]}))\n    min=$((${arr[$i]} * $tmp_max < ${arr[$i]} * $tmp_min ? ${arr[$i]} * $tmp_max : ${arr[$i]} * $tmp_min))\n    min=$(($min < ${arr[$i]} ? $min : ${arr[$i]}))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "  local -a arr=(\"$@\")\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[$i]}\n    local temp_max=$max_product\n    local temp_min=$min_product\n\n    max_product=$((curr * temp_max > curr * temp_min ? curr * temp_max : curr * temp_min))\n    max_product=$((curr > max_product ? curr : max_product))\n\n    min_product=$((curr * temp_max < curr * temp_min ? curr * temp_max : curr * temp_min))\n    min_product=$((curr < min_product ? curr : min_product))\n\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=()\n  local -i i=0\n  local -i max=0\n  local -i curr=0\n  local -i prod=1\n  local -i n=0\n\n  for i in $1; do\n    arr[n++]=$i\n  done\n\n  for ((i=0; i<n; i++)); do\n    prod=${arr[i]}\n    max=$((prod > max ? prod : max))\n    for ((j=i+1; j<n; j++)); do\n      prod=$((prod * arr[j]))\n      max=$((prod > max ? prod : max))\n    done\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n\n  for ((i = 1; i < ${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp=$max\n    max=$(max $max $(max $min $curr))\n    min=$(min $min $(min $temp $curr))\n    max_so_far=$(max $max_so_far $max)\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local result=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local cur=${arr[i]}\n        local tmp_max=$max\n        max=$((max > min ? max : min))\n        max=$((max > cur ? max : cur))\n        min=$((tmp_max < min ? tmp_max : min))\n        min=$((min < cur ? min : cur))\n        min=$((min * cur))\n        result=$((result > max ? result : max))\n    done\n    echo $result",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local max_product_ending_here=${arr[0]}\n  local min_product_ending_here=${arr[0]}\n  local max_product_so_far=${arr[0]}\n  local min_product_so_far=${arr[0]}\n  local i=1\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [ ${arr[$i]} -eq 0 ]; then\n      max_product_ending_here=1\n      min_product_ending_here=1\n    elif [ ${arr[$i]} -gt 0 ]; then\n      max_product_ending_here=$((max_product_ending_here * arr[i]))\n      min_product_ending_here=$((min_product_ending_here * arr[i]))\n    else\n      local temp=$max_product_ending_here\n      max_product_ending_here=$((min_product_ending_here * arr[i]))\n      min_product_ending_here=$((temp * arr[i]))\n    fi\n\n    if [ $max_product_ending_here -gt $max_product_so_far ]; then\n      max_product_so_far=$max_product_ending_here\n    fi\n\n    if [ $min_product_ending_here -lt $min_product_so_far ]; then\n      min_product_so_far=$min_product_ending_here\n    fi\n\n    i=$((i + 1))\n  done\n\n  if [ $max_product_so_far -gt $min_product_so_far ]; then\n    echo $max_product_so_far\n  else\n    echo $min_product_so_far\n  fi",
    "    local -a arr=(\"$@\")\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local max_so_far=$max\n    local i\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[$i]}\n        local temp_max=$max\n        max=$(max $max $(max $min $curr))\n        min=$(min $min $(min $temp_max $curr))\n        max_so_far=$(max $max_so_far $max)\n    done\n    echo $max_so_far",
    "    local -a array=($1)\n    local max_product=${array[0]}\n    local max_product_ending_here=${array[0]}\n    local min_product_ending_here=${array[0]}\n    local max_product_so_far=$max_product\n    for ((i=1; i<${#array[@]}; i++)); do\n        local product_ending_here=$((max_product_ending_here * array[i]))\n        local product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_here * array[i]))\n        max_product_ending_here=$((max_product_ending_here * array[i]))\n        min_product_ending_here=$((min_product_ending_",
    "  local arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp=$max\n    max=$(echo -e \"$max\\n$min\\n${arr[i]}\" | sort -nr | head -n1)\n    min=$(echo -e \"$tmp\\n$min\\n${arr[i]}\" | sort -nr | tail -n1)\n    result=$(echo -e \"$result\\n$max\" | sort -nr | head -n1)\n  done\n  echo $result",
    "    local -a arr=($1)\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local max_so_far=$max\n    local i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local tmp=$max\n        max=$(max $max $(max $min $curr) $(min $max $curr))\n        min=$(min $tmp $(min $min $curr) $(max $min $curr))\n        max_so_far=$(max $max_so_far $max)\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local -i max=${arr[0]}\n  local -i min=${arr[0]}\n  local -i max_so_far=${arr[0]}\n  local -i i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local -i cur=${arr[i]}\n    local -i temp=max\n    max=$(max $max $min $cur)\n    min=$(min $temp $min $cur)\n    max_so_far=$(max $max_so_far $max)\n  done\n  echo $max_so_far",
    "  local -a arr=()\n  local max_product=0\n  local product=0\n  local i=0\n\n  for item in $1; do\n    arr[$i]=$item\n    ((i++))\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    product=${arr[$i]}\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      ((product *= arr[j]))\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n\n  echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local max_product_candidate=$(( max_product * curr ))\n    local min_product_candidate=$(( min_product * curr ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > curr ? max_product : curr ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < curr ? min_product : curr ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local max_product_candidate=$(( max_product * arr[i] ))\n    local min_product_candidate=$(( min_product * arr[i] ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > arr[i] ? max_product : arr[i] ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < arr[i] ? min_product : arr[i] ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max_ending_here=1\n    local min_ending_here=1\n    local max_so_far=1\n    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((arr[i] > 0)); then\n            max_ending_here=$((max_ending_here * arr[i]))\n            min_ending_here=$((min_ending_here * arr[i]))\n        elif ((arr[i] == 0)); then\n            max_ending_here=1\n            min_ending_here=1\n        else\n            local temp=$max_ending_here\n            max_ending_here=$((min_ending_here * arr[i]))\n            min_ending_here=$((temp * arr[i]))\n        fi\n        if ((max_ending_here > max_so_far)); then\n            max_so_far=$max_ending_here\n        fi\n    done\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=0\n  local product=0\n  local i=0\n  local j=0\n  local k=0\n  local n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    product=1\n    for ((j=i; j<n; j++)); do\n      product=$((product * arr[j]))\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product",
    "  local arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr_product=$((arr[i] * max_product))\n    local curr_min_product=$((arr[i] * min_product))\n    max_product=$((curr_product > curr_min_product ? curr_product : curr_min_product))\n    max_product=$((max_product > arr[i] ? max_product : arr[i]))\n    min_product=$((curr_product < curr_min_product ? curr_product : curr_min_product))\n    min_product=$((min_product < arr[i] ? min_product : arr[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local max_product_candidate=$(( max_product * curr ))\n    local min_product_candidate=$(( min_product * curr ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > curr ? max_product : curr ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < curr ? min_product : curr ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n  echo $max_so_far",
    "  local -a arr\n  local -i i j k\n  local -i max_product max_product_here max_product_here_negative\n  local -i max_product_here_negative_temp\n  local -i max_product_here_temp\n  local -i max_product_temp\n  local -i product\n  local -i product_negative\n  local -i product_negative_temp\n  local -i product_temp\n  local -i temp\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n\n  max_product=${arr[0]}\n  max_product_here=${arr[0]}\n  max_product_here_negative=${arr[0]}\n  product=${arr[0]}\n  product_negative=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    temp=${arr[i]}\n\n    if ((temp > 0)); then\n      product_temp=$((product * temp))\n      product_negative_temp=$((product_negative * temp))\n      max_product_here_temp=$((max_product_here * temp))\n      max_product_here_negative_temp=$((max_product_here_negative * temp))\n      max_product_temp=$((max_product * temp))\n\n      if ((product_temp > max_product_here_temp)); then\n        max_product_here=$product_temp\n      else\n        max_product_here=$max_product_here_temp\n      fi\n\n      if ((product_negative_temp < max_product_here_negative_temp)); then\n        max_product_here_negative=$product_negative_temp\n      else\n        max_product_here_negative=$max_product_here_negative_temp\n      fi\n\n      if ((max_product_temp > max_product)); then\n        max_product=$max_product_temp\n      fi\n\n      if ((product_temp > product)); then\n        product=$product_temp\n      fi\n\n      if ((product_negative_temp < product_negative)); then\n        product_negative=$product_negative_temp\n      fi\n    elif ((temp < 0)); then\n      product_temp=$((",
    "    local arr=( $1 )\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local result=${arr[0]}\n    for (( i=1; i<${#arr[@]}; i++ )); do\n        local tmp_max=$max\n        local tmp_min=$min\n        max=$(max $((tmp_max*arr[i])) $((tmp_min*arr[i])) ${arr[i]})\n        min=$(min $((tmp_max*arr[i])) $((tmp_min*arr[i])) ${arr[i]})\n        result=$(max $result $max)\n    done\n    echo $result",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local tmp_max=$max\n    local tmp_min=$min\n    local num=${arr[$i]}\n\n    max=$(echo $tmp_max $tmp_min $num | awk '{print $1*$3}')\n    min=$(echo $tmp_max $tmp_min $num | awk '{print $2*$3}')\n\n    max=$(echo $max $tmp_max $num | awk '{print $1>$2?$1:$2}')\n    min=$(echo $min $tmp_min $num | awk '{print $1<$2?$1:$2}')\n\n    result=$(echo $result $max | awk '{print $1>$2?$1:$2}')\n  done\n\n  echo $result",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local temp=$max\n    max=$((${arr[$i]} * $max > ${arr[$i]} * $min ? ${arr[$i]} * $max : ${arr[$i]} * $min))\n    min=$((${arr[$i]} * $temp < ${arr[$i]} * $min ? ${arr[$i]} * $temp : ${arr[$i]} * $min))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "  local max_product=0\n  local product=0\n  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local arr=()\n  local arr_len=0\n\n  arr=($1)\n  arr_len=${#arr[@]}\n\n  for ((i=0; i<arr_len; i++)); do\n    product=1\n    for ((j=i; j<arr_len; j++)); do\n      product=$((product * arr[j]))\n      if [[ $product -gt $max_product ]]; then\n        max_product=$product\n      fi\n    done\n  done\n\n  echo $max_product",
    "  local -a array=(\"$@\")\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#array[@]}; i++)); do\n    local curr=${array[$i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a array=()\n  local -a subarray=()\n  local -a subarray_product=()\n  local -a subarray_product_max=()\n  local -a subarray_product_min=()\n  local -a subarray_product_max_max=()\n  local -a subarray_product_min_min=()\n  local -a subarray_product_max_min=()\n  local -a subarray_product_min_max=()\n  local -a subarray_product_max_min_max=()\n  local -a subarray_product_min_max_min=()\n  local -a subarray_product_max_min_max_min=()\n  local -a subarray_product_min_max_min_max=()\n  local -a subarray_product_max_min_max_min_max=()\n  local -a subarray_product_min_max_min_max_min=()\n  local -a subarray_product_max_min_max_min_max_min=()\n  local -a subarray_product_min_max_min_max_min_max=()\n  local -a subarray_product_max_min_max_min_max_min_max=()\n  local -a subarray_product_min_max_min_max_min_max_min=()\n  local -a subarray_product_max_min_max_min_max_min_max_min=()\n  local -a subarray_product_min_max_min_max_min_max_min_max=()\n  local -a subarray_product_max_min_max_min_max_min_max_min_max=()\n  local -a subarray_product_min_max_min_max_min_max_min_max_min=()\n  local -a subarray_product_max_min_max_min_max_min_max_min_max_min=()\n  local -a subarray_product_min_max_min_max_min_max_min_max_min_max=()\n  local -a subarray_product_max_min_",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local product1=$((max_product * arr[i]))\n    local product2=$((min_product * arr[i]))\n    max_product=$((product1 > product2 ? product1 : product2))\n    max_product=$((max_product > arr[i] ? max_product : arr[i]))\n    min_product=$((product1 < product2 ? product1 : product2))\n    min_product=$((min_product < arr[i] ? min_product : arr[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i = 1; i < ${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -lt 0 ]]; then\n      local tmp=$max_product\n      max_product=$min_product\n      min_product=$tmp\n    fi\n\n    max_product=$((max_product * arr[i]))\n    min_product=$((min_product * arr[i]))\n\n    max_product=$((max_product > arr[i] ? max_product : arr[i]))\n    min_product=$((min_product < arr[i] ? min_product : arr[i]))\n\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "    local -a arr=($1)\n    local -i max=${arr[0]}\n    local -i min=${arr[0]}\n    local -i result=${arr[0]}\n    local -i temp\n    for ((i=1; i<${#arr[@]}; i++)); do\n        temp=max\n        max=$((max > min ? max : min))\n        max=$((max > arr[i] ? max : arr[i]))\n        min=$((temp < min ? temp : min))\n        min=$((min < arr[i] ? min : arr[i]))\n        min=$((min < 0 ? min : 0))\n        result=$((result > max ? result : max))\n    done\n    echo $result",
    "    local -a arr=($1)\n    local max=${arr[0]}\n    local min=${arr[0]}\n    local result=${arr[0]}\n    for ((i = 1; i < ${#arr[@]}; i++)); do\n        local tmp_max=$max\n        local tmp_min=$min\n        max=$((${arr[i]} * $tmp_max > ${arr[i]} * $tmp_min ? ${arr[i]} * $tmp_max : ${arr[i]} * $tmp_min))\n        max=$(($max > ${arr[i]} ? $max : ${arr[i]}))\n        min=$((${arr[i]} * $tmp_max < ${arr[i]} * $tmp_min ? ${arr[i]} * $tmp_max : ${arr[i]} * $tmp_min))\n        min=$(($min < ${arr[i]} ? $min : ${arr[i]}))\n        result=$(($result > $max ? $result : $max))\n    done\n    echo $result",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=${arr[0]}\n    local i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local max_product_candidates=($max_product $min_product $curr)\n        local min_product_candidates=($max_product $min_product $curr)\n        max_product=$(echo \"${max_product_candidates[@]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n        min_product=$(echo \"${min_product_candidates[@]}\" | tr ' ' '\\n' | sort -n | head -n1)\n        max_so_far=$(echo \"$max_so_far $max_product\" | tr ' ' '\\n' | sort -nr | head -n1)\n    done\n\n    echo $max_so_far",
    "    local -a arr=($1)\n    local max_ending_here=1\n    local min_ending_here=1\n    local max_so_far=1\n    local i\n\n    for i in \"${arr[@]}\"; do\n        if (( i > 0 )); then\n            max_ending_here=$(( max_ending_here * i ))\n            min_ending_here=$(( min_ending_here * i ))\n        elif (( i == 0 )); then\n            max_ending_here=1\n            min_ending_here=1\n        else\n            local temp=$max_ending_here\n            max_ending_here=$(( min_ending_here * i ))\n            min_ending_here=$(( temp * i ))\n        fi\n\n        if (( max_ending_here > max_so_far )); then\n            max_so_far=$max_ending_here\n        fi\n    done\n\n    echo $max_so_far",
    "    local -a arr=($1)\n    local -i max=${arr[0]}\n    local -i min=${arr[0]}\n    local -i max_so_far=${arr[0]}\n    local -i i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local -i curr=${arr[i]}\n        local -i temp_max=$max\n        max=$(max $curr $((curr * max)) $((curr * min)))\n        min=$(min $curr $((curr * temp_max)) $((curr * min)))\n        max_so_far=$(max $max_so_far $max)\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[i]}\n    local max_product_candidate=$(( max_product * curr ))\n    local min_product_candidate=$(( min_product * curr ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > curr ? max_product : curr ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < curr ? min_product : curr ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local -i max_product=${arr[0]}\n  local -i min_product=${arr[0]}\n  local -i max_so_far=${arr[0]}\n  local -i max_ending_here=${arr[0]}\n  local -i min_ending_here=${arr[0]}\n  local -i i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if ((arr[i] < 0)); then\n      ((max_ending_here, min_ending_here = min_ending_here, max_ending_here))\n    fi\n    ((max_ending_here = max(max_ending_here * arr[i], arr[i])))\n    ((min_ending_here = min(min_ending_here * arr[i], arr[i])))\n    ((max_so_far = max(max_so_far, max_ending_here)))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local max_product_candidate=$(( max_product * curr ))\n    local min_product_candidate=$(( min_product * curr ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > curr ? max_product : curr ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < curr ? min_product : curr ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n\n  echo $max_so_far",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=${array[0]}\n  local i=1\n  while [ $i -lt ${#array[@]} ]; do\n    local product_with_max=`expr ${array[$i]} \\* $max_product`\n    local product_with_min=`expr ${array[$i]} \\* $min_product`\n    max_product=`max $product_with_max $product_with_min ${array[$i]}`\n    min_product=`min $product_with_max $product_with_min ${array[$i]}`\n    max_so_far=`max $max_so_far $max_product`\n    i=`expr $i + 1`\n  done\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=0\n  local max_product_ending_here=1\n  local min_product_ending_here=1\n  local i\n\n  for i in \"${arr[@]}\"; do\n    if (( i > 0 )); then\n      max_product_ending_here=$(( max_product_ending_here * i ))\n      min_product_ending_here=$(( min_product_ending_here * i ))\n    elif (( i == 0 )); then\n      max_product_ending_here=1\n      min_product_ending_here=1\n    else\n      local temp=$max_product_ending_here\n      max_product_ending_here=$(( min_product_ending_here * i ))\n      min_product_ending_here=$(( temp * i ))\n    fi\n\n    if (( max_product_ending_here > max_product )); then\n      max_product=$max_product_ending_here\n    fi\n\n    if (( max_product_ending_here < 1 )); then\n      max_product_ending_here=1\n    fi\n  done\n\n  echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local current=${arr[i]}\n    local max_product_candidate=$((max_product * current))\n    local min_product_candidate=$((min_product * current))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > current ? max_product : current))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < current ? min_product : current))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local -a max_product=(${arr[0]})\n  local -a min_product=(${arr[0]})\n  local -a max_subarray=(${arr[0]})\n  local -i i=0\n  local -i j=0\n  local -i max_product_i=0\n  local -i min_product_i=0\n  local -i max_subarray_i=0\n  local -i max_subarray_j=0\n  local -i max_subarray_product=0\n  local -i max_product_product=0\n  local -i min_product_product=0\n  local -i arr_len=${#arr[@]}\n\n  for ((i=1; i<arr_len; i++)); do\n    max_product_i=${max_product[i-1]}\n    min_product_i=${min_product[i-1]}\n    max_product[i]=$(max ${arr[i]} $((${arr[i]} * max_product_i)) $((${arr[i]} * min_product_i)))\n    min_product[i]=$(min ${arr[i]} $((${arr[i]} * max_product_i)) $((${arr[i]} * min_product_i)))\n    max_subarray_product=$(max ${max_product[i]} ${max_subarray_product})\n  done\n\n  echo ${max_subarray_product}",
    "  local max_product=1\n  local min_product=1\n  local max_so_far=1\n  for i in $1; do\n    if [[ $i -eq 0 ]]; then\n      max_product=1\n      min_product=1\n    elif [[ $i -gt 0 ]]; then\n      max_product=$((max_product * i))\n      min_product=$((min_product * i))\n    else\n      local temp=$max_product\n      max_product=$((min_product * i))\n      min_product=$((temp * i))\n    fi\n    if [[ $max_product -gt $max_so_far ]]; then\n      max_so_far=$max_product\n    fi\n    if [[ $max_product -lt 1 ]]; then\n      max_product=1\n    fi\n    if [[ $min_product -gt 1 ]]; then\n      min_product=1\n    fi\n  done\n  echo $max_so_far",
    "  local -a a=($1)\n  local max=${a[0]}\n  local min=${a[0]}\n  local result=${a[0]}\n  for ((i=1; i<${#a[@]}; i++)); do\n    local tmp=$max\n    max=$((max > min ? max : min))\n    max=$((max > a[i] ? max : a[i]))\n    min=$((tmp < min ? tmp : min))\n    min=$((min < a[i] ? min : a[i]))\n    min=$((min < 0 ? min : 0))\n    result=$((result > max ? result : max))\n  done\n  echo $result",
    "    local -a array=($1)\n    local max=${array[0]}\n    local min=${array[0]}\n    local max_so_far=$max\n    local i\n    for ((i=1; i<${#array[@]}; i++)); do\n        local num=${array[i]}\n        local tmp=$max\n        max=$((max > 0 ? max : 1))\n        max=$((max * num))\n        min=$((min < 0 ? min : 1))\n        min=$((min * num))\n        max=$((max > min ? max : min))\n        min=$((max < min ? max : min))\n        max_so_far=$((max_so_far > max ? max_so_far : max))\n    done\n    echo $max_so_far",
    "  local -a arr=($1)\n  local -a max_product=(${arr[0]})\n  local -a min_product=(${arr[0]})\n  local -a result=(${arr[0]})\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local a=${arr[$i]}\n    local max_product_i=$((max_product[$i-1] * a))\n    local min_product_i=$((min_product[$i-1] * a))\n    max_product[$i]=$(echo \"$max_product_i $min_product_i $a\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    min_product[$i]=$(echo \"$max_product_i $min_product_i $a\" | tr ' ' '\\n' | sort -n | head -n 1)\n    result[$i]=$(echo \"${result[$i-1]} $max_product_i $min_product_i\" | tr ' ' '\\n' | sort -nr | head -n 1)\n  done\n  echo ${result[@]} | tr ' ' '\\n' | sort -nr | head -n 1",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=${arr[0]}\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max_product=$max_product\n    local temp_min_product=$min_product\n    max_product=$(max $curr $((curr * temp_max_product)) $((curr * temp_min_product)))\n    min_product=$(min $curr $((curr * temp_max_product)) $((curr * temp_min_product)))\n    max_so_far=$(max $max_so_far $max_product)\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local -a max_subarray\n  local max_product=${arr[0]}\n  local product=1\n  local start=0\n  local end=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    product=$((product * arr[i]))\n    if [[ $product -gt $max_product ]]; then\n      max_product=$product\n      end=$i\n    fi\n    if [[ $product -eq 0 ]]; then\n      product=1\n      start=$((i + 1))\n    fi\n  done\n\n  for ((j=start; j<=end; j++)); do\n    max_subarray[${#max_subarray[@]}]=${arr[j]}\n  done\n\n  echo \"${max_subarray[@]}\"",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n    local i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local num=${arr[$i]}\n        local tmp=$max_product\n        max_product=$(max $num $((num * max_product)) $((num * min_product)))\n        min_product=$(min $num $((num * tmp)) $((num * min_product)))\n        max_so_far=$(max $max_so_far $max_product)\n    done\n\n    echo $max_so_far",
    "    local -a arr=()\n    local i=0\n    local max=0\n    local min=0\n    local max_so_far=0\n    local min_so_far=0\n    local max_ending_here=0\n    local min_ending_here=0\n    local n=0\n    local product=0\n\n    # Convert $1 to an array\n    for i in $1; do\n        arr[n]=$i\n        ((n++))\n    done\n\n    # Initialize max and min product\n    max=${arr[0]}\n    min=${arr[0]}\n\n    # Traverse through the array\n    for i in ${arr[@]}; do\n        # If the current element is positive, update max_ending_here.\n        # Update min_ending_here only if min_ending_here is negative\n        if [[ $i -gt 0 ]]; then\n            max_ending_here=$((max_ending_here * i))\n            min_ending_here=$((min_ending_here * i))\n        else\n            max_ending_here=$((min_ending_here * i))\n            min_ending_here=$((max_ending_here * i))\n        fi\n\n        # Update max_so_far, if needed\n        if [[ $max_ending_here -gt $max_so_far ]]; then\n            max_so_far=$max_ending_here\n        fi\n\n        # Update min_so_far, if needed\n        if [[ $min_ending_here -lt $min_so_far ]]; then\n            min_so_far=$min_ending_here\n        fi\n\n        # Update max and min product, if needed\n        if [[ $max_so_far -gt $max ]]; then\n            max=$max_so_far\n        fi\n\n        if [[ $min_so_far -lt $min ]]; then\n            min=$min_so_far\n        fi\n    done\n\n    # Return the maximum product\n    echo $max",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local tmp=$max\n    max=$((max > 0 ? max : 1))\n    max=$((max * curr))\n    min=$((min < 0 ? min : 1))\n    min=$((min * curr))\n    max=$((max > min ? max : min))\n    min=$((max < min ? max : min))\n    max_so_far=$((max_so_far > max ? max_so_far : max))\n  done\n\n  echo $max_so_far",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=${array[0]}\n  local i\n  for ((i=1; i<${#array[@]}; i++)); do\n    local current=${array[i]}\n    local max_product_candidate=$((max_product * current))\n    local min_product_candidate=$((min_product * current))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > current ? max_product : current))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < current ? min_product : current))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a a=($1)\n  local max=${a[0]}\n  local min=${a[0]}\n  local result=${a[0]}\n  local i\n  for ((i=1; i<${#a[@]}; i++)); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$(echo \"${a[i]} ${tmp_max} ${tmp_min} * *\" | bc)\n    min=$(echo \"${a[i]} ${tmp_max} ${tmp_min} * *\" | bc)\n    result=$(echo \"$result $max\" | awk '{if ($1 < $2) print $2; else print $1}')\n  done\n  echo $result",
    "  local -a arr\n  local -i i j k\n  local -i max_product=0\n  local -i product\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i; j<${#arr[@]}; j++)); do\n      product=1\n      for ((k=i; k<=j; k++)); do\n        product=$((product * arr[k]))\n      done\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product",
    "    local -a arr\n    local max_product=1\n    local min_product=1\n    local max_so_far=1\n    local i\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    for i in \"${arr[@]}\"; do\n        if (( i > 0 )); then\n            max_product=$(( max_product * i ))\n            min_product=$(( min(min_product * i, 1) ))\n        elif (( i == 0 )); then\n            max_product=1\n            min_product=1\n        else\n            max_product=$(( min_product * i ))\n            min_product=$(( max_product * i ))\n        fi\n\n        max_so_far=$(( max(max_so_far, max_product) ))\n\n        if (( max_product < 1 )); then\n            max_product=1\n        fi\n    done\n\n    echo \"$max_so_far\"",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidates=($max_product $min_product $curr)\n    local min_product_candidates=($max_product $min_product $curr)\n\n    max_product=$(echo \"${max_product_candidates[@]}\" | tr ' ' '\\n' | sort -nr | head -n1)\n    min_product=$(echo \"${min_product_candidates[@]}\" | tr ' ' '\\n' | sort -n | head -n1)\n\n    max_so_far=$(echo \"$max_so_far $max_product\" | tr ' ' '\\n' | sort -nr | head -n1)\n  done\n\n  echo $max_so_far",
    "  local -a arr\n  local i j k\n  local max_product\n  local product\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i; j<${#arr[@]}; j++)); do\n      product=1\n      for ((k=i; k<=j; k++)); do\n        product=$((product * arr[k]))\n      done\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_tmp=$max_product\n    max_product=$(max $((max_product * curr)) $((min_product * curr)) $curr)\n    min_product=$(min $((max_product_tmp * curr)) $((min_product * curr)) $curr)\n    max_so_far=$(max $max_so_far $max_product)\n  done\n  echo $max_so_far",
    "  local -a array\n  read -a array <<< \"$1\"\n  local max_product=1\n  local min_product=1\n  local max_so_far=1\n  for (( i=0; i<${#array[@]}; i++ )); do\n    if (( ${array[$i]} > 0 )); then\n      max_product=$(( max_product * ${array[$i]} ))\n      min_product=$(( min_product * ${array[$i]} ))\n    elif (( ${array[$i]} == 0 )); then\n      max_product=1\n      min_product=1\n    else\n      local temp=$max_product\n      max_product=$(( min_product * ${array[$i]} ))\n      min_product=$(( temp * ${array[$i]} ))\n    fi\n    if (( max_product > max_so_far )); then\n      max_so_far=$max_product\n    fi\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  local temp\n  for ((i=1; i<${#arr[@]}; i++)); do\n    temp=${arr[i]}\n    if [[ $temp -gt 0 ]]; then\n      max=$((max * temp))\n      min=$((min * temp))\n    else\n      temp=$((max * temp))\n      max=${arr[i]}\n      max=$((min * temp))\n    fi\n    if [[ $max -gt $result ]]; then\n      result=$max\n    fi\n    if [[ $min -gt $result ]]; then\n      result=$min\n    fi\n  done\n  echo $result",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -lt 0 ]]; then\n      local tmp=$max\n      max=$min\n      min=$tmp\n    fi\n    max=$((max * arr[i]))\n    min=$((min * arr[i]))\n    result=$((result > max ? result : max))\n  done\n  echo $result",
    "  local -a arr=(\"$@\")\n  local max=0\n  local min=0\n  local max_so_far=1\n  local i=0\n  local len=${#arr[@]}\n  local tmp=0\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[$i]} -eq 0 ]]; then\n      max=0\n      min=0\n    elif [[ ${arr[$i]} -lt 0 ]]; then\n      tmp=$max\n      max=$min\n      min=$tmp\n    fi\n    max=$((max * ${arr[$i]}))\n    min=$((min * ${arr[$i]}))\n    max_so_far=$((max_so_far > max ? max_so_far : max))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$((${arr[i]} * $tmp_max > ${arr[i]} * $tmp_min ? ${arr[i]} * $tmp_max : ${arr[i]} * $tmp_min))\n    max=$(($max > ${arr[i]} ? $max : ${arr[i]}))\n    min=$((${arr[i]} * $tmp_max < ${arr[i]} * $tmp_min ? ${arr[i]} * $tmp_max : ${arr[i]} * $tmp_min))\n    min=$(($min < ${arr[i]} ? $min : ${arr[i]}))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "  local -a arr\n  local i j k\n  local max_product=0\n  local product=0\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i; j<${#arr[@]}; j++)); do\n      product=1\n      for ((k=i; k<=j; k++)); do\n        product=$((product * arr[k]))\n      done\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product",
    "  local -a arr=()\n  local max_product=1\n  local min_product=1\n  local max_so_far=1\n  local i=0\n  local n=0\n  local tmp=0\n\n  for n in $1; do\n    arr[i++]=$n\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -gt 0 ]]; then\n      max_product=$((max_product * arr[i]))\n      min_product=$((min_product * arr[i]))\n    elif [[ ${arr[i]} -lt 0 ]]; then\n      tmp=$max_product\n      max_product=$((min_product * arr[i]))\n      min_product=$((tmp * arr[i]))\n    else\n      max_product=1\n      min_product=1\n    fi\n\n    if [[ $max_so_far -lt $max_product ]]; then\n      max_so_far=$max_product\n    fi\n\n    if [[ $max_product -lt 1 ]]; then\n      max_product=1\n    fi\n  done\n\n  echo $max_so_far",
    "    local -a A=($1)\n    local max_product=${A[0]}\n    local min_product=${A[0]}\n    local max_so_far=$max_product\n    local i\n\n    for ((i=1; i<${#A[@]}; i++)); do\n        local curr=${A[i]}\n        local max_product_candidate=$((max_product * curr))\n        local min_product_candidate=$((min_product * curr))\n\n        max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n        max_product=$((max_product > curr ? max_product : curr))\n\n        min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n        min_product=$((min_product < curr ? min_product : curr))\n\n        max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n    done\n\n    echo $max_so_far",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n  local i=1\n\n  while [ $i -lt ${#array[@]} ]; do\n    local product_1=$((max_product * array[i]))\n    local product_2=$((min_product * array[i]))\n    max_product=$((product_1 > product_2 ? product_1 : product_2))\n    max_product=$((max_product > array[i] ? max_product : array[i]))\n    min_product=$((product_1 < product_2 ? product_1 : product_2))\n    min_product=$((min_product < array[i] ? min_product : array[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n    i=$((i + 1))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$((${arr[i]} * $tmp_max))\n    max=$(($max > ${arr[i]} ? $max : ${arr[i]}))\n    max=$(($max > $tmp_min * ${arr[i]} ? $max : $tmp_min * ${arr[i]}))\n    min=$((${arr[i]} * $tmp_max))\n    min=$(($min < ${arr[i]} ? $min : ${arr[i]}))\n    min=$(($min < $tmp_min * ${arr[i]} ? $min : $tmp_min * ${arr[i]}))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "    local -a arr=($1)\n    local max_prod=${arr[0]}\n    local curr_prod=${arr[0]}\n    local curr_min=${arr[0]}\n    local curr_max=${arr[0]}\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local num=${arr[$i]}\n        if [[ $num -lt 0 ]]; then\n            local tmp=$curr_max\n            curr_max=$curr_min\n            curr_min=$tmp\n        fi\n        curr_max=$((num > curr_max * num ? num : curr_max * num))\n        curr_min=$((num < curr_min * num ? num : curr_min * num))\n        curr_prod=$((curr_max > curr_prod ? curr_max : curr_prod))\n    done\n    echo $curr_prod",
    "    local -a arr=($1)\n    local -a max_prod=()\n    local -a min_prod=()\n    local -i max_prod_so_far=0\n    local -i max_prod_here=0\n    local -i min_prod_here=0\n\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            max_prod_here=0\n            min_prod_here=0\n        elif [[ $i -gt 0 ]]; then\n            max_prod_here=$((max_prod_here * i))\n            min_prod_here=$((min_prod_here * i))\n        else\n            local -i tmp=$max_prod_here\n            max_prod_here=$((min_prod_here * i))\n            min_prod_here=$((tmp * i))\n        fi\n\n        if [[ $max_prod_here -eq 0 ]]; then\n            max_prod_here=1\n        fi\n\n        if [[ $min_prod_here -eq 0 ]]; then\n            min_prod_here=1\n        fi\n\n        max_prod_so_far=$((max_prod_here > max_prod_so_far ? max_prod_here : max_prod_so_far))\n    done\n\n    echo $max_prod_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$((${arr[i]} * $tmp_max > ${arr[i]} * $tmp_min ? ${arr[i]} * $tmp_max : ${arr[i]} * $tmp_min))\n    max=$(($max > ${arr[i]} ? $max : ${arr[i]}))\n    min=$((${arr[i]} * $tmp_max < ${arr[i]} * $tmp_min ? ${arr[i]} * $tmp_max : ${arr[i]} * $tmp_min))\n    min=$(($min < ${arr[i]} ? $min : ${arr[i]}))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "    local -a array=($1)\n    local max_product=${array[0]}\n    local min_product=${array[0]}\n    local max_so_far=$max_product\n\n    for ((i=1; i<${#array[@]}; i++)); do\n        local current=${array[i]}\n        local max_product_candidate=$((max_product * current))\n        local min_product_candidate=$((min_product * current))\n        max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n        max_product=$((max_product > current ? max_product : current))\n        min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n        min_product=$((min_product < current ? min_product : current))\n        max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max_product=$max_product\n    local temp_min_product=$min_product\n\n    max_product=$(max ${curr} ${temp_max_product} ${temp_min_product})\n    min_product=$(min ${curr} ${temp_max_product} ${temp_min_product})\n\n    max_so_far=$(max ${max_so_far} ${max_product})\n  done\n\n  echo $max_so_far",
    "  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max=$max_product\n    max_product=$((max_product * curr))\n    min_product=$((min_product * curr))\n    max_product=$((max_product > min_product ? max_product : min_product))\n    min_product=$((temp_max * curr < min_product ? temp_max * curr : min_product))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=()\n  local -i i=0\n  local -i max=0\n  local -i min=0\n  local -i max_so_far=0\n  local -i max_ending_here=0\n  local -i min_ending_here=0\n  local -i product=0\n  local -i num=0\n\n  for i in $@; do\n    arr+=($i)\n  done\n\n  max_so_far=${arr[0]}\n  max_ending_here=${arr[0]}\n  min_ending_here=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    num=${arr[$i]}\n    if ((num > 0)); then\n      max_ending_here=$((max_ending_here * num))\n      min_ending_here=$((min_ending_here * num))\n    elif ((num == 0)); then\n      max_ending_here=0\n      min_ending_here=0\n    else\n      product=$((max_ending_here * num))\n      max_ending_here=$((min_ending_here * num))\n      min_ending_here=$product\n    fi\n\n    if ((max_ending_here > max_so_far)); then\n      max_so_far=$max_ending_here\n    fi\n\n    if ((max_ending_here < 0)); then\n      max_ending_here=0\n    fi\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=${arr[0]}\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local current_product=${arr[$i]}\n    local temp_max_product=$max_product\n    local temp_min_product=$min_product\n\n    max_product=$(max $current_product $((current_product * temp_max_product)) $((current_product * temp_min_product)))\n    min_product=$(min $current_product $((current_product * temp_max_product)) $((current_product * temp_min_product)))\n\n    max_so_far=$(max $max_so_far $max_product)\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max=$max_product\n    local temp_min=$min_product\n\n    max_product=$((curr * temp_max > curr * temp_min ? curr * temp_max : curr * temp_min))\n    max_product=$((max_product > curr ? max_product : curr))\n\n    min_product=$((curr * temp_max < curr * temp_min ? curr * temp_max : curr * temp_min))\n    min_product=$((min_product < curr ? min_product : curr))\n\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#array[@]}; i++)); do\n    local num=${array[i]}\n\n    if [[ $num -lt 0 ]]; then\n      local temp=$max_product\n      max_product=$min_product\n      min_product=$temp\n    fi\n\n    max_product=$((max_product * num))\n    min_product=$((min_product * num))\n\n    if [[ $max_product -gt $max_so_far ]]; then\n      max_so_far=$max_product\n    fi\n\n    if [[ $max_product -lt $min_product ]]; then\n      max_product=$min_product\n    fi\n\n    if [[ $min_product -lt 1 ]]; then\n      min_product=1\n    fi\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -lt 0 ]]; then\n      local tmp=$max\n      max=$min\n      min=$tmp\n    fi\n\n    max=$(( ${arr[i]} > $(( ${arr[i]} * $max )) ? ${arr[i]} : ${arr[i]} * $max ))\n    min=$(( ${arr[i]} < $(( ${arr[i]} * $min )) ? ${arr[i]} : ${arr[i]} * $min ))\n\n    result=$(( $result > $max ? $result : $max ))\n  done\n\n  echo $result",
    "    local -a A=($1)\n    local max_ending_here=1\n    local min_ending_here=1\n    local max_so_far=1\n\n    for ((i=0; i<${#A[@]}; i++)); do\n        if [[ ${A[$i]} -gt 0 ]]; then\n            max_ending_here=$((max_ending_here * A[i]))\n            min_ending_here=$((min(min_ending_here * A[i], 1)))\n        elif [[ ${A[$i]} -eq 0 ]]; then\n            max_ending_here=1\n            min_ending_here=1\n        else\n            local temp=$max_ending_here\n            max_ending_here=$((max(min_ending_here * A[i], 1)))\n            min_ending_here=$((temp * A[i]))\n        fi\n\n        if [[ $max_so_far -lt $max_ending_here ]]; then\n            max_so_far=$max_ending_here\n        fi\n    done\n\n    echo $max_so_far",
    "  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max=$max_product\n    max_product=$((max_product * curr))\n    min_product=$((min_product * curr))\n    max_product=$((max_product > min_product ? max_product : min_product))\n    min_product=$((temp_max * curr < min_product ? temp_max * curr : min_product))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_so_far=${arr[0]}\n  local min_so_far=${arr[0]}\n  local max_ending_here=${arr[0]}\n  local min_ending_here=${arr[0]}\n  local max_product=${arr[0]}\n  local i=1\n  while (( i < ${#arr[@]} )); do\n    max_ending_here=$(( max_ending_here * arr[i] ))\n    min_ending_here=$(( min_ending_here * arr[i] ))\n    if (( max_ending_here < min_ending_here )); then\n      max_ending_here=$min_ending_here\n      min_ending_here=$max_ending_here\n    fi\n    if (( max_ending_here > max_so_far )); then\n      max_so_far=$max_ending_here\n    fi\n    if (( min_ending_here < min_so_far )); then\n      min_so_far=$min_ending_here\n    fi\n    if (( max_so_far > max_product )); then\n      max_product=$max_so_far\n    fi\n    (( i++ ))\n  done\n  echo $max_product",
    "  local -a arr=()\n  local -i i=0\n  local -i max=0\n  local -i min=0\n  local -i max_ending_here=1\n  local -i min_ending_here=1\n  local -i n=0\n  local -i temp=0\n\n  for i in $1; do\n    arr[n++]=$i\n  done\n\n  for ((i=0; i<n; i++)); do\n    if [[ ${arr[i]} -gt 0 ]]; then\n      max_ending_here=$((max_ending_here * arr[i]))\n      min_ending_here=$((min_ending_here * arr[i]))\n    elif [[ ${arr[i]} -lt 0 ]]; then\n      temp=$max_ending_here\n      max_ending_here=$((min_ending_here * arr[i]))\n      min_ending_here=$((temp * arr[i]))\n    else\n      max_ending_here=1\n      min_ending_here=1\n    fi\n\n    if [[ $max_ending_here -gt $max ]]; then\n      max=$max_ending_here\n    fi\n\n    if [[ $min_ending_here -lt $min ]]; then\n      min=$min_ending_here\n    fi\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  local temp=0\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    temp=$max\n    max=$(($max * ${arr[$i]}))\n    min=$(($min * ${arr[$i]}))\n    if [[ $max -lt $min ]]; then\n      max=$min\n      min=$temp\n    fi\n    if [[ $max -lt ${arr[$i]} ]]; then\n      max=${arr[$i]}\n    fi\n    if [[ $min -gt ${arr[$i]} ]]; then\n      min=${arr[$i]}\n    fi\n    if [[ $result -lt $max ]]; then\n      result=$max\n    fi\n  done\n\n  echo $result",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max_product=$max_product\n    local temp_min_product=$min_product\n\n    max_product=$((curr * temp_max_product > curr * temp_min_product ? curr * temp_max_product : curr * temp_min_product))\n    max_product=$((max_product > curr ? max_product : curr))\n\n    min_product=$((curr * temp_max_product < curr * temp_min_product ? curr * temp_max_product : curr * temp_min_product))\n    min_product=$((min_product < curr ? min_product : curr))\n\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local -i max=0\n  local -i curr=1\n  local -i i=0\n\n  while (( i < ${#arr[@]} )); do\n    curr=$(( curr * arr[i] ))\n    if (( curr > max )); then\n      max=$curr\n    fi\n    if (( curr == 0 )); then\n      curr=1\n    fi\n    (( i++ ))\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local -i max=${arr[0]}\n  local -i min=${arr[0]}\n  local -i max_so_far=${arr[0]}\n  local -i i=0\n  local -i tmp=0\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    tmp=max\n    max=$((${arr[i]} * $max > ${arr[i]} * $min ? ${arr[i]} * $max : ${arr[i]} * $min))\n    min=$((${arr[i]} * $tmp < ${arr[i]} * $min ? ${arr[i]} * $tmp : ${arr[i]} * $min))\n    max_so_far=$(($max > $max_so_far ? $max : $max_so_far))\n  done\n\n  echo $max_so_far",
    "  local max=1\n  local min=1\n  local result=1\n  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n      local tmp=$max\n      max=$min\n      min=$tmp\n    fi\n    max=$(( $max * $i ))\n    min=$(( $min * $i ))\n    if [[ $max -gt $result ]]; then\n      result=$max\n    fi\n  done\n  echo $result",
    "  local -a arr=()\n  local -i max=0\n  local -i curr=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\n  for i in $1; do\n    arr[${#arr[@]}]=$i\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    curr=${arr[i]}\n    max=$((curr > max ? curr : max))\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      curr=$((curr * arr[j]))\n      max=$((curr > max ? curr : max))\n    done\n  done\n\n  echo $max",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=${arr[0]}\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local max_product_candidate=$(( max_product * curr ))\n    local min_product_candidate=$(( min_product * curr ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > curr ? max_product : curr ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < curr ? min_product : curr ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local temp_max_product=$max_product\n        local temp_min_product=$min_product\n        max_product=$((max(curr, temp_max_product*curr, temp_min_product*curr)))\n        min_product=$((min(curr, temp_max_product*curr, temp_min_product*curr)))\n        max_so_far=$((max(max_so_far, max_product)))\n    done\n\n    echo $max_so_far",
    "    local -a arr\n    local max_product=1\n    local min_product=1\n    local max_so_far=1\n    local i\n    local n\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        n=${arr[i]}\n        if ((n > 0)); then\n            max_product=$((max_product * n))\n            min_product=$((min(min_product * n, 1)))\n        elif ((n == 0)); then\n            max_product=1\n            min_product=1\n        else\n            max_product=$((min_product * n))\n            min_product=$((max(max_product * n, 1)))\n        fi\n        max_so_far=$((max(max_so_far, max_product)))\n    done\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local num=${arr[i]}\n    local tmp=$max\n    max=$((max > 0 ? max : 1))\n    max=$((max * num))\n    min=$((min < 0 ? min : 1))\n    min=$((min * num))\n    max_so_far=$((max_so_far > max ? max_so_far : max))\n    max=$((max > min ? max : min))\n    min=$((tmp < min ? tmp : min))\n  done\n  echo $max_so_far",
    "    local -a arr=($1)\n    local -i max=${arr[0]}\n    local -i min=${arr[0]}\n    local -i max_so_far=${arr[0]}\n    local -i i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local -i curr=${arr[i]}\n        local -i tmp_max=$max\n        max=$((max > 0 ? max : 1))\n        max=$((max * curr))\n        min=$((min < 0 ? min : 1))\n        min=$((min * curr))\n        max=$((max > min ? max : min))\n        min=$((max > min ? min : max))\n        max=$((max > curr ? max : curr))\n        min=$((min < curr ? min : curr))\n        max_so_far=$((max_so_far > max ? max_so_far : max))\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local tmp_max=$max_product\n    local tmp_min=$min_product\n    max_product=$(max $curr $(( $curr * $tmp_max )) $(( $curr * $tmp_min )))\n    min_product=$(min $curr $(( $curr * $tmp_max )) $(( $curr * $tmp_min )))\n    max_so_far=$(max $max_so_far $max_product)\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local result=${arr[0]}\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local tmp_max_product=$max_product\n    local tmp_min_product=$min_product\n    max_product=$(( \\\n      $(max ${tmp_max_product} ${arr[i]}) \\\n      $(max ${tmp_min_product} ${arr[i]}) \\\n    ))\n    min_product=$(( \\\n      $(min ${tmp_max_product} ${arr[i]}) \\\n      $(min ${tmp_min_product} ${arr[i]}) \\\n    ))\n    result=$(max $result $max_product)\n  done\n\n  echo $result",
    "  local -a a=($1)\n  local -i max_product=${a[0]}\n  local -i min_product=${a[0]}\n  local -i max_so_far=${a[0]}\n  local -i i\n  for ((i=1; i<${#a[@]}; i++)); do\n    local -i curr=${a[i]}\n    local -i temp_max_product=$max_product\n    local -i temp_min_product=$min_product\n    max_product=$((curr > curr*temp_max_product ? curr : curr*temp_max_product))\n    max_product=$((max_product > curr*temp_min_product ? max_product : curr*temp_min_product))\n    min_product=$((curr < curr*temp_max_product ? curr : curr*temp_max_product))\n    min_product=$((min_product < curr*temp_min_product ? min_product : curr*temp_min_product))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local tmp_max=$max_product\n    max_product=$(( max(curr, max(curr*max_product, curr*min_product)) ))\n    min_product=$(( min(curr, min(curr*tmp_max, curr*min_product)) ))\n    max_so_far=$(( max(max_so_far, max_product) ))\n  done\n  echo $max_so_far",
    "    local -a A=()\n    local i\n    for i in $1; do\n        A+=($i)\n    done\n\n    local n=${#A[@]}\n    local max_ending_here=1\n    local min_ending_here=1\n    local max_so_far=1\n    local i\n    for ((i=0; i<n; i++)); do\n        if ((A[i] > 0)); then\n            max_ending_here=$((max_ending_here * A[i]))\n            min_ending_here=$((min_ending_here * A[i]))\n        elif ((A[i] == 0)); then\n            max_ending_here=1\n            min_ending_here=1\n        else\n            local temp=$max_ending_here\n            max_ending_here=$((min_ending_here * A[i]))\n            min_ending_here=$((temp * A[i]))\n        fi\n\n        if ((max_ending_here > max_so_far)); then\n            max_so_far=$max_ending_here\n        fi\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local temp_max=$max_product\n    local temp_min=$min_product\n    max_product=$((curr > temp_max * curr ? curr : temp_max * curr))\n    max_product=$((max_product > temp_min * curr ? max_product : temp_min * curr))\n    min_product=$((curr < temp_max * curr ? curr : temp_max * curr))\n    min_product=$((min_product < temp_min * curr ? min_product : temp_min * curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr\n  local -i i j k\n  local -i max_product=0\n  local -i product=1\n  local -i len=0\n  local -i max_len=0\n  local -i max_i=0\n  local -i max_j=0\n\n  arr=($1)\n  len=${#arr[@]}\n\n  for ((i=0; i<len; i++)); do\n    product=1\n    for ((j=i; j<len; j++)); do\n      product=$((product * arr[j]))\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  echo \"Max product: $max_product\"\n  echo \"Max subarray: ${arr[@]:$max_i:$((max_j-max_i+1))}\"",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local max_product_candidate=$((max_product * curr))\n        local min_product_candidate=$((min_product * curr))\n        max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n        max_product=$((max_product > curr ? max_product : curr))\n        min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n        min_product=$((min_product < curr ? min_product : curr))\n        max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n    done\n\n    echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    local tmp_max=$max\n    local tmp_min=$min\n    max=$(echo \"$tmp_max * ${arr[i]} ${tmp_min} * ${arr[i]} ${arr[i]}\" | tr ' ' '\\n' | sort -n | tail -n1)\n    min=$(echo \"$tmp_max * ${arr[i]} ${tmp_min} * ${arr[i]} ${arr[i]}\" | tr ' ' '\\n' | sort -n | head -n1)\n    result=$(echo \"$result $max\" | tr ' ' '\\n' | sort -n | tail -n1)\n  done\n  echo $result",
    "    local -a arr=($1)\n    local -i max=${arr[0]}\n    local -i curr=${arr[0]}\n    local -i i=1\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\n    while [ $i -lt ${#arr[@]} ]; do\n        if [ ${arr[$i]} -eq 0 ]; then\n            if [ $curr -gt $max ]; then\n                max=$curr\n            fi\n            curr=${arr[$i]}\n            j=$i\n            k=$i\n            l=$i\n        elif [ $curr -eq 0 ]; then\n            curr=${arr[$i]}\n            j=$i\n            k=$i\n            l=$i\n        elif [ $curr -lt 0 ]; then\n            if [ ${arr[$i]} -lt 0 ]; then\n                curr=$((curr * arr[i]))\n                l=$i\n            else\n                if [ $curr -gt $max ]; then\n                    max=$curr\n                fi\n                curr=${arr[$i]}\n                j=$i\n                k=$i\n                l=$i\n            fi\n        else\n            curr=$((curr * arr[i]))\n            l=$i\n        fi\n        i=$((i + 1))\n    done\n    if [ $curr -gt $max ]; then\n        max=$curr\n    fi\n    echo $max",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((curr * max_product))\n    local min_product_candidate=$((curr * min_product))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr\n  local -i i j k\n  local -i max_product=0\n  local -i product=0\n\n  # Convert the space-separated list to an array\n  arr=($1)\n\n  # For each element in the array\n  for ((i=0; i<${#arr[@]}; i++)); do\n    # For each subarray starting at this element\n    for ((j=i; j<${#arr[@]}; j++)); do\n      # Calculate the product of this subarray\n      product=1\n      for ((k=i; k<=j; k++)); do\n        product=$((product * arr[k]))\n      done\n\n      # If the product is greater than the current max, update the max\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n\n  echo $max_product",
    "  local -a arr=()\n  local -a max_product=()\n  local -a min_product=()\n  local -a max_product_so_far=()\n  local -a min_product_so_far=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i max_product_so_far=0\n  local -i min_product_so_far=0\n  local -i max_product=0\n  local -i min_product=0\n  local -i result=0\n  local -i tmp=0\n\n  arr=($1)\n  max_product_so_far[0]=${arr[0]}\n  min_product_so_far[0]=${arr[0]}\n  result=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    max_product=${arr[i]}\n    min_product=${arr[i]}\n    if [[ ${arr[i]} -gt 0 ]]; then\n      max_product=$((max_product * max_product_so_far[i-1]))\n      min_product=$((min_product * min_product_so_far[i-1]))\n    elif [[ ${arr[i]} -lt 0 ]]; then\n      tmp=$((max_product_so_far[i-1] * arr[i]))\n      max_product=$((min_product_so_far[i-1] * arr[i]))\n      min_product=$tmp\n    fi\n    max_product_so_far[i]=$max_product\n    min_product_so_far[i]=$min_product\n    if [[ ${max_product_so_far[i]} -gt $result ]]; then\n      result=${max_product_so_far[i]}\n    fi\n  done\n\n  echo $result",
    "  local arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    if [[ ${arr[$i]} -lt 0 ]]; then\n      local tmp=$max\n      max=$min\n      min=$tmp\n    fi\n    max=$(( ${arr[$i]} > $(( $max * ${arr[$i]} )) ? ${arr[$i]} : $(( $max * ${arr[$i]} )) ))\n    min=$(( ${arr[$i]} < $(( $min * ${arr[$i]} )) ? ${arr[$i]} : $(( $min * ${arr[$i]} )) ))\n    result=$(( $result > $max ? $result : $max ))\n  done\n  echo $result",
    "  local -a arr=(\"$@\")\n  local -i max_product=0\n  local -i max_ending_here=1\n  local -i min_ending_here=1\n  local -i i=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    if (( arr[i] > 0 )); then\n      max_ending_here=$(( max_ending_here * arr[i] ))\n      min_ending_here=$(( min(min_ending_here * arr[i], 1) ))\n    elif (( arr[i] == 0 )); then\n      max_ending_here=1\n      min_ending_here=1\n    else\n      local -i temp=$max_ending_here\n      max_ending_here=$(( max(min_ending_here * arr[i], 1) ))\n      min_ending_here=$(( temp * arr[i] ))\n    fi\n    max_product=$(( max(max_product, max_ending_here) ))\n  done\n  echo \"$max_product\"",
    "  local -a arr\n  local -i i j k\n  local -i max_product\n  local -i curr_product\n\n  arr=($1)\n  max_product=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    curr_product=1\n    for ((j=i; j<${#arr[@]}; j++)); do\n      curr_product=$((curr_product * arr[j]))\n      if ((curr_product > max_product)); then\n        max_product=$curr_product\n      fi\n    done\n  done\n  echo $max_product",
    "  local -a arr=(\"$@\")\n  local -i max=0\n  local -i min=0\n  local -i result=0\n  local -i i=0\n  local -i tmp=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    tmp=arr[i]\n    if ((tmp > 0)); then\n      max=max*tmp\n      min=min*tmp\n    elif ((tmp == 0)); then\n      max=0\n      min=0\n    else\n      tmp=max\n      max=min*tmp\n      min=tmp*arr[i]\n    fi\n    if ((max < min)); then\n      max=min\n    fi\n    if ((max > result)); then\n      result=max\n    fi\n  done\n\n  echo $result",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local num=${arr[i]}\n    local temp=$max_product\n    max_product=$((max_product * num))\n    min_product=$((min_product * num))\n    max_product=$((max_product > min_product ? max_product : min_product))\n    min_product=$((temp * num < min_product ? temp * num : min_product))\n    max_product=$((max_product > num ? max_product : num))\n    min_product=$((min_product < num ? min_product : num))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr\n  local i j k\n  local max_product\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n  max_product=${arr[0]}\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    local product=1\n    for ((j=i; j<${#arr[@]}; j++)); do\n      product=$((product * arr[j]))\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n\n  echo $max_product",
    "    local -a a\n    local i j k\n    local max_product\n    local product\n    IFS=' ' read -r -a a <<< \"$1\"\n    max_product=${a[0]}\n    for ((i=0; i<${#a[@]}; i++)); do\n        product=${a[i]}\n        max_product=$((product > max_product ? product : max_product))\n        for ((j=i+1; j<${#a[@]}; j++)); do\n            product=$((product * a[j]))\n            max_product=$((product > max_product ? product : max_product))\n        done\n    done\n    echo $max_product",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n    local i=1\n    local tmp=0\n\n    while [ $i -lt ${#arr[@]} ]\n    do\n        if [ ${arr[$i]} -lt 0 ]\n        then\n            tmp=$max_product\n            max_product=$min_product\n            min_product=$tmp\n        fi\n\n        max_product=$((max_product * arr[i]))\n        min_product=$((min_product * arr[i]))\n\n        if [ $max_product -gt $max_so_far ]\n        then\n            max_so_far=$max_product\n        fi\n\n        if [ $max_product -lt $min_product ]\n        then\n            max_product=$min_product\n        fi\n\n        if [ $max_product -lt 1 ]\n        then\n            max_product=1\n        fi\n\n        if [ $min_product -gt 1 ]\n        then\n            min_product=1\n        fi\n\n        i=$((i + 1))\n    done\n\n    echo $max_so_far",
    "    local -a arr\n    local -i i j k\n    local -i max_product=0\n    local -i product=0\n    local -i n=0\n    local -i max_n=0\n    local -i max_i=0\n    local -i max_j=0\n    local -i max_k=0\n\n    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i; j<${#arr[@]}; j++)); do\n            product=1\n            for ((k=i; k<=j; k++)); do\n                product=$((product * arr[k]))\n            done\n            if ((product > max_product)); then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n                max_k=$k\n                max_n=$((j - i + 1))\n            elif ((product == max_product)); then\n                n=$((j - i + 1))\n                if ((n > max_n)); then\n                    max_product=$product\n                    max_i=$i\n                    max_j=$j\n                    max_k=$k\n                    max_n=$n\n                fi\n            fi\n        done\n    done\n    echo \"max_product=$max_product\"\n    echo \"max_i=$max_i\"\n    echo \"max_j=$max_j\"\n    echo \"max_k=$max_k\"\n    echo \"max_n=$max_n\"",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[$i]}\n        local temp_max=$max_product\n        local temp_min=$min_product\n\n        max_product=$((max(curr, temp_max * curr, temp_min * curr)))\n        min_product=$((min(curr, temp_max * curr, temp_min * curr)))\n\n        max_so_far=$((max(max_so_far, max_product)))\n    done\n\n    echo $max_so_far",
    "    local -a array=($1)\n    local max=${array[0]}\n    local min=${array[0]}\n    local result=${array[0]}\n    local i\n    for ((i=1; i<${#array[@]}; i++)); do\n        local temp=${array[i]}\n        if [[ $temp -gt 0 ]]; then\n            if [[ $max -gt 0 ]]; then\n                max=$((max * temp))\n            else\n                max=$temp\n            fi\n            if [[ $min -lt 0 ]]; then\n                min=$((min * temp))\n            fi\n        elif [[ $temp -lt 0 ]]; then\n            if [[ $min -lt 0 ]]; then\n                max=$((min * temp))\n            fi\n            if [[ $max -gt 0 ]]; then\n                min=$((max * temp))\n            else\n                min=$temp\n            fi\n        else\n            max=0\n            min=0\n        fi\n        if [[ $max -gt $result ]]; then\n            result=$max\n        fi\n    done\n    echo $result",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n\n  for (( i = 1; i < ${#arr[@]}; i++ )); do\n    local curr=${arr[$i]}\n    local max_product_candidate=$(( max_product * curr ))\n    local min_product_candidate=$(( min_product * curr ))\n    max_product=$(( max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate ))\n    max_product=$(( max_product > curr ? max_product : curr ))\n    min_product=$(( max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate ))\n    min_product=$(( min_product < curr ? min_product : curr ))\n    max_so_far=$(( max_so_far > max_product ? max_so_far : max_product ))\n  done\n\n  echo $max_so_far",
    "  local arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[$i]}\n    local temp_max_product=$max_product\n    local temp_min_product=$min_product\n    max_product=$(max $temp_max_product $(($curr * $temp_max_product)))\n    max_product=$(max $max_product $(($curr * $temp_min_product)))\n    min_product=$(min $temp_min_product $(($curr * $temp_max_product)))\n    min_product=$(min $min_product $(($curr * $temp_min_product)))\n    max_so_far=$(max $max_so_far $max_product)\n  done\n\n  echo $max_so_far",
    "  local array=($1)\n  local max_so_far=${array[0]}\n  local min_so_far=${array[0]}\n  local max_ending_here=${array[0]}\n  local min_ending_here=${array[0]}\n\n  for (( i=1; i<${#array[@]}; i++ )); do\n    local num=${array[$i]}\n    if (( num > 0 )); then\n      max_ending_here=$(( max_ending_here * num ))\n      min_ending_here=$(( min_ending_here * num ))\n    else\n      local temp=$max_ending_here\n      max_ending_here=$(( min_ending_here * num ))\n      min_ending_here=$(( temp * num ))\n    fi\n\n    if (( max_ending_here > max_so_far )); then\n      max_so_far=$max_ending_here\n    fi\n\n    if (( min_ending_here < min_so_far )); then\n      min_so_far=$min_ending_here\n    fi\n  done\n\n  echo $max_so_far",
    "    local -a a=($1)\n    local max=${a[0]}\n    local min=${a[0]}\n    local result=${a[0]}\n    for ((i=1; i<${#a[@]}; i++)); do\n        local tmp=$max\n        max=$(($max * ${a[$i]}))\n        min=$(($min * ${a[$i]}))\n        if (($max < $min)); then\n            max=$min\n            min=$tmp\n        fi\n        if (($max < ${a[$i]})); then\n            max=${a[$i]}\n        fi\n        if (($min > ${a[$i]})); then\n            min=${a[$i]}\n        fi\n        if (($max > $result)); then\n            result=$max\n        fi\n    done\n    echo $result",
    "  local -a arr=($1)\n  local -i max_product=0\n  local -i curr_product=0\n  local -i curr_max_product=0\n  local -i curr_min_product=0\n  local -i curr_max_product_tmp=0\n  local -i curr_min_product_tmp=0\n  local -i i=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    curr_max_product_tmp=curr_max_product\n    curr_min_product_tmp=curr_min_product\n    curr_max_product=max ${curr_max_product_tmp}*${arr[i]} ${curr_min_product_tmp}*${arr[i]} ${arr[i]}\n    curr_min_product=min ${curr_max_product_tmp}*${arr[i]} ${curr_min_product_tmp}*${arr[i]} ${arr[i]}\n    max_product=max $max_product $curr_max_product\n  done\n\n  echo $max_product",
    "  local -a arr=(\"$@\")\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#array[@]}; i++)); do\n    local current=${array[i]}\n    local max_product_candidate=$((max_product * current))\n    local min_product_candidate=$((min_product * current))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > current ? max_product : current))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < current ? min_product : current))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local tmp=$max\n    max=$(echo \"$max $min $curr\" | tr ' ' '\\n' | sort -nr | head -n1)\n    min=$(echo \"$tmp $min $curr\" | tr ' ' '\\n' | sort -nr | tail -n1)\n    max_so_far=$(echo \"$max_so_far $max\" | tr ' ' '\\n' | sort -nr | head -n1)\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[$i]}\n    local temp_max_product=$max_product\n    max_product=$(max $((curr * max_product)) $((curr * min_product)) $curr)\n    min_product=$(min $((curr * temp_max_product)) $((curr * min_product)) $curr)\n    max_so_far=$(max $max_so_far $max_product)\n  done\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max_ending_here=1\n    local min_ending_here=1\n    local max_so_far=1\n\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            max_ending_here=$((max_ending_here * i))\n            min_ending_here=$((min_ending_here * i))\n        elif [[ $i -lt 0 ]]; then\n            local temp=$max_ending_here\n            max_ending_here=$((min_ending_here * i))\n            min_ending_here=$((temp * i))\n        else\n            max_ending_here=1\n            min_ending_here=1\n        fi\n\n        if [[ $max_so_far -lt $max_ending_here ]]; then\n            max_so_far=$max_ending_here\n        fi\n\n        if [[ $max_ending_here -lt 1 ]]; then\n            max_ending_here=1\n        fi\n    done\n\n    echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidate=$((max_product * curr))\n    local min_product_candidate=$((min_product * curr))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > curr ? max_product : curr))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < curr ? min_product : curr))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "  local -a arr=()\n  local -i max=0\n  local -i min=0\n  local -i max_so_far=0\n  local -i i=0\n  local -i curr=0\n\n  for i in $1; do\n    arr+=($i)\n  done\n\n  max=arr[0]\n  min=arr[0]\n  max_so_far=arr[0]\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    curr=arr[i]\n\n    if [[ $curr -gt 0 ]]; then\n      max=$((max * curr))\n      min=$((min * curr))\n    else\n      max=$((min * curr))\n      min=$((max * curr))\n    fi\n\n    if [[ $max -gt $max_so_far ]]; then\n      max_so_far=$max\n    fi\n\n    if [[ $max -lt 0 ]]; then\n      max=0\n    fi\n\n    if [[ $min -lt 0 ]]; then\n      min=0\n    fi\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp_max=$max_product\n    max_product=$((max_product * arr[i]))\n    min_product=$((min_product * arr[i]))\n    max_product=$((max_product > min_product ? max_product : min_product))\n    min_product=$((tmp_max * arr[i] < min_product ? tmp_max * arr[i] : min_product))\n    max_product=$((max_product > arr[i] ? max_product : arr[i]))\n    min_product=$((min_product < arr[i] ? min_product : arr[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n  echo $max_so_far",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local tmp=$max_product\n        max_product=$((max_product * curr))\n        min_product=$((min_product * curr))\n        max_product=$((max_product > min_product ? max_product : min_product))\n        min_product=$((tmp * curr < min_product ? tmp * curr : min_product))\n        max_product=$((max_product > curr ? max_product : curr))\n        min_product=$((min_product < curr ? min_product : curr))\n        max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n    done\n\n    echo $max_so_far",
    "  local -a arr\n  local i j k\n  local max_product=0\n  local product=0\n  local -i arr_len=0\n  local -i max_len=0\n  local -i len=0\n  local -i zero_count=0\n  local -i neg_count=0\n  local -i neg_pos=0\n  local -i neg_neg=0\n  local -i neg_zero=0\n  local -i zero_zero=0\n  local -i zero_neg=0\n  local -i zero_pos=0\n  local -i pos_pos=0\n  local -i pos_neg=0\n  local -i pos_zero=0\n  local -i neg_pos_pos=0\n  local -i neg_pos_neg=0\n  local -i neg_pos_zero=0\n  local -i neg_neg_pos=0\n  local -i neg_neg_neg=0\n  local -i neg_neg_zero=0\n  local -i neg_zero_pos=0\n  local -i neg_zero_neg=0\n  local -i neg_zero_zero=0\n  local -i zero_pos_pos=0\n  local -i zero_pos_neg=0\n  local -i zero_pos_zero=0\n  local -i zero_neg_pos=0\n  local -i zero_neg_neg=0\n  local -i zero_neg_zero=0\n  local -i zero_zero_pos=0\n  local -i zero_zero_neg=0\n  local -i zero_zero_zero=0\n  local -i pos_pos_pos=0\n  local -i pos_pos_neg=0\n  local -i pos_pos_zero=0\n  local -i pos_neg_pos=0\n  local -i pos_neg_neg=0\n  local -i pos_neg_zero=0\n  local -i pos_zero_pos=0\n  local -i pos_zero_neg=0\n  local -i pos_zero_zero=0\n  local -i neg_pos_pos_pos=0\n  local -i neg_pos_pos",
    "  local -a arr\n  local i j k\n  local max_product\n  local product\n\n  arr=($1)\n  max_product=${arr[0]}\n  for ((i=0; i<${#arr[@]}; i++)); do\n    product=${arr[i]}\n    if ((product > max_product)); then\n      max_product=$product\n    fi\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      product=$((product * arr[j]))\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n    done\n  done\n  echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp=$max_product\n    max_product=$(max $max_product $min_product ${arr[i]})\n    min_product=$(min $tmp $min_product ${arr[i]})\n    max_so_far=$(max $max_so_far $max_product)\n  done\n\n  echo $max_so_far",
    "  local arr=($1)\n  local max_so_far=${arr[0]}\n  local min_so_far=${arr[0]}\n  local max_ending_here=${arr[0]}\n  local min_ending_here=${arr[0]}\n  local max_product=${arr[0]}\n\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    if [[ ${arr[$i]} -gt 0 ]]; then\n      max_ending_here=$(( max_ending_here * arr[i] ))\n      min_ending_here=$(( min_ending_here * arr[i] ))\n    elif [[ ${arr[$i]} -lt 0 ]]; then\n      local temp=$max_ending_here\n      max_ending_here=$(( min_ending_here * arr[i] ))\n      min_ending_here=$(( temp * arr[i] ))\n    else\n      max_ending_here=0\n      min_ending_here=0\n    fi\n\n    if [[ $max_ending_here -gt $max_so_far ]]; then\n      max_so_far=$max_ending_here\n    fi\n\n    if [[ $min_ending_here -lt $min_so_far ]]; then\n      min_so_far=$min_ending_here\n    fi\n  done\n\n  echo $max_so_far",
    "  local -a arr=(\"$@\")\n  local max_product=0\n  local current_product=1\n  local i=0\n  local j=0\n  local len=${#arr[@]}\n\n  while (( i < len )); do\n    current_product=1\n    j=$i\n    while (( j < len )); do\n      current_product=$(( current_product * arr[j] ))\n      if (( current_product > max_product )); then\n        max_product=$current_product\n      fi\n      (( j++ ))\n    done\n    (( i++ ))\n  done\n\n  echo $max_product",
    "  local -a arr=()\n  local -i i=0\n  local -i max=0\n  local -i min=0\n  local -i prod=0\n  local -i tmp=0\n\n  for i in $1; do\n    arr+=($i)\n  done\n\n  max=${arr[0]}\n  min=${arr[0]}\n  prod=${arr[0]}\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    tmp=max\n    max=$((${arr[i]} * $max > ${arr[i]} * $min ? ${arr[i]} * $max : ${arr[i]} * $min))\n    max=$(($max > ${arr[i]} ? $max : ${arr[i]}))\n    min=$((${arr[i]} * $tmp < ${arr[i]} * $min ? ${arr[i]} * $tmp : ${arr[i]} * $min))\n    min=$(($min < ${arr[i]} ? $min : ${arr[i]}))\n    prod=$(($prod > $max ? $prod : $max))\n  done\n\n  echo $prod",
    "  local -a array=($1)\n  local max=${array[0]}\n  local min=${array[0]}\n  local result=${array[0]}\n  for ((i=1; i<${#array[@]}; i++)); do\n    local temp_max=$max\n    local temp_min=$min\n    max=$((${array[i]} * $temp_max > ${array[i]} * $temp_min ? ${array[i]} * $temp_max : ${array[i]} * $temp_min))\n    min=$((${array[i]} * $temp_max < ${array[i]} * $temp_min ? ${array[i]} * $temp_max : ${array[i]} * $temp_min))\n    max=$(($max > ${array[i]} ? $max : ${array[i]}))\n    min=$(($min < ${array[i]} ? $min : ${array[i]}))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "  local array=($1)\n  local max_product=${array[0]}\n  local min_product=${array[0]}\n  local max_so_far=${array[0]}\n  local i\n  for ((i=1; i<${#array[@]}; i++)); do\n    local current=${array[i]}\n    local temp_max=max_product\n    max_product=$(max $max_product $min_product $current)\n    min_product=$(min $temp_max $min_product $current)\n    max_so_far=$(max $max_so_far $max_product)\n  done\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local max_product_candidate=$((max_product * arr[i]))\n    local min_product_candidate=$((min_product * arr[i]))\n    max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n    max_product=$((max_product > arr[i] ? max_product : arr[i]))\n    min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n    min_product=$((min_product < arr[i] ? min_product : arr[i]))\n    max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n  done\n\n  echo $max_so_far",
    "    local -a arr=()\n    local -a max_arr=()\n    local -a min_arr=()\n    local max=0\n    local min=0\n    local i=0\n    local j=0\n    local len=0\n    local product=0\n    local max_product=0\n    local min_product=0\n\n    for i in $1; do\n        arr[$len]=$i\n        ((len++))\n    done\n\n    max_arr[0]=${arr[0]}\n    min_arr[0]=${arr[0]}\n    max_product=${arr[0]}\n    min_product=${arr[0]}\n\n    for ((i=1; i<len; i++)); do\n        max=${arr[$i]}\n        min=${arr[$i]}\n        for ((j=0; j<i; j++)); do\n            product=$((max_arr[$j] * arr[$i]))\n            if [[ $product -gt $max ]]; then\n                max=$product\n            fi\n            product=$((min_arr[$j] * arr[$i]))\n            if [[ $product -lt $min ]]; then\n                min=$product\n            fi\n        done\n        max_arr[$i]=$max\n        min_arr[$i]=$min\n        if [[ $max -gt $max_product ]]; then\n            max_product=$max\n        fi\n        if [[ $min -lt $min_product ]]; then\n            min_product=$min\n        fi\n    done\n\n    echo $max_product",
    "  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local max_prod=0\n  local prod=1\n  local i\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    prod=$(( prod * arr[i] ))\n    if (( prod > max_prod )); then\n      max_prod=$prod\n    fi\n    if (( arr[i] == 0 )); then\n      prod=1\n    fi\n  done\n  echo $max_prod",
    "    local -a arr=($1)\n    local max_product=${arr[0]}\n    local min_product=${arr[0]}\n    local max_so_far=$max_product\n    local i\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n        local curr=${arr[i]}\n        local max_product_candidate=$((curr * max_product))\n        local min_product_candidate=$((curr * min_product))\n        max_product=$((max_product_candidate > min_product_candidate ? max_product_candidate : min_product_candidate))\n        max_product=$((max_product > curr ? max_product : curr))\n        min_product=$((max_product_candidate < min_product_candidate ? max_product_candidate : min_product_candidate))\n        min_product=$((min_product < curr ? min_product : curr))\n        max_so_far=$((max_so_far > max_product ? max_so_far : max_product))\n    done\n\n    echo $max_so_far",
    "  local -a array=($1)\n  local -i max_product=0\n  local -i product=1\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n\n  while ((i < n)); do\n    product=1\n    j=i\n    while ((j < n)); do\n      product=$((product * array[j]))\n      if ((product > max_product)); then\n        max_product=$product\n      fi\n      ((j++))\n    done\n    ((i++))\n  done\n\n  echo $max_product",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  local tmp\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    tmp=$max\n    max=$((${arr[i]} * $max > ${arr[i]} * $min ? ${arr[i]} * $max : ${arr[i]} * $min))\n    min=$((${arr[i]} * $tmp < ${arr[i]} * $min ? ${arr[i]} * $tmp : ${arr[i]} * $min))\n    result=$(($max > $result ? $max : $result))\n  done\n\n  echo $result",
    "  local arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local max_so_far=$max\n  local i\n\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local tmp=$max\n    max=$(max $max $(max $min $curr) $(min $min $curr))\n    min=$(min $tmp $(max $min $curr) $(min $min $curr))\n    max_so_far=$(max $max_so_far $max)\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max_so_far=${arr[0]}\n  local min_so_far=${arr[0]}\n  local max_ending_here=${arr[0]}\n  local min_ending_here=${arr[0]}\n  local max_product=${arr[0]}\n  for (( i=1; i<${#arr[@]}; i++ )); do\n    max_ending_here=$(( ${arr[i]} * max_so_far ))\n    min_ending_here=$(( ${arr[i]} * min_so_far ))\n    max_ending_here=$(( max_ending_here > min_ending_here ? max_ending_here : min_ending_here ))\n    min_ending_here=$(( max_ending_here < min_ending_here ? max_ending_here : min_ending_here ))\n    max_so_far=$(( max_ending_here > ${arr[i]} ? max_ending_here : ${arr[i]} ))\n    min_so_far=$(( min_ending_here < ${arr[i]} ? min_ending_here : ${arr[i]} ))\n    max_product=$(( max_product > max_so_far ? max_product : max_so_far ))\n  done\n  echo $max_product",
    "    local -a arr=($1)\n    local -a max=(${arr[0]})\n    local -a min=(${arr[0]})\n    local -i max_product=${arr[0]}\n    local -i i=1\n    local -i max_i=${#arr[@]}\n    while (( i < max_i )); do\n        local -i curr=${arr[i]}\n        local -i prev_max=${max[i-1]}\n        local -i prev_min=${min[i-1]}\n        max[i]=$(( curr > 0 ? (curr > prev_max * curr ? curr : prev_max * curr) : (curr < prev_min * curr ? curr : prev_min * curr) ))\n        min[i]=$(( curr > 0 ? (curr < prev_min * curr ? curr : prev_min * curr) : (curr > prev_max * curr ? curr : prev_max * curr) ))\n        max_product=$(( max_product > ${max[i]} ? max_product : ${max[i]} ))\n        (( i++ ))\n    done\n    echo $max_product",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  local i=1\n  local tmp\n\n  while [ $i -lt ${#arr[@]} ]; do\n    tmp=$max_product\n    max_product=$(( max_product * arr[i] ))\n    min_product=$(( min_product * arr[i] ))\n    if [ $max_product -lt $min_product ]; then\n      max_product=$min_product\n      min_product=$tmp\n    fi\n    if [ $max_product -lt ${arr[i]} ]; then\n      max_product=${arr[i]}\n    fi\n    if [ $min_product -gt ${arr[i]} ]; then\n      min_product=${arr[i]}\n    fi\n    if [ $max_so_far -lt $max_product ]; then\n      max_so_far=$max_product\n    fi\n    i=$(( i + 1 ))\n  done\n\n  echo $max_so_far",
    "  local -a arr=($1)\n  local max=${arr[0]}\n  local min=${arr[0]}\n  local result=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local tmp=$max\n    max=$((${arr[i]} * $max > ${arr[i]} * $min ? ${arr[i]} * $max : ${arr[i]} * $min))\n    min=$((${arr[i]} * $tmp < ${arr[i]} * $min ? ${arr[i]} * $tmp : ${arr[i]} * $min))\n    result=$(($result > $max ? $result : $max))\n  done\n  echo $result",
    "  local -a arr=(\"$@\")\n  local max_product=0\n  local max_product_ending_here=1\n  local min_product_ending_here=1\n  local i\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    local curr=${arr[$i]}\n    if ((curr > 0)); then\n      max_product_ending_here=$((max_product_ending_here * curr))\n      min_product_ending_here=$((min_product_ending_here * curr))\n    elif ((curr == 0)); then\n      max_product_ending_here=1\n      min_product_ending_here=1\n    else\n      local temp=$max_product_ending_here\n      max_product_ending_here=$((min_product_ending_here * curr))\n      min_product_ending_here=$((temp * curr))\n    fi\n\n    if ((max_product_ending_here > max_product)); then\n      max_product=$max_product_ending_here\n    fi\n  done\n\n  echo \"$max_product\"",
    "  local -a arr=($1)\n  local max_product=${arr[0]}\n  local min_product=${arr[0]}\n  local max_so_far=$max_product\n  for ((i=1; i<${#arr[@]}; i++)); do\n    local curr=${arr[i]}\n    local max_product_candidates=($curr $max_product $min_product)\n    local min_product_candidates=($curr $max_product $min_product)\n    max_product=${max_product_candidates[0]}\n    min_product=${min_product_candidates[0]}\n    for ((j=1; j<${#max_product_candidates[@]}; j++)); do\n      if [[ ${max_product_candidates[j]} -gt $max_product ]]; then\n        max_product=${max_product_candidates[j]}\n      fi\n      if [[ ${min_product_candidates[j]} -lt $min_product ]]; then\n        min_product=${min_product_candidates[j]}\n      fi\n    done\n    if [[ $max_product -gt $max_so_far ]]; then\n      max_so_far=$max_product\n    fi\n  done\n  echo $max_so_far",
    "  local -a a=($1)\n  local -i max=0\n  local -i min=0\n  local -i max_ending_here=1\n  local -i min_ending_here=1\n  local -i i=0\n  local -i n=${#a[@]}\n\n  while (( i < n )); do\n    if (( a[i] > 0 )); then\n      max_ending_here *= a[i]\n      min_ending_here *= a[i]\n    elif (( a[i] == 0 )); then\n      max_ending_here=1\n      min_ending_here=1\n    else\n      local -i temp=max_ending_here\n      max_ending_here=max(1, min_ending_here * a[i])\n      min_ending_here=temp * a[i]\n    fi\n\n    if (( max_ending_here > max )); then\n      max=max_ending_here\n    fi\n    (( i++ ))\n  done\n\n  echo $max",
    "  local -a arr\n  local -i i=0 j=0 k=0\n  local -i max_product=0\n  local -i product=0\n  local -i max_neg_product=0\n  local -i min_neg_product=0\n  local -i max_neg_product_index=0\n  local -i min_neg_product_index=0\n  local -i max_neg_product_count=0\n  local -i min_neg_product_count=0\n  local -i max_neg_product_start=0\n  local -i min_neg_product_start=0\n\n  # Split the input string into an array\n  IFS=' ' read -r -a arr <<< \"$1\"\n\n  # Loop over the array\n  for ((i=0; i<${#arr[@]}; i++)); do\n    # If the current element is 0, reset the product and start a new subarray\n    if [[ ${arr[i]} -eq 0 ]]; then\n      product=0\n      continue\n    fi\n\n    # If the current element is negative, check if it's the smallest negative\n    # element so far. If so, reset the min_neg_product_count and\n    # min_neg_product_start.\n    if [[ ${arr[i]} -lt 0 ]]; then\n      if [[ ${arr[i]} -lt $min_neg_product ]]; then\n        min_neg_product=${arr[i]}\n        min_neg_product_index=$i\n        min_neg_product_count=1\n        min_neg_product_start=$i\n      fi\n    fi\n\n    # Multiply the current element with the product\n    product=$((product * ${arr[i]}))\n\n    # If the product is negative, check if it's the largest negative product\n    # so far. If so, reset the max_neg_product_count and max_neg_product_start.\n    if [[ $product -lt 0 ]]; then\n      if [[ $product -gt $max_neg_product ]]; then\n        max_neg_product=$product\n        max_neg_product_index=$i\n        max_neg_product_count=1\n       "
  ]
}
{
  "name": "mbpp_397_median_numbers",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the median of three numbers.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_numbers() {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_397_median_numbers.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\ncandidate() {\n    median_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"25\" \"55\" \"65\") = \"55.0\" ]]\n    [[ $(candidate \"20\" \"10\" \"30\") = \"20.0\" ]]\n    [[ $(candidate \"15\" \"45\" \"75\") = \"45.0\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -lt $3 ]; then\n    echo $1\n  elif [ $2 -lt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [[ $1 -gt $2 ]]; then\n        if [[ $2 -gt $3 ]]; then\n            echo $2\n        elif [[ $1 -gt $3 ]]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [[ $1 -gt $3 ]]; then\n            echo $1\n        elif [[ $2 -gt $3 ]]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"$2\"\n        elif [ $1 -gt $3 ]; then\n            echo \"$3\"\n        else\n            echo \"$1\"\n        fi\n    elif [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo \"$1\"\n        else\n            echo \"$3\"\n        fi\n    else\n        echo \"$2\"\n    fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    local num1=$1\n    local num2=$2\n    local num3=$3\n\n    if [ $num1 -gt $num2 ]; then\n        if [ $num1 -gt $num3 ]; then\n            if [ $num2 -gt $num3 ]; then\n                echo $num2\n            else\n                echo $num3\n            fi\n        else\n            echo $num1\n        fi\n    else\n        if [ $num2 -gt $num3 ]; then\n            if [ $num1 -gt $num3 ]; then\n                echo $num1\n            else\n                echo $num3\n            fi\n        else\n            echo $num2\n        fi\n    fi",
    "    local num1=$1\n    local num2=$2\n    local num3=$3\n    local median=0\n\n    if [ $num1 -gt $num2 ]; then\n        if [ $num1 -gt $num3 ]; then\n            if [ $num2 -gt $num3 ]; then\n                median=$num2\n            else\n                median=$num3\n            fi\n        else\n            median=$num1\n        fi\n    else\n        if [ $num2 -gt $num3 ]; then\n            if [ $num1 -gt $num3 ]; then\n                median=$num1\n            else\n                median=$num3\n            fi\n        else\n            median=$num2\n        fi\n    fi\n    echo $median",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]\n  then\n    if [ $2 -gt $3 ]\n    then\n      echo $2\n    elif [ $1 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]\n    then\n      echo $1\n    elif [ $2 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"$2\"\n        else\n            echo \"$3\"\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo \"$1\"\n        else\n            echo \"$3\"\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo \"$1\"\n        else\n            echo \"$2\"\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    local num1=$1\n    local num2=$2\n    local num3=$3\n    local median=0\n\n    if [ $num1 -gt $num2 ]; then\n        if [ $num2 -gt $num3 ]; then\n            median=$num2\n        elif [ $num1 -gt $num3 ]; then\n            median=$num3\n        else\n            median=$num1\n        fi\n    else\n        if [ $num1 -gt $num3 ]; then\n            median=$num1\n        elif [ $num2 -gt $num3 ]; then\n            median=$num3\n        else\n            median=$num2\n        fi\n    fi\n\n    echo $median",
    "    local num1=$1\n    local num2=$2\n    local num3=$3\n    local median=0\n\n    if [ $num1 -gt $num2 ]; then\n        if [ $num1 -gt $num3 ]; then\n            if [ $num2 -gt $num3 ]; then\n                median=$num2\n            else\n                median=$num3\n            fi\n        else\n            median=$num1\n        fi\n    else\n        if [ $num2 -gt $num3 ]; then\n            if [ $num1 -gt $num3 ]; then\n                median=$num1\n            else\n                median=$num3\n            fi\n        else\n            median=$num2\n        fi\n    fi\n\n    echo $median",
    "    local num1=$1\n    local num2=$2\n    local num3=$3\n    local median=0\n\n    if [ $num1 -gt $num2 ]; then\n        if [ $num1 -gt $num3 ]; then\n            if [ $num2 -gt $num3 ]; then\n                median=$num2\n            else\n                median=$num3\n            fi\n        else\n            median=$num1\n        fi\n    else\n        if [ $num2 -gt $num3 ]; then\n            if [ $num1 -gt $num3 ]; then\n                median=$num1\n            else\n                median=$num3\n            fi\n        else\n            median=$num2\n        fi\n    fi\n\n    echo $median",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]\n  then\n    if [ $2 -gt $3 ]\n    then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]\n  then\n    if [ $1 -gt $3 ]\n    then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]\n  then\n    if [ $1 -gt $2 ]\n    then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    local -a array\n    array=($1 $2 $3)\n    echo \"${array[@]}\" | tr ' ' '\\n' | sort -n | sed -n '2p'",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"$2\"\n        elif [ $1 -gt $3 ]; then\n            echo \"$3\"\n        else\n            echo \"$1\"\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo \"$1\"\n        elif [ $2 -gt $3 ]; then\n            echo \"$3\"\n        else\n            echo \"$2\"\n        fi\n    fi",
    "  if [ $1 -ge $2 ]; then\n    if [ $2 -ge $3 ]; then\n      echo $2\n    elif [ $1 -ge $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -ge $3 ]; then\n      echo $1\n    elif [ $2 -ge $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [[ $1 -gt $2 ]]; then\n        if [[ $2 -gt $3 ]]; then\n            echo $2\n        elif [[ $1 -gt $3 ]]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [[ $1 -gt $3 ]]; then\n            echo $1\n        elif [[ $2 -gt $3 ]]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [[ $1 -gt $2 ]]; then\n        if [[ $2 -gt $3 ]]; then\n            echo $2\n        elif [[ $1 -gt $3 ]]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [[ $1 -gt $3 ]]; then\n            echo $1\n        elif [[ $2 -gt $3 ]]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  local -i a=$1 b=$2 c=$3\n  if [ $a -gt $b ]; then\n    if [ $b -gt $c ]; then\n      echo $b\n    elif [ $a -gt $c ]; then\n      echo $c\n    else\n      echo $a\n    fi\n  else\n    if [ $a -gt $c ]; then\n      echo $a\n    elif [ $b -gt $c ]; then\n      echo $c\n    else\n      echo $b\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  # sort the numbers and print the middle one\n  echo $(echo -e \"$1\\n$2\\n$3\" | sort -n | sed -n 2p)",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $1 -ge $2 ]; then\n        if [ $2 -ge $3 ]; then\n            echo $2\n        elif [ $1 -ge $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -ge $3 ]; then\n        echo $1\n    elif [ $2 -ge $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  local a=$1\n  local b=$2\n  local c=$3\n  local median=0\n  if [ $a -lt $b ]; then\n    if [ $b -lt $c ]; then\n      median=$b\n    elif [ $a -lt $c ]; then\n      median=$c\n    else\n      median=$a\n    fi\n  else\n    if [ $a -lt $c ]; then\n      median=$a\n    elif [ $b -lt $c ]; then\n      median=$c\n    else\n      median=$b\n    fi\n  fi\n  echo $median",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    # Sort the numbers from smallest to largest\n    local sorted_numbers=$(echo -e \"$1\\n$2\\n$3\" | sort -n)\n    # Get the middle number\n    local middle_number=$(echo \"$sorted_numbers\" | sed -n 2p)\n    echo \"$middle_number\"",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    # Check if all arguments are integers.\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        # Sort the numbers in ascending order.\n        sorted_numbers=$(echo -e \"$1\\n$2\\n$3\" | sort -n)\n        # Get the median number.\n        median_number=$(echo \"$sorted_numbers\" | sed -n 2p)\n        echo $median_number\n    else\n        echo \"Error: all arguments must be integers.\"\n    fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [[ $1 -gt $2 ]]; then\n        if [[ $2 -gt $3 ]]; then\n            echo $2\n        elif [[ $1 -gt $3 ]]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [[ $1 -gt $3 ]]; then\n            echo $1\n        elif [[ $2 -gt $3 ]]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -ge $2 ] && [ $1 -ge $3 ]; then\n    if [ $2 -ge $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -ge $1 ] && [ $2 -ge $3 ]; then\n    if [ $1 -ge $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -ge $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $1 -gt $3 ]; then\n      if [ $2 -gt $3 ]; then\n        echo $2\n      else\n        echo $3\n      fi\n    else\n      echo $1\n    fi\n  else\n    if [ $2 -gt $3 ]; then\n      if [ $1 -gt $3 ]; then\n        echo $1\n      else\n        echo $3\n      fi\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -ge $2 ]; then\n    if [ $2 -ge $3 ]; then\n      echo $2\n    elif [ $1 -ge $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -ge $3 ]; then\n    echo $1\n  elif [ $2 -ge $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  # Check if the number of arguments is correct\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_numbers <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  # Check if the arguments are integers\n  if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: all arguments must be integers\"\n    return 1\n  fi\n\n  # Sort the arguments\n  sorted_numbers=$(echo -e \"$1\\n$2\\n$3\" | sort -n)\n\n  # Get the median\n  median=$(echo \"$sorted_numbers\" | sed -n 2p)\n\n  # Print the median\n  echo \"The median of $1, $2, and $3 is $median\"",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [[ $1 -gt $2 && $1 -lt $3 ]]; then\n        echo $1\n    elif [[ $2 -gt $1 && $2 -lt $3 ]]; then\n        echo $2\n    elif [[ $3 -gt $1 && $3 -lt $2 ]]; then\n        echo $3\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -lt $3 ]; then\n      echo $1\n    elif [ $2 -lt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  # Write your code here\n  if [[ $1 -gt $2 ]]; then\n    if [[ $2 -gt $3 ]]; then\n      echo $2\n    elif [[ $1 -gt $3 ]]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [[ $1 -gt $3 ]]; then\n      echo $1\n    elif [[ $2 -gt $3 ]]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ \"$1\" -gt \"$2\" ]; then\n        if [ \"$2\" -gt \"$3\" ]; then\n            echo \"$2\"\n        elif [ \"$1\" -gt \"$3\" ]; then\n            echo \"$3\"\n        else\n            echo \"$1\"\n        fi\n    else\n        if [ \"$1\" -gt \"$3\" ]; then\n            echo \"$1\"\n        elif [ \"$2\" -gt \"$3\" ]; then\n            echo \"$3\"\n        else\n            echo \"$2\"\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -ge $2 ] && [ $1 -ge $3 ]; then\n        if [ $2 -ge $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -ge $1 ] && [ $2 -ge $3 ]; then\n        if [ $1 -ge $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -ge $1 ] && [ $3 -ge $2 ]; then\n        if [ $1 -ge $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  if [[ $1 -gt $2 ]]; then\n    if [[ $2 -gt $3 ]]; then\n      echo $2\n    elif [[ $1 -gt $3 ]]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [[ $1 -gt $3 ]]; then\n      echo $1\n    elif [[ $2 -gt $3 ]]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo $2\n    elif [ $1 -lt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -lt $3 ]; then\n    echo $1\n  elif [ $2 -lt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ]\n  then\n    if [ $2 -gt $3 ]\n    then\n      echo $2\n    elif [ $1 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]\n    then\n      echo $1\n    elif [ $2 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [[ $1 -gt $2 ]]; then\n    if [[ $2 -gt $3 ]]; then\n      echo $2\n    elif [[ $1 -gt $3 ]]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [[ $1 -gt $3 ]]; then\n      echo $1\n    elif [[ $2 -gt $3 ]]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  local first=$1\n  local second=$2\n  local third=$3\n\n  if [ $first -gt $second ]; then\n    if [ $first -gt $third ]; then\n      if [ $second -gt $third ]; then\n        echo $second\n      else\n        echo $third\n      fi\n    else\n      echo $first\n    fi\n  else\n    if [ $second -gt $third ]; then\n      if [ $first -gt $third ]; then\n        echo $first\n      else\n        echo $third\n      fi\n    else\n      echo $second\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        exit 1\n    fi\n\n    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $# -ne 3 ]; then\n    echo \"Usage: median_numbers <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  # Sort the numbers in ascending order\n  local -a sorted=($(echo \"$1 $2 $3\" | tr ' ' '\\n' | sort -n))\n  # Get the length of the sorted array\n  local length=${#sorted[@]}\n  # Get the middle number\n  local median=${sorted[$((length / 2))]}\n  # Print the median\n  echo \"$median\"",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -lt $3 ]; then\n        echo $1\n    elif [ $2 -lt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    echo $2\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]\n  then\n    if [ $2 -gt $3 ]\n    then\n      echo $2\n    elif [ $1 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]\n    then\n      echo $1\n    elif [ $2 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [[ $1 -lt $2 ]]; then\n        if [[ $2 -lt $3 ]]; then\n            echo $2\n        elif [[ $1 -lt $3 ]]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [[ $2 -lt $3 ]]; then\n        if [[ $1 -lt $3 ]]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        echo $2\n    fi",
    "  local -i a=$1\n  local -i b=$2\n  local -i c=$3\n  local -i median=0\n  if (( a > b )); then\n    if (( b > c )); then\n      median=$b\n    elif (( a > c )); then\n      median=$c\n    else\n      median=$a\n    fi\n  else\n    if (( a > c )); then\n      median=$a\n    elif (( b > c )); then\n      median=$c\n    else\n      median=$b\n    fi\n  fi\n  echo $median",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -lt $3 ]; then\n            echo $1\n        elif [ $2 -lt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: median_numbers <integer> <integer> <integer>\"\n        return 1\n    fi\n    local -i a=$1\n    local -i b=$2\n    local -i c=$3\n    local -i median=0\n    if [ $a -gt $b ]; then\n        if [ $b -gt $c ]; then\n            median=$b\n        elif [ $a -gt $c ]; then\n            median=$c\n        else\n            median=$a\n        fi\n    else\n        if [ $a -gt $c ]; then\n            median=$a\n        elif [ $b -gt $c ]; then\n            median=$c\n        else\n            median=$b\n        fi\n    fi\n    echo $median",
    "  local median=0\n  local nums=($1 $2 $3)\n  local nums_sorted=($(echo ${nums[@]} | tr \" \" \"\\n\" | sort -n))\n  local nums_len=${#nums_sorted[@]}\n  if (( nums_len % 2 == 0 )); then\n    median=$(echo \"scale=2; (${nums_sorted[$((nums_len/2))]} + ${nums_sorted[$((nums_len/2 - 1))]}) / 2\" | bc)\n  else\n    median=${nums_sorted[$((nums_len/2))]}\n  fi\n  echo $median",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -ge $2 ]; then\n        if [ $2 -ge $3 ]; then\n            echo $2\n        elif [ $1 -ge $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -ge $3 ]; then\n            echo $1\n        elif [ $2 -ge $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  # Check if all the arguments are integers\n  if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Please enter three integers.\"\n    return 1\n  fi\n  # Sort the numbers\n  local sorted_numbers=$(echo -e \"$1\\n$2\\n$3\" | sort -n)\n  # Get the median\n  local median=$(echo \"$sorted_numbers\" | sed -n 2p)\n  echo \"The median of $1, $2, and $3 is $median.\"",
    "  if [ $1 -le $2 ] && [ $2 -le $3 ]; then\n    echo $2\n  elif [ $2 -le $1 ] && [ $1 -le $3 ]; then\n    echo $1\n  elif [ $3 -le $1 ] && [ $1 -le $2 ]; then\n    echo $1\n  elif [ $3 -le $2 ] && [ $2 -le $1 ]; then\n    echo $2\n  elif [ $1 -le $3 ] && [ $3 -le $2 ]; then\n    echo $3\n  elif [ $2 -le $3 ] && [ $3 -le $1 ]; then\n    echo $3\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]\n  then\n    if [ $2 -gt $3 ]\n    then\n      echo $2\n    elif [ $1 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]\n    then\n      echo $1\n    elif [ $2 -gt $3 ]\n    then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -le $2 ] && [ $2 -le $3 ]; then\n        echo $2\n    elif [ $2 -le $1 ] && [ $1 -le $3 ]; then\n        echo $1\n    else\n        echo $3\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [[ $1 -gt $2 ]]; then\n        if [[ $2 -gt $3 ]]; then\n            echo $2\n        elif [[ $1 -gt $3 ]]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [[ $1 -gt $3 ]]; then\n            echo $1\n        elif [[ $2 -gt $3 ]]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -lt $3 ]; then\n        echo $1\n    elif [ $2 -lt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  # Sort the numbers\n  sorted_numbers=$(echo \"$1 $2 $3\" | tr ' ' '\\n' | sort -n)\n  # Get the second number\n  echo \"$sorted_numbers\" | head -2 | tail -1",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    local -i a=$1\n    local -i b=$2\n    local -i c=$3\n    local -i median=0\n\n    if (( a > b )); then\n        if (( a < c )); then\n            median=$a\n        elif (( b > c )); then\n            median=$b\n        else\n            median=$c\n        fi\n    else\n        if (( a > c )); then\n            median=$a\n        elif (( b < c )); then\n            median=$b\n        else\n            median=$c\n        fi\n    fi\n    echo $median",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    # Check if all arguments are integers\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Please enter three integers.\"\n        exit 1\n    fi\n\n    # Sort the numbers\n    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  # Check if all arguments are integers\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    # Sort the arguments\n    sorted=$(echo -e \"$1\\n$2\\n$3\" | sort -n)\n    # Get the median\n    median=$(echo \"$sorted\" | awk 'NR==2')\n    echo \"$median\"\n  else\n    echo \"Please provide 3 integers as arguments\"\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  local num1=$1\n  local num2=$2\n  local num3=$3\n\n  if [ $num1 -gt $num2 ]; then\n    if [ $num2 -gt $num3 ]; then\n      echo $num2\n    elif [ $num1 -gt $num3 ]; then\n      echo $num3\n    else\n      echo $num1\n    fi\n  else\n    if [ $num1 -gt $num3 ]; then\n      echo $num1\n    elif [ $num2 -gt $num3 ]; then\n      echo $num3\n    else\n      echo $num2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [[ $1 -gt $2 ]]; then\n    if [[ $2 -gt $3 ]]; then\n      echo $2\n    elif [[ $1 -gt $3 ]]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [[ $1 -gt $3 ]]; then\n    echo $1\n  elif [[ $2 -gt $3 ]]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [[ $1 -gt $2 ]]; then\n    if [[ $2 -gt $3 ]]; then\n      echo $2\n    elif [[ $1 -gt $3 ]]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [[ $1 -gt $3 ]]; then\n      echo $1\n    elif [[ $2 -gt $3 ]]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  local -a array\n  array=($1 $2 $3)\n  echo \"${array[@]}\" | tr ' ' '\\n' | sort -n | head -2 | tail -1",
    "  local -i a=$1\n  local -i b=$2\n  local -i c=$3\n  local -i median=0\n\n  if [ $a -gt $b ]; then\n    if [ $b -gt $c ]; then\n      median=$b\n    elif [ $a -gt $c ]; then\n      median=$c\n    else\n      median=$a\n    fi\n  else\n    if [ $a -gt $c ]; then\n      median=$a\n    elif [ $b -gt $c ]; then\n      median=$c\n    else\n      median=$b\n    fi\n  fi\n\n  echo $median",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    # Check if the arguments are integers\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]] || ! [[ \"$2\" =~ ^[0-9]+$ ]] || ! [[ \"$3\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: the arguments are not integers.\"\n        return 1\n    fi\n\n    # Check if the arguments are positive\n    if [ \"$1\" -lt 0 ] || [ \"$2\" -lt 0 ] || [ \"$3\" -lt 0 ]; then\n        echo \"Error: the arguments are not positive.\"\n        return 1\n    fi\n\n    # Check if the arguments are distinct\n    if [ \"$1\" -eq \"$2\" ] || [ \"$1\" -eq \"$3\" ] || [ \"$2\" -eq \"$3\" ]; then\n        echo \"Error: the arguments are not distinct.\"\n        return 1\n    fi\n\n    # Find the median\n    if [ \"$1\" -gt \"$2\" ] && [ \"$1\" -lt \"$3\" ]; then\n        echo \"$1\"\n    elif [ \"$1\" -gt \"$3\" ] && [ \"$1\" -lt \"$2\" ]; then\n        echo \"$1\"\n    elif [ \"$2\" -gt \"$1\" ] && [ \"$2\" -lt \"$3\" ]; then\n        echo \"$2\"\n    elif [ \"$2\" -gt \"$3\" ] && [ \"$2\" -lt \"$1\" ]; then\n        echo \"$2\"\n    elif [ \"$3\" -gt \"$1\" ] && [ \"$3\" -lt \"$2\" ]; then\n        echo \"$3\"\n    elif [ \"$3\" -gt \"$2\" ] && [ \"$3\" -lt \"$1\" ]; then\n        echo \"$3\"\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "  if [[ $1 -gt $2 ]]; then\n    if [[ $2 -gt $3 ]]; then\n      echo $2\n    elif [[ $1 -gt $3 ]]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [[ $1 -gt $3 ]]; then\n      echo $1\n    elif [[ $2 -gt $3 ]]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $2 -gt $3 ]\n        then\n            echo $2\n        elif [ $1 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]\n        then\n            echo $1\n        elif [ $2 -gt $3 ]\n        then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "  local -i a=$1\n  local -i b=$2\n  local -i c=$3\n\n  if [ $a -gt $b ]; then\n    if [ $a -gt $c ]; then\n      if [ $b -gt $c ]; then\n        echo $b\n      else\n        echo $c\n      fi\n    else\n      echo $a\n    fi\n  else\n    if [ $b -gt $c ]; then\n      if [ $a -gt $c ]; then\n        echo $a\n      else\n        echo $c\n      fi\n    else\n      echo $b\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  # Check if the number of arguments is 3.\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <number> <number> <number>\"\n    exit 1\n  fi\n\n  # Check if all arguments are integers.\n  if ! [[ \"$1\" =~ ^[0-9]+$ ]] || ! [[ \"$2\" =~ ^[0-9]+$ ]] || ! [[ \"$3\" =~ ^[0-9]+$ ]]; then\n    echo \"Error: all arguments must be integers.\"\n    exit 1\n  fi\n\n  # Find the median of the three numbers.\n  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -gt $3 ]; then\n    echo $1\n  elif [ $2 -gt $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "  if [ $1 -ge $2 ]; then\n    if [ $2 -ge $3 ]; then\n      echo $2\n    elif [ $1 -ge $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -ge $3 ]; then\n    echo $1\n  elif [ $2 -ge $3 ]; then\n    echo $3\n  else\n    echo $2\n  fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "  if [ $1 -gt $2 -a $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 -a $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 -a $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi",
    "  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    elif [ $1 -gt $3 ]; then\n      echo $3\n    else\n      echo $1\n    fi\n  else\n    if [ $1 -gt $3 ]; then\n      echo $1\n    elif [ $2 -gt $3 ]; then\n      echo $3\n    else\n      echo $2\n    fi\n  fi",
    "    if [ $1 -gt $2 ]\n    then\n        if [ $1 -gt $3 ]\n        then\n            if [ $2 -gt $3 ]\n            then\n                echo $2\n            else\n                echo $3\n            fi\n        else\n            echo $1\n        fi\n    else\n        if [ $2 -gt $3 ]\n        then\n            if [ $1 -gt $3 ]\n            then\n                echo $1\n            else\n                echo $3\n            fi\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi",
    "    if [ $1 -gt $2 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        elif [ $1 -gt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        elif [ $2 -gt $3 ]; then\n            echo $3\n        else\n            echo $2\n        fi\n    fi"
  ]
}
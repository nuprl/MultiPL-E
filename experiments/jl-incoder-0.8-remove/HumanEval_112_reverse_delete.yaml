name: HumanEval_112_reverse_delete
language: jl
prompt: "\"\"\"Task\n    We are given two strings s and c, you have to deleted all\
  \ the characters in s that are equal to any character in c\n    then check if the\
  \ result string is palindrome.\n    A string is called palindrome if it reads the\
  \ same backward as forward.\n    You should return a tuple containing the result\
  \ string and True/False for the check.\n    Example\n                \"\"\"\nfunction\
  \ reverse_delete(s::String, c::String)::Tuple{String, Bool} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"\
  abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"\
  acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\", true))\n\
  \t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"a\"\
  , \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
  , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
  @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
  , \"mia\") == (\"\", true))\nend\n"
completions: []
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while b != 0 {\n        let temp = a % b;\n\
    \        a = b;\n        b = temp;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let abs_a\
    \ = if a < 0 { -a } else { a };\n    let abs_b = if b < 0 { -b } else { b };\n\
    \    // Iterate until we find the answer\n    for divisor in abs_b..abs_a + 1\
    \ {\n        if divisor == 0 {\n            continue;\n        }\n        if abs_a\
    \ % divisor == 0 && abs_b % divisor == 0 {\n            return divisor;\n    \
    \    }\n    }\n    // Should never happen\n    panic!(\"GCD not found\");\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''GCD not found'', /tmp/tmp4ztv0bv5.rs:19:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let a =\
    \ a.abs();\n    let b = b.abs();\n    let mut c = a;\n    let mut d = b;\n   \
    \ while c != 0 && d != 0 {\n        if c > d {\n            c %= d;\n        }\
    \ else {\n            d %= c;\n        }\n    }\n    c + d\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    a.abs().gcd(&b.abs())\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp6pf4oqfo.rs:7:13\n  |\n7 |     a.abs().gcd(&b.abs())\n \
    \ |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n       \
    \ b = a % b;\n        a = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while b != 0 {\n        let c = a % b;\n   \
    \     a = b;\n        b = c;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n       \
    \ b = a % b;\n        a = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ c = b;\n    let mut a = a;\n    let mut b = b;\n    while a != 0 {\n       \
    \ c = a;\n        a = b % a;\n        b = c;\n    }\n    return b;\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while b != 0 {\n        let temp = a % b;\n\
    \        a = b;\n        b = temp;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822427

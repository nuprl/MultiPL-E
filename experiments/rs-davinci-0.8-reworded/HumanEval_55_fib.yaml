name: HumanEval_55_fib
language: rs
prompt: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
  /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
  \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n  \
  \  assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
completions: ["    if n <= 1 {\n        n\n    } else {\n        fib(n - 1) + fib(n\
    \ - 2)\n    }", "    if n == 0 {\n        0\n    } else if n == 1 {\n        1\n\
    \    } else {\n        fib(n - 1) + fib(n - 2)\n    }", "    if n <= 1 {\n   \
    \     n\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }", "    if n <= 1\
    \ {\n        return n;\n    }\n    let mut prev = 0;\n    let mut curr = 1;\n\
    \    for _ in 1..n {\n        let new = prev + curr;\n        prev = curr;\n \
    \       curr = new;\n    }\n    curr", "    if n <= 2 {\n        return 1;\n \
    \   }\n    fib(n - 1) + fib(n - 2)", "    if n <= 1 {\n        return n;\n   \
    \ }\n    fib(n - 1) + fib(n - 2)", '    fib_iter(1, 0, n)', "    if n <= 2 {\n\
    \        return 1;\n    }\n    fib(n - 1) + fib(n - 2)", "    if n <= 1 {\n  \
    \      n\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }", "    // F_0 =\
    \ 0\n    // F_1 = 1\n    // F_n = F_{n-1} + F_{n-2}\n    // don't forget about\
    \ recursion\n    if n == 0 {\n        0\n    } else if n == 1 {\n        1\n \
    \   } else {\n        fib(n - 1) + fib(n - 2)\n    }", "    match n {\n      \
    \  0 => 0,\n        1 => 1,\n        _ => fib(n - 1) + fib(n - 2),\n    }", " \
    \   match n {\n        0 => 0,\n        1 => 1,\n        _ => fib(n - 1) + fib(n\
    \ - 2),\n    }", "    let mut x: isize = 0;\n    let mut y: isize = 1;\n    let\
    \ mut tmp: isize;\n    let mut i: isize = 0;\n    while i < n {\n        tmp =\
    \ x;\n        x = y;\n        y = tmp + y;\n        i = i + 1;\n    }\n    return\
    \ x;", "    if n <= 1 {\n        n\n    } else {\n        fib(n - 1) + fib(n -\
    \ 2)\n    }", "    match n {\n        0 => 0,\n        1 => 1,\n        n => fib(n\
    \ - 1) + fib(n - 2),\n    }", "    if n <= 2 {\n        return 1;\n    }\n   \
    \ return fib(n - 1) + fib(n - 2);", "    if n == 0 {\n        return 0;\n    }\
    \ else if n == 1 {\n        return 1;\n    }\n    fib(n - 1) + fib(n - 2)", " \
    \   if n <= 1 {\n        return n;\n    }\n    fib(n - 1) + fib(n - 2)", "   \
    \ match n {\n        0 => 0,\n        1 => 1,\n        _ => fib(n - 1) + fib(n\
    \ - 2),\n    }", "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n\
    \        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);"]
stop_tokens:
- "\n}"

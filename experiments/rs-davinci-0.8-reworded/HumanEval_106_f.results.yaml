language: rs
name: HumanEval_106_f
results:
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // create a vector with a size of n\n    let\
    \ mut vec: Vec<isize> = Vec::with_capacity(n as usize);\n    // loop through to\
    \ n\n    for i in 1..n + 1 {\n        // if i is even, do factorial\n        if\
    \ i % 2 == 0 {\n            let mut factorial: isize = 1;\n            for j in\
    \ 1..i + 1 {\n                factorial *= j;\n            }\n            vec.push(factorial);\n\
    \        } else {\n            // else, do sum\n            let mut sum: isize\
    \ = 0;\n            for j in 1..i + 1 {\n                sum += j;\n         \
    \   }\n            vec.push(sum);\n        }\n    }\n    vec\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_n(i));\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpbt9rxjxp.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_n` in this\
    \ scope\n  --> /tmp/tmpbt9rxjxp.rs:15:20\n   |\n15 |             v.push(sum_n(i));\n\
    \   |                    ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_of_numbers(i));\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpjh1v1osk.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpjh1v1osk.rs:15:25\n   |\n15 |             result.push(sum_of_numbers(i));\n\
    \   |                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(i * (i - 1));\n        }\
    \ else {\n            v.push(i * (i + 1) / 2);\n        }\n    }\n    v\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 12, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpbsvb6uj3.rs:23:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for x in 1..n + 1 {\n        if x % 2 == 0 {\n            result.push(factoriel(x))\n\
    \        } else {\n            result.push(sum(x))\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factoriel` in this scope\n  --> /tmp/tmp9f5neepa.rs:13:25\n\
    \   |\n13 |             result.push(factoriel(x))\n   |                      \
    \   ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum`\
    \ in this scope\n  --> /tmp/tmp9f5neepa.rs:15:25\n   |\n15 |             result.push(sum(x))\n\
    \   |                         ^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).collect::<Vec<isize>>().iter().map(|i|\
    \ {\n        if *i % 2 == 0 {\n            (1..*i + 1).fold(1, |acc, x| acc *\
    \ x)\n        } else {\n            (1..*i + 1).fold(0, |acc, x| acc + x)\n  \
    \      }\n    }).collect()\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut i = 1;\n\
    \    while i <= n {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n\
    \        } else {\n            v.push(sum_to(i));\n        }\n        i += 1;\n\
    \    }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpt34vv525.rs:14:20\n\
    \   |\n14 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_to` in this\
    \ scope\n  --> /tmp/tmpt34vv525.rs:16:20\n   |\n16 |             v.push(sum_to(i));\n\
    \   |                    ^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| {\n        if x % 2 ==\
    \ 0 {\n            (1..=x).product()\n        } else {\n            (1..=x).sum()\n\
    \        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        let mut j = i;\n        let mut s = 1;\n        while j > 1 {\n \
    \           s *= j;\n            j -= 1;\n        }\n        v.push(i);\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmp94fe6spx.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_of_numbers(i));\n        }\n    }\n    v\n}\n\
    \nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2,\
    \ 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmphf6hg7lt.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmphf6hg7lt.rs:15:20\n   |\n15 |             v.push(sum_of_numbers(i));\n\
    \   |                    ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ret = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            ret.push(factorial(i));\n      \
    \  } else {\n            ret.push(sum_of_1toi(i));\n        }\n    }\n    ret\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpu77abrrc.rs:13:22\n\
    \   |\n13 |             ret.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_1toi`\
    \ in this scope\n  --> /tmp/tmpu77abrrc.rs:15:22\n   |\n15 |             ret.push(sum_of_1toi(i));\n\
    \   |                      ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut new_vec = Vec::new();\n    for i in\
    \ 1..n+1 {\n        let mut factorial: isize = 1;\n        if i % 2 == 0 {\n \
    \           for j in 1..i+1 {\n                factorial *= j;\n            }\n\
    \            new_vec.push(factorial);\n        } else {\n            for j in\
    \ 1..i+1 {\n                factorial += j;\n            }\n            new_vec.push(factorial);\n\
    \        }\n    }\n    new_vec\n}\n\nfn main() {\n    let candidate = f;\n   \
    \ assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 2, 7, 24, 16]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpa0ddr04y.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    if n <= 0 {\n        return vec![];\n    }\n\
    \    (1..=n).map(|x| {\n        if x % 2 == 0 {\n            (1..=x).fold(1, |acc,\
    \ y| acc * y)\n        } else {\n            (1..=x).sum()\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ret: Vec<isize> = Vec::new();\n  \
    \  for i in 1..=n {\n        let mut sum = 0;\n        for j in 1..=i {\n    \
    \        sum += j;\n        }\n        ret.push(if i % 2 == 0 { factorial(i) }\
    \ else { sum });\n    }\n    ret\n}\n\nfn main() {\n    let candidate = f;\n \
    \   assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp18618ssp.rs:16:34\n\
    \   |\n16 |         ret.push(if i % 2 == 0 { factorial(i) } else { sum });\n \
    \  |                                  ^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut r = Vec::new();\n    let mut i = 1;\n\
    \    while i <= n {\n        if i % 2 == 0 {\n            r.push(factorial(i));\n\
    \        } else {\n            r.push(sum_num(i));\n        }\n        i += 1;\n\
    \    }\n    r\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp3g3fw9jc.rs:14:20\n\
    \   |\n14 |             r.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_num` in this\
    \ scope\n  --> /tmp/tmp3g3fw9jc.rs:16:20\n   |\n16 |             r.push(sum_num(i));\n\
    \   |                    ^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { sum_to(i) }).collect()\n}\n\nfn main() {\n    let candidate = f;\n\
    \    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp15rzoiot.rs:10:37\n\
    \   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else { sum_to(i)\
    \ }).collect()\n   |                                     ^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `sum_to` in this scope\n  -->\
    \ /tmp/tmp15rzoiot.rs:10:59\n   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { sum_to(i) }).collect()\n   |                                      \
    \                     ^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    let mut sum\
    \ = 0;\n    for i in 1..n+1 {\n        if i % 2 == 0 {\n            let mut factorial\
    \ = 1;\n            for k in 1..i+1 {\n                factorial *= k;\n     \
    \       }\n            vec.push(factorial);\n        } else {\n            sum\
    \ += i;\n            vec.push(sum);\n        }\n    }\n    vec\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 4, 24, 9]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpjtu3b4wp.rs:29:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // TODO\n    unimplemented!()\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpyfdhv4o6.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i as usize));\n\
    \        } else {\n            result.push(sum_of_numbers(i as usize));\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpb46saiaz.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i as usize));\n   |            \
    \             ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_of_numbers` in this scope\n  --> /tmp/tmpb46saiaz.rs:15:25\n   |\n15 |\
    \             result.push(sum_of_numbers(i as usize));\n   |                 \
    \        ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { i * (i + 1) / 2 }).collect()\n}\n\nfn main() {\n    let candidate =\
    \ f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp2rn41c29.rs:10:37\n\
    \   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else { i * (i +\
    \ 1) / 2 }).collect()\n   |                                     ^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|x| if x % 2 == 0 { (1..x).fold(1,\
    \ |a,b| a*b) } else { (1..x+1).fold(0, |a,b| a+b) }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 6, 6, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmp0cvngnq6.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_of_numbers(i));\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpjh1v1osk.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpjh1v1osk.rs:15:25\n   |\n15 |             result.push(sum_of_numbers(i));\n\
    \   |                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for x in 1..n+1\
    \ {\n        if x % 2 == 0 {\n            v.push(fac(x));\n        } else {\n\
    \            v.push(sum(x));\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fac` in this scope\n  --> /tmp/tmpsg9zd3je.rs:13:20\n\
    \   |\n13 |             v.push(fac(x));\n   |                    ^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum` in this scope\n  -->\
    \ /tmp/tmpsg9zd3je.rs:15:20\n   |\n15 |             v.push(sum(x));\n   |    \
    \                ^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // Write your code here\n    let mut vec =\
    \ Vec::new();\n    for i in 1..n + 1 {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n\
    \        } else {\n            vec.push(sum_numbers(i));\n        }\n    }\n \
    \   vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpt69zpsey.rs:14:22\n\
    \   |\n14 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmpt69zpsey.rs:16:22\n   |\n16 |             vec.push(sum_numbers(i));\n\
    \   |                      ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n + 1 {\n        if i % 2 == 0 {\n            result.push(fac(i as u64));\n\
    \        } else {\n            result.push(sum(i));\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fac` in this scope\n  --> /tmp/tmpoxewgnda.rs:13:25\n\
    \   |\n13 |             result.push(fac(i as u64));\n   |                    \
    \     ^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum`\
    \ in this scope\n  --> /tmp/tmpoxewgnda.rs:15:25\n   |\n15 |             result.push(sum(i));\n\
    \   |                         ^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        } else\
    \ {\n            v.push(sum_until(i));\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpes1sl2ux.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_until` in\
    \ this scope\n  --> /tmp/tmpes1sl2ux.rs:15:20\n   |\n15 |             v.push(sum_until(i));\n\
    \   |                    ^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(sum_numbers(i));\n        }\n    }\n    vec\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpfmafw62_.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmpfmafw62_.rs:15:22\n   |\n15 |             vec.push(sum_numbers(i));\n\
    \   |                      ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_from_1_to_n(i));\n        }\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp3ztmbn2t.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_from_1_to_n`\
    \ in this scope\n  --> /tmp/tmp3ztmbn2t.rs:15:25\n   |\n15 |             result.push(sum_from_1_to_n(i));\n\
    \   |                         ^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|x| if x % 2 == 0 { factorial(x)\
    \ } else { sum_numbers(x) }).collect()\n}\n\nfn main() {\n    let candidate =\
    \ f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9721lf5a.rs:10:37\n\
    \   |\n10 |     (1..=n).map(|x| if x % 2 == 0 { factorial(x) } else { sum_numbers(x)\
    \ }).collect()\n   |                                     ^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `sum_numbers` in this scope\n\
    \  --> /tmp/tmp9721lf5a.rs:10:59\n   |\n10 |     (1..=n).map(|x| if x % 2 == 0\
    \ { factorial(x) } else { sum_numbers(x) }).collect()\n   |                  \
    \                                         ^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        v.push(if i % 2 == 0 {\n            (1..i + 1).fold(1, |a, b|\
    \ a * b)\n        } else {\n            (1..i + 1).fold(0, |a, b| a + b)\n   \
    \     });\n    }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| match x % 2 {\n       \
    \ 0 => (1..x + 1).fold(1, |acc, x| acc * x),\n        _ => (1..x + 1).fold(0,\
    \ |acc, x| acc + x),\n    }).collect()\n}\n\nfn main() {\n    let candidate =\
    \ f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n  let mut v = Vec::new();\n  for i in 1..n + 1\
    \ {\n    v.push(if i % 2 == 0 {\n      let mut res = 1;\n      for j in 1..i +\
    \ 1 {\n        res *= j;\n      }\n      res\n    } else {\n      let mut res\
    \ = 0;\n      for j in 1..i + 1 {\n        res += j;\n      }\n      res\n   \
    \ });\n  }\n  v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in 1..n+1\
    \ {\n        let mut prod = 1;\n        if i % 2 == 0 {\n            for j in\
    \ 1..i+1 {\n                prod *= j;\n            }\n            res.push(prod);\n\
    \        } else {\n            for j in 1..i+1 {\n                prod += j;\n\
    \            }\n            res.push(prod);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 2, 7, 24, 16]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpf2bidh8r.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            res.push(factorial(i));\n      \
    \  } else {\n            res.push(sum_of_numbers(i));\n        }\n    }\n    res\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpr1dyfmxr.rs:13:22\n\
    \   |\n13 |             res.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpr1dyfmxr.rs:15:22\n   |\n15 |             res.push(sum_of_numbers(i));\n\
    \   |                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(mult(i));\n        } else {\n\
    \            v.push(sum(i));\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `mult` in this scope\n  --> /tmp/tmpnph7ca8e.rs:13:20\n\
    \   |\n13 |             v.push(mult(i));\n   |                    ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum` in this scope\n  -->\
    \ /tmp/tmpnph7ca8e.rs:15:20\n   |\n15 |             v.push(sum(i));\n   |    \
    \                ^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        } else\
    \ {\n            v.push(sum_to(i));\n        }\n    }\n    v\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpbgcd3uz9.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_to` in this\
    \ scope\n  --> /tmp/tmpbgcd3uz9.rs:15:20\n   |\n15 |             v.push(sum_to(i));\n\
    \   |                    ^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            res.push(i);\n        } else {\n   \
    \         res.push(1..=i).sum();\n        }\n    }\n    res\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1ytcemie.rs:15:22\n   |\n\
    15 |             res.push(1..=i).sum();\n   |                      ^^^^^ expected\
    \ `isize`, found struct `RangeInclusive`\n   |\n   = note: expected type `isize`\n\
    \            found struct `RangeInclusive<isize>`\n\nerror[E0599]: `()` is not\
    \ an iterator\n  --> /tmp/tmp1ytcemie.rs:15:29\n   |\n15 |             res.push(1..=i).sum();\n\
    \   |                             ^^^ `()` is not an iterator\n   |\n   = note:\
    \ the following trait bounds were not satisfied:\n           `(): Iterator`\n\
    \           which is required by `&mut (): Iterator`\n\nerror: aborting due to\
    \ 2 previous errors\n\nSome errors have detailed explanations: E0308, E0599.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut a = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            a.push(factorial(i));\n        }\
    \ else {\n            a.push(sum_of_num(i));\n        }\n    }\n    a\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpcz36wp4b.rs:13:20\n\
    \   |\n13 |             a.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_num` in\
    \ this scope\n  --> /tmp/tmpcz36wp4b.rs:15:20\n   |\n15 |             a.push(sum_of_num(i));\n\
    \   |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        v.push(match i % 2 {\n            0 => {\n                let mut\
    \ s = 1;\n                for j in 1..i+1 {\n                    s *= j;\n   \
    \             }\n                s\n            },\n            _ => {\n     \
    \           let mut s = 0;\n                for j in 1..i+1 {\n              \
    \      s += j;\n                }\n                s\n            }\n        });\n\
    \    }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { sum_to(i) }).collect()\n}\n\nfn main() {\n    let candidate = f;\n\
    \    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp15rzoiot.rs:10:37\n\
    \   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else { sum_to(i)\
    \ }).collect()\n   |                                     ^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `sum_to` in this scope\n  -->\
    \ /tmp/tmp15rzoiot.rs:10:59\n   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { sum_to(i) }).collect()\n   |                                      \
    \                     ^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut answer: Vec<isize> = Vec::new();\n\
    \    for i in 1..n + 1 {\n        if i % 2 == 0 {\n            answer.push(factorial(i));\n\
    \        } else {\n            answer.push(sum_to(i));\n        }\n    }\n   \
    \ answer\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp_9nnz72l.rs:13:25\n\
    \   |\n13 |             answer.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmp_9nnz72l.rs:15:25\n   |\n15 |             answer.push(sum_to(i));\n\
    \   |                         ^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n + 1 {\n        let mut factorial = 1;\n        for x in 1..i + 1 {\n  \
    \          factorial *= x;\n        }\n        if i % 2 == 0 {\n            result.push(factorial);\n\
    \        } else {\n            result.push(i * (i + 1) / 2);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(1..i + 1).sum();\n        }\n    }\n    v\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpr6fc_smh.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0599]: `()` is not an iterator\n  --> /tmp/tmpr6fc_smh.rs:15:30\n\
    \   |\n15 |             v.push(1..i + 1).sum();\n   |                        \
    \      ^^^ `()` is not an iterator\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `(): Iterator`\n           which is required\
    \ by `&mut (): Iterator`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpr6fc_smh.rs:18:5\n\
    \   |\n9  | fn f(n: isize) -> Vec<isize> {\n   |                   ----------\
    \ expected `Vec<isize>` because of return type\n...\n18 |     v\n   |     ^ expected\
    \ `isize`, found struct `std::ops::Range`\n   |\n   = note: expected struct `Vec<isize>`\n\
    \              found struct `Vec<std::ops::Range<isize>>`\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0425,\
    \ E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(sum_of_numbers(i));\n        }\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpccsvlagq.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpccsvlagq.rs:15:22\n   |\n15 |             vec.push(sum_of_numbers(i));\n\
    \   |                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_from_1_to_n(i));\n        }\n    }\n    v\n}\n\
    \nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2,\
    \ 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpd7_x3gab.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_from_1_to_n`\
    \ in this scope\n  --> /tmp/tmpd7_x3gab.rs:15:20\n   |\n15 |             v.push(sum_from_1_to_n(i));\n\
    \   |                    ^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| if i % 2 == 0 {\n        (1..=i).fold(1,\
    \ |acc, x| acc * x)\n    } else {\n        (1..=i).sum()\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2,\
    \ 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { sum_numbers(i) }).collect()\n}\n\nfn main() {\n    let candidate =\
    \ f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp80q6phui.rs:10:38\n\
    \   |\n10 |     (1..n+1).map(|i| if i % 2 == 0 { factorial(i) } else { sum_numbers(i)\
    \ }).collect()\n   |                                      ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum_numbers` in this scope\n\
    \  --> /tmp/tmp80q6phui.rs:10:60\n   |\n10 |     (1..n+1).map(|i| if i % 2 ==\
    \ 0 { factorial(i) } else { sum_numbers(i) }).collect()\n   |                \
    \                                            ^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|i| if i % 2 == 0 { (1..i +\
    \ 1).product() } else { (1..i + 1).sum() }).collect()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec: Vec<isize> = Vec::new();\n  \
    \  for i in 1..n + 1 {\n        if i % 2 == 0 {\n            vec.push(factorial(i\
    \ as usize));\n        } else {\n            vec.push(sum_to(i as usize));\n \
    \       }\n    }\n    vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpre5gkrk7.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i as usize));\n   |               \
    \       ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_to` in this scope\n  --> /tmp/tmpre5gkrk7.rs:15:22\n   |\n15 |        \
    \     vec.push(sum_to(i as usize));\n   |                      ^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|i| if i % 2 == 0 {\n     \
    \   (1..i + 1).fold(1, |acc, item| acc * item)\n    } else {\n        (1..i +\
    \ 1).fold(0, |acc, item| acc + item)\n    }).collect()\n}\n\nfn main() {\n   \
    \ let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n \
    \   assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i as usize));\n\
    \        } else {\n            v.push(sum_to(i as usize));\n        }\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpavp8io_v.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i as usize));\n   |                 \
    \   ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmpavp8io_v.rs:15:20\n   |\n15 |             v.push(sum_to(i\
    \ as usize));\n   |                    ^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else {sum_numbers(i)}).collect()\n}\n\nfn main() {\n    let candidate = f;\n\
    \    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp6ik4nnob.rs:10:37\n\
    \   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else {sum_numbers(i)}).collect()\n\
    \   |                                     ^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find function `sum_numbers` in this scope\n  --> /tmp/tmp6ik4nnob.rs:10:58\n\
    \   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else {sum_numbers(i)}).collect()\n\
    \   |                                                          ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_range(1, i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmyxifcpp.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_range`\
    \ in this scope\n  --> /tmp/tmpmyxifcpp.rs:15:25\n   |\n15 |             result.push(sum_range(1,\
    \ i));\n   |                         ^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec: Vec<isize> = Vec::new();\n  \
    \  for i in 1..=n {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n\
    \        } else {\n            vec.push(sum_n(i));\n        }\n    }\n    vec\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmppne2mptl.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_n` in this\
    \ scope\n  --> /tmp/tmppne2mptl.rs:15:22\n   |\n15 |             vec.push(sum_n(i));\n\
    \   |                      ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            vec.push(i * (i - 1));\n        } else\
    \ {\n            vec.push((i * (i + 1)) / 2);\n        }\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 12, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmp3p2vjf2b.rs:23:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // unimplemented!()\n    (1..n+1).map(|i|\
    \ if i % 2 == 0 { (1..i+1).fold(1, |x, y| x * y) } else { (1..i+1).sum() }).collect()\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut i = 1;\n\
    \    while i <= n {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n\
    \        } else {\n            v.push(sum_numbers(i));\n        }\n        i +=\
    \ 1;\n    }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp1infr1u1.rs:14:20\n\
    \   |\n14 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmp1infr1u1.rs:16:20\n   |\n16 |             v.push(sum_numbers(i));\n\
    \   |                    ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(sum_1_to_n(i));\n        }\n    }\n    vec\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp1_6egeos.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_1_to_n` in\
    \ this scope\n  --> /tmp/tmp1_6egeos.rs:15:22\n   |\n15 |             vec.push(sum_1_to_n(i));\n\
    \   |                      ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|x| x * 2).collect()\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 4, 6, 8, 10]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpjm0ky16w.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            result.push(get_factorial(i));\n\
    \        } else {\n            result.push(get_sum(i));\n        }\n    }\n  \
    \  result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_factorial` in this scope\n  -->\
    \ /tmp/tmp_611_mdl.rs:13:25\n   |\n13 |             result.push(get_factorial(i));\n\
    \   |                         ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `get_sum` in this scope\n  --> /tmp/tmp_611_mdl.rs:15:25\n\
    \   |\n15 |             result.push(get_sum(i));\n   |                       \
    \  ^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_to(i));\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpcjavi7l6.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmpcjavi7l6.rs:15:25\n   |\n15 |             result.push(sum_to(i));\n\
    \   |                         ^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        result.push(if i % 2 == 0 {\n            let mut product =\
    \ 1;\n            for j in 1..=i {\n                product *= j;\n          \
    \  }\n            product\n        } else {\n            (1..=i).sum()\n     \
    \   });\n    }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..n + 1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_to(i));\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpfpmctud8.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmpfpmctud8.rs:15:25\n   |\n15 |             result.push(sum_to(i));\n\
    \   |                         ^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vector = Vec::new();\n    for i in\
    \ 1..n+1 {\n        if i % 2 == 0 {\n            vector.push(factorial(i));\n\
    \        } else {\n            vector.push(summation(i));\n        }\n    }\n\
    \    vector\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpm00v3bgg.rs:13:25\n\
    \   |\n13 |             vector.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `summation`\
    \ in this scope\n  --> /tmp/tmpm00v3bgg.rs:15:25\n   |\n15 |             vector.push(summation(i));\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(1..i + 1).product();\n  \
    \      } else {\n            v.push((1..i + 1).sum());\n        }\n    }\n   \
    \ v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n  --> /tmp/tmptpq3jwhr.rs:13:30\n\
    \   |\n13 |             v.push(1..i + 1).product();\n   |                    \
    \          ^^^^^^^ `()` is not an iterator\n   |\n   = note: the following trait\
    \ bounds were not satisfied:\n           `(): Iterator`\n           which is required\
    \ by `&mut (): Iterator`\n\nerror[E0277]: the trait bound `std::ops::Range<isize>:\
    \ Sum<isize>` is not satisfied\n    --> /tmp/tmptpq3jwhr.rs:15:31\n     |\n15\
    \   |             v.push((1..i + 1).sum());\n     |                          \
    \     ^^^ the trait `Sum<isize>` is not implemented for `std::ops::Range<isize>`\n\
    \     |\n     = help: the following other types implement trait `Sum<A>`:\n  \
    \             <Duration as Sum<&'a Duration>>\n               <Duration as Sum>\n\
    \               <Option<T> as Sum<Option<U>>>\n               <Result<T, E> as\
    \ Sum<Result<U, E>>>\n               <Simd<f32, LANES> as Sum<&'a Simd<f32, LANES>>>\n\
    \               <Simd<f32, LANES> as Sum>\n               <Simd<f64, LANES> as\
    \ Sum<&'a Simd<f64, LANES>>>\n               <Simd<f64, LANES> as Sum>\n     \
    \        and 72 others\nnote: required by a bound in `std::iter::Iterator::sum`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmptpq3jwhr.rs:18:5\n   |\n9  | fn\
    \ f(n: isize) -> Vec<isize> {\n   |                   ---------- expected `Vec<isize>`\
    \ because of return type\n...\n18 |     v\n   |     ^ expected `isize`, found\
    \ struct `std::ops::Range`\n   |\n   = note: expected struct `Vec<isize>`\n  \
    \            found struct `Vec<std::ops::Range<isize>>`\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0308,\
    \ E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_of_numbers(i));\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp094lgnle.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmp094lgnle.rs:15:25\n   |\n15 |             result.push(sum_of_numbers(i));\n\
    \   |                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut fact\
    \ = 1;\n    for i in 1..n+1 {\n        if i % 2 == 0 {\n            res.push(fact);\n\
    \            fact *= i;\n        } else {\n            res.push(i * (i + 1) /\
    \ 2);\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = f;\n \
    \   assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 6, 2, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpbnj7nv8i.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    vec![0; n as usize]\n}\n\nfn main() {\n  \
    \  let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 0, 0, 0, 0]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmp8ht5cia8.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        } else\
    \ {\n            v.push(sum_of_numbers(i));\n        }\n    }\n    v\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp75uwhxf_.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmp75uwhxf_.rs:15:20\n   |\n15 |             v.push(sum_of_numbers(i));\n\
    \   |                    ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            vec.push(factorial(i as usize));\n\
    \        } else {\n            vec.push(sum_n(i as usize));\n        }\n    }\n\
    \    vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyin0v8dp.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i as usize));\n   |               \
    \       ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_n` in this scope\n  --> /tmp/tmpyin0v8dp.rs:15:22\n   |\n15 |         \
    \    vec.push(sum_n(i as usize));\n   |                      ^^^^^ not found in\
    \ this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(std::iter::successors(Some(1),\
    \ |&x| Some(x + 1)).take(i as usize).product());\n        } else {\n         \
    \   v.push(std::iter::successors(Some(1), |&x| Some(x + 1)).take(i as usize).sum());\n\
    \        }\n    }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut output = Vec::new();\n    for x in\
    \ 1..n + 1 {\n        output.push(if x % 2 == 0 { factorial(x) } else { sum_numbers(x)\
    \ });\n    }\n    output\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp4w5y68_a.rs:12:37\n\
    \   |\n12 |         output.push(if x % 2 == 0 { factorial(x) } else { sum_numbers(x)\
    \ });\n   |                                     ^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `sum_numbers` in this scope\n  --> /tmp/tmp4w5y68_a.rs:12:59\n\
    \   |\n12 |         output.push(if x % 2 == 0 { factorial(x) } else { sum_numbers(x)\
    \ });\n   |                                                           ^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_of_numbers(i));\n        }\n    }\n    v\n}\n\
    \nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2,\
    \ 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmphf6hg7lt.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmphf6hg7lt.rs:15:20\n   |\n15 |             v.push(sum_of_numbers(i));\n\
    \   |                    ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut fact: Vec<isize> = Vec::new();\n \
    \   for i in 1..n + 1 {\n        if i % 2 == 0 {\n            let mut factorial:\
    \ isize = 1;\n            for n in 1..i + 1 {\n                factorial *= n;\n\
    \            }\n            fact.push(factorial);\n        } else {\n        \
    \    let mut summation: isize = 0;\n            for n in 1..i + 1 {\n        \
    \        summation += n;\n            }\n            fact.push(summation);\n \
    \       }\n    }\n    fact\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    vec![1, 2, 6, 24, 15]\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 24, 15]`,\n right: `[1, 2, 6, 24, 15, 720, 28]`', /tmp/tmpp31a19ay.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            res.push(factorial(i));\n        } else\
    \ {\n            res.push(sum_numbers(i));\n        }\n    }\n    res\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpl97ex2rh.rs:13:22\n\
    \   |\n13 |             res.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmpl97ex2rh.rs:15:22\n   |\n15 |             res.push(sum_numbers(i));\n\
    \   |                      ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sigma(i));\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmprsp05ih6.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sigma` in this\
    \ scope\n  --> /tmp/tmprsp05ih6.rs:15:20\n   |\n15 |             v.push(sigma(i));\n\
    \   |                    ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i as u64));\n   \
    \     } else {\n            vec.push(sum_numbers(i));\n        }\n    }\n    vec\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmarcltw_.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i as u64));\n   |                 \
    \     ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_numbers` in this scope\n  --> /tmp/tmpmarcltw_.rs:15:22\n   |\n15 |   \
    \          vec.push(sum_numbers(i));\n   |                      ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|x| if x % 2 == 0 { (1..x+1).fold(1,\
    \ |product, x| product * x) } else { (1..x+1).fold(0, |sum, x| sum + x) }).collect()\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|i| if i % 2 == 0 { (1..i+1).fold(1,\
    \ |a,b| a*b) } else { (1..i+1).sum() }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_of_nums(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpji1jug6n.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_nums`\
    \ in this scope\n  --> /tmp/tmpji1jug6n.rs:15:25\n   |\n15 |             result.push(sum_of_nums(i));\n\
    \   |                         ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(sum_of_i(i));\n        }\n    }\n    vec\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp7jveex3f.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_i` in\
    \ this scope\n  --> /tmp/tmp7jveex3f.rs:15:22\n   |\n15 |             vec.push(sum_of_i(i));\n\
    \   |                      ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    vec![1, 2, 6, 24, 15]\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 24, 15]`,\n right: `[1, 2, 6, 24, 15, 720, 28]`', /tmp/tmpp31a19ay.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n      \
    \  } else {\n            vec.push(sum_up_to(i));\n        }\n    }\n    vec\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp_lwwfj6u.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_up_to` in\
    \ this scope\n  --> /tmp/tmp_lwwfj6u.rs:15:22\n   |\n15 |             vec.push(sum_up_to(i));\n\
    \   |                      ^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(i*(i+1)/2);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp71t16np1.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            vec.push(factorial(i as usize));\n\
    \        } else {\n            vec.push(sum_number(i as usize));\n        }\n\
    \    }\n    vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpa7sp1e0s.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i as usize));\n   |               \
    \       ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_number` in this scope\n  --> /tmp/tmpa7sp1e0s.rs:15:22\n   |\n15 |    \
    \         vec.push(sum_number(i as usize));\n   |                      ^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(i.factorial());\n        } else\
    \ {\n            v.push(i * (i + 1) / 2);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `factorial` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmpmf9s2_7y.rs:13:22\n   |\n13 |             v.push(i.factorial());\n\
    \   |                      ^^^^^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|x| if x % 2 == 0 {\n        (1..=x).fold(1,\
    \ |acc, v| acc * v)\n    } else {\n        (1..=x).fold(0, |acc, v| acc + v)\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i\
    \ as isize));\n        } else {\n            result.push(sum_of_nums(i as isize));\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpshp8tssw.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i as isize));\n   |            \
    \             ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_of_nums` in this scope\n  --> /tmp/tmpshp8tssw.rs:15:25\n   |\n15 |   \
    \          result.push(sum_of_nums(i as isize));\n   |                       \
    \  ^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec: Vec<isize> = Vec::new();\n  \
    \  let mut i = 1;\n    while i <= n {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n\
    \        } else {\n            vec.push(sum_of_numbers(i));\n        }\n     \
    \   i += 1;\n    }\n    vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpd3x88eyq.rs:14:22\n\
    \   |\n14 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpd3x88eyq.rs:16:22\n   |\n16 |             vec.push(sum_of_numbers(i));\n\
    \   |                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| {\n        if x % 2 ==\
    \ 0 {\n            (1..x + 1).fold(1, |acc, x| acc * x)\n        } else {\n  \
    \          (1..x + 1).fold(0, |acc, x| acc + x)\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ret = Vec::new();\n    for i in 1..=n\
    \ {\n        let mut num = 1;\n        for x in 1..=i {\n            num *= x;\n\
    \        }\n        if i % 2 == 0 {\n            ret.push(num);\n        } else\
    \ {\n            ret.push(i * (i + 1) / 2);\n        }\n    }\n    ret\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut k =\
    \ 1;\n    while k <= n {\n        if k % 2 == 0 {\n            let mut mult =\
    \ 1;\n            let mut l = 1;\n            while l <= k {\n               \
    \ mult *= l;\n                l += 1;\n            }\n            res.push(mult);\n\
    \        } else {\n            let mut sum = 0;\n            let mut l = 1;\n\
    \            while l <= k {\n                sum += l;\n                l += 1;\n\
    \            }\n            res.push(sum);\n        }\n        k += 1;\n    }\n\
    \    res\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        } else\
    \ {\n            v.push(sum_of_numbers(i));\n        }\n    }\n    v\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpfcucx_zf.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpfcucx_zf.rs:15:20\n   |\n15 |             v.push(sum_of_numbers(i));\n\
    \   |                    ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // your code here\n    let mut result: Vec<isize>\
    \ = Vec::new();\n    for i in 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_1_to_i(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp_7x_ngmh.rs:14:25\n\
    \   |\n14 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_1_to_i`\
    \ in this scope\n  --> /tmp/tmp_7x_ngmh.rs:16:25\n   |\n16 |             result.push(sum_1_to_i(i));\n\
    \   |                         ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n \
    \       } else {\n            result.push(sum_of_nums(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp36zvspfl.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_nums`\
    \ in this scope\n  --> /tmp/tmp36zvspfl.rs:15:25\n   |\n15 |             result.push(sum_of_nums(i));\n\
    \   |                         ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut\
    \ factorial = 1;\n    for i in 1..n+1 {\n        if i % 2 == 0 {\n           \
    \ factorial *= i;\n            result.push(factorial);\n        } else {\n   \
    \         result.push(i * (i + 1) / 2);\n        }\n    }\n    result\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 8, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpuk2ngoek.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut f = vec![1];\n    let mut j = 1;\n\
    \    while j < n {\n        if j % 2 == 0 {\n            f.push(f[j as usize -\
    \ 1] * j);\n        } else {\n            f.push((j + 1) * j / 2);\n        }\n\
    \        j += 1;\n    }\n    f\n}\n\nfn main() {\n    let candidate = f;\n   \
    \ assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 2, 6, 24]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpgzp8ulzx.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // TODO: Write your code here\n    let mut\
    \ result = Vec::new();\n    for i in 1..n+1 {\n        if i % 2 == 0 {\n     \
    \       result.push(factorial(i));\n        } else {\n            result.push(sum_number(i));\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpjpk73tpo.rs:14:25\n\
    \   |\n14 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_number`\
    \ in this scope\n  --> /tmp/tmpjpk73tpo.rs:16:25\n   |\n16 |             result.push(sum_number(i));\n\
    \   |                         ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut out: Vec<isize> = Vec::new();\n  \
    \  for i in 1..n + 1 {\n        if i % 2 == 0 {\n            out.push(factorial(i));\n\
    \        } else {\n            out.push(sum_numbers(i));\n        }\n    }\n \
    \   out\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmprcl0f1es.rs:13:22\n\
    \   |\n13 |             out.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmprcl0f1es.rs:15:22\n   |\n15 |             out.push(sum_numbers(i));\n\
    \   |                      ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n  let mut vec: Vec<isize> = Vec::new();\n  for\
    \ i in 1..=n {\n    let mut value = 0;\n    if i % 2 == 0 {\n      value = 1;\n\
    \      for j in 1..=i {\n        value *= j;\n      }\n    } else {\n      for\
    \ j in 1..=i {\n        value += j;\n      }\n    }\n    vec.push(value);\n  }\n\
    \  vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n  unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpt0i43rcd.rs:10:3

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut output = Vec::new();\n    for i in\
    \ 1..=n {\n        let mut sum = 0;\n        let mut j = 1;\n        while j <=\
    \ i {\n            sum += j;\n            j += 1;\n        }\n        if i % 2\
    \ == 0 {\n            let mut factorial = 1;\n            let mut k = 1;\n   \
    \         while k <= i {\n                factorial *= k;\n                k +=\
    \ 1;\n            }\n            output.push(factorial);\n        } else {\n \
    \           output.push(sum);\n        }\n    }\n    output\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_1_to_n(i));\n        }\n    }\n    v\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyhyionp2.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_1_to_n` in\
    \ this scope\n  --> /tmp/tmpyhyionp2.rs:15:20\n   |\n15 |             v.push(sum_1_to_n(i));\n\
    \   |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // The code below breaks the input into slices\
    \ and applies the algorithm to each slice.\n    // This might be overkill for\
    \ a problem like this, but I like to do things like this\n    // as it may help\
    \ when working with bigger files or streams.\n    // Create slices.\n    let mut\
    \ start: isize = 1;\n    let mut end: isize = start + n;\n    let mut result:\
    \ Vec<isize> = Vec::new();\n    while start < end {\n        let slice: Vec<isize>\
    \ = (start..end).collect();\n        // Apply the algorithm to the slice.\n  \
    \      result.append(&mut f_slice(slice));\n        // Next slice.\n        start\
    \ = end;\n        end = start + n;\n    }\n    // Return the results.\n    result\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `f_slice` in this scope\n  --> /tmp/tmp63n1b2az.rs:20:28\n\
    \   |\n20 |         result.append(&mut f_slice(slice));\n   |                \
    \            ^^^^^^^ help: a local variable with a similar name exists: `slice`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| if x % 2 == 0 { (1..x +\
    \ 1).fold(1, |acc, x| acc * x) } else { (1..x + 1).sum() }).collect()\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ret = Vec::with_capacity(n as usize);\n\
    \    for i in 1..=n {\n        if i % 2 == 0 {\n            ret.push(factorial(i));\n\
    \        } else {\n            ret.push(sum_of_numbers(i));\n        }\n    }\n\
    \    ret\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmptyr_1bhv.rs:13:22\n\
    \   |\n13 |             ret.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmptyr_1bhv.rs:15:22\n   |\n15 |             ret.push(sum_of_numbers(i));\n\
    \   |                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_num(i));\n        }\n    }\n  \
    \  result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpfvxx292m.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_num`\
    \ in this scope\n  --> /tmp/tmpfvxx292m.rs:15:25\n   |\n15 |             result.push(sum_num(i));\n\
    \   |                         ^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..n+1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_of_numbers(i));\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpzj_yoxt9.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpzj_yoxt9.rs:15:25\n   |\n15 |             result.push(sum_of_numbers(i));\n\
    \   |                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut factorial = 1;\n    let mut vec =\
    \ Vec::new();\n    for i in 1..n+1 {\n        if i % 2 == 0 {\n            factorial\
    \ *= i;\n            vec.push(factorial);\n        } else {\n            vec.push(i\
    \ * (i + 1) / 2);\n        }\n    }\n    vec\n}\n\nfn main() {\n    let candidate\
    \ = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 8, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpjrpeu3n5.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i as usize));\n   \
    \     } else {\n            v.push(sum_to(i as usize));\n        }\n    }\n  \
    \  v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpqi0t2itm.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i as usize));\n   |                 \
    \   ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmpqi0t2itm.rs:15:20\n   |\n15 |             v.push(sum_to(i\
    \ as usize));\n   |                    ^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|x| {\n        if x % 2 == 0\
    \ {\n            (1..x+1).fold(1, |acc, x| acc * x)\n        } else {\n      \
    \      (1..x+1).fold(0, |acc, x| acc + x)\n        }\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| {\n        if x % 2 ==\
    \ 0 {\n            (1..x + 1).fold(1, |x, y| x * y)\n        } else {\n      \
    \      (1..x + 1).fold(0, |x, y| x + y)\n        }\n    }).collect()\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    vec![1, 2, 6, 24, 15]\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 24, 15]`,\n right: `[1, 2, 6, 24, 15, 720, 28]`', /tmp/tmpp31a19ay.rs:16:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n+1 {\n        let j = i as f64;\n        if j.is_sign_positive() && j.sin()\
    \ == 0.0 {\n            result.push(factorial(i));\n        } else {\n       \
    \     result.push(sum_of_numbers(i));\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmprhtrgggx.rs:14:25\n\
    \   |\n14 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmprhtrgggx.rs:16:25\n   |\n16 |             result.push(sum_of_numbers(i));\n\
    \   |                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        let mut j = i;\n        let mut fact = 1;\n        while j > 0 {\n\
    \            fact *= j;\n            j -= 1;\n        }\n        if i % 2 == 0\
    \ {\n            v.push(fact);\n        } else {\n            v.push(i*(i+1)/2);\n\
    \        }\n    }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let factorial = |i: isize| (1..=i).fold(1,\
    \ |a, b| a * b);\n    (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else { (1..=i).sum()\
    \ }).collect()\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| {\n        if i % 2 == 0 {\n\
    \            (1..=i).product()\n        } else {\n            (1..=i).sum()\n\
    \        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut fact: isize = 1;\n    let mut vec:\
    \ Vec<isize> = Vec::new();\n    for i in 1..=n {\n        if i % 2 == 0 {\n  \
    \          fact *= i;\n            vec.push(fact);\n        } else {\n       \
    \     vec.push(i * (i + 1) / 2);\n        }\n    }\n    vec\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 6, 8, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpj4elix_f.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            res.push(factorial(i));\n        } else\
    \ {\n            res.push(sum_to(i));\n        }\n    }\n    res\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmppyr9sk2b.rs:13:22\n\
    \   |\n13 |             res.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_to` in this\
    \ scope\n  --> /tmp/tmppyr9sk2b.rs:15:22\n   |\n15 |             res.push(sum_to(i));\n\
    \   |                      ^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(i);\n        }\n    }\n    vec\n}\n\nfn main() {\n \
    \   let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpj3u_ahc6.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    let mut i = 1;\n    while i <= n {\n        if i % 2 == 0 {\n           \
    \ let mut factorial = 1;\n            let mut j = 1;\n            while j <= i\
    \ {\n                factorial *= j;\n                j += 1;\n            }\n\
    \            result.push(factorial);\n        } else {\n            let mut sum\
    \ = 0;\n            let mut j = 1;\n            while j <= i {\n             \
    \   sum += j;\n                j += 1;\n            }\n            result.push(sum);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut output = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            output.push(factorial(i as u32));\n\
    \        } else {\n            output.push(sum_from_1_to_i(i));\n        }\n \
    \   }\n    output\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp1cqx6woc.rs:13:25\n\
    \   |\n13 |             output.push(factorial(i as u32));\n   |              \
    \           ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_from_1_to_i` in this scope\n  --> /tmp/tmp1cqx6woc.rs:15:25\n   |\n15 |\
    \             output.push(sum_from_1_to_i(i));\n   |                         ^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec: Vec<isize> = Vec::new();\n  \
    \  for i in 1..n+1 {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n\
    \        } else {\n            vec.push(sum_to(i));\n        }\n    }\n    vec\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpf7o8e4o0.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_to` in this\
    \ scope\n  --> /tmp/tmpf7o8e4o0.rs:15:22\n   |\n15 |             vec.push(sum_to(i));\n\
    \   |                      ^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        } else\
    \ {\n            v.push(sum_to(i));\n        }\n    }\n    v\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpbgcd3uz9.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_to` in this\
    \ scope\n  --> /tmp/tmpbgcd3uz9.rs:15:20\n   |\n15 |             v.push(sum_to(i));\n\
    \   |                    ^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976544
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec: Vec<isize> = Vec::new();\n  \
    \  for i in 1..=n {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n\
    \        } else {\n            vec.push(sum_of_numbers(i));\n        }\n    }\n\
    \    vec\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp84p6cul7.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmp84p6cul7.rs:15:22\n   |\n15 |             vec.push(sum_of_numbers(i));\n\
    \   |                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            v.push(fac(i));\n        } else {\n\
    \            v.push(sum(i));\n        }\n    }\n    v\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `fac` in this scope\n  --> /tmp/tmpu50a3alq.rs:13:20\n\
    \   |\n13 |             v.push(fac(i));\n   |                    ^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum` in this scope\n  -->\
    \ /tmp/tmpu50a3alq.rs:15:20\n   |\n15 |             v.push(sum(i));\n   |    \
    \                ^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i as usize));\n   \
    \     } else {\n            v.push(sum_to(i as usize));\n        }\n    }\n  \
    \  v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpqi0t2itm.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i as usize));\n   |                 \
    \   ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmpqi0t2itm.rs:15:20\n   |\n15 |             v.push(sum_to(i\
    \ as usize));\n   |                    ^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n+1\
    \ {\n        let mut sum = 0;\n        for j in 1..i+1 {\n            sum += j;\n\
    \        }\n        if i % 2 == 0 {\n            let mut fact = 1;\n         \
    \   for k in 1..i+1 {\n                fact *= k;\n            }\n           \
    \ v.push(fact);\n        } else {\n            v.push(sum);\n        }\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|x| if x % 2 == 0 { (1..=x).product()\
    \ } else { (1..=x).sum() }).collect()\n}\n\nfn main() {\n    let candidate = f;\n\
    \    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_of_numbers(i));\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpjh1v1osk.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpjh1v1osk.rs:15:25\n   |\n15 |             result.push(sum_of_numbers(i));\n\
    \   |                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        } else\
    \ {\n            v.push(sum_numbers(i));\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpa85odcxi.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmpa85odcxi.rs:15:20\n   |\n15 |             v.push(sum_numbers(i));\n\
    \   |                    ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_range(1, i));\n        }\n    }\n    v\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpq6qxljq5.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_range` in\
    \ this scope\n  --> /tmp/tmpq6qxljq5.rs:15:20\n   |\n15 |             v.push(sum_range(1,\
    \ i));\n   |                    ^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n + 1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_int(i));\n        }\n    }\n  \
    \  result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp70sbs4_t.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_int`\
    \ in this scope\n  --> /tmp/tmp70sbs4_t.rs:15:25\n   |\n15 |             result.push(sum_int(i));\n\
    \   |                         ^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 1..n + 1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(numeric_sum(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp7o56bksh.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `numeric_sum`\
    \ in this scope\n  --> /tmp/tmp7o56bksh.rs:15:25\n   |\n15 |             result.push(numeric_sum(i));\n\
    \   |                         ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut xs = Vec::new();\n    for i in 1..n+1\
    \ {\n        xs.push(if i % 2 == 0 { factorial(i) } else { sum_from_1_to(i) });\n\
    \    }\n    xs\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpx4s_4jh7.rs:12:33\n\
    \   |\n12 |         xs.push(if i % 2 == 0 { factorial(i) } else { sum_from_1_to(i)\
    \ });\n   |                                 ^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `sum_from_1_to` in this scope\n  --> /tmp/tmpx4s_4jh7.rs:12:55\n\
    \   |\n12 |         xs.push(if i % 2 == 0 { factorial(i) } else { sum_from_1_to(i)\
    \ });\n   |                                                       ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            res.push(factorial(i as u32));\n\
    \        } else {\n            res.push(sum_of_numbers(i));\n        }\n    }\n\
    \    res\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpd_kcf_h3.rs:13:22\n\
    \   |\n13 |             res.push(factorial(i as u32));\n   |                 \
    \     ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_of_numbers` in this scope\n  --> /tmp/tmpd_kcf_h3.rs:15:22\n   |\n15 |\
    \             res.push(sum_of_numbers(i));\n   |                      ^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_of_one_to_n(i));\n        }\n    }\n    v\n}\n\
    \nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2,\
    \ 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpsih800rx.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_one_to_n`\
    \ in this scope\n  --> /tmp/tmpsih800rx.rs:15:20\n   |\n15 |             v.push(sum_of_one_to_n(i));\n\
    \   |                    ^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(sum_of_numbers(i));\n        }\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpccsvlagq.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_numbers`\
    \ in this scope\n  --> /tmp/tmpccsvlagq.rs:15:22\n   |\n15 |             vec.push(sum_of_numbers(i));\n\
    \   |                      ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vector = Vec::new();\n    for i in\
    \ 1..n + 1 {\n        let mut sum = 0;\n        let mut factorial = 1;\n     \
    \   for j in 1..i + 1 {\n            if i % 2 == 0 {\n                factorial\
    \ *= j;\n            } else {\n                sum += j;\n            }\n    \
    \    }\n        if i % 2 == 0 {\n            vector.push(factorial);\n       \
    \ } else {\n            vector.push(sum);\n        }\n    }\n    vector\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ans = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            ans.push(factorial(i));\n        } else\
    \ {\n            ans.push(1..=i).sum();\n        }\n    }\n    ans\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpuo2_dz4c.rs:13:22\n\
    \   |\n13 |             ans.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0599]: `()` is not an iterator\n  --> /tmp/tmpuo2_dz4c.rs:15:29\n\
    \   |\n15 |             ans.push(1..=i).sum();\n   |                         \
    \    ^^^ `()` is not an iterator\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `(): Iterator`\n           which is required\
    \ by `&mut (): Iterator`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuo2_dz4c.rs:18:5\n\
    \   |\n9  | fn f(n: isize) -> Vec<isize> {\n   |                   ----------\
    \ expected `Vec<isize>` because of return type\n...\n18 |     ans\n   |     ^^^\
    \ expected `isize`, found struct `RangeInclusive`\n   |\n   = note: expected struct\
    \ `Vec<isize>`\n              found struct `Vec<RangeInclusive<isize>>`\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425, E0599.\nFor more information about an error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ret = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            ret.push(factorial(i));\n        } else\
    \ {\n            ret.push(sum_1_to_n(i));\n        }\n    }\n    ret\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmph7o7onke.rs:13:22\n\
    \   |\n13 |             ret.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_1_to_n` in\
    \ this scope\n  --> /tmp/tmph7o7onke.rs:15:22\n   |\n15 |             ret.push(sum_1_to_n(i));\n\
    \   |                      ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp72a7ubgj.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    //unimplemented!()\n    let mut result = Vec::new();\n\
    \    let mut fact = 1;\n    for i in 1..n+1 {\n        if i % 2 == 0 {\n     \
    \       for j in 1..i+1 {\n                fact *= j;\n            }\n       \
    \     result.push(fact);\n            fact = 1;\n        } else {\n          \
    \  let mut sum = 0;\n            for j in 1..i+1 {\n                sum += j;\n\
    \            }\n            result.push(sum);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n \
    \       } else {\n            result.push(sum_of_1_to_n(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpbbgravl1.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_1_to_n`\
    \ in this scope\n  --> /tmp/tmpbbgravl1.rs:15:25\n   |\n15 |             result.push(sum_of_1_to_n(i));\n\
    \   |                         ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(factorial(i as usize));\n   \
    \     } else {\n            v.push(sum_from_1_to(i as usize));\n        }\n  \
    \  }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpjrwnbf08.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i as usize));\n   |                 \
    \   ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_from_1_to`\
    \ in this scope\n  --> /tmp/tmpjrwnbf08.rs:15:20\n   |\n15 |             v.push(sum_from_1_to(i\
    \ as usize));\n   |                    ^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| {\n        if x % 2 ==\
    \ 0 {\n            (1..x + 1).fold(1, |a, b| a * b)\n        } else {\n      \
    \      (1..x + 1).fold(0, |a, b| a + b)\n        }\n    }).collect()\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n + 1 {\n        let mut sum = 0;\n        let mut factorial = 1;\n     \
    \   if i % 2 == 0 {\n            for j in 1..i + 1 {\n                factorial\
    \ *= j;\n            }\n            result.push(factorial);\n        } else {\n\
    \            for j in 1..i + 1 {\n                sum += j;\n            }\n \
    \           result.push(sum);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(i.factorial());\n        } else\
    \ {\n            v.push(i.iter_sum());\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `factorial` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmpoaypzjro.rs:13:22\n   |\n13 |             v.push(i.factorial());\n\
    \   |                      ^^^^^^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `iter_sum` found for type `isize` in the current scope\n  -->\
    \ /tmp/tmpoaypzjro.rs:15:22\n   |\n15 |             v.push(i.iter_sum());\n  \
    \ |                      ^^^^^^^^ method not found in `isize`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| if x % 2 == 0 {\n     \
    \   (1..x + 1).fold(1, |x, y| x * y)\n    } else {\n        (1..x + 1).fold(0,\
    \ |x, y| x + y)\n    }).collect()\n}\n\nfn main() {\n    let candidate = f;\n\
    \    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n + 1).map(|x| if x % 2 == 0 { (1..x +\
    \ 1).fold(1, |acc, x| acc * x) } else { (1..x + 1).sum() }).collect()\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    // TODO: implement the function here\n   \
    \ unimplemented!();\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpxjafamh_.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976546
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut\
    \ accumulator: isize = 1;\n    for i in 1..n + 1 {\n        if i % 2 == 0 {\n\
    \            result.push(accumulator);\n            accumulator *= i;\n      \
    \  } else {\n            result.push(i * (i + 1) / 2);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 6, 2, 15]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpur44we71.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976546
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n \
    \       } else {\n            result.push(sum_to(i));\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1,\
    \ 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpfutq7v36.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_to`\
    \ in this scope\n  --> /tmp/tmpfutq7v36.rs:15:25\n   |\n15 |             result.push(sum_to(i));\n\
    \   |                         ^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    if n < 1 {\n        return vec![];\n    }\n\
    \    let mut res = vec![1; n as usize];\n    for i in 1..n {\n        if i % 2\
    \ == 0 {\n            res[i as usize] = (2..i+1).fold(1, |a, b| a * b);\n    \
    \    } else {\n            res[i as usize] = (1..i+1).fold(0, |a, b| a + b);\n\
    \        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 2, 6, 24]`,\n right: `[1, 2, 6, 24, 15]`', /tmp/tmpe6r3kr3n.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976546
- exit_code: 101
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp7t_x1lht.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(factorial(i));\n        }\
    \ else {\n            v.push(sum_to(i));\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpkv31asvf.rs:13:20\n\
    \   |\n13 |             v.push(factorial(i));\n   |                    ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_to` in this\
    \ scope\n  --> /tmp/tmpkv31asvf.rs:15:20\n   |\n15 |             v.push(sum_to(i));\n\
    \   |                    ^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..n+1).map(|i| {\n        if i % 2 == 0\
    \ {\n            (1..i+1).fold(1, |acc, x| acc * x)\n        } else {\n      \
    \      (1..i+1).fold(0, |acc, x| acc + x)\n        }\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut output = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            let mut factorial = 1;\n     \
    \       for j in 1..=i {\n                factorial *= j;\n            }\n   \
    \         output.push(factorial);\n        } else {\n            let mut sum =\
    \ 0;\n            for j in 1..=i {\n                sum += j;\n            }\n\
    \            output.push(sum);\n        }\n    }\n    output\n}\n\nfn main() {\n\
    \    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n\
    \    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1),\
    \ vec![1]);\n    assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut ret = Vec::new();\n    for i in 1..n\
    \ + 1 {\n        if i % 2 == 0 {\n            ret.push(factorial(i));\n      \
    \  } else {\n            ret.push(sum_nums(i));\n        }\n    }\n    ret\n}\n\
    \nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2,\
    \ 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n\
    \    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1,\
    \ 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpsti_3s97.rs:13:22\n\
    \   |\n13 |             ret.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_nums` in\
    \ this scope\n  --> /tmp/tmpsti_3s97.rs:15:22\n   |\n15 |             ret.push(sum_nums(i));\n\
    \   |                      ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    (1..=n).map(|i| if i % 2 == 0 { factorial(i)\
    \ } else { sum_of_numbers(i) }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = f;\n    assert_eq!(candidate(5), vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7),\
    \ vec![1, 2, 6, 24, 15, 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n \
    \   assert_eq!(candidate(3), vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp13jh89fg.rs:10:37\n\
    \   |\n10 |     (1..=n).map(|i| if i % 2 == 0 { factorial(i) } else { sum_of_numbers(i)\
    \ }).collect()\n   |                                     ^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find function `sum_of_numbers` in this scope\n\
    \  --> /tmp/tmp13jh89fg.rs:10:59\n   |\n10 |     (1..=n).map(|i| if i % 2 == 0\
    \ { factorial(i) } else { sum_of_numbers(i) }).collect()\n   |               \
    \                                            ^^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 0
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut value:\
    \ isize;\n    for i in 1..=n {\n        if i % 2 == 0 {\n            value = 1;\n\
    \            for j in 1..=i {\n                value *= j;\n            }\n  \
    \      } else {\n            value = 0;\n            for j in 1..=i {\n      \
    \          value += j;\n            }\n        }\n        v.push(value);\n   \
    \ }\n    v\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976546
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..n + 1 {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n\
    \        } else {\n            result.push(sum_numbers(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpqt3ktzc3.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmpqt3ktzc3.rs:15:25\n   |\n15 |             result.push(sum_numbers(i));\n\
    \   |                         ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut vec = Vec::new();\n    for i in 1..=n\
    \ {\n        if i % 2 == 0 {\n            vec.push(factorial(i));\n        } else\
    \ {\n            vec.push(sum_numbers(i));\n        }\n    }\n    vec\n}\n\nfn\
    \ main() {\n    let candidate = f;\n    assert_eq!(candidate(5), vec![1, 2, 6,\
    \ 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15, 720, 28]);\n \
    \   assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3), vec![1, 2,\
    \ 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp2fa72wfl.rs:13:22\n\
    \   |\n13 |             vec.push(factorial(i));\n   |                      ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_numbers`\
    \ in this scope\n  --> /tmp/tmp2fa72wfl.rs:15:22\n   |\n15 |             vec.push(sum_numbers(i));\n\
    \   |                      ^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545
- exit_code: 1
  program: "/// Implement the function f that takes n as a parameter,\n/// and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n/// or the sum of numbers from 1 to i otherwise.\n/// i starts\
    \ from 1.\n/// the factorial of i is the multiplication of the numbers from 1\
    \ to i (1 * 2 * ... * i).\n/// Example:\n/// >>> f(5)\n/// vec![1, 2, 6, 24, 15]\n\
    fn f(n: isize) -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in\
    \ 1..=n {\n        if i % 2 == 0 {\n            result.push(factorial(i));\n \
    \       } else {\n            result.push(sum_of_number(i));\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = f;\n    assert_eq!(candidate(5),\
    \ vec![1, 2, 6, 24, 15]);\n    assert_eq!(candidate(7), vec![1, 2, 6, 24, 15,\
    \ 720, 28]);\n    assert_eq!(candidate(1), vec![1]);\n    assert_eq!(candidate(3),\
    \ vec![1, 2, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpkdyy97i4.rs:13:25\n\
    \   |\n13 |             result.push(factorial(i));\n   |                     \
    \    ^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_number`\
    \ in this scope\n  --> /tmp/tmpkdyy97i4.rs:15:25\n   |\n15 |             result.push(sum_of_number(i));\n\
    \   |                         ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976545

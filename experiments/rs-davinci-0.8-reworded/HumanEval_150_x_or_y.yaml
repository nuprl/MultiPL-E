name: HumanEval_150_x_or_y
language: rs
prompt: "/// A simple program which should return the value of x if n is \n/// a prime\
  \ number and should return the value of y otherwise.\n/// Examples:\n/// >>> x_or_y(7,\
  \ 34, 12)\n/// 34\n/// >>> x_or_y(15, 8, 5)\n/// 5\nfn x_or_y(n: isize, x: isize,\
  \ y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
  \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
  \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
  \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
  \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
  \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
completions: ["    if is_prime(n) {\n        x\n    } else {\n        y\n    }", " \
    \   // return x if n is prime, y otherwise\n    let mut i = 2;\n    while i <\
    \ n {\n        if n % i == 0 {\n            // n is not prime\n            return\
    \ y;\n        }\n        i += 1;\n    }\n    // n is prime\n    x", "    if n\
    \ > 2 && n % 2 == 0 {\n        y\n    } else {\n        x\n    }", "    if is_prime(n)\
    \ {\n        x\n    } else {\n        y\n    }", "    if is_prime(n) {\n     \
    \   x\n    } else {\n        y\n    }", "    if is_prime(n) {\n        x\n   \
    \ } else {\n        y\n    }", "    if is_prime(n) {\n        x\n    } else {\n\
    \        y\n    }", "    if n % 2 == 0 {\n        x\n    } else {\n        y\n\
    \    }", "    let mut i = 2;\n    let mut prime = true;\n    while i < n {\n \
    \       if n % i == 0 {\n            prime = false;\n            break;\n    \
    \    }\n        i += 1;\n    }\n    if prime {\n        x\n    } else {\n    \
    \    y\n    }", "    match is_prime(n) {\n        true => x,\n        false =>\
    \ y,\n    }", "    if is_prime(n) {\n        x\n    } else {\n        y\n    }",
  '    0', "    for i in 2..n/2 {\n        if n % i == 0 {\n            return y;\n\
    \        }\n    }\n    x", '    unimplemented!()', '    unimplemented!()', " \
    \   if is_prime(n) {\n        x\n    } else {\n        y\n    }", "    if is_prime(n)\
    \ {\n        x\n    } else {\n        y\n    }", "    // TODO\n    1", "    match\
    \ n % 2 {\n        0 => x,\n        _ => y,\n    }", "    let mut factors: usize\
    \ = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            factors +=\
    \ 1;\n        }\n    }\n    if factors <= 2 {\n        x\n    } else {\n     \
    \   y\n    }"]
stop_tokens:
- "\n}"

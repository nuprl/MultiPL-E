name: HumanEval_90_next_smallest
language: rs
prompt: "/// You are given a vector of integers.\n/// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the vector.\n/// Return None if there\
  \ is no such element.\n/// >>> next_smallest(vec![1, 2, 3, 4, 5])\n/// 2\n/// >>>\
  \ next_smallest(vec![5, 1, 4, 3, 2])\n/// 2\n/// >>> next_smallest(vec![])\n///\
  \ None\n/// >>> next_smallest(vec![1, 1])\n/// None\nfn next_smallest(lst: Vec<isize>)\
  \ -> Option<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = next_smallest;\n    assert_eq!(candidate(vec![1,\
  \ 2, 3, 4, 5]), Some(2));\n    assert_eq!(candidate(vec![5, 1, 4, 3, 2]), Some(2));\n\
  \    assert_eq!(candidate(Vec::<isize>::new()), None);\n    assert_eq!(candidate(vec![1,\
  \ 1]), None);\n    assert_eq!(candidate(vec![1, 1, 1, 1, 0]), Some(1));\n    assert_eq!(candidate(vec![1,\
  \ 1]), None);\n    assert_eq!(candidate(vec![-35, 34, 12, -45]), Some(-35));\n}\n"
completions: []
stop_tokens:
- "\n}"

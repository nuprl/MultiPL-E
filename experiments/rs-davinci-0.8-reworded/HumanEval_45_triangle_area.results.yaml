language: rs
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \  a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    let a = a as f64;\n    let h = h as f64;\n    (a * h) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    // TODO\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpmzyl_ilz.rs:6:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2_f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64) * (h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    if a <= 0 || h <= 0 {\n        panic!(\"Triangle side can't be negative or\
    \ equal to zero.\");\n    }\n    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    f64::from(a * h) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmp3xdkprwd.rs:5:5\n    |\n5   |     f64::from(a * h) / 2.0\n    |    \
    \ ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n    |\n    =\
    \ help: the following implementations were found:\n              <f64 as From<f32>>\n\
    \              <f64 as From<i16>>\n              <f64 as From<i32>>\n        \
    \      <f64 as From<i8>>\n            and 3 others\nnote: required by `from`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    0.5 * (a as f64) * (h as f64)\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64) * (h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440

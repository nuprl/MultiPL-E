language: rs
name: HumanEval_104_unique_digits
results:
- exit_code: 101
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = unique_digits;\n    assert_eq!(candidate(vec![15,\
    \ 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422,\
    \ 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111,\
    \ 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31,\
    \ 135]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmptay71jgl.rs:10:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822354
- exit_code: 0
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ y = Vec::new();\n    for i in x {\n        if i.to_string().chars().all(|c|\
    \ c.to_digit(10).unwrap() % 2 != 0) {\n            y.push(i);\n        }\n   \
    \ }\n    y.sort();\n    y\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822354
- exit_code: 101
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = Vec::new();\n    for num in x {\n        if (num % 2 != 0) & (num % 5\
    \ != 0) {\n            res.push(num);\n        }\n    }\n    res.sort();\n   \
    \ res\n}\n\nfn main() {\n    let candidate = unique_digits;\n    assert_eq!(candidate(vec![15,\
    \ 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422,\
    \ 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111,\
    \ 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31,\
    \ 135]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 33]`,\n right: `[1, 15, 33]`', /tmp/tmpm0th9g9e.rs:22:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|&n|\
    \ !has_even_digit(n)).collect()\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `has_even_digit` in this scope\n  -->\
    \ /tmp/tmpgbnj4tcg.rs:10:32\n   |\n10 |     x.into_iter().filter(|&n| !has_even_digit(n)).collect()\n\
    \   |                                ^^^^^^^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 0
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = Vec::new();\n    for i in x {\n        let mut is_unique = true;\n\
    \        for j in i.to_string().chars() {\n            if j.to_digit(10).unwrap()\
    \ % 2 == 0 {\n                is_unique = false;\n                break;\n   \
    \         }\n        }\n        if is_unique {\n            result.push(i);\n\
    \        }\n    }\n    result.sort();\n    result\n}\n\nfn main() {\n    let candidate\
    \ = unique_digits;\n    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15,\
    \ 33]);\n    assert_eq!(candidate(vec![152, 323, 1422, 10]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![12345, 2033, 111, 151]), vec![111, 151]);\n   \
    \ assert_eq!(candidate(vec![135, 103, 31]), vec![31, 135]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = vec![];\n    for i in x {\n        if contains_odd(i) {\n            res.push(i);\n\
    \        }\n    }\n    res.sort();\n    res\n}\n\nfn main() {\n    let candidate\
    \ = unique_digits;\n    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15,\
    \ 33]);\n    assert_eq!(candidate(vec![152, 323, 1422, 10]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![12345, 2033, 111, 151]), vec![111, 151]);\n   \
    \ assert_eq!(candidate(vec![135, 103, 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `contains_odd` in this scope\n  -->\
    \ /tmp/tmpye8ksls5.rs:12:12\n   |\n12 |         if contains_odd(i) {\n   |   \
    \         ^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n\tlet mut\
    \ result = Vec::new();\n\tfor num in x {\n\t\tif has_even_digit(num) {\n\t\t\t\
    continue;\n\t\t}\n\t\tresult.push(num);\n\t}\n\tresult.sort();\n\tresult\n}\n\n\
    fn main() {\n    let candidate = unique_digits;\n    assert_eq!(candidate(vec![15,\
    \ 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422,\
    \ 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111,\
    \ 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31,\
    \ 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `has_even_digit` in this scope\n  -->\
    \ /tmp/tmprinbv1ob.rs:12:6\n   |\n12 |         if has_even_digit(num) {\n   |\
    \            ^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 101
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|&n|\
    \ format!(\"{}\", n).chars().all(|c| c == '1' || c == '3' || c == '5' || c ==\
    \ '7' || c == '9')).collect()\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[15, 33, 1]`,\n right: `[1, 15, 33]`', /tmp/tmplval1lk4.rs:15:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|n|\
    \ !is_has_even_digit(*n)).collect()\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_has_even_digit` in this scope\n\
    \  --> /tmp/tmpr_j3g4qw.rs:10:31\n   |\n10 |     x.into_iter().filter(|n| !is_has_even_digit(*n)).collect()\n\
    \   |                               ^^^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ y = Vec::new();\n    for i in x {\n        if is_unique_digit(i) {\n       \
    \     y.push(i);\n        }\n    }\n    y.sort();\n    y\n}\n\nfn main() {\n \
    \   let candidate = unique_digits;\n    assert_eq!(candidate(vec![15, 33, 1422,\
    \ 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422, 10]),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111, 151]),\
    \ vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31, 135]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_unique_digit` in this scope\n  -->\
    \ /tmp/tmpwgqm1o75.rs:12:12\n   |\n12 |         if is_unique_digit(i) {\n   |\
    \            ^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let unique_digits\
    \ = x.iter().filter(|n| has_no_even_digits(n.to_string()));\n    let mut unique_digits_vec:\
    \ Vec<isize> = unique_digits.map(|n| *n).collect();\n    unique_digits_vec.sort();\n\
    \    unique_digits_vec\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `has_no_even_digits` in this scope\n\
    \  --> /tmp/tmpyi_wp29s.rs:10:45\n   |\n10 |     let unique_digits = x.iter().filter(|n|\
    \ has_no_even_digits(n.to_string()));\n   |                                  \
    \           ^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 0
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ ans = Vec::new();\n    for i in 0..x.len() {\n        let mut temp = x[i];\n\
    \        while temp > 0 {\n            if temp % 2 == 0 {\n                break;\n\
    \            }\n            temp /= 10;\n        }\n        if temp == 0 {\n \
    \           ans.push(x[i]);\n        }\n    }\n    ans.sort();\n    ans\n}\n\n\
    fn main() {\n    let candidate = unique_digits;\n    assert_eq!(candidate(vec![15,\
    \ 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422,\
    \ 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111,\
    \ 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31,\
    \ 135]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822354
- exit_code: 101
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ v: Vec<isize> = Vec::new();\n    for n in x {\n        let s = n.to_string();\n\
    \        if !s.contains('2') && !s.contains('4') && !s.contains('6') && !s.contains('8')\
    \ {\n            v.push(n);\n        }\n    }\n    v.sort();\n    v\n}\n\nfn main()\
    \ {\n    let candidate = unique_digits;\n    assert_eq!(candidate(vec![15, 33,\
    \ 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422,\
    \ 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111,\
    \ 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31,\
    \ 135]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[10]`,\n right: `[]`', /tmp/tmpi4tadnex.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 0
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ ret = Vec::new();\n    for v in x {\n        let mut has_even = false;\n   \
    \     let mut num = v;\n        while num > 0 {\n            if num % 2 == 0 {\n\
    \                has_even = true;\n                break;\n            }\n   \
    \         num /= 10;\n        }\n        if !has_even {\n            ret.push(v);\n\
    \        }\n    }\n    ret.sort();\n    ret\n}\n\nfn main() {\n    let candidate\
    \ = unique_digits;\n    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15,\
    \ 33]);\n    assert_eq!(candidate(vec![152, 323, 1422, 10]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![12345, 2033, 111, 151]), vec![111, 151]);\n   \
    \ assert_eq!(candidate(vec![135, 103, 31]), vec![31, 135]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = vec![];\n    for i in x {\n        if i.to_string().chars().any(|d| d.is_digit(10)\
    \ && d.is_even()) {\n            continue;\n        }\n        res.push(i);\n\
    \    }\n    res.sort();\n    res\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_even` found for type `char` in the current\
    \ scope\n  --> /tmp/tmphhwos4bz.rs:12:62\n   |\n12 |         if i.to_string().chars().any(|d|\
    \ d.is_digit(10) && d.is_even()) {\n   |                                     \
    \                         ^^^^^^^ method not found in `char`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|&v|\
    \ unique_digits_help(v)).collect()\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `unique_digits_help` in this scope\n\
    \  --> /tmp/tmphem1sew1.rs:10:31\n   |\n10 |     x.into_iter().filter(|&v| unique_digits_help(v)).collect()\n\
    \   |                               ^^^^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 101
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|&i|\
    \ i.to_string().chars().all(|c| c.to_digit(10).unwrap() % 2 == 1)).collect()\n\
    }\n\nfn main() {\n    let candidate = unique_digits;\n    assert_eq!(candidate(vec![15,\
    \ 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152, 323, 1422,\
    \ 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345, 2033, 111,\
    \ 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103, 31]), vec![31,\
    \ 135]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[15, 33, 1]`,\n right: `[1, 15, 33]`', /tmp/tmpaix0iskz.rs:15:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|n|\
    \ *n.to_string().chars().find(|c| c.is_numeric() && c.to_digit(10).unwrap() %\
    \ 2 == 0).unwrap_or('0') == '0').collect()\n}\n\nfn main() {\n    let candidate\
    \ = unique_digits;\n    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15,\
    \ 33]);\n    assert_eq!(candidate(vec![152, 323, 1422, 10]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![12345, 2033, 111, 151]), vec![111, 151]);\n   \
    \ assert_eq!(candidate(vec![135, 103, 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `char` cannot be dereferenced\n  --> /tmp/tmp0e3g320x.rs:10:30\n\
    \   |\n10 |     x.into_iter().filter(|n| *n.to_string().chars().find(|c| c.is_numeric()\
    \ && c.to_digit(10).unwrap() % 2 == 0).unwrap_or('0') == '0').c...\n   |     \
    \                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 101
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|&n|\
    \ {\n        // use to_string() to convert integer to &str\n        // filter()\
    \ to filter out even digits\n        // collect() to convert back to String\n\
    \        // is_empty() to check if empty.\n        n.to_string().chars().filter(|d|\
    \ {\n            d.to_digit(10).unwrap() % 2 == 0\n        }).collect::<String>().is_empty()\n\
    \    }).collect::<Vec<isize>>()\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[15, 33, 1]`,\n right: `[1, 15, 33]`', /tmp/tmpdbvkcaf5.rs:23:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822354
- exit_code: 1
  program: "/// Given a vector of positive integers x. return a sorted vector of all\
    \ \n/// elements that hasn't any even digit.\n/// Note: Returned vector should\
    \ be sorted in increasing order.\n/// For example:\n/// >>> unique_digits(vec![15,\
    \ 33, 1422, 1])\n/// vec![1, 15, 33]\n/// >>> unique_digits(vec![152, 323, 1422,\
    \ 10])\n/// vec![]\nfn unique_digits(x: Vec<isize>) -> Vec<isize> {\n    x.into_iter().filter(|&num|\
    \ is_unique_digits(num)).collect()\n}\n\nfn main() {\n    let candidate = unique_digits;\n\
    \    assert_eq!(candidate(vec![15, 33, 1422, 1]), vec![1, 15, 33]);\n    assert_eq!(candidate(vec![152,\
    \ 323, 1422, 10]), Vec::<isize>::new());\n    assert_eq!(candidate(vec![12345,\
    \ 2033, 111, 151]), vec![111, 151]);\n    assert_eq!(candidate(vec![135, 103,\
    \ 31]), vec![31, 135]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_unique_digits` in this scope\n \
    \ --> /tmp/tmpoop9wxqj.rs:10:33\n   |\n10 |     x.into_iter().filter(|&num| is_unique_digits(num)).collect()\n\
    \   |                                 ^^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822354

language: rs
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            let mut i = i;\n            while i > 0 {\n                if i %\
    \ 10 == 7 {\n                    count += 1;\n                }\n            \
    \    i /= 10;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpgvshk3j7.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            count += count_7s(i);\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_7s` in this scope\n  --> /tmp/tmp0hzejia7.rs:12:22\n\
    \   |\n12 |             count += count_7s(i);\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n  let\
    \ mut total = 0;\n  for i in 0..n {\n    if i % 11 == 0 || i % 13 == 0 {\n   \
    \   let mut j = i;\n      while j > 0 {\n        if j % 10 == 7 {\n          total\
    \ += 1;\n        }\n        j /= 10;\n      }\n    }\n  }\n  total\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut n = n;\n    n -= n / 11;\n    n -= n / 13;\n    n -= n / 77;\n    n -= n\
    \ / 143;\n    n -= n / 1001;\n    n -= n / 2197;\n    n -= n / 2744;\n    n -=\
    \ n / 28561;\n    n -= n / 83521;\n    n /= 7;\n    n\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmp9m5ngzil.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpgupizx4p.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n < 0 {\n        return 0;\n    }\n\n    let mut count = 0;\n    for i in 11..n\
    \ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += 1;\n      \
    \  }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpjygkvd4j.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut div = 0;\n    for x in (1..n).filter(|x| x % 11 == 0 || x % 13 == 0) {\n\
    \        let num_str = x.to_string();\n        div += num_str.chars().filter(|&c|\
    \ c == '7').count() as isize;\n    }\n    div\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ is_div_eleven = |x: isize| { (x % 11) == 0 };\n    let is_div_thirteen = |x:\
    \ isize| { (x % 13) == 0 };\n    let is_div_by_eleven_or_thirteen = |x: isize|\
    \ { is_div_eleven(x) || is_div_thirteen(x) };\n    let is_div_by_eleven_or_thirteen_and_below_n\
    \ = |x: isize| { is_div_by_eleven_or_thirteen(x) && x < n };\n    let seven_count\
    \ = |x: isize| {\n        let mut x = x;\n        let mut count = 0;\n       \
    \ while x > 0 {\n            if x % 10 == 7 {\n                count += 1;\n \
    \           }\n            x /= 10;\n        }\n        count\n    };\n    (0..n).fold(0,\
    \ |acc, x| {\n        if is_div_by_eleven_or_thirteen_and_below_n(x) {\n     \
    \       acc + seven_count(x)\n        } else {\n            acc\n        }\n \
    \   })\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpgupizx4p.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut sum = 0;\n    for i in 11..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            let mut j = i;\n            while j > 0 {\n                if j %\
    \ 10 == 7 {\n                    sum += 1;\n                }\n              \
    \  j /= 10;\n            }\n        }\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut sum = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            sum += count_digit(i, 7);\n        }\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_digit` in this scope\n  --> /tmp/tmp8ccg_jd5.rs:12:20\n\
    \   |\n12 |             sum += count_digit(i, 7);\n   |                    ^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpgupizx4p.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpgvshk3j7.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut cnt = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            if i % 10 == 7 {\n                cnt += 1;\n            }\n    \
    \        if i > 10 && (i / 10) % 10 == 7 {\n                cnt += 1;\n      \
    \      }\n        }\n    }\n    cnt\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `128`,\n right: `192`', /tmp/tmpv2zufb4d.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 0..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            count += count_sevens(i)\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_sevens` in this scope\n  -->\
    \ /tmp/tmp4c9eo1_d.rs:12:22\n   |\n12 |             count += count_sevens(i)\n\
    \   |                      ^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for i in 1..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            let mut i = i;\n            while i > 0 {\n                if i %\
    \ 10 == 7 {\n                    count += 1;\n                }\n            \
    \    i /= 10;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpgupizx4p.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822491
- exit_code: 0
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut cnt = 0;\n    for i in 11..n {\n        if i % 11 == 0 || i % 13 == 0 {\n\
    \            let mut cur = i;\n            while cur > 0 {\n                if\
    \ cur % 10 == 7 {\n                    cnt += 1;\n                }\n        \
    \        cur /= 10;\n            }\n        }\n    }\n    cnt\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822491
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut m = 0;\n    for i in 1..n {\n        if (i % 11 == 0 || i % 13 == 0) &&\
    \ i.to_string().contains(\"7\") {\n            m += 1;\n        }\n    }\n   \
    \ m\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmppsn01lq0.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822491

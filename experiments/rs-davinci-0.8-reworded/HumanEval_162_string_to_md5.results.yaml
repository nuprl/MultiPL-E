language: rs
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    let mut buffer = format!(\"{:x}\", md5::compute(text));\n\
    \    if buffer.is_empty() {\n        return None;\n    }\n    buffer.insert_str(0,\
    \ \"0x\");\n    Some(buffer)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \ --> /tmp/tmp1u5dj7o7.rs:6:38\n  |\n6 |     let mut buffer = format!(\"{:x}\"\
    , md5::compute(text));\n  |                                      ^^^ use of undeclared\
    \ crate or module `md5`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    let mut hasher = Md5::new();\n    if text.is_empty()\
    \ {\n        return None;\n    }\n    hasher.input(text.as_bytes());\n    Some(hasher.result_str())\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n --> /tmp/tmpxly4c4uh.rs:6:22\n\
    \  |\n6 |     let mut hasher = Md5::new();\n  |                      ^^^ use of\
    \ undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let md5_hash = hasher.result_str();\n\n    Some(md5_hash)\n}\n\nfn main()\
    \ {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp0zqii9a9.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    match text.len() {\n        0 => None,\n  \
    \      _ => {\n            let mut hasher = Md5::new();\n            hasher.input(text.as_bytes());\n\
    \            Some(format!(\"{:x}\", hasher.result()))\n        }\n    }\n}\n\n\
    fn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n --> /tmp/tmpqtfmnwxt.rs:9:30\n\
    \  |\n9 |             let mut hasher = Md5::new();\n  |                      \
    \        ^^^ use of undeclared type `Md5`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let output = format!(\"{:x}\", result);\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpxi4b_79u.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let text_md5 = md5::compute(text);\n    let text_md5_hex = format!(\"\
    {:x}\", text_md5);\n\n    Some(text_md5_hex)\n}\n\nfn main() {\n    let candidate\
    \ = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmpda9sb9ad.rs:10:20\n   |\n10 |     let text_md5 = md5::compute(text);\n\
    \   |                    ^^^ use of undeclared crate or module `md5`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    let mut output = String::from(\"\");\n    if\
    \ text.len() > 0 {\n        let mut md5 = Md5::new();\n        md5.input_str(&text);\n\
    \        output = md5.result_str();\n    }\n    if output.len() > 0 {\n      \
    \  Some(output)\n    } else {\n        None\n    }\n}\n\nfn main() {\n    let\
    \ candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\"\
    )), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n --> /tmp/tmpj_3n9tx7.rs:8:23\n\
    \  |\n8 |         let mut md5 = Md5::new();\n  |                       ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let digest = md5::compute(text);\n    Some(format!(\"{:x}\", digest))\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmpkas_5r7v.rs:10:18\n   |\n10 |     let digest = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let md5 = md5::compute(text);\n    let mut bytes = [0; 16];\n  \
    \  bytes.copy_from_slice(&md5);\n    let s = hex::encode(bytes);\n    Some(s)\n\
    }\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmpmmnblblz.rs:10:15\n   |\n10 |     let md5 = md5::compute(text);\n\
    \   |               ^^^ use of undeclared crate or module `md5`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared crate or module `hex`\n  --> /tmp/tmpmmnblblz.rs:13:13\n\
    \   |\n13 |     let s = hex::encode(bytes);\n   |             ^^^ use of undeclared\
    \ crate or module `hex`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let result = md5::compute(text);\n    let result_hex = format!(\"\
    {:x}\", result);\n    Some(result_hex)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmp_9maeryr.rs:10:18\n   |\n10 |     let result = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    match text.is_empty() {\n        true => None,\n\
    \        false => {\n            let mut hasher = Md5::new();\n            hasher.input_str(&text);\n\
    \            Some(hasher.result_str())\n        }\n    }\n}\n\nfn main() {\n \
    \   let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello\
    \ world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n --> /tmp/tmpjnzltlsl.rs:9:30\n\
    \  |\n9 |             let mut hasher = Md5::new();\n  |                      \
    \        ^^^ use of undeclared type `Md5`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    let mut hasher = Md5::new();\n    if text.is_empty()\
    \ {\n        return None;\n    }\n    hasher.input(text.as_bytes());\n    Some(format!(\"\
    {:x}\", hasher.result()))\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n --> /tmp/tmpswk7c136.rs:6:22\n\
    \  |\n6 |     let mut hasher = Md5::new();\n  |                      ^^^ use of\
    \ undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hash = String::new();\n    let mut m = Md5::new();\n   \
    \ m.input_str(&text);\n    let result = m.result_str();\n    hash.push_str(&result);\n\
    \    Some(hash)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmp6y56gbls.rs:11:17\n\
    \   |\n11 |     let mut m = Md5::new();\n   |                 ^^^ use of undeclared\
    \ type `Md5`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    Some(format!(\"{:x}\", md5::compute(text)))\n}\n\nfn main() {\n\
    \    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmpd68ni92q.rs:10:26\n   |\n10 |     Some(format!(\"{:x}\", md5::compute(text)))\n\
    \   |                          ^^^ use of undeclared crate or module `md5`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut m = Md5::new();\n    m.input(text.as_bytes());\n    Some(format!(\"\
    {:x}\", m.result()))\n}\n\nfn main() {\n    let candidate = string_to_md5;\n \
    \   assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpobco3yq5.rs:10:17\n\
    \   |\n10 |     let mut m = Md5::new();\n   |                 ^^^ use of undeclared\
    \ type `Md5`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let result = hasher.result();\n    let output = format!(\"{:x}\", result);\n\
    \    Some(output)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"\
    Hello world\")), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n\
    \    assert_eq!(candidate(String::from(\"\")), None);\n    assert_eq!(candidate(String::from(\"\
    A B C\")), Some(String::from(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpxi4b_79u.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let mut hasher = Md5::new();\n    hasher.input(text.as_bytes());\n\
    \    let digest = hasher.result();\n    let hex_digest = hex::encode(digest);\n\
    \    Some(hex_digest)\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n  --> /tmp/tmpxd_195c7.rs:10:22\n\
    \   |\n10 |     let mut hasher = Md5::new();\n   |                      ^^^ use\
    \ of undeclared type `Md5`\n\nerror[E0433]: failed to resolve: use of undeclared\
    \ crate or module `hex`\n  --> /tmp/tmpxd_195c7.rs:13:22\n   |\n13 |     let hex_digest\
    \ = hex::encode(digest);\n   |                      ^^^ use of undeclared crate\
    \ or module `hex`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    let text = text.as_bytes();\n    let mut digest\
    \ = vec![0; 16];\n    if text.len() > 0 {\n        let mut hasher = Md5::new();\n\
    \        hasher.input(text);\n        digest.copy_from_slice(hasher.result().as_slice());\n\
    \    }\n    Some(hex::encode(digest))\n}\n\nfn main() {\n    let candidate = string_to_md5;\n\
    \    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Md5`\n --> /tmp/tmp111igfkz.rs:9:26\n\
    \  |\n9 |         let mut hasher = Md5::new();\n  |                          ^^^\
    \ use of undeclared type `Md5`\n\nerror[E0433]: failed to resolve: use of undeclared\
    \ crate or module `hex`\n  --> /tmp/tmp111igfkz.rs:13:10\n   |\n13 |     Some(hex::encode(digest))\n\
    \   |          ^^^ use of undeclared crate or module `hex`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    Some(md5::compute(text).to_string())\n}\n\nfn main() {\n    let\
    \ candidate = string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\"\
    )), Some(String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmp7gt0l84t.rs:10:10\n   |\n10 |     Some(md5::compute(text).to_string())\n\
    \   |          ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659823238
- exit_code: 1
  program: "/// Given a string 'text', return its md5 hash equivalent string.\n///\
    \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(String::from(\"\
    Hello world\"))\n/// String::from(\"3e25960a79dbc69b674cd4ec67a72c62\")\nfn string_to_md5(text:\
    \ String) -> Option<String> {\n    if text.is_empty() {\n        return None;\n\
    \    }\n\n    let digest = md5::compute(text);\n    let digest_str = format!(\"\
    {:x}\", digest);\n    Some(digest_str)\n}\n\nfn main() {\n    let candidate =\
    \ string_to_md5;\n    assert_eq!(candidate(String::from(\"Hello world\")), Some(String::from(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert_eq!(candidate(String::from(\"\
    \")), None);\n    assert_eq!(candidate(String::from(\"A B C\")), Some(String::from(\"\
    0ef78513b0cb8cef12743f5aeb35f888\")));\n    assert_eq!(candidate(String::from(\"\
    password\")), Some(String::from(\"5f4dcc3b5aa765d61d8327deb882cf99\")));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `md5`\n\
    \  --> /tmp/tmphjjc4at9.rs:10:18\n   |\n10 |     let digest = md5::compute(text);\n\
    \   |                  ^^^ use of undeclared crate or module `md5`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659823238

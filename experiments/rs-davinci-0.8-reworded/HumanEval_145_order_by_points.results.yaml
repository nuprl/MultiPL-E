language: rs
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ vec = nums.clone();\n    vec.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \    vec\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpsvon2452.rs:12:24\n   |\n12 |     vec.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                        ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmpsvon2452.rs:12:47\n\
    \   |\n12 |     vec.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                                               ^^^^^^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = Vec::new();\n    let mut helper = Vec::new();\n    if nums.len() ==\
    \ 0 {\n        return result;\n    }\n    for i in nums {\n        let (mut new_value,\
    \ mut value) = (0, i);\n        while value != 0 {\n            new_value += value\
    \ % 10;\n            value /= 10;\n        }\n        helper.push(new_value);\n\
    \    }\n    for _ in 0..nums.len() {\n        let mut index = 0;\n        let\
    \ mut min = helper[0];\n        for i in 1..helper.len() {\n            if helper[i]\
    \ < min {\n                min = helper[i];\n                index = i;\n    \
    \        }\n        }\n        result.push(nums[index]);\n        helper.remove(index);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpy428st9r.rs:24:17\n\
    \    |\n10  | fn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    |    \
    \                ---- move occurs because `nums` has type `Vec<isize>`, which\
    \ does not implement the `Copy` trait\n...\n16  |     for i in nums {\n    | \
    \             ----\n    |              |\n    |              `nums` moved due\
    \ to this implicit call to `.into_iter()`\n    |              help: consider borrowing\
    \ to avoid moving into the for loop: `&nums`\n...\n24  |     for _ in 0..nums.len()\
    \ {\n    |                 ^^^^ value borrowed here after move\n    |\nnote: this\
    \ function takes ownership of the receiver `self`, which moves `nums`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|n| sum_of_digits(*n));\n    nums\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpmruzedta.rs:12:26\n   |\n12 |     nums.sort_by_key(|n| sum_of_digits(*n));\n\
    \   |                          ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpi80ucwsy.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_with_sum: Vec<(isize, usize)> = vec![];\n    for (i, num) in nums.iter().enumerate()\
    \ {\n        let mut num_with_sum = (num, 0);\n        let mut tmp = num.abs();\n\
    \        while tmp != 0 {\n            num_with_sum.1 += tmp % 10;\n         \
    \   tmp /= 10;\n        }\n        nums_with_sum.push(num_with_sum);\n    }\n\
    \    nums_with_sum.sort_by(|a, b| (a.1, a.0).cmp(&(b.1, b.0)));\n    let mut answer:\
    \ Vec<isize> = vec![];\n    for (_, i) in nums_with_sum {\n        answer.push(nums[i]);\n\
    \    }\n    answer\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpvo55xi7o.rs:19:28\n   |\n\
    19 |         nums_with_sum.push(num_with_sum);\n   |                         \
    \   ^^^^^^^^^^^^ expected `isize`, found `&isize`\n   |\n   = note: expected tuple\
    \ `(isize, usize)`\n              found tuple `(&isize, isize)`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ points = vec![];\n    for item in nums.iter() {\n        let mut sum = 0;\n\
    \        let mut item = *item;\n        while item != 0 {\n            sum +=\
    \ item % 10;\n            item /= 10;\n        }\n        points.push(sum);\n\
    \    }\n    let mut pos = 0;\n    while pos < nums.len() {\n        let mut i\
    \ = pos;\n        while i < nums.len() {\n            if points[i] < points[pos]\
    \ {\n                points.swap(i, pos);\n                nums.swap(i, pos);\n\
    \            }\n            i += 1;\n        }\n        pos += 1;\n    }\n   \
    \ nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0596]: cannot borrow `nums` as mutable, as it is not declared as\
    \ mutable\n  --> /tmp/tmpheyqp4_3.rs:27:17\n   |\n10 | fn order_by_points(nums:\
    \ Vec<isize>) -> Vec<isize> {\n   |                    ---- help: consider changing\
    \ this to be mutable: `mut nums`\n...\n27 |                 nums.swap(i, pos);\n\
    \   |                 ^^^^ cannot borrow as mutable\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0596`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ digits = nums.iter().map(|n| n.abs() as usize).collect::<Vec<usize>>();\n  \
    \  for (i, n) in digits.iter_mut().enumerate() {\n        *n = sum_digits(*n,\
    \ 0);\n    }\n    let mut ret = nums.clone();\n    ret.sort_by(|a, b| {\n    \
    \    let i = digits.iter().position(|x| x == &(a.abs() as usize)).unwrap();\n\
    \        let j = digits.iter().position(|x| x == &(b.abs() as usize)).unwrap();\n\
    \        if digits[i] < digits[j] {\n            std::cmp::Ordering::Less\n  \
    \      } else if digits[i] > digits[j] {\n            std::cmp::Ordering::Greater\n\
    \        } else {\n            i.cmp(&j)\n        }\n    });\n    ret\n}\n\nfn\
    \ main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpa6d87q_u.rs:13:14\n\
    \   |\n13 |         *n = sum_digits(*n, 0);\n   |              ^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let points:\
    \ Vec<(isize, isize)> = nums.iter().map(|n| {\n        let digit_sum = n.abs()\n\
    \            .to_string()\n            .chars()\n            .map(|ch| ch.to_digit(10).unwrap())\n\
    \            .sum::<u32>() as isize;\n        (digit_sum, *n)\n    }).collect();\n\
    \    points.iter().sorted_by(|a, b| a.0.cmp(&b.0)).map(|t| t.1).collect()\n}\n\
    \nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `std::slice::Iter`\
    \ in the current scope\n  --> /tmp/tmpxnm6dwzf.rs:19:19\n   |\n19 |     points.iter().sorted_by(|a,\
    \ b| a.0.cmp(&b.0)).map(|t| t.1).collect()\n   |                   ^^^^^^^^^ method\
    \ not found in `std::slice::Iter<'_, (isize, isize)>`\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted_nums = nums.clone();\n    sorted_nums.sort_by(|a, b| {\n        let a_digit_sum\
    \ = sum_of_digits(*a);\n        let b_digit_sum = sum_of_digits(*b);\n       \
    \ a_digit_sum.cmp(&b_digit_sum)\n    });\n    sorted_nums\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmp_ry4kjli.rs:13:27\n   |\n13 |         let a_digit_sum = sum_of_digits(*a);\n\
    \   |                           ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmp_ry4kjli.rs:14:27\n\
    \   |\n14 |         let b_digit_sum = sum_of_digits(*b);\n   |               \
    \            ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().map(|(i,\
    \ x)| (sum_digits(x), i, x)).sorted_by_key(|x| (x.0, x.1)).map(|x| x.2).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpa2p3b80h.rs:11:48\n\
    \   |\n11 |     nums.into_iter().enumerate().map(|(i, x)| (sum_digits(x), i, x)).sorted_by_key(|x|\
    \ (x.0, x.1)).map(|x| x.2).collect()\n   |                                   \
    \             ^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named\
    \ `sorted_by_key` found for struct `Map` in the current scope\n  --> /tmp/tmpa2p3b80h.rs:11:70\n\
    \   |\n11 |     nums.into_iter().enumerate().map(|(i, x)| (sum_digits(x), i, x)).sorted_by_key(|x|\
    \ (x.0, x.1)).map(|x| x.2).collect()\n   |                                   \
    \                                   ^^^^^^^^^^^^^ method not found in `Map<Enumerate<std::vec::IntoIter<isize>>,\
    \ _>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0425, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return vec![];\n    }\n    let mut mutable_nums = nums.clone();\n\
    \    mutable_nums.sort_by(|a, b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n\
    \    mutable_nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n  \
    \  assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_digits` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmp20i3fhi8.rs:15:41\n   |\n15 |     mutable_nums.sort_by(|a,\
    \ b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n   |                 \
    \                        ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `sum_digits` found for type `isize` in the current scope\n \
    \ --> /tmp/tmp20i3fhi8.rs:15:67\n   |\n15 |     mutable_nums.sort_by(|a, b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n\
    \   |                                                                   ^^^^^^^^^^\
    \ method not found in `isize`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted_nums = nums.clone();\n    sorted_nums.sort_by(|x, y| x.to_string().chars().map(|c|\
    \ c.to_digit(10).unwrap()).sum::<u32>().cmp(&y.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>()));\n\
    \    sorted_nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n   \
    \ assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpk6m9qydn.rs:12:77

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ new_nums = nums.clone();\n    new_nums.sort_by(|a, b| {\n        let a_sum:\
    \ isize = get_digits(*a).iter().sum();\n        let b_sum: isize = get_digits(*b).iter().sum();\n\
    \        if a_sum == b_sum {\n            return nums.iter().position(|&x| x ==\
    \ *a).unwrap().cmp(\n                &nums.iter().position(|&x| x == *b).unwrap(),\n\
    \            );\n        }\n        a_sum.cmp(&b_sum)\n    });\n    new_nums\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_digits` in this scope\n  --> /tmp/tmpuz7h6v_h.rs:13:28\n\
    \   |\n13 |         let a_sum: isize = get_digits(*a).iter().sum();\n   |    \
    \                        ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `get_digits` in this scope\n  --> /tmp/tmpuz7h6v_h.rs:14:28\n\
    \   |\n14 |         let b_sum: isize = get_digits(*b).iter().sum();\n   |    \
    \                        ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = nums.clone();\n    res.sort_by(|x, y| x.abs().sum_digits().cmp(&y.abs().sum_digits()));\n\
    \    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_digits` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmp5c1dngzc.rs:12:32\n   |\n12 |     res.sort_by(|x,\
    \ y| x.abs().sum_digits().cmp(&y.abs().sum_digits()));\n   |                 \
    \               ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]: no method\
    \ named `sum_digits` found for type `isize` in the current scope\n  --> /tmp/tmp5c1dngzc.rs:12:58\n\
    \   |\n12 |     res.sort_by(|x, y| x.abs().sum_digits().cmp(&y.abs().sum_digits()));\n\
    \   |                                                          ^^^^^^^^^^ method\
    \ not found in `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sums: Vec<(isize, isize)> = nums.iter().map(|&x| (x, sum_digits(x))).collect();\n\
    \    sums.sort_by(|&(x1, x2), &(y1, y2)| {\n        x2.cmp(&y2).then(x1.cmp(&y1))\n\
    \    });\n    sums.iter().map(|&(x, _)| x).collect()\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp3vli6ms0.rs:11:66\n\
    \   |\n11 |     let mut sums: Vec<(isize, isize)> = nums.iter().map(|&x| (x, sum_digits(x))).collect();\n\
    \   |                                                                  ^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ copy = nums.clone();\n    copy.sort_by(|a, b| get_digit_sum(*a).cmp(&get_digit_sum(*b)));\n\
    \    copy\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_digit_sum` in this scope\n  -->\
    \ /tmp/tmpviqjv0as.rs:12:25\n   |\n12 |     copy.sort_by(|a, b| get_digit_sum(*a).cmp(&get_digit_sum(*b)));\n\
    \   |                         ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `get_digit_sum` in this scope\n  --> /tmp/tmpviqjv0as.rs:12:48\n\
    \   |\n12 |     copy.sort_by(|a, b| get_digit_sum(*a).cmp(&get_digit_sum(*b)));\n\
    \   |                                                ^^^^^^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_map: Vec<(isize, isize)> = Vec::new();\n    for (index, num) in nums.iter().enumerate()\
    \ {\n        let mut sum = 0;\n        let mut num_clone = *num;\n        if num_clone\
    \ < 0 {\n            num_clone = -num_clone;\n        }\n        while num_clone\
    \ > 0 {\n            sum += num_clone % 10;\n            num_clone /= 10;\n  \
    \      }\n        nums_map.push((index as isize, sum));\n    }\n    let mut nums_map\
    \ = nums_map.sort_by(|a, b| a.1.cmp(&b.1));\n    let mut result: Vec<isize> =\
    \ Vec::new();\n    for (_, num) in nums_map {\n        result.push(nums[num as\
    \ usize]);\n    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `()` is not an iterator\n   --> /tmp/tmpma_oso_2.rs:26:21\n\
    \    |\n26  |     for (_, num) in nums_map {\n    |                     ^^^^^^^^\
    \ `()` is not an iterator\n    |\n    = help: the trait `Iterator` is not implemented\
    \ for `()`\n    = note: required because of the requirements on the impl of `IntoIterator`\
    \ for `()`\nnote: required by `into_iter`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|n| (n.abs() % 10) + (n.abs() / 10));\n \
    \   nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpa1oadxlh.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO\n\
    \    vec![]\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpaelivfpz.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    use std::collections::BTreeMap;\n\
    \    let mut result: BTreeMap<isize, Vec<isize>> = BTreeMap::new();\n    for i\
    \ in nums {\n        let mut sum = 0;\n        let mut num = i;\n        while\
    \ num != 0 {\n            sum += num % 10;\n            num /= 10;\n        }\n\
    \        let entry = result.entry(sum).or_insert(Vec::new());\n        entry.push(i);\n\
    \    }\n    let mut result_vec: Vec<isize> = Vec::new();\n    for key in result.keys()\
    \ {\n        let mut nums = result.get_mut(key).unwrap();\n        nums.sort();\n\
    \        for num in nums {\n            result_vec.push(*num);\n        }\n  \
    \  }\n    result_vec\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmp0rjvfunk.rs:25:13\n\
    \   |\n25 |         let mut nums = result.get_mut(key).unwrap();\n   |       \
    \      ----^^^^\n   |             |\n   |             help: remove this `mut`\n\
    \   |\n   = note: `#[warn(unused_mut)]` on by default\n\nerror[E0502]: cannot\
    \ borrow `result` as mutable because it is also borrowed as immutable\n  --> /tmp/tmp0rjvfunk.rs:25:24\n\
    \   |\n24 |     for key in result.keys() {\n   |                -------------\n\
    \   |                |\n   |                immutable borrow occurs here\n   |\
    \                immutable borrow later used here\n25 |         let mut nums =\
    \ result.get_mut(key).unwrap();\n   |                        ^^^^^^^^^^^^^^^^^^^\
    \ mutable borrow occurs here\n\nerror: aborting due to previous error; 1 warning\
    \ emitted\n\nFor more information about this error, try `rustc --explain E0502`.\n"
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ m: HashMap<isize, Vec<isize>> = HashMap::new();\n    for num in nums {\n   \
    \     let digit_sum = sum_of_digits(num);\n        let v = m.entry(digit_sum).or_insert(Vec::new());\n\
    \        v.push(num);\n    }\n    let mut keys: Vec<_> = m.keys().cloned().collect();\n\
    \    keys.sort();\n    let mut ret = Vec::new();\n    for key in keys {\n    \
    \    let v = m.get(&key).unwrap();\n        for &x in v {\n            ret.push(x);\n\
    \        }\n    }\n    ret\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n  --> /tmp/tmpfemp528y.rs:11:16\n\
    \   |\n11 |     let mut m: HashMap<isize, Vec<isize>> = HashMap::new();\n   |\
    \                ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpfemp528y.rs:11:45\n\
    \   |\n11 |     let mut m: HashMap<isize, Vec<isize>> = HashMap::new();\n   |\
    \                                             ^^^^^^^ not found in this scope\n\
    \   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpfemp528y.rs:13:25\n   |\n13 |         let digit_sum = sum_of_digits(num);\n\
    \   |                         ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0425, E0433.\nFor more information about an error, try `rustc --explain\
    \ E0412`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().map(|(i,\
    \ n)| (i, n, n.abs() as u32 % 10 + n.abs() as u32 / 10)).collect::<Vec<_>>().sort_by(|a,\
    \ b| (a.2, a.0).cmp(&(b.2, b.0))).into_iter().map(|(_, n, _)| n).collect()\n}\n\
    \nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `()` is not an iterator\n  --> /tmp/tmp3sb08x5f.rs:11:162\n\
    \   |\n11 | ..._>>().sort_by(|a, b| (a.2, a.0).cmp(&(b.2, b.0))).into_iter().map(|(_,\
    \ n, _)| n).collect()\n   |                                                  \
    \    ^^^^^^^^^ `()` is not an iterator\n   |\n   = note: the following trait bounds\
    \ were not satisfied:\n           `(): Iterator`\n           which is required\
    \ by `(): IntoIterator`\n           `&(): Iterator`\n           which is required\
    \ by `&(): IntoIterator`\n           `&mut (): Iterator`\n           which is\
    \ required by `&mut (): IntoIterator`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // nums.sort_by(|&a,\
    \ &b| a.cmp(&b));\n    nums.iter().enumerate().sorted_by(|&(a, b), &(c, d)| {\n\
    \        b.abs().to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>().cmp(&\n\
    \            d.abs().to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>()\n\
    \        ).then(a.cmp(&c))\n    }).into_iter().map(|(a, _)| nums[a]).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Enumerate`\
    \ in the current scope\n  --> /tmp/tmpvw1dnzrj.rs:12:29\n   |\n12 |     nums.iter().enumerate().sorted_by(|&(a,\
    \ b), &(c, d)| {\n   |                             ^^^^^^^^^ method not found\
    \ in `Enumerate<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = Vec::new();\n    let mut points = Vec::new();\n    for i in 0..nums.len()\
    \ {\n        let mut sum = 0;\n        for x in nums[i].to_string().chars() {\n\
    \            sum += x.to_digit(10).unwrap() as isize;\n        }\n        points.push(sum);\n\
    \    }\n    let mut i = 0;\n    while result.len() < nums.len() {\n        let\
    \ mut min = *points.iter().min().unwrap();\n        for j in 0..points.len() {\n\
    \            if points[j] == min {\n                result.push(nums[j]);\n  \
    \              points[j] = isize::max_value();\n            }\n        }\n   \
    \     i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpet96z2ms.rs:16:35

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ digit_sum_vec: Vec<(isize, isize)> = Vec::new();\n    let mut result_vec: Vec<isize>\
    \ = Vec::new();\n\n    for x in nums {\n        digit_sum_vec.push((x, sum_of_digits(x)));\n\
    \    }\n\n    digit_sum_vec.sort_by(|a, b| a.1.cmp(&b.1));\n\n    for x in digit_sum_vec\
    \ {\n        result_vec.push(x.0);\n    }\n\n    result_vec\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpwwao1v55.rs:15:32\n   |\n15 |         digit_sum_vec.push((x, sum_of_digits(x)));\n\
    \   |                                ^^^^^^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().sorted_by(|a,\
    \ b| {\n        let (a_index, a_value) = a;\n        let (b_index, b_value) =\
    \ b;\n        let a_sum = a_value.abs()\n            .to_string()\n          \
    \  .chars()\n            .map(|c| c.to_digit(10).unwrap())\n            .sum::<u32>();\n\
    \        let b_sum = b_value.abs()\n            .to_string()\n            .chars()\n\
    \            .map(|c| c.to_digit(10).unwrap())\n            .sum::<u32>();\n \
    \       if a_sum == b_sum {\n            a_index.cmp(&b_index)\n        } else\
    \ {\n            a_sum.cmp(&b_sum)\n        }\n    }).map(|(_, num)| num).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Enumerate`\
    \ in the current scope\n  --> /tmp/tmpp2as_v_7.rs:11:34\n   |\n11 |     nums.into_iter().enumerate().sorted_by(|a,\
    \ b| {\n   |                                  ^^^^^^^^^ method not found in `Enumerate<std::vec::IntoIter<isize>>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().map(|(i,\
    \ n)| ((*n).abs() as u32, *n, i)).sorted_by(|a, b| {\n        a.0.cmp(&b.0).then(a.2.cmp(&b.2))\n\
    \    }).map(|(_, n, _)| n).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Map` in the\
    \ current scope\n  --> /tmp/tmphh82mf9o.rs:11:70\n   |\n11 |     nums.iter().enumerate().map(|(i,\
    \ n)| ((*n).abs() as u32, *n, i)).sorted_by(|a, b| {\n   |                   \
    \                                                   ^^^^^^^^^ method not found\
    \ in `Map<Enumerate<std::slice::Iter<'_, isize>>, [closure@/tmp/tmphh82mf9o.rs:11:33:\
    \ 11:68]>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ new = nums.clone();\n    let mut digits_sum: Vec<isize> = nums.iter().map(|x|\
    \ {\n        let mut x = *x;\n        let mut s = 0;\n        while x != 0 {\n\
    \            s += x % 10;\n            x /= 10;\n        }\n        s\n    }).collect();\n\
    \    let mut zipped = digits_sum.iter().zip(nums.iter()).collect::<Vec<_>>();\n\
    \    zipped.sort_by(|a, b| {\n        match a.0.cmp(b.0) {\n            Ordering::Less\
    \ => Ordering::Less,\n            Ordering::Greater => Ordering::Greater,\n  \
    \          Ordering::Equal => a.1.cmp(b.1),\n        }\n    });\n    for i in\
    \ 0..nums.len() {\n        new[i] = zipped[i].1;\n    }\n    new\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmpm7cqmhwp.rs:24:13\n   |\n24 |             Ordering::Less => Ordering::Less,\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpm7cqmhwp.rs:24:31\n\
    \   |\n24 |             Ordering::Less => Ordering::Less,\n   |              \
    \                 ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpm7cqmhwp.rs:25:13\n\
    \   |\n25 |             Ordering::Greater => Ordering::Greater,\n   |        \
    \     ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmpm7cqmhwp.rs:25:34\n   |\n25\
    \ |             Ordering::Greater => Ordering::Greater,\n   |                \
    \                  ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpm7cqmhwp.rs:26:13\n\
    \   |\n26 |             Ordering::Equal => a.1.cmp(b.1),\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpm7cqmhwp.rs:30:18\n\
    \   |\n30 |         new[i] = zipped[i].1;\n   |         ------   ^^^^^^^^^^^ expected\
    \ `isize`, found `&isize`\n   |         |\n   |         expected due to the type\
    \ of this binding\n   |\nhelp: consider dereferencing the borrow\n   |\n30 | \
    \        new[i] = *zipped[i].1;\n   |                  +\n\nerror: aborting due\
    \ to 6 previous errors\n\nSome errors have detailed explanations: E0308, E0433.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_points = HashMap::new();\n    for (index, num) in nums.iter().enumerate()\
    \ {\n        let sum_digits = calc_sum_digits(*num);\n        sum_points.insert(index,\
    \ sum_digits);\n    }\n    let mut sum_points = sum_points\n        .into_iter()\n\
    \        .collect::<Vec<(usize, isize)>>();\n    sum_points.sort_by(|(index_1,\
    \ num_1), (index_2, num_2)| {\n        num_1.cmp(num_2).then(index_1.cmp(index_2))\n\
    \    });\n    let mut result = Vec::new();\n    for (index, _) in sum_points {\n\
    \        result.push(nums[index]);\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n  -->\
    \ /tmp/tmpp_migcz9.rs:11:26\n   |\n11 |     let mut sum_points = HashMap::new();\n\
    \   |                          ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0425]:\
    \ cannot find function `calc_sum_digits` in this scope\n  --> /tmp/tmpp_migcz9.rs:13:26\n\
    \   |\n13 |         let sum_digits = calc_sum_digits(*num);\n   |            \
    \              ^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0425, E0433.\n\
    For more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_to_sort = Vec::new();\n    for (index, item) in nums.iter().enumerate()\
    \ {\n        let mut sum = 0;\n        let mut num = *item;\n        while num\
    \ > 0 {\n            sum += num % 10;\n            num /= 10;\n        }\n   \
    \     nums_to_sort.push((sum, index, *item));\n    }\n    nums_to_sort.sort();\n\
    \    let mut res = Vec::new();\n    for (_, _, item) in nums_to_sort {\n     \
    \   res.push(item);\n    }\n    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-1, -11, -12, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp40hesa9m.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_map: HashMap<isize, isize> = HashMap::new();\n    for i in nums.iter() {\n\
    \        let sum = sum_of_digits(*i);\n        let ent = sum_map.entry(sum).or_insert(vec![]);\n\
    \        ent.push(*i);\n    }\n    let mut keys: Vec<isize> = sum_map.keys().cloned().collect();\n\
    \    keys.sort();\n    let mut result: Vec<isize> = vec![];\n    for i in keys.iter()\
    \ {\n        let sorted = sum_map.get(i).unwrap();\n        for j in sorted.iter()\
    \ {\n            result.push(*j);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n  --> /tmp/tmpj_ad827l.rs:11:22\n\
    \   |\n11 |     let mut sum_map: HashMap<isize, isize> = HashMap::new();\n   |\
    \                      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpj_ad827l.rs:11:46\n\
    \   |\n11 |     let mut sum_map: HashMap<isize, isize> = HashMap::new();\n   |\
    \                                              ^^^^^^^ not found in this scope\n\
    \   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpj_ad827l.rs:13:19\n   |\n13 |         let sum = sum_of_digits(*i);\n\
    \   |                   ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0412, E0425,\
    \ E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().sort_by(|x,\
    \ y| {\n        let sum_x = get_digit_sum(x.1);\n        let sum_y = get_digit_sum(y.1);\n\
    \        match sum_x.cmp(&sum_y) {\n            Ordering::Less => Ordering::Less,\n\
    \            Ordering::Greater => Ordering::Greater,\n            Ordering::Equal\
    \ => x.0.cmp(&y.0),\n        }\n    }).map(|x| x.1).collect()\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmpcc09_7q7.rs:15:13\n   |\n15 |             Ordering::Less => Ordering::Less,\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpcc09_7q7.rs:15:31\n\
    \   |\n15 |             Ordering::Less => Ordering::Less,\n   |              \
    \                 ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpcc09_7q7.rs:16:13\n\
    \   |\n16 |             Ordering::Greater => Ordering::Greater,\n   |        \
    \     ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmpcc09_7q7.rs:16:34\n   |\n16\
    \ |             Ordering::Greater => Ordering::Greater,\n   |                \
    \                  ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpcc09_7q7.rs:17:13\n\
    \   |\n17 |             Ordering::Equal => x.0.cmp(&y.0),\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0425]: cannot find function `get_digit_sum`\
    \ in this scope\n  --> /tmp/tmpcc09_7q7.rs:12:21\n   |\n12 |         let sum_x\
    \ = get_digit_sum(x.1);\n   |                     ^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `get_digit_sum` in this scope\n\
    \  --> /tmp/tmpcc09_7q7.rs:13:21\n   |\n13 |         let sum_y = get_digit_sum(y.1);\n\
    \   |                     ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]:\
    \ no method named `sort_by` found for struct `Enumerate` in the current scope\n\
    \  --> /tmp/tmpcc09_7q7.rs:11:34\n   |\n11 |     nums.into_iter().enumerate().sort_by(|x,\
    \ y| {\n   |                                  ^^^^^^^ method not found in `Enumerate<std::vec::IntoIter<isize>>`\n\
    \nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result: Vec<(isize, usize)> = vec![];\n    for i in 0..nums.len() {\n      \
    \  let mut sum = 0;\n        for digit in nums[i].to_string().chars() {\n    \
    \        sum += digit.to_digit(10).unwrap() as isize;\n        }\n        result.push((sum,\
    \ i));\n    }\n    result.sort();\n    let mut result_2: Vec<isize> = vec![];\n\
    \    for i in 0..result.len() {\n        result_2.push(nums[result[i].1]);\n \
    \   }\n    result_2\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpfvy0g4ly.rs:15:39

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted = nums.clone();\n    let mut points = nums.clone();\n    for i in 0..nums.len()\
    \ {\n        points[i] = nums[i].abs() % 10 + nums[i].abs() / 10;\n    }\n   \
    \ sorted.sort_by(|&a, &b| {\n        if points[nums.iter().position(|&x| x ==\
    \ a).unwrap()]\n            == points[nums.iter().position(|&x| x == b).unwrap()]\n\
    \        {\n            nums.iter().position(|&x| x == a).unwrap().cmp(\n    \
    \            &nums.iter().position(|&x| x == b).unwrap(),\n            )\n   \
    \     } else {\n            points[nums.iter().position(|&x| x == a).unwrap()].cmp(\n\
    \                &points[nums.iter().position(|&x| x == b).unwrap()],\n      \
    \      )\n        }\n    });\n    sorted\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpnm0lr7ip.rs:34:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO:\
    \ Implement this\n    // unimplemented!()\n    let mut nums: Vec<isize> = nums;\n\
    \    nums.sort_by(|a, b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n \
    \   nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_digits` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmpfmn4nyfn.rs:14:33\n   |\n14 |     nums.sort_by(|a,\
    \ b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n   |                 \
    \                ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]: no method\
    \ named `sum_digits` found for type `isize` in the current scope\n  --> /tmp/tmpfmn4nyfn.rs:14:59\n\
    \   |\n14 |     nums.sort_by(|a, b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n\
    \   |                                                           ^^^^^^^^^^ method\
    \ not found in `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ points: Vec<(isize, usize)> = Vec::new();\n    for (index, num) in nums.iter().enumerate()\
    \ {\n        let mut sum = 0;\n        let mut tmp = *num;\n        while tmp\
    \ != 0 {\n            sum += tmp % 10;\n            tmp /= 10;\n        }\n  \
    \      points.push((sum, index));\n    }\n    points.sort();\n    let mut result:\
    \ Vec<isize> = Vec::new();\n    for point in points {\n        result.push(nums[point.1]);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp26e26234.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO\
    \ implement this function\n    unimplemented!();\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpvzgkie82.rs:12:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result: Vec<isize> = nums.clone();\n    result.sort_by(|a, b| {\n        let\
    \ a_points = get_points(a);\n        let b_points = get_points(b);\n        if\
    \ a_points != b_points {\n            a_points.cmp(&b_points)\n        } else\
    \ {\n            a.cmp(&b)\n        }\n    });\n    result\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_points` in this scope\n  --> /tmp/tmphlw2yv1t.rs:13:24\n\
    \   |\n13 |         let a_points = get_points(a);\n   |                      \
    \  ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `get_points`\
    \ in this scope\n  --> /tmp/tmphlw2yv1t.rs:14:24\n   |\n14 |         let b_points\
    \ = get_points(b);\n   |                        ^^^^^^^^^^ help: a local variable\
    \ with a similar name exists: `a_points`\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpi80ucwsy.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&num| (sum_digits(num), num));\n    nums\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpn6vtkkae.rs:12:30\n\
    \   |\n12 |     nums.sort_by_key(|&num| (sum_digits(num), num));\n   |       \
    \                       ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    fn sum_of_digits(n:\
    \ isize) -> isize {\n        let mut n = n;\n        let mut sum = 0;\n      \
    \  while n != 0 {\n            sum += n % 10;\n            n /= 10;\n        }\n\
    \        sum\n    }\n\n    let mut nums: Vec<_> = nums.into_iter().enumerate().collect();\n\
    \    nums.sort_by_key(|&(_, n)| sum_of_digits(n));\n    nums.into_iter().map(|(_,\
    \ n)| n).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp4k4a5n95.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_vec: Vec<(isize, isize)> = Vec::new();\n    for (i, j) in nums.iter().enumerate()\
    \ {\n        let mut digits = *j;\n        let mut sum = 0;\n        while digits\
    \ != 0 {\n            sum += digits % 10;\n            digits /= 10;\n       \
    \ }\n        sum_vec.push((i as isize, sum));\n    }\n    sum_vec.sort_by(|a,\
    \ b| a.1.cmp(&b.1));\n    let mut ret: Vec<isize> = Vec::new();\n    for v in\
    \ sum_vec {\n        ret.push(nums[v.0 as usize]);\n    }\n    ret\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp5f7iff1j.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().sorted_by(|a,\
    \ b| {\n        (digits_sum(*a.1), a.0).cmp(&(digits_sum(*b.1), b.0))\n    }).map(|(_,\
    \ &e)| e).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `digits_sum` in this scope\n  --> /tmp/tmpfi1obqv8.rs:12:10\n\
    \   |\n12 |         (digits_sum(*a.1), a.0).cmp(&(digits_sum(*b.1), b.0))\n  \
    \ |          ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `digits_sum` in this scope\n  --> /tmp/tmpfi1obqv8.rs:12:39\n   |\n12 |    \
    \     (digits_sum(*a.1), a.0).cmp(&(digits_sum(*b.1), b.0))\n   |            \
    \                           ^^^^^^^^^^ not found in this scope\n\nerror[E0599]:\
    \ no method named `sorted_by` found for struct `Enumerate` in the current scope\n\
    \  --> /tmp/tmpfi1obqv8.rs:11:29\n   |\n11 |     nums.iter().enumerate().sorted_by(|a,\
    \ b| {\n   |                             ^^^^^^^^^ method not found in `Enumerate<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0425, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return vec![];\n    }\n    let mut sum = 0;\n    let mut sums = Vec::new();\n\
    \    for i in 0..nums.len() {\n        sum = sum_of_digits(nums[i]);\n       \
    \ sums.push(sum);\n    }\n    let mut nums_copy = nums.clone();\n    nums_copy.sort_by(|a,\
    \ b| {\n        let sum_a = sum_of_digits(*a);\n        let sum_b = sum_of_digits(*b);\n\
    \        if sum_a == sum_b {\n            return a.cmp(b);\n        }\n      \
    \  return sum_a.cmp(&sum_b);\n    });\n    return nums_copy;\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpcu1r6rhx.rs:17:15\n   |\n17 |         sum = sum_of_digits(nums[i]);\n\
    \   |               ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `sum_of_digits` in this scope\n  --> /tmp/tmpcu1r6rhx.rs:22:21\n\
    \   |\n22 |         let sum_a = sum_of_digits(*a);\n   |                     ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_digits`\
    \ in this scope\n  --> /tmp/tmpcu1r6rhx.rs:23:21\n   |\n23 |         let sum_b\
    \ = sum_of_digits(*b);\n   |                     ^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|n| sum_digits(*n));\n    nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp3jsrsttk.rs:12:26\n\
    \   |\n12 |     nums.sort_by_key(|n| sum_digits(*n));\n   |                  \
    \        ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return vec![];\n    }\n    let mut sums = vec![];\n    for (i, n)\
    \ in nums.iter().enumerate() {\n        sums.push((n, n.abs() / 10 + n.abs() %\
    \ 10, i));\n    }\n    sums.sort_by(|(a, a_sum, a_i), (b, b_sum, b_i)| {\n   \
    \     if a_sum == b_sum {\n            return a_i.cmp(b_i);\n        }\n     \
    \   a_sum.cmp(b_sum)\n    });\n    sums.iter().map(|(n, _, _)| *n).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<isize>` cannot be built from an iterator\
    \ over elements of type `&isize`\n    --> /tmp/tmp4fsk0o13.rs:24:37\n     |\n\
    24   |     sums.iter().map(|(n, _, _)| *n).collect()\n     |                 \
    \                    ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // ---------------------------\n\
    \    // FILL IN THE CODE HERE\n    // ---------------------------\n    vec![]\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp2gzbruv_.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().sorted_by(|a,\
    \ b|\n        (sum_digits(a.1), a.0).cmp(&(sum_digits(b.1), b.0))\n    ).map(|(_,\
    \ v)| v).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpk66padjq.rs:12:10\n\
    \   |\n12 |         (sum_digits(a.1), a.0).cmp(&(sum_digits(b.1), b.0))\n   |\
    \          ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_digits` in this scope\n  --> /tmp/tmpk66padjq.rs:12:38\n   |\n12 |    \
    \     (sum_digits(a.1), a.0).cmp(&(sum_digits(b.1), b.0))\n   |              \
    \                        ^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no\
    \ method named `sorted_by` found for struct `Enumerate` in the current scope\n\
    \  --> /tmp/tmpk66padjq.rs:11:34\n   |\n11 |     nums.into_iter().enumerate().sorted_by(|a,\
    \ b|\n   |                                  ^^^^^^^^^ method not found in `Enumerate<std::vec::IntoIter<isize>>`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0599.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    fn get_sum_of_digits(n:\
    \ isize) -> isize {\n        let mut sum = 0;\n        let mut n = n;\n      \
    \  while n != 0 {\n            sum += n % 10;\n            n /= 10;\n        }\n\
    \        sum\n    }\n\n    let mut nums = nums;\n    let mut result = Vec::with_capacity(nums.len());\n\
    \    while !nums.is_empty() {\n        let mut min_index = 0;\n        let mut\
    \ min_value = std::isize::MAX;\n        for (i, x) in nums.iter().enumerate()\
    \ {\n            let digit_sum = get_sum_of_digits(*x);\n            if digit_sum\
    \ < min_value {\n                min_index = i;\n                min_value = digit_sum;\n\
    \            }\n        }\n        result.push(nums.remove(min_index));\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpc_ihsr13.rs:40:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // 0. sort\
    \ by points\n    // 1. sort by indices if the points are the same\n\n    use std::cmp::Ordering;\n\
    \n    let mut sorted_nums = nums.clone();\n    sorted_nums.sort_by(|a, b| {\n\
    \        let points_a = a.abs() as usize;\n        let points_b = b.abs() as usize;\n\
    \        match points_a.cmp(&points_b) {\n            Ordering::Equal => a.cmp(&b),\n\
    \            res => res,\n        }\n    });\n    sorted_nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-1, 1, -11, 11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpv7kla8r5.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_with_sum: Vec<_> = nums.iter().enumerate().map(|(index, num)| (num, index,\
    \ num.to_string().chars().map(|d| d.to_digit(10).unwrap() as isize).sum())).collect();\n\
    \    nums_with_sum.sort_by(|a, b| if a.2 == b.2 { a.1.cmp(&b.1) } else { a.2.cmp(&b.2)\
    \ });\n    nums_with_sum.iter().map(|t| *t.0).collect()\n}\n\nfn main() {\n  \
    \  let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed for `&(&isize, usize, S)`\n  -->\
    \ /tmp/tmp6vea9kpo.rs:12:28\n   |\n12 |     nums_with_sum.sort_by(|a, b| if a.2\
    \ == b.2 { a.1.cmp(&b.1) } else { a.2.cmp(&b.2) });\n   |                    \
    \        ^ consider giving this closure parameter the explicit type `&(_, _, S)`,\
    \ where the type parameter `S` is specified\n   |\n   = note: type must be known\
    \ at this point\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    if nums.len() > 1 {\n        let mut result = Vec::with_capacity(nums.len());\n\
    \        while nums.len() > 0 {\n            let index = argmin_by_key(&nums,\
    \ |&num| sum_digits(num));\n            result.push(nums.remove(index));\n   \
    \     }\n        result\n    } else {\n        nums\n    }\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `argmin_by_key` in this scope\n  -->\
    \ /tmp/tmp2uv167un.rs:15:25\n   |\n15 |             let index = argmin_by_key(&nums,\
    \ |&num| sum_digits(num));\n   |                         ^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n\
    \  --> /tmp/tmp2uv167un.rs:15:53\n   |\n15 |             let index = argmin_by_key(&nums,\
    \ |&num| sum_digits(num));\n   |                                             \
    \        ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sort_nums = nums.clone();\n    sort_nums.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \    sort_nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpph58_q2y.rs:12:30\n   |\n12 |     sort_nums.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                              ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmpph58_q2y.rs:12:53\n\
    \   |\n12 |     sort_nums.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                                                     ^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_of_digits = HashMap::new();\n    for (i, num) in nums.iter().enumerate()\
    \ {\n        sum_of_digits.insert(i, sum_of_digits_in_number(*num));\n    }\n\
    \    nums.iter().enumerate().sorted_by_key(|x| (sum_of_digits[&x.0], x.0)).map(|x|\
    \ *x.1).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n  \
    \  assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n  -->\
    \ /tmp/tmp5b6o_kfb.rs:11:29\n   |\n11 |     let mut sum_of_digits = HashMap::new();\n\
    \   |                             ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0425]: cannot find function `sum_of_digits_in_number` in this\
    \ scope\n  --> /tmp/tmp5b6o_kfb.rs:13:33\n   |\n13 |         sum_of_digits.insert(i,\
    \ sum_of_digits_in_number(*num));\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0599]: no method named `sorted_by_key` found\
    \ for struct `Enumerate` in the current scope\n  --> /tmp/tmp5b6o_kfb.rs:15:29\n\
    \   |\n15 |     nums.iter().enumerate().sorted_by_key(|x| (sum_of_digits[&x.0],\
    \ x.0)).map(|x| *x.1).collect()\n   |                             ^^^^^^^^^^^^^\
    \ method not found in `Enumerate<std::slice::Iter<'_, isize>>`\n\nerror: aborting\
    \ due to 3 previous errors\n\nSome errors have detailed explanations: E0425, E0433,\
    \ E0599.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ vec_nums = Vec::new();\n    for i in nums {\n        let mut n = i;\n      \
    \  let mut sum = 0;\n        while n != 0 {\n            sum += n % 10;\n    \
    \        n /= 10;\n        }\n        vec_nums.push((i, sum, i));\n    }\n   \
    \ vec_nums.sort_by(|a, b| a.1.cmp(&b.1));\n    let mut sorted_vec = Vec::new();\n\
    \    for i in vec_nums {\n        sorted_vec.push(i.0);\n    }\n    sorted_vec\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpjoeie8jo.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result: Vec<(isize, isize)> = Vec::new();\n    for (i, n) in nums.iter().enumerate()\
    \ {\n        let mut n = *n;\n        let mut sum = 0;\n        while n != 0 {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        result.push((sum,\
    \ i as isize));\n    }\n    result.sort();\n    let mut result2: Vec<isize> =\
    \ Vec::new();\n    for (_, i) in result {\n        result2.push(nums[i as usize]);\n\
    \    }\n    result2\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpz7b94xra.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_and_index = nums\n        .iter()\n        .enumerate()\n        .map(|(i,\
    \ &n)| (n.abs() as usize, i, n))\n        .collect::<Vec<_>>();\n    sum_and_index.sort_by_key(|&(sum,\
    \ _, _)| sum);\n    sum_and_index.iter().map(|&(_, _, n)| n).collect()\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpzw35mbln.rs:22:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().collect::<Vec<_>>().sort_by(|a,\
    \ b| sum_of_digits(a.1).cmp(&sum_of_digits(b.1)).then(a.0.cmp(&b.0))).iter().map(|x|\
    \ *x.1).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n  \
    \  assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmplkmpjx1a.rs:11:64\n   |\n11 |     nums.iter().enumerate().collect::<Vec<_>>().sort_by(|a,\
    \ b| sum_of_digits(a.1).cmp(&sum_of_digits(b.1)).then(a.0.cmp(&b.0))).iter().ma...\n\
    \   |                                                                ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_digits`\
    \ in this scope\n  --> /tmp/tmplkmpjx1a.rs:11:88\n   |\n11 |     nums.iter().enumerate().collect::<Vec<_>>().sort_by(|a,\
    \ b| sum_of_digits(a.1).cmp(&sum_of_digits(b.1)).then(a.0.cmp(&b.0))).iter().ma...\n\
    \   |                                                                        \
    \                ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `iter` found for unit type `()` in the current scope\n  --> /tmp/tmplkmpjx1a.rs:11:129\n\
    \   |\n11 | ...(a.1).cmp(&sum_of_digits(b.1)).then(a.0.cmp(&b.0))).iter().map(|x|\
    \ *x.1).collect()\n   |                                                      \
    \  ^^^^ method not found in `()`\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0425, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let sum\
    \ = |n: &isize| -> isize {\n        let mut s = 0;\n        let mut x = *n;\n\
    \        if x < 0 {\n            x = -x;\n        }\n        while x > 0 {\n \
    \           s += x % 10;\n            x /= 10;\n        }\n        s\n    };\n\
    \    let mut result = nums.clone();\n    result.sort_by(|a, b| {\n        let\
    \ s_a = sum(a);\n        let s_b = sum(b);\n        match s_a.cmp(&s_b) {\n  \
    \          Ordering::Equal => a.cmp(b),\n            Ordering::Less => Ordering::Less,\n\
    \            Ordering::Greater => Ordering::Greater,\n        }\n    });\n   \
    \ result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmpfmedm288.rs:28:13\n   |\n28 |             Ordering::Equal => a.cmp(b),\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpfmedm288.rs:29:13\n\
    \   |\n29 |             Ordering::Less => Ordering::Less,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmpfmedm288.rs:29:31\n   |\n29 |    \
    \         Ordering::Less => Ordering::Less,\n   |                            \
    \   ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmpfmedm288.rs:30:13\n   |\n30\
    \ |             Ordering::Greater => Ordering::Greater,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmpfmedm288.rs:30:34\n   |\n30 |    \
    \         Ordering::Greater => Ordering::Greater,\n   |                      \
    \            ^^^^^^^^ use of undeclared type `Ordering`\n\nerror: aborting due\
    \ to 5 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ points: Vec<(isize, usize)> = nums.iter().map(|&num| {\n        let mut sum\
    \ = 0;\n        let mut n = num;\n        while n != 0 {\n            sum += n\
    \ % 10;\n            n /= 10;\n        }\n        (sum, num as usize)\n    }).collect();\n\
    \    points.sort_by(|a, b| a.0.cmp(&b.0).then(a.1.cmp(&b.1)));\n    points.iter().map(|&point|\
    \ point.1 as isize).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpn0v1nc_v.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ vec: Vec<(isize, isize)> = Vec::new();\n    for num in nums {\n        let mut\
    \ count = 0;\n        let mut num = num;\n        if num < 0 {\n            num\
    \ = -num;\n        }\n        loop {\n            count += num % 10;\n       \
    \     num /= 10;\n            if num < 1 {\n                break;\n         \
    \   }\n        }\n        vec.push((count, num));\n    }\n    vec.sort();\n  \
    \  let mut result: Vec<isize> = Vec::new();\n    for num in vec {\n        result.push(num.1);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 0, 0, 0, 0]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmptx8520ef.rs:37:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ ret = nums.clone();\n    ret.sort_by(|a, b| sum_digits(*a).cmp(&sum_digits(*b)));\n\
    \    ret\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp_e_vjg70.rs:12:24\n\
    \   |\n12 |     ret.sort_by(|a, b| sum_digits(*a).cmp(&sum_digits(*b)));\n   |\
    \                        ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `sum_digits` in this scope\n  --> /tmp/tmp_e_vjg70.rs:12:44\n\
    \   |\n12 |     ret.sort_by(|a, b| sum_digits(*a).cmp(&sum_digits(*b)));\n   |\
    \                                            ^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO\n\
    \    let mut index = vec![];\n    for i in nums.iter() {\n        let mut count\
    \ = 0;\n        let mut num = *i;\n        while num != 0 {\n            let m\
    \ = num % 10;\n            count += m;\n            num = num / 10;\n        }\n\
    \        index.push(count);\n    }\n    let mut j = 0;\n    let mut tmp = nums.clone();\n\
    \    while j < index.len() {\n        let min = find_min(&index);\n        tmp[j]\
    \ = nums[min];\n        index[min] = std::isize::MAX;\n        j += 1;\n    }\n\
    \    tmp\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `find_min` in this scope\n  --> /tmp/tmp8yw4rb_w.rs:26:19\n\
    \   |\n26 |         let min = find_min(&index);\n   |                   ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ counter: HashMap<isize, Vec<isize>> = HashMap::new();\n    for i in nums {\n\
    \        let current = counter.entry(i.abs() % 10 + i.abs() / 10).or_insert(vec![]);\n\
    \        current.push(i);\n    }\n    let mut result: Vec<isize> = Vec::new();\n\
    \    for i in 0..10 {\n        if let Some(vector) = counter.get(&i) {\n     \
    \       for value in vector {\n                result.push(*value);\n        \
    \    }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n  --> /tmp/tmpmpn7b5_8.rs:11:22\n\
    \   |\n11 |     let mut counter: HashMap<isize, Vec<isize>> = HashMap::new();\n\
    \   |                      ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpmpn7b5_8.rs:11:51\n\
    \   |\n11 |     let mut counter: HashMap<isize, Vec<isize>> = HashMap::new();\n\
    \   |                                                   ^^^^^^^ not found in this\
    \ scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return nums;\n    }\n    let mut result: Vec<isize> = Vec::new();\n\
    \    let mut sum_of_digits: Vec<(isize, usize)> = Vec::new();\n    for (index,\
    \ num) in nums.iter().enumerate() {\n        let (sum, _): (isize, usize) = get_sum_of_digits(num.clone());\n\
    \        sum_of_digits.push((sum, index));\n    }\n    sum_of_digits.sort();\n\
    \    for item in sum_of_digits {\n        result.push(nums[item.1]);\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_sum_of_digits` in this scope\n\
    \  --> /tmp/tmpegflstlb.rs:17:40\n   |\n17 |         let (sum, _): (isize, usize)\
    \ = get_sum_of_digits(num.clone());\n   |                                    \
    \    ^^^^^^^^^^^^^^^^^ help: a local variable with a similar name exists: `sum_of_digits`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|x| {\n        x.abs()\n            .to_string()\n\
    \            .chars()\n            .map(|c| c.to_digit(10).unwrap())\n       \
    \     .sum::<u32>()\n    });\n    nums\n}\n\nfn main() {\n    let candidate =\
    \ order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp1l_76di4.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = nums.to_vec();\n    res.sort_by(|a, b| {\n        let a_sum = sum_digits(*a);\n\
    \        let b_sum = sum_digits(*b);\n        if a_sum == b_sum {\n          \
    \  Ordering::Equal\n        } else if a_sum < b_sum {\n            Ordering::Less\n\
    \        } else {\n            Ordering::Greater\n        }\n    });\n    res\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmpv_pcwf59.rs:16:13\n   |\n16 |             Ordering::Equal\n   |    \
    \         ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to\
    \ resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpv_pcwf59.rs:18:13\n\
    \   |\n18 |             Ordering::Less\n   |             ^^^^^^^^ use of undeclared\
    \ type `Ordering`\n\nerror[E0433]: failed to resolve: use of undeclared type `Ordering`\n\
    \  --> /tmp/tmpv_pcwf59.rs:20:13\n   |\n20 |             Ordering::Greater\n \
    \  |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]: cannot\
    \ find function `sum_digits` in this scope\n  --> /tmp/tmpv_pcwf59.rs:13:21\n\
    \   |\n13 |         let a_sum = sum_digits(*a);\n   |                     ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_digits` in\
    \ this scope\n  --> /tmp/tmpv_pcwf59.rs:14:21\n   |\n14 |         let b_sum =\
    \ sum_digits(*b);\n   |                     ^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().sorted_by(|(i,\
    \ v), (j, w)| (sum_digits(*v) * 1000000 + *i as isize).cmp(&(sum_digits(*w) *\
    \ 1000000 + *j as isize))).map(|(_, num)| num).collect()\n}\n\nfn main() {\n \
    \   let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpq1tpdi7z.rs:11:62\n\
    \   |\n11 |     nums.into_iter().enumerate().sorted_by(|(i, v), (j, w)| (sum_digits(*v)\
    \ * 1000000 + *i as isize).cmp(&(sum_digits(*w) * 1000000 + *j ...\n   |     \
    \                                                         ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n\
    \  --> /tmp/tmpq1tpdi7z.rs:11:108\n   |\n11 | ...)| (sum_digits(*v) * 1000000\
    \ + *i as isize).cmp(&(sum_digits(*w) * 1000000 + *j as isize))).map(|(_, num)|\
    \ num).collect()\n   |                                                      ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0599]: no method named `sorted_by` found for\
    \ struct `Enumerate` in the current scope\n  --> /tmp/tmpq1tpdi7z.rs:11:34\n \
    \  |\n11 |     nums.into_iter().enumerate().sorted_by(|(i, v), (j, w)| (sum_digits(*v)\
    \ * 1000000 + *i as isize).cmp(&(sum_digits(*w) * 1000000 + *j ...\n   |     \
    \                             ^^^^^^^^^ method not found in `Enumerate<std::vec::IntoIter<isize>>`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0599.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|x| x.abs() as isize % 10 + x.abs() / 10);\n\
    \    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp3r55kj_z.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        let sum_a = sum_of_digits(*a);\n\
    \        let sum_b = sum_of_digits(*b);\n        if sum_a != sum_b {\n       \
    \     sum_a.cmp(&sum_b)\n        } else {\n            nums.iter().position(|&x|\
    \ x == *a).cmp(&nums.iter().position(|&x| x == *b))\n        }\n    });\n    result\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpxa8mpb2x.rs:13:21\n   |\n13 |         let sum_a = sum_of_digits(*a);\n\
    \   |                     ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmpxa8mpb2x.rs:14:21\n\
    \   |\n14 |         let sum_b = sum_of_digits(*b);\n   |                     ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|x| (sum_of_digits(*x), nums.iter().position(|&e|\
    \ e == *x).unwrap()));\n    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpt9rvj_td.rs:12:27\n   |\n12 |     nums.sort_by_key(|x| (sum_of_digits(*x),\
    \ nums.iter().position(|&e| e == *x).unwrap()));\n   |                       \
    \    ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted = nums.clone();\n    sorted.sort_by(|a, b| a.abs().sum_of_digits().cmp(&b.abs().sum_of_digits()));\n\
    \    sorted\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_of_digits` found for type `isize` in\
    \ the current scope\n  --> /tmp/tmpuhthcc8j.rs:12:35\n   |\n12 |     sorted.sort_by(|a,\
    \ b| a.abs().sum_of_digits().cmp(&b.abs().sum_of_digits()));\n   |           \
    \                        ^^^^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `sum_of_digits` found for type `isize` in the current scope\n\
    \  --> /tmp/tmpuhthcc8j.rs:12:64\n   |\n12 |     sorted.sort_by(|a, b| a.abs().sum_of_digits().cmp(&b.abs().sum_of_digits()));\n\
    \   |                                                                ^^^^^^^^^^^^^\
    \ method not found in `isize`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ m : Vec<(isize, isize)> = nums.iter().map(|&i| (i, i.abs())).collect();\n  \
    \  m.sort_by(|&(_, a), &(_, b)| a.cmp(&b));\n    let mut prev = m[0].1;\n    let\
    \ mut index = 0;\n    for i in 1..m.len() {\n        if m[i].1 != prev {\n   \
    \         sort_by_index(&mut m[index..i]);\n            index = i;\n         \
    \   prev = m[i].1;\n        }\n    }\n    sort_by_index(&mut m[index..]);\n  \
    \  m.iter().map(|&(a, _)| a).collect()\n}\n\nfn main() {\n    let candidate =\
    \ order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sort_by_index` in this scope\n  -->\
    \ /tmp/tmpflft1xku.rs:17:13\n   |\n17 |             sort_by_index(&mut m[index..i]);\n\
    \   |             ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `sort_by_index` in this scope\n  --> /tmp/tmpflft1xku.rs:22:5\n\
    \   |\n22 |     sort_by_index(&mut m[index..]);\n   |     ^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|num| {\n        let mut res = 0;\n     \
    \   let mut num = *num;\n        if num < 0 {\n            num = -num;\n     \
    \   }\n        while num > 0 {\n            res += num % 10;\n            num\
    \ /= 10;\n        }\n        res\n    });\n    nums\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp7f7320je.rs:29:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    fn sum_digits(num:\
    \ isize) -> isize {\n        let mut num = num;\n        let mut sum = 0;\n  \
    \      while num != 0 {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        sum\n    }\n\n    let mut nums = nums;\n    nums.sort_by_key(|x|\
    \ (sum_digits(*x), x));\n    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error: lifetime may not live long enough\n  --> /tmp/tmpl_8zgylm.rs:22:26\n\
    \   |\n22 |     nums.sort_by_key(|x| (sum_digits(*x), x));\n   |             \
    \          -- ^^^^^^^^^^^^^^^^^^^ returning this value requires that `'1` must\
    \ outlive `'2`\n   |                       ||\n   |                       |return\
    \ type of closure is (isize, &'2 isize)\n   |                       has type `&'1\
    \ isize`\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO\n\
    \    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 11, -1, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpj5fgodbm.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_vec: Vec<(isize, usize)> = vec![];\n    let mut ordered_vec: Vec<isize>\
    \ = vec![];\n    let mut sorted_vec: Vec<(isize, usize)> = vec![];\n\n    for\
    \ i in 0..nums.len() {\n        sum_vec.push((sum_digits(nums[i]), i));\n    }\n\
    \n    sorted_vec = sum_vec.clone();\n    sorted_vec.sort();\n\n    for i in 0..sorted_vec.len()\
    \ {\n        for j in 0..sum_vec.len() {\n            if sum_vec[j].0 == sorted_vec[i].0\
    \ && !ordered_vec.contains(&nums[sum_vec[j].1]) {\n                ordered_vec.push(nums[sum_vec[j].1]);\n\
    \            }\n        }\n    }\n\n    ordered_vec\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpl34vuha_.rs:16:23\n\
    \   |\n16 |         sum_vec.push((sum_digits(nums[i]), i));\n   |            \
    \           ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = nums.clone();\n    res.sort_by(|a, b| a.abs().to_string().chars().sum::<u32>().cmp(&b.abs().to_string().chars().sum::<u32>()));\n\
    \    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `u32: Sum<char>` is not satisfied\n    -->\
    \ /tmp/tmpnmmu0f21.rs:12:52\n     |\n12   |     res.sort_by(|a, b| a.abs().to_string().chars().sum::<u32>().cmp(&b.abs().to_string().chars().sum::<u32>()));\n\
    \     |                                                    ^^^ the trait `Sum<char>`\
    \ is not implemented for `u32`\n     |\n     = help: the following other types\
    \ implement trait `Sum<A>`:\n               <f32 as Sum<&'a f32>>\n          \
    \     <f32 as Sum>\n               <f64 as Sum<&'a f64>>\n               <f64\
    \ as Sum>\n               <i128 as Sum<&'a i128>>\n               <i128 as Sum>\n\
    \               <i16 as Sum<&'a i16>>\n               <i16 as Sum>\n         \
    \    and 20 others\nnote: required by a bound in `std::iter::Iterator::sum`\n\n\
    error[E0277]: the trait bound `u32: Sum<char>` is not satisfied\n    --> /tmp/tmpnmmu0f21.rs:12:98\n\
    \     |\n12   |     res.sort_by(|a, b| a.abs().to_string().chars().sum::<u32>().cmp(&b.abs().to_string().chars().sum::<u32>()));\n\
    \     |                                                                      \
    \                            ^^^ the trait `Sum<char>` is not implemented for\
    \ `u32`\n     |\n     = help: the following other types implement trait `Sum<A>`:\n\
    \               <f32 as Sum<&'a f32>>\n               <f32 as Sum>\n         \
    \      <f64 as Sum<&'a f64>>\n               <f64 as Sum>\n               <i128\
    \ as Sum<&'a i128>>\n               <i128 as Sum>\n               <i16 as Sum<&'a\
    \ i16>>\n               <i16 as Sum>\n             and 20 others\nnote: required\
    \ by a bound in `std::iter::Iterator::sum`\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|a| sum_digits(*a));\n    nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpdok_xcls.rs:12:26\n\
    \   |\n12 |     nums.sort_by_key(|a| sum_digits(*a));\n   |                  \
    \        ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = nums.clone();\n    res.sort_by(|a, b| {\n        let sum_a = sum_of_digits(*a);\n\
    \        let sum_b = sum_of_digits(*b);\n        match sum_a.cmp(&sum_b) {\n \
    \           Ordering::Equal => a.cmp(&b),\n            _ => sum_a.cmp(&sum_b),\n\
    \        }\n    });\n    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmplu6io8tl.rs:16:13\n   |\n16 |             Ordering::Equal => a.cmp(&b),\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmplu6io8tl.rs:13:21\n\
    \   |\n13 |         let sum_a = sum_of_digits(*a);\n   |                     ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_of_digits`\
    \ in this scope\n  --> /tmp/tmplu6io8tl.rs:14:21\n   |\n14 |         let sum_b\
    \ = sum_of_digits(*b);\n   |                     ^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0425, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|x| (*x as i64).abs() % 10 + (*x as i64 /\
    \ 10).abs() % 10);\n    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp2qv8h05d.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums: Vec<(isize, usize)> = nums.into_iter().enumerate().map(|(i, n)| (n, i)).collect();\n\
    \    nums.sort_by_key(|(n, _)| {\n        n.abs()\n            .to_string()\n\
    \            .chars()\n            .map(|c| c.to_digit(10).unwrap() as isize)\n\
    \            .sum::<isize>()\n    });\n    nums.into_iter().map(|(n, _)| n).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpfyip2ywk.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpi80ucwsy.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    let mut sums = vec![];\n    for item in nums.iter_mut() {\n\
    \        let mut digit_sum = 0;\n        let mut temp = *item;\n        while\
    \ temp != 0 {\n            digit_sum += temp % 10;\n            temp /= 10;\n\
    \        }\n        sums.push(digit_sum);\n    }\n    for i in 0..nums.len() {\n\
    \        for j in i + 1..nums.len() {\n            if sums[i] < sums[j] || (sums[i]\
    \ == sums[j] && i > j) {\n                sums.swap(i, j);\n                nums.swap(i,\
    \ j);\n            }\n        }\n    }\n    nums\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[11, 1, -1, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpb8hemka7.rs:35:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().sorted_by(|(_,\
    \ a), (_, b)| \n        sum_digits(*a).cmp(&sum_digits(*b))\n        .then(a.cmp(b))\n\
    \    ).map(|(i, _)| nums[i]).collect()\n}\n\nfn main() {\n    let candidate =\
    \ order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp811ystlz.rs:12:9\n\
    \   |\n12 |         sum_digits(*a).cmp(&sum_digits(*b))\n   |         ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_digits` in\
    \ this scope\n  --> /tmp/tmp811ystlz.rs:12:29\n   |\n12 |         sum_digits(*a).cmp(&sum_digits(*b))\n\
    \   |                             ^^^^^^^^^^ not found in this scope\n\nerror[E0599]:\
    \ no method named `sorted_by` found for struct `Enumerate` in the current scope\n\
    \  --> /tmp/tmp811ystlz.rs:11:29\n   |\n11 |     nums.iter().enumerate().sorted_by(|(_,\
    \ a), (_, b)| \n   |                             ^^^^^^^^^ method not found in\
    \ `Enumerate<std::slice::Iter<'_, isize>>`\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0425, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return nums;\n    }\n    let mut nums = nums;\n    nums.sort_by(|a,\
    \ b| a.abs().to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>().cmp(&b.abs().to_string().chars().map(|c|\
    \ c.to_digit(10).unwrap()).sum::<u32>()));\n    nums\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmphk6luo3j.rs:21:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ new_vec = nums.to_vec();\n    new_vec.sort_by(|a, b| -> std::cmp::Ordering {\n\
    \        let sum_a = a.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        let sum_b = b.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        sum_a.cmp(&sum_b)\n    });\n    new_vec\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpvkqzphlu.rs:13:66

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        if sum_of_digits(*a)\
    \ == sum_of_digits(*b) {\n            a.cmp(b)\n        } else {\n           \
    \ sum_of_digits(*a).cmp(&sum_of_digits(*b))\n        }\n    });\n    result\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpk9hwnfak.rs:13:12\n   |\n13 |         if sum_of_digits(*a) == sum_of_digits(*b)\
    \ {\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `sum_of_digits` in this scope\n  --> /tmp/tmpk9hwnfak.rs:13:33\n\
    \   |\n13 |         if sum_of_digits(*a) == sum_of_digits(*b) {\n   |        \
    \                         ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmpk9hwnfak.rs:16:13\n\
    \   |\n16 |             sum_of_digits(*a).cmp(&sum_of_digits(*b))\n   |      \
    \       ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_of_digits` in this scope\n  --> /tmp/tmpk9hwnfak.rs:16:36\n   |\n16 | \
    \            sum_of_digits(*a).cmp(&sum_of_digits(*b))\n   |                 \
    \                   ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 4 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_with_sum: Vec<_> = nums.iter().enumerate().map(|(i, n)| (i, n, n.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum())).collect();\n    nums_with_sum.sort_by(|a,\
    \ b| match a.2.cmp(&b.2) {\n        Ordering::Equal => a.0.cmp(&b.0),\n      \
    \  ordering => ordering\n    });\n    nums_with_sum.iter().map(|(i, n, _)| *n).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmppb10gt9d.rs:13:9\n   |\n13 |         Ordering::Equal => a.0.cmp(&b.0),\n\
    \   |         ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0282]: type\
    \ annotations needed for `&(usize, &isize, S)`\n  --> /tmp/tmppb10gt9d.rs:12:28\n\
    \   |\n12 |     nums_with_sum.sort_by(|a, b| match a.2.cmp(&b.2) {\n   |     \
    \                       ^ consider giving this closure parameter the explicit\
    \ type `&(_, _, S)`, where the type parameter `S` is specified\n   |\n   = note:\
    \ type must be known at this point\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0282, E0433.\nFor more information\
    \ about an error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|num| {\n        let mut num = *num;\n  \
    \      let mut sum = 0;\n        while num != 0 {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        sum\n    });\n    nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpc4n82zd_.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let pairs:\
    \ Vec<(isize, usize)> = nums.iter().enumerate().map(|(i, n)| (*n, i)).collect();\n\
    \    let mut sorted_pairs: Vec<(isize, usize)> = pairs.clone();\n    sorted_pairs.sort_by(|(a,\
    \ _), (b, _)| (a.abs() as usize % 10 + a.abs() as usize / 10).cmp(&(b.abs() as\
    \ usize % 10 + b.abs() as usize / 10)));\n    sorted_pairs.sort_by(|(_, a), (_,\
    \ b)| a.cmp(b));\n    sorted_pairs.iter().map(|(n, _)| *n).collect()\n}\n\nfn\
    \ main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 11, -1, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp3n91kas3.rs:20:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&x| {\n        x.abs()\n            .to_string()\n\
    \            .chars()\n            .map(|x| x.to_digit(10).unwrap() as isize)\n\
    \            .sum::<isize>()\n    });\n    nums\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpgxwih6qo.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return nums;\n    }\n    let mut nums = nums;\n    nums.sort_by(|a,\
    \ b| calc_sum_of_digits(*a).cmp(&calc_sum_of_digits(*b)));\n    nums\n}\n\nfn\
    \ main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `calc_sum_of_digits` in this scope\n\
    \  --> /tmp/tmpvsp69qo6.rs:15:25\n   |\n15 |     nums.sort_by(|a, b| calc_sum_of_digits(*a).cmp(&calc_sum_of_digits(*b)));\n\
    \   |                         ^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `calc_sum_of_digits` in this scope\n  --> /tmp/tmpvsp69qo6.rs:15:53\n\
    \   |\n15 |     nums.sort_by(|a, b| calc_sum_of_digits(*a).cmp(&calc_sum_of_digits(*b)));\n\
    \   |                                                     ^^^^^^^^^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ arr: Vec<(isize, isize)> = nums.into_iter().enumerate().map(|(i, x)| (i, x)).collect();\n\
    \    arr.sort_by(|a, b| a.1.abs().to_string().chars().map(|c| c.to_digit(10).unwrap()\
    \ as isize).sum::<isize>().cmp(&b.1.abs().to_string().chars().map(|c| c.to_digit(10).unwrap()\
    \ as isize).sum::<isize>()).then(a.0.cmp(&b.0)));\n    arr.into_iter().map(|(_,\
    \ x)| x).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `Vec<(isize, isize)>` cannot be built from\
    \ an iterator over elements of type `(usize, isize)`\n    --> /tmp/tmp77w4k7at.rs:11:90\n\
    \     |\n11   |     let mut arr: Vec<(isize, isize)> = nums.into_iter().enumerate().map(|(i,\
    \ x)| (i, x)).collect();\n     |                                             \
    \                                             ^^^^^^^ value of type `Vec<(isize,\
    \ isize)>` cannot be built from `std::iter::Iterator<Item=(usize, isize)>`\n \
    \    |\n     = help: the trait `FromIterator<(usize, isize)>` is not implemented\
    \ for `Vec<(isize, isize)>`\n     = help: the trait `FromIterator<T>` is implemented\
    \ for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ numbers: Vec<(isize, isize)> = nums.iter().map(|x| (x.abs(), x.abs() % 10)).collect();\n\
    \    for i in 0..numbers.len() {\n        let mut j = i + 1;\n        while j\
    \ < numbers.len() {\n            if numbers[i].1 > numbers[j].1 {\n          \
    \      let temp = numbers[i];\n                numbers[i] = numbers[j];\n    \
    \            numbers[j] = temp;\n            }\n            j += 1;\n        }\n\
    \    }\n    let mut i = 0;\n    while i < numbers.len() {\n        let mut j =\
    \ i + 1;\n        while j < numbers.len() {\n            if numbers[i].1 == numbers[j].1\
    \ {\n                if numbers[i].0 > numbers[j].0 {\n                    let\
    \ temp = numbers[i];\n                    numbers[i] = numbers[j];\n         \
    \           numbers[j] = temp;\n                }\n            }\n           \
    \ j += 1;\n        }\n        i += 1;\n    }\n    let result: Vec<isize> = numbers.iter().map(|x|\
    \ x.1).collect();\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 1, 1, 2]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpgxnt5wab.rs:44:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_vec: Vec<(isize, usize)> = Vec::new();\n    let mut idx: usize = 0;\n  \
    \  for i in nums {\n        let sum = i.abs() / 10 + i.abs() % 10;\n        sum_vec.push((sum,\
    \ idx));\n        idx += 1;\n    }\n    sum_vec.sort();\n    let mut res: Vec<isize>\
    \ = Vec::new();\n    for i in sum_vec {\n        res.push(nums[i.1]);\n    }\n\
    \    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmp5h9bzgn5.rs:21:18\n\
    \    |\n10  | fn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    |    \
    \                ---- move occurs because `nums` has type `Vec<isize>`, which\
    \ does not implement the `Copy` trait\n...\n13  |     for i in nums {\n    | \
    \             ---- `nums` moved due to this implicit call to `.into_iter()`\n\
    ...\n21  |         res.push(nums[i.1]);\n    |                  ^^^^ value borrowed\
    \ here after move\n    |\nnote: this function takes ownership of the receiver\
    \ `self`, which moves `nums`\nhelp: consider iterating over a slice of the `Vec<isize>`'s\
    \ content to avoid moving into the `for` loop\n    |\n13  |     for i in &nums\
    \ {\n    |              +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted = nums.clone();\n    sorted.sort_by(|a, b| (a % 10 + a / 10 + b % 10\
    \ + b / 10).cmp(&(b % 10 + b / 10 + a % 10 + a / 10)));\n    sorted\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 11, -1, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpayivmv4z.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum = vec![];\n    for i in nums {\n        let mut a = i;\n        let mut\
    \ b = 0;\n        while a != 0 {\n            b += a % 10;\n            a /= 10;\n\
    \        }\n        sum.push(b);\n    }\n    let mut result = vec![];\n    while\
    \ !sum.is_empty() {\n        let mut min = 0;\n        for i in 0..sum.len() {\n\
    \            if sum[i] < sum[min] {\n                min = i;\n            }\n\
    \        }\n        result.push(nums[min]);\n        sum.remove(min);\n      \
    \  nums.remove(min);\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpp4nyi4ut.rs:29:21\n\
    \    |\n10  | fn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    |    \
    \                ---- move occurs because `nums` has type `Vec<isize>`, which\
    \ does not implement the `Copy` trait\n11  |     let mut sum = vec![];\n12  |\
    \     for i in nums {\n    |              ---- `nums` moved due to this implicit\
    \ call to `.into_iter()`\n...\n29  |         result.push(nums[min]);\n    |  \
    \                   ^^^^ value borrowed here after move\n    |\nnote: this function\
    \ takes ownership of the receiver `self`, which moves `nums`\nhelp: consider iterating\
    \ over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n\
    \    |\n12  |     for i in &nums {\n    |              +\n\nerror[E0596]: cannot\
    \ borrow `nums` as mutable, as it is not declared as mutable\n  --> /tmp/tmpp4nyi4ut.rs:31:9\n\
    \   |\n10 | fn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n   |       \
    \             ---- help: consider changing this to be mutable: `mut nums`\n...\n\
    31 |         nums.remove(min);\n   |         ^^^^^^^^^^^^^^^^ cannot borrow as\
    \ mutable\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0382, E0596.\nFor more information about an error, try `rustc\
    \ --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().sorted_by(|(_,\
    \ a), (_, b)| {\n        let a = sum_digits(*a);\n        let b = sum_digits(*b);\n\
    \        a.cmp(&b)\n    }).map(|(_, a)| a).collect()\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpg49lh_bo.rs:12:17\n\
    \   |\n12 |         let a = sum_digits(*a);\n   |                 ^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `sum_digits` in this\
    \ scope\n  --> /tmp/tmpg49lh_bo.rs:13:17\n   |\n13 |         let b = sum_digits(*b);\n\
    \   |                 ^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `sorted_by` found for struct `Enumerate` in the current scope\n  --> /tmp/tmpg49lh_bo.rs:11:34\n\
    \   |\n11 |     nums.into_iter().enumerate().sorted_by(|(_, a), (_, b)| {\n  \
    \ |                                  ^^^^^^^^^ method not found in `Enumerate<std::vec::IntoIter<isize>>`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0599.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums: Vec<(isize, usize)> = nums.into_iter().enumerate().map(|(index, num)|\
    \ (num, index)).collect();\n    nums.sort_by(|a, b| {\n        let sum_a = sum_of_digits(a.0);\n\
    \        let sum_b = sum_of_digits(b.0);\n        match sum_a.cmp(&sum_b) {\n\
    \            Ordering::Equal => a.1.cmp(&b.1),\n            Ordering::Less =>\
    \ Ordering::Less,\n            Ordering::Greater => Ordering::Greater,\n     \
    \   }\n    });\n    nums.into_iter().map(|(num, _)| num).collect()\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmplpq749tt.rs:16:13\n   |\n16 |             Ordering::Equal => a.1.cmp(&b.1),\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmplpq749tt.rs:17:13\n\
    \   |\n17 |             Ordering::Less => Ordering::Less,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmplpq749tt.rs:17:31\n   |\n17 |    \
    \         Ordering::Less => Ordering::Less,\n   |                            \
    \   ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmplpq749tt.rs:18:13\n   |\n18\
    \ |             Ordering::Greater => Ordering::Greater,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmplpq749tt.rs:18:34\n   |\n18 |    \
    \         Ordering::Greater => Ordering::Greater,\n   |                      \
    \            ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]: cannot\
    \ find function `sum_of_digits` in this scope\n  --> /tmp/tmplpq749tt.rs:13:21\n\
    \   |\n13 |         let sum_a = sum_of_digits(a.0);\n   |                    \
    \ ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `sum_of_digits` in this scope\n  --> /tmp/tmplpq749tt.rs:14:21\n   |\n14 | \
    \        let sum_b = sum_of_digits(b.0);\n   |                     ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 7 previous errors\n\nSome\
    \ errors have detailed explanations: E0425, E0433.\nFor more information about\
    \ an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    fn sum_digits(mut\
    \ x: isize) -> isize {\n        let mut sum = 0;\n        while x != 0 {\n   \
    \         sum += x % 10;\n            x /= 10;\n        }\n        sum\n    }\n\
    \n    let mut mapped: Vec<(isize, isize)> = nums.iter().map(|&x| (x, sum_digits(x))).collect();\n\
    \    mapped.sort_by(|a, b| a.1.cmp(&b.1));\n    mapped.iter().map(|&(x, _)| x).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpobyx8rsw.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|num| num.abs() / 10 + num.abs() % 10);\n\
    \    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpytyb0y7c.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO:\
    \ implement this function\n    unimplemented!()\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpkn2k69d6.rs:12:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = Vec::new();\n    let v: Vec<isize> = nums.iter().map(|x| digit_sum(*x)).collect();\n\
    \    for x in v.iter() {\n        let mut i = 0;\n        for y in &v {\n    \
    \        if x > y {\n                i += 1;\n            }\n        }\n     \
    \   result.insert(i, nums[i]);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `digit_sum` in this scope\n  --> /tmp/tmp00sfv3gj.rs:12:45\n\
    \   |\n12 |     let v: Vec<isize> = nums.iter().map(|x| digit_sum(*x)).collect();\n\
    \   |                                             ^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result: Vec<isize> = Vec::new();\n    let mut sums = Vec::new();\n    for i\
    \ in nums.clone() {\n        sums.push(i.abs() as usize);\n    }\n    let mut\
    \ sum = 0;\n    while !sums.is_empty() {\n        for i in 0..sums.len() {\n \
    \           sum += sums[i] % 10;\n            sums[i] /= 10;\n        }\n    \
    \    let mut index = 0;\n        let mut min = 0;\n        for i in 0..sums.len()\
    \ {\n            if sums[i] != 0 {\n                min = sums[i];\n         \
    \       index = i;\n                break;\n            }\n        }\n       \
    \ for i in index..sums.len() {\n            if sums[i] < min && sums[i] != 0 {\n\
    \                min = sums[i];\n                index = i;\n            }\n \
    \       }\n        result.push(nums[index]);\n        sums.remove(index);\n  \
    \      nums.remove(index);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "warning: variable `sum` is assigned to, but never used\n  --> /tmp/tmpez2zks_l.rs:16:13\n\
    \   |\n16 |     let mut sum = 0;\n   |             ^^^\n   |\n   = note: `#[warn(unused_variables)]`\
    \ on by default\n   = note: consider using `_sum` instead\n\nerror[E0596]: cannot\
    \ borrow `nums` as mutable, as it is not declared as mutable\n  --> /tmp/tmpez2zks_l.rs:39:9\n\
    \   |\n10 | fn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n   |       \
    \             ---- help: consider changing this to be mutable: `mut nums`\n...\n\
    39 |         nums.remove(index);\n   |         ^^^^^^^^^^^^^^^^^^ cannot borrow\
    \ as mutable\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor\
    \ more information about this error, try `rustc --explain E0596`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = nums.clone();\n    res.sort_by(|a, b| {\n        if a.abs() % 10 == b.abs()\
    \ % 10 {\n            a.cmp(b)\n        } else {\n            a.abs() % 10 < b.abs()\
    \ % 10\n        }\n    });\n    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpz46_yl79.rs:16:13\n   |\n\
    16 |             a.abs() % 10 < b.abs() % 10\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected enum `std::cmp::Ordering`, found `bool`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|n| {\n        n.abs()\n            .to_string()\n\
    \            .chars()\n            .map(|c| c.to_digit(10).unwrap() as isize)\n\
    \            .sum::<isize>()\n    });\n    nums\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpzo6sux_d.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // TODO:\
    \ write the code\n    unimplemented!();\n}\n\nfn main() {\n    let candidate =\
    \ order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpltuna1je.rs:12:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    fn sum_digits(num:\
    \ isize) -> isize {\n        num.abs()\n            .to_string()\n           \
    \ .chars()\n            .filter_map(|ch| ch.to_digit(10))\n            .map(|x|\
    \ x as isize)\n            .sum()\n    }\n\n    let mut sorted = nums.clone();\n\
    \    sorted.sort_by_key(|&x| (sum_digits(x), x));\n    sorted\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-1, 1, -11, 11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp4w_8jppq.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted = nums.clone();\n    sorted.sort_by(|a, b| {\n        let mut ap = 0;\n\
    \        let mut bp = 0;\n        let mut a = *a;\n        let mut b = *b;\n \
    \       while a != 0 {\n            ap += a % 10;\n            a /= 10;\n    \
    \    }\n        while b != 0 {\n            bp += b % 10;\n            b /= 10;\n\
    \        }\n        ap.cmp(&bp)\n    });\n    sorted\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmph1q3ae94.rs:32:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_cp = nums.clone();\n    nums_cp.sort_by(|a, b| match a.abs().to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap()).sum::<u32>().cmp(&b.abs().to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap()).sum::<u32>()) {\n        Ordering::Less => Ordering::Less,\n\
    \        Ordering::Greater => Ordering::Greater,\n        Ordering::Equal => a.cmp(&b),\n\
    \    });\n    nums_cp\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmpakjdvhym.rs:13:9\n   |\n13 |         Ordering::Less => Ordering::Less,\n\
    \   |         ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpakjdvhym.rs:13:27\n\
    \   |\n13 |         Ordering::Less => Ordering::Less,\n   |                  \
    \         ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to\
    \ resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpakjdvhym.rs:14:9\n\
    \   |\n14 |         Ordering::Greater => Ordering::Greater,\n   |         ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmpakjdvhym.rs:14:30\n   |\n14 |    \
    \     Ordering::Greater => Ordering::Greater,\n   |                          \
    \    ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmpakjdvhym.rs:15:9\n   |\n15\
    \ |         Ordering::Equal => a.cmp(&b),\n   |         ^^^^^^^^ use of undeclared\
    \ type `Ordering`\n\nerror: aborting due to 5 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    let digits_sum = |num: &isize| -> isize {\n        let mut\
    \ num = *num;\n        let mut sum = 0;\n        while num != 0 {\n          \
    \  sum += num % 10;\n            num /= 10;\n        }\n        sum\n    };\n\
    \    nums.sort_by(|a, b| {\n        let sum_a = digits_sum(a);\n        let sum_b\
    \ = digits_sum(b);\n        if sum_a == sum_b {\n            a.cmp(b)\n      \
    \  } else {\n            sum_a.cmp(&sum_b)\n        }\n    });\n    nums\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpayg7ftrh.rs:35:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return vec![];\n    }\n    let mut res = nums.clone();\n    res.sort_by(|a,\
    \ b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n    res\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmp73hm6v2o.rs:15:24\n   |\n15 |     res.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                        ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmp73hm6v2o.rs:15:47\n\
    \   |\n15 |     res.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                                               ^^^^^^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_with_sum: Vec<_> = nums.iter().enumerate().map(|(i, v)| (v, sum_digits(*v),\
    \ i)).collect();\n    nums_with_sum.sort_by(|a, b| a.1.cmp(&b.1).then(a.2.cmp(&b.2)));\n\
    \    nums_with_sum.into_iter().map(|(v, _, _)| *v).collect()\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp8hche_b3.rs:11:78\n\
    \   |\n11 |     let mut nums_with_sum: Vec<_> = nums.iter().enumerate().map(|(i,\
    \ v)| (v, sum_digits(*v), i)).collect();\n   |                               \
    \                                               ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0609]: no field `1` on type `&_`\n  --> /tmp/tmp8hche_b3.rs:12:36\n \
    \  |\n12 |     nums_with_sum.sort_by(|a, b| a.1.cmp(&b.1).then(a.2.cmp(&b.2)));\n\
    \   |                                    ^\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0425, E0609.\nFor more information\
    \ about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_with_points: Vec<(isize, isize)> = nums\n        .iter()\n        .map(|x|\
    \ (x.abs(), x.abs() / 10 + x.abs() % 10))\n        .collect();\n    nums_with_points.sort_by(|a,\
    \ b| a.cmp(b));\n    nums_with_points.iter().map(|x| x.0).collect()\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 1, 11, 11, 12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp2jq9rid8.rs:21:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&num| {\n        let mut sum = 0;\n    \
    \    let mut num = num;\n        while num != 0 {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        sum\n    });\n    nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp276liy_s.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ ret = Vec::new();\n    let mut tmp = Vec::new();\n    for i in 0..nums.len()\
    \ {\n        tmp.push((i, nums[i]));\n    }\n    for j in 0..tmp.len() {\n   \
    \     ret.push(tmp[j].1);\n    }\n    return ret;\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 11, -1, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp8grghffm.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    //\n   \
    \ // \u3053\u3053\u306B\u56DE\u7B54\u3092\u66F8\u304F\n    //\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp96mp35ua.rs:14:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().map(|(i,\
    \ v)| (i, v, v.abs().to_string().chars().map(|d| d.to_digit(10).unwrap() as usize).sum())).sorted_by(|a,\
    \ b| {\n        if a.2 == b.2 {\n            a.0.cmp(&b.0)\n        } else {\n\
    \            a.2.cmp(&b.2)\n        }\n    }).map(|(_, v, _)| v).collect()\n}\n\
    \nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Map` in the\
    \ current scope\n  --> /tmp/tmp94qc1tgi.rs:11:132\n   |\n11 | ...sum())).sorted_by(|a,\
    \ b| {\n   |            ^^^^^^^^^ method not found in `Map<Enumerate<std::vec::IntoIter<isize>>,\
    \ [closure@/tmp/tmp94qc1tgi.rs:11:38: 11:130]>`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_vec: Vec<(isize, isize)> = vec![];\n    for i in nums {\n        let mut\
    \ sum = 0;\n        let mut ii = i;\n        while ii > 0 {\n            sum +=\
    \ ii % 10;\n            ii /= 10;\n        }\n        sum_vec.push((sum, i));\n\
    \    }\n    let mut result: Vec<isize> = vec![];\n    for (_, i) in sum_vec.iter().sorted()\
    \ {\n        result.push(*i);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted` found for struct `std::slice::Iter`\
    \ in the current scope\n  --> /tmp/tmpv888tgei.rs:22:34\n   |\n22 |     for (_,\
    \ i) in sum_vec.iter().sorted() {\n   |                                  ^^^^^^\
    \ method not found in `std::slice::Iter<'_, (isize, isize)>`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ res = nums.clone();\n    let sum: Vec<_> = res.iter().map(|i| i.abs() as usize).collect();\n\
    \    let mut sum_digits: Vec<_> = sum.iter().map(|s| s.to_string().chars().map(|c|\
    \ c.to_digit(10).unwrap()).sum::<u32>()).collect();\n    res.sort_by(|a, b| sum_digits[*a\
    \ as usize].cmp(&sum_digits[*b as usize]));\n    res\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 5 but the
    index is 18446744073709551604'', /tmp/tmp866avohh.rs:14:24

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&x| {\n        x.abs()\n            .to_string()\n\
    \            .chars()\n            .map(|c| c.to_digit(10).unwrap() as isize)\n\
    \            .sum::<isize>()\n    });\n    nums\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpom3xowsa.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&x| {\n        let mut x = x;\n        let\
    \ mut res = 0;\n        while x != 0 {\n            res += x % 10;\n         \
    \   x /= 10;\n        }\n        res\n    });\n    nums\n}\n\nfn main() {\n  \
    \  let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp0h4ko1ro.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ index_sum_pairs: Vec<(usize, isize)> =\n        nums.iter().enumerate().map(|(i,\
    \ n)| (i, sum_digits(*n))).collect();\n    index_sum_pairs.sort_by(|a, b| (a.1,\
    \ a.0).cmp(&(b.1, b.0)));\n    index_sum_pairs.iter().map(|p| nums[p.0]).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpsg82rgce.rs:12:50\n\
    \   |\n12 |         nums.iter().enumerate().map(|(i, n)| (i, sum_digits(*n))).collect();\n\
    \   |                                                  ^^^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().map(|(index,\
    \ num)| {\n        let mut sum = 0;\n        let mut n = num;\n        while n\
    \ != 0 {\n            sum += n % 10;\n            n /= 10;\n        }\n      \
    \  (sum, index, num)\n    }).sorted_by(|a, b| Ord::cmp(&a.0, &b.0).then(Ord::cmp(&a.1,\
    \ &b.1))).into_iter().map(|(_, _, num)| num).collect()\n}\n\nfn main() {\n   \
    \ let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Map` in the\
    \ current scope\n  --> /tmp/tmpla8rf8yl.rs:19:8\n   |\n19 |     }).sorted_by(|a,\
    \ b| Ord::cmp(&a.0, &b.0).then(Ord::cmp(&a.1, &b.1))).into_iter().map(|(_, _,\
    \ num)| num).collect()\n   |        ^^^^^^^^^ method not found in `Map<Enumerate<std::vec::IntoIter<isize>>,\
    \ [closure@/tmp/tmpla8rf8yl.rs:11:38: 19:6]>`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    use std::cmp::Ordering;\n\
    \    nums.iter()\n        .enumerate()\n        .map(|(index, &num)| (index, num,\
    \ num.abs() as usize))\n        .map(|(index, num, sum)| {\n            let mut\
    \ pow = 1;\n            let mut temp = sum;\n            while temp > 0 {\n  \
    \              temp /= 10;\n                pow *= 10;\n            }\n      \
    \      (index, num, sum, pow)\n        })\n        .map(|(index, num, sum, pow)|\
    \ {\n            let mut temp = num;\n            let mut count = 0;\n       \
    \     while temp > 0 {\n                let digit = temp % 10;\n             \
    \   sum += digit * pow;\n                temp /= 10;\n                pow /= 10;\n\
    \                count += 1;\n            }\n            (index, num, sum, count)\n\
    \        })\n        .sorted_by(|&(_, _, sum1, count1), &(_, _, sum2, count2)|\
    \ {\n            match sum1.cmp(&sum2) {\n                Ordering::Less => Ordering::Less,\n\
    \                Ordering::Greater => Ordering::Greater,\n                Ordering::Equal\
    \ => count1.cmp(&count2),\n            }\n        })\n        .map(|(_, num, _,\
    \ _)| num)\n        .collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpinz0j_gw.rs:29:24\n   |\n\
    29 |                 sum += digit * pow;\n   |                        ^^^^^^^^^^^\
    \ expected `usize`, found `isize`\n\nerror[E0277]: cannot add-assign `isize` to\
    \ `usize`\n  --> /tmp/tmpinz0j_gw.rs:29:21\n   |\n29 |                 sum +=\
    \ digit * pow;\n   |                     ^^ no implementation for `usize += isize`\n\
    \   |\n   = help: the trait `AddAssign<isize>` is not implemented for `usize`\n\
    \   = help: the following other types implement trait `AddAssign<Rhs>`:\n    \
    \         <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n        \
    \     <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n            \
    \ <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n             <i16\
    \ as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and 20 others\n\
    \nerror[E0599]: no method named `sorted_by` found for struct `Map` in the current\
    \ scope\n  --> /tmp/tmpinz0j_gw.rs:36:10\n   |\n36 |         .sorted_by(|&(_,\
    \ _, sum1, count1), &(_, _, sum2, count2)| {\n   |          ^^^^^^^^^ method not\
    \ found in `Map<Map<Map<Enumerate<std::slice::Iter<'_, isize>>, [closure@/tmp/tmpinz0j_gw.rs:14:14:\
    \ 14:62]>, [closure@/tmp/tmpinz0j_gw.rs:15:14: 23:10]>, [closure@/tmp/tmpinz0j_gw.rs:24:14:\
    \ 35:10]>`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ ordered = nums.clone();\n    ordered.sort_by(|a, b| {\n        let a_sum = a.abs()\
    \ as u32 / 10 + a.abs() as u32 % 10;\n        let b_sum = b.abs() as u32 / 10\
    \ + b.abs() as u32 % 10;\n        if a_sum != b_sum {\n            a_sum.cmp(&b_sum)\n\
    \        } else {\n            nums.iter().position(|&x| x == *a).unwrap().cmp(&nums.iter().position(|&x|\
    \ x == *b).unwrap())\n        }\n    });\n    ordered\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmprbf0oo4w.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ arr = Vec::new();\n    for (i, val) in nums.iter().enumerate() {\n        let\
    \ mut total = 0;\n        for digit in val.to_string().chars() {\n           \
    \ total += digit.to_digit(10).unwrap();\n        }\n        arr.push((i, val,\
    \ total));\n    }\n    arr.sort_by(|a, b| {\n        a.2.cmp(&b.2)\n         \
    \   .then_with(|| a.0.cmp(&b.0))\n            .then_with(|| a.1.cmp(&b.1))\n \
    \   });\n    let mut res = Vec::new();\n    for (_, v, _) in arr {\n        res.push(*v);\n\
    \    }\n    res\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpfpj7o28o.rs:15:41

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_nums = nums.clone();\n    sum_nums.sort_by(|a, b| (sum_digits(*a) as isize).cmp(&(sum_digits(*b)\
    \ as isize)));\n    sum_nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpb2adyc4m.rs:12:30\n\
    \   |\n12 |     sum_nums.sort_by(|a, b| (sum_digits(*a) as isize).cmp(&(sum_digits(*b)\
    \ as isize)));\n   |                              ^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n  -->\
    \ /tmp/tmpb2adyc4m.rs:12:61\n   |\n12 |     sum_nums.sort_by(|a, b| (sum_digits(*a)\
    \ as isize).cmp(&(sum_digits(*b) as isize)));\n   |                          \
    \                                   ^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|x, y| {\n        let sum_x = get_sum_of_digits(*x);\n\
    \        let sum_y = get_sum_of_digits(*y);\n        if sum_x == sum_y {\n   \
    \         x.cmp(y)\n        } else {\n            sum_x.cmp(&sum_y)\n        }\n\
    \    });\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_sum_of_digits` in this scope\n\
    \  --> /tmp/tmpeca5m9d9.rs:13:21\n   |\n13 |         let sum_x = get_sum_of_digits(*x);\n\
    \   |                     ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `get_sum_of_digits` in this scope\n  --> /tmp/tmpeca5m9d9.rs:14:21\n\
    \   |\n14 |         let sum_y = get_sum_of_digits(*y);\n   |                 \
    \    ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().collect::<Vec<_>>().sort_by(|a,\
    \ b| a.1.abs().sum_digits().cmp(&b.1.abs().sum_digits())).sort_by(|a, b| a.0.cmp(&b.0)).iter().map(|x|\
    \ *x.1).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n  \
    \  assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_digits` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmpyt_7ru4k.rs:11:74\n   |\n11 |     nums.iter().enumerate().collect::<Vec<_>>().sort_by(|a,\
    \ b| a.1.abs().sum_digits().cmp(&b.1.abs().sum_digits())).sort_by(|a, b| a.0.cm...\n\
    \   |                                                                        \
    \  ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]: no method named `sum_digits`\
    \ found for type `isize` in the current scope\n  --> /tmp/tmpyt_7ru4k.rs:11:102\n\
    \   |\n11 | ...by(|a, b| a.1.abs().sum_digits().cmp(&b.1.abs().sum_digits())).sort_by(|a,\
    \ b| a.0.cmp(&b.0)).iter().map(|x| *x.1).collect()\n   |                     \
    \                               ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `sort_by` found for unit type `()` in the current scope\n  -->\
    \ /tmp/tmpyt_7ru4k.rs:11:117\n   |\n11 | ...1.abs().sum_digits().cmp(&b.1.abs().sum_digits())).sort_by(|a,\
    \ b| a.0.cmp(&b.0)).iter().map(|x| *x.1).collect()\n   |                     \
    \                                  ^^^^^^^ method not found in `()`\n\nerror:\
    \ aborting due to 3 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_sorted: Vec<isize> = nums.clone();\n    nums_sorted.sort_by(|a, b| {\n\
    \        let a_sum = sum_digits(*a);\n        let b_sum = sum_digits(*b);\n  \
    \      if a_sum == b_sum {\n            a.cmp(b)\n        } else {\n         \
    \   a_sum.cmp(&b_sum)\n        }\n    });\n    nums_sorted\n}\n\nfn main() {\n\
    \    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpuqgfl3hr.rs:13:21\n\
    \   |\n13 |         let a_sum = sum_digits(*a);\n   |                     ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_digits` in\
    \ this scope\n  --> /tmp/tmpuqgfl3hr.rs:14:21\n   |\n14 |         let b_sum =\
    \ sum_digits(*b);\n   |                     ^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&x| sum_of_digits(x));\n    nums\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpnch_9ni5.rs:12:27\n   |\n12 |     nums.sort_by_key(|&x| sum_of_digits(x));\n\
    \   |                           ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_vec: Vec<isize> = nums;\n    let mut start = 0;\n    let mut end = nums_vec.len()\
    \ - 1;\n    quick_sort(start, end, &mut nums_vec);\n    nums_vec\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `quick_sort` in this scope\n  --> /tmp/tmpzg3qwkhc.rs:14:5\n\
    \   |\n14 |     quick_sort(start, end, &mut nums_vec);\n   |     ^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().map(|(i,\
    \ x)| (sum_digits(*x), i, *x)).sorted_by(|a, b| {\n        let (a_sum, a_i, a_x)\
    \ = a;\n        let (b_sum, b_i, b_x) = b;\n        match a_sum.cmp(b_sum) {\n\
    \            Ordering::Equal => a_i.cmp(&b_i),\n            Ordering::Less =>\
    \ Ordering::Less,\n            Ordering::Greater => Ordering::Greater,\n     \
    \   }\n    }).map(|(_sum, _i, x)| x).collect()\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmp5cebi18e.rs:15:13\n   |\n15 |             Ordering::Equal => a_i.cmp(&b_i),\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmp5cebi18e.rs:16:13\n\
    \   |\n16 |             Ordering::Less => Ordering::Less,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmp5cebi18e.rs:16:31\n   |\n16 |    \
    \         Ordering::Less => Ordering::Less,\n   |                            \
    \   ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmp5cebi18e.rs:17:13\n   |\n17\
    \ |             Ordering::Greater => Ordering::Greater,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmp5cebi18e.rs:17:34\n   |\n17 |    \
    \         Ordering::Greater => Ordering::Greater,\n   |                      \
    \            ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]: cannot\
    \ find function `sum_digits` in this scope\n  --> /tmp/tmp5cebi18e.rs:11:43\n\
    \   |\n11 |     nums.iter().enumerate().map(|(i, x)| (sum_digits(*x), i, *x)).sorted_by(|a,\
    \ b| {\n   |                                           ^^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0599]: no method named `sorted_by` found for struct `Map`\
    \ in the current scope\n  --> /tmp/tmp5cebi18e.rs:11:67\n   |\n11 |     nums.iter().enumerate().map(|(i,\
    \ x)| (sum_digits(*x), i, *x)).sorted_by(|a, b| {\n   |                      \
    \                                             ^^^^^^^^^ method not found in `Map<Enumerate<std::slice::Iter<'_,\
    \ isize>>, _>`\n\nerror: aborting due to 7 previous errors\n\nSome errors have\
    \ detailed explanations: E0425, E0433, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum = nums.iter().fold(vec![], |mut acc, val| {\n        acc.push((val, sum_of_digits(*val)));\n\
    \        acc\n    });\n    sum.sort_by(|&(a,b), &(c,d)| {\n        b.cmp(&d).then(a.cmp(&c))\n\
    \    });\n    sum.iter().map(|(n,_)| *n).collect()\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpemvo0mev.rs:12:24\n   |\n12 |         acc.push((val, sum_of_digits(*val)));\n\
    \   |                        ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        let a_sum = sum_of_digits(*a);\n\
    \        let b_sum = sum_of_digits(*b);\n        if a_sum == b_sum {\n       \
    \     a.cmp(b)\n        } else {\n            a_sum.cmp(&b_sum)\n        }\n \
    \   });\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmpc8poa8n8.rs:13:21\n   |\n13 |         let a_sum = sum_of_digits(*a);\n\
    \   |                     ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmpc8poa8n8.rs:14:21\n\
    \   |\n14 |         let b_sum = sum_of_digits(*b);\n   |                     ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ pairs: Vec<(isize, usize)> = nums.iter().enumerate().map(|(i, &n)| (n, i)).collect();\n\
    \    pairs.sort_by_key(|(n, _)| num_digits_sum(*n));\n    pairs.iter().map(|(n,\
    \ _)| *n).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `num_digits_sum` in this scope\n  -->\
    \ /tmp/tmpp6ogl_ul.rs:12:32\n   |\n12 |     pairs.sort_by_key(|(n, _)| num_digits_sum(*n));\n\
    \   |                                ^^^^^^^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| a.abs().to_string().chars().sum::<i32>().cmp(&b.abs().to_string().chars().sum::<i32>()));\n\
    \    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `i32: Sum<char>` is not satisfied\n    -->\
    \ /tmp/tmpf_16jpb7.rs:12:55\n     |\n12   |     result.sort_by(|a, b| a.abs().to_string().chars().sum::<i32>().cmp(&b.abs().to_string().chars().sum::<i32>()));\n\
    \     |                                                       ^^^ the trait `Sum<char>`\
    \ is not implemented for `i32`\n     |\n     = help: the following other types\
    \ implement trait `Sum<A>`:\n               <f32 as Sum<&'a f32>>\n          \
    \     <f32 as Sum>\n               <f64 as Sum<&'a f64>>\n               <f64\
    \ as Sum>\n               <i128 as Sum<&'a i128>>\n               <i128 as Sum>\n\
    \               <i16 as Sum<&'a i16>>\n               <i16 as Sum>\n         \
    \    and 20 others\nnote: required by a bound in `std::iter::Iterator::sum`\n\n\
    error[E0277]: the trait bound `i32: Sum<char>` is not satisfied\n    --> /tmp/tmpf_16jpb7.rs:12:101\n\
    \     |\n12   |     result.sort_by(|a, b| a.abs().to_string().chars().sum::<i32>().cmp(&b.abs().to_string().chars().sum::<i32>()));\n\
    \     |                                                                      \
    \                               ^^^ the trait `Sum<char>` is not implemented for\
    \ `i32`\n     |\n     = help: the following other types implement trait `Sum<A>`:\n\
    \               <f32 as Sum<&'a f32>>\n               <f32 as Sum>\n         \
    \      <f64 as Sum<&'a f64>>\n               <f64 as Sum>\n               <i128\
    \ as Sum<&'a i128>>\n               <i128 as Sum>\n               <i16 as Sum<&'a\
    \ i16>>\n               <i16 as Sum>\n             and 20 others\nnote: required\
    \ by a bound in `std::iter::Iterator::sum`\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_idx_num = vec![];\n    for (i, &num) in nums.iter().enumerate() {\n    \
    \    let mut sum = 0;\n        for ch in num.to_string().chars() {\n         \
    \   sum += ch.to_digit(10).unwrap() as isize;\n        }\n        sum_idx_num.push((sum,\
    \ i, num));\n    }\n    sum_idx_num.sort();\n    let mut ret = vec![];\n    for\
    \ (_, _, num) in sum_idx_num {\n        ret.push(num);\n    }\n    ret\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpcyf1ihay.rs:15:36

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpi80ucwsy.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|i| get_points(*i));\n    nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_points` in this scope\n  --> /tmp/tmpmu2lylqt.rs:12:26\n\
    \   |\n12 |     nums.sort_by_key(|i| get_points(*i));\n   |                  \
    \        ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ v = nums.clone();\n    let mut sums = Vec::new();\n    let mut result = Vec::new();\n\
    \    for num in nums {\n        let mut sum = 0;\n        let mut num_clone =\
    \ num;\n        while num_clone > 0 {\n            sum += num_clone % 10;\n  \
    \          num_clone /= 10;\n        }\n        sums.push(sum);\n    }\n    for\
    \ _ in 0..nums.len() {\n        let mut max = 0;\n        let mut index = 0;\n\
    \        for i in 0..sums.len() {\n            if sums[i] > max {\n          \
    \      max = sums[i];\n                index = i;\n            }\n        }\n\
    \        result.push(v[index]);\n        sums.remove(index);\n        v.remove(index);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpjc70qshb.rs:23:17\n\
    \    |\n10  | fn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    |    \
    \                ---- move occurs because `nums` has type `Vec<isize>`, which\
    \ does not implement the `Copy` trait\n...\n14  |     for num in nums {\n    |\
    \                ---- `nums` moved due to this implicit call to `.into_iter()`\n\
    ...\n23  |     for _ in 0..nums.len() {\n    |                 ^^^^^^^^^^ value\
    \ borrowed here after move\n    |\nnote: this function takes ownership of the\
    \ receiver `self`, which moves `nums`\nhelp: consider iterating over a slice of\
    \ the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n14  |\
    \     for num in &nums {\n    |                +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0382`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ digits = nums.iter().map(|x| digits(*x)).collect::<Vec<_>>();\n    let mut res\
    \ = nums.clone();\n    res.sort_by(|a, b| (digits[*a as usize].iter().sum::<u32>(),\
    \ a).cmp(&(digits[*b as usize].iter().sum::<u32>(), b)));\n    res\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `digits` in this scope\n  --> /tmp/tmpdiw1j8d_.rs:11:42\n\
    \   |\n11 |     let mut digits = nums.iter().map(|x| digits(*x)).collect::<Vec<_>>();\n\
    \   |                                          ^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum: Vec<(isize, usize)> = Vec::new();\n    for (index, value) in nums.iter().enumerate()\
    \ {\n        sum.push((calculate_sum(*value), index));\n    }\n    sum.sort();\n\
    \    let mut result: Vec<isize> = Vec::new();\n    for i in sum {\n        result.push(nums[i.1]);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `calculate_sum` in this scope\n  -->\
    \ /tmp/tmp_57ec4v5.rs:13:19\n   |\n13 |         sum.push((calculate_sum(*value),\
    \ index));\n   |                   ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ ret: Vec<isize> = nums.clone();\n    ret.sort_by(|a, b| b.abs().sum_digits().cmp(&a.abs().sum_digits()));\n\
    \    ret\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_digits` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmp72yq553x.rs:12:32\n   |\n12 |     ret.sort_by(|a,\
    \ b| b.abs().sum_digits().cmp(&a.abs().sum_digits()));\n   |                 \
    \               ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]: no method\
    \ named `sum_digits` found for type `isize` in the current scope\n  --> /tmp/tmp72yq553x.rs:12:58\n\
    \   |\n12 |     ret.sort_by(|a, b| b.abs().sum_digits().cmp(&a.abs().sum_digits()));\n\
    \   |                                                          ^^^^^^^^^^ method\
    \ not found in `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        let a_value = a.abs()\
    \ as usize;\n        let b_value = b.abs() as usize;\n        let a_sum = digit_sum(a_value);\n\
    \        let b_sum = digit_sum(b_value);\n        match a_sum.cmp(&b_sum) {\n\
    \            Ordering::Equal => a.cmp(&b),\n            Ordering::Less => Ordering::Less,\n\
    \            Ordering::Greater => Ordering::Greater,\n        }\n    });\n   \
    \ result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmp8kelit5v.rs:18:13\n   |\n18 |             Ordering::Equal => a.cmp(&b),\n\
    \   |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `Ordering`\n  --> /tmp/tmp8kelit5v.rs:19:13\n\
    \   |\n19 |             Ordering::Less => Ordering::Less,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmp8kelit5v.rs:19:31\n   |\n19 |    \
    \         Ordering::Less => Ordering::Less,\n   |                            \
    \   ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Ordering`\n  --> /tmp/tmp8kelit5v.rs:20:13\n   |\n20\
    \ |             Ordering::Greater => Ordering::Greater,\n   |             ^^^^^^^^\
    \ use of undeclared type `Ordering`\n\nerror[E0433]: failed to resolve: use of\
    \ undeclared type `Ordering`\n  --> /tmp/tmp8kelit5v.rs:20:34\n   |\n20 |    \
    \         Ordering::Greater => Ordering::Greater,\n   |                      \
    \            ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]: cannot\
    \ find function `digit_sum` in this scope\n  --> /tmp/tmp8kelit5v.rs:15:21\n \
    \  |\n15 |         let a_sum = digit_sum(a_value);\n   |                     ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `digit_sum` in\
    \ this scope\n  --> /tmp/tmp8kelit5v.rs:16:21\n   |\n16 |         let b_sum =\
    \ digit_sum(b_value);\n   |                     ^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ s = nums.clone();\n    s.sort_by(|a, b| sum_digits(*a).cmp(&sum_digits(*b)));\n\
    \    s\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp974qjuyi.rs:12:22\n\
    \   |\n12 |     s.sort_by(|a, b| sum_digits(*a).cmp(&sum_digits(*b)));\n   | \
    \                     ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `sum_digits` in this scope\n  --> /tmp/tmp974qjuyi.rs:12:42\n\
    \   |\n12 |     s.sort_by(|a, b| sum_digits(*a).cmp(&sum_digits(*b)));\n   | \
    \                                         ^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&x| digits_sum(x));\n    nums\n}\n\nfn main()\
    \ {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11,\
    \ -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `digits_sum` in this scope\n  --> /tmp/tmpa57u6ipg.rs:12:27\n\
    \   |\n12 |     nums.sort_by_key(|&x| digits_sum(x));\n   |                  \
    \         ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    if nums.is_empty()\
    \ {\n        return vec![];\n    }\n    nums.iter()\n        .enumerate()\n  \
    \      .map(|(index, num)| {\n            (index, num, num.abs()\n           \
    \     .to_string()\n                .chars()\n                .map(|ch| ch.to_digit(10).unwrap()\
    \ as isize)\n                .sum::<isize>())\n        })\n        .sorted_by(|(_,\
    \ _, sum1), (_, _, sum2)| sum1.cmp(sum2))\n        .into_iter()\n        .map(|(_,\
    \ num, _)| *num)\n        .collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Map` in the\
    \ current scope\n  --> /tmp/tmp3vpsip_v.rs:23:10\n   |\n23 |         .sorted_by(|(_,\
    \ _, sum1), (_, _, sum2)| sum1.cmp(sum2))\n   |          ^^^^^^^^^ method not\
    \ found in `Map<Enumerate<std::slice::Iter<'_, isize>>, [closure@/tmp/tmp3vpsip_v.rs:16:14:\
    \ 22:10]>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpi80ucwsy.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        let sum_a = a.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap()).sum::<u32>();\n        let sum_b = b.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap()).sum::<u32>();\n        sum_a.cmp(&sum_b)\n    });\n\
    \    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmp10bjsup4.rs:13:66

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_with_sum: Vec<(isize, isize)> = Vec::new();\n    for &num in nums.iter()\
    \ {\n        let mut current_num = num;\n        let mut sum = 0;\n        while\
    \ current_num != 0 {\n            sum += current_num % 10;\n            current_num\
    \ /= 10;\n        }\n        nums_with_sum.push((num, sum));\n    }\n    nums_with_sum.sort_by(|a,\
    \ b| a.1.cmp(&b.1));\n    nums_with_sum.iter().map(|&(num, _)| num).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpfuvogcyf.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().map(|(x,\
    \ &y)| (sum_digits(y), x, y)).sorted_by(|x, y| {\n        if x.0 == y.0 {\n  \
    \          x.1.cmp(&y.1)\n        } else {\n            x.0.cmp(&y.0)\n      \
    \  }\n    }).map(|x| x.2).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpt_n6n8mj.rs:11:44\n\
    \   |\n11 |     nums.iter().enumerate().map(|(x, &y)| (sum_digits(y), x, y)).sorted_by(|x,\
    \ y| {\n   |                                            ^^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0599]: no method named `sorted_by` found for struct `Map`\
    \ in the current scope\n  --> /tmp/tmpt_n6n8mj.rs:11:66\n   |\n11 |     nums.iter().enumerate().map(|(x,\
    \ &y)| (sum_digits(y), x, y)).sorted_by(|x, y| {\n   |                       \
    \                                           ^^^^^^^^^ method not found in `Map<Enumerate<std::slice::Iter<'_,\
    \ isize>>, _>`\n\nerror: aborting due to 2 previous errors\n\nSome errors have\
    \ detailed explanations: E0425, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted_nums = nums.clone();\n    sorted_nums.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \    sorted_nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n   \
    \ assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_of_digits` in this scope\n  -->\
    \ /tmp/tmp5gnestl6.rs:12:32\n   |\n12 |     sorted_nums.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                                ^^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find function `sum_of_digits` in this scope\n  --> /tmp/tmp5gnestl6.rs:12:55\n\
    \   |\n12 |     sorted_nums.sort_by(|a, b| sum_of_digits(*a).cmp(&sum_of_digits(*b)));\n\
    \   |                                                       ^^^^^^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result: Vec<isize> = nums.clone();\n    result.sort_by(|a, b| {\n        let\
    \ sum_a = a.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        let sum_b = b.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        sum_a.cmp(&sum_b)\n    });\n    result\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpejrn831z.rs:13:66

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    nums.sort_by_key(|&x| (x.abs() % 10 + x.abs() / 10, x));\n\
    \    nums\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-1, 1, -11, 11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpbo1ds0e5.rs:18:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().sorted_by(|a,\
    \ b| {\n        let (x, y) = (sum_digits(*a.1), sum_digits(*b.1));\n        if\
    \ x == y {\n            a.0.cmp(&b.0)\n        } else {\n            x.cmp(&y)\n\
    \        }\n    }).map(|x| x.1).collect()\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpx4os7zco.rs:12:23\n\
    \   |\n12 |         let (x, y) = (sum_digits(*a.1), sum_digits(*b.1));\n   | \
    \                      ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find function `sum_digits` in this scope\n  --> /tmp/tmpx4os7zco.rs:12:41\n\
    \   |\n12 |         let (x, y) = (sum_digits(*a.1), sum_digits(*b.1));\n   | \
    \                                        ^^^^^^^^^^ not found in this scope\n\n\
    error[E0599]: no method named `sorted_by` found for struct `Enumerate` in the\
    \ current scope\n  --> /tmp/tmpx4os7zco.rs:11:29\n   |\n11 |     nums.iter().enumerate().sorted_by(|a,\
    \ b| {\n   |                             ^^^^^^^^^ method not found in `Enumerate<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0425, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        let mut a_sum =\
    \ 0;\n        let mut b_sum = 0;\n        for ch in a.to_string().chars() {\n\
    \            a_sum += ch.to_digit(10).unwrap() as isize;\n        }\n        for\
    \ ch in b.to_string().chars() {\n            b_sum += ch.to_digit(10).unwrap()\
    \ as isize;\n        }\n        a_sum.cmp(&b_sum)\n    });\n    result\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmp85ph5yea.rs:16:38

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    use itertools::Itertools;\n\
    \    let mut nums_tuple = nums.iter().enumerate().map(|(i,&v)| (v, i)).collect_vec();\n\
    \    nums_tuple.sort_by_key(|(n,_)| digits_sum(*n));\n    nums_tuple.into_iter().map(|(n,_)|\
    \ n).collect_vec()\n}\n\nfn main() {\n    let candidate = order_by_points;\n \
    \   assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0432]: unresolved import `itertools`\n  --> /tmp/tmp2trvwkn7.rs:11:9\n\
    \   |\n11 |     use itertools::Itertools;\n   |         ^^^^^^^^^ maybe a missing\
    \ crate `itertools`?\n\nerror[E0425]: cannot find function `digits_sum` in this\
    \ scope\n  --> /tmp/tmp2trvwkn7.rs:13:36\n   |\n13 |     nums_tuple.sort_by_key(|(n,_)|\
    \ digits_sum(*n));\n   |                                    ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0599]: no method named `collect_vec` found for struct\
    \ `Map` in the current scope\n  --> /tmp/tmp2trvwkn7.rs:12:71\n   |\n12 |    \
    \ let mut nums_tuple = nums.iter().enumerate().map(|(i,&v)| (v, i)).collect_vec();\n\
    \   |                                                                       ^^^^^^^^^^^\
    \ method not found in `Map<Enumerate<std::slice::Iter<'_, isize>>, [closure@/tmp/tmp2trvwkn7.rs:12:54:\
    \ 12:69]>`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0425, E0432, E0599.\nFor more information about an error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums = nums;\n    let mut sum: Vec<isize> = Vec::new();\n    nums.iter().enumerate().for_each(|(idx,\
    \ num)| {\n        let mut curr_sum = 0;\n        if *num < 0 {\n            num.abs().to_string().chars().for_each(|x|\
    \ {\n                curr_sum += x.to_digit(10).unwrap() as isize;\n         \
    \   });\n            sum.push(-curr_sum);\n        } else {\n            num.to_string().chars().for_each(|x|\
    \ {\n                curr_sum += x.to_digit(10).unwrap() as isize;\n         \
    \   });\n            sum.push(curr_sum);\n        }\n    });\n    let mut nums:\
    \ Vec<(isize, usize)> = sum.iter().enumerate().map(|(idx, sum)| (*sum, idx)).collect();\n\
    \    nums.sort();\n    nums.iter().map(|(_, idx)| nums[*idx].0).collect()\n}\n\
    \nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 1, -1, -3, -2]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpjh8kjz7v.rs:34:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted = nums.iter().cloned().enumerate().collect::<Vec<(usize, isize)>>();\n\
    \    sorted.sort_by_key(|&(_, val)| {\n        val.abs()\n            .to_string()\n\
    \            .chars()\n            .map(|n| n.to_digit(10).unwrap())\n       \
    \     .sum::<u32>()\n    });\n    sorted.iter().map(|&(_, val)| val).collect()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmp_kbje0bx.rs:24:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ asdf = nums.clone();\n    asdf.sort_by(|a, b| a.abs().sum::<isize>().cmp(&b.abs().sum::<isize>()));\n\
    \    asdf\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: `isize` is not an iterator\n  --> /tmp/tmpmzhxpmf4.rs:12:33\n\
    \   |\n12 |     asdf.sort_by(|a, b| a.abs().sum::<isize>().cmp(&b.abs().sum::<isize>()));\n\
    \   |                                 ^^^ `isize` is not an iterator\n   |\n \
    \  = note: the following trait bounds were not satisfied:\n           `isize:\
    \ Iterator`\n           which is required by `&mut isize: Iterator`\n\nerror[E0599]:\
    \ `isize` is not an iterator\n  --> /tmp/tmpmzhxpmf4.rs:12:61\n   |\n12 |    \
    \ asdf.sort_by(|a, b| a.abs().sum::<isize>().cmp(&b.abs().sum::<isize>()));\n\
    \   |                                                             ^^^ `isize`\
    \ is not an iterator\n   |\n   = note: the following trait bounds were not satisfied:\n\
    \           `isize: Iterator`\n           which is required by `&mut isize: Iterator`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    // your\
    \ code goes here\n    let mut nums: Vec<isize> = nums;\n    let mut sum_vector:\
    \ Vec<isize> = Vec::new();\n    for num in nums.iter() {\n        let mut sum:\
    \ isize = 0;\n        let num_str = num.to_string();\n        for i in num_str.chars()\
    \ {\n            sum += i.to_digit(10).unwrap() as isize;\n        }\n       \
    \ sum_vector.push(sum);\n    }\n    sum_vector.sort();\n    let mut result: Vec<isize>\
    \ = Vec::new();\n    for sum in sum_vector.iter() {\n        for num in nums.iter()\
    \ {\n            let mut sum_temp: isize = 0;\n            let num_str = num.to_string();\n\
    \            for i in num_str.chars() {\n                sum_temp += i.to_digit(10).unwrap()\
    \ as isize;\n            }\n            if sum_temp == *sum {\n              \
    \  result.push(*num);\n                nums.remove(nums.iter().position(|&x| x\
    \ == *num).unwrap());\n                break;\n            }\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmp1j0ii4lt.rs:18:35

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| {\n        let a = a.abs();\n\
    \        let b = b.abs();\n        let a_digit_sum = digits_sum(a);\n        let\
    \ b_digit_sum = digits_sum(b);\n        a_digit_sum.cmp(&b_digit_sum)\n    });\n\
    \    result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `digits_sum` in this scope\n  --> /tmp/tmp8hwrdpp_.rs:15:27\n\
    \   |\n15 |         let a_digit_sum = digits_sum(a);\n   |                   \
    \        ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `digits_sum` in this scope\n  --> /tmp/tmp8hwrdpp_.rs:16:27\n   |\n16 |    \
    \     let b_digit_sum = digits_sum(b);\n   |                           ^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `a_digit_sum`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ copy = nums.clone();\n    let mut ret = vec![];\n    let mut idx = 0;\n    while\
    \ copy.len() > 0 {\n        let mut max = 0;\n        let mut max_idx = 0;\n \
    \       for (i, n) in copy.iter().enumerate() {\n            let num_str = n.to_string();\n\
    \            let mut sum = 0;\n            for ch in num_str.chars() {\n     \
    \           let d = ch.to_digit(10).unwrap();\n                sum += d as isize;\n\
    \            }\n            if sum > max {\n                max = sum;\n     \
    \           max_idx = i;\n            }\n        }\n        ret.push(copy[max_idx]);\n\
    \        copy.remove(max_idx);\n    }\n    ret\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpe1xy5jqm.rs:21:41

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ data: Vec<(isize, usize)> = nums.iter().enumerate().map(|(idx, &num)| (num,\
    \ idx)).collect();\n    data.sort_by(|&(num1, _), &(num2, _)| {\n        let (s1,\
    \ s2) = (get_sum_of_digits(num1), get_sum_of_digits(num2));\n        if s1 ==\
    \ s2 {\n            Ordering::Equal\n        } else if s1 < s2 {\n           \
    \ Ordering::Less\n        } else {\n            Ordering::Greater\n        }\n\
    \    });\n    data.iter().map(|&(num, _)| num).collect()\n}\n\nfn main() {\n \
    \   let candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1,\
    \ -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmpuoa6orwj.rs:15:13\n   |\n15 |             Ordering::Equal\n   |    \
    \         ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to\
    \ resolve: use of undeclared type `Ordering`\n  --> /tmp/tmpuoa6orwj.rs:17:13\n\
    \   |\n17 |             Ordering::Less\n   |             ^^^^^^^^ use of undeclared\
    \ type `Ordering`\n\nerror[E0433]: failed to resolve: use of undeclared type `Ordering`\n\
    \  --> /tmp/tmpuoa6orwj.rs:19:13\n   |\n19 |             Ordering::Greater\n \
    \  |             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]: cannot\
    \ find function `get_sum_of_digits` in this scope\n  --> /tmp/tmpuoa6orwj.rs:13:25\n\
    \   |\n13 |         let (s1, s2) = (get_sum_of_digits(num1), get_sum_of_digits(num2));\n\
    \   |                         ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `get_sum_of_digits` in this scope\n  --> /tmp/tmpuoa6orwj.rs:13:50\n\
    \   |\n13 |         let (s1, s2) = (get_sum_of_digits(num1), get_sum_of_digits(num2));\n\
    \   |                                                  ^^^^^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to 5 previous errors\n\nSome errors have\
    \ detailed explanations: E0425, E0433.\nFor more information about an error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted = nums.clone();\n    sorted.sort_by(|a, b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n\
    \    sorted\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sum_digits` found for type `isize` in the\
    \ current scope\n  --> /tmp/tmp6wfg3_w1.rs:12:35\n   |\n12 |     sorted.sort_by(|a,\
    \ b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n   |                 \
    \                  ^^^^^^^^^^ method not found in `isize`\n\nerror[E0599]: no\
    \ method named `sum_digits` found for type `isize` in the current scope\n  -->\
    \ /tmp/tmp6wfg3_w1.rs:12:61\n   |\n12 |     sorted.sort_by(|a, b| a.abs().sum_digits().cmp(&b.abs().sum_digits()));\n\
    \   |                                                             ^^^^^^^^^^ method\
    \ not found in `isize`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum: Vec<(isize, usize)> = nums.iter().map(|n| {\n        let mut s = 0;\n \
    \       let mut x = *n;\n        while x != 0 {\n            s += x % 10;\n  \
    \          x /= 10;\n        }\n        (s, n.abs() as usize)\n    }).collect();\n\
    \    sum.sort_by(|a, b| if a.0 == b.0 { a.1.cmp(&b.1) } else { a.0.cmp(&b.0) });\n\
    \    let mut out: Vec<isize> = Vec::new();\n    for x in sum {\n        if x.1\
    \ <= i32::max_value() as usize {\n            out.push(x.1 as isize);\n      \
    \  }\n    }\n    out\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[12, 11, 1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmphs3e1tc4.rs:32:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ items = Vec::new();\n    for (i, n) in nums.iter().enumerate() {\n        items.push((i,\
    \ n, sum_digits(*n)));\n    }\n    items.sort_by(|a, b| a.2.cmp(&b.2));\n    let\
    \ mut out = Vec::new();\n    for i in items {\n        out.push(*i.1);\n    }\n\
    \    out\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmp6pkk80q7.rs:13:27\n\
    \   |\n13 |         items.push((i, n, sum_digits(*n)));\n   |                \
    \           ^^^^^^^^^^ not found in this scope\n\nerror[E0609]: no field `2` on\
    \ type `&_`\n  --> /tmp/tmp6pkk80q7.rs:15:28\n   |\n15 |     items.sort_by(|a,\
    \ b| a.2.cmp(&b.2));\n   |                            ^\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0425, E0609.\n\
    For more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ tmp = vec![];\n    for i in nums {\n        let mut sum = 0;\n        let mut\
    \ tmp2 = i;\n        while tmp2 != 0 {\n            sum += tmp2 % 10;\n      \
    \      tmp2 /= 10;\n        }\n        tmp.push((sum, i));\n    }\n    tmp.sort();\n\
    \    let mut ret = vec![];\n    for (a, b) in tmp {\n        ret.push(b);\n  \
    \  }\n    ret\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-12, -11, -1, 1, 11]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmppstgu63a.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpi80ucwsy.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822469
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9kgq5eq8.rs:11:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976051
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.into_iter().enumerate().sorted_by(|(i1,\
    \ n1), (i2, n2)| {\n        let sum1 = sum_digits(*n1);\n        let sum2 = sum_digits(*n2);\n\
    \        let order = sum1.cmp(&sum2);\n        if order == Ordering::Equal {\n\
    \            i1.cmp(&i2)\n        } else {\n            order\n        }\n   \
    \ }).map(|(_, n)| n).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmp298g5e1l.rs:15:21\n   |\n15 |         if order == Ordering::Equal {\n\
    \   |                     ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]:\
    \ cannot find function `sum_digits` in this scope\n  --> /tmp/tmp298g5e1l.rs:12:20\n\
    \   |\n12 |         let sum1 = sum_digits(*n1);\n   |                    ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `sum_digits` in\
    \ this scope\n  --> /tmp/tmp298g5e1l.rs:13:20\n   |\n13 |         let sum2 = sum_digits(*n2);\n\
    \   |                    ^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no\
    \ method named `sorted_by` found for struct `Enumerate` in the current scope\n\
    \  --> /tmp/tmp298g5e1l.rs:11:34\n   |\n11 |     nums.into_iter().enumerate().sorted_by(|(i1,\
    \ n1), (i2, n2)| {\n   |                                  ^^^^^^^^^ method not\
    \ found in `Enumerate<std::vec::IntoIter<isize>>`\n\nerror: aborting due to 4\
    \ previous errors\n\nSome errors have detailed explanations: E0425, E0433, E0599.\n\
    For more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ result = nums.clone();\n    result.sort_by(|a, b| (a.abs() % 10 + a.abs() /\
    \ 10)\n                           .cmp(&(b.abs() % 10 + b.abs() / 10)));\n   \
    \ result\n}\n\nfn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, -1, 11, -11, -12]`,\n right: `[-1, -11, 1, -12, 11]`', /tmp/tmpzu9lyqnk.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_vec: Vec<(isize, isize)> = nums.iter().map(|n| (*n, sum_digits(*n))).collect();\n\
    \    nums_vec.sort_by(|a, b| {\n        if a.1 < b.1 {\n            Ordering::Less\n\
    \        } else if a.1 > b.1 {\n            Ordering::Greater\n        } else\
    \ {\n            Ordering::Equal\n        }\n    });\n    nums_vec.iter().map(|(n,\
    \ _)| *n).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Ordering`\n  -->\
    \ /tmp/tmp9yw6g00u.rs:14:13\n   |\n14 |             Ordering::Less\n   |     \
    \        ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0433]: failed to\
    \ resolve: use of undeclared type `Ordering`\n  --> /tmp/tmp9yw6g00u.rs:16:13\n\
    \   |\n16 |             Ordering::Greater\n   |             ^^^^^^^^ use of undeclared\
    \ type `Ordering`\n\nerror[E0433]: failed to resolve: use of undeclared type `Ordering`\n\
    \  --> /tmp/tmp9yw6g00u.rs:18:13\n   |\n18 |             Ordering::Equal\n   |\
    \             ^^^^^^^^ use of undeclared type `Ordering`\n\nerror[E0425]: cannot\
    \ find function `sum_digits` in this scope\n  --> /tmp/tmp9yw6g00u.rs:11:70\n\
    \   |\n11 |     let mut nums_vec: Vec<(isize, isize)> = nums.iter().map(|n| (*n,\
    \ sum_digits(*n))).collect();\n   |                                          \
    \                            ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 4 previous errors\n\nSome errors have detailed explanations: E0425, E0433.\n\
    For more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_sorted: Vec<isize> = nums.clone();\n    nums_sorted.sort_by(|a, b| {\n\
    \        let sum_a = a.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        let sum_b = b.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        sum_a.cmp(&sum_b)\n    });\n    nums_sorted\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpxqsvselh.rs:13:66

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_and_index: Vec<(isize, usize)> = nums\n        .iter()\n        .enumerate()\n\
    \        .map(|(index, value)| {\n            (\n                value.to_string()\n\
    \                    .chars()\n                    .map(|ch| ch.to_digit(10).unwrap()\
    \ as isize)\n                    .sum(),\n                index,\n           \
    \ )\n        })\n        .collect();\n    sum_and_index.sort_by(|a, b| a.0.cmp(&b.0));\n\
    \    sum_and_index\n        .iter()\n        .map(|(_, index)| nums[*index])\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpc3qg99_q.rs:18:47

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sorted_nums = nums.clone();\n    sorted_nums.sort_by(|a, b| {\n        let sum_a\
    \ = a.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n   \
    \     let sum_b = b.to_string().chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>();\n\
    \        sum_a.cmp(&sum_b)\n    });\n    sorted_nums\n}\n\nfn main() {\n    let\
    \ candidate = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11,\
    \ -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmp20cr32px.rs:13:66

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ sum_digits: Vec<(isize, usize)> = nums\n        .iter()\n        .enumerate()\n\
    \        .map(|(i, &num)| (num, i))\n        .map(|(num, i)| (num, sum_digits(num)\
    \ + (i as isize)))\n        .collect();\n    sum_digits.sort_by(|a, b| a.1.cmp(&b.1));\n\
    \    sum_digits.iter().map(|(x, _)| *x).collect()\n}\n\nfn main() {\n    let candidate\
    \ = order_by_points;\n    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1,\
    \ -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `sum_digits` in this scope\n  --> /tmp/tmpbnsicxee.rs:15:31\n\
    \   |\n15 |         .map(|(num, i)| (num, sum_digits(num) + (i as isize)))\n \
    \  |                               ^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659976052
- exit_code: 101
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    let mut\
    \ nums_points: Vec<(isize, usize)> = nums\n        .iter()\n        .enumerate()\n\
    \        .map(|(i, &x)| (x, i))\n        .collect();\n    nums_points.sort_by_key(|(x,\
    \ _)| {\n        let x_str = x.to_string();\n        x_str.chars().map(|c| c.to_digit(10).unwrap()).sum::<u32>()\
    \ as usize\n    });\n    nums_points.iter().map(|(x, _)| *x).collect()\n}\n\n\
    fn main() {\n    let candidate = order_by_points;\n    assert_eq!(candidate(vec![1,\
    \ 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n    assert_eq!(candidate(vec![1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]), vec![0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98,\
    \ 2, -3]), vec![-3, -32, -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n\
    \    assert_eq!(candidate(vec![0, 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4,\
    \ 23, 6, 6]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpup_kbs89.rs:18:46

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976052
- exit_code: 1
  program: "/// Write a function which sorts the given vector of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original vector.\n/// For example:\n/// >>> order_by_points(vec![1,\
    \ 11, -1, -11, -12])\n/// vec![-1, -11, 1, -12, 11]\n/// >>> order_by_points(vec![])\n\
    /// vec![]\nfn order_by_points(nums: Vec<isize>) -> Vec<isize> {\n    nums.iter().enumerate().sorted_by(|a,\
    \ b| {\n        let (ai, a) = a;\n        let (bi, b) = b;\n        (a.abs() +\
    \ (a % 10).abs()).cmp(&(b.abs() + (b % 10).abs())).then(ai.cmp(bi))\n    }).map(|(_,\
    \ &n)| n).collect()\n}\n\nfn main() {\n    let candidate = order_by_points;\n\
    \    assert_eq!(candidate(vec![1, 11, -1, -11, -12]), vec![-1, -11, 1, -12, 11]);\n\
    \    assert_eq!(candidate(vec![1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]), vec![0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457]);\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, -11, -32, 43, 54, -98, 2, -3]), vec![-3, -32,\
    \ -98, -11, 1, 2, 43, 54]);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]), vec![1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![0,\
    \ 6, 6, -76, -21, 23, 4]), vec![-76, -21, 0, 4, 23, 6, 6]);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sorted_by` found for struct `Enumerate`\
    \ in the current scope\n  --> /tmp/tmpi1omk43e.rs:11:29\n   |\n11 |     nums.iter().enumerate().sorted_by(|a,\
    \ b| {\n   |                             ^^^^^^^^^ method not found in `Enumerate<std::slice::Iter<'_,\
    \ isize>>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976052

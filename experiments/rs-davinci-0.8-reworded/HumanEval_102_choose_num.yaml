name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// >>>\
  \ choose_num(12, 15)\n/// 14\n/// >>> choose_num(13, 12)\n/// -1\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    let range = x..y+1;\n    let mut largest_num = -1;\n    for num\
    \ in range {\n        if num % 2 == 0 && num > largest_num {\n            largest_num\
    \ = num;\n        }\n    }\n    largest_num", '    unimplemented!()', "    if\
    \ x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n\n    if y % 2 == 0 {\n        return y;\n    }\n\n    return -1;", "\t\
    let mut largest_even_number = -1;\n\tif x <= y {\n\t\tfor n in x..y + 1 {\n\t\t\
    \tif n % 2 == 0 {\n\t\t\t\tlargest_even_number = n;\n\t\t\t}\n\t\t}\n\t} else\
    \ {\n\t\tfor n in y..x + 1 {\n\t\t\tif n % 2 == 0 {\n\t\t\t\tlargest_even_number\
    \ = n;\n\t\t\t}\n\t\t}\n\t}\n\treturn largest_even_number;", '    unimplemented!()',
  "    // TODO: Implement me!\n    -1", "    if x <= y {\n        if x % 2 == 0 {\n\
    \            x\n        } else {\n            x + 1\n        }\n    } else {\n\
    \        -1\n    }", "    for i in x..y + 1 {\n        if i % 2 == 0 {\n     \
    \       return i;\n        }\n    }\n    -1", "    if x % 2 == 0 && x > 0 && y\
    \ > 0 {\n        return x;\n    } else if x % 2 != 0 && x > 0 && y > 0 {\n   \
    \     return x + 1;\n    } else {\n        return -1;\n    }", "    let mut z\
    \ = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0 {\n            z = i;\n\
    \        }\n    }\n    z", "    assert!(x >= 0 && y >= 0);\n    let mut temp =\
    \ -1;\n    for i in x..(y+1) {\n        if i % 2 == 0 {\n            temp = i;\n\
    \        }\n    }\n    temp", "    if x > y {\n        -1\n    } else if x % 2\
    \ == 0 {\n        x\n    } else {\n        x + 1\n    }", "    if x > y {\n  \
    \      return -1;\n    }\n    for n in (x..y+1).rev() {\n        if n % 2 == 0\
    \ {\n            return n;\n        }\n    }\n    -1", '    unimplemented!()',
  "    if x % 2 == 0 {\n        if x <= y {\n            return x;\n        }\n  \
    \  }\n    if x + 1 <= y {\n        return x + 1;\n    }\n    -1", '    unimplemented!()',
  "    for n in x..y+1 {\n        if (n % 2) == 0 {\n            return n;\n     \
    \   }\n    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n  \
    \  if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    -1", "    for n in (x..y + 1).rev() {\n        if n % 2 == 0\
    \ {\n            return n;\n        }\n    }\n    -1", '    unimplemented!();',
  "    if x % 2 == 0 {\n        if x <= y {\n            return x;\n        }\n  \
    \  }\n    if x+1 == y {\n        return -1;\n    }\n    return choose_num(x+1,\
    \ y);", "    if x % 2 == 0 && x >= y {\n        return x;\n    }\n    else if\
    \ y % 2 == 0 && y >= x {\n        return y;\n    }\n    else if y % 2 == 0 &&\
    \ x % 2 == 0 && x < y {\n        return x;\n    }\n    else if y % 2 == 0 && x\
    \ % 2 == 0 && x > y {\n        return y;\n    }\n    else {\n        return -1;\n\
    \    }", "    if x % 2 == 0 {\n        if x <= y {\n            return x;\n  \
    \      }\n    } else {\n        if x+1 <= y {\n            return x+1;\n     \
    \   }\n    }\n    -1", "    if x > y {\n        return -1;\n    }\n\n    if x\
    \ % 2 == 0 {\n        return x;\n    }\n\n    if x == y {\n        return -1;\n\
    \    }\n\n    choose_num(x + 1, y)", "    let mut max = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 && i > max {\n            max = i;\n        }\n   \
    \ }\n    max", "    let mut ret = -1;\n    for i in x..y+1 {\n        if i % 2\
    \ == 0 {\n            ret = i;\n        }\n    }\n    ret", "    if y < x {\n\
    \        -1\n    } else if x % 2 == 0 {\n        x\n    } else {\n        x +\
    \ 1\n    }", "    if y < x {\n        return -1;\n    }\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ -1", "    // TODO: Complete this function\n    0", "    if x > y {\n       \
    \ return -1;\n    }\n    let n = ((y - x) / 2) + 1;\n    return if n == 0 {\n\
    \        -1\n    } else {\n        y - n + 1\n    };", "    if x > y {\n     \
    \   return -1;\n    }\n\n    if x % 2 == 0 {\n        return x;\n    }\n\n   \
    \ if x + 1 == y {\n        return -1;\n    }\n\n    choose_num(x + 1, y)", " \
    \   // TODO\n    let mut num = x;\n    while num <= y {\n        if num % 2 ==\
    \ 0 {\n            return num;\n        }\n        num += 1;\n    }\n    -1",
  "    if x % 2 == 0 {\n        return x;\n    }\n    let mut result = -1;\n    for\
    \ i in x..y + 1 {\n        if i % 2 == 0 {\n            result = i;\n        }\n\
    \    }\n    result", "    let mut max_num = -1;\n    for n in x..(y + 1) {\n \
    \       if n % 2 == 0 && n > max_num {\n            max_num = n;\n        }\n\
    \    }\n    max_num", "    // Place your implementation here\n    -1", "    if\
    \ x % 2 == 0 && x <= y {\n        return x;\n    }\n    else if y % 2 == 0 &&\
    \ x <= y {\n        return y;\n    }\n    return -1;", "    for n in x..y+1 {\n\
    \        if n % 2 == 0 {\n            return n;\n        }\n    }\n    -1", " \
    \   let r = x / 2 * 2;\n    if r > y {\n        -1\n    } else {\n        r\n\
    \    }", "    if x % 2 == 0 && x <= y {\n        x\n    } else if y % 2 == 0 &&\
    \ x <= y {\n        y\n    } else if x % 2 == 0 && x > y {\n        x\n    } else\
    \ if y % 2 == 0 && x > y {\n        y\n    } else {\n        -1\n    }", "   \
    \ if x > y {\n        return -1;\n    }\n\n    let mut max_num = -1;\n    for\
    \ i in x..(y + 1) {\n        if i % 2 == 0 {\n            max_num = i;\n     \
    \   }\n    }\n\n    return max_num;", "    if x > y {\n        return -1;\n  \
    \  }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n   \
    \     return y;\n    }\n    if x + 1 == y {\n        return -1;\n    }\n    return\
    \ choose_num(x + 1, y - 1);", "    if x > y {\n        return -1;\n    }\n   \
    \ let mut largest_even_num = -1;\n    for i in x..(y + 1) {\n        if i % 2\
    \ == 0 {\n            largest_even_num = i;\n        }\n    }\n    largest_even_num",
  "    if x % 2 == 0 && x <= y {\n        return x;\n    } else if x % 2 == 1 && y\
    \ % 2 == 0 {\n        return y;\n    } else if x % 2 == 1 && y % 2 == 1 {\n  \
    \      return -1;\n    } else {\n        choose_num(x+1, y)\n    }", "    if x\
    \ > y { return -1; }\n    let mut num: isize = y;\n    while num >= x {\n    \
    \    if num % 2 == 0 {\n            return num;\n        }\n        num -= 1;\n\
    \    }\n    -1", "    if x <= y {\n        if x % 2 == 0 {\n            x\n  \
    \      } else {\n            choose_num(x + 1, y)\n        }\n    } else {\n \
    \       -1\n    }", "    let mut even = -1;\n    if x % 2 == 0 {\n        even\
    \ = x;\n    }\n    else {\n        even = x + 1;\n    }\n    let mut even = cmp::max(even,\
    \ x);\n    while even <= y {\n        if even % 2 == 0 {\n            return even;\n\
    \        }\n        even += 1;\n    }\n    -1", "    if x % 2 == 0 && x <= y {\n\
    \        return x;\n    } else if y % 2 == 0 && y >= x {\n        return y;\n\
    \    } else if x % 2 == 1 && y % 2 == 1 {\n        return -1;\n    } else if x\
    \ % 2 == 1 && y % 2 == 0 {\n        return y;\n    } else if x % 2 == 0 && y %\
    \ 2 == 1 {\n        return x;\n    } else {\n        return -1;\n    }", "   \
    \ let mut max_even = -1;\n    let mut x = x;\n    while x <= y {\n        if x\
    \ % 2 == 0 {\n            max_even = x;\n        }\n        x += 1;\n    }\n \
    \   max_even", "    // TODO: Implement this function, following the instructions\
    \ above.\n    let mut final = -1;\n    if x < y {\n        for i in x..y+1 {\n\
    \            if i % 2 == 0 {\n                final = i;\n            }\n    \
    \    }\n    }\n    return final;", "    if x > y {\n        -1\n    } else if\
    \ x % 2 == 0 {\n        x\n    } else {\n        x + 1\n    }", "    if x%2 ==\
    \ 0 {\n        let a = x;\n        if y%2 == 0 {\n            let b = y;\n   \
    \         return std::cmp::max(a, b);\n        }\n        else {\n           \
    \ let b = y-1;\n            return std::cmp::max(a, b);\n        }\n    }\n  \
    \  else {\n        let a = x+1;\n        if y%2 == 0 {\n            let b = y;\n\
    \            return std::cmp::max(a, b);\n        }\n        else {\n        \
    \    let b = y-1;\n            return std::cmp::max(a, b);\n        }\n    }",
  "    let mut n = (x+y)/2;\n    if n % 2 == 1 {\n        n -= 1;\n    }\n    if (n\
    \ < x) || (n > y) {\n        return -1;\n    }\n    return n;", "    // your code\
    \ here\n    0", "    if x % 2 == 0 {\n        x\n    } else if x + 1 == y {\n\
    \        -1\n    } else {\n        x + 2\n    }", "    for i in x..y+1 {\n   \
    \     if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "   \
    \ // (your solution goes here)\n    unimplemented!()", "    let mut result = -1;\n\
    \    if x > y {\n        return result;\n    }\n    for i in x..(y + 1) {\n  \
    \      if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result",
  "    let mut largest_even = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0\
    \ {\n            largest_even = i;\n        }\n    }\n    largest_even", "   \
    \ // TODO: Implement me!\n    -1", "    let mut output = -1;\n    for i in x..y\
    \ + 1 {\n        if i % 2 == 0 {\n            output = i;\n        }\n    }\n\
    \    output", "    if x < 0 || y < 0 {\n        return -1;\n    }\n\n    let mut\
    \ high = -1;\n    for num in x..y+1 {\n        if num % 2 == 0 {\n           \
    \ high = num;\n        }\n    }\n    high", "    // YOUR CODE HERE\n    unimplemented!();",
  '    return x + 2;', '    unimplemented!()', "    if x % 2 == 0 {\n        let first\
    \ = x;\n        if y > first {\n            return first;\n        }\n    }\n\
    \    let first = x + 1;\n    if y > first {\n        return first;\n    }\n  \
    \  -1", "    if x % 2 == 0 {\n        if x > y {\n            return -1;\n   \
    \     } else {\n            return x;\n        }\n    } else {\n        if (x\
    \ + 1) > y {\n            return -1;\n        } else {\n            return x +\
    \ 1;\n        }\n    }", "    // TODO\n    unimplemented!()", "    // FIXME!\n\
    \    -1", "    // Uncomment this line when you're ready to start\n    // 0", " \
    \   if x % 2 == 0 {\n        x\n    } else if y % 2 == 0 {\n        y\n    } else\
    \ {\n        -1\n    }", "    for i in (x..y+1).rev() {\n        if i % 2 == 0\
    \ {\n            return i;\n        }\n    }\n    -1", "    let mut best_result\
    \ = -1;\n    for i in x..(y + 1) {\n        if i % 2 == 0 {\n            best_result\
    \ = i;\n        }\n    }\n    best_result", "    if x % 2 == 0 {\n        if x\
    \ > y {\n            return -1;\n        } else {\n            return x;\n   \
    \     }\n    }\n    if x + 1 > y {\n        return -1;\n    }\n    x + 1", " \
    \   // TODO\n    0", "    if x % 2 == 0 {\n        if x == y {\n            return\
    \ x;\n        }\n        if x + 1 == y {\n            return x;\n        }\n \
    \       return choose_num(x + 2, y);\n    } else {\n        if x + 1 == y {\n\
    \            return -1;\n        }\n        return choose_num(x + 1, y);\n   \
    \ }", "    if x > y {\n        -1\n    } else if y % 2 == 0 {\n        y\n   \
    \ } else {\n        y - 1\n    }", '    unimplemented!()', "    let mut n: isize\
    \ = -1;\n    if x <= y {\n        for i in x..y + 1 {\n            if i % 2 ==\
    \ 0 {\n                n = i;\n            }\n        }\n    }\n    n", "    //\
    \ Your code here\n    0", "    // TODO: REPLACE THIS CODE WITH YOUR FUNCTION!\n\
    \    unimplemented!()", "    // TODO: Fix me!\n    fail!(\"Replace me with a working\
    \ implementation\")", "    // YOUR CODE HERE\n    unimplemented!();", "    for\
    \ i in x..y+1 {\n        if (i % 2 == 0) {\n            return i;\n        }\n\
    \    }\n    return -1;", "    let mut n = 0;\n    if x <= y {\n        let mut\
    \ a = x + 1;\n        while a < y {\n            if a % 2 == 0 {\n           \
    \     n = a;\n            }\n            a += 1;\n        }\n        if n > 0\
    \ {\n            return n;\n        } else {\n            if x % 2 == 0 && y %\
    \ 2 == 0 {\n                if x > y {\n                    return x;\n      \
    \          } else {\n                    return y;\n                }\n      \
    \      } else {\n                return -1;\n            }\n        }\n    } else\
    \ {\n        let mut a = y + 1;\n        while a < x {\n            if a % 2 ==\
    \ 0 {\n                n = a;\n            }\n            a += 1;\n        }\n\
    \        if n > 0 {\n            return n;\n        } else {\n            if x\
    \ % 2 == 0 && y % 2 == 0 {\n                if x > y {\n                    return\
    \ x;\n                } else {\n                    return y;\n              \
    \  }\n            } else {\n                return -1;\n            }\n      \
    \  }\n    }", "    let mut max = -1;\n    for i in x..(y+1) {\n        if i %\
    \ 2 == 0 && i > max {\n            max = i;\n        }\n    }\n    max", "   \
    \ let mut biggest_even = -1;\n    for i in x..(y + 1) {\n        if i % 2 == 0\
    \ {\n            biggest_even = i;\n        }\n    }\n    biggest_even", '    unimplemented!();',
  "    // If x is an even number return it\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n\n    // If x is an odd number add 1 to it\n    let x = x + 1;\n\n   \
    \ // If y is greater than x, then return x\n    if y >= x {\n        return x;\n\
    \    }\n\n    // Otherwise return -1\n    return -1;", "    if x % 2 == 0 && x\
    \ >= y {\n        return x;\n    }\n    else if y % 2 == 0 && y >= x {\n     \
    \   return y;\n    }\n    else if x % 2 == 0 && y % 2 == 0 && y > x {\n      \
    \  return y - 1;\n    }\n    else if x % 2 == 0 && y % 2 == 0 && x > y {\n   \
    \     return x - 1;\n    }\n    else {\n        return -1;\n    }", "    if x\
    \ % 2 == 0 && x >= 0 && y >= 0 {\n        if x > y {\n            return -1;\n\
    \        } else {\n            return y;\n        }\n    } else if x % 2 != 0\
    \ && x >= 0 && y >= 0 {\n        if x + 1 > y {\n            return -1;\n    \
    \    } else {\n            return y;\n        }\n    } else {\n        return\
    \ -1;\n    }", "    for i in (x..y + 1).rev() {\n        if i % 2 == 0 {\n   \
    \         return i;\n        }\n    }\n    -1", "    // YOUR CODE HERE\n    if\
    \ x%2 == 0 {\n        return x;\n    } else if x+1 <= y {\n        return x+1;\n\
    \    } else {\n        return -1;\n    }", "    let mut n = x;\n    let mut even\
    \ = -1;\n    if x % 2 == 0 {\n        even = x;\n    }\n    while n < y {\n  \
    \      n += 1;\n        if n % 2 == 0 {\n            even = n;\n        }\n  \
    \  }\n    even", '    unimplemented!()', "    let mut num = 0;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            num = i;\n        }\n    }\n    if num\
    \ == 0 {\n        return -1;\n    }\n    num", "\treturn -1;", "    if x < 0 ||\
    \ y < 0 {\n        panic!(\"Bad input: {} and {}\", x, y);\n    }\n\n    let mut\
    \ num = 0;\n    for i in x..(y + 1) {\n        if i % 2 == 0 {\n            num\
    \ = i;\n        }\n    }\n\n    if num == 0 {\n        -1\n    } else {\n    \
    \    num\n    }", "    let mut result = -1;\n    for i in x..(y+1) {\n       \
    \ if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result", " \
    \   for number in x..y + 1 {\n        if number % 2 == 0 {\n            return\
    \ number;\n        }\n    }\n    -1", "    for i in x..y + 1 {\n        if i %\
    \ 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    // First, we\
    \ define a temporary variable that we'll use to store our\n    // current best\
    \ candidate.\n    let mut candidate = -1;\n\n    // Now, we'll iterate over all\
    \ the numbers in the range [x, y] inclusive.\n    for i in x..y+1 {\n        //\
    \ Here, we check whether we've encountered an even number that's\n        // bigger\
    \ than the previous candidate. If we have, then we update\n        // our candidate\
    \ variable with that number.\n        if i % 2 == 0 && i > candidate {\n     \
    \       candidate = i;\n        }\n    }\n\n    // Finally, we return the candidate\
    \ variable, which will contain the\n    // biggest even number in the range, or\
    \ -1 if there are no even numbers\n    // in the range.\n    candidate", "   \
    \ let mut curr = y;\n    while curr >= x {\n        if curr % 2 == 0 {\n     \
    \       return curr;\n        }\n        curr -= 1;\n    }\n    -1", "    let\
    \ mut max_even = -1;\n    for n in x..y+1 {\n        if n % 2 == 0 {\n       \
    \     max_even = n;\n        }\n    }\n    max_even", "    if x <= y {\n     \
    \   if y % 2 == 0 {\n            y\n        } else {\n            y - 1\n    \
    \    }\n    } else {\n        -1\n    }", "    let min = if x > y { y } else {\
    \ x };\n    let max = if x > y { x } else { y };\n    for i in (min..=max).rev()\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1",
  "    assert!(x >= 0);\n    assert!(y >= 0);\n    // TODO: write code to solve the\
    \ problem\n    if x % 2 == 0 {\n        if x <= y {\n            return x;\n \
    \       }\n    }\n\n    if x % 2 == 1 {\n        if x + 1 <= y {\n           \
    \ return x + 1;\n        }\n    }\n\n    -1", "    let bigger_num = if x >= y\
    \ {x} else {y};\n    let smaller_num = if x <= y {x} else {y};\n    let mut result\
    \ = -1;\n    for i in (smaller_num..bigger_num+1).rev() {\n        if i % 2 ==\
    \ 0 {\n            result = i;\n            break;\n        }\n    }\n    result",
  '    -1', '    unimplemented!();', "    let mut big_even = -1;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            big_even = i;\n        }\n    }\n  \
    \  big_even", "    if x % 2 == 0 && x <= y {\n        x\n    } else if y % 2 ==\
    \ 0 && x <= y {\n        y\n    } else if x + 1 == y && y % 2 == 0 {\n       \
    \ y\n    } else if x + 1 == y && x % 2 == 0 {\n        x\n    } else {\n     \
    \   -1\n    }", "    // TODO: Implement me!\n    -1", "    // TODO: Implement\
    \ this function\n    unimplemented!()", "    let (low, high) = if x < y { (x,\
    \ y) } else { (y, x) };\n    let mut num = high;\n    while num >= low {\n   \
    \     if num % 2 == 0 {\n            return num;\n        }\n        num -= 1;\n\
    \    }\n    -1", "    if x % 2 == 0 {\n        if x == y {\n            return\
    \ x;\n        }\n        else {\n            return choose_num(x+2, y);\n    \
    \    }\n    }\n    else {\n        if x == y {\n            return -1;\n     \
    \   }\n        else {\n            return choose_num(x+1, y);\n        }\n   \
    \ }", '    unimplemented!()', "    if x > y {\n        return -1;\n    }\n\n \
    \   if x % 2 == 0 {\n        return x;\n    }\n\n    if y % 2 == 0 {\n       \
    \ return y;\n    }\n\n    if x == y {\n        return -1;\n    }\n\n    if x %\
    \ 2 == 1 && y % 2 == 1 {\n        return -1;\n    }\n\n    if x % 2 == 1 && y\
    \ % 2 == 0 {\n        return y;\n    }\n\n    if x % 2 == 0 && y % 2 == 1 {\n\
    \        return x;\n    }\n\n    return -1;", "    let mut greatest = -1;\n  \
    \  for i in x..y+1 {\n        if i % 2 == 0 && i > greatest {\n            greatest\
    \ = i;\n        }\n    }\n    greatest", "    if x % 2 == 0 && x < y {\n     \
    \   x\n    } else if x + 1 < y {\n        x + 1\n    } else {\n        -1\n  \
    \  }", '    unimplemented!()', "    // First, we need to define the starting and\
    \ ending points of the search.\n    // The rightmost bit of a number is 1 if the\
    \ number is odd and 0 if it's\n    // even. Thus, we have to make sure that the\
    \ number we start with has the\n    // same rightmost bit as both x and y.\n \
    \   let start: isize = if x & 1 == 1 {\n        x\n    } else {\n        x + 1\n\
    \    };\n    let end: isize = if y & 1 == 1 {\n        y - 1\n    } else {\n \
    \       y\n    };\n\n    // If the starting point has become greater than the\
    \ ending point, then\n    // there's no number we could choose.\n    if start\
    \ > end {\n        return -1;\n    }\n\n    // If the number is in range, then\
    \ we return it. Otherwise, we return -1.\n    if start >= x && start <= y {\n\
    \        start\n    } else {\n        -1\n    }", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        x\n    } else {\n        choose_num(x\
    \ + 1, y)\n    }", '    unimplemented!()', '    panic!("choose_num is not implemented");',
  "    let mut nums = vec![];\n    let mut i = x;\n    while i <= y {\n        if\
    \ i % 2 == 0 {\n            nums.push(i);\n        }\n        i += 1;\n    }\n\
    \    match nums.len() {\n        0 => -1,\n        _ => *nums.iter().max().unwrap(),\n\
    \    }", "    if x > y {\n        return -1;\n    }\n    let mut max = -1;\n \
    \   for n in x..y + 1 {\n        if n % 2 == 0 {\n            max = n;\n     \
    \   }\n    }\n    max", "    // Your code here\n    x", "    // TODO: Implement\
    \ this function\n    let start = if x % 2 == 0 { x } else { x + 1 };\n    let\
    \ end = if y % 2 == 0 { y } else { y - 1 };\n    let range = (start..=end).step_by(2);\n\
    \    match range.last() {\n        Some(i) => i,\n        None => -1,\n    }",
  '    unimplemented!()', "    if x < y {\n        for i in x..(y+1) {\n         \
    \   if i % 2 == 0 {\n                return i;\n            }\n        }\n   \
    \ } else {\n        for i in y..(x+1) {\n            if i % 2 == 0 {\n       \
    \         return i;\n            }\n        }\n    }\n    -1", "    for i in x..(y+1)\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1",
  "    // TODO: Finish the function\n    let number = x + y;\n    for i in 1..number\
    \ {\n        let even:isize = i % 2;\n        if even == 0 {\n            return\
    \ i;\n        } else {\n            return -1;\n        }\n    }\n    return number;",
  "    let mut num: isize = x - 1;\n    while num <= y {\n        num += 1;\n    \
    \    if num % 2 == 0 {\n            return num;\n        }\n    }\n    return\
    \ -1;", "    if x > y {\n        return -1;\n    }\n    let mut candidate = x;\n\
    \    while candidate <= y {\n        if candidate % 2 == 0 {\n            return\
    \ candidate;\n        }\n        candidate += 1;\n    }\n    -1", "    let mut\
    \ largest_even_num = -1;\n    for num in x..(y + 1) {\n        if num % 2 == 0\
    \ {\n            largest_even_num = num;\n        }\n    }\n    largest_even_num",
  "    let mut count = x;\n    while count <= y {\n        if count % 2 == 0 {\n \
    \           return count;\n        }\n        count += 1;\n    }\n    -1", " \
    \   let l = if x % 2 == 0 { x } else { x + 1 };\n    let h = if y % 2 == 0 { y\
    \ } else { y - 1 };\n    if l > h { -1 } else { h }", "    if x > y {\n      \
    \  return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y\
    \ % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if x % 2 == 0 &&\
    \ x <= y {\n        return x;\n    }\n    if y % 2 == 0 && x <= y {\n        return\
    \ y;\n    }\n    return -1;", "    // Type your code here!\n    let mut result\
    \ = -1;\n    if x < y {\n        for i in x..y + 1 {\n            if i % 2 ==\
    \ 0 {\n                result = i;\n            }\n        }\n    }\n    result",
  "    // TODO\n    -1", "    if x > y {\n        -1\n    } else if x % 2 == 0 {\n\
    \        x\n    } else {\n        choose_num(x + 1, y)\n    }", '    unimplemented!()',
  "    let mut a = 0;\n    if x > y {\n        a = x;\n    } else {\n        a = y;\n\
    \    }\n    while a > 0 {\n        if a >= x && a <= y && a % 2 == 0 {\n     \
    \       return a;\n        }\n        a -= 1;\n    }\n    return -1;", "    let\
    \ mut i = 0;\n    let mut counter = 0;\n    let mut a = -1;\n    if x > y {\n\
    \        return -1;\n    } else {\n        for i in x..(y + 1) {\n           \
    \ if i % 2 == 0 {\n                counter = i;\n                a = counter;\n\
    \            }\n        }\n    }\n    return a;", "    for i in x..y+1 {\n   \
    \     if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "   \
    \ // TODO: do it without loops\n    unimplemented!()", "    if x > y {\n     \
    \   return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if y\
    \ % 2 == 0 {\n        return y;\n    }\n    return -1;", "    if x > y { return\
    \ -1; }\n    if y % 2 == 0 { return y; }\n    if x % 2 == 0 { return x; }\n  \
    \  return -1;", "    // Put your code here\n    -1", '    unimplemented!();',
  '    unimplemented!()', '    unimplemented!();', "    // TODO: Implement this function\n\
    \    0", "    if x > y { return -1; }\n    let mut result = y;\n    while result\
    \ % 2 != 0 {\n        result -= 1;\n    }\n    result", "    // your code here\n\
    \    unimplemented!();", "    if x == y {\n        if x % 2 == 0 {\n         \
    \   return x;\n        } else {\n            return -1;\n        }\n    }\n  \
    \  let (min, max) = if x < y {(x, y)} else {(y, x)};\n    let mut max_even = 0;\n\
    \    for i in min..=max {\n        if i % 2 == 0 {\n            max_even = i;\n\
    \        }\n    }\n    max_even", "    // Hint: you may use additional functions\
    \ to help you implement this\n    // function.\n    if y < x {\n        -1\n \
    \   } else if x % 2 == 0 {\n        x\n    } else {\n        choose_num(x + 1,\
    \ y)\n    }", '    unimplemented!()', '    return 0;', "    let mut result = -1;\n\
    \    for i in x..y + 1 {\n        if i % 2 == 0 {\n            result = i;\n \
    \       }\n    }\n    result", "    for i in y..x {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n    }\n    -1", "    if y % 2 == 0 {\n    \
    \    y\n    } else if x % 2 == 0 {\n        x\n    } else {\n        -1\n    }",
  "    if x > y {\n        return -1;\n    }\n    for i in (x..=y).rev() {\n     \
    \   if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", '    unimplemented!();',
  "    // If x > y, then there's no such number\n    if x > y {\n        return -1;\n\
    \    }\n    // If x is even, then x is a candidate\n    if x % 2 == 0 {\n    \
    \    return x;\n    }\n    // If x+1 is even, then x+1 is a candidate\n    if\
    \ (x+1) % 2 == 0 {\n        return x+1;\n    }\n    // Here x and x+1 are both\
    \ odd, so there's no candidate\n    return -1;", "    if x % 2 == 0 {\n      \
    \  if x < y {\n            return x;\n        } else {\n            return -1;\n\
    \        }\n    } else {\n        if x + 1 < y {\n            return x + 1;\n\
    \        } else {\n            return -1;\n        }\n    }", '    unimplemented!()',
  "    if x % 2 == 0 {\n        for i in x..y+1 {\n            if i % 2 == 0 {\n \
    \               return i;\n            }\n        }\n    }\n    else {\n     \
    \   for i in x+1..y+1 {\n            if i % 2 == 0 {\n                return i;\n\
    \            }\n        }\n    }\n    return -1;", "    if x % 2 == 0 && x <=\
    \ y {\n        return x;\n    }\n    if y % 2 == 0 && x <= y {\n        return\
    \ y;\n    }\n    if x % 2 == 1 && x <= y {\n        return choose_num(x+1, y);\n\
    \    }\n    if y % 2 == 1 && x <= y {\n        return choose_num(x, y-1);\n  \
    \  }\n    -1", "    if x > y {\n        return -1;\n    }\n\n    if x % 2 == 0\
    \ {\n        return x;\n    } else {\n        return x + 1;\n    }", "    // You\
    \ can use a loop from x to y inclusive using the range notation,\n    // like\
    \ this:\n    // for i in x..y+1 {\n    //     ...\n    // }\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1",
  "    let mut z = 0;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n          \
    \  z = i;\n        }\n    }\n    if z == 0 {\n        return -1;\n    }\n    return\
    \ z;", "    let (x, y) = (x.max(y), x.min(y));\n    if x % 2 == 0 {\n        x\n\
    \    } else if x - 1 >= y {\n        x - 1\n    } else {\n        -1\n    }",
  "    // YOUR CODE HERE\n    unimplemented!();", '    unimplemented!();', "    //\
    \ TODO\n    unimplemented!()", '    unimplemented!()', "    let mut current =\
    \ x;\n    while current <= y {\n        if current % 2 == 0 {\n            return\
    \ current;\n        }\n        current += 1;\n    }\n    -1", "    if x > y {\n\
    \        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n  \
    \  return choose_num(x + 1, y);", "    if x > y {\n        -1\n    } else if x\
    \ % 2 == 0 {\n        x\n    } else {\n        x + 1\n    }", "    if y < x {\n\
    \        -1\n    } else if y % 2 == 0 {\n        y\n    } else {\n        y -\
    \ 1\n    }", "    // TODO: finish function.\n    // Hint: you might need some\
    \ else clause.\n    if x % 2 == 0 && y % 2 == 0 {\n        if x > y {\n      \
    \      return x;\n        } else {\n            return y;\n        }\n    } else\
    \ if (x + 1) % 2 == 0 && (y + 1) % 2 == 0 {\n        if x > y {\n            return\
    \ x;\n        } else {\n            return y;\n        }\n    } else {\n     \
    \   return -1;\n    }", "    // If x is greater than y, then return -1.\n    if\
    \ x > y {\n        return -1;\n    }\n    // If the greater number is odd, then\
    \ subtract one from it.\n    let x = if x % 2 == 1 { x - 1 } else { x };\n   \
    \ let y = if y % 2 == 1 { y - 1 } else { y };\n    // Now check if we're in range.\n\
    \    if x > y {\n        return -1;\n    }\n    // We're in range, so just return\
    \ y.\n    y", "    if x < 0 || y < 0 {\n        panic!(\"x and y should be positive!\"\
    );\n    }\n    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n  \
    \      return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    let\
    \ mut i = x + 1;\n    while i < y {\n        if i % 2 == 0 {\n            return\
    \ i;\n        }\n        i += 1;\n    }\n    -1", "    if x % 2 == 0 {\n     \
    \   return x;\n    } else if x + 1 <= y {\n        return x + 1;\n    } else {\n\
    \        return -1;\n    }", '    unimplemented!();', "    if x % 2 == 0 {\n \
    \       return x;\n    } else if x + 1 == y {\n        return -1;\n    } else\
    \ {\n        return choose_num(x + 1, y);\n    }", '    unimplemented!()', " \
    \   let mut max_even = -1;\n    for num in x..(y + 1) {\n        if num % 2 ==\
    \ 0 {\n            max_even = num;\n        }\n    }\n    max_even", '    unimplemented!()',
  "    // your code here\n    for i in (x..y+1).rev() {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n    }\n    -1", "    // your code here\n  \
    \  unimplemented!()", '    unimplemented!();', "    let mut number: isize = x;\n\
    \    if x < y {\n        number = y;\n    }\n\n    if number % 2 == 0 {\n    \
    \    return number;\n    } else {\n        return number - 1;\n    }", "    if\
    \ y < x {\n        return -1;\n    }\n\n    let mut largest_even = -1;\n    for\
    \ i in x..y+1 {\n        if i % 2 == 0 {\n            largest_even = i;\n    \
    \    }\n    }\n\n    return largest_even;", "    let mut result = -1;\n    for\
    \ num in x..(y + 1) {\n        if num % 2 == 0 {\n            result = num;\n\
    \        }\n    }\n    result", "    let min = if x < y { x } else { y };\n  \
    \  let max = if x > y { x } else { y };\n    let mut num = max;\n    while num\
    \ >= min {\n        if num % 2 == 0 {\n            return num;\n        }\n  \
    \      num -= 1;\n    }\n    -1", "    if x % 2 == 0 {\n        if x <= y {\n\
    \            return x;\n        }\n    }\n    if y % 2 == 0 {\n        if x <=\
    \ y {\n            return y;\n        }\n    }\n    -1", "    if x % 2 == 0 {\n\
    \        return x;\n    }\n    else if y % 2 == 0 {\n        return y;\n    }\n\
    \    else {\n        return -1;\n    }"]
stop_tokens:
- "\n}"

name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// >>>\
  \ choose_num(12, 15)\n/// 14\n/// >>> choose_num(13, 12)\n/// -1\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    let range = x..y+1;\n    let mut largest_num = -1;\n    for num\
    \ in range {\n        if num % 2 == 0 && num > largest_num {\n            largest_num\
    \ = num;\n        }\n    }\n    largest_num", '    unimplemented!()', "    if\
    \ x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n\n    if y % 2 == 0 {\n        return y;\n    }\n\n    return -1;", "\t\
    let mut largest_even_number = -1;\n\tif x <= y {\n\t\tfor n in x..y + 1 {\n\t\t\
    \tif n % 2 == 0 {\n\t\t\t\tlargest_even_number = n;\n\t\t\t}\n\t\t}\n\t} else\
    \ {\n\t\tfor n in y..x + 1 {\n\t\t\tif n % 2 == 0 {\n\t\t\t\tlargest_even_number\
    \ = n;\n\t\t\t}\n\t\t}\n\t}\n\treturn largest_even_number;", '    unimplemented!()',
  "    // TODO: Implement me!\n    -1", "    if x <= y {\n        if x % 2 == 0 {\n\
    \            x\n        } else {\n            x + 1\n        }\n    } else {\n\
    \        -1\n    }", "    for i in x..y + 1 {\n        if i % 2 == 0 {\n     \
    \       return i;\n        }\n    }\n    -1", "    if x % 2 == 0 && x > 0 && y\
    \ > 0 {\n        return x;\n    } else if x % 2 != 0 && x > 0 && y > 0 {\n   \
    \     return x + 1;\n    } else {\n        return -1;\n    }", "    let mut z\
    \ = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0 {\n            z = i;\n\
    \        }\n    }\n    z", "    assert!(x >= 0 && y >= 0);\n    let mut temp =\
    \ -1;\n    for i in x..(y+1) {\n        if i % 2 == 0 {\n            temp = i;\n\
    \        }\n    }\n    temp", "    if x > y {\n        -1\n    } else if x % 2\
    \ == 0 {\n        x\n    } else {\n        x + 1\n    }", "    if x > y {\n  \
    \      return -1;\n    }\n    for n in (x..y+1).rev() {\n        if n % 2 == 0\
    \ {\n            return n;\n        }\n    }\n    -1", '    unimplemented!()',
  "    if x % 2 == 0 {\n        if x <= y {\n            return x;\n        }\n  \
    \  }\n    if x + 1 <= y {\n        return x + 1;\n    }\n    -1", '    unimplemented!()',
  "    for n in x..y+1 {\n        if (n % 2) == 0 {\n            return n;\n     \
    \   }\n    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n  \
    \  if x % 2 == 0 {\n        return x;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    -1", "    for n in (x..y + 1).rev() {\n        if n % 2 == 0\
    \ {\n            return n;\n        }\n    }\n    -1", '    unimplemented!();']
stop_tokens:
- "\n}"

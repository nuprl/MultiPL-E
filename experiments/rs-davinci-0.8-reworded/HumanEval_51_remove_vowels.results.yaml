language: rs
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut filtered_text = String::from(\"\");\n    for c in text.chars()\
    \ {\n        if !is_vowel(c) {\n            filtered_text.push(c);\n        }\n\
    \    }\n    filtered_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpy3xpb0kk.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for ch in text.chars() {\n   \
    \     if ch != 'a' && ch != 'e' && ch != 'i' && ch != 'o' && ch != 'u' {\n   \
    \         new_text.push(ch);\n        }\n    }\n    new_text\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp9pylyz6s.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut new_text = String::new();\n    for c in text.chars() {\n    \
    \    if !\"aeiou\".contains(c) {\n            new_text.push(c);\n        }\n \
    \   }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgfsucwq7.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n           \
    \ result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpkh3f0s__.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for ch in text.chars() {\n     \
    \   if ch != 'a' && ch != 'e' && ch != 'i' && ch != 'o' && ch != 'u' {\n     \
    \       result.push(ch);\n        }\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpyxjx8y02.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|&c| !is_vowel(c)).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmprx69z97e.rs:13:31\n\
    \   |\n13 |     text.chars().filter(|&c| !is_vowel(c)).collect()\n   |       \
    \                        ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc74dofuo.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|x| \"AEIOUaeiou\".find(*x).is_none()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|&c| !\"aeiouAEIOU\".contains(c)).collect()\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_lowercase() {\n            continue;\n        }\n        match c {\n\
    \            'a' | 'e' | 'i' | 'o' | 'u' => continue,\n            _ => result.push(c),\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"bcdfghjklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmppqqz69ig.rs:29:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|x| {\n        match x {\n            'a' | 'e' |\
    \ 'i' | 'o' | 'u' | 'A' | 'E' | 'I' | 'O' | 'U' => false,\n            _ => true,\n\
    \        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\
    \    let mut new_text = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            new_text.push(c);\n        }\n    }\n  \
    \  new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|x| !is_vowel(*x)).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp3t9yt3s6.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|x| !is_vowel(*x)).collect()\n   |       \
    \                       ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut new_text = text.clone();\n\
    \    for vowel in vowels.iter() {\n        new_text = new_text.replace(vowel,\
    \ \"\");\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: expected a `Fn<(char,)>` closure, found `char`\n  --> /tmp/tmp32g47c2e.rs:16:37\n\
    \   |\n16 |         new_text = new_text.replace(vowel, \"\");\n   |          \
    \                           ^^^^^ expected an `Fn<(char,)>` closure, found `char`\n\
    \   |\n   = help: the trait `Fn<(char,)>` is not implemented for `char`\n   =\
    \ note: required because of the requirements on the impl of `FnOnce<(char,)>`\
    \ for `&char`\n   = note: required because of the requirements on the impl of\
    \ `Pattern<'_>` for `&char`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !\"aeiouAEIOU\".contains(*c)).collect()\n}\n\n\
    fn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 0
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let vowels = \"aeiouAEIOU\";\n    let mut new_text = String::from(\"\"\
    );\n    for c in text.chars() {\n        if !vowels.contains(c) {\n          \
    \  new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let\
    \ candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|&i| !\"aeiou\".contains(i)).collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpbgli46li.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpro2wyoen.rs:13:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659823178
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !c.is_lowercase() || c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp1b3b80ia.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823178

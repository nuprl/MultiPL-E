name: HumanEval_13_greatest_common_divisor
language: rs
prompt: "/// Return a greatest common divisor of two integers a and b\n/// >>> greatest_common_divisor(3,\
  \ 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n/// 5\nfn greatest_common_divisor(a:\
  \ isize, b: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
  \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
  \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
completions: ["    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n      \
    \  let temp = a % b;\n        a = b;\n        b = temp;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let abs_a = if a < 0 { -a } else { a };\n    let abs_b = if b <\
    \ 0 { -b } else { b };\n    // Iterate until we find the answer\n    for divisor\
    \ in abs_b..abs_a + 1 {\n        if divisor == 0 {\n            continue;\n  \
    \      }\n        if abs_a % divisor == 0 && abs_b % divisor == 0 {\n        \
    \    return divisor;\n        }\n    }\n    // Should never happen\n    panic!(\"\
    GCD not found\");", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let a = a.abs();\n    let b = b.abs();\n    let mut c =\
    \ a;\n    let mut d = b;\n    while c != 0 && d != 0 {\n        if c > d {\n \
    \           c %= d;\n        } else {\n            d %= c;\n        }\n    }\n\
    \    c + d", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", '    a.abs().gcd(&b.abs())', "    if b == 0 {\n        a\n \
    \   } else {\n        greatest_common_divisor(b, a % b)\n    }", "    let mut\
    \ a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n       \
    \ b = a % b;\n        a = t;\n    }\n    a", "    if b == 0 {\n        a\n   \
    \ } else {\n        greatest_common_divisor(b, a % b)\n    }", "    if b == 0\
    \ {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }",
  "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let c = a %\
    \ b;\n        a = b;\n        b = c;\n    }\n    a", "    let mut a = a;\n   \
    \ let mut b = b;\n    while b != 0 {\n        let t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    a", "    let mut c = b;\n    let mut a = a;\n    let\
    \ mut b = b;\n    while a != 0 {\n        c = a;\n        a = b % a;\n       \
    \ b = c;\n    }\n    return b;", "    let mut a = a;\n    let mut b = b;\n   \
    \ while b != 0 {\n        let temp = a % b;\n        a = b;\n        b = temp;\n\
    \    }\n    a", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }"]
stop_tokens:
- "\n}"

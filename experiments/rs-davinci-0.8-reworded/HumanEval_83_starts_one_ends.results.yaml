language: rs
name: HumanEval_83_starts_one_ends
results:
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let x = 10isize.pow(n\
    \ as u32 - 1);\n    starts_one_ends(n - 1) + starts_one_ends(n - 2) * (x + x /\
    \ 10)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpn975j6_i.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: -1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        1\n    } else {\n        starts_one_ends(n\
    \ - 1) + 10 * starts_one_ends(n - 2)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659823970
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return 0;\n    }\n    let mut res = 0;\n\
    \    for i in 1..n {\n        res += starts_one_ends(i) + 1;\n    }\n    res\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdp_lwyye.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut start = 1;\n    let mut end = 0;\n    for _ in 0..n\
    \ {\n        let temp = start;\n        start = start + end;\n        end = temp;\n\
    \    }\n    start + end\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpyh6cy3i1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // The number of starts with 1.\n    let n_starts_one = starts_one(n);\n\
    \    // The number of ends with 1.\n    let n_ends_one = starts_one(n - 1);\n\
    \    n_starts_one + n_ends_one\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `starts_one` in this scope\n --> /tmp/tmp57_rtm56.rs:5:24\n\
    \  |\n5 |     let n_starts_one = starts_one(n);\n  |                        ^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `starts_one` in\
    \ this scope\n --> /tmp/tmp57_rtm56.rs:7:22\n  |\n7 |     let n_ends_one = starts_one(n\
    \ - 1);\n  |                      ^^^^^^^^^^ help: a local variable with a similar\
    \ name exists: `n_starts_one`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    if n == 2 {\n  \
    \      return 55;\n    }\n    let mut a = 1;\n    let mut b = 1;\n    let mut\
    \ c = 0;\n    for _ in 0..n - 2 {\n        a = c + b;\n        c = b;\n      \
    \  b = a;\n    }\n    (a + b) * 10\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp9z3o3k2x.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    // todo: implement, using starts_one_ends_digit\n    0\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp68bqq186.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut high = 9;\n    let mut low = 1;\n    for _ in 1..n {\n\
    \        high = high * 10 + 9;\n        low = low * 10;\n    }\n    high - low\
    \ + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpdx3rkjdo.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n - (n / 2)\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpoyof40gl.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut prev = 0;\n    let mut curr = 1;\n    for _ in 0..n\
    \ {\n        let next = curr + prev;\n        prev = curr;\n        curr = next;\n\
    \    }\n    2 * curr\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpal3en_uh.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    (2..n + 1).fold(0, |acc, x| acc + x * 10isize.pow(x - 1))\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp71475r2j.rs:4:55\n  |\n4 |\
    \     (2..n + 1).fold(0, |acc, x| acc + x * 10isize.pow(x - 1))\n  |         \
    \                                              ^^^^^ expected `u32`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `u32` and panic if the converted value\
    \ doesn't fit\n  |\n4 |     (2..n + 1).fold(0, |acc, x| acc + x * 10isize.pow((x\
    \ - 1).try_into().unwrap()))\n  |                                            \
    \           ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    assert!(n > 0);\n    if n == 1 {\n        return 1;\n    }\n\
    \    isize::pow(10, n - 1) + 9 * starts_one_ends(n - 1)\n}\n\nfn main() {\n  \
    \  let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpm_j5zyb2.rs:8:20\n  |\n8 |\
    \     isize::pow(10, n - 1) + 9 * starts_one_ends(n - 1)\n  |                \
    \    ^^^^^ expected `u32`, found `isize`\n  |\nhelp: you can convert an `isize`\
    \ to a `u32` and panic if the converted value doesn't fit\n  |\n8 |     isize::pow(10,\
    \ (n - 1).try_into().unwrap()) + 9 * starts_one_ends(n - 1)\n  |             \
    \       ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 2;\n    }\n    let mut total = 0;\n\
    \    for i in 1..n {\n        total += starts_one_ends(i) * 9;\n    }\n    return\
    \ total + 9;\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpacnr2_vd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n   \
    \     return 1;\n    }\n    if n == 2 {\n        return 10;\n    }\n    let mut\
    \ w = 1;\n    let mut count = 10;\n    for _ in 1..n {\n        count += 9 * 10i64.pow(w\
    \ - 1) as isize;\n        w += 1;\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmpirt7vi7c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut i = 1;\n    let mut pow = 1;\n    let mut pre = 0;\n\
    \    while i < n {\n        pre = pow;\n        pow *= 10;\n        i += 1;\n\
    \    }\n    if n == 1 {\n        return 1;\n    }\n    if n == 2 {\n        return\
    \ 10;\n    }\n    pow - pre + 1 + starts_one_ends(n - 1)\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `18`', /tmp/tmp0sdf9rki.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 2,\n        2 => 3,\n        _ => starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2),\n    }\n}\n\nfn main() {\n    let candidate =\
    \ starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpdbaett72.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: -1
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let count = starts_one_ends(n\
    \ - 1);\n    let mut count = count * 9;\n    if n >= 2 {\n        count += starts_one_ends(n\
    \ - 2);\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659823970
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n\n    let mut result\
    \ = 10 * starts_one_ends(n - 1);\n    if n > 2 {\n        let zeros = (n - 2)\
    \ * 9;\n        result += 9 * starts_one_ends(zeros);\n    }\n\n    result\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp2zxwa65d.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 1 {\n        return 10;\n    }\n    let mut a = 1;\n\
    \    let mut b = 0;\n    let mut c = 0;\n    let mut d = 1;\n    for _ in 1..n\
    \ {\n        a = b;\n        b = c;\n        c = d;\n        d = 10 * b + a;\n\
    \    }\n    c + d\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpoq40p3v8.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
- exit_code: 101
  program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let limit = 10_isize.pow(n as u32) - 1;\n    let mut prev =\
    \ 1;\n    let mut curr = 1;\n    let mut next = 0;\n    let mut res = 0;\n   \
    \ for i in 1..limit {\n        next = (prev + curr) % limit;\n        if next\
    \ == 1 {\n            res += 1;\n        }\n        prev = curr;\n        curr\
    \ = next;\n    }\n    res\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `18`', /tmp/tmpczf3ljml.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659823964
